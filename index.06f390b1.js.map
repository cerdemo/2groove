{"mappings":"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","sources":["<anon>","src/js/utils/input.knobs.js"],"sourcesContent":["window.addEventListener(\"load\", ()=>{\n    let op = window.inputKnobsOptions || {};\n    op.knobWidth = op.knobWidth || op.knobDiameter || 64;\n    op.knobHeight = op.knobHeight || op.knobDiameter || 64;\n    op.sliderWidth = op.sliderWidth || op.sliderDiameter || 128;\n    op.sliderHeight = op.sliderHeight || op.sliderDiameter || 20;\n    op.switchWidth = op.switchWidth || op.switchDiameter || 24;\n    op.switchHeight = op.switchHeight || op.switchDiameter || 24;\n    op.fgcolor = op.fgcolor || \"#f00\";\n    op.bgcolor = op.bgcolor || \"#000\";\n    op.knobMode = op.knobMode || \"linear\";\n    op.sliderMode = op.sliderMode || \"relative\";\n    let styles = document.createElement(\"style\");\n    styles.innerHTML = `input[type=range].input-knob,input[type=range].input-slider{\n    -webkit-appearance:none;\n    -moz-appearance:none;\n    border:none;\n    box-sizing:border-box;\n    overflow:hidden;\n    background-repeat:no-repeat;\n    background-size:100% 100%;\n    background-position:0px 0%;\n    background-color:transparent;\n    touch-action:none;\n  }\n  input[type=range].input-knob{\n    width:${op.knobWidth}px; height:${op.knobHeight}px;\n  }\n  input[type=range].input-slider{\n    width:${op.sliderWidth}px; height:${op.sliderHeight}px;\n  }\n  input[type=range].input-knob::-webkit-slider-thumb,input[type=range].input-slider::-webkit-slider-thumb{\n    -webkit-appearance:none;\n    opacity:0;\n  }\n  input[type=range].input-knob::-moz-range-thumb,input[type=range].input-slider::-moz-range-thumb{\n    -moz-appearance:none;\n    height:0;\n    border:none;\n  }\n  input[type=range].input-knob::-moz-range-track,input[type=range].input-slider::-moz-range-track{\n    -moz-appearance:none;\n    height:0;\n    border:none;\n  }\n  input[type=checkbox].input-switch,input[type=radio].input-switch {\n    width:${op.switchWidth}px;\n    height:${op.switchHeight}px;\n    -webkit-appearance:none;\n    -moz-appearance:none;\n    background-size:100% 200%;\n    background-position:0% 0%;\n    background-repeat:no-repeat;\n    border:none;\n    border-radius:0;\n    background-color:transparent;\n  }\n  input[type=checkbox].input-switch:checked,input[type=radio].input-switch:checked {\n    background-position:0% 100%;\n  }`;\n    document.head.appendChild(styles);\n    let makeKnobFrames = (fr, fg, bg)=>{\n        let r = `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"64\" height=\"${fr * 64}\" viewBox=\"0 0 64 ${fr * 64}\" preserveAspectRatio=\"none\">\n  <defs><g id=\"K\"><circle cx=\"32\" cy=\"32\" r=\"30\" fill=\"${bg}\"/>\n  <line x1=\"32\" y1=\"28\" x2=\"32\" y2=\"7\" stroke-linecap=\"round\" stroke-width=\"6\" stroke=\"${fg}\"/></g></defs>\n  <use xlink:href=\"#K\" transform=\"rotate(-135,32,32)\"/>`;\n        for(let i = 1; i < fr; ++i)r += `<use xlink:href=\"#K\" transform=\"translate(0,${64 * i}) rotate(${-135 + 270 * i / fr},32,32)\"/>`;\n        return r + \"</svg>\";\n    };\n    let makeHSliderFrames = (fr, fg, bg, w, h)=>{\n        let r = `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${w}\" height=\"${fr * h}\" viewBox=\"0 0 ${w} ${fr * h}\" preserveAspectRatio=\"none\">\n  <defs><g id=\"B\"><rect x=\"0\" y=\"0\" width=\"${w}\" height=\"${h}\" rx=\"${h / 2}\" ry=\"${h / 2}\" fill=\"${bg}\"/></g>\n  <g id=\"K\"><circle x=\"${w / 2}\" y=\"0\" r=\"${h / 2 * 0.9}\" fill=\"${fg}\"/></g></defs>`;\n        for(let i = 0; i < fr; ++i){\n            r += `<use xlink:href=\"#B\" transform=\"translate(0,${h * i})\"/>`;\n            r += `<use xlink:href=\"#K\" transform=\"translate(${h / 2 + (w - h) * i / 100},${h / 2 + h * i})\"/>`;\n        }\n        return r + \"</svg>\";\n    };\n    let makeVSliderFrames = (fr, fg, bg, w, h)=>{\n        let r = `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${w}\" height=\"${fr * h}\" viewBox=\"0 0 ${w} ${fr * h}\" preserveAspectRatio=\"none\">\n  <defs><rect id=\"B\" x=\"0\" y=\"0\" width=\"${w}\" height=\"${h}\" rx=\"${w / 2}\" ry=\"${w / 2}\" fill=\"${bg}\"/>\n  <circle id=\"K\" x=\"0\" y=\"0\" r=\"${w / 2 * 0.9}\" fill=\"${fg}\"/></defs>`;\n        for(let i = 0; i < fr; ++i){\n            r += `<use xlink:href=\"#B\" transform=\"translate(0,${h * i})\"/>`;\n            r += `<use xlink:href=\"#K\" transform=\"translate(${w / 2} ${h * (i + 1) - w / 2 - i * (h - w) / 100})\"/>`;\n        }\n        return r + \"</svg>\";\n    };\n    let initSwitches = (el)=>{\n        let w, h, d, fg, bg;\n        if (el.inputKnobs) return;\n        el.inputKnobs = {};\n        el.refresh = ()=>{\n            let src = el.getAttribute(\"data-src\");\n            d = +el.getAttribute(\"data-diameter\");\n            let st = document.defaultView.getComputedStyle(el, null);\n            w = parseFloat(el.getAttribute(\"data-width\") || d || st.width);\n            h = parseFloat(el.getAttribute(\"data-height\") || d || st.height);\n            bg = el.getAttribute(\"data-bgcolor\") || op.bgcolor;\n            fg = el.getAttribute(\"data-fgcolor\") || op.fgcolor;\n            el.style.width = w + \"px\";\n            el.style.height = h + \"px\";\n            if (src) el.style.backgroundImage = \"url(\" + src + \")\";\n            else {\n                let minwh = Math.min(w, h);\n                let svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${w}\" height=\"${h * 2}\" viewBox=\"0 0 ${w} ${h * 2}\" preserveAspectRatio=\"none\">\n  <g><rect fill=\"${bg}\" x=\"1\" y=\"1\" width=\"${w - 2}\" height=\"${h - 2}\" rx=\"${minwh * 0.25}\" ry=\"${minwh * 0.25}\"/>\n  <rect fill=\"${bg}\" x=\"1\" y=\"${h + 1}\" width=\"${w - 2}\" height=\"${h - 2}\" rx=\"${minwh * 0.25}\" ry=\"${minwh * 0.25}\"/>\n  <circle fill=\"${fg}\" cx=\"${w * 0.5}\" cy=\"${h * 1.5}\" r=\"${minwh * 0.25}\"/></g></svg>`;\n                el.style.backgroundImage = \"url(data:image/svg+xml;base64,\" + btoa(svg) + \")\";\n            }\n        };\n        el.refresh();\n    };\n    let initKnobs = (el)=>{\n        let w, h, d, fg, bg;\n        if (el.inputKnobs) {\n            el.redraw();\n            return;\n        }\n        let ik = el.inputKnobs = {};\n        el.refresh = ()=>{\n            d = +el.getAttribute(\"data-diameter\");\n            let st = document.defaultView.getComputedStyle(el, null);\n            w = parseFloat(el.getAttribute(\"data-width\") || d || st.width);\n            h = parseFloat(el.getAttribute(\"data-height\") || d || st.height);\n            bg = el.getAttribute(\"data-bgcolor\") || op.bgcolor;\n            fg = el.getAttribute(\"data-fgcolor\") || op.fgcolor;\n            ik.sensex = ik.sensey = 200;\n            if (el.className.indexOf(\"input-knob\") >= 0) ik.itype = \"k\";\n            else if (w >= h) {\n                ik.itype = \"h\";\n                ik.sensex = w - h;\n                ik.sensey = Infinity;\n                el.style.backgroundSize = \"auto 100%\";\n            } else {\n                ik.itype = \"v\";\n                ik.sensex = Infinity;\n                ik.sensey = h - w;\n                el.style.backgroundSize = \"100% auto\";\n            }\n            el.style.width = w + \"px\";\n            el.style.height = h + \"px\";\n            ik.frameheight = h;\n            let src = el.getAttribute(\"data-src\");\n            if (src) {\n                el.style.backgroundImage = `url(${src})`;\n                let sp = +el.getAttribute(\"data-sprites\");\n                if (sp) ik.sprites = sp;\n                else ik.sprites = 0;\n                if (ik.sprites >= 1) el.style.backgroundSize = `100% ${(ik.sprites + 1) * 100}%`;\n                else if (ik.itype != \"k\") {\n                    el.style.backgroundColor = bg;\n                    el.style.borderRadius = Math.min(w, h) * 0.25 + \"px\";\n                }\n            } else {\n                let svg;\n                switch(ik.itype){\n                    case \"k\":\n                        svg = makeKnobFrames(101, fg, bg);\n                        break;\n                    case \"h\":\n                        svg = makeHSliderFrames(101, fg, bg, w, h);\n                        break;\n                    case \"v\":\n                        svg = makeVSliderFrames(101, fg, bg, w, h);\n                        break;\n                }\n                ik.sprites = 100;\n                el.style.backgroundImage = \"url(data:image/svg+xml;base64,\" + btoa(svg) + \")\";\n                el.style.backgroundSize = `100% ${(ik.sprites + 1) * 100}%`;\n            }\n            ik.valrange = {\n                min: +el.min,\n                max: el.max == \"\" ? 100 : +el.max,\n                step: el.step == \"\" ? 1 : +el.step\n            };\n            el.redraw(true);\n        };\n        el.setValue = (v)=>{\n            v = Math.round((v - ik.valrange.min) / ik.valrange.step) * ik.valrange.step + ik.valrange.min;\n            if (v < ik.valrange.min) v = ik.valrange.min;\n            if (v > ik.valrange.max) v = ik.valrange.max;\n            el.value = v;\n            if (el.value != ik.oldvalue) {\n                el.setAttribute(\"value\", el.value);\n                el.redraw();\n                let event = document.createEvent(\"HTMLEvents\");\n                event.initEvent(\"input\", false, true);\n                el.dispatchEvent(event);\n                ik.oldvalue = el.value;\n            }\n        };\n        ik.pointerdown = (ev)=>{\n            el.focus();\n            const evorg = ev;\n            if (ev.touches) ev = ev.touches[0];\n            let rc = el.getBoundingClientRect();\n            let cx = (rc.left + rc.right) * 0.5, cy = (rc.top + rc.bottom) * 0.5;\n            let dx = ev.clientX, dy = ev.clientY;\n            let da = Math.atan2(ev.clientX - cx, cy - ev.clientY);\n            if (ik.itype == \"k\" && op.knobMode == \"circularabs\") {\n                dv = ik.valrange.min + (da / Math.PI * 0.75 + 0.5) * (ik.valrange.max - ik.valrange.min);\n                el.setValue(dv);\n            }\n            if (ik.itype != \"k\" && op.sliderMode == \"abs\") {\n                dv = (ik.valrange.min + ik.valrange.max) * 0.5 + ((dx - cx) / ik.sensex - (dy - cy) / ik.sensey) * (ik.valrange.max - ik.valrange.min);\n                el.setValue(dv);\n            }\n            ik.dragfrom = {\n                x: ev.clientX,\n                y: ev.clientY,\n                a: Math.atan2(ev.clientX - cx, cy - ev.clientY),\n                v: +el.value\n            };\n            document.addEventListener(\"mousemove\", ik.pointermove);\n            document.addEventListener(\"mouseup\", ik.pointerup);\n            document.addEventListener(\"touchmove\", ik.pointermove);\n            document.addEventListener(\"touchend\", ik.pointerup);\n            document.addEventListener(\"touchcancel\", ik.pointerup);\n            document.addEventListener(\"touchstart\", ik.preventScroll);\n            evorg.preventDefault();\n            evorg.stopPropagation();\n        };\n        ik.pointermove = (ev)=>{\n            let dv1;\n            let rc = el.getBoundingClientRect();\n            let cx = (rc.left + rc.right) * 0.5, cy = (rc.top + rc.bottom) * 0.5;\n            if (ev.touches) ev = ev.touches[0];\n            let dx = ev.clientX - ik.dragfrom.x, dy = ev.clientY - ik.dragfrom.y;\n            let da = Math.atan2(ev.clientX - cx, cy - ev.clientY);\n            switch(ik.itype){\n                case \"k\":\n                    switch(op.knobMode){\n                        case \"linear\":\n                            dv1 = (dx / ik.sensex - dy / ik.sensey) * (ik.valrange.max - ik.valrange.min);\n                            if (ev.shiftKey) dv1 *= 0.2;\n                            el.setValue(ik.dragfrom.v + dv1);\n                            break;\n                        case \"circularabs\":\n                            if (!ev.shiftKey) {\n                                dv1 = ik.valrange.min + (da / Math.PI * 0.75 + 0.5) * (ik.valrange.max - ik.valrange.min);\n                                el.setValue(dv1);\n                                break;\n                            }\n                        case \"circularrel\":\n                            if (da > ik.dragfrom.a + Math.PI) da -= Math.PI * 2;\n                            if (da < ik.dragfrom.a - Math.PI) da += Math.PI * 2;\n                            da -= ik.dragfrom.a;\n                            dv1 = da / Math.PI / 1.5 * (ik.valrange.max - ik.valrange.min);\n                            if (ev.shiftKey) dv1 *= 0.2;\n                            el.setValue(ik.dragfrom.v + dv1);\n                    }\n                    break;\n                case \"h\":\n                case \"v\":\n                    dv1 = (dx / ik.sensex - dy / ik.sensey) * (ik.valrange.max - ik.valrange.min);\n                    if (ev.shiftKey) dv1 *= 0.2;\n                    el.setValue(ik.dragfrom.v + dv1);\n                    break;\n            }\n        };\n        ik.pointerup = ()=>{\n            document.removeEventListener(\"mousemove\", ik.pointermove);\n            document.removeEventListener(\"touchmove\", ik.pointermove);\n            document.removeEventListener(\"mouseup\", ik.pointerup);\n            document.removeEventListener(\"touchend\", ik.pointerup);\n            document.removeEventListener(\"touchcancel\", ik.pointerup);\n            document.removeEventListener(\"touchstart\", ik.preventScroll);\n            let event = document.createEvent(\"HTMLEvents\");\n            event.initEvent(\"change\", false, true);\n            el.dispatchEvent(event);\n        };\n        ik.preventScroll = (ev)=>{\n            ev.preventDefault();\n        };\n        ik.keydown = ()=>{\n            el.redraw();\n        };\n        ik.wheel = (ev)=>{\n            let delta = ev.deltaY > 0 ? -ik.valrange.step : ik.valrange.step;\n            if (!ev.shiftKey) delta *= 5;\n            el.setValue(+el.value + delta);\n            ev.preventDefault();\n            ev.stopPropagation();\n        };\n        el.redraw = (f)=>{\n            if (f || ik.valueold != el.value) {\n                let v = (el.value - ik.valrange.min) / (ik.valrange.max - ik.valrange.min);\n                if (ik.sprites >= 1) el.style.backgroundPosition = \"0px \" + -(v * ik.sprites | 0) * ik.frameheight + \"px\";\n                else switch(ik.itype){\n                    case \"k\":\n                        el.style.transform = \"rotate(\" + (270 * v - 135) + \"deg)\";\n                        break;\n                    case \"h\":\n                        el.style.backgroundPosition = (w - h) * v + \"px 0px\";\n                        break;\n                    case \"v\":\n                        el.style.backgroundPosition = \"0px \" + (h - w) * (1 - v) + \"px\";\n                        break;\n                }\n                ik.valueold = el.value;\n            }\n        };\n        el.refresh();\n        el.redraw(true);\n        el.addEventListener(\"keydown\", ik.keydown);\n        el.addEventListener(\"mousedown\", ik.pointerdown);\n        el.addEventListener(\"touchstart\", ik.pointerdown);\n        el.addEventListener(\"wheel\", ik.wheel);\n    };\n    let refreshque = ()=>{\n        let elem = document.querySelectorAll(\"input.input-knob,input.input-slider\");\n        for(let i = 0; i < elem.length; ++i)procque.push([\n            initKnobs,\n            elem[i]\n        ]);\n        elem = document.querySelectorAll(\"input[type=checkbox].input-switch,input[type=radio].input-switch\");\n        for(let i = 0; i < elem.length; ++i)procque.push([\n            initSwitches,\n            elem[i]\n        ]);\n    };\n    let procque = [];\n    refreshque();\n    setInterval(()=>{\n        for(let i = 0; procque.length > 0 && i < 8; ++i){\n            let q = procque.shift();\n            q[0](q[1]);\n        }\n        if (procque.length <= 0) refreshque();\n    }, 50);\n});\n\n//# sourceMappingURL=index.06f390b1.js.map\n","window.addEventListener(\"load\",()=>{\n    let op=window.inputKnobsOptions||{};\n    op.knobWidth=op.knobWidth||op.knobDiameter||64;\n    op.knobHeight=op.knobHeight||op.knobDiameter||64;\n    op.sliderWidth=op.sliderWidth||op.sliderDiameter||128;\n    op.sliderHeight=op.sliderHeight||op.sliderDiameter||20;\n    op.switchWidth=op.switchWidth||op.switchDiameter||24;\n    op.switchHeight=op.switchHeight||op.switchDiameter||24;\n    op.fgcolor=op.fgcolor||\"#f00\";\n    op.bgcolor=op.bgcolor||\"#000\";\n    op.knobMode=op.knobMode||\"linear\";\n    op.sliderMode=op.sliderMode||\"relative\";\n    let styles=document.createElement(\"style\");\n    styles.innerHTML=\n  `input[type=range].input-knob,input[type=range].input-slider{\n    -webkit-appearance:none;\n    -moz-appearance:none;\n    border:none;\n    box-sizing:border-box;\n    overflow:hidden;\n    background-repeat:no-repeat;\n    background-size:100% 100%;\n    background-position:0px 0%;\n    background-color:transparent;\n    touch-action:none;\n  }\n  input[type=range].input-knob{\n    width:${op.knobWidth}px; height:${op.knobHeight}px;\n  }\n  input[type=range].input-slider{\n    width:${op.sliderWidth}px; height:${op.sliderHeight}px;\n  }\n  input[type=range].input-knob::-webkit-slider-thumb,input[type=range].input-slider::-webkit-slider-thumb{\n    -webkit-appearance:none;\n    opacity:0;\n  }\n  input[type=range].input-knob::-moz-range-thumb,input[type=range].input-slider::-moz-range-thumb{\n    -moz-appearance:none;\n    height:0;\n    border:none;\n  }\n  input[type=range].input-knob::-moz-range-track,input[type=range].input-slider::-moz-range-track{\n    -moz-appearance:none;\n    height:0;\n    border:none;\n  }\n  input[type=checkbox].input-switch,input[type=radio].input-switch {\n    width:${op.switchWidth}px;\n    height:${op.switchHeight}px;\n    -webkit-appearance:none;\n    -moz-appearance:none;\n    background-size:100% 200%;\n    background-position:0% 0%;\n    background-repeat:no-repeat;\n    border:none;\n    border-radius:0;\n    background-color:transparent;\n  }\n  input[type=checkbox].input-switch:checked,input[type=radio].input-switch:checked {\n    background-position:0% 100%;\n  }`;\n    document.head.appendChild(styles);\n    let makeKnobFrames=(fr,fg,bg)=>{\n      let r=\n  `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"64\" height=\"${fr*64}\" viewBox=\"0 0 64 ${fr*64}\" preserveAspectRatio=\"none\">\n  <defs><g id=\"K\"><circle cx=\"32\" cy=\"32\" r=\"30\" fill=\"${bg}\"/>\n  <line x1=\"32\" y1=\"28\" x2=\"32\" y2=\"7\" stroke-linecap=\"round\" stroke-width=\"6\" stroke=\"${fg}\"/></g></defs>\n  <use xlink:href=\"#K\" transform=\"rotate(-135,32,32)\"/>`;\n      for(let i=1;i<fr;++i)\n        r+=`<use xlink:href=\"#K\" transform=\"translate(0,${64*i}) rotate(${-135+270*i/fr},32,32)\"/>`;\n      return r+\"</svg>\";\n    }\n    let makeHSliderFrames=(fr,fg,bg,w,h)=>{\n      let r=\n  `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${w}\" height=\"${fr*h}\" viewBox=\"0 0 ${w} ${fr*h}\" preserveAspectRatio=\"none\">\n  <defs><g id=\"B\"><rect x=\"0\" y=\"0\" width=\"${w}\" height=\"${h}\" rx=\"${h/2}\" ry=\"${h/2}\" fill=\"${bg}\"/></g>\n  <g id=\"K\"><circle x=\"${w/2}\" y=\"0\" r=\"${h/2*0.9}\" fill=\"${fg}\"/></g></defs>`;\n      for(let i=0;i<fr;++i){\n        r+=`<use xlink:href=\"#B\" transform=\"translate(0,${h*i})\"/>`;\n        r+=`<use xlink:href=\"#K\" transform=\"translate(${h/2+(w-h)*i/100},${h/2+h*i})\"/>`;\n      }\n      return r+\"</svg>\";\n    }\n    let makeVSliderFrames=(fr,fg,bg,w,h)=>{\n      let r=\n  `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${w}\" height=\"${fr*h}\" viewBox=\"0 0 ${w} ${fr*h}\" preserveAspectRatio=\"none\">\n  <defs><rect id=\"B\" x=\"0\" y=\"0\" width=\"${w}\" height=\"${h}\" rx=\"${w/2}\" ry=\"${w/2}\" fill=\"${bg}\"/>\n  <circle id=\"K\" x=\"0\" y=\"0\" r=\"${w/2*0.9}\" fill=\"${fg}\"/></defs>`;\n      for(let i=0;i<fr;++i){\n        r+=`<use xlink:href=\"#B\" transform=\"translate(0,${h*i})\"/>`;\n        r+=`<use xlink:href=\"#K\" transform=\"translate(${w/2} ${h*(i+1)-w/2-i*(h-w)/100})\"/>`;\n      }\n      return r+\"</svg>\";\n    }\n    let initSwitches=(el)=>{\n      let w,h,d,fg,bg;\n      if(el.inputKnobs)\n        return;\n      el.inputKnobs={};\n      el.refresh=()=>{\n        let src=el.getAttribute(\"data-src\");\n        d=+el.getAttribute(\"data-diameter\");\n        let st=document.defaultView.getComputedStyle(el,null);\n        w=parseFloat(el.getAttribute(\"data-width\")||d||st.width);\n        h=parseFloat(el.getAttribute(\"data-height\")||d||st.height);\n        bg=el.getAttribute(\"data-bgcolor\")||op.bgcolor;\n        fg=el.getAttribute(\"data-fgcolor\")||op.fgcolor;\n        el.style.width=w+\"px\";\n        el.style.height=h+\"px\";\n        if(src)\n          el.style.backgroundImage=\"url(\"+src+\")\";\n        else {\n          let minwh=Math.min(w,h);\n          let svg=\n  `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${w}\" height=\"${h*2}\" viewBox=\"0 0 ${w} ${h*2}\" preserveAspectRatio=\"none\">\n  <g><rect fill=\"${bg}\" x=\"1\" y=\"1\" width=\"${w-2}\" height=\"${h-2}\" rx=\"${minwh*0.25}\" ry=\"${minwh*0.25}\"/>\n  <rect fill=\"${bg}\" x=\"1\" y=\"${h+1}\" width=\"${w-2}\" height=\"${h-2}\" rx=\"${minwh*0.25}\" ry=\"${minwh*0.25}\"/>\n  <circle fill=\"${fg}\" cx=\"${w*0.5}\" cy=\"${h*1.5}\" r=\"${minwh*0.25}\"/></g></svg>`;\n          el.style.backgroundImage=\"url(data:image/svg+xml;base64,\"+btoa(svg)+\")\";\n        }\n      };\n      el.refresh();\n    };\n    let initKnobs=(el)=>{\n      let w,h,d,fg,bg;\n      if(el.inputKnobs){\n        el.redraw();\n        return;\n      }\n      let ik=el.inputKnobs={};\n      el.refresh=()=>{\n        d=+el.getAttribute(\"data-diameter\");\n        let st=document.defaultView.getComputedStyle(el,null);\n        w=parseFloat(el.getAttribute(\"data-width\")||d||st.width);\n        h=parseFloat(el.getAttribute(\"data-height\")||d||st.height);\n        bg=el.getAttribute(\"data-bgcolor\")||op.bgcolor;\n        fg=el.getAttribute(\"data-fgcolor\")||op.fgcolor;\n        ik.sensex=ik.sensey=200;\n        if(el.className.indexOf(\"input-knob\")>=0)\n          ik.itype=\"k\";\n        else{\n          if(w>=h){\n            ik.itype=\"h\";\n            ik.sensex=w-h;\n            ik.sensey=Infinity;\n            el.style.backgroundSize=\"auto 100%\";\n          }\n          else{\n            ik.itype=\"v\";\n            ik.sensex=Infinity;\n            ik.sensey=h-w;\n            el.style.backgroundSize=\"100% auto\";\n          }\n        }\n        el.style.width=w+\"px\";\n        el.style.height=h+\"px\";\n        ik.frameheight=h;\n        let src=el.getAttribute(\"data-src\");\n        if(src){\n          el.style.backgroundImage=`url(${src})`;\n          let sp=+el.getAttribute(\"data-sprites\");\n          if(sp)\n            ik.sprites=sp;\n          else\n            ik.sprites=0;\n          if(ik.sprites>=1)\n            el.style.backgroundSize=`100% ${(ik.sprites+1)*100}%`;\n          else if(ik.itype!=\"k\"){\n            el.style.backgroundColor=bg;\n            el.style.borderRadius=Math.min(w,h)*0.25+\"px\";\n          }\n        }\n        else{\n          let svg;\n          switch(ik.itype){\n          case \"k\": svg=makeKnobFrames(101,fg,bg); break;\n          case \"h\": svg=makeHSliderFrames(101,fg,bg,w,h); break;\n          case \"v\": svg=makeVSliderFrames(101,fg,bg,w,h); break;\n          }\n          ik.sprites=100;\n          el.style.backgroundImage=\"url(data:image/svg+xml;base64,\"+btoa(svg)+\")\";\n          el.style.backgroundSize=`100% ${(ik.sprites+1)*100}%`;\n        }\n        ik.valrange={min:+el.min, max:(el.max==\"\")?100:+el.max, step:(el.step==\"\")?1:+el.step};\n        el.redraw(true);\n      };\n      el.setValue=(v)=>{\n        v=(Math.round((v-ik.valrange.min)/ik.valrange.step))*ik.valrange.step+ik.valrange.min;\n        if(v<ik.valrange.min) v=ik.valrange.min;\n        if(v>ik.valrange.max) v=ik.valrange.max;\n        el.value=v;\n        if(el.value!=ik.oldvalue){\n          el.setAttribute(\"value\",el.value);\n          el.redraw();\n          let event=document.createEvent(\"HTMLEvents\");\n          event.initEvent(\"input\",false,true);\n          el.dispatchEvent(event);\n          ik.oldvalue=el.value;\n        }\n      };\n      ik.pointerdown=(ev)=>{\n        el.focus();\n        const evorg = ev;\n        if(ev.touches)\n          ev = ev.touches[0];\n        let rc=el.getBoundingClientRect();\n        let cx=(rc.left+rc.right)*0.5,cy=(rc.top+rc.bottom)*0.5;\n        let dx=ev.clientX,dy=ev.clientY;\n        let da=Math.atan2(ev.clientX-cx,cy-ev.clientY);\n        if(ik.itype==\"k\"&&op.knobMode==\"circularabs\"){\n          dv=ik.valrange.min+(da/Math.PI*0.75+0.5)*(ik.valrange.max-ik.valrange.min);\n          el.setValue(dv);\n        }\n        if(ik.itype!=\"k\"&&op.sliderMode==\"abs\"){\n          dv=(ik.valrange.min+ik.valrange.max)*0.5+((dx-cx)/ik.sensex-(dy-cy)/ik.sensey)*(ik.valrange.max-ik.valrange.min);\n          el.setValue(dv);\n        }\n        ik.dragfrom={x:ev.clientX,y:ev.clientY,a:Math.atan2(ev.clientX-cx,cy-ev.clientY),v:+el.value};\n        document.addEventListener(\"mousemove\",ik.pointermove);\n        document.addEventListener(\"mouseup\",ik.pointerup);\n        document.addEventListener(\"touchmove\",ik.pointermove);\n        document.addEventListener(\"touchend\",ik.pointerup);\n        document.addEventListener(\"touchcancel\",ik.pointerup);\n        document.addEventListener(\"touchstart\",ik.preventScroll);\n        evorg.preventDefault();\n        evorg.stopPropagation();\n      };\n      ik.pointermove=(ev)=>{\n        let dv;\n        let rc=el.getBoundingClientRect();\n        let cx=(rc.left+rc.right)*0.5,cy=(rc.top+rc.bottom)*0.5;\n        if(ev.touches)\n          ev = ev.touches[0];\n        let dx=ev.clientX-ik.dragfrom.x,dy=ev.clientY-ik.dragfrom.y;\n        let da=Math.atan2(ev.clientX-cx,cy-ev.clientY);\n        switch(ik.itype){\n        case \"k\":\n          switch(op.knobMode){\n          case \"linear\":\n            dv=(dx/ik.sensex-dy/ik.sensey)*(ik.valrange.max-ik.valrange.min);\n            if(ev.shiftKey)\n              dv*=0.2;\n            el.setValue(ik.dragfrom.v+dv);\n            break;\n          case \"circularabs\":\n            if(!ev.shiftKey){\n              dv=ik.valrange.min+(da/Math.PI*0.75+0.5)*(ik.valrange.max-ik.valrange.min);\n              el.setValue(dv);\n              break;\n            }\n          case \"circularrel\":\n            if(da>ik.dragfrom.a+Math.PI) da-=Math.PI*2;\n            if(da<ik.dragfrom.a-Math.PI) da+=Math.PI*2;\n            da-=ik.dragfrom.a;\n            dv=da/Math.PI/1.5*(ik.valrange.max-ik.valrange.min);\n            if(ev.shiftKey)\n              dv*=0.2;\n            el.setValue(ik.dragfrom.v+dv);\n          }\n          break;\n        case \"h\":\n        case \"v\":\n          dv=(dx/ik.sensex-dy/ik.sensey)*(ik.valrange.max-ik.valrange.min);\n          if(ev.shiftKey)\n            dv*=0.2;\n          el.setValue(ik.dragfrom.v+dv);\n          break;\n        }\n      };\n      ik.pointerup=()=>{\n        document.removeEventListener(\"mousemove\",ik.pointermove);\n        document.removeEventListener(\"touchmove\",ik.pointermove);\n        document.removeEventListener(\"mouseup\",ik.pointerup);\n        document.removeEventListener(\"touchend\",ik.pointerup);\n        document.removeEventListener(\"touchcancel\",ik.pointerup);\n        document.removeEventListener(\"touchstart\",ik.preventScroll);\n        let event=document.createEvent(\"HTMLEvents\");\n        event.initEvent(\"change\",false,true);\n        el.dispatchEvent(event);\n      };\n      ik.preventScroll=(ev)=>{\n        ev.preventDefault();\n      };\n      ik.keydown=()=>{\n        el.redraw();\n      };\n      ik.wheel=(ev)=>{\n        let delta=ev.deltaY>0?-ik.valrange.step:ik.valrange.step;\n        if(!ev.shiftKey)\n          delta*=5;\n        el.setValue(+el.value+delta);\n        ev.preventDefault();\n        ev.stopPropagation();\n      };\n      el.redraw=(f)=>{\n        if(f||ik.valueold!=el.value){\n          let v=(el.value-ik.valrange.min)/(ik.valrange.max-ik.valrange.min);\n          if(ik.sprites>=1)\n            el.style.backgroundPosition=\"0px \"+(-((v*ik.sprites)|0)*ik.frameheight)+\"px\";\n          else{\n            switch(ik.itype){\n            case \"k\":\n              el.style.transform=\"rotate(\"+(270*v-135)+\"deg)\";\n              break;\n            case \"h\":\n              el.style.backgroundPosition=((w-h)*v)+\"px 0px\";\n              break;\n            case \"v\":\n              el.style.backgroundPosition=\"0px \"+(h-w)*(1-v)+\"px\";\n              break;\n            }\n          }\n          ik.valueold=el.value;\n        }\n      };\n      el.refresh();\n      el.redraw(true);\n      el.addEventListener(\"keydown\",ik.keydown);\n      el.addEventListener(\"mousedown\",ik.pointerdown);\n      el.addEventListener(\"touchstart\",ik.pointerdown);\n      el.addEventListener(\"wheel\",ik.wheel);\n    }\n    let refreshque=()=>{\n      let elem=document.querySelectorAll(\"input.input-knob,input.input-slider\");\n      for(let i=0;i<elem.length;++i)\n        procque.push([initKnobs,elem[i]]);\n      elem=document.querySelectorAll(\"input[type=checkbox].input-switch,input[type=radio].input-switch\");\n      for(let i=0;i<elem.length;++i){\n        procque.push([initSwitches,elem[i]]);\n      }\n    }\n    let procque=[];\n    refreshque();\n    setInterval(()=>{\n      for(let i=0;procque.length>0&&i<8;++i){\n        let q=procque.shift();\n        q[0](q[1]);\n      }\n      if(procque.length<=0)\n        refreshque();\n    },50);\n  });"],"names":["window","addEventListener","op","inputKnobsOptions","knobWidth","knobDiameter","knobHeight","sliderWidth","sliderDiameter","sliderHeight","switchWidth","switchDiameter","switchHeight","fgcolor","bgcolor","knobMode","sliderMode","styles","document","createElement","innerHTML","head","appendChild","makeKnobFrames","fr","fg","bg","r","i","makeHSliderFrames","w","h","makeVSliderFrames","initSwitches","el","d","inputKnobs","refresh","src","getAttribute","st","defaultView","getComputedStyle","parseFloat","width","height","style","backgroundImage","minwh","Math","min","svg","btoa","initKnobs","redraw","ik","sensex","sensey","className","indexOf","itype","Infinity","backgroundSize","frameheight","sp","sprites","backgroundColor","borderRadius","valrange","max","step","setValue","v","round","value","oldvalue","setAttribute","event","createEvent","initEvent","dispatchEvent","pointerdown","ev","focus","evorg","touches","rc","getBoundingClientRect","cx","left","right","cy","top","bottom","dx","clientX","dy","clientY","da","atan2","dv","PI","dragfrom","x","y","a","pointermove","pointerup","preventScroll","preventDefault","stopPropagation","dv1","shiftKey","removeEventListener","keydown","wheel","delta","deltaY","f","valueold","backgroundPosition","transform","refreshque","elem","querySelectorAll","length","procque","push","setInterval","q","shift"],"version":3,"file":"index.06f390b1.js.map"}