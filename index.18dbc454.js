// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"46McK":[function(require,module,exports) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d6ea1d42532a7575";
module.bundle.HMR_BUNDLE_ID = "0bcb44a518dbc454";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? "wss" : "ws";
    var ws;
    try {
        ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/");
    } catch (err) {
        if (err.message) console.error(err.message);
        ws = {};
    }
    // Web extension context
    var extCtx = typeof browser === "undefined" ? typeof chrome === "undefined" ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    }
    // $FlowFixMe
    ws.onmessage = async function(event /*: {data: string, ...} */ ) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        assetsToDispose = [];
        var data /*: HMRMessage */  = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH);
            // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                // Dispose all old assets.
                let processedAssets = {} /*: {|[string]: boolean|} */ ;
                for(let i = 0; i < assetsToDispose.length; i++){
                    let id = assetsToDispose[i][1];
                    if (!processedAssets[id]) {
                        hmrDispose(assetsToDispose[i][0], id);
                        processedAssets[id] = true;
                    }
                }
                // Run accept callbacks. This will also re-execute other disposed assets in topological order.
                processedAssets = {};
                for(let i = 0; i < assetsToAccept.length; i++){
                    let id = assetsToAccept[i][1];
                    if (!processedAssets[id]) {
                        hmrAccept(assetsToAccept[i][0], id);
                        processedAssets[id] = true;
                    }
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html);
                // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    ws.onerror = function(e) {
        if (e.message) console.error(e.message);
    };
    ws.onclose = function() {
        console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute("href");
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", // $FlowFixMe
    href.split("?")[0] + "?" + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) {
            assetsToAlsoAccept.forEach(function(a) {
                hmrDispose(a[0], a[1]);
            });
            // $FlowFixMe[method-unbinding]
            assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
        }
    });
}

},{}],"1SICI":[function(require,module,exports) {
// Author: Çağrı Erdem, 2023
// Description: Main bundler script for 2groove web app.
var _mainUICss = require("./../styles/mainUI.css");
// ----------------------------
// ----------------------------
var _drSamplerJs = require("./drSampler.js");
// import "./efx.js";
var _globalFetchJs = require("./globalFetch.js");
var _interfaceJs = require("./interface.js");
var _midiBroadcastJs = require("./midiBroadcast.js");
var _pRollJs = require("./pRoll.js");
var _workerAjaxJs = require("./workers/workerAjax.js");
var _workerQueueJs = require("./workers/workerQueue.js"); // ----------------------------
 // ----------------------------

},{"./../styles/mainUI.css":"1lzDl","./drSampler.js":"9cCOD","./globalFetch.js":"hwnEt","./interface.js":"kBoq1","./midiBroadcast.js":"lFIIu","./pRoll.js":"6uEKS","./workers/workerAjax.js":"6ZafJ","./workers/workerQueue.js":"7u5lR"}],"1lzDl":[function() {},{}],"9cCOD":[function(require,module,exports) {
// Author: Çağrı Erdem, 2023
// Description: MIDI Drum Sampler for 2groove web app.
var _tone = require("tone");
// import { delay, eq, reverb } from "./efx.js";
var _samplesJs = require("./samples.js");
const drumParts = [
    "closed-hihat",
    "open-hihat",
    "crash",
    "ride",
    "kick",
    "snare",
    "hi-tom",
    "mid-tom",
    "floor-tom"
];
const samplers = {};
drumParts.forEach((drum)=>{
    const drumSamples = {};
    (0, _samplesJs.samples)[drum].forEach((samplePath, index)=>{
        const noteName = _tone.Frequency(60 + index, "midi").toNote();
        drumSamples[noteName] = samplePath;
    });
    samplers[drum] = new _tone.Sampler({
        urls: drumSamples
    }).toDestination();
});
// Function to map MIDI velocity to the appropriate sample note
function mapVelocityToSample(velocity) {
    const numberOfSamples = 12;
    // 0–127 divided into 12 segments
    const segment = Math.ceil(128 / numberOfSamples);
    // Calculate the sample index (1–12) based on the velocity
    const sampleIndex = Math.ceil(velocity / segment);
    // Calculate the MIDI note number (60 is C3, 71 is B3)
    const noteNumber = 60 + sampleIndex - 1;
    // Convert the MIDI note number to note name (C3, C#3, D3, ...)
    return _tone.Frequency(noteNumber, "midi").toNote();
}
// Dict to map MIDI note number to the appropriate sample note
const drumMappings = {
    "C1": "kick",
    "D1": "snare",
    "F1": "floor-tom",
    "B1": "mid-tom",
    "C2": "hi-tom",
    "C#2": "crash",
    "D#2": "ride",
    "F#1": "closed-hihat",
    "A#1": "open-hihat"
};
// TODO: helper function to apply the envelope to a given sampler
const drumADSR = {
    "closed-hihat": {
        attack: 0.01,
        decay: 0.1,
        sustain: 0.8,
        release: 0.1
    },
    "open-hihat": {
        attack: 0.02,
        decay: 0.2,
        sustain: 0.5,
        release: 0.3
    },
    "crash": {
        attack: 0.01,
        decay: 0.2,
        sustain: 0.5,
        release: 0.3
    },
    "ride": {
        attack: 0.01,
        decay: 0.2,
        sustain: 0.5,
        release: 0.3
    },
    "kick": {
        attack: 0.01,
        decay: 0.2,
        sustain: 0.5,
        release: 0.3
    },
    "snare": {
        attack: 0.01,
        decay: 0.2,
        sustain: 0.5,
        release: 0.3
    },
    "hi-tom": {
        attack: 0.01,
        decay: 0.2,
        sustain: 0.5,
        release: 0.3
    },
    "mid-tom": {
        attack: 0.01,
        decay: 0.2,
        sustain: 0.5,
        release: 0.3
    },
    "floor-tom": {
        attack: 0.01,
        decay: 0.2,
        sustain: 0.5,
        release: 0.3
    }
};
function applyEnvelope(envParams, duration) {
    // Duration defaults to 0.5 if not provided TODO: Calculate the duration for each beat
    // duration = duration || 0.5;
    // Create the envelope with the provided parameters
    const env = new _tone.Envelope(envParams).toDestination();
    // Connect the envelope to the sampler
    // sampler.connect(env);
    // Trigger the envelope
    env.triggerAttackRelease(duration);
}
// When processing MIDI data in software, developers often use conditional statements like if (status === 144) to check the type of MIDI message received and to handle it accordingly. 
// In this particular case, the software would execute specific logic for "Note On" messages on channel 1.
// The MIDI message is an array of integers. The first integer is the status byte, which contains the message type and the MIDI channel.
function onMIDIMessageReceived(message, verbose = false) {
    if (isListening) {
        const [status, noteNumber, velocity] = message.data;
        const noteName = _tone.Frequency(noteNumber - 12, "midi").toNote();
        const drumType = drumMappings[noteName];
        if (verbose) {
            // console.log(typeof noteName);
            console.log(noteNumber, noteName, velocity); // buraya kadar tamam.
            console.log("drumType: ", drumType);
        }
        // AR for each drum part
        const hitDuration = {
            "closed-hihat": "1n",
            "open-hihat": "2n",
            "crash": "1n",
            "ride": "1n",
            "kick": "8n",
            "snare": "2n",
            "hi-tom": "4n",
            "mid-tom": "4n",
            "floor-tom": "4n"
        };
        if (status === 144 && drumMappings[noteName]) {
            // const drumType = drumMappings[noteName];
            const noteToTrigger = mapVelocityToSample(velocity); // assume `velocity` is provided by MIDI
            // console.log(`Drum type and note to trigger: ${drumType} ${noteToTrigger}`);
            if (drumType) {
                // Lookup the appropriate sampler using the drumType
                const sampler = samplers[drumType];
                // Trigger the sound w/ a simple Attack-Release envelope TODO: Make better envelopes!
                sampler.triggerAttackRelease(noteToTrigger, hitDuration[drumType]);
            // sampler.chain(eq, delay, reverb); // EFX chain
            } else console.error(`No mappings found for drum type: ${drumType}`);
        }
    }
}
// // WITH THE OLD UI:
//VARIABLES
// // Variable to keep track of the playback state
// let isListening = false;
// // Grab the button from the UI
// const toggleListeningButton = document.getElementById('togglePlaybackButton');
// //EVENT LISTENERS
// // Add an event listener to the button
// toggleListeningButton.addEventListener('click', toggleListening);
// // Handle button click
// function toggleListening() {
//     isListening = !isListening; // Toggle the listening state
//     // Update button text based on the current state // Note that we are not doing it anymore with the new GUI
//     // toggleListeningButton.textContent = isListening ? 'Stop Listening' : 'Start Listening';
//   }
//   if (navigator.requestMIDIAccess) { // request MIDI access
//     navigator.requestMIDIAccess().then(onMIDISuccess, onMIDIFailure);
//   } else {
//     console.error('WebMIDI is not supported in this browser.');
//   }
// WITH THE NEW UI:
// Instead of using the click event on the button, 
// we will use the change event on the checkbox (since that's what you have now).
// Instead of toggling button text (since there's no text now), 
// we'll toggle the checkbox's checked state.
// Variable to keep track of the playback state
let isListening = false;
// Grab the checkbox from the UI
const toggleListeningCheckbox = document.querySelector('#togglePlaybackButton input[type="checkbox"]');
//EVENT LISTENERS
// Add an event listener to the checkbox
toggleListeningCheckbox.addEventListener("change", toggleListening);
// Handle checkbox state change
function toggleListening() {
    isListening = toggleListeningCheckbox.checked; // Update listening state based on checkbox
}
if (navigator.requestMIDIAccess) navigator.requestMIDIAccess().then(onMIDISuccess, onMIDIFailure);
else console.error("WebMIDI is not supported in this browser.");
// Handle successful MIDI access
function onMIDISuccess(midiAccess) {
    const inputs = midiAccess.inputs.values();
    for(let input = inputs.next(); input && !input.done; input = inputs.next())input.value.onmidimessage = onMIDIMessageReceived;
    midiAccess.onstatechange = function(e) {
        if (e.port.state === "connected") e.port.onmidimessage = onMIDIMessageReceived;
        else if (e.port.state === "disconnected") {
            e.port.onmidimessage = null;
            // Try to refresh MIDI connections after a short delay
            setTimeout(()=>{
                refreshMIDIAccess();
            }, 1000);
        }
    };
}
function refreshMIDIAccess() {
    if (navigator.requestMIDIAccess) navigator.requestMIDIAccess().then(onMIDISuccess, onMIDIFailure);
    else console.error("WebMIDI is not supported in this browser.");
}
function onMIDIFailure(e) {
    console.error("Could not access MIDI devices:", e);
} // NOTES:
 // Uint8Array(3): This indicates the array contains three elements. MIDI messages typically consist of 1-3 bytes, so this is consistent with typical MIDI behavior.
 // [128, 36, 0]: These are the actual values (in decimal) of the MIDI message:
 // 128: This is the status byte. In MIDI, a value of 128 (0x80 in hexadecimal) typically corresponds to a "Note Off" message for channel 1.
 // 36: This is the first data byte. For "Note On" and "Note Off" messages, this represents the MIDI note number. In this case, it's 36 which might correspond to a kick drum in a typical MIDI drum map.
 // 0: This is the second data byte. For "Note On" and "Note Off" messages, this represents the velocity (or volume) of the note. A velocity of 0 for a "Note On" message is often treated as a "Note Off".
 // buffer, byteLength, byteOffset, etc.: These are properties of the Uint8Array and provide information about the underlying buffer storage and the array's size. For most MIDI applications, you won't need to worry about these.
 // For example, a MIDI message (128, 36, 0) can be interpreted as: "Note Off" for MIDI note 36 on channel 1 with a velocity of 0.

},{"tone":"2tCfN","./samples.js":"50Rdi"}],"2tCfN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getContext", ()=>(0, _global.getContext));
parcelHelpers.export(exports, "setContext", ()=>(0, _global.setContext));
parcelHelpers.export(exports, "start", ()=>(0, _global.start));
parcelHelpers.export(exports, "supported", ()=>(0, _audioContext.supported));
/**
 * The current audio context time of the global [[Context]].
 * See [[Context.now]]
 * @category Core
 */ parcelHelpers.export(exports, "now", ()=>now);
/**
 * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]
 * See [[Context.immediate]]
 * @category Core
 */ parcelHelpers.export(exports, "immediate", ()=>immediate);
parcelHelpers.export(exports, "Transport", ()=>Transport);
/**
 * The Transport object belonging to the global Tone.js Context.
 * See [[Transport]]
 * @category Core
 */ parcelHelpers.export(exports, "getTransport", ()=>getTransport);
parcelHelpers.export(exports, "Destination", ()=>Destination);
parcelHelpers.export(exports, "Master", ()=>Master);
/**
 * The Destination (output) belonging to the global Tone.js Context.
 * See [[Destination]]
 * @category Core
 */ parcelHelpers.export(exports, "getDestination", ()=>getDestination);
parcelHelpers.export(exports, "Listener", ()=>Listener);
/**
 * The [[Listener]] belonging to the global Tone.js Context.
 * @category Core
 */ parcelHelpers.export(exports, "getListener", ()=>getListener);
parcelHelpers.export(exports, "Draw", ()=>Draw);
/**
 * Get the singleton attached to the global context.
 * Draw is used to synchronize the draw frame with the Transport's callbacks.
 * See [[Draw]]
 * @category Core
 */ parcelHelpers.export(exports, "getDraw", ()=>getDraw);
parcelHelpers.export(exports, "context", ()=>context);
/**
 * Promise which resolves when all of the loading promises are resolved.
 * Alias for static [[ToneAudioBuffer.loaded]] method.
 * @category Core
 */ parcelHelpers.export(exports, "loaded", ()=>loaded);
parcelHelpers.export(exports, "Buffer", ()=>Buffer);
parcelHelpers.export(exports, "Buffers", ()=>Buffers);
parcelHelpers.export(exports, "BufferSource", ()=>BufferSource);
var _global = require("./core/Global");
var _classes = require("./classes");
parcelHelpers.exportAll(_classes, exports);
var _version = require("./version");
parcelHelpers.exportAll(_version, exports);
var _toneAudioBuffer = require("./core/context/ToneAudioBuffer");
var _audioContext = require("./core/context/AudioContext");
// this fills in name changes from 13.x to 14.x
var _toneAudioBuffers = require("./core/context/ToneAudioBuffers");
var _toneBufferSource = require("./source/buffer/ToneBufferSource");
function now() {
    return (0, _global.getContext)().now();
}
function immediate() {
    return (0, _global.getContext)().immediate();
}
const Transport = (0, _global.getContext)().transport;
function getTransport() {
    return (0, _global.getContext)().transport;
}
const Destination = (0, _global.getContext)().destination;
const Master = (0, _global.getContext)().destination;
function getDestination() {
    return (0, _global.getContext)().destination;
}
const Listener = (0, _global.getContext)().listener;
function getListener() {
    return (0, _global.getContext)().listener;
}
const Draw = (0, _global.getContext)().draw;
function getDraw() {
    return (0, _global.getContext)().draw;
}
const context = (0, _global.getContext)();
function loaded() {
    return (0, _toneAudioBuffer.ToneAudioBuffer).loaded();
}
const Buffer = (0, _toneAudioBuffer.ToneAudioBuffer);
const Buffers = (0, _toneAudioBuffers.ToneAudioBuffers);
const BufferSource = (0, _toneBufferSource.ToneBufferSource);

},{"./core/Global":"79THw","./classes":"bbfCi","./version":"kWqOI","./core/context/ToneAudioBuffer":"8aSPC","./core/context/AudioContext":"1NjF0","./core/context/ToneAudioBuffers":"8zO1I","./source/buffer/ToneBufferSource":"9FxEt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"79THw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Returns the default system-wide [[Context]]
 * @category Core
 */ parcelHelpers.export(exports, "getContext", ()=>getContext);
/**
 * Set the default audio context
 * @category Core
 */ parcelHelpers.export(exports, "setContext", ()=>setContext);
/**
 * Most browsers will not play _any_ audio until a user
 * clicks something (like a play button). Invoke this method
 * on a click or keypress event handler to start the audio context.
 * More about the Autoplay policy
 * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)
 * @example
 * document.querySelector("button").addEventListener("click", async () => {
 * 	await Tone.start();
 * 	console.log("context started");
 * });
 * @category Core
 */ parcelHelpers.export(exports, "start", ()=>start);
var _version = require("../version");
var _audioContext = require("./context/AudioContext");
var _context = require("./context/Context");
var _dummyContext = require("./context/DummyContext");
var _offlineContext = require("./context/OfflineContext");
var _advancedTypeCheck = require("./util/AdvancedTypeCheck");
/**
 * This dummy context is used to avoid throwing immediate errors when importing in Node.js
 */ const dummyContext = new (0, _dummyContext.DummyContext)();
/**
 * The global audio context which is getable and assignable through
 * getContext and setContext
 */ let globalContext = dummyContext;
function getContext() {
    if (globalContext === dummyContext && (0, _audioContext.hasAudioContext)) setContext(new (0, _context.Context)());
    return globalContext;
}
function setContext(context) {
    if ((0, _advancedTypeCheck.isAudioContext)(context)) globalContext = new (0, _context.Context)(context);
    else if ((0, _advancedTypeCheck.isOfflineAudioContext)(context)) globalContext = new (0, _offlineContext.OfflineContext)(context);
    else globalContext = context;
}
function start() {
    return globalContext.resume();
}
/**
 * Log Tone.js + version in the console.
 */ if ((0, _audioContext.theWindow) && !(0, _audioContext.theWindow).TONE_SILENCE_LOGGING) {
    let prefix = "v";
    if ((0, _version.version) === "dev") prefix = "";
    const printString = ` * Tone.js ${prefix}${(0, _version.version)} * `;
    // eslint-disable-next-line no-console
    console.log(`%c${printString}`, "background: #000; color: #fff");
}

},{"../version":"kWqOI","./context/AudioContext":"1NjF0","./context/Context":"1CuCx","./context/DummyContext":"lf5qO","./context/OfflineContext":"8VnAL","./util/AdvancedTypeCheck":"gKVc7","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kWqOI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "version", ()=>version);
const version = "14.7.77";

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gkKU3":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, "__esModule", {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === "default" || key === "__esModule" || dest.hasOwnProperty(key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"1NjF0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * This promise resolves to a boolean which indicates if the
 * functionality is supported within the currently used browse.
 * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)
 */ parcelHelpers.export(exports, "supported", ()=>(0, _standardizedAudioContext.isSupported));
/**
 * Create a new AudioContext
 */ parcelHelpers.export(exports, "createAudioContext", ()=>createAudioContext);
/**
 * Create a new OfflineAudioContext
 */ parcelHelpers.export(exports, "createOfflineAudioContext", ()=>createOfflineAudioContext);
parcelHelpers.export(exports, "theWindow", ()=>theWindow);
parcelHelpers.export(exports, "hasAudioContext", ()=>hasAudioContext);
parcelHelpers.export(exports, "createAudioWorkletNode", ()=>createAudioWorkletNode);
var _standardizedAudioContext = require("standardized-audio-context");
var _debug = require("../util/Debug");
var _typeCheck = require("../util/TypeCheck");
function createAudioContext(options) {
    return new (0, _standardizedAudioContext.AudioContext)(options);
}
function createOfflineAudioContext(channels, length, sampleRate) {
    return new (0, _standardizedAudioContext.OfflineAudioContext)(channels, length, sampleRate);
}
const theWindow = typeof self === "object" ? self : null;
const hasAudioContext = theWindow && (theWindow.hasOwnProperty("AudioContext") || theWindow.hasOwnProperty("webkitAudioContext"));
function createAudioWorkletNode(context, name, options) {
    (0, _debug.assert)((0, _typeCheck.isDefined)((0, _standardizedAudioContext.AudioWorkletNode)), "This node only works in a secure context (https or localhost)");
    // @ts-ignore
    return new (0, _standardizedAudioContext.AudioWorkletNode)(context, name, options);
}

},{"standardized-audio-context":"J0Z3v","../util/Debug":"2lOIQ","../util/TypeCheck":"eMH5A","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"J0Z3v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AnalyserNode", ()=>analyserNodeConstructor);
parcelHelpers.export(exports, "AudioBuffer", ()=>audioBufferConstructor);
parcelHelpers.export(exports, "AudioBufferSourceNode", ()=>audioBufferSourceNodeConstructor);
parcelHelpers.export(exports, "addAudioWorkletModule", ()=>addAudioWorkletModule);
parcelHelpers.export(exports, "decodeAudioData", ()=>decodeAudioData);
parcelHelpers.export(exports, "AudioContext", ()=>audioContextConstructor);
parcelHelpers.export(exports, "AudioWorkletNode", ()=>audioWorkletNodeConstructor);
parcelHelpers.export(exports, "BiquadFilterNode", ()=>biquadFilterNodeConstructor);
parcelHelpers.export(exports, "ChannelMergerNode", ()=>channelMergerNodeConstructor);
parcelHelpers.export(exports, "ChannelSplitterNode", ()=>channelSplitterNodeConstructor);
parcelHelpers.export(exports, "ConvolverNode", ()=>convolverNodeConstructor);
parcelHelpers.export(exports, "ConstantSourceNode", ()=>constantSourceNodeConstructor);
parcelHelpers.export(exports, "DelayNode", ()=>delayNodeConstructor);
parcelHelpers.export(exports, "DynamicsCompressorNode", ()=>dynamicsCompressorNodeConstructor);
parcelHelpers.export(exports, "GainNode", ()=>gainNodeConstructor);
parcelHelpers.export(exports, "IIRFilterNode", ()=>iIRFilterNodeConstructor);
parcelHelpers.export(exports, "MediaElementAudioSourceNode", ()=>mediaElementAudioSourceNodeConstructor);
parcelHelpers.export(exports, "MediaStreamAudioDestinationNode", ()=>mediaStreamAudioDestinationNodeConstructor);
parcelHelpers.export(exports, "MediaStreamAudioSourceNode", ()=>mediaStreamAudioSourceNodeConstructor);
parcelHelpers.export(exports, "MediaStreamTrackAudioSourceNode", ()=>mediaStreamTrackAudioSourceNodeConstructor);
parcelHelpers.export(exports, "MinimalAudioContext", ()=>minimalAudioContextConstructor);
parcelHelpers.export(exports, "MinimalOfflineAudioContext", ()=>minimalOfflineAudioContextConstructor);
parcelHelpers.export(exports, "OfflineAudioContext", ()=>offlineAudioContextConstructor);
parcelHelpers.export(exports, "OscillatorNode", ()=>oscillatorNodeConstructor);
parcelHelpers.export(exports, "PannerNode", ()=>pannerNodeConstructor);
parcelHelpers.export(exports, "PeriodicWave", ()=>periodicWaveConstructor);
parcelHelpers.export(exports, "StereoPannerNode", ()=>stereoPannerNodeConstructor);
parcelHelpers.export(exports, "WaveShaperNode", ()=>waveShaperNodeConstructor);
parcelHelpers.export(exports, "isAnyAudioContext", ()=>isAnyAudioContext);
parcelHelpers.export(exports, "isAnyAudioNode", ()=>isAnyAudioNode);
parcelHelpers.export(exports, "isAnyAudioParam", ()=>isAnyAudioParam);
parcelHelpers.export(exports, "isAnyOfflineAudioContext", ()=>isAnyOfflineAudioContext);
parcelHelpers.export(exports, "isSupported", ()=>isSupported);
var _automationEvents = require("automation-events");
var _abortError = require("./factories/abort-error");
var _addActiveInputConnectionToAudioNode = require("./factories/add-active-input-connection-to-audio-node");
var _addAudioNodeConnections = require("./factories/add-audio-node-connections");
var _addAudioParamConnections = require("./factories/add-audio-param-connections");
var _addAudioWorkletModule = require("./factories/add-audio-worklet-module");
var _addConnectionToAudioNode = require("./factories/add-connection-to-audio-node");
var _addPassiveInputConnectionToAudioNode = require("./factories/add-passive-input-connection-to-audio-node");
var _addSilentConnection = require("./factories/add-silent-connection");
var _addUnrenderedAudioWorkletNode = require("./factories/add-unrendered-audio-worklet-node");
var _analyserNodeConstructor = require("./factories/analyser-node-constructor");
var _analyserNodeRendererFactory = require("./factories/analyser-node-renderer-factory");
var _audioBufferConstructor = require("./factories/audio-buffer-constructor");
var _audioBufferSourceNodeConstructor = require("./factories/audio-buffer-source-node-constructor");
var _audioBufferSourceNodeRendererFactory = require("./factories/audio-buffer-source-node-renderer-factory");
var _audioContextConstructor = require("./factories/audio-context-constructor");
var _audioDestinationNodeConstructor = require("./factories/audio-destination-node-constructor");
var _audioDestinationNodeRendererFactory = require("./factories/audio-destination-node-renderer-factory");
var _audioListenerFactory = require("./factories/audio-listener-factory");
var _audioNodeConstructor = require("./factories/audio-node-constructor");
var _audioParamFactory = require("./factories/audio-param-factory");
var _audioParamRenderer = require("./factories/audio-param-renderer");
var _audioWorkletNodeConstructor = require("./factories/audio-worklet-node-constructor");
var _audioWorkletNodeRendererFactory = require("./factories/audio-worklet-node-renderer-factory");
var _baseAudioContextConstructor = require("./factories/base-audio-context-constructor");
var _biquadFilterNodeConstructor = require("./factories/biquad-filter-node-constructor");
var _biquadFilterNodeRendererFactory = require("./factories/biquad-filter-node-renderer-factory");
var _cacheTestResult = require("./factories/cache-test-result");
var _channelMergerNodeConstructor = require("./factories/channel-merger-node-constructor");
var _channelMergerNodeRendererFactory = require("./factories/channel-merger-node-renderer-factory");
var _channelSplitterNodeConstructor = require("./factories/channel-splitter-node-constructor");
var _channelSplitterNodeRendererFactory = require("./factories/channel-splitter-node-renderer-factory");
var _connectAudioParam = require("./factories/connect-audio-param");
var _connectMultipleOutputs = require("./factories/connect-multiple-outputs");
var _connectedNativeAudioBufferSourceNodeFactory = require("./factories/connected-native-audio-buffer-source-node-factory");
var _constantSourceNodeConstructor = require("./factories/constant-source-node-constructor");
var _constantSourceNodeRendererFactory = require("./factories/constant-source-node-renderer-factory");
var _convertNumberToUnsignedLong = require("./factories/convert-number-to-unsigned-long");
var _convolverNodeConstructor = require("./factories/convolver-node-constructor");
var _convolverNodeRendererFactory = require("./factories/convolver-node-renderer-factory");
var _createNativeOfflineAudioContext = require("./factories/create-native-offline-audio-context");
var _dataCloneError = require("./factories/data-clone-error");
var _decodeAudioData = require("./factories/decode-audio-data");
var _decrementCycleCounter = require("./factories/decrement-cycle-counter");
var _delayNodeConstructor = require("./factories/delay-node-constructor");
var _delayNodeRendererFactory = require("./factories/delay-node-renderer-factory");
var _deleteActiveInputConnectionToAudioNode = require("./factories/delete-active-input-connection-to-audio-node");
var _deleteUnrenderedAudioWorkletNode = require("./factories/delete-unrendered-audio-worklet-node");
var _detectCycles = require("./factories/detect-cycles");
var _disconnectMultipleOutputs = require("./factories/disconnect-multiple-outputs");
var _dynamicsCompressorNodeConstructor = require("./factories/dynamics-compressor-node-constructor");
var _dynamicsCompressorNodeRendererFactory = require("./factories/dynamics-compressor-node-renderer-factory");
var _encodingError = require("./factories/encoding-error");
var _evaluateSource = require("./factories/evaluate-source");
var _eventTargetConstructor = require("./factories/event-target-constructor");
var _exposeCurrentFrameAndCurrentTime = require("./factories/expose-current-frame-and-current-time");
var _fetchSource = require("./factories/fetch-source");
var _gainNodeConstructor = require("./factories/gain-node-constructor");
var _gainNodeRendererFactory = require("./factories/gain-node-renderer-factory");
var _getActiveAudioWorkletNodeInputs = require("./factories/get-active-audio-worklet-node-inputs");
var _getAudioNodeRenderer = require("./factories/get-audio-node-renderer");
var _getAudioNodeTailTime = require("./factories/get-audio-node-tail-time");
var _getAudioParamRenderer = require("./factories/get-audio-param-renderer");
var _getBackupOfflineAudioContext = require("./factories/get-backup-offline-audio-context");
var _getNativeContext = require("./factories/get-native-context");
var _getOrCreateBackupOfflineAudioContext = require("./factories/get-or-create-backup-offline-audio-context");
var _getUnrenderedAudioWorkletNodes = require("./factories/get-unrendered-audio-worklet-nodes");
var _iirFilterNodeConstructor = require("./factories/iir-filter-node-constructor");
var _iirFilterNodeRendererFactory = require("./factories/iir-filter-node-renderer-factory");
var _incrementCycleCounterFactory = require("./factories/increment-cycle-counter-factory");
var _indexSizeError = require("./factories/index-size-error");
var _invalidAccessError = require("./factories/invalid-access-error");
var _invalidStateError = require("./factories/invalid-state-error");
var _isAnyAudioContext = require("./factories/is-any-audio-context");
var _isAnyAudioNode = require("./factories/is-any-audio-node");
var _isAnyAudioParam = require("./factories/is-any-audio-param");
var _isAnyOfflineAudioContext = require("./factories/is-any-offline-audio-context");
var _isNativeAudioContext = require("./factories/is-native-audio-context");
var _isNativeAudioNode = require("./factories/is-native-audio-node");
var _isNativeAudioParam = require("./factories/is-native-audio-param");
var _isNativeContext = require("./factories/is-native-context");
var _isNativeOfflineAudioContext = require("./factories/is-native-offline-audio-context");
var _isSecureContext = require("./factories/is-secure-context");
var _isSupportedPromise = require("./factories/is-supported-promise");
var _mediaElementAudioSourceNodeConstructor = require("./factories/media-element-audio-source-node-constructor");
var _mediaStreamAudioDestinationNodeConstructor = require("./factories/media-stream-audio-destination-node-constructor");
var _mediaStreamAudioSourceNodeConstructor = require("./factories/media-stream-audio-source-node-constructor");
var _mediaStreamTrackAudioSourceNodeConstructor = require("./factories/media-stream-track-audio-source-node-constructor");
var _minimalAudioContextConstructor = require("./factories/minimal-audio-context-constructor");
var _minimalBaseAudioContextConstructor = require("./factories/minimal-base-audio-context-constructor");
var _minimalOfflineAudioContextConstructor = require("./factories/minimal-offline-audio-context-constructor");
var _monitorConnections = require("./factories/monitor-connections");
var _nativeAnalyserNodeFactory = require("./factories/native-analyser-node-factory");
var _nativeAudioBufferConstructor = require("./factories/native-audio-buffer-constructor");
var _nativeAudioBufferSourceNodeFactory = require("./factories/native-audio-buffer-source-node-factory");
var _nativeAudioContextConstructor = require("./factories/native-audio-context-constructor");
var _nativeAudioDestinationNode = require("./factories/native-audio-destination-node");
var _nativeAudioWorkletNodeConstructor = require("./factories/native-audio-worklet-node-constructor");
var _nativeAudioWorkletNodeFactory = require("./factories/native-audio-worklet-node-factory");
var _nativeAudioWorkletNodeFakerFactory = require("./factories/native-audio-worklet-node-faker-factory");
var _nativeBiquadFilterNode = require("./factories/native-biquad-filter-node");
var _nativeChannelMergerNodeFactory = require("./factories/native-channel-merger-node-factory");
var _nativeChannelSplitterNode = require("./factories/native-channel-splitter-node");
var _nativeConstantSourceNodeFactory = require("./factories/native-constant-source-node-factory");
var _nativeConstantSourceNodeFakerFactory = require("./factories/native-constant-source-node-faker-factory");
var _nativeConvolverNodeFactory = require("./factories/native-convolver-node-factory");
var _nativeDelayNode = require("./factories/native-delay-node");
var _nativeDynamicsCompressorNodeFactory = require("./factories/native-dynamics-compressor-node-factory");
var _nativeGainNode = require("./factories/native-gain-node");
var _nativeIirFilterNodeFactory = require("./factories/native-iir-filter-node-factory");
var _nativeIirFilterNodeFakerFactory = require("./factories/native-iir-filter-node-faker-factory");
var _nativeMediaElementAudioSourceNode = require("./factories/native-media-element-audio-source-node");
var _nativeMediaStreamAudioDestinationNode = require("./factories/native-media-stream-audio-destination-node");
var _nativeMediaStreamAudioSourceNode = require("./factories/native-media-stream-audio-source-node");
var _nativeMediaStreamTrackAudioSourceNodeFactory = require("./factories/native-media-stream-track-audio-source-node-factory");
var _nativeOfflineAudioContextConstructor = require("./factories/native-offline-audio-context-constructor");
var _nativeOscillatorNodeFactory = require("./factories/native-oscillator-node-factory");
var _nativePannerNodeFactory = require("./factories/native-panner-node-factory");
var _nativePannerNodeFakerFactory = require("./factories/native-panner-node-faker-factory");
var _nativePeriodicWaveFactory = require("./factories/native-periodic-wave-factory");
var _nativeScriptProcessorNode = require("./factories/native-script-processor-node");
var _nativeStereoPannerNodeFactory = require("./factories/native-stereo-panner-node-factory");
var _nativeStereoPannerNodeFakerFactory = require("./factories/native-stereo-panner-node-faker-factory");
var _nativeWaveShaperNodeFactory = require("./factories/native-wave-shaper-node-factory");
var _nativeWaveShaperNodeFakerFactory = require("./factories/native-wave-shaper-node-faker-factory");
var _notSupportedError = require("./factories/not-supported-error");
var _offlineAudioContextConstructor = require("./factories/offline-audio-context-constructor");
var _oscillatorNodeConstructor = require("./factories/oscillator-node-constructor");
var _oscillatorNodeRendererFactory = require("./factories/oscillator-node-renderer-factory");
var _pannerNodeConstructor = require("./factories/panner-node-constructor");
var _pannerNodeRendererFactory = require("./factories/panner-node-renderer-factory");
var _periodicWaveConstructor = require("./factories/periodic-wave-constructor");
var _renderAutomation = require("./factories/render-automation");
var _renderInputsOfAudioNode = require("./factories/render-inputs-of-audio-node");
var _renderInputsOfAudioParam = require("./factories/render-inputs-of-audio-param");
var _renderNativeOfflineAudioContext = require("./factories/render-native-offline-audio-context");
var _setActiveAudioWorkletNodeInputs = require("./factories/set-active-audio-worklet-node-inputs");
var _setAudioNodeTailTime = require("./factories/set-audio-node-tail-time");
var _startRendering = require("./factories/start-rendering");
var _stereoPannerNodeConstructor = require("./factories/stereo-panner-node-constructor");
var _stereoPannerNodeRendererFactory = require("./factories/stereo-panner-node-renderer-factory");
var _testAudioBufferConstructorSupport = require("./factories/test-audio-buffer-constructor-support");
var _testAudioBufferCopyChannelMethodsSubarraySupport = require("./factories/test-audio-buffer-copy-channel-methods-subarray-support");
var _testAudioContextCloseMethodSupport = require("./factories/test-audio-context-close-method-support");
var _testAudioContextDecodeAudioDataMethodTypeErrorSupport = require("./factories/test-audio-context-decode-audio-data-method-type-error-support");
var _testAudioContextOptionsSupport = require("./factories/test-audio-context-options-support");
var _testAudioNodeConnectMethodSupport = require("./factories/test-audio-node-connect-method-support");
var _testAudioWorkletProcessorNoOutputsSupport = require("./factories/test-audio-worklet-processor-no-outputs-support");
var _testAudioWorkletProcessorPostMessageSupport = require("./factories/test-audio-worklet-processor-post-message-support");
var _testChannelMergerNodeChannelCountSupport = require("./factories/test-channel-merger-node-channel-count-support");
var _testConstantSourceNodeAccurateSchedulingSupport = require("./factories/test-constant-source-node-accurate-scheduling-support");
var _testConvolverNodeBufferReassignabilitySupport = require("./factories/test-convolver-node-buffer-reassignability-support");
var _testConvolverNodeChannelCountSupport = require("./factories/test-convolver-node-channel-count-support");
var _testIsSecureContextSupport = require("./factories/test-is-secure-context-support");
var _testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = require("./factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support");
var _testOfflineAudioContextCurrentTimeSupport = require("./factories/test-offline-audio-context-current-time-support");
var _testStereoPannerNodeDefaultValueSupport = require("./factories/test-stereo-panner-node-default-value-support");
var _unknownError = require("./factories/unknown-error");
var _waveShaperNodeConstructor = require("./factories/wave-shaper-node-constructor");
var _waveShaperNodeRendererFactory = require("./factories/wave-shaper-node-renderer-factory");
var _window = require("./factories/window");
var _wrapAudioBufferCopyChannelMethods = require("./factories/wrap-audio-buffer-copy-channel-methods");
var _wrapAudioBufferCopyChannelMethodsOutOfBounds = require("./factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds");
var _wrapAudioBufferSourceNodeStopMethodNullifiedBuffer = require("./factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer");
var _wrapChannelMergerNode = require("./factories/wrap-channel-merger-node");
var _globals = require("./globals");
var _connectNativeAudioNodeToNativeAudioNode = require("./helpers/connect-native-audio-node-to-native-audio-node");
var _disconnectNativeAudioNodeFromNativeAudioNode = require("./helpers/disconnect-native-audio-node-from-native-audio-node");
var _getAudioNodeConnections = require("./helpers/get-audio-node-connections");
var _getAudioParamConnections = require("./helpers/get-audio-param-connections");
var _getEventListenersOfAudioNode = require("./helpers/get-event-listeners-of-audio-node");
var _getFirstSample = require("./helpers/get-first-sample");
var _getNativeAudioNode = require("./helpers/get-native-audio-node");
var _getNativeAudioParam = require("./helpers/get-native-audio-param");
var _getValueForKey = require("./helpers/get-value-for-key");
var _insertElementInSet = require("./helpers/insert-element-in-set");
var _isActiveAudioNode = require("./helpers/is-active-audio-node");
var _isDcCurve = require("./helpers/is-dc-curve");
var _isPartOfACycle = require("./helpers/is-part-of-a-cycle");
var _isPassiveAudioNode = require("./helpers/is-passive-audio-node");
var _overwriteAccessors = require("./helpers/overwrite-accessors");
var _pickElementFromSet = require("./helpers/pick-element-from-set");
var _sanitizeAudioWorkletNodeOptions = require("./helpers/sanitize-audio-worklet-node-options");
var _sanitizeChannelSplitterOptions = require("./helpers/sanitize-channel-splitter-options");
var _sanitizePeriodicWaveOptions = require("./helpers/sanitize-periodic-wave-options");
var _setValueAtTimeUntilPossible = require("./helpers/set-value-at-time-until-possible");
var _testAudioBufferCopyChannelMethodsOutOfBoundsSupport = require("./helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support");
var _testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = require("./helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support");
var _testAudioBufferSourceNodeStartMethodOffsetClampingSupport = require("./helpers/test-audio-buffer-source-node-start-method-offset-clamping-support");
var _testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = require("./helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support");
var _testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = require("./helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support");
var _testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = require("./helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support");
var _testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = require("./helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support");
var _testAudioWorkletNodeOptionsClonability = require("./helpers/test-audio-worklet-node-options-clonability");
var _testDomExceptionConstructorSupport = require("./helpers/test-dom-exception-constructor-support");
var _testPromiseSupport = require("./helpers/test-promise-support");
var _testTransferablesSupport = require("./helpers/test-transferables-support");
var _wrapAudioBufferSourceNodeStartMethodOffsetClamping = require("./helpers/wrap-audio-buffer-source-node-start-method-offset-clamping");
var _wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = require("./helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls");
var _wrapEventListener = require("./helpers/wrap-event-listener");
/*
 * @todo Explicitly referencing the barrel file seems to be necessary when enabling the
 * isolatedModules compiler option.
 */ var _index = require("./interfaces/index");
parcelHelpers.exportAll(_index, exports);
var _index1 = require("./types/index");
parcelHelpers.exportAll(_index1, exports);
const addActiveInputConnectionToAudioNode = (0, _addActiveInputConnectionToAudioNode.createAddActiveInputConnectionToAudioNode)((0, _insertElementInSet.insertElementInSet));
const addPassiveInputConnectionToAudioNode = (0, _addPassiveInputConnectionToAudioNode.createAddPassiveInputConnectionToAudioNode)((0, _insertElementInSet.insertElementInSet));
const deleteActiveInputConnectionToAudioNode = (0, _deleteActiveInputConnectionToAudioNode.createDeleteActiveInputConnectionToAudioNode)((0, _pickElementFromSet.pickElementFromSet));
const audioNodeTailTimeStore = new WeakMap();
const getAudioNodeTailTime = (0, _getAudioNodeTailTime.createGetAudioNodeTailTime)(audioNodeTailTimeStore);
const cacheTestResult = (0, _cacheTestResult.createCacheTestResult)(new Map(), new WeakMap());
const window = (0, _window.createWindow)();
const createNativeAnalyserNode = (0, _nativeAnalyserNodeFactory.createNativeAnalyserNodeFactory)(cacheTestResult, (0, _indexSizeError.createIndexSizeError));
const getAudioNodeRenderer = (0, _getAudioNodeRenderer.createGetAudioNodeRenderer)((0, _getAudioNodeConnections.getAudioNodeConnections));
const renderInputsOfAudioNode = (0, _renderInputsOfAudioNode.createRenderInputsOfAudioNode)((0, _getAudioNodeConnections.getAudioNodeConnections), getAudioNodeRenderer, (0, _isPartOfACycle.isPartOfACycle));
const createAnalyserNodeRenderer = (0, _analyserNodeRendererFactory.createAnalyserNodeRendererFactory)(createNativeAnalyserNode, (0, _getNativeAudioNode.getNativeAudioNode), renderInputsOfAudioNode);
const getNativeContext = (0, _getNativeContext.createGetNativeContext)((0, _globals.CONTEXT_STORE));
const nativeOfflineAudioContextConstructor = (0, _nativeOfflineAudioContextConstructor.createNativeOfflineAudioContextConstructor)(window);
const isNativeOfflineAudioContext = (0, _isNativeOfflineAudioContext.createIsNativeOfflineAudioContext)(nativeOfflineAudioContextConstructor);
const audioParamAudioNodeStore = new WeakMap();
const eventTargetConstructor = (0, _eventTargetConstructor.createEventTargetConstructor)((0, _wrapEventListener.wrapEventListener));
const nativeAudioContextConstructor = (0, _nativeAudioContextConstructor.createNativeAudioContextConstructor)(window);
const isNativeAudioContext = (0, _isNativeAudioContext.createIsNativeAudioContext)(nativeAudioContextConstructor);
const isNativeAudioNode = (0, _isNativeAudioNode.createIsNativeAudioNode)(window);
const isNativeAudioParam = (0, _isNativeAudioParam.createIsNativeAudioParam)(window);
const nativeAudioWorkletNodeConstructor = (0, _nativeAudioWorkletNodeConstructor.createNativeAudioWorkletNodeConstructor)(window);
const audioNodeConstructor = (0, _audioNodeConstructor.createAudioNodeConstructor)((0, _addAudioNodeConnections.createAddAudioNodeConnections)((0, _globals.AUDIO_NODE_CONNECTIONS_STORE)), (0, _addConnectionToAudioNode.createAddConnectionToAudioNode)(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, (0, _connectNativeAudioNodeToNativeAudioNode.connectNativeAudioNodeToNativeAudioNode), deleteActiveInputConnectionToAudioNode, (0, _disconnectNativeAudioNodeFromNativeAudioNode.disconnectNativeAudioNodeFromNativeAudioNode), (0, _getAudioNodeConnections.getAudioNodeConnections), getAudioNodeTailTime, (0, _getEventListenersOfAudioNode.getEventListenersOfAudioNode), (0, _getNativeAudioNode.getNativeAudioNode), (0, _insertElementInSet.insertElementInSet), (0, _isActiveAudioNode.isActiveAudioNode), (0, _isPartOfACycle.isPartOfACycle), (0, _isPassiveAudioNode.isPassiveAudioNode)), cacheTestResult, (0, _incrementCycleCounterFactory.createIncrementCycleCounterFactory)((0, _globals.CYCLE_COUNTERS), (0, _disconnectNativeAudioNodeFromNativeAudioNode.disconnectNativeAudioNodeFromNativeAudioNode), (0, _getAudioNodeConnections.getAudioNodeConnections), (0, _getNativeAudioNode.getNativeAudioNode), (0, _getNativeAudioParam.getNativeAudioParam), (0, _isActiveAudioNode.isActiveAudioNode)), (0, _indexSizeError.createIndexSizeError), (0, _invalidAccessError.createInvalidAccessError), (0, _notSupportedError.createNotSupportedError), (0, _decrementCycleCounter.createDecrementCycleCounter)((0, _connectNativeAudioNodeToNativeAudioNode.connectNativeAudioNodeToNativeAudioNode), (0, _globals.CYCLE_COUNTERS), (0, _getAudioNodeConnections.getAudioNodeConnections), (0, _getNativeAudioNode.getNativeAudioNode), (0, _getNativeAudioParam.getNativeAudioParam), getNativeContext, (0, _isActiveAudioNode.isActiveAudioNode), isNativeOfflineAudioContext), (0, _detectCycles.createDetectCycles)(audioParamAudioNodeStore, (0, _getAudioNodeConnections.getAudioNodeConnections), (0, _getValueForKey.getValueForKey)), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor);
const analyserNodeConstructor = (0, _analyserNodeConstructor.createAnalyserNodeConstructor)(audioNodeConstructor, createAnalyserNodeRenderer, (0, _indexSizeError.createIndexSizeError), createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);
const audioBufferStore = new WeakSet();
const nativeAudioBufferConstructor = (0, _nativeAudioBufferConstructor.createNativeAudioBufferConstructor)(window);
const convertNumberToUnsignedLong = (0, _convertNumberToUnsignedLong.createConvertNumberToUnsignedLong)(new Uint32Array(1));
const wrapAudioBufferCopyChannelMethods = (0, _wrapAudioBufferCopyChannelMethods.createWrapAudioBufferCopyChannelMethods)(convertNumberToUnsignedLong, (0, _indexSizeError.createIndexSizeError));
const wrapAudioBufferCopyChannelMethodsOutOfBounds = (0, _wrapAudioBufferCopyChannelMethodsOutOfBounds.createWrapAudioBufferCopyChannelMethodsOutOfBounds)(convertNumberToUnsignedLong);
const audioBufferConstructor = (0, _audioBufferConstructor.createAudioBufferConstructor)(audioBufferStore, cacheTestResult, (0, _notSupportedError.createNotSupportedError), nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, (0, _testAudioBufferConstructorSupport.createTestAudioBufferConstructorSupport)(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);
const addSilentConnection = (0, _addSilentConnection.createAddSilentConnection)((0, _nativeGainNode.createNativeGainNode));
const renderInputsOfAudioParam = (0, _renderInputsOfAudioParam.createRenderInputsOfAudioParam)(getAudioNodeRenderer, (0, _getAudioParamConnections.getAudioParamConnections), (0, _isPartOfACycle.isPartOfACycle));
const connectAudioParam = (0, _connectAudioParam.createConnectAudioParam)(renderInputsOfAudioParam);
const createNativeAudioBufferSourceNode = (0, _nativeAudioBufferSourceNodeFactory.createNativeAudioBufferSourceNodeFactory)(addSilentConnection, cacheTestResult, (0, _testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport.testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport), (0, _testAudioBufferSourceNodeStartMethodOffsetClampingSupport.testAudioBufferSourceNodeStartMethodOffsetClampingSupport), (0, _testAudioBufferSourceNodeStopMethodNullifiedBufferSupport.testAudioBufferSourceNodeStopMethodNullifiedBufferSupport), (0, _testAudioScheduledSourceNodeStartMethodNegativeParametersSupport.testAudioScheduledSourceNodeStartMethodNegativeParametersSupport), (0, _testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport.testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport), (0, _testAudioScheduledSourceNodeStopMethodNegativeParametersSupport.testAudioScheduledSourceNodeStopMethodNegativeParametersSupport), (0, _wrapAudioBufferSourceNodeStartMethodOffsetClamping.wrapAudioBufferSourceNodeStartMethodOffsetClamping), (0, _wrapAudioBufferSourceNodeStopMethodNullifiedBuffer.createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer)((0, _overwriteAccessors.overwriteAccessors)), (0, _wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls.wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls));
const renderAutomation = (0, _renderAutomation.createRenderAutomation)((0, _getAudioParamRenderer.createGetAudioParamRenderer)((0, _getAudioParamConnections.getAudioParamConnections)), renderInputsOfAudioParam);
const createAudioBufferSourceNodeRenderer = (0, _audioBufferSourceNodeRendererFactory.createAudioBufferSourceNodeRendererFactory)(connectAudioParam, createNativeAudioBufferSourceNode, (0, _getNativeAudioNode.getNativeAudioNode), renderAutomation, renderInputsOfAudioNode);
const createAudioParam = (0, _audioParamFactory.createAudioParamFactory)((0, _addAudioParamConnections.createAddAudioParamConnections)((0, _globals.AUDIO_PARAM_CONNECTIONS_STORE)), audioParamAudioNodeStore, (0, _globals.AUDIO_PARAM_STORE), (0, _audioParamRenderer.createAudioParamRenderer), (0, _automationEvents.createCancelAndHoldAutomationEvent), (0, _automationEvents.createCancelScheduledValuesAutomationEvent), (0, _automationEvents.createExponentialRampToValueAutomationEvent), (0, _automationEvents.createLinearRampToValueAutomationEvent), (0, _automationEvents.createSetTargetAutomationEvent), (0, _automationEvents.createSetValueAutomationEvent), (0, _automationEvents.createSetValueCurveAutomationEvent), nativeAudioContextConstructor, (0, _setValueAtTimeUntilPossible.setValueAtTimeUntilPossible));
const audioBufferSourceNodeConstructor = (0, _audioBufferSourceNodeConstructor.createAudioBufferSourceNodeConstructor)(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, (0, _invalidStateError.createInvalidStateError), createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, (0, _wrapEventListener.wrapEventListener));
const audioDestinationNodeConstructor = (0, _audioDestinationNodeConstructor.createAudioDestinationNodeConstructor)(audioNodeConstructor, (0, _audioDestinationNodeRendererFactory.createAudioDestinationNodeRenderer), (0, _indexSizeError.createIndexSizeError), (0, _invalidStateError.createInvalidStateError), (0, _nativeAudioDestinationNode.createNativeAudioDestinationNodeFactory)((0, _nativeGainNode.createNativeGainNode), (0, _overwriteAccessors.overwriteAccessors)), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);
const createBiquadFilterNodeRenderer = (0, _biquadFilterNodeRendererFactory.createBiquadFilterNodeRendererFactory)(connectAudioParam, (0, _nativeBiquadFilterNode.createNativeBiquadFilterNode), (0, _getNativeAudioNode.getNativeAudioNode), renderAutomation, renderInputsOfAudioNode);
const setAudioNodeTailTime = (0, _setAudioNodeTailTime.createSetAudioNodeTailTime)(audioNodeTailTimeStore);
const biquadFilterNodeConstructor = (0, _biquadFilterNodeConstructor.createBiquadFilterNodeConstructor)(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, (0, _invalidAccessError.createInvalidAccessError), (0, _nativeBiquadFilterNode.createNativeBiquadFilterNode), getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const monitorConnections = (0, _monitorConnections.createMonitorConnections)((0, _insertElementInSet.insertElementInSet), isNativeAudioNode);
const wrapChannelMergerNode = (0, _wrapChannelMergerNode.createWrapChannelMergerNode)((0, _invalidStateError.createInvalidStateError), monitorConnections);
const createNativeChannelMergerNode = (0, _nativeChannelMergerNodeFactory.createNativeChannelMergerNodeFactory)(nativeAudioContextConstructor, wrapChannelMergerNode);
const createChannelMergerNodeRenderer = (0, _channelMergerNodeRendererFactory.createChannelMergerNodeRendererFactory)(createNativeChannelMergerNode, (0, _getNativeAudioNode.getNativeAudioNode), renderInputsOfAudioNode);
const channelMergerNodeConstructor = (0, _channelMergerNodeConstructor.createChannelMergerNodeConstructor)(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);
const createChannelSplitterNodeRenderer = (0, _channelSplitterNodeRendererFactory.createChannelSplitterNodeRendererFactory)((0, _nativeChannelSplitterNode.createNativeChannelSplitterNode), (0, _getNativeAudioNode.getNativeAudioNode), renderInputsOfAudioNode);
const channelSplitterNodeConstructor = (0, _channelSplitterNodeConstructor.createChannelSplitterNodeConstructor)(audioNodeConstructor, createChannelSplitterNodeRenderer, (0, _nativeChannelSplitterNode.createNativeChannelSplitterNode), getNativeContext, isNativeOfflineAudioContext, (0, _sanitizeChannelSplitterOptions.sanitizeChannelSplitterOptions));
const createNativeConstantSourceNodeFaker = (0, _nativeConstantSourceNodeFakerFactory.createNativeConstantSourceNodeFakerFactory)(addSilentConnection, createNativeAudioBufferSourceNode, (0, _nativeGainNode.createNativeGainNode), monitorConnections);
const createNativeConstantSourceNode = (0, _nativeConstantSourceNodeFactory.createNativeConstantSourceNodeFactory)(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, (0, _testAudioScheduledSourceNodeStartMethodNegativeParametersSupport.testAudioScheduledSourceNodeStartMethodNegativeParametersSupport), (0, _testAudioScheduledSourceNodeStopMethodNegativeParametersSupport.testAudioScheduledSourceNodeStopMethodNegativeParametersSupport));
const createConstantSourceNodeRenderer = (0, _constantSourceNodeRendererFactory.createConstantSourceNodeRendererFactory)(connectAudioParam, createNativeConstantSourceNode, (0, _getNativeAudioNode.getNativeAudioNode), renderAutomation, renderInputsOfAudioNode);
const constantSourceNodeConstructor = (0, _constantSourceNodeConstructor.createConstantSourceNodeConstructor)(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, (0, _wrapEventListener.wrapEventListener));
const createNativeConvolverNode = (0, _nativeConvolverNodeFactory.createNativeConvolverNodeFactory)((0, _notSupportedError.createNotSupportedError), (0, _overwriteAccessors.overwriteAccessors));
const createConvolverNodeRenderer = (0, _convolverNodeRendererFactory.createConvolverNodeRendererFactory)(createNativeConvolverNode, (0, _getNativeAudioNode.getNativeAudioNode), renderInputsOfAudioNode);
const convolverNodeConstructor = (0, _convolverNodeConstructor.createConvolverNodeConstructor)(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const createDelayNodeRenderer = (0, _delayNodeRendererFactory.createDelayNodeRendererFactory)(connectAudioParam, (0, _nativeDelayNode.createNativeDelayNode), (0, _getNativeAudioNode.getNativeAudioNode), renderAutomation, renderInputsOfAudioNode);
const delayNodeConstructor = (0, _delayNodeConstructor.createDelayNodeConstructor)(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, (0, _nativeDelayNode.createNativeDelayNode), getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const createNativeDynamicsCompressorNode = (0, _nativeDynamicsCompressorNodeFactory.createNativeDynamicsCompressorNodeFactory)((0, _notSupportedError.createNotSupportedError));
const createDynamicsCompressorNodeRenderer = (0, _dynamicsCompressorNodeRendererFactory.createDynamicsCompressorNodeRendererFactory)(connectAudioParam, createNativeDynamicsCompressorNode, (0, _getNativeAudioNode.getNativeAudioNode), renderAutomation, renderInputsOfAudioNode);
const dynamicsCompressorNodeConstructor = (0, _dynamicsCompressorNodeConstructor.createDynamicsCompressorNodeConstructor)(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, (0, _notSupportedError.createNotSupportedError), getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const createGainNodeRenderer = (0, _gainNodeRendererFactory.createGainNodeRendererFactory)(connectAudioParam, (0, _nativeGainNode.createNativeGainNode), (0, _getNativeAudioNode.getNativeAudioNode), renderAutomation, renderInputsOfAudioNode);
const gainNodeConstructor = (0, _gainNodeConstructor.createGainNodeConstructor)(audioNodeConstructor, createAudioParam, createGainNodeRenderer, (0, _nativeGainNode.createNativeGainNode), getNativeContext, isNativeOfflineAudioContext);
const createNativeIIRFilterNodeFaker = (0, _nativeIirFilterNodeFakerFactory.createNativeIIRFilterNodeFakerFactory)((0, _invalidAccessError.createInvalidAccessError), (0, _invalidStateError.createInvalidStateError), (0, _nativeScriptProcessorNode.createNativeScriptProcessorNode), (0, _notSupportedError.createNotSupportedError));
const renderNativeOfflineAudioContext = (0, _renderNativeOfflineAudioContext.createRenderNativeOfflineAudioContext)(cacheTestResult, (0, _nativeGainNode.createNativeGainNode), (0, _nativeScriptProcessorNode.createNativeScriptProcessorNode), (0, _testOfflineAudioContextCurrentTimeSupport.createTestOfflineAudioContextCurrentTimeSupport)((0, _nativeGainNode.createNativeGainNode), nativeOfflineAudioContextConstructor));
const createIIRFilterNodeRenderer = (0, _iirFilterNodeRendererFactory.createIIRFilterNodeRendererFactory)(createNativeAudioBufferSourceNode, (0, _getNativeAudioNode.getNativeAudioNode), nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
const createNativeIIRFilterNode = (0, _nativeIirFilterNodeFactory.createNativeIIRFilterNodeFactory)(createNativeIIRFilterNodeFaker);
const iIRFilterNodeConstructor = (0, _iirFilterNodeConstructor.createIIRFilterNodeConstructor)(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const createAudioListener = (0, _audioListenerFactory.createAudioListenerFactory)(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, (0, _nativeScriptProcessorNode.createNativeScriptProcessorNode), (0, _notSupportedError.createNotSupportedError), (0, _getFirstSample.getFirstSample), isNativeOfflineAudioContext, (0, _overwriteAccessors.overwriteAccessors));
const unrenderedAudioWorkletNodeStore = new WeakMap();
const minimalBaseAudioContextConstructor = (0, _minimalBaseAudioContextConstructor.createMinimalBaseAudioContextConstructor)(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, (0, _wrapEventListener.wrapEventListener));
const createNativeOscillatorNode = (0, _nativeOscillatorNodeFactory.createNativeOscillatorNodeFactory)(addSilentConnection, cacheTestResult, (0, _testAudioScheduledSourceNodeStartMethodNegativeParametersSupport.testAudioScheduledSourceNodeStartMethodNegativeParametersSupport), (0, _testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport.testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport), (0, _testAudioScheduledSourceNodeStopMethodNegativeParametersSupport.testAudioScheduledSourceNodeStopMethodNegativeParametersSupport), (0, _wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls.wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls));
const createOscillatorNodeRenderer = (0, _oscillatorNodeRendererFactory.createOscillatorNodeRendererFactory)(connectAudioParam, createNativeOscillatorNode, (0, _getNativeAudioNode.getNativeAudioNode), renderAutomation, renderInputsOfAudioNode);
const oscillatorNodeConstructor = (0, _oscillatorNodeConstructor.createOscillatorNodeConstructor)(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, (0, _wrapEventListener.wrapEventListener));
const createConnectedNativeAudioBufferSourceNode = (0, _connectedNativeAudioBufferSourceNodeFactory.createConnectedNativeAudioBufferSourceNodeFactory)(createNativeAudioBufferSourceNode);
const createNativeWaveShaperNodeFaker = (0, _nativeWaveShaperNodeFakerFactory.createNativeWaveShaperNodeFakerFactory)(createConnectedNativeAudioBufferSourceNode, (0, _invalidStateError.createInvalidStateError), (0, _nativeGainNode.createNativeGainNode), (0, _isDcCurve.isDCCurve), monitorConnections);
const createNativeWaveShaperNode = (0, _nativeWaveShaperNodeFactory.createNativeWaveShaperNodeFactory)(createConnectedNativeAudioBufferSourceNode, (0, _invalidStateError.createInvalidStateError), createNativeWaveShaperNodeFaker, (0, _isDcCurve.isDCCurve), monitorConnections, nativeAudioContextConstructor, (0, _overwriteAccessors.overwriteAccessors));
const createNativePannerNodeFaker = (0, _nativePannerNodeFakerFactory.createNativePannerNodeFakerFactory)((0, _connectNativeAudioNodeToNativeAudioNode.connectNativeAudioNodeToNativeAudioNode), (0, _invalidStateError.createInvalidStateError), createNativeChannelMergerNode, (0, _nativeGainNode.createNativeGainNode), (0, _nativeScriptProcessorNode.createNativeScriptProcessorNode), createNativeWaveShaperNode, (0, _notSupportedError.createNotSupportedError), (0, _disconnectNativeAudioNodeFromNativeAudioNode.disconnectNativeAudioNodeFromNativeAudioNode), (0, _getFirstSample.getFirstSample), monitorConnections);
const createNativePannerNode = (0, _nativePannerNodeFactory.createNativePannerNodeFactory)(createNativePannerNodeFaker);
const createPannerNodeRenderer = (0, _pannerNodeRendererFactory.createPannerNodeRendererFactory)(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, (0, _nativeGainNode.createNativeGainNode), createNativePannerNode, (0, _getNativeAudioNode.getNativeAudioNode), nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
const pannerNodeConstructor = (0, _pannerNodeConstructor.createPannerNodeConstructor)(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const createNativePeriodicWave = (0, _nativePeriodicWaveFactory.createNativePeriodicWaveFactory)((0, _indexSizeError.createIndexSizeError));
const periodicWaveConstructor = (0, _periodicWaveConstructor.createPeriodicWaveConstructor)(createNativePeriodicWave, getNativeContext, new WeakSet(), (0, _sanitizePeriodicWaveOptions.sanitizePeriodicWaveOptions));
const nativeStereoPannerNodeFakerFactory = (0, _nativeStereoPannerNodeFakerFactory.createNativeStereoPannerNodeFakerFactory)(createNativeChannelMergerNode, (0, _nativeChannelSplitterNode.createNativeChannelSplitterNode), (0, _nativeGainNode.createNativeGainNode), createNativeWaveShaperNode, (0, _notSupportedError.createNotSupportedError), monitorConnections);
const createNativeStereoPannerNode = (0, _nativeStereoPannerNodeFactory.createNativeStereoPannerNodeFactory)(nativeStereoPannerNodeFakerFactory, (0, _notSupportedError.createNotSupportedError));
const createStereoPannerNodeRenderer = (0, _stereoPannerNodeRendererFactory.createStereoPannerNodeRendererFactory)(connectAudioParam, createNativeStereoPannerNode, (0, _getNativeAudioNode.getNativeAudioNode), renderAutomation, renderInputsOfAudioNode);
const stereoPannerNodeConstructor = (0, _stereoPannerNodeConstructor.createStereoPannerNodeConstructor)(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);
const createWaveShaperNodeRenderer = (0, _waveShaperNodeRendererFactory.createWaveShaperNodeRendererFactory)(createNativeWaveShaperNode, (0, _getNativeAudioNode.getNativeAudioNode), renderInputsOfAudioNode);
const waveShaperNodeConstructor = (0, _waveShaperNodeConstructor.createWaveShaperNodeConstructor)(audioNodeConstructor, (0, _invalidStateError.createInvalidStateError), createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
const isSecureContext = (0, _isSecureContext.createIsSecureContext)(window);
const exposeCurrentFrameAndCurrentTime = (0, _exposeCurrentFrameAndCurrentTime.createExposeCurrentFrameAndCurrentTime)(window);
const backupOfflineAudioContextStore = new WeakMap();
const getOrCreateBackupOfflineAudioContext = (0, _getOrCreateBackupOfflineAudioContext.createGetOrCreateBackupOfflineAudioContext)(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);
const addAudioWorkletModule = isSecureContext ? (0, _addAudioWorkletModule.createAddAudioWorkletModule)(cacheTestResult, (0, _notSupportedError.createNotSupportedError), (0, _evaluateSource.createEvaluateSource)(window), exposeCurrentFrameAndCurrentTime, (0, _fetchSource.createFetchSource)((0, _abortError.createAbortError)), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, new WeakMap(), new WeakMap(), (0, _testAudioWorkletProcessorPostMessageSupport.createTestAudioWorkletProcessorPostMessageSupport)(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), // @todo window is guaranteed to be defined because isSecureContext checks that as well.
window) : undefined;
const isNativeContext = (0, _isNativeContext.createIsNativeContext)(isNativeAudioContext, isNativeOfflineAudioContext);
const decodeAudioData = (0, _decodeAudioData.createDecodeAudioData)(audioBufferStore, cacheTestResult, (0, _dataCloneError.createDataCloneError), (0, _encodingError.createEncodingError), new WeakSet(), getNativeContext, isNativeContext, (0, _testAudioBufferCopyChannelMethodsOutOfBoundsSupport.testAudioBufferCopyChannelMethodsOutOfBoundsSupport), (0, _testPromiseSupport.testPromiseSupport), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);
const baseAudioContextConstructor = (0, _baseAudioContextConstructor.createBaseAudioContextConstructor)(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);
const mediaElementAudioSourceNodeConstructor = (0, _mediaElementAudioSourceNodeConstructor.createMediaElementAudioSourceNodeConstructor)(audioNodeConstructor, (0, _nativeMediaElementAudioSourceNode.createNativeMediaElementAudioSourceNode), getNativeContext, isNativeOfflineAudioContext);
const mediaStreamAudioDestinationNodeConstructor = (0, _mediaStreamAudioDestinationNodeConstructor.createMediaStreamAudioDestinationNodeConstructor)(audioNodeConstructor, (0, _nativeMediaStreamAudioDestinationNode.createNativeMediaStreamAudioDestinationNode), getNativeContext, isNativeOfflineAudioContext);
const mediaStreamAudioSourceNodeConstructor = (0, _mediaStreamAudioSourceNodeConstructor.createMediaStreamAudioSourceNodeConstructor)(audioNodeConstructor, (0, _nativeMediaStreamAudioSourceNode.createNativeMediaStreamAudioSourceNode), getNativeContext, isNativeOfflineAudioContext);
const createNativeMediaStreamTrackAudioSourceNode = (0, _nativeMediaStreamTrackAudioSourceNodeFactory.createNativeMediaStreamTrackAudioSourceNodeFactory)((0, _invalidStateError.createInvalidStateError), isNativeOfflineAudioContext);
const mediaStreamTrackAudioSourceNodeConstructor = (0, _mediaStreamTrackAudioSourceNodeConstructor.createMediaStreamTrackAudioSourceNodeConstructor)(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);
const audioContextConstructor = (0, _audioContextConstructor.createAudioContextConstructor)(baseAudioContextConstructor, (0, _invalidStateError.createInvalidStateError), (0, _notSupportedError.createNotSupportedError), (0, _unknownError.createUnknownError), mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);
const getUnrenderedAudioWorkletNodes = (0, _getUnrenderedAudioWorkletNodes.createGetUnrenderedAudioWorkletNodes)(unrenderedAudioWorkletNodeStore);
const addUnrenderedAudioWorkletNode = (0, _addUnrenderedAudioWorkletNode.createAddUnrenderedAudioWorkletNode)(getUnrenderedAudioWorkletNodes);
const connectMultipleOutputs = (0, _connectMultipleOutputs.createConnectMultipleOutputs)((0, _indexSizeError.createIndexSizeError));
const deleteUnrenderedAudioWorkletNode = (0, _deleteUnrenderedAudioWorkletNode.createDeleteUnrenderedAudioWorkletNode)(getUnrenderedAudioWorkletNodes);
const disconnectMultipleOutputs = (0, _disconnectMultipleOutputs.createDisconnectMultipleOutputs)((0, _indexSizeError.createIndexSizeError));
const activeAudioWorkletNodeInputsStore = new WeakMap();
const getActiveAudioWorkletNodeInputs = (0, _getActiveAudioWorkletNodeInputs.createGetActiveAudioWorkletNodeInputs)(activeAudioWorkletNodeInputsStore, (0, _getValueForKey.getValueForKey));
const createNativeAudioWorkletNodeFaker = (0, _nativeAudioWorkletNodeFakerFactory.createNativeAudioWorkletNodeFakerFactory)(connectMultipleOutputs, (0, _indexSizeError.createIndexSizeError), (0, _invalidStateError.createInvalidStateError), createNativeChannelMergerNode, (0, _nativeChannelSplitterNode.createNativeChannelSplitterNode), createNativeConstantSourceNode, (0, _nativeGainNode.createNativeGainNode), (0, _nativeScriptProcessorNode.createNativeScriptProcessorNode), (0, _notSupportedError.createNotSupportedError), disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);
const createNativeAudioWorkletNode = (0, _nativeAudioWorkletNodeFactory.createNativeAudioWorkletNodeFactory)((0, _invalidStateError.createInvalidStateError), createNativeAudioWorkletNodeFaker, (0, _nativeGainNode.createNativeGainNode), (0, _notSupportedError.createNotSupportedError), monitorConnections);
const createAudioWorkletNodeRenderer = (0, _audioWorkletNodeRendererFactory.createAudioWorkletNodeRendererFactory)(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, (0, _nativeChannelSplitterNode.createNativeChannelSplitterNode), createNativeConstantSourceNode, (0, _nativeGainNode.createNativeGainNode), deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, (0, _getNativeAudioNode.getNativeAudioNode), nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
const getBackupOfflineAudioContext = (0, _getBackupOfflineAudioContext.createGetBackupOfflineAudioContext)(backupOfflineAudioContextStore);
const setActiveAudioWorkletNodeInputs = (0, _setActiveAudioWorkletNodeInputs.createSetActiveAudioWorkletNodeInputs)(activeAudioWorkletNodeInputsStore);
// The AudioWorkletNode constructor is only available in a SecureContext.
const audioWorkletNodeConstructor = isSecureContext ? (0, _audioWorkletNodeConstructor.createAudioWorkletNodeConstructor)(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, (0, _getAudioNodeConnections.getAudioNodeConnections), getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, (0, _sanitizeAudioWorkletNodeOptions.sanitizeAudioWorkletNodeOptions), setActiveAudioWorkletNodeInputs, (0, _testAudioWorkletNodeOptionsClonability.testAudioWorkletNodeOptionsClonability), (0, _wrapEventListener.wrapEventListener)) : undefined;
const minimalAudioContextConstructor = (0, _minimalAudioContextConstructor.createMinimalAudioContextConstructor)((0, _invalidStateError.createInvalidStateError), (0, _notSupportedError.createNotSupportedError), (0, _unknownError.createUnknownError), minimalBaseAudioContextConstructor, nativeAudioContextConstructor);
const createNativeOfflineAudioContext = (0, _createNativeOfflineAudioContext.createCreateNativeOfflineAudioContext)((0, _notSupportedError.createNotSupportedError), nativeOfflineAudioContextConstructor);
const startRendering = (0, _startRendering.createStartRendering)(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, (0, _testAudioBufferCopyChannelMethodsOutOfBoundsSupport.testAudioBufferCopyChannelMethodsOutOfBoundsSupport), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);
const minimalOfflineAudioContextConstructor = (0, _minimalOfflineAudioContextConstructor.createMinimalOfflineAudioContextConstructor)(cacheTestResult, (0, _invalidStateError.createInvalidStateError), createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);
const offlineAudioContextConstructor = (0, _offlineAudioContextConstructor.createOfflineAudioContextConstructor)(baseAudioContextConstructor, cacheTestResult, (0, _invalidStateError.createInvalidStateError), createNativeOfflineAudioContext, startRendering);
const isAnyAudioContext = (0, _isAnyAudioContext.createIsAnyAudioContext)((0, _globals.CONTEXT_STORE), isNativeAudioContext);
const isAnyAudioNode = (0, _isAnyAudioNode.createIsAnyAudioNode)((0, _globals.AUDIO_NODE_STORE), isNativeAudioNode);
const isAnyAudioParam = (0, _isAnyAudioParam.createIsAnyAudioParam)((0, _globals.AUDIO_PARAM_STORE), isNativeAudioParam);
const isAnyOfflineAudioContext = (0, _isAnyOfflineAudioContext.createIsAnyOfflineAudioContext)((0, _globals.CONTEXT_STORE), isNativeOfflineAudioContext);
const isSupported = ()=>(0, _isSupportedPromise.createIsSupportedPromise)(cacheTestResult, (0, _testAudioBufferCopyChannelMethodsSubarraySupport.createTestAudioBufferCopyChannelMethodsSubarraySupport)(nativeOfflineAudioContextConstructor), (0, _testAudioContextCloseMethodSupport.createTestAudioContextCloseMethodSupport)(nativeAudioContextConstructor), (0, _testAudioContextDecodeAudioDataMethodTypeErrorSupport.createTestAudioContextDecodeAudioDataMethodTypeErrorSupport)(nativeOfflineAudioContextConstructor), (0, _testAudioContextOptionsSupport.createTestAudioContextOptionsSupport)(nativeAudioContextConstructor), (0, _testAudioNodeConnectMethodSupport.createTestAudioNodeConnectMethodSupport)(nativeOfflineAudioContextConstructor), (0, _testAudioWorkletProcessorNoOutputsSupport.createTestAudioWorkletProcessorNoOutputsSupport)(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), (0, _testChannelMergerNodeChannelCountSupport.createTestChannelMergerNodeChannelCountSupport)(nativeOfflineAudioContextConstructor), (0, _testConstantSourceNodeAccurateSchedulingSupport.createTestConstantSourceNodeAccurateSchedulingSupport)(nativeOfflineAudioContextConstructor), (0, _testConvolverNodeBufferReassignabilitySupport.createTestConvolverNodeBufferReassignabilitySupport)(nativeOfflineAudioContextConstructor), (0, _testConvolverNodeChannelCountSupport.createTestConvolverNodeChannelCountSupport)(nativeOfflineAudioContextConstructor), (0, _testDomExceptionConstructorSupport.testDomExceptionConstructorSupport), (0, _testIsSecureContextSupport.createTestIsSecureContextSupport)(window), (0, _testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport.createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)(nativeAudioContextConstructor), (0, _testStereoPannerNodeDefaultValueSupport.createTestStereoPannerNodeDefaultValueSupport)(nativeOfflineAudioContextConstructor), (0, _testTransferablesSupport.testTransferablesSupport));

},{"automation-events":"kxaFt","./factories/abort-error":"68YNi","./factories/add-active-input-connection-to-audio-node":"hWkkO","./factories/add-audio-node-connections":"kbJuF","./factories/add-audio-param-connections":"yMuUk","./factories/add-audio-worklet-module":"78VC1","./factories/add-connection-to-audio-node":"euwNB","./factories/add-passive-input-connection-to-audio-node":"6IMYe","./factories/add-silent-connection":"67JSI","./factories/add-unrendered-audio-worklet-node":"8f4Y4","./factories/analyser-node-constructor":"3Jxni","./factories/analyser-node-renderer-factory":"6tQEB","./factories/audio-buffer-constructor":"dszIU","./factories/audio-buffer-source-node-constructor":"8EaZc","./factories/audio-buffer-source-node-renderer-factory":"610ix","./factories/audio-context-constructor":"atX0V","./factories/audio-destination-node-constructor":"4BIeJ","./factories/audio-destination-node-renderer-factory":"gunYG","./factories/audio-listener-factory":"1a6Qa","./factories/audio-node-constructor":"wwDLJ","./factories/audio-param-factory":"iMx7e","./factories/audio-param-renderer":"9IbWX","./factories/audio-worklet-node-constructor":"2Gmbn","./factories/audio-worklet-node-renderer-factory":"kfvDm","./factories/base-audio-context-constructor":"1Qln6","./factories/biquad-filter-node-constructor":"2ojuk","./factories/biquad-filter-node-renderer-factory":"hC3lP","./factories/cache-test-result":"jAn86","./factories/channel-merger-node-constructor":"5qPp9","./factories/channel-merger-node-renderer-factory":"4213f","./factories/channel-splitter-node-constructor":"kBxxA","./factories/channel-splitter-node-renderer-factory":"eO46O","./factories/connect-audio-param":"hqUP2","./factories/connect-multiple-outputs":"8jyft","./factories/connected-native-audio-buffer-source-node-factory":"hT5R1","./factories/constant-source-node-constructor":"6BBM1","./factories/constant-source-node-renderer-factory":"kDcHK","./factories/convert-number-to-unsigned-long":"1xC44","./factories/convolver-node-constructor":"kcFQc","./factories/convolver-node-renderer-factory":"kmgKW","./factories/create-native-offline-audio-context":"7737w","./factories/data-clone-error":"h0Bd5","./factories/decode-audio-data":"foJCq","./factories/decrement-cycle-counter":"jg4nh","./factories/delay-node-constructor":"byamz","./factories/delay-node-renderer-factory":"1NO5F","./factories/delete-active-input-connection-to-audio-node":"3FRri","./factories/delete-unrendered-audio-worklet-node":"fNWyx","./factories/detect-cycles":"8VyTi","./factories/disconnect-multiple-outputs":"jaNPz","./factories/dynamics-compressor-node-constructor":"1G29t","./factories/dynamics-compressor-node-renderer-factory":"pqFDv","./factories/encoding-error":"2alua","./factories/evaluate-source":"8CpjU","./factories/event-target-constructor":"gjDDq","./factories/expose-current-frame-and-current-time":"gNRs4","./factories/fetch-source":"h4onu","./factories/gain-node-constructor":"9a9Vk","./factories/gain-node-renderer-factory":"itz3A","./factories/get-active-audio-worklet-node-inputs":"dg8Gd","./factories/get-audio-node-renderer":"k8CrE","./factories/get-audio-node-tail-time":"cKCqS","./factories/get-audio-param-renderer":"k8fN6","./factories/get-backup-offline-audio-context":"1vR8R","./factories/get-native-context":"2Ytji","./factories/get-or-create-backup-offline-audio-context":"kLefC","./factories/get-unrendered-audio-worklet-nodes":"jI5Mi","./factories/iir-filter-node-constructor":"3jZOn","./factories/iir-filter-node-renderer-factory":"eyGMp","./factories/increment-cycle-counter-factory":"eIT5f","./factories/index-size-error":"iKVgV","./factories/invalid-access-error":"u7Sql","./factories/invalid-state-error":"diSZR","./factories/is-any-audio-context":"eHxqH","./factories/is-any-audio-node":"tjPuV","./factories/is-any-audio-param":"hncwE","./factories/is-any-offline-audio-context":"evgeG","./factories/is-native-audio-context":"ctipH","./factories/is-native-audio-node":"6XefY","./factories/is-native-audio-param":"8zo2U","./factories/is-native-context":"bqWH8","./factories/is-native-offline-audio-context":"absQf","./factories/is-secure-context":"c4RLa","./factories/is-supported-promise":"lB7Vh","./factories/media-element-audio-source-node-constructor":"gvVfX","./factories/media-stream-audio-destination-node-constructor":"76MLr","./factories/media-stream-audio-source-node-constructor":"7y92U","./factories/media-stream-track-audio-source-node-constructor":"eubAO","./factories/minimal-audio-context-constructor":"2Rukp","./factories/minimal-base-audio-context-constructor":"8u4st","./factories/minimal-offline-audio-context-constructor":"9yhkF","./factories/monitor-connections":"eUd0z","./factories/native-analyser-node-factory":"eAIIV","./factories/native-audio-buffer-constructor":"2XJiC","./factories/native-audio-buffer-source-node-factory":"fj4aF","./factories/native-audio-context-constructor":"awJaY","./factories/native-audio-destination-node":"l61vA","./factories/native-audio-worklet-node-constructor":"eKntr","./factories/native-audio-worklet-node-factory":"3bxEK","./factories/native-audio-worklet-node-faker-factory":"8dSFA","./factories/native-biquad-filter-node":"Apyjl","./factories/native-channel-merger-node-factory":"90fMG","./factories/native-channel-splitter-node":"8Z3X6","./factories/native-constant-source-node-factory":"aZ9aQ","./factories/native-constant-source-node-faker-factory":"Jx9uB","./factories/native-convolver-node-factory":"1os2P","./factories/native-delay-node":"76TcR","./factories/native-dynamics-compressor-node-factory":"63iaU","./factories/native-gain-node":"k23ba","./factories/native-iir-filter-node-factory":"kpXKu","./factories/native-iir-filter-node-faker-factory":"3kywH","./factories/native-media-element-audio-source-node":"g804o","./factories/native-media-stream-audio-destination-node":"5Nm8V","./factories/native-media-stream-audio-source-node":"cc1Vv","./factories/native-media-stream-track-audio-source-node-factory":"833HX","./factories/native-offline-audio-context-constructor":"clMxf","./factories/native-oscillator-node-factory":"gRc8o","./factories/native-panner-node-factory":"aE8DJ","./factories/native-panner-node-faker-factory":"doyFo","./factories/native-periodic-wave-factory":"hMgnX","./factories/native-script-processor-node":"63kc1","./factories/native-stereo-panner-node-factory":"46iGP","./factories/native-stereo-panner-node-faker-factory":"3tpsg","./factories/native-wave-shaper-node-factory":"fYxR5","./factories/native-wave-shaper-node-faker-factory":"48VV2","./factories/not-supported-error":"fLKAR","./factories/offline-audio-context-constructor":"9iLZs","./factories/oscillator-node-constructor":"cS1X5","./factories/oscillator-node-renderer-factory":"21Ubp","./factories/panner-node-constructor":"3pCGA","./factories/panner-node-renderer-factory":"dmoFH","./factories/periodic-wave-constructor":"lQWxF","./factories/render-automation":"beVBx","./factories/render-inputs-of-audio-node":"lHwkb","./factories/render-inputs-of-audio-param":"h2qZT","./factories/render-native-offline-audio-context":"iIK4Q","./factories/set-active-audio-worklet-node-inputs":"3VTsP","./factories/set-audio-node-tail-time":"hzHas","./factories/start-rendering":"ebqUV","./factories/stereo-panner-node-constructor":"gc2rO","./factories/stereo-panner-node-renderer-factory":"dAPan","./factories/test-audio-buffer-constructor-support":"60xJt","./factories/test-audio-buffer-copy-channel-methods-subarray-support":"fDZlv","./factories/test-audio-context-close-method-support":"k9nLI","./factories/test-audio-context-decode-audio-data-method-type-error-support":"8SGZm","./factories/test-audio-context-options-support":"5NBS1","./factories/test-audio-node-connect-method-support":"4ontN","./factories/test-audio-worklet-processor-no-outputs-support":"baMs2","./factories/test-audio-worklet-processor-post-message-support":"47G9e","./factories/test-channel-merger-node-channel-count-support":"X0MIV","./factories/test-constant-source-node-accurate-scheduling-support":"dl03N","./factories/test-convolver-node-buffer-reassignability-support":"5yl0D","./factories/test-convolver-node-channel-count-support":"gM3PR","./factories/test-is-secure-context-support":"amjh7","./factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support":"bfbzD","./factories/test-offline-audio-context-current-time-support":"5xrL5","./factories/test-stereo-panner-node-default-value-support":"eG97H","./factories/unknown-error":"Vr3Lh","./factories/wave-shaper-node-constructor":"1yyiX","./factories/wave-shaper-node-renderer-factory":"8vhCu","./factories/window":"dEK7L","./factories/wrap-audio-buffer-copy-channel-methods":"bNAxX","./factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds":"4XNvu","./factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer":"ckaEw","./factories/wrap-channel-merger-node":"8txzE","./globals":"j1ar4","./helpers/connect-native-audio-node-to-native-audio-node":"he3cM","./helpers/disconnect-native-audio-node-from-native-audio-node":"766cG","./helpers/get-audio-node-connections":"huPRp","./helpers/get-audio-param-connections":"hfbFD","./helpers/get-event-listeners-of-audio-node":"hrKEN","./helpers/get-first-sample":"lprXE","./helpers/get-native-audio-node":"f9hIK","./helpers/get-native-audio-param":"fLdpl","./helpers/get-value-for-key":"kJr16","./helpers/insert-element-in-set":"917M8","./helpers/is-active-audio-node":"j8Y4t","./helpers/is-dc-curve":"1AlFj","./helpers/is-part-of-a-cycle":"jcP4P","./helpers/is-passive-audio-node":"1eGb9","./helpers/overwrite-accessors":"hfSZZ","./helpers/pick-element-from-set":"9U2YJ","./helpers/sanitize-audio-worklet-node-options":"T7Ytc","./helpers/sanitize-channel-splitter-options":"eYcVh","./helpers/sanitize-periodic-wave-options":"2uUdY","./helpers/set-value-at-time-until-possible":"U9WdO","./helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support":"bwZhm","./helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support":"d1Bp3","./helpers/test-audio-buffer-source-node-start-method-offset-clamping-support":"ljLh5","./helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support":"1AlzI","./helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support":"iXOCC","./helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support":"6HMSy","./helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support":"3eDpC","./helpers/test-audio-worklet-node-options-clonability":"cKeDz","./helpers/test-dom-exception-constructor-support":"4CH46","./helpers/test-promise-support":"4hyPB","./helpers/test-transferables-support":"5nYF9","./helpers/wrap-audio-buffer-source-node-start-method-offset-clamping":"cWWvc","./helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls":"fZgIG","./helpers/wrap-event-listener":"gbqed","./interfaces/index":"bFhB6","./types/index":"6tI3M","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kxaFt":[function(require,module,exports) {
(function(global, factory) {
    factory(exports, require("6b9f2442ef6fdd24"), require("5f22b44ee4228890"), require("a5970f48809bf08a"));
})(this, function(exports1, _slicedToArray, _classCallCheck, _createClass) {
    "use strict";
    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {
        return {
            endTime: endTime,
            insertTime: insertTime,
            type: "exponentialRampToValue",
            value: value
        };
    };
    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {
        return {
            endTime: endTime,
            insertTime: insertTime,
            type: "linearRampToValue",
            value: value
        };
    };
    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {
        return {
            startTime: startTime,
            type: "setValue",
            value: value
        };
    };
    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {
        return {
            duration: duration,
            startTime: startTime,
            type: "setValueCurve",
            values: values
        };
    };
    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {
        var startTime = _ref.startTime, target = _ref.target, timeConstant = _ref.timeConstant;
        return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);
    };
    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {
        return automationEvent.type === "exponentialRampToValue";
    };
    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {
        return automationEvent.type === "linearRampToValue";
    };
    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {
        return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);
    };
    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {
        return automationEvent.type === "setValue";
    };
    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {
        return automationEvent.type === "setValueCurve";
    };
    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {
        var automationEvent = automationEvents[index];
        return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);
    };
    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {
        return currentAutomationEvent === undefined ? [
            nextAutomationEvent.insertTime,
            defaultValue
        ] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [
            currentAutomationEvent.endTime,
            currentAutomationEvent.value
        ] : isSetValueAutomationEvent(currentAutomationEvent) ? [
            currentAutomationEvent.startTime,
            currentAutomationEvent.value
        ] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [
            currentAutomationEvent.startTime + currentAutomationEvent.duration,
            currentAutomationEvent.values[currentAutomationEvent.values.length - 1]
        ] : [
            currentAutomationEvent.startTime,
            getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)
        ];
    };
    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {
        return automationEvent.type === "cancelAndHold";
    };
    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {
        return automationEvent.type === "cancelScheduledValues";
    };
    var getEventTime = function getEventTime(automationEvent) {
        if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) return automationEvent.cancelTime;
        if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) return automationEvent.endTime;
        return automationEvent.startTime;
    };
    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {
        var endTime = _ref.endTime, value = _ref.value;
        if (valueAtStartTime === value) return value;
        if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));
        return 0;
    };
    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {
        var endTime = _ref.endTime, value = _ref.value;
        return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);
    };
    var interpolateValue = function interpolateValue(values, theoreticIndex) {
        var lowerIndex = Math.floor(theoreticIndex);
        var upperIndex = Math.ceil(theoreticIndex);
        if (lowerIndex === upperIndex) return values[lowerIndex];
        return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];
    };
    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {
        var duration = _ref.duration, startTime = _ref.startTime, values = _ref.values;
        var theoreticIndex = (time - startTime) / duration * (values.length - 1);
        return interpolateValue(values, theoreticIndex);
    };
    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {
        return automationEvent.type === "setTarget";
    };
    var AutomationEventList = /*#__PURE__*/ function(_Symbol$iterator) {
        function AutomationEventList(defaultValue) {
            _classCallCheck(this, AutomationEventList);
            this._automationEvents = [];
            this._currenTime = 0;
            this._defaultValue = defaultValue;
        }
        _createClass(AutomationEventList, [
            {
                key: _Symbol$iterator,
                value: function value() {
                    return this._automationEvents[Symbol.iterator]();
                }
            },
            {
                key: "add",
                value: function add(automationEvent) {
                    var eventTime = getEventTime(automationEvent);
                    if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {
                        var index = this._automationEvents.findIndex(function(currentAutomationEvent) {
                            if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;
                            return getEventTime(currentAutomationEvent) >= eventTime;
                        });
                        var removedAutomationEvent = this._automationEvents[index];
                        if (index !== -1) this._automationEvents = this._automationEvents.slice(0, index);
                        if (isCancelAndHoldAutomationEvent(automationEvent)) {
                            var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];
                            if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {
                                if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) throw new Error("The internal list is malformed.");
                                var startTime = lastAutomationEvent === undefined ? removedAutomationEvent.insertTime : isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);
                                var startValue = lastAutomationEvent === undefined ? this._defaultValue : isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;
                                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);
                                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);
                                this._automationEvents.push(truncatedAutomationEvent);
                            }
                            if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));
                            if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {
                                var duration = eventTime - lastAutomationEvent.startTime;
                                var ratio = (lastAutomationEvent.values.length - 1) / lastAutomationEvent.duration;
                                var length = Math.max(2, 1 + Math.ceil(duration * ratio));
                                var fraction = duration / (length - 1) * ratio;
                                var values = lastAutomationEvent.values.slice(0, length);
                                if (fraction < 1) for(var i = 1; i < length; i += 1){
                                    var factor = fraction * i % 1;
                                    values[i] = lastAutomationEvent.values[i - 1] * (1 - factor) + lastAutomationEvent.values[i] * factor;
                                }
                                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(values, lastAutomationEvent.startTime, duration);
                            }
                        }
                    } else {
                        var _index = this._automationEvents.findIndex(function(currentAutomationEvent) {
                            return getEventTime(currentAutomationEvent) > eventTime;
                        });
                        var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];
                        if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) return false;
                        var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;
                        if (_index === -1) this._automationEvents.push(persistentAutomationEvent);
                        else {
                            if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) return false;
                            this._automationEvents.splice(_index, 0, persistentAutomationEvent);
                        }
                    }
                    return true;
                }
            },
            {
                key: "flush",
                value: function flush(time) {
                    var index = this._automationEvents.findIndex(function(currentAutomationEvent) {
                        return getEventTime(currentAutomationEvent) > time;
                    });
                    if (index > 1) {
                        var remainingAutomationEvents = this._automationEvents.slice(index - 1);
                        var firstRemainingAutomationEvent = remainingAutomationEvents[0];
                        if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));
                        this._automationEvents = remainingAutomationEvents;
                    }
                }
            },
            {
                key: "getValue",
                value: function getValue(time) {
                    if (this._automationEvents.length === 0) return this._defaultValue;
                    var indexOfNextEvent = this._automationEvents.findIndex(function(automationEvent) {
                        return getEventTime(automationEvent) > time;
                    });
                    var nextAutomationEvent = this._automationEvents[indexOfNextEvent];
                    var indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;
                    var currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];
                    if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);
                    if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) return currentAutomationEvent.value;
                    if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {
                        if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) return getValueCurveValueAtTime(time, currentAutomationEvent);
                        return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];
                    }
                    if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) return currentAutomationEvent.value;
                    if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {
                        var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue), _getEndTimeAndValueOf2 = _slicedToArray(_getEndTimeAndValueOf, 2), startTime = _getEndTimeAndValueOf2[0], value = _getEndTimeAndValueOf2[1];
                        return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);
                    }
                    if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {
                        var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue), _getEndTimeAndValueOf4 = _slicedToArray(_getEndTimeAndValueOf3, 2), _startTime = _getEndTimeAndValueOf4[0], _value = _getEndTimeAndValueOf4[1];
                        return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);
                    }
                    return this._defaultValue;
                }
            }
        ]);
        return AutomationEventList;
    }(Symbol.iterator);
    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {
        return {
            cancelTime: cancelTime,
            type: "cancelAndHold"
        };
    };
    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {
        return {
            cancelTime: cancelTime,
            type: "cancelScheduledValues"
        };
    };
    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {
        return {
            endTime: endTime,
            type: "exponentialRampToValue",
            value: value
        };
    };
    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {
        return {
            endTime: endTime,
            type: "linearRampToValue",
            value: value
        };
    };
    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {
        return {
            startTime: startTime,
            target: target,
            timeConstant: timeConstant,
            type: "setTarget"
        };
    };
    exports1.AutomationEventList = AutomationEventList;
    exports1.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;
    exports1.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;
    exports1.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;
    exports1.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;
    exports1.createSetTargetAutomationEvent = createSetTargetAutomationEvent;
    exports1.createSetValueAutomationEvent = createSetValueAutomationEvent;
    exports1.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;
});

},{"6b9f2442ef6fdd24":"6AJmz","5f22b44ee4228890":"3nRml","a5970f48809bf08a":"2yzPp"}],"6AJmz":[function(require,module,exports) {
var arrayWithHoles = require("a3af206dbd14b1b5");
var iterableToArrayLimit = require("c109e0e3b1a7ef05");
var unsupportedIterableToArray = require("6782568c4383bd49");
var nonIterableRest = require("1e06d43f4bd6e532");
function _slicedToArray(arr, i) {
    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}
module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"a3af206dbd14b1b5":"5CPOx","c109e0e3b1a7ef05":"2B9nq","6782568c4383bd49":"cFxnT","1e06d43f4bd6e532":"9O5RF"}],"5CPOx":[function(require,module,exports) {
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"2B9nq":[function(require,module,exports) {
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"cFxnT":[function(require,module,exports) {
var arrayLikeToArray = require("f8ccc0353f5f3746");
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}
module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"f8ccc0353f5f3746":"2QyYi"}],"2QyYi":[function(require,module,exports) {
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"9O5RF":[function(require,module,exports) {
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"3nRml":[function(require,module,exports) {
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"2yzPp":[function(require,module,exports) {
var toPropertyKey = require("b03a9e1e96a7e901");
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"b03a9e1e96a7e901":"5P3X5"}],"5P3X5":[function(require,module,exports) {
var _typeof = require("a14bd529aa4ac1cd")["default"];
var toPrimitive = require("2713647ce51d8c75");
function _toPropertyKey(arg) {
    var key = toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
}
module.exports = _toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"a14bd529aa4ac1cd":"jgQjt","2713647ce51d8c75":"eJCHQ"}],"jgQjt":[function(require,module,exports) {
function _typeof(o) {
    "@babel/helpers - typeof";
    return module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof(o);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"eJCHQ":[function(require,module,exports) {
var _typeof = require("e0211298897b2d31")["default"];
function _toPrimitive(input, hint) {
    if (_typeof(input) !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
}
module.exports = _toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"e0211298897b2d31":"jgQjt"}],"68YNi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAbortError", ()=>createAbortError);
const createAbortError = ()=>new DOMException("", "AbortError");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hWkkO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAddActiveInputConnectionToAudioNode", ()=>createAddActiveInputConnectionToAudioNode);
const createAddActiveInputConnectionToAudioNode = (insertElementInSet)=>{
    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates)=>{
        insertElementInSet(activeInputs[input], [
            source,
            output,
            eventListener
        ], (activeInputConnection)=>activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kbJuF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAddAudioNodeConnections", ()=>createAddAudioNodeConnections);
const createAddAudioNodeConnections = (audioNodeConnectionsStore)=>{
    return (audioNode, audioNodeRenderer, nativeAudioNode)=>{
        const activeInputs = [];
        for(let i = 0; i < nativeAudioNode.numberOfInputs; i += 1)activeInputs.push(new Set());
        audioNodeConnectionsStore.set(audioNode, {
            activeInputs,
            outputs: new Set(),
            passiveInputs: new WeakMap(),
            renderer: audioNodeRenderer
        });
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"yMuUk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAddAudioParamConnections", ()=>createAddAudioParamConnections);
const createAddAudioParamConnections = (audioParamConnectionsStore)=>{
    return (audioParam, audioParamRenderer)=>{
        audioParamConnectionsStore.set(audioParam, {
            activeInputs: new Set(),
            passiveInputs: new WeakMap(),
            renderer: audioParamRenderer
        });
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"78VC1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAddAudioWorkletModule", ()=>createAddAudioWorkletModule);
var _globals = require("../globals");
var _isConstructible = require("../helpers/is-constructible");
var _splitImportStatements = require("../helpers/split-import-statements");
const verifyParameterDescriptors = (parameterDescriptors)=>{
    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.");
};
const verifyProcessorCtor = (processorCtor)=>{
    if (!(0, _isConstructible.isConstructible)(processorCtor)) throw new TypeError("The given value for processorCtor should be a constructor.");
    if (processorCtor.prototype === null || typeof processorCtor.prototype !== "object") throw new TypeError("The given value for processorCtor should have a prototype.");
};
const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window)=>{
    let index = 0;
    return (context, moduleURL, options = {
        credentials: "omit"
    })=>{
        const resolvedRequestsOfContext = resolvedRequests.get(context);
        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) return Promise.resolve();
        const ongoingRequestsOfContext = ongoingRequests.get(context);
        if (ongoingRequestsOfContext !== undefined) {
            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);
            if (promiseOfOngoingRequest !== undefined) return promiseOfOngoingRequest;
        }
        const nativeContext = getNativeContext(context);
        // Bug #59: Safari does not implement the audioWorklet property.
        const promise = nativeContext.audioWorklet === undefined ? fetchSource(moduleURL).then(([source, absoluteUrl])=>{
            const [importStatements, sourceWithoutImportStatements] = (0, _splitImportStatements.splitImportStatements)(source, absoluteUrl);
            /*
                 * This is the unminified version of the code used below:
                 *
                 * ```js
                 * ${ importStatements };
                 * ((a, b) => {
                 *     (a[b] = a[b] || [ ]).push(
                 *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {
                 *             ${ sourceWithoutImportStatements }
                 *         }
                 *     );
                 * })(window, '_AWGS');
                 * ```
                 */ // tslint:disable-next-line:max-line-length
            const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}
})})(window,'_AWGS')`;
            // @todo Evaluating the given source code is a possible security problem.
            return evaluateSource(wrappedSource);
        }).then(()=>{
            const evaluateAudioWorkletGlobalScope = window._AWGS.pop();
            if (evaluateAudioWorkletGlobalScope === undefined) // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.
            throw new SyntaxError();
            exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, ()=>evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {
                }, undefined, (name, processorCtor)=>{
                    if (name.trim() === "") throw createNotSupportedError();
                    const nodeNameToProcessorConstructorMap = (0, _globals.NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS).get(nativeContext);
                    if (nodeNameToProcessorConstructorMap !== undefined) {
                        if (nodeNameToProcessorConstructorMap.has(name)) throw createNotSupportedError();
                        verifyProcessorCtor(processorCtor);
                        verifyParameterDescriptors(processorCtor.parameterDescriptors);
                        nodeNameToProcessorConstructorMap.set(name, processorCtor);
                    } else {
                        verifyProcessorCtor(processorCtor);
                        verifyParameterDescriptors(processorCtor.parameterDescriptors);
                        (0, _globals.NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS).set(nativeContext, new Map([
                            [
                                name,
                                processorCtor
                            ]
                        ]));
                    }
                }, nativeContext.sampleRate, undefined, undefined));
        }) : Promise.all([
            fetchSource(moduleURL),
            Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))
        ]).then(([[source, absoluteUrl], isSupportingPostMessage])=>{
            const currentIndex = index + 1;
            index = currentIndex;
            const [importStatements, sourceWithoutImportStatements] = (0, _splitImportStatements.splitImportStatements)(source, absoluteUrl);
            /*
                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.
                 *
                 * This is the unminified version of the code used below.
                 *
                 * ```js
                 * class extends AudioWorkletProcessor {
                 *
                 *     __buffers = new WeakSet();
                 *
                 *     constructor () {
                 *         super();
                 *
                 *         this.port.postMessage = ((postMessage) => {
                 *             return (message, transferables) => {
                 *                 const filteredTransferables = (transferables)
                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))
                 *                     : transferables;
                 *
                 *                 return postMessage.call(this.port, message, filteredTransferables);
                 *              };
                 *         })(this.port.postMessage);
                 *     }
                 * }
                 * ```
                 */ const patchedAudioWorkletProcessor = isSupportingPostMessage ? "AudioWorkletProcessor" : "class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}";
            /*
                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.
                 *
                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.
                 *
                 * Bug #190: Safari doesn't throw an error when loading an unparsable module.
                 *
                 * This is the unminified version of the code used below:
                 *
                 * ```js
                 * `${ importStatements };
                 * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }
                 * })(
                 *     ${ patchedAudioWorkletProcessor },
                 *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {
                 *
                 *         __collectBuffers = (array) => {
                 *             array.forEach((element) => this.__buffers.add(element.buffer));
                 *         };
                 *
                 *         process (inputs, outputs, parameters) {
                 *             inputs.forEach(this.__collectBuffers);
                 *             outputs.forEach(this.__collectBuffers);
                 *             this.__collectBuffers(Object.values(parameters));
                 *
                 *             return super.process(
                 *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),
                 *                 outputs,
                 *                 parameters
                 *             );
                 *         }
                 *
                 *     })
                 * );
                 *
                 * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{
                 *
                 *     process () {
                 *         return false;
                 *     }
                 *
                 * })`
                 * ```
                 */ const memberDefinition = isSupportingPostMessage ? "" : "__c = (a) => a.forEach(e=>this.__b.add(e.buffer));";
            const bufferRegistration = isSupportingPostMessage ? "" : "i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));";
            const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}
})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;
            const blob = new Blob([
                wrappedSource
            ], {
                type: "application/javascript; charset=utf-8"
            });
            const url = URL.createObjectURL(blob);
            return nativeContext.audioWorklet.addModule(url, options).then(()=>{
                if (isNativeOfflineAudioContext(nativeContext)) return nativeContext;
                // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.
                const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);
                return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(()=>backupOfflineAudioContext);
            }).then((nativeContextOrBackupOfflineAudioContext)=>{
                if (nativeAudioWorkletNodeConstructor === null) throw new SyntaxError();
                try {
                    // Bug #190: Safari doesn't throw an error when loading an unparsable module.
                    new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`); // tslint:disable-line:no-unused-expression
                } catch  {
                    throw new SyntaxError();
                }
            }).finally(()=>URL.revokeObjectURL(url));
        });
        if (ongoingRequestsOfContext === undefined) ongoingRequests.set(context, new Map([
            [
                moduleURL,
                promise
            ]
        ]));
        else ongoingRequestsOfContext.set(moduleURL, promise);
        promise.then(()=>{
            const updatedResolvedRequestsOfContext = resolvedRequests.get(context);
            if (updatedResolvedRequestsOfContext === undefined) resolvedRequests.set(context, new Set([
                moduleURL
            ]));
            else updatedResolvedRequestsOfContext.add(moduleURL);
        }).finally(()=>{
            const updatedOngoingRequestsOfContext = ongoingRequests.get(context);
            if (updatedOngoingRequestsOfContext !== undefined) updatedOngoingRequestsOfContext.delete(moduleURL);
        });
        return promise;
    };
};

},{"../globals":"j1ar4","../helpers/is-constructible":"8iOwk","../helpers/split-import-statements":"6hOa5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j1ar4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ACTIVE_AUDIO_NODE_STORE", ()=>ACTIVE_AUDIO_NODE_STORE);
parcelHelpers.export(exports, "AUDIO_NODE_CONNECTIONS_STORE", ()=>AUDIO_NODE_CONNECTIONS_STORE);
parcelHelpers.export(exports, "AUDIO_NODE_STORE", ()=>AUDIO_NODE_STORE);
parcelHelpers.export(exports, "AUDIO_PARAM_CONNECTIONS_STORE", ()=>AUDIO_PARAM_CONNECTIONS_STORE);
parcelHelpers.export(exports, "AUDIO_PARAM_STORE", ()=>AUDIO_PARAM_STORE);
parcelHelpers.export(exports, "CONTEXT_STORE", ()=>CONTEXT_STORE);
parcelHelpers.export(exports, "EVENT_LISTENERS", ()=>EVENT_LISTENERS);
parcelHelpers.export(exports, "CYCLE_COUNTERS", ()=>CYCLE_COUNTERS);
parcelHelpers.export(exports, "NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS", ()=>NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS);
parcelHelpers.export(exports, "NODE_TO_PROCESSOR_MAPS", ()=>NODE_TO_PROCESSOR_MAPS);
const ACTIVE_AUDIO_NODE_STORE = new WeakSet();
const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();
const AUDIO_NODE_STORE = new WeakMap();
const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();
const AUDIO_PARAM_STORE = new WeakMap();
const CONTEXT_STORE = new WeakMap();
const EVENT_LISTENERS = new WeakMap();
const CYCLE_COUNTERS = new WeakMap();
const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();
const NODE_TO_PROCESSOR_MAPS = new WeakMap();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8iOwk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isConstructible", ()=>isConstructible);
const handler = {
    construct () {
        return handler;
    }
};
const isConstructible = (constructible)=>{
    try {
        const proxy = new Proxy(constructible, handler);
        new proxy(); // tslint:disable-line:no-unused-expression
    } catch  {
        return false;
    }
    return true;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6hOa5":[function(require,module,exports) {
/*
 * This massive regex tries to cover all the following cases.
 *
 * import './path';
 * import defaultImport from './path';
 * import { namedImport } from './path';
 * import { namedImport as renamendImport } from './path';
 * import * as namespaceImport from './path';
 * import defaultImport, { namedImport } from './path';
 * import defaultImport, { namedImport as renamendImport } from './path';
 * import defaultImport, * as namespaceImport from './path';
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "splitImportStatements", ()=>splitImportStatements);
const IMPORT_STATEMENT_REGEX = /^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/; // tslint:disable-line:max-line-length
const splitImportStatements = (source, url)=>{
    const importStatements = [];
    let sourceWithoutImportStatements = source.replace(/^[\s]+/, "");
    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);
    while(result !== null){
        const unresolvedUrl = result[1].slice(1, -1);
        const importStatementWithResolvedUrl = result[0].replace(/([\s]+)?;?$/, "").replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());
        importStatements.push(importStatementWithResolvedUrl);
        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\s]+/, "");
        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);
    }
    return [
        importStatements.join(";"),
        sourceWithoutImportStatements
    ];
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"euwNB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAddConnectionToAudioNode", ()=>createAddConnectionToAudioNode);
var _deletePassiveInputConnectionToAudioNode = require("../helpers/delete-passive-input-connection-to-audio-node");
var _setInternalStateToActive = require("../helpers/set-internal-state-to-active");
var _setInternalStateToPassiveWhenNecessary = require("../helpers/set-internal-state-to-passive-when-necessary");
const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode)=>{
    const tailTimeTimeoutIds = new WeakMap();
    return (source, destination, output, input, isOffline)=>{
        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);
        const { outputs } = getAudioNodeConnections(source);
        const eventListeners = getEventListenersOfAudioNode(source);
        const eventListener = (isActive)=>{
            const nativeDestinationAudioNode = getNativeAudioNode(destination);
            const nativeSourceAudioNode = getNativeAudioNode(source);
            if (isActive) {
                const partialConnection = (0, _deletePassiveInputConnectionToAudioNode.deletePassiveInputConnectionToAudioNode)(passiveInputs, source, output, input);
                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);
                if (!isOffline && !isPartOfACycle(source)) connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);
                if (isPassiveAudioNode(destination)) (0, _setInternalStateToActive.setInternalStateToActive)(destination);
            } else {
                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);
                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);
                if (!isOffline && !isPartOfACycle(source)) disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);
                const tailTime = getAudioNodeTailTime(destination);
                if (tailTime === 0) {
                    if (isActiveAudioNode(destination)) (0, _setInternalStateToPassiveWhenNecessary.setInternalStateToPassiveWhenNecessary)(destination, activeInputs);
                } else {
                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);
                    if (tailTimeTimeoutId !== undefined) clearTimeout(tailTimeTimeoutId);
                    tailTimeTimeoutIds.set(destination, setTimeout(()=>{
                        if (isActiveAudioNode(destination)) (0, _setInternalStateToPassiveWhenNecessary.setInternalStateToPassiveWhenNecessary)(destination, activeInputs);
                    }, tailTime * 1000));
                }
            }
        };
        if (insertElementInSet(outputs, [
            destination,
            output,
            input
        ], (outputConnection)=>outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {
            eventListeners.add(eventListener);
            if (isActiveAudioNode(source)) addActiveInputConnectionToAudioNode(activeInputs, source, [
                output,
                input,
                eventListener
            ], true);
            else addPassiveInputConnectionToAudioNode(passiveInputs, input, [
                source,
                output,
                eventListener
            ], true);
            return true;
        }
        return false;
    };
};

},{"../helpers/delete-passive-input-connection-to-audio-node":"6FBGr","../helpers/set-internal-state-to-active":"gc0b0","../helpers/set-internal-state-to-passive-when-necessary":"5zVeT","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6FBGr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "deletePassiveInputConnectionToAudioNode", ()=>deletePassiveInputConnectionToAudioNode);
var _getValueForKey = require("./get-value-for-key");
var _pickElementFromSet = require("./pick-element-from-set");
const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input)=>{
    const passiveInputConnections = (0, _getValueForKey.getValueForKey)(passiveInputs, source);
    const matchingConnection = (0, _pickElementFromSet.pickElementFromSet)(passiveInputConnections, (passiveInputConnection)=>passiveInputConnection[0] === output && passiveInputConnection[1] === input);
    if (passiveInputConnections.size === 0) passiveInputs.delete(source);
    return matchingConnection;
};

},{"./get-value-for-key":"kJr16","./pick-element-from-set":"9U2YJ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kJr16":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getValueForKey", ()=>getValueForKey);
const getValueForKey = (map, key)=>{
    const value = map.get(key);
    if (value === undefined) throw new Error("A value with the given key could not be found.");
    return value;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9U2YJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "pickElementFromSet", ()=>pickElementFromSet);
const pickElementFromSet = (set, predicate)=>{
    const matchingElements = Array.from(set).filter(predicate);
    if (matchingElements.length > 1) throw Error("More than one element was found.");
    if (matchingElements.length === 0) throw Error("No element was found.");
    const [matchingElement] = matchingElements;
    set.delete(matchingElement);
    return matchingElement;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gc0b0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setInternalStateToActive", ()=>setInternalStateToActive);
var _globals = require("../globals");
var _getEventListenersOfAudioNode = require("./get-event-listeners-of-audio-node");
const setInternalStateToActive = (audioNode)=>{
    if ((0, _globals.ACTIVE_AUDIO_NODE_STORE).has(audioNode)) throw new Error("The AudioNode is already stored.");
    (0, _globals.ACTIVE_AUDIO_NODE_STORE).add(audioNode);
    (0, _getEventListenersOfAudioNode.getEventListenersOfAudioNode)(audioNode).forEach((eventListener)=>eventListener(true));
};

},{"../globals":"j1ar4","./get-event-listeners-of-audio-node":"hrKEN","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hrKEN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getEventListenersOfAudioNode", ()=>getEventListenersOfAudioNode);
var _globals = require("../globals");
var _getValueForKey = require("./get-value-for-key");
const getEventListenersOfAudioNode = (audioNode)=>{
    return (0, _getValueForKey.getValueForKey)((0, _globals.EVENT_LISTENERS), audioNode);
};

},{"../globals":"j1ar4","./get-value-for-key":"kJr16","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5zVeT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setInternalStateToPassiveWhenNecessary", ()=>setInternalStateToPassiveWhenNecessary);
var _audioWorkletNode = require("../guards/audio-worklet-node");
var _setInternalStateToPassive = require("./set-internal-state-to-passive");
const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs)=>{
    if (!(0, _audioWorkletNode.isAudioWorkletNode)(audioNode) && activeInputs.every((connections)=>connections.size === 0)) (0, _setInternalStateToPassive.setInternalStateToPassive)(audioNode);
};

},{"../guards/audio-worklet-node":"fwNup","./set-internal-state-to-passive":"1Xtwa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fwNup":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isAudioWorkletNode", ()=>isAudioWorkletNode);
const isAudioWorkletNode = (audioNode)=>{
    return "port" in audioNode;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1Xtwa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setInternalStateToPassive", ()=>setInternalStateToPassive);
var _globals = require("../globals");
var _getEventListenersOfAudioNode = require("./get-event-listeners-of-audio-node");
const setInternalStateToPassive = (audioNode)=>{
    if (!(0, _globals.ACTIVE_AUDIO_NODE_STORE).has(audioNode)) throw new Error("The AudioNode is not stored.");
    (0, _globals.ACTIVE_AUDIO_NODE_STORE).delete(audioNode);
    (0, _getEventListenersOfAudioNode.getEventListenersOfAudioNode)(audioNode).forEach((eventListener)=>eventListener(false));
};

},{"../globals":"j1ar4","./get-event-listeners-of-audio-node":"hrKEN","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6IMYe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAddPassiveInputConnectionToAudioNode", ()=>createAddPassiveInputConnectionToAudioNode);
const createAddPassiveInputConnectionToAudioNode = (insertElementInSet)=>{
    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates)=>{
        const passiveInputConnections = passiveInputs.get(source);
        if (passiveInputConnections === undefined) passiveInputs.set(source, new Set([
            [
                output,
                input,
                eventListener
            ]
        ]));
        else insertElementInSet(passiveInputConnections, [
            output,
            input,
            eventListener
        ], (passiveInputConnection)=>passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"67JSI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAddSilentConnection", ()=>createAddSilentConnection);
const createAddSilentConnection = (createNativeGainNode)=>{
    return (nativeContext, nativeAudioScheduledSourceNode)=>{
        const nativeGainNode = createNativeGainNode(nativeContext, {
            channelCount: 1,
            channelCountMode: "explicit",
            channelInterpretation: "discrete",
            gain: 0
        });
        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);
        const disconnect = ()=>{
            nativeAudioScheduledSourceNode.removeEventListener("ended", disconnect);
            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);
            nativeGainNode.disconnect();
        };
        nativeAudioScheduledSourceNode.addEventListener("ended", disconnect);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8f4Y4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAddUnrenderedAudioWorkletNode", ()=>createAddUnrenderedAudioWorkletNode);
const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes)=>{
    return (nativeContext, audioWorkletNode)=>{
        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Jxni":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAnalyserNodeConstructor", ()=>createAnalyserNodeConstructor);
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: "max",
    channelInterpretation: "speakers",
    fftSize: 2048,
    maxDecibels: -30,
    minDecibels: -100,
    smoothingTimeConstant: 0.8
};
const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext)=>{
    return class AnalyserNode extends audionNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);
            const analyserNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null;
            super(context, false, nativeAnalyserNode, analyserNodeRenderer);
            this._nativeAnalyserNode = nativeAnalyserNode;
        }
        get fftSize() {
            return this._nativeAnalyserNode.fftSize;
        }
        set fftSize(value) {
            this._nativeAnalyserNode.fftSize = value;
        }
        get frequencyBinCount() {
            return this._nativeAnalyserNode.frequencyBinCount;
        }
        get maxDecibels() {
            return this._nativeAnalyserNode.maxDecibels;
        }
        set maxDecibels(value) {
            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.
            const maxDecibels = this._nativeAnalyserNode.maxDecibels;
            this._nativeAnalyserNode.maxDecibels = value;
            if (!(value > this._nativeAnalyserNode.minDecibels)) {
                this._nativeAnalyserNode.maxDecibels = maxDecibels;
                throw createIndexSizeError();
            }
        }
        get minDecibels() {
            return this._nativeAnalyserNode.minDecibels;
        }
        set minDecibels(value) {
            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.
            const minDecibels = this._nativeAnalyserNode.minDecibels;
            this._nativeAnalyserNode.minDecibels = value;
            if (!(this._nativeAnalyserNode.maxDecibels > value)) {
                this._nativeAnalyserNode.minDecibels = minDecibels;
                throw createIndexSizeError();
            }
        }
        get smoothingTimeConstant() {
            return this._nativeAnalyserNode.smoothingTimeConstant;
        }
        set smoothingTimeConstant(value) {
            this._nativeAnalyserNode.smoothingTimeConstant = value;
        }
        getByteFrequencyData(array) {
            this._nativeAnalyserNode.getByteFrequencyData(array);
        }
        getByteTimeDomainData(array) {
            this._nativeAnalyserNode.getByteTimeDomainData(array);
        }
        getFloatFrequencyData(array) {
            this._nativeAnalyserNode.getFloatFrequencyData(array);
        }
        getFloatTimeDomainData(array) {
            this._nativeAnalyserNode.getFloatTimeDomainData(array);
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6tQEB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAnalyserNodeRendererFactory", ()=>createAnalyserNodeRendererFactory);
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode)=>{
    return ()=>{
        const renderedNativeAnalyserNodes = new WeakMap();
        const createAnalyserNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeAnalyserNode = getNativeAudioNode(proxy);
            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeAnalyserNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeAnalyserNode, nativeOfflineAudioContext);
            if (!nativeAnalyserNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeAnalyserNode.channelCount,
                    channelCountMode: nativeAnalyserNode.channelCountMode,
                    channelInterpretation: nativeAnalyserNode.channelInterpretation,
                    fftSize: nativeAnalyserNode.fftSize,
                    maxDecibels: nativeAnalyserNode.maxDecibels,
                    minDecibels: nativeAnalyserNode.minDecibels,
                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant
                };
                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);
            }
            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode);
            return nativeAnalyserNode;
        };
        return {
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);
                if (renderedNativeAnalyserNode !== undefined) return Promise.resolve(renderedNativeAnalyserNode);
                return createAnalyserNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1Rud3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isOwnedByContext", ()=>isOwnedByContext);
const isOwnedByContext = (nativeAudioNode, nativeContext)=>{
    return nativeAudioNode.context === nativeContext;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dszIU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioBufferConstructor", ()=>createAudioBufferConstructor);
var _testAudioBufferCopyChannelMethodsOutOfBoundsSupport = require("../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support");
var _wrapAudioBufferGetChannelDataMethod = require("../helpers/wrap-audio-buffer-get-channel-data-method");
const DEFAULT_OPTIONS = {
    numberOfChannels: 1
};
const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds)=>{
    let nativeOfflineAudioContext = null;
    return class AudioBuffer {
        constructor(options){
            if (nativeOfflineAudioContextConstructor === null) throw new Error("Missing the native OfflineAudioContext constructor.");
            const { length, numberOfChannels, sampleRate } = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            if (nativeOfflineAudioContext === null) nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
            /*
             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the
             * factory function. But since Firefox also supports the constructor everything should be fine.
             */ const audioBuffer = nativeAudioBufferConstructor !== null && cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport) ? new nativeAudioBufferConstructor({
                length,
                numberOfChannels,
                sampleRate
            }) : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);
            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.
            if (audioBuffer.numberOfChannels === 0) throw createNotSupportedError();
            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.
            if (typeof audioBuffer.copyFromChannel !== "function") {
                wrapAudioBufferCopyChannelMethods(audioBuffer);
                (0, _wrapAudioBufferGetChannelDataMethod.wrapAudioBufferGetChannelDataMethod)(audioBuffer);
            // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.
            } else if (!cacheTestResult((0, _testAudioBufferCopyChannelMethodsOutOfBoundsSupport.testAudioBufferCopyChannelMethodsOutOfBoundsSupport), ()=>(0, _testAudioBufferCopyChannelMethodsOutOfBoundsSupport.testAudioBufferCopyChannelMethodsOutOfBoundsSupport)(audioBuffer))) wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
            audioBufferStore.add(audioBuffer);
            /*
             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native
             * (Offline)AudioContexts.
             */ return audioBuffer;
        }
        static [Symbol.hasInstance](instance) {
            return instance !== null && typeof instance === "object" && Object.getPrototypeOf(instance) === AudioBuffer.prototype || audioBufferStore.has(instance);
        }
    };
};

},{"../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support":"bwZhm","../helpers/wrap-audio-buffer-get-channel-data-method":"bXfRI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bwZhm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testAudioBufferCopyChannelMethodsOutOfBoundsSupport", ()=>testAudioBufferCopyChannelMethodsOutOfBoundsSupport);
const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer)=>{
    try {
        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);
    } catch  {
        return false;
    }
    return true;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bXfRI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "wrapAudioBufferGetChannelDataMethod", ()=>wrapAudioBufferGetChannelDataMethod);
var _indexSizeError = require("../factories/index-size-error");
const wrapAudioBufferGetChannelDataMethod = (audioBuffer)=>{
    audioBuffer.getChannelData = ((getChannelData)=>{
        return (channel)=>{
            try {
                return getChannelData.call(audioBuffer, channel);
            } catch (err) {
                if (err.code === 12) throw (0, _indexSizeError.createIndexSizeError)();
                throw err;
            }
        };
    })(audioBuffer.getChannelData);
};

},{"../factories/index-size-error":"iKVgV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iKVgV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIndexSizeError", ()=>createIndexSizeError);
const createIndexSizeError = ()=>new DOMException("", "IndexSizeError");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8EaZc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioBufferSourceNodeConstructor", ()=>createAudioBufferSourceNodeConstructor);
var _constants = require("../constants");
var _isActiveAudioNode = require("../helpers/is-active-audio-node");
var _setInternalStateToActive = require("../helpers/set-internal-state-to-active");
var _setInternalStateToPassive = require("../helpers/set-internal-state-to-passive");
const DEFAULT_OPTIONS = {
    buffer: null,
    channelCount: 2,
    channelCountMode: "max",
    channelInterpretation: "speakers",
    // Bug #149: Safari does not yet support the detune AudioParam.
    loop: false,
    loopEnd: 0,
    loopStart: 0,
    playbackRate: 1
};
const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener)=>{
    return class AudioBufferSourceNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const audioBufferSourceNodeRenderer = isOffline ? createAudioBufferSourceNodeRenderer() : null;
            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);
            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;
            this._isBufferNullified = false;
            this._isBufferSet = mergedOptions.buffer !== null;
            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;
            this._onended = null;
            // Bug #73: Safari does not export the correct values for maxValue and minValue.
            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, (0, _constants.MOST_POSITIVE_SINGLE_FLOAT), (0, _constants.MOST_NEGATIVE_SINGLE_FLOAT));
        }
        get buffer() {
            if (this._isBufferNullified) return null;
            return this._nativeAudioBufferSourceNode.buffer;
        }
        set buffer(value) {
            this._nativeAudioBufferSourceNode.buffer = value;
            // Bug #72: Only Chrome & Edge do not allow to reassign the buffer yet.
            if (value !== null) {
                if (this._isBufferSet) throw createInvalidStateError();
                this._isBufferSet = true;
            }
        }
        get loop() {
            return this._nativeAudioBufferSourceNode.loop;
        }
        set loop(value) {
            this._nativeAudioBufferSourceNode.loop = value;
        }
        get loopEnd() {
            return this._nativeAudioBufferSourceNode.loopEnd;
        }
        set loopEnd(value) {
            this._nativeAudioBufferSourceNode.loopEnd = value;
        }
        get loopStart() {
            return this._nativeAudioBufferSourceNode.loopStart;
        }
        set loopStart(value) {
            this._nativeAudioBufferSourceNode.loopStart = value;
        }
        get onended() {
            return this._onended;
        }
        set onended(value) {
            const wrappedListener = typeof value === "function" ? wrapEventListener(this, value) : null;
            this._nativeAudioBufferSourceNode.onended = wrappedListener;
            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;
            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
        }
        get playbackRate() {
            return this._playbackRate;
        }
        start(when = 0, offset = 0, duration) {
            this._nativeAudioBufferSourceNode.start(when, offset, duration);
            if (this._audioBufferSourceNodeRenderer !== null) this._audioBufferSourceNodeRenderer.start = duration === undefined ? [
                when,
                offset
            ] : [
                when,
                offset,
                duration
            ];
            if (this.context.state !== "closed") {
                (0, _setInternalStateToActive.setInternalStateToActive)(this);
                const resetInternalStateToPassive = ()=>{
                    this._nativeAudioBufferSourceNode.removeEventListener("ended", resetInternalStateToPassive);
                    if ((0, _isActiveAudioNode.isActiveAudioNode)(this)) (0, _setInternalStateToPassive.setInternalStateToPassive)(this);
                };
                this._nativeAudioBufferSourceNode.addEventListener("ended", resetInternalStateToPassive);
            }
        }
        stop(when = 0) {
            this._nativeAudioBufferSourceNode.stop(when);
            if (this._audioBufferSourceNodeRenderer !== null) this._audioBufferSourceNodeRenderer.stop = when;
        }
    };
};

},{"../constants":"au584","../helpers/is-active-audio-node":"j8Y4t","../helpers/set-internal-state-to-active":"gc0b0","../helpers/set-internal-state-to-passive":"1Xtwa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"au584":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MOST_NEGATIVE_SINGLE_FLOAT", ()=>MOST_NEGATIVE_SINGLE_FLOAT);
parcelHelpers.export(exports, "MOST_POSITIVE_SINGLE_FLOAT", ()=>MOST_POSITIVE_SINGLE_FLOAT);
const MOST_NEGATIVE_SINGLE_FLOAT = -340282346638528860000000000000000000000;
const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j8Y4t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isActiveAudioNode", ()=>isActiveAudioNode);
var _globals = require("../globals");
const isActiveAudioNode = (audioNode)=>(0, _globals.ACTIVE_AUDIO_NODE_STORE).has(audioNode);

},{"../globals":"j1ar4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"610ix":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioBufferSourceNodeRendererFactory", ()=>createAudioBufferSourceNodeRendererFactory);
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode)=>{
    return ()=>{
        const renderedNativeAudioBufferSourceNodes = new WeakMap();
        let start = null;
        let stop = null;
        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);
            /*
             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created
             * again.
             */ const nativeAudioBufferSourceNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeAudioBufferSourceNode, nativeOfflineAudioContext);
            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {
                const options = {
                    buffer: nativeAudioBufferSourceNode.buffer,
                    channelCount: nativeAudioBufferSourceNode.channelCount,
                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,
                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,
                    // Bug #149: Safari does not yet support the detune AudioParam.
                    loop: nativeAudioBufferSourceNode.loop,
                    loopEnd: nativeAudioBufferSourceNode.loopEnd,
                    loopStart: nativeAudioBufferSourceNode.loopStart,
                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value
                };
                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);
                if (start !== null) nativeAudioBufferSourceNode.start(...start);
                if (stop !== null) nativeAudioBufferSourceNode.stop(stop);
            }
            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);
            if (!nativeAudioBufferSourceNodeIsOwnedByContext) // Bug #149: Safari does not yet support the detune AudioParam.
            await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);
            else // Bug #149: Safari does not yet support the detune AudioParam.
            await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);
            return nativeAudioBufferSourceNode;
        };
        return {
            set start (value){
                start = value;
            },
            set stop (value){
                stop = value;
            },
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);
                if (renderedNativeAudioBufferSourceNode !== undefined) return Promise.resolve(renderedNativeAudioBufferSourceNode);
                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"atX0V":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioContextConstructor", ()=>createAudioContextConstructor);
var _deactivateAudioGraph = require("../helpers/deactivate-audio-graph");
var _isValidLatencyHint = require("../helpers/is-valid-latency-hint");
const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor)=>{
    return class AudioContext extends baseAudioContextConstructor {
        constructor(options = {}){
            if (nativeAudioContextConstructor === null) throw new Error("Missing the native AudioContext constructor.");
            let nativeAudioContext;
            try {
                nativeAudioContext = new nativeAudioContextConstructor(options);
            } catch (err) {
                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.
                if (err.code === 12 && err.message === "sampleRate is not in range") throw createNotSupportedError();
                throw err;
            }
            // Bug #131 Safari returns null when there are four other AudioContexts running already.
            if (nativeAudioContext === null) throw createUnknownError();
            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.
            if (!(0, _isValidLatencyHint.isValidLatencyHint)(options.latencyHint)) throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);
            // Bug #150 Safari does not support setting the sampleRate.
            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) throw createNotSupportedError();
            super(nativeAudioContext, 2);
            const { latencyHint } = options;
            const { sampleRate } = nativeAudioContext;
            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.
            this._baseLatency = typeof nativeAudioContext.baseLatency === "number" ? nativeAudioContext.baseLatency : latencyHint === "balanced" ? 512 / sampleRate : latencyHint === "interactive" || latencyHint === undefined ? 256 / sampleRate : latencyHint === "playback" ? 1024 / sampleRate : /*
                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a
                                   * ScriptProcessorNode.
                                   */ Math.max(2, Math.min(128, Math.round(latencyHint * sampleRate / 128))) * 128 / sampleRate;
            this._nativeAudioContext = nativeAudioContext;
            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.
            if (nativeAudioContextConstructor.name === "webkitAudioContext") {
                this._nativeGainNode = nativeAudioContext.createGain();
                this._nativeOscillatorNode = nativeAudioContext.createOscillator();
                this._nativeGainNode.gain.value = 1e-37;
                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);
                this._nativeOscillatorNode.start();
            } else {
                this._nativeGainNode = null;
                this._nativeOscillatorNode = null;
            }
            this._state = null;
            /*
             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes
             * to 'running'.
             */ if (nativeAudioContext.state === "running") {
                this._state = "suspended";
                const revokeState = ()=>{
                    if (this._state === "suspended") this._state = null;
                    nativeAudioContext.removeEventListener("statechange", revokeState);
                };
                nativeAudioContext.addEventListener("statechange", revokeState);
            }
        }
        get baseLatency() {
            return this._baseLatency;
        }
        get state() {
            return this._state !== null ? this._state : this._nativeAudioContext.state;
        }
        close() {
            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.
            if (this.state === "closed") return this._nativeAudioContext.close().then(()=>{
                throw createInvalidStateError();
            });
            // Bug #34: If the state was set to suspended before it should be revoked now.
            if (this._state === "suspended") this._state = null;
            return this._nativeAudioContext.close().then(()=>{
                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {
                    this._nativeOscillatorNode.stop();
                    this._nativeGainNode.disconnect();
                    this._nativeOscillatorNode.disconnect();
                }
                (0, _deactivateAudioGraph.deactivateAudioGraph)(this);
            });
        }
        createMediaElementSource(mediaElement) {
            return new mediaElementAudioSourceNodeConstructor(this, {
                mediaElement
            });
        }
        createMediaStreamDestination() {
            return new mediaStreamAudioDestinationNodeConstructor(this);
        }
        createMediaStreamSource(mediaStream) {
            return new mediaStreamAudioSourceNodeConstructor(this, {
                mediaStream
            });
        }
        createMediaStreamTrackSource(mediaStreamTrack) {
            return new mediaStreamTrackAudioSourceNodeConstructor(this, {
                mediaStreamTrack
            });
        }
        resume() {
            if (this._state === "suspended") return new Promise((resolve, reject)=>{
                const resolvePromise = ()=>{
                    this._nativeAudioContext.removeEventListener("statechange", resolvePromise);
                    if (this._nativeAudioContext.state === "running") resolve();
                    else this.resume().then(resolve, reject);
                };
                this._nativeAudioContext.addEventListener("statechange", resolvePromise);
            });
            return this._nativeAudioContext.resume().catch((err)=>{
                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.
                // Bug #56: Safari invokes the catch handler but without an error.
                if (err === undefined || err.code === 15) throw createInvalidStateError();
                throw err;
            });
        }
        suspend() {
            return this._nativeAudioContext.suspend().catch((err)=>{
                // Bug #56: Safari invokes the catch handler but without an error.
                if (err === undefined) throw createInvalidStateError();
                throw err;
            });
        }
    };
};

},{"../helpers/deactivate-audio-graph":"ap1I7","../helpers/is-valid-latency-hint":"7xWOy","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ap1I7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "deactivateAudioGraph", ()=>deactivateAudioGraph);
var _deactivateActiveAudioNodeInputConnections = require("./deactivate-active-audio-node-input-connections");
const deactivateAudioGraph = (context)=>{
    (0, _deactivateActiveAudioNodeInputConnections.deactivateActiveAudioNodeInputConnections)(context.destination, []);
};

},{"./deactivate-active-audio-node-input-connections":"6Nufv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6Nufv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "deactivateActiveAudioNodeInputConnections", ()=>deactivateActiveAudioNodeInputConnections);
var _audioBufferSourceNode = require("../guards/audio-buffer-source-node");
var _audioWorkletNode = require("../guards/audio-worklet-node");
var _biquadFilterNode = require("../guards/biquad-filter-node");
var _constantSourceNode = require("../guards/constant-source-node");
var _gainNode = require("../guards/gain-node");
var _oscillatorNode = require("../guards/oscillator-node");
var _stereoPannerNode = require("../guards/stereo-panner-node");
var _getAudioNodeConnections = require("./get-audio-node-connections");
var _getAudioParamConnections = require("./get-audio-param-connections");
var _isActiveAudioNode = require("./is-active-audio-node");
var _setInternalStateToPassive = require("./set-internal-state-to-passive");
const deactivateActiveAudioNodeInputConnections = (audioNode, trace)=>{
    const { activeInputs } = (0, _getAudioNodeConnections.getAudioNodeConnections)(audioNode);
    activeInputs.forEach((connections)=>connections.forEach(([source])=>{
            if (!trace.includes(audioNode)) deactivateActiveAudioNodeInputConnections(source, [
                ...trace,
                audioNode
            ]);
        }));
    const audioParams = (0, _audioBufferSourceNode.isAudioBufferSourceNode)(audioNode) ? [
        // Bug #149: Safari does not yet support the detune AudioParam.
        audioNode.playbackRate
    ] : (0, _audioWorkletNode.isAudioWorkletNode)(audioNode) ? Array.from(audioNode.parameters.values()) : (0, _biquadFilterNode.isBiquadFilterNode)(audioNode) ? [
        audioNode.Q,
        audioNode.detune,
        audioNode.frequency,
        audioNode.gain
    ] : (0, _constantSourceNode.isConstantSourceNode)(audioNode) ? [
        audioNode.offset
    ] : (0, _gainNode.isGainNode)(audioNode) ? [
        audioNode.gain
    ] : (0, _oscillatorNode.isOscillatorNode)(audioNode) ? [
        audioNode.detune,
        audioNode.frequency
    ] : (0, _stereoPannerNode.isStereoPannerNode)(audioNode) ? [
        audioNode.pan
    ] : [];
    for (const audioParam of audioParams){
        const audioParamConnections = (0, _getAudioParamConnections.getAudioParamConnections)(audioParam);
        if (audioParamConnections !== undefined) audioParamConnections.activeInputs.forEach(([source])=>deactivateActiveAudioNodeInputConnections(source, trace));
    }
    if ((0, _isActiveAudioNode.isActiveAudioNode)(audioNode)) (0, _setInternalStateToPassive.setInternalStateToPassive)(audioNode);
};

},{"../guards/audio-buffer-source-node":"76moj","../guards/audio-worklet-node":"fwNup","../guards/biquad-filter-node":"22F3d","../guards/constant-source-node":"bPaC9","../guards/gain-node":"2gRUe","../guards/oscillator-node":"aJzLA","../guards/stereo-panner-node":"aKnOB","./get-audio-node-connections":"huPRp","./get-audio-param-connections":"hfbFD","./is-active-audio-node":"j8Y4t","./set-internal-state-to-passive":"1Xtwa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"76moj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isAudioBufferSourceNode", ()=>isAudioBufferSourceNode);
const isAudioBufferSourceNode = (audioNode)=>{
    return "playbackRate" in audioNode;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"22F3d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isBiquadFilterNode", ()=>isBiquadFilterNode);
const isBiquadFilterNode = (audioNode)=>{
    return "frequency" in audioNode && "gain" in audioNode;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bPaC9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isConstantSourceNode", ()=>isConstantSourceNode);
const isConstantSourceNode = (audioNode)=>{
    return "offset" in audioNode;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2gRUe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isGainNode", ()=>isGainNode);
const isGainNode = (audioNode)=>{
    return !("frequency" in audioNode) && "gain" in audioNode;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aJzLA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isOscillatorNode", ()=>isOscillatorNode);
const isOscillatorNode = (audioNode)=>{
    return "detune" in audioNode && "frequency" in audioNode;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aKnOB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isStereoPannerNode", ()=>isStereoPannerNode);
const isStereoPannerNode = (audioNode)=>{
    return "pan" in audioNode;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"huPRp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getAudioNodeConnections", ()=>getAudioNodeConnections);
var _globals = require("../globals");
var _getValueForKey = require("./get-value-for-key");
const getAudioNodeConnections = (audioNode)=>{
    return (0, _getValueForKey.getValueForKey)((0, _globals.AUDIO_NODE_CONNECTIONS_STORE), audioNode);
};

},{"../globals":"j1ar4","./get-value-for-key":"kJr16","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hfbFD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getAudioParamConnections", ()=>getAudioParamConnections);
var _globals = require("../globals");
var _getValueForKey = require("./get-value-for-key");
const getAudioParamConnections = (audioParam)=>{
    return (0, _getValueForKey.getValueForKey)((0, _globals.AUDIO_PARAM_CONNECTIONS_STORE), audioParam);
};

},{"../globals":"j1ar4","./get-value-for-key":"kJr16","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7xWOy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isValidLatencyHint", ()=>isValidLatencyHint);
const isValidLatencyHint = (latencyHint)=>{
    return latencyHint === undefined || typeof latencyHint === "number" || typeof latencyHint === "string" && (latencyHint === "balanced" || latencyHint === "interactive" || latencyHint === "playback");
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4BIeJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioDestinationNodeConstructor", ()=>createAudioDestinationNodeConstructor);
const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode)=>{
    return class AudioDestinationNode extends audioNodeConstructor {
        constructor(context, channelCount){
            const nativeContext = getNativeContext(context);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);
            const audioDestinationNodeRenderer = isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null;
            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);
            this._isNodeOfNativeOfflineAudioContext = isOffline;
            this._nativeAudioDestinationNode = nativeAudioDestinationNode;
        }
        get channelCount() {
            return this._nativeAudioDestinationNode.channelCount;
        }
        set channelCount(value) {
            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.
            // Bug #54: Firefox does throw an IndexSizeError.
            if (this._isNodeOfNativeOfflineAudioContext) throw createInvalidStateError();
            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.
            if (value > this._nativeAudioDestinationNode.maxChannelCount) throw createIndexSizeError();
            this._nativeAudioDestinationNode.channelCount = value;
        }
        get channelCountMode() {
            return this._nativeAudioDestinationNode.channelCountMode;
        }
        set channelCountMode(value) {
            // Bug #53: No browser does throw an exception yet.
            if (this._isNodeOfNativeOfflineAudioContext) throw createInvalidStateError();
            this._nativeAudioDestinationNode.channelCountMode = value;
        }
        get maxChannelCount() {
            return this._nativeAudioDestinationNode.maxChannelCount;
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gunYG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioDestinationNodeRenderer", ()=>createAudioDestinationNodeRenderer);
const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode)=>{
    const renderedNativeAudioDestinationNodes = new WeakMap();
    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext)=>{
        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;
        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);
        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);
        return nativeAudioDestinationNode;
    };
    return {
        render (proxy, nativeOfflineAudioContext) {
            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);
            if (renderedNativeAudioDestinationNode !== undefined) return Promise.resolve(renderedNativeAudioDestinationNode);
            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1a6Qa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioListenerFactory", ()=>createAudioListenerFactory);
var _constants = require("../constants");
const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors)=>{
    return (context, nativeContext)=>{
        const nativeListener = nativeContext.listener;
        // Bug #117: Only Chrome & Edge support the new interface already.
        const createFakeAudioParams = ()=>{
            const buffer = new Float32Array(1);
            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {
                channelCount: 1,
                channelCountMode: "explicit",
                channelInterpretation: "speakers",
                numberOfInputs: 9
            });
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            let isScriptProcessorNodeCreated = false;
            let lastOrientation = [
                0,
                0,
                -1,
                0,
                1,
                0
            ];
            let lastPosition = [
                0,
                0,
                0
            ];
            const createScriptProcessorNode = ()=>{
                if (isScriptProcessorNodeCreated) return;
                isScriptProcessorNodeCreated = true;
                const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);
                // tslint:disable-next-line:deprecation
                scriptProcessorNode.onaudioprocess = ({ inputBuffer })=>{
                    const orientation = [
                        getFirstSample(inputBuffer, buffer, 0),
                        getFirstSample(inputBuffer, buffer, 1),
                        getFirstSample(inputBuffer, buffer, 2),
                        getFirstSample(inputBuffer, buffer, 3),
                        getFirstSample(inputBuffer, buffer, 4),
                        getFirstSample(inputBuffer, buffer, 5)
                    ];
                    if (orientation.some((value, index)=>value !== lastOrientation[index])) {
                        nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation
                        lastOrientation = orientation;
                    }
                    const positon = [
                        getFirstSample(inputBuffer, buffer, 6),
                        getFirstSample(inputBuffer, buffer, 7),
                        getFirstSample(inputBuffer, buffer, 8)
                    ];
                    if (positon.some((value, index)=>value !== lastPosition[index])) {
                        nativeListener.setPosition(...positon); // tslint:disable-line:deprecation
                        lastPosition = positon;
                    }
                };
                channelMergerNode.connect(scriptProcessorNode);
            };
            const createSetOrientation = (index)=>(value)=>{
                    if (value !== lastOrientation[index]) {
                        lastOrientation[index] = value;
                        nativeListener.setOrientation(...lastOrientation); // tslint:disable-line:deprecation
                    }
                };
            const createSetPosition = (index)=>(value)=>{
                    if (value !== lastPosition[index]) {
                        lastPosition[index] = value;
                        nativeListener.setPosition(...lastPosition); // tslint:disable-line:deprecation
                    }
                };
            const createFakeAudioParam = (input, initialValue, setValue)=>{
                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {
                    channelCount: 1,
                    channelCountMode: "explicit",
                    channelInterpretation: "discrete",
                    offset: initialValue
                });
                constantSourceNode.connect(channelMergerNode, 0, input);
                // @todo This should be stopped when the context is closed.
                constantSourceNode.start();
                Object.defineProperty(constantSourceNode.offset, "defaultValue", {
                    get () {
                        return initialValue;
                    }
                });
                /*
                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and
                 * minValue for GainNodes.
                 */ const audioParam = createAudioParam({
                    context
                }, isOffline, constantSourceNode.offset, (0, _constants.MOST_POSITIVE_SINGLE_FLOAT), (0, _constants.MOST_NEGATIVE_SINGLE_FLOAT));
                overwriteAccessors(audioParam, "value", (get)=>()=>get.call(audioParam), (set)=>(value)=>{
                        try {
                            set.call(audioParam, value);
                        } catch (err) {
                            if (err.code !== 9) throw err;
                        }
                        createScriptProcessorNode();
                        if (isOffline) // Bug #117: Using setOrientation() and setPosition() doesn't work with an OfflineAudioContext.
                        setValue(value);
                    });
                audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime)=>{
                    if (isOffline) return ()=>{
                        throw createNotSupportedError();
                    };
                    return (...args)=>{
                        const value = cancelAndHoldAtTime.apply(audioParam, args);
                        createScriptProcessorNode();
                        return value;
                    };
                })(audioParam.cancelAndHoldAtTime);
                audioParam.cancelScheduledValues = ((cancelScheduledValues)=>{
                    if (isOffline) return ()=>{
                        throw createNotSupportedError();
                    };
                    return (...args)=>{
                        const value = cancelScheduledValues.apply(audioParam, args);
                        createScriptProcessorNode();
                        return value;
                    };
                })(audioParam.cancelScheduledValues);
                audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime)=>{
                    if (isOffline) return ()=>{
                        throw createNotSupportedError();
                    };
                    return (...args)=>{
                        const value = exponentialRampToValueAtTime.apply(audioParam, args);
                        createScriptProcessorNode();
                        return value;
                    };
                })(audioParam.exponentialRampToValueAtTime);
                audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime)=>{
                    if (isOffline) return ()=>{
                        throw createNotSupportedError();
                    };
                    return (...args)=>{
                        const value = linearRampToValueAtTime.apply(audioParam, args);
                        createScriptProcessorNode();
                        return value;
                    };
                })(audioParam.linearRampToValueAtTime);
                audioParam.setTargetAtTime = ((setTargetAtTime)=>{
                    if (isOffline) return ()=>{
                        throw createNotSupportedError();
                    };
                    return (...args)=>{
                        const value = setTargetAtTime.apply(audioParam, args);
                        createScriptProcessorNode();
                        return value;
                    };
                })(audioParam.setTargetAtTime);
                audioParam.setValueAtTime = ((setValueAtTime)=>{
                    if (isOffline) return ()=>{
                        throw createNotSupportedError();
                    };
                    return (...args)=>{
                        const value = setValueAtTime.apply(audioParam, args);
                        createScriptProcessorNode();
                        return value;
                    };
                })(audioParam.setValueAtTime);
                audioParam.setValueCurveAtTime = ((setValueCurveAtTime)=>{
                    if (isOffline) return ()=>{
                        throw createNotSupportedError();
                    };
                    return (...args)=>{
                        const value = setValueCurveAtTime.apply(audioParam, args);
                        createScriptProcessorNode();
                        return value;
                    };
                })(audioParam.setValueCurveAtTime);
                return audioParam;
            };
            return {
                forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),
                forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),
                forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),
                positionX: createFakeAudioParam(6, 0, createSetPosition(0)),
                positionY: createFakeAudioParam(7, 0, createSetPosition(1)),
                positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),
                upX: createFakeAudioParam(3, 0, createSetOrientation(3)),
                upY: createFakeAudioParam(4, 1, createSetOrientation(4)),
                upZ: createFakeAudioParam(5, 0, createSetOrientation(5))
            };
        };
        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;
        return {
            get forwardX () {
                return forwardX;
            },
            get forwardY () {
                return forwardY;
            },
            get forwardZ () {
                return forwardZ;
            },
            get positionX () {
                return positionX;
            },
            get positionY () {
                return positionY;
            },
            get positionZ () {
                return positionZ;
            },
            get upX () {
                return upX;
            },
            get upY () {
                return upY;
            },
            get upZ () {
                return upZ;
            }
        };
    };
};

},{"../constants":"au584","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"wwDLJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioNodeConstructor", ()=>createAudioNodeConstructor);
var _globals = require("../globals");
var _audioNode = require("../guards/audio-node");
var _audioNodeOutputConnection = require("../guards/audio-node-output-connection");
var _addActiveInputConnectionToAudioParam = require("../helpers/add-active-input-connection-to-audio-param");
var _addPassiveInputConnectionToAudioParam = require("../helpers/add-passive-input-connection-to-audio-param");
var _connectNativeAudioNodeToNativeAudioNode = require("../helpers/connect-native-audio-node-to-native-audio-node");
var _deleteActiveInputConnection = require("../helpers/delete-active-input-connection");
var _deleteActiveInputConnectionToAudioParam = require("../helpers/delete-active-input-connection-to-audio-param");
var _deleteEventListenersOfAudioNode = require("../helpers/delete-event-listeners-of-audio-node");
var _deletePassiveInputConnectionToAudioNode = require("../helpers/delete-passive-input-connection-to-audio-node");
var _deletePassiveInputConnectionToAudioParam = require("../helpers/delete-passive-input-connection-to-audio-param");
var _disconnectNativeAudioNodeFromNativeAudioNode = require("../helpers/disconnect-native-audio-node-from-native-audio-node");
var _getAudioNodeConnections = require("../helpers/get-audio-node-connections");
var _getAudioParamConnections = require("../helpers/get-audio-param-connections");
var _getEventListenersOfAudioNode = require("../helpers/get-event-listeners-of-audio-node");
var _getNativeAudioNode = require("../helpers/get-native-audio-node");
var _getNativeAudioParam = require("../helpers/get-native-audio-param");
var _insertElementInSet = require("../helpers/insert-element-in-set");
var _isActiveAudioNode = require("../helpers/is-active-audio-node");
var _isPartOfACycle = require("../helpers/is-part-of-a-cycle");
var _isPassiveAudioNode = require("../helpers/is-passive-audio-node");
var _setInternalStateToActive = require("../helpers/set-internal-state-to-active");
var _setInternalStateToPassiveWhenNecessary = require("../helpers/set-internal-state-to-passive-when-necessary");
var _testAudioNodeDisconnectMethodSupport = require("../helpers/test-audio-node-disconnect-method-support");
var _visitEachAudioNodeOnce = require("../helpers/visit-each-audio-node-once");
var _wrapAudioNodeDisconnectMethod = require("../helpers/wrap-audio-node-disconnect-method");
const addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline)=>{
    const { activeInputs, passiveInputs } = (0, _getAudioParamConnections.getAudioParamConnections)(destination);
    const { outputs } = (0, _getAudioNodeConnections.getAudioNodeConnections)(source);
    const eventListeners = (0, _getEventListenersOfAudioNode.getEventListenersOfAudioNode)(source);
    const eventListener = (isActive)=>{
        const nativeAudioNode = (0, _getNativeAudioNode.getNativeAudioNode)(source);
        const nativeAudioParam = (0, _getNativeAudioParam.getNativeAudioParam)(destination);
        if (isActive) {
            const partialConnection = (0, _deletePassiveInputConnectionToAudioParam.deletePassiveInputConnectionToAudioParam)(passiveInputs, source, output);
            (0, _addActiveInputConnectionToAudioParam.addActiveInputConnectionToAudioParam)(activeInputs, source, partialConnection, false);
            if (!isOffline && !(0, _isPartOfACycle.isPartOfACycle)(source)) nativeAudioNode.connect(nativeAudioParam, output);
        } else {
            const partialConnection = (0, _deleteActiveInputConnectionToAudioParam.deleteActiveInputConnectionToAudioParam)(activeInputs, source, output);
            (0, _addPassiveInputConnectionToAudioParam.addPassiveInputConnectionToAudioParam)(passiveInputs, partialConnection, false);
            if (!isOffline && !(0, _isPartOfACycle.isPartOfACycle)(source)) nativeAudioNode.disconnect(nativeAudioParam, output);
        }
    };
    if ((0, _insertElementInSet.insertElementInSet)(outputs, [
        destination,
        output
    ], (outputConnection)=>outputConnection[0] === destination && outputConnection[1] === output, true)) {
        eventListeners.add(eventListener);
        if ((0, _isActiveAudioNode.isActiveAudioNode)(source)) (0, _addActiveInputConnectionToAudioParam.addActiveInputConnectionToAudioParam)(activeInputs, source, [
            output,
            eventListener
        ], true);
        else (0, _addPassiveInputConnectionToAudioParam.addPassiveInputConnectionToAudioParam)(passiveInputs, [
            source,
            output,
            eventListener
        ], true);
        return true;
    }
    return false;
};
const deleteInputConnectionOfAudioNode = (source, destination, output, input)=>{
    const { activeInputs, passiveInputs } = (0, _getAudioNodeConnections.getAudioNodeConnections)(destination);
    const activeInputConnection = (0, _deleteActiveInputConnection.deleteActiveInputConnection)(activeInputs[input], source, output);
    if (activeInputConnection === null) {
        const passiveInputConnection = (0, _deletePassiveInputConnectionToAudioNode.deletePassiveInputConnectionToAudioNode)(passiveInputs, source, output, input);
        return [
            passiveInputConnection[2],
            false
        ];
    }
    return [
        activeInputConnection[2],
        true
    ];
};
const deleteInputConnectionOfAudioParam = (source, destination, output)=>{
    const { activeInputs, passiveInputs } = (0, _getAudioParamConnections.getAudioParamConnections)(destination);
    const activeInputConnection = (0, _deleteActiveInputConnection.deleteActiveInputConnection)(activeInputs, source, output);
    if (activeInputConnection === null) {
        const passiveInputConnection = (0, _deletePassiveInputConnectionToAudioParam.deletePassiveInputConnectionToAudioParam)(passiveInputs, source, output);
        return [
            passiveInputConnection[1],
            false
        ];
    }
    return [
        activeInputConnection[2],
        true
    ];
};
const deleteInputsOfAudioNode = (source, isOffline, destination, output, input)=>{
    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);
    if (listener !== null) {
        (0, _deleteEventListenersOfAudioNode.deleteEventListenerOfAudioNode)(source, listener);
        if (isActive && !isOffline && !(0, _isPartOfACycle.isPartOfACycle)(source)) (0, _disconnectNativeAudioNodeFromNativeAudioNode.disconnectNativeAudioNodeFromNativeAudioNode)((0, _getNativeAudioNode.getNativeAudioNode)(source), (0, _getNativeAudioNode.getNativeAudioNode)(destination), output, input);
    }
    if ((0, _isActiveAudioNode.isActiveAudioNode)(destination)) {
        const { activeInputs } = (0, _getAudioNodeConnections.getAudioNodeConnections)(destination);
        (0, _setInternalStateToPassiveWhenNecessary.setInternalStateToPassiveWhenNecessary)(destination, activeInputs);
    }
};
const deleteInputsOfAudioParam = (source, isOffline, destination, output)=>{
    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);
    if (listener !== null) {
        (0, _deleteEventListenersOfAudioNode.deleteEventListenerOfAudioNode)(source, listener);
        if (isActive && !isOffline && !(0, _isPartOfACycle.isPartOfACycle)(source)) (0, _getNativeAudioNode.getNativeAudioNode)(source).disconnect((0, _getNativeAudioParam.getNativeAudioParam)(destination), output);
    }
};
const deleteAnyConnection = (source, isOffline)=>{
    const audioNodeConnectionsOfSource = (0, _getAudioNodeConnections.getAudioNodeConnections)(source);
    const destinations = [];
    for (const outputConnection of audioNodeConnectionsOfSource.outputs){
        if ((0, _audioNodeOutputConnection.isAudioNodeOutputConnection)(outputConnection)) deleteInputsOfAudioNode(source, isOffline, ...outputConnection);
        else deleteInputsOfAudioParam(source, isOffline, ...outputConnection);
        destinations.push(outputConnection[0]);
    }
    audioNodeConnectionsOfSource.outputs.clear();
    return destinations;
};
const deleteConnectionAtOutput = (source, isOffline, output)=>{
    const audioNodeConnectionsOfSource = (0, _getAudioNodeConnections.getAudioNodeConnections)(source);
    const destinations = [];
    for (const outputConnection of audioNodeConnectionsOfSource.outputs)if (outputConnection[1] === output) {
        if ((0, _audioNodeOutputConnection.isAudioNodeOutputConnection)(outputConnection)) deleteInputsOfAudioNode(source, isOffline, ...outputConnection);
        else deleteInputsOfAudioParam(source, isOffline, ...outputConnection);
        destinations.push(outputConnection[0]);
        audioNodeConnectionsOfSource.outputs.delete(outputConnection);
    }
    return destinations;
};
const deleteConnectionToDestination = (source, isOffline, destination, output, input)=>{
    const audioNodeConnectionsOfSource = (0, _getAudioNodeConnections.getAudioNodeConnections)(source);
    return Array.from(audioNodeConnectionsOfSource.outputs).filter((outputConnection)=>outputConnection[0] === destination && (output === undefined || outputConnection[1] === output) && (input === undefined || outputConnection[2] === input)).map((outputConnection)=>{
        if ((0, _audioNodeOutputConnection.isAudioNodeOutputConnection)(outputConnection)) deleteInputsOfAudioNode(source, isOffline, ...outputConnection);
        else deleteInputsOfAudioParam(source, isOffline, ...outputConnection);
        audioNodeConnectionsOfSource.outputs.delete(outputConnection);
        return outputConnection[0];
    });
};
const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor)=>{
    return class AudioNode extends eventTargetConstructor {
        constructor(context, isActive, nativeAudioNode, audioNodeRenderer){
            super(nativeAudioNode);
            this._context = context;
            this._nativeAudioNode = nativeAudioNode;
            const nativeContext = getNativeContext(context);
            // Bug #12: Safari does not support to disconnect a specific destination.
            if (isNativeAudioContext(nativeContext) && true !== cacheTestResult((0, _testAudioNodeDisconnectMethodSupport.testAudioNodeDisconnectMethodSupport), ()=>{
                return (0, _testAudioNodeDisconnectMethodSupport.testAudioNodeDisconnectMethodSupport)(nativeContext, nativeAudioWorkletNodeConstructor);
            })) (0, _wrapAudioNodeDisconnectMethod.wrapAudioNodeDisconnectMethod)(nativeAudioNode);
            (0, _globals.AUDIO_NODE_STORE).set(this, nativeAudioNode);
            (0, _globals.EVENT_LISTENERS).set(this, new Set());
            if (context.state !== "closed" && isActive) (0, _setInternalStateToActive.setInternalStateToActive)(this);
            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);
        }
        get channelCount() {
            return this._nativeAudioNode.channelCount;
        }
        set channelCount(value) {
            this._nativeAudioNode.channelCount = value;
        }
        get channelCountMode() {
            return this._nativeAudioNode.channelCountMode;
        }
        set channelCountMode(value) {
            this._nativeAudioNode.channelCountMode = value;
        }
        get channelInterpretation() {
            return this._nativeAudioNode.channelInterpretation;
        }
        set channelInterpretation(value) {
            this._nativeAudioNode.channelInterpretation = value;
        }
        get context() {
            return this._context;
        }
        get numberOfInputs() {
            return this._nativeAudioNode.numberOfInputs;
        }
        get numberOfOutputs() {
            return this._nativeAudioNode.numberOfOutputs;
        }
        // tslint:disable-next-line:invalid-void
        connect(destination, output = 0, input = 0) {
            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.
            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) throw createIndexSizeError();
            const nativeContext = getNativeContext(this._context);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) throw createInvalidAccessError();
            if ((0, _audioNode.isAudioNode)(destination)) {
                const nativeDestinationAudioNode = (0, _getNativeAudioNode.getNativeAudioNode)(destination);
                try {
                    const connection = (0, _connectNativeAudioNodeToNativeAudioNode.connectNativeAudioNodeToNativeAudioNode)(this._nativeAudioNode, nativeDestinationAudioNode, output, input);
                    const isPassive = (0, _isPassiveAudioNode.isPassiveAudioNode)(this);
                    if (isOffline || isPassive) this._nativeAudioNode.disconnect(...connection);
                    if (this.context.state !== "closed" && !isPassive && (0, _isPassiveAudioNode.isPassiveAudioNode)(destination)) (0, _setInternalStateToActive.setInternalStateToActive)(destination);
                } catch (err) {
                    // Bug #41: Safari does not throw the correct exception so far.
                    if (err.code === 12) throw createInvalidAccessError();
                    throw err;
                }
                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);
                // Bug #164: Only Firefox detects cycles so far.
                if (isNewConnectionToAudioNode) {
                    const cycles = detectCycles([
                        this
                    ], destination);
                    (0, _visitEachAudioNodeOnce.visitEachAudioNodeOnce)(cycles, createIncrementCycleCounter(isOffline));
                }
                return destination;
            }
            const nativeAudioParam = (0, _getNativeAudioParam.getNativeAudioParam)(destination);
            /*
             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an
             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify
             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.
             */ if (nativeAudioParam.name === "playbackRate" && nativeAudioParam.maxValue === 1024) throw createNotSupportedError();
            try {
                this._nativeAudioNode.connect(nativeAudioParam, output);
                if (isOffline || (0, _isPassiveAudioNode.isPassiveAudioNode)(this)) this._nativeAudioNode.disconnect(nativeAudioParam, output);
            } catch (err) {
                // Bug #58: Safari doesn't throw an InvalidAccessError yet.
                if (err.code === 12) throw createInvalidAccessError();
                throw err;
            }
            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);
            // Bug #164: Only Firefox detects cycles so far.
            if (isNewConnectionToAudioParam) {
                const cycles = detectCycles([
                    this
                ], destination);
                (0, _visitEachAudioNodeOnce.visitEachAudioNodeOnce)(cycles, createIncrementCycleCounter(isOffline));
            }
        }
        disconnect(destinationOrOutput, output, input) {
            let destinations;
            const nativeContext = getNativeContext(this._context);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            if (destinationOrOutput === undefined) destinations = deleteAnyConnection(this, isOffline);
            else if (typeof destinationOrOutput === "number") {
                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) throw createIndexSizeError();
                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);
            } else {
                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) throw createIndexSizeError();
                if ((0, _audioNode.isAudioNode)(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) throw createIndexSizeError();
                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);
                if (destinations.length === 0) throw createInvalidAccessError();
            }
            // Bug #164: Only Firefox detects cycles so far.
            for (const destination of destinations){
                const cycles = detectCycles([
                    this
                ], destination);
                (0, _visitEachAudioNodeOnce.visitEachAudioNodeOnce)(cycles, decrementCycleCounter);
            }
        }
    };
};

},{"../globals":"j1ar4","../guards/audio-node":"daTkx","../guards/audio-node-output-connection":"5S2ZA","../helpers/add-active-input-connection-to-audio-param":"hBnfW","../helpers/add-passive-input-connection-to-audio-param":"fRCym","../helpers/connect-native-audio-node-to-native-audio-node":"he3cM","../helpers/delete-active-input-connection":"iog9s","../helpers/delete-active-input-connection-to-audio-param":"6FKI8","../helpers/delete-event-listeners-of-audio-node":"kjxRm","../helpers/delete-passive-input-connection-to-audio-node":"6FBGr","../helpers/delete-passive-input-connection-to-audio-param":"g8OnC","../helpers/disconnect-native-audio-node-from-native-audio-node":"766cG","../helpers/get-audio-node-connections":"huPRp","../helpers/get-audio-param-connections":"hfbFD","../helpers/get-event-listeners-of-audio-node":"hrKEN","../helpers/get-native-audio-node":"f9hIK","../helpers/get-native-audio-param":"fLdpl","../helpers/insert-element-in-set":"917M8","../helpers/is-active-audio-node":"j8Y4t","../helpers/is-part-of-a-cycle":"jcP4P","../helpers/is-passive-audio-node":"1eGb9","../helpers/set-internal-state-to-active":"gc0b0","../helpers/set-internal-state-to-passive-when-necessary":"5zVeT","../helpers/test-audio-node-disconnect-method-support":"d1FDF","../helpers/visit-each-audio-node-once":"9N5TU","../helpers/wrap-audio-node-disconnect-method":"3z2pK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"daTkx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isAudioNode", ()=>isAudioNode);
const isAudioNode = (audioNodeOrAudioParam)=>{
    return "context" in audioNodeOrAudioParam;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5S2ZA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isAudioNodeOutputConnection", ()=>isAudioNodeOutputConnection);
var _audioNode = require("./audio-node");
const isAudioNodeOutputConnection = (outputConnection)=>{
    return (0, _audioNode.isAudioNode)(outputConnection[0]);
};

},{"./audio-node":"daTkx","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hBnfW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "addActiveInputConnectionToAudioParam", ()=>addActiveInputConnectionToAudioParam);
var _insertElementInSet = require("./insert-element-in-set");
const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates)=>{
    (0, _insertElementInSet.insertElementInSet)(activeInputs, [
        source,
        output,
        eventListener
    ], (activeInputConnection)=>activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);
};

},{"./insert-element-in-set":"917M8","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"917M8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "insertElementInSet", ()=>insertElementInSet);
const insertElementInSet = (set, element, predicate, ignoreDuplicates)=>{
    for (const lmnt of set)if (predicate(lmnt)) {
        if (ignoreDuplicates) return false;
        throw Error("The set contains at least one similar element.");
    }
    set.add(element);
    return true;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fRCym":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "addPassiveInputConnectionToAudioParam", ()=>addPassiveInputConnectionToAudioParam);
var _insertElementInSet = require("./insert-element-in-set");
const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates)=>{
    const passiveInputConnections = passiveInputs.get(source);
    if (passiveInputConnections === undefined) passiveInputs.set(source, new Set([
        [
            output,
            eventListener
        ]
    ]));
    else (0, _insertElementInSet.insertElementInSet)(passiveInputConnections, [
        output,
        eventListener
    ], (passiveInputConnection)=>passiveInputConnection[0] === output, ignoreDuplicates);
};

},{"./insert-element-in-set":"917M8","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"he3cM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "connectNativeAudioNodeToNativeAudioNode", ()=>connectNativeAudioNodeToNativeAudioNode);
var _nativeAudioNodeFaker = require("../guards/native-audio-node-faker");
const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input)=>{
    if ((0, _nativeAudioNodeFaker.isNativeAudioNodeFaker)(nativeDestinationAudioNode)) {
        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];
        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);
        return [
            fakeNativeDestinationAudioNode,
            output,
            0
        ];
    }
    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);
    return [
        nativeDestinationAudioNode,
        output,
        input
    ];
};

},{"../guards/native-audio-node-faker":"fNQvH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fNQvH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isNativeAudioNodeFaker", ()=>isNativeAudioNodeFaker);
const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker)=>{
    return "inputs" in nativeAudioNodeOrNativeAudioNodeFaker;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iog9s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "deleteActiveInputConnection", ()=>deleteActiveInputConnection);
const deleteActiveInputConnection = (activeInputConnections, source, output)=>{
    for (const activeInputConnection of activeInputConnections)if (activeInputConnection[0] === source && activeInputConnection[1] === output) {
        activeInputConnections.delete(activeInputConnection);
        return activeInputConnection;
    }
    return null;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6FKI8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "deleteActiveInputConnectionToAudioParam", ()=>deleteActiveInputConnectionToAudioParam);
var _pickElementFromSet = require("./pick-element-from-set");
const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output)=>{
    return (0, _pickElementFromSet.pickElementFromSet)(activeInputs, (activeInputConnection)=>activeInputConnection[0] === source && activeInputConnection[1] === output);
};

},{"./pick-element-from-set":"9U2YJ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kjxRm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "deleteEventListenerOfAudioNode", ()=>deleteEventListenerOfAudioNode);
var _getEventListenersOfAudioNode = require("./get-event-listeners-of-audio-node");
const deleteEventListenerOfAudioNode = (audioNode, eventListener)=>{
    const eventListeners = (0, _getEventListenersOfAudioNode.getEventListenersOfAudioNode)(audioNode);
    if (!eventListeners.delete(eventListener)) throw new Error("Missing the expected event listener.");
};

},{"./get-event-listeners-of-audio-node":"hrKEN","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g8OnC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "deletePassiveInputConnectionToAudioParam", ()=>deletePassiveInputConnectionToAudioParam);
var _getValueForKey = require("./get-value-for-key");
var _pickElementFromSet = require("./pick-element-from-set");
const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output)=>{
    const passiveInputConnections = (0, _getValueForKey.getValueForKey)(passiveInputs, source);
    const matchingConnection = (0, _pickElementFromSet.pickElementFromSet)(passiveInputConnections, (passiveInputConnection)=>passiveInputConnection[0] === output);
    if (passiveInputConnections.size === 0) passiveInputs.delete(source);
    return matchingConnection;
};

},{"./get-value-for-key":"kJr16","./pick-element-from-set":"9U2YJ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"766cG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "disconnectNativeAudioNodeFromNativeAudioNode", ()=>disconnectNativeAudioNodeFromNativeAudioNode);
var _nativeAudioNodeFaker = require("../guards/native-audio-node-faker");
const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input)=>{
    if ((0, _nativeAudioNodeFaker.isNativeAudioNodeFaker)(nativeDestinationAudioNode)) nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);
    else nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);
};

},{"../guards/native-audio-node-faker":"fNQvH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f9hIK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getNativeAudioNode", ()=>getNativeAudioNode);
var _globals = require("../globals");
var _getValueForKey = require("./get-value-for-key");
const getNativeAudioNode = (audioNode)=>{
    return (0, _getValueForKey.getValueForKey)((0, _globals.AUDIO_NODE_STORE), audioNode);
};

},{"../globals":"j1ar4","./get-value-for-key":"kJr16","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fLdpl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getNativeAudioParam", ()=>getNativeAudioParam);
var _globals = require("../globals");
var _getValueForKey = require("./get-value-for-key");
const getNativeAudioParam = (audioParam)=>{
    return (0, _getValueForKey.getValueForKey)((0, _globals.AUDIO_PARAM_STORE), audioParam);
};

},{"../globals":"j1ar4","./get-value-for-key":"kJr16","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jcP4P":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isPartOfACycle", ()=>isPartOfACycle);
var _globals = require("../globals");
const isPartOfACycle = (audioNode)=>{
    return (0, _globals.CYCLE_COUNTERS).has(audioNode);
};

},{"../globals":"j1ar4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1eGb9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isPassiveAudioNode", ()=>isPassiveAudioNode);
var _globals = require("../globals");
const isPassiveAudioNode = (audioNode)=>{
    return !(0, _globals.ACTIVE_AUDIO_NODE_STORE).has(audioNode);
};

},{"../globals":"j1ar4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d1FDF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testAudioNodeDisconnectMethodSupport", ()=>testAudioNodeDisconnectMethodSupport);
const testAudioNodeDisconnectMethodSupport = (nativeAudioContext, nativeAudioWorkletNodeConstructor)=>{
    return new Promise((resolve)=>{
        /*
         * This bug existed in Safari up until v14.0.2. Since AudioWorklets were not supported in Safari until v14.1 the presence of the
         * constructor for an AudioWorkletNode can be used here to skip the test.
         */ if (nativeAudioWorkletNodeConstructor !== null) resolve(true);
        else {
            const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1); // tslint:disable-line deprecation
            const dummy = nativeAudioContext.createGain();
            // Bug #95: Safari does not play one sample buffers.
            const ones = nativeAudioContext.createBuffer(1, 2, 44100);
            const channelData = ones.getChannelData(0);
            channelData[0] = 1;
            channelData[1] = 1;
            const source = nativeAudioContext.createBufferSource();
            source.buffer = ones;
            source.loop = true;
            source.connect(analyzer).connect(nativeAudioContext.destination);
            source.connect(dummy);
            source.disconnect(dummy);
            // tslint:disable-next-line:deprecation
            analyzer.onaudioprocess = (event)=>{
                const chnnlDt = event.inputBuffer.getChannelData(0); // tslint:disable-line deprecation
                if (Array.prototype.some.call(chnnlDt, (sample)=>sample === 1)) resolve(true);
                else resolve(false);
                source.stop();
                analyzer.onaudioprocess = null; // tslint:disable-line:deprecation
                source.disconnect(analyzer);
                analyzer.disconnect(nativeAudioContext.destination);
            };
            source.start();
        }
    });
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9N5TU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "visitEachAudioNodeOnce", ()=>visitEachAudioNodeOnce);
const visitEachAudioNodeOnce = (cycles, visitor)=>{
    const counts = new Map();
    for (const cycle of cycles)for (const audioNode of cycle){
        const count = counts.get(audioNode);
        counts.set(audioNode, count === undefined ? 1 : count + 1);
    }
    counts.forEach((count, audioNode)=>visitor(audioNode, count));
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3z2pK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "wrapAudioNodeDisconnectMethod", ()=>wrapAudioNodeDisconnectMethod);
var _nativeAudioNode = require("../guards/native-audio-node");
const wrapAudioNodeDisconnectMethod = (nativeAudioNode)=>{
    const connections = new Map();
    nativeAudioNode.connect = ((connect)=>{
        // tslint:disable-next-line:invalid-void no-inferrable-types
        return (destination, output = 0, input = 0)=>{
            const returnValue = (0, _nativeAudioNode.isNativeAudioNode)(destination) ? connect(destination, output, input) : connect(destination, output);
            // Save the new connection only if the calls to connect above didn't throw an error.
            const connectionsToDestination = connections.get(destination);
            if (connectionsToDestination === undefined) connections.set(destination, [
                {
                    input,
                    output
                }
            ]);
            else if (connectionsToDestination.every((connection)=>connection.input !== input || connection.output !== output)) connectionsToDestination.push({
                input,
                output
            });
            return returnValue;
        };
    })(nativeAudioNode.connect.bind(nativeAudioNode));
    nativeAudioNode.disconnect = ((disconnect)=>{
        return (destinationOrOutput, output, input)=>{
            disconnect.apply(nativeAudioNode);
            if (destinationOrOutput === undefined) connections.clear();
            else if (typeof destinationOrOutput === "number") for (const [destination, connectionsToDestination] of connections){
                const filteredConnections = connectionsToDestination.filter((connection)=>connection.output !== destinationOrOutput);
                if (filteredConnections.length === 0) connections.delete(destination);
                else connections.set(destination, filteredConnections);
            }
            else if (connections.has(destinationOrOutput)) {
                if (output === undefined) connections.delete(destinationOrOutput);
                else {
                    const connectionsToDestination = connections.get(destinationOrOutput);
                    if (connectionsToDestination !== undefined) {
                        const filteredConnections = connectionsToDestination.filter((connection)=>connection.output !== output && (connection.input !== input || input === undefined));
                        if (filteredConnections.length === 0) connections.delete(destinationOrOutput);
                        else connections.set(destinationOrOutput, filteredConnections);
                    }
                }
            }
            for (const [destination, connectionsToDestination] of connections)connectionsToDestination.forEach((connection)=>{
                if ((0, _nativeAudioNode.isNativeAudioNode)(destination)) nativeAudioNode.connect(destination, connection.output, connection.input);
                else nativeAudioNode.connect(destination, connection.output);
            });
        };
    })(nativeAudioNode.disconnect);
};

},{"../guards/native-audio-node":"hUupW","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hUupW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isNativeAudioNode", ()=>isNativeAudioNode);
const isNativeAudioNode = (nativeAudioNodeOrAudioParam)=>{
    return "context" in nativeAudioNodeOrAudioParam;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iMx7e":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioParamFactory", ()=>createAudioParamFactory);
var _automationEvents = require("automation-events");
const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible)=>{
    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null)=>{
        // Bug #196 Only Safari sets the defaultValue to the initial value.
        const defaultValue = nativeAudioParam.value;
        const automationEventList = new (0, _automationEvents.AutomationEventList)(defaultValue);
        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;
        const audioParam = {
            get defaultValue () {
                return defaultValue;
            },
            get maxValue () {
                return maxValue === null ? nativeAudioParam.maxValue : maxValue;
            },
            get minValue () {
                return minValue === null ? nativeAudioParam.minValue : minValue;
            },
            get value () {
                return nativeAudioParam.value;
            },
            set value (value){
                nativeAudioParam.value = value;
                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().
                audioParam.setValueAtTime(value, audioNode.context.currentTime);
            },
            cancelAndHoldAtTime (cancelTime) {
                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().
                if (typeof nativeAudioParam.cancelAndHoldAtTime === "function") {
                    if (audioParamRenderer === null) automationEventList.flush(audioNode.context.currentTime);
                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));
                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);
                } else {
                    const previousLastEvent = Array.from(automationEventList).pop();
                    if (audioParamRenderer === null) automationEventList.flush(audioNode.context.currentTime);
                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));
                    const currentLastEvent = Array.from(automationEventList).pop();
                    nativeAudioParam.cancelScheduledValues(cancelTime);
                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {
                        if (currentLastEvent.type === "exponentialRampToValue") nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);
                        else if (currentLastEvent.type === "linearRampToValue") nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);
                        else if (currentLastEvent.type === "setValue") nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);
                        else if (currentLastEvent.type === "setValueCurve") nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);
                    }
                }
                return audioParam;
            },
            cancelScheduledValues (cancelTime) {
                if (audioParamRenderer === null) automationEventList.flush(audioNode.context.currentTime);
                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));
                nativeAudioParam.cancelScheduledValues(cancelTime);
                return audioParam;
            },
            exponentialRampToValueAtTime (value1, endTime) {
                // Bug #45: Safari does not throw an error yet.
                if (value1 === 0) throw new RangeError();
                // Bug #187: Safari does not throw an error yet.
                if (!Number.isFinite(endTime) || endTime < 0) throw new RangeError();
                const currentTime = audioNode.context.currentTime;
                if (audioParamRenderer === null) automationEventList.flush(currentTime);
                // Bug #194: Firefox does not implicitly call setValueAtTime() if there is no previous event.
                if (Array.from(automationEventList).length === 0) {
                    automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));
                    nativeAudioParam.setValueAtTime(defaultValue, currentTime);
                }
                automationEventList.add(createExponentialRampToValueAutomationEvent(value1, endTime));
                nativeAudioParam.exponentialRampToValueAtTime(value1, endTime);
                return audioParam;
            },
            linearRampToValueAtTime (value1, endTime) {
                const currentTime = audioNode.context.currentTime;
                if (audioParamRenderer === null) automationEventList.flush(currentTime);
                // Bug #195: Firefox does not implicitly call setValueAtTime() if there is no previous event.
                if (Array.from(automationEventList).length === 0) {
                    automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));
                    nativeAudioParam.setValueAtTime(defaultValue, currentTime);
                }
                automationEventList.add(createLinearRampToValueAutomationEvent(value1, endTime));
                nativeAudioParam.linearRampToValueAtTime(value1, endTime);
                return audioParam;
            },
            setTargetAtTime (target, startTime, timeConstant) {
                if (audioParamRenderer === null) automationEventList.flush(audioNode.context.currentTime);
                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));
                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);
                return audioParam;
            },
            setValueAtTime (value1, startTime) {
                if (audioParamRenderer === null) automationEventList.flush(audioNode.context.currentTime);
                automationEventList.add(createSetValueAutomationEvent(value1, startTime));
                nativeAudioParam.setValueAtTime(value1, startTime);
                return audioParam;
            },
            setValueCurveAtTime (values, startTime, duration) {
                // Bug 183: Safari only accepts a Float32Array.
                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);
                /*
                 * Bug #152: Safari does not correctly interpolate the values of the curve.
                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the
                 * existence of the webkitAudioContext is used as a workaround here.
                 */ if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === "webkitAudioContext") {
                    const endTime = startTime + duration;
                    const sampleRate = audioNode.context.sampleRate;
                    const firstSample = Math.ceil(startTime * sampleRate);
                    const lastSample = Math.floor(endTime * sampleRate);
                    const numberOfInterpolatedValues = lastSample - firstSample;
                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);
                    for(let i = 0; i < numberOfInterpolatedValues; i += 1){
                        const theoreticIndex = (convertedValues.length - 1) / duration * ((firstSample + i) / sampleRate - startTime);
                        const lowerIndex = Math.floor(theoreticIndex);
                        const upperIndex = Math.ceil(theoreticIndex);
                        interpolatedValues[i] = lowerIndex === upperIndex ? convertedValues[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];
                    }
                    if (audioParamRenderer === null) automationEventList.flush(audioNode.context.currentTime);
                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));
                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);
                    const timeOfLastSample = lastSample / sampleRate;
                    if (timeOfLastSample < endTime) setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);
                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);
                } else {
                    if (audioParamRenderer === null) automationEventList.flush(audioNode.context.currentTime);
                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));
                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);
                }
                return audioParam;
            }
        };
        audioParamStore.set(audioParam, nativeAudioParam);
        audioParamAudioNodeStore.set(audioParam, audioNode);
        addAudioParamConnections(audioParam, audioParamRenderer);
        return audioParam;
    };
};

},{"automation-events":"kxaFt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9IbWX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioParamRenderer", ()=>createAudioParamRenderer);
const createAudioParamRenderer = (automationEventList)=>{
    return {
        replay (audioParam) {
            for (const automationEvent of automationEventList){
                if (automationEvent.type === "exponentialRampToValue") {
                    const { endTime, value } = automationEvent;
                    audioParam.exponentialRampToValueAtTime(value, endTime);
                } else if (automationEvent.type === "linearRampToValue") {
                    const { endTime, value } = automationEvent;
                    audioParam.linearRampToValueAtTime(value, endTime);
                } else if (automationEvent.type === "setTarget") {
                    const { startTime, target, timeConstant } = automationEvent;
                    audioParam.setTargetAtTime(target, startTime, timeConstant);
                } else if (automationEvent.type === "setValue") {
                    const { startTime, value } = automationEvent;
                    audioParam.setValueAtTime(value, startTime);
                } else if (automationEvent.type === "setValueCurve") {
                    const { duration, startTime, values } = automationEvent;
                    audioParam.setValueCurveAtTime(values, startTime, duration);
                } else throw new Error("Can't apply an unknown automation.");
            }
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Gmbn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioWorkletNodeConstructor", ()=>createAudioWorkletNodeConstructor);
var _globals = require("../globals");
var _readOnlyMap = require("../read-only-map");
const DEFAULT_OPTIONS = {
    channelCount: 2,
    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.
    channelCountMode: "explicit",
    channelInterpretation: "speakers",
    numberOfInputs: 1,
    numberOfOutputs: 1,
    parameterData: {},
    processorOptions: {}
};
const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener)=>{
    return class AudioWorkletNode extends audioNodeConstructor {
        constructor(context, name, options){
            var _a;
            const nativeContext = getNativeContext(context);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const mergedOptions = sanitizeAudioWorkletNodeOptions({
                ...DEFAULT_OPTIONS,
                ...options
            });
            // Bug #191: Safari doesn't throw an error if the options aren't clonable.
            testAudioWorkletNodeOptionsClonability(mergedOptions);
            const nodeNameToProcessorConstructorMap = (0, _globals.NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS).get(nativeContext);
            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);
            // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.
            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== "closed" ? nativeContext : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;
            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);
            const audioWorkletNodeRenderer = isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null;
            /*
             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor
             * returns false.
             */ super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);
            const parameters = [];
            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm)=>{
                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);
                parameters.push([
                    nm,
                    audioParam
                ]);
            });
            this._nativeAudioWorkletNode = nativeAudioWorkletNode;
            this._onprocessorerror = null;
            this._parameters = new (0, _readOnlyMap.ReadOnlyMap)(parameters);
            /*
             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to
             * the destination.
             */ if (isOffline) addUnrenderedAudioWorkletNode(nativeContext, this);
            const { activeInputs } = getAudioNodeConnections(this);
            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);
        }
        get onprocessorerror() {
            return this._onprocessorerror;
        }
        set onprocessorerror(value) {
            const wrappedListener = typeof value === "function" ? wrapEventListener(this, value) : null;
            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;
            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;
            this._onprocessorerror = nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener ? value : nativeOnProcessorError;
        }
        get parameters() {
            if (this._parameters === null) // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.
            return this._nativeAudioWorkletNode.parameters;
            return this._parameters;
        }
        get port() {
            return this._nativeAudioWorkletNode.port;
        }
    };
};

},{"../globals":"j1ar4","../read-only-map":"3UYbJ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3UYbJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ReadOnlyMap", ()=>ReadOnlyMap);
class ReadOnlyMap {
    constructor(parameters){
        this._map = new Map(parameters);
    }
    get size() {
        return this._map.size;
    }
    entries() {
        return this._map.entries();
    }
    forEach(callback, thisArg = null) {
        return this._map.forEach((value, key)=>callback.call(thisArg, value, key, this));
    }
    get(name) {
        return this._map.get(name);
    }
    has(name) {
        return this._map.has(name);
    }
    keys() {
        return this._map.keys();
    }
    values() {
        return this._map.values();
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kfvDm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioWorkletNodeRendererFactory", ()=>createAudioWorkletNodeRendererFactory);
var _copyFromChannel = require("../helpers/copy-from-channel");
var _copyToChannel = require("../helpers/copy-to-channel");
var _createNestedArrays = require("../helpers/create-nested-arrays");
var _getAudioNodeConnections = require("../helpers/get-audio-node-connections");
var _getAudioWorkletProcessor = require("../helpers/get-audio-worklet-processor");
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime)=>{
    // Ceil the length to the next full render quantum.
    // Bug #17: Safari does not yet expose the length.
    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;
    const numberOfInputChannels = options.channelCount * options.numberOfInputs;
    const numberOfOutputChannels = outputChannelCount.reduce((sum, value)=>sum + value, 0);
    const processedBuffer = numberOfOutputChannels === 0 ? null : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);
    if (processorConstructor === undefined) throw new Error("Missing the processor constructor.");
    const audioNodeConnections = (0, _getAudioNodeConnections.getAudioNodeConnections)(proxy);
    const audioWorkletProcessor = await (0, _getAudioWorkletProcessor.getAudioWorkletProcessor)(nativeOfflineAudioContext, proxy);
    const inputs = (0, _createNestedArrays.createNestedArrays)(options.numberOfInputs, options.channelCount);
    const outputs = (0, _createNestedArrays.createNestedArrays)(options.numberOfOutputs, outputChannelCount);
    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name)=>({
            ...prmtrs,
            [name]: new Float32Array(128)
        }), {});
    for(let i = 0; i < length; i += 128){
        if (options.numberOfInputs > 0 && renderedBuffer !== null) {
            for(let j = 0; j < options.numberOfInputs; j += 1)for(let k = 0; k < options.channelCount; k += 1)(0, _copyFromChannel.copyFromChannel)(renderedBuffer, inputs[j], k, k, i);
        }
        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) processorConstructor.parameterDescriptors.forEach(({ name }, index)=>{
            (0, _copyFromChannel.copyFromChannel)(renderedBuffer, parameters, name, numberOfInputChannels + index, i);
        });
        for(let j = 0; j < options.numberOfInputs; j += 1){
            for(let k = 0; k < outputChannelCount[j]; k += 1)// The byteLength will be 0 when the ArrayBuffer was transferred.
            if (outputs[j][k].byteLength === 0) outputs[j][k] = new Float32Array(128);
        }
        try {
            const potentiallyEmptyInputs = inputs.map((input, index)=>{
                if (audioNodeConnections.activeInputs[index].size === 0) return [];
                return input;
            });
            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, ()=>audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));
            if (processedBuffer !== null) for(let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1){
                for(let k = 0; k < outputChannelCount[j]; k += 1)(0, _copyToChannel.copyToChannel)(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);
                outputChannelSplitterNodeOutput += outputChannelCount[j];
            }
            if (!activeSourceFlag) break;
        } catch (error) {
            proxy.dispatchEvent(new ErrorEvent("processorerror", {
                colno: error.colno,
                filename: error.filename,
                lineno: error.lineno,
                message: error.message
            }));
            break;
        }
    }
    return processedBuffer;
};
const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext)=>{
    return (name, options, processorConstructor)=>{
        const renderedNativeAudioNodes = new WeakMap();
        let processedBufferPromise = null;
        const createAudioNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeAudioWorkletNode = getNativeAudioNode(proxy);
            let nativeOutputNodes = null;
            const nativeAudioWorkletNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeAudioWorkletNode, nativeOfflineAudioContext);
            const outputChannelCount = Array.isArray(options.outputChannelCount) ? options.outputChannelCount : Array.from(options.outputChannelCount);
            // Bug #61: Only Chrome, Edge & Firefox have an implementation of the AudioWorkletNode yet.
            if (nativeAudioWorkletNodeConstructor === null) {
                const numberOfOutputChannels = outputChannelCount.reduce((sum, value)=>sum + value, 0);
                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {
                    channelCount: Math.max(1, numberOfOutputChannels),
                    channelCountMode: "explicit",
                    channelInterpretation: "discrete",
                    numberOfOutputs: Math.max(1, numberOfOutputChannels)
                });
                const outputChannelMergerNodes = [];
                for(let i = 0; i < proxy.numberOfOutputs; i += 1)outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {
                    channelCount: 1,
                    channelCountMode: "explicit",
                    channelInterpretation: "speakers",
                    numberOfInputs: outputChannelCount[i]
                }));
                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {
                    channelCount: options.channelCount,
                    channelCountMode: options.channelCountMode,
                    channelInterpretation: options.channelInterpretation,
                    gain: 1
                });
                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);
                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);
                nativeOutputNodes = [
                    outputChannelSplitterNode,
                    outputChannelMergerNodes,
                    outputGainNode
                ];
            } else if (!nativeAudioWorkletNodeIsOwnedByContext) nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);
            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);
            if (nativeOutputNodes !== null) {
                if (processedBufferPromise === null) {
                    if (processorConstructor === undefined) throw new Error("Missing the processor constructor.");
                    if (nativeOfflineAudioContextConstructor === null) throw new Error("Missing the native OfflineAudioContext constructor.");
                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.
                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;
                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;
                    const numberOfChannels = numberOfInputChannels + numberOfParameters;
                    const renderBuffer = async ()=>{
                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, // Ceil the length to the next full render quantum.
                        // Bug #17: Safari does not yet expose the length.
                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);
                        const gainNodes = [];
                        const inputChannelSplitterNodes = [];
                        for(let i = 0; i < options.numberOfInputs; i += 1){
                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {
                                channelCount: options.channelCount,
                                channelCountMode: options.channelCountMode,
                                channelInterpretation: options.channelInterpretation,
                                gain: 1
                            }));
                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {
                                channelCount: options.channelCount,
                                channelCountMode: "explicit",
                                channelInterpretation: "discrete",
                                numberOfOutputs: options.channelCount
                            }));
                        }
                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam)=>{
                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {
                                channelCount: 1,
                                channelCountMode: "explicit",
                                channelInterpretation: "discrete",
                                offset: audioParam.value
                            });
                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);
                            return constantSourceNode;
                        }));
                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {
                            channelCount: 1,
                            channelCountMode: "explicit",
                            channelInterpretation: "speakers",
                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)
                        });
                        for(let i = 0; i < options.numberOfInputs; i += 1){
                            gainNodes[i].connect(inputChannelSplitterNodes[i]);
                            for(let j = 0; j < options.channelCount; j += 1)inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);
                        }
                        for (const [index, constantSourceNode] of constantSourceNodes.entries()){
                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);
                            constantSourceNode.start(0);
                        }
                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);
                        await Promise.all(gainNodes.map((gainNode)=>renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode)));
                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);
                    };
                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);
                }
                const processedBuffer = await processedBufferPromise;
                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {
                    buffer: null,
                    channelCount: 2,
                    channelCountMode: "max",
                    channelInterpretation: "speakers",
                    loop: false,
                    loopEnd: 0,
                    loopStart: 0,
                    playbackRate: 1
                });
                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;
                if (processedBuffer !== null) {
                    audioBufferSourceNode.buffer = processedBuffer;
                    audioBufferSourceNode.start(0);
                }
                audioBufferSourceNode.connect(outputChannelSplitterNode);
                for(let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1){
                    const outputChannelMergerNode = outputChannelMergerNodes[i];
                    for(let j = 0; j < outputChannelCount[i]; j += 1)outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);
                    outputChannelSplitterNodeOutput += outputChannelCount[i];
                }
                return outputGainNode;
            }
            if (!nativeAudioWorkletNodeIsOwnedByContext) for (const [nm, audioParam] of proxy.parameters.entries())await renderAutomation(nativeOfflineAudioContext, audioParam, // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.
            nativeAudioWorkletNode.parameters.get(nm));
            else for (const [nm, audioParam] of proxy.parameters.entries())await connectAudioParam(nativeOfflineAudioContext, audioParam, // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.
            nativeAudioWorkletNode.parameters.get(nm));
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);
            return nativeAudioWorkletNode;
        };
        return {
            render (proxy, nativeOfflineAudioContext) {
                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);
                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);
                return createAudioNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../helpers/copy-from-channel":"7bLp3","../helpers/copy-to-channel":"eA0D4","../helpers/create-nested-arrays":"jcLoC","../helpers/get-audio-node-connections":"huPRp","../helpers/get-audio-worklet-processor":"k4Q26","../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7bLp3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "copyFromChannel", ()=>copyFromChannel);
function copyFromChannel(audioBuffer, // @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }
parent, key, channelNumber, bufferOffset) {
    if (typeof audioBuffer.copyFromChannel === "function") {
        // The byteLength will be 0 when the ArrayBuffer was transferred.
        if (parent[key].byteLength === 0) parent[key] = new Float32Array(128);
        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);
    // Bug #5: Safari does not support copyFromChannel().
    } else {
        const channelData = audioBuffer.getChannelData(channelNumber);
        // The byteLength will be 0 when the ArrayBuffer was transferred.
        if (parent[key].byteLength === 0) parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);
        else {
            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);
            parent[key].set(slicedInput);
        }
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eA0D4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "copyToChannel", ()=>copyToChannel);
const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset)=>{
    if (typeof audioBuffer.copyToChannel === "function") // The byteLength will be 0 when the ArrayBuffer was transferred.
    {
        if (parent[key].byteLength !== 0) audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);
    } else // The byteLength will be 0 when the ArrayBuffer was transferred.
    if (parent[key].byteLength !== 0) audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jcLoC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNestedArrays", ()=>createNestedArrays);
const createNestedArrays = (x, y)=>{
    const arrays = [];
    for(let i = 0; i < x; i += 1){
        const array = [];
        const length = typeof y === "number" ? y : y[i];
        for(let j = 0; j < length; j += 1)array.push(new Float32Array(128));
        arrays.push(array);
    }
    return arrays;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k4Q26":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getAudioWorkletProcessor", ()=>getAudioWorkletProcessor);
var _globals = require("../globals");
var _getNativeAudioNode = require("./get-native-audio-node");
var _getValueForKey = require("./get-value-for-key");
const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy)=>{
    const nodeToProcessorMap = (0, _getValueForKey.getValueForKey)((0, _globals.NODE_TO_PROCESSOR_MAPS), nativeOfflineAudioContext);
    const nativeAudioWorkletNode = (0, _getNativeAudioNode.getNativeAudioNode)(proxy);
    return (0, _getValueForKey.getValueForKey)(nodeToProcessorMap, nativeAudioWorkletNode);
};

},{"../globals":"j1ar4","./get-native-audio-node":"f9hIK","./get-value-for-key":"kJr16","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1Qln6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createBaseAudioContextConstructor", ()=>createBaseAudioContextConstructor);
const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor)=>{
    return class BaseAudioContext extends minimalBaseAudioContextConstructor {
        constructor(_nativeContext, numberOfChannels){
            super(_nativeContext, numberOfChannels);
            this._nativeContext = _nativeContext;
            this._audioWorklet = addAudioWorkletModule === undefined ? undefined : {
                addModule: (moduleURL, options)=>{
                    return addAudioWorkletModule(this, moduleURL, options);
                }
            };
        }
        get audioWorklet() {
            return this._audioWorklet;
        }
        createAnalyser() {
            return new analyserNodeConstructor(this);
        }
        createBiquadFilter() {
            return new biquadFilterNodeConstructor(this);
        }
        createBuffer(numberOfChannels, length, sampleRate) {
            return new audioBufferConstructor({
                length,
                numberOfChannels,
                sampleRate
            });
        }
        createBufferSource() {
            return new audioBufferSourceNodeConstructor(this);
        }
        createChannelMerger(numberOfInputs = 6) {
            return new channelMergerNodeConstructor(this, {
                numberOfInputs
            });
        }
        createChannelSplitter(numberOfOutputs = 6) {
            return new channelSplitterNodeConstructor(this, {
                numberOfOutputs
            });
        }
        createConstantSource() {
            return new constantSourceNodeConstructor(this);
        }
        createConvolver() {
            return new convolverNodeConstructor(this);
        }
        createDelay(maxDelayTime = 1) {
            return new delayNodeConstructor(this, {
                maxDelayTime
            });
        }
        createDynamicsCompressor() {
            return new dynamicsCompressorNodeConstructor(this);
        }
        createGain() {
            return new gainNodeConstructor(this);
        }
        createIIRFilter(feedforward, feedback) {
            return new iIRFilterNodeConstructor(this, {
                feedback,
                feedforward
            });
        }
        createOscillator() {
            return new oscillatorNodeConstructor(this);
        }
        createPanner() {
            return new pannerNodeConstructor(this);
        }
        createPeriodicWave(real, imag, constraints = {
            disableNormalization: false
        }) {
            return new periodicWaveConstructor(this, {
                ...constraints,
                imag,
                real
            });
        }
        createStereoPanner() {
            return new stereoPannerNodeConstructor(this);
        }
        createWaveShaper() {
            return new waveShaperNodeConstructor(this);
        }
        decodeAudioData(audioData, successCallback, errorCallback) {
            return decodeAudioData(this._nativeContext, audioData).then((audioBuffer)=>{
                if (typeof successCallback === "function") successCallback(audioBuffer);
                return audioBuffer;
            }, (err)=>{
                if (typeof errorCallback === "function") errorCallback(err);
                throw err;
            });
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2ojuk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createBiquadFilterNodeConstructor", ()=>createBiquadFilterNodeConstructor);
var _constants = require("../constants");
const DEFAULT_OPTIONS = {
    Q: 1,
    channelCount: 2,
    channelCountMode: "max",
    channelInterpretation: "speakers",
    detune: 0,
    frequency: 350,
    gain: 0,
    type: "lowpass"
};
const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime)=>{
    return class BiquadFilterNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const biquadFilterNodeRenderer = isOffline ? createBiquadFilterNodeRenderer() : null;
            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);
            // Bug #80: Safari does not export the correct values for maxValue and minValue.
            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, (0, _constants.MOST_POSITIVE_SINGLE_FLOAT), (0, _constants.MOST_NEGATIVE_SINGLE_FLOAT));
            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.
            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2((0, _constants.MOST_POSITIVE_SINGLE_FLOAT)), -1200 * Math.log2((0, _constants.MOST_POSITIVE_SINGLE_FLOAT)));
            // Bug #77: Firefox & Safari do not export the correct value for minValue.
            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);
            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.
            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10((0, _constants.MOST_POSITIVE_SINGLE_FLOAT)), (0, _constants.MOST_NEGATIVE_SINGLE_FLOAT));
            this._nativeBiquadFilterNode = nativeBiquadFilterNode;
            // @todo Determine a meaningful tail-time instead of just using one second.
            setAudioNodeTailTime(this, 1);
        }
        get detune() {
            return this._detune;
        }
        get frequency() {
            return this._frequency;
        }
        get gain() {
            return this._gain;
        }
        get Q() {
            return this._Q;
        }
        get type() {
            return this._nativeBiquadFilterNode.type;
        }
        set type(value) {
            this._nativeBiquadFilterNode.type = value;
        }
        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
            // Bug #189: Safari does throw an InvalidStateError.
            try {
                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);
            } catch (err) {
                if (err.code === 11) throw createInvalidAccessError();
                throw err;
            }
            // Bug #68: Safari does not throw an error if the parameters differ in their length.
            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) throw createInvalidAccessError();
        }
    };
};

},{"../constants":"au584","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hC3lP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createBiquadFilterNodeRendererFactory", ()=>createBiquadFilterNodeRendererFactory);
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode)=>{
    return ()=>{
        const renderedNativeBiquadFilterNodes = new WeakMap();
        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeBiquadFilterNode = getNativeAudioNode(proxy);
            /*
             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created
             * again.
             */ const nativeBiquadFilterNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeBiquadFilterNode, nativeOfflineAudioContext);
            if (!nativeBiquadFilterNodeIsOwnedByContext) {
                const options = {
                    Q: nativeBiquadFilterNode.Q.value,
                    channelCount: nativeBiquadFilterNode.channelCount,
                    channelCountMode: nativeBiquadFilterNode.channelCountMode,
                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,
                    detune: nativeBiquadFilterNode.detune.value,
                    frequency: nativeBiquadFilterNode.frequency.value,
                    gain: nativeBiquadFilterNode.gain.value,
                    type: nativeBiquadFilterNode.type
                };
                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);
            }
            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);
            if (!nativeBiquadFilterNodeIsOwnedByContext) {
                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);
                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);
                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);
                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);
            } else {
                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);
                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);
                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);
                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);
            }
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);
            return nativeBiquadFilterNode;
        };
        return {
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);
                if (renderedNativeBiquadFilterNode !== undefined) return Promise.resolve(renderedNativeBiquadFilterNode);
                return createBiquadFilterNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jAn86":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createCacheTestResult", ()=>createCacheTestResult);
const createCacheTestResult = (ongoingTests, testResults)=>{
    return (tester, test)=>{
        const cachedTestResult = testResults.get(tester);
        if (cachedTestResult !== undefined) return cachedTestResult;
        const ongoingTest = ongoingTests.get(tester);
        if (ongoingTest !== undefined) return ongoingTest;
        try {
            const synchronousTestResult = test();
            if (synchronousTestResult instanceof Promise) {
                ongoingTests.set(tester, synchronousTestResult);
                return synchronousTestResult.catch(()=>false).then((finalTestResult)=>{
                    ongoingTests.delete(tester);
                    testResults.set(tester, finalTestResult);
                    return finalTestResult;
                });
            }
            testResults.set(tester, synchronousTestResult);
            return synchronousTestResult;
        } catch  {
            testResults.set(tester, false);
            return false;
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5qPp9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createChannelMergerNodeConstructor", ()=>createChannelMergerNodeConstructor);
const DEFAULT_OPTIONS = {
    channelCount: 1,
    channelCountMode: "explicit",
    channelInterpretation: "speakers",
    numberOfInputs: 6
};
const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext)=>{
    return class ChannelMergerNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);
            const channelMergerNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null;
            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4213f":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createChannelMergerNodeRendererFactory", ()=>createChannelMergerNodeRendererFactory);
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode)=>{
    return ()=>{
        const renderedNativeAudioNodes = new WeakMap();
        const createAudioNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeAudioNode = getNativeAudioNode(proxy);
            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeAudioNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeAudioNode, nativeOfflineAudioContext);
            if (!nativeAudioNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeAudioNode.channelCount,
                    channelCountMode: nativeAudioNode.channelCountMode,
                    channelInterpretation: nativeAudioNode.channelInterpretation,
                    numberOfInputs: nativeAudioNode.numberOfInputs
                };
                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);
            }
            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);
            return nativeAudioNode;
        };
        return {
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
                if (renderedNativeAudioNode !== undefined) return Promise.resolve(renderedNativeAudioNode);
                return createAudioNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kBxxA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createChannelSplitterNodeConstructor", ()=>createChannelSplitterNodeConstructor);
const DEFAULT_OPTIONS = {
    channelCount: 6,
    channelCountMode: "explicit",
    channelInterpretation: "discrete",
    numberOfOutputs: 6
};
const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions)=>{
    return class ChannelSplitterNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = sanitizeChannelSplitterOptions({
                ...DEFAULT_OPTIONS,
                ...options
            });
            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);
            const channelSplitterNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null;
            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eO46O":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createChannelSplitterNodeRendererFactory", ()=>createChannelSplitterNodeRendererFactory);
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode)=>{
    return ()=>{
        const renderedNativeAudioNodes = new WeakMap();
        const createAudioNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeAudioNode = getNativeAudioNode(proxy);
            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeAudioNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeAudioNode, nativeOfflineAudioContext);
            if (!nativeAudioNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeAudioNode.channelCount,
                    channelCountMode: nativeAudioNode.channelCountMode,
                    channelInterpretation: nativeAudioNode.channelInterpretation,
                    numberOfOutputs: nativeAudioNode.numberOfOutputs
                };
                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);
            }
            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);
            return nativeAudioNode;
        };
        return {
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
                if (renderedNativeAudioNode !== undefined) return Promise.resolve(renderedNativeAudioNode);
                return createAudioNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hqUP2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createConnectAudioParam", ()=>createConnectAudioParam);
const createConnectAudioParam = (renderInputsOfAudioParam)=>{
    return (nativeOfflineAudioContext, audioParam, nativeAudioParam)=>{
        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8jyft":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createConnectMultipleOutputs", ()=>createConnectMultipleOutputs);
var _nativeAudioNode = require("../guards/native-audio-node");
const createConnectMultipleOutputs = (createIndexSizeError)=>{
    return (outputAudioNodes, destination, output = 0, input = 0)=>{
        const outputAudioNode = outputAudioNodes[output];
        if (outputAudioNode === undefined) throw createIndexSizeError();
        if ((0, _nativeAudioNode.isNativeAudioNode)(destination)) return outputAudioNode.connect(destination, 0, input);
        return outputAudioNode.connect(destination, 0);
    };
};

},{"../guards/native-audio-node":"hUupW","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hT5R1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createConnectedNativeAudioBufferSourceNodeFactory", ()=>createConnectedNativeAudioBufferSourceNodeFactory);
const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode)=>{
    return (nativeContext, nativeAudioNode)=>{
        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {
            buffer: null,
            channelCount: 2,
            channelCountMode: "max",
            channelInterpretation: "speakers",
            loop: false,
            loopEnd: 0,
            loopStart: 0,
            playbackRate: 1
        });
        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);
        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;
        nativeAudioBufferSourceNode.loop = true;
        nativeAudioBufferSourceNode.connect(nativeAudioNode);
        nativeAudioBufferSourceNode.start();
        return ()=>{
            nativeAudioBufferSourceNode.stop();
            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6BBM1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createConstantSourceNodeConstructor", ()=>createConstantSourceNodeConstructor);
var _constants = require("../constants");
var _isActiveAudioNode = require("../helpers/is-active-audio-node");
var _setInternalStateToActive = require("../helpers/set-internal-state-to-active");
var _setInternalStateToPassive = require("../helpers/set-internal-state-to-passive");
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: "max",
    channelInterpretation: "speakers",
    offset: 1
};
const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener)=>{
    return class ConstantSourceNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const constantSourceNodeRenderer = isOffline ? createConstantSourceNodeRendererFactory() : null;
            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);
            this._constantSourceNodeRenderer = constantSourceNodeRenderer;
            this._nativeConstantSourceNode = nativeConstantSourceNode;
            /*
             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue
             * for GainNodes.
             */ this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, (0, _constants.MOST_POSITIVE_SINGLE_FLOAT), (0, _constants.MOST_NEGATIVE_SINGLE_FLOAT));
            this._onended = null;
        }
        get offset() {
            return this._offset;
        }
        get onended() {
            return this._onended;
        }
        set onended(value) {
            const wrappedListener = typeof value === "function" ? wrapEventListener(this, value) : null;
            this._nativeConstantSourceNode.onended = wrappedListener;
            const nativeOnEnded = this._nativeConstantSourceNode.onended;
            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
        }
        start(when = 0) {
            this._nativeConstantSourceNode.start(when);
            if (this._constantSourceNodeRenderer !== null) this._constantSourceNodeRenderer.start = when;
            if (this.context.state !== "closed") {
                (0, _setInternalStateToActive.setInternalStateToActive)(this);
                const resetInternalStateToPassive = ()=>{
                    this._nativeConstantSourceNode.removeEventListener("ended", resetInternalStateToPassive);
                    if ((0, _isActiveAudioNode.isActiveAudioNode)(this)) (0, _setInternalStateToPassive.setInternalStateToPassive)(this);
                };
                this._nativeConstantSourceNode.addEventListener("ended", resetInternalStateToPassive);
            }
        }
        stop(when = 0) {
            this._nativeConstantSourceNode.stop(when);
            if (this._constantSourceNodeRenderer !== null) this._constantSourceNodeRenderer.stop = when;
        }
    };
};

},{"../constants":"au584","../helpers/is-active-audio-node":"j8Y4t","../helpers/set-internal-state-to-active":"gc0b0","../helpers/set-internal-state-to-passive":"1Xtwa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kDcHK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createConstantSourceNodeRendererFactory", ()=>createConstantSourceNodeRendererFactory);
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode)=>{
    return ()=>{
        const renderedNativeConstantSourceNodes = new WeakMap();
        let start = null;
        let stop = null;
        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeConstantSourceNode = getNativeAudioNode(proxy);
            /*
             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created
             * again.
             */ const nativeConstantSourceNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeConstantSourceNode, nativeOfflineAudioContext);
            if (!nativeConstantSourceNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeConstantSourceNode.channelCount,
                    channelCountMode: nativeConstantSourceNode.channelCountMode,
                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,
                    offset: nativeConstantSourceNode.offset.value
                };
                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);
                if (start !== null) nativeConstantSourceNode.start(start);
                if (stop !== null) nativeConstantSourceNode.stop(stop);
            }
            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);
            if (!nativeConstantSourceNodeIsOwnedByContext) await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);
            else await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);
            return nativeConstantSourceNode;
        };
        return {
            set start (value){
                start = value;
            },
            set stop (value){
                stop = value;
            },
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);
                if (renderedNativeConstantSourceNode !== undefined) return Promise.resolve(renderedNativeConstantSourceNode);
                return createConstantSourceNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1xC44":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createConvertNumberToUnsignedLong", ()=>createConvertNumberToUnsignedLong);
const createConvertNumberToUnsignedLong = (unit32Array)=>{
    return (value)=>{
        unit32Array[0] = value;
        return unit32Array[0];
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kcFQc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createConvolverNodeConstructor", ()=>createConvolverNodeConstructor);
const DEFAULT_OPTIONS = {
    buffer: null,
    channelCount: 2,
    channelCountMode: "clamped-max",
    channelInterpretation: "speakers",
    disableNormalization: false
};
const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime)=>{
    return class ConvolverNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const convolverNodeRenderer = isOffline ? createConvolverNodeRenderer() : null;
            super(context, false, nativeConvolverNode, convolverNodeRenderer);
            this._isBufferNullified = false;
            this._nativeConvolverNode = nativeConvolverNode;
            if (mergedOptions.buffer !== null) setAudioNodeTailTime(this, mergedOptions.buffer.duration);
        }
        get buffer() {
            if (this._isBufferNullified) return null;
            return this._nativeConvolverNode.buffer;
        }
        set buffer(value) {
            this._nativeConvolverNode.buffer = value;
            // Bug #115: Safari does not allow to set the buffer to null.
            if (value === null && this._nativeConvolverNode.buffer !== null) {
                const nativeContext = this._nativeConvolverNode.context;
                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);
                this._isBufferNullified = true;
                setAudioNodeTailTime(this, 0);
            } else {
                this._isBufferNullified = false;
                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);
            }
        }
        get normalize() {
            return this._nativeConvolverNode.normalize;
        }
        set normalize(value) {
            this._nativeConvolverNode.normalize = value;
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kmgKW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createConvolverNodeRendererFactory", ()=>createConvolverNodeRendererFactory);
var _nativeAudioNodeFaker = require("../guards/native-audio-node-faker");
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode)=>{
    return ()=>{
        const renderedNativeConvolverNodes = new WeakMap();
        const createConvolverNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeConvolverNode = getNativeAudioNode(proxy);
            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeConvolverNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeConvolverNode, nativeOfflineAudioContext);
            if (!nativeConvolverNodeIsOwnedByContext) {
                const options = {
                    buffer: nativeConvolverNode.buffer,
                    channelCount: nativeConvolverNode.channelCount,
                    channelCountMode: nativeConvolverNode.channelCountMode,
                    channelInterpretation: nativeConvolverNode.channelInterpretation,
                    disableNormalization: !nativeConvolverNode.normalize
                };
                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);
            }
            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);
            if ((0, _nativeAudioNodeFaker.isNativeAudioNodeFaker)(nativeConvolverNode)) await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);
            else await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode);
            return nativeConvolverNode;
        };
        return {
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);
                if (renderedNativeConvolverNode !== undefined) return Promise.resolve(renderedNativeConvolverNode);
                return createConvolverNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../guards/native-audio-node-faker":"fNQvH","../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7737w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createCreateNativeOfflineAudioContext", ()=>createCreateNativeOfflineAudioContext);
const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor)=>{
    return (numberOfChannels, length, sampleRate)=>{
        if (nativeOfflineAudioContextConstructor === null) throw new Error("Missing the native OfflineAudioContext constructor.");
        try {
            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);
        } catch (err) {
            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.
            if (err.name === "SyntaxError") throw createNotSupportedError();
            throw err;
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h0Bd5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createDataCloneError", ()=>createDataCloneError);
const createDataCloneError = ()=>new DOMException("", "DataCloneError");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"foJCq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createDecodeAudioData", ()=>createDecodeAudioData);
var _detachArrayBuffer = require("../helpers/detach-array-buffer");
var _wrapAudioBufferGetChannelDataMethod = require("../helpers/wrap-audio-buffer-get-channel-data-method");
const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds)=>{
    return (anyContext, audioData)=>{
        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);
        // Bug #43: Only Chrome and Edge do throw a DataCloneError.
        if (detachedArrayBuffers.has(audioData)) {
            const err = createDataCloneError();
            return Promise.reject(err);
        }
        // The audioData parameter maybe of a type which can't be added to a WeakSet.
        try {
            detachedArrayBuffers.add(audioData);
        } catch  {
        // Ignore errors.
        }
        // Bug #21: Safari does not support promises yet.
        if (cacheTestResult(testPromiseSupport, ()=>testPromiseSupport(nativeContext))) return nativeContext.decodeAudioData(audioData).then((audioBuffer)=>{
            // Bug #133: Safari does neuter the ArrayBuffer.
            (0, _detachArrayBuffer.detachArrayBuffer)(audioData).catch(()=>{
            // Ignore errors.
            });
            // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.
            if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, ()=>testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
            audioBufferStore.add(audioBuffer);
            return audioBuffer;
        });
        // Bug #21: Safari does not return a Promise yet.
        return new Promise((resolve, reject)=>{
            const complete = async ()=>{
                // Bug #133: Safari does neuter the ArrayBuffer.
                try {
                    await (0, _detachArrayBuffer.detachArrayBuffer)(audioData);
                } catch  {
                // Ignore errors.
                }
            };
            const fail = (err)=>{
                reject(err);
                complete();
            };
            // Bug #26: Safari throws a synchronous error.
            try {
                // Bug #1: Safari requires a successCallback.
                nativeContext.decodeAudioData(audioData, (audioBuffer)=>{
                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.
                    if (typeof audioBuffer.copyFromChannel !== "function") {
                        wrapAudioBufferCopyChannelMethods(audioBuffer);
                        (0, _wrapAudioBufferGetChannelDataMethod.wrapAudioBufferGetChannelDataMethod)(audioBuffer);
                    }
                    audioBufferStore.add(audioBuffer);
                    complete().then(()=>resolve(audioBuffer));
                }, (err)=>{
                    // Bug #4: Safari returns null instead of an error.
                    if (err === null) fail(createEncodingError());
                    else fail(err);
                });
            } catch (err) {
                fail(err);
            }
        });
    };
};

},{"../helpers/detach-array-buffer":"eX3OU","../helpers/wrap-audio-buffer-get-channel-data-method":"bXfRI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eX3OU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "detachArrayBuffer", ()=>detachArrayBuffer);
const detachArrayBuffer = (arrayBuffer)=>{
    const { port1, port2 } = new MessageChannel();
    return new Promise((resolve)=>{
        const closeAndResolve = ()=>{
            port2.onmessage = null;
            port1.close();
            port2.close();
            resolve();
        };
        port2.onmessage = ()=>closeAndResolve();
        try {
            port1.postMessage(arrayBuffer, [
                arrayBuffer
            ]);
        } catch  {
        // Ignore errors.
        } finally{
            closeAndResolve();
        }
    });
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jg4nh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createDecrementCycleCounter", ()=>createDecrementCycleCounter);
var _audioNodeOutputConnection = require("../guards/audio-node-output-connection");
const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext)=>{
    return (audioNode, count)=>{
        const cycleCounter = cycleCounters.get(audioNode);
        if (cycleCounter === undefined) throw new Error("Missing the expected cycle count.");
        const nativeContext = getNativeContext(audioNode.context);
        const isOffline = isNativeOfflineAudioContext(nativeContext);
        if (cycleCounter === count) {
            cycleCounters.delete(audioNode);
            if (!isOffline && isActiveAudioNode(audioNode)) {
                const nativeSourceAudioNode = getNativeAudioNode(audioNode);
                const { outputs } = getAudioNodeConnections(audioNode);
                for (const output of outputs)if ((0, _audioNodeOutputConnection.isAudioNodeOutputConnection)(output)) {
                    const nativeDestinationAudioNode = getNativeAudioNode(output[0]);
                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);
                } else {
                    const nativeDestinationAudioParam = getNativeAudioParam(output[0]);
                    nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);
                }
            }
        } else cycleCounters.set(audioNode, cycleCounter - count);
    };
};

},{"../guards/audio-node-output-connection":"5S2ZA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"byamz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createDelayNodeConstructor", ()=>createDelayNodeConstructor);
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: "max",
    channelInterpretation: "speakers",
    delayTime: 0,
    maxDelayTime: 1
};
const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime)=>{
    return class DelayNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const delayNodeRenderer = isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null;
            super(context, false, nativeDelayNode, delayNodeRenderer);
            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);
            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);
        }
        get delayTime() {
            return this._delayTime;
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1NO5F":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createDelayNodeRendererFactory", ()=>createDelayNodeRendererFactory);
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode)=>{
    return (maxDelayTime)=>{
        const renderedNativeDelayNodes = new WeakMap();
        const createDelayNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeDelayNode = getNativeAudioNode(proxy);
            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeDelayNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeDelayNode, nativeOfflineAudioContext);
            if (!nativeDelayNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeDelayNode.channelCount,
                    channelCountMode: nativeDelayNode.channelCountMode,
                    channelInterpretation: nativeDelayNode.channelInterpretation,
                    delayTime: nativeDelayNode.delayTime.value,
                    maxDelayTime
                };
                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);
            }
            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);
            if (!nativeDelayNodeIsOwnedByContext) await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);
            else await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode);
            return nativeDelayNode;
        };
        return {
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);
                if (renderedNativeDelayNode !== undefined) return Promise.resolve(renderedNativeDelayNode);
                return createDelayNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3FRri":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createDeleteActiveInputConnectionToAudioNode", ()=>createDeleteActiveInputConnectionToAudioNode);
const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet)=>{
    return (activeInputs, source, output, input)=>{
        return pickElementFromSet(activeInputs[input], (activeInputConnection)=>activeInputConnection[0] === source && activeInputConnection[1] === output);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fNWyx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createDeleteUnrenderedAudioWorkletNode", ()=>createDeleteUnrenderedAudioWorkletNode);
const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes)=>{
    return (nativeContext, audioWorkletNode)=>{
        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8VyTi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createDetectCycles", ()=>createDetectCycles);
var _audioNode = require("../guards/audio-node");
var _delayNode = require("../guards/delay-node");
const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey)=>{
    return function detectCycles(chain, nextLink) {
        const audioNode = (0, _audioNode.isAudioNode)(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);
        if ((0, _delayNode.isDelayNode)(audioNode)) return [];
        if (chain[0] === audioNode) return [
            chain
        ];
        if (chain.includes(audioNode)) return [];
        const { outputs } = getAudioNodeConnections(audioNode);
        return Array.from(outputs).map((outputConnection)=>detectCycles([
                ...chain,
                audioNode
            ], outputConnection[0])).reduce((mergedCycles, nestedCycles)=>mergedCycles.concat(nestedCycles), []);
    };
};

},{"../guards/audio-node":"daTkx","../guards/delay-node":"1HW08","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1HW08":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isDelayNode", ()=>isDelayNode);
const isDelayNode = (audioNode)=>{
    return "delayTime" in audioNode;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jaNPz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createDisconnectMultipleOutputs", ()=>createDisconnectMultipleOutputs);
var _nativeAudioNode = require("../guards/native-audio-node");
const getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output)=>{
    const outputAudioNode = outputAudioNodes[output];
    if (outputAudioNode === undefined) throw createIndexSizeError();
    return outputAudioNode;
};
const createDisconnectMultipleOutputs = (createIndexSizeError)=>{
    return (outputAudioNodes, destinationOrOutput, output, input = 0)=>{
        if (destinationOrOutput === undefined) return outputAudioNodes.forEach((outputAudioNode)=>outputAudioNode.disconnect());
        if (typeof destinationOrOutput === "number") return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();
        if ((0, _nativeAudioNode.isNativeAudioNode)(destinationOrOutput)) {
            if (output === undefined) return outputAudioNodes.forEach((outputAudioNode)=>outputAudioNode.disconnect(destinationOrOutput));
            if (input === undefined) return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);
            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);
        }
        if (output === undefined) return outputAudioNodes.forEach((outputAudioNode)=>outputAudioNode.disconnect(destinationOrOutput));
        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);
    };
};

},{"../guards/native-audio-node":"hUupW","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1G29t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createDynamicsCompressorNodeConstructor", ()=>createDynamicsCompressorNodeConstructor);
const DEFAULT_OPTIONS = {
    attack: 0.003,
    channelCount: 2,
    channelCountMode: "clamped-max",
    channelInterpretation: "speakers",
    knee: 30,
    ratio: 12,
    release: 0.25,
    threshold: -24
};
const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime)=>{
    return class DynamicsCompressorNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const dynamicsCompressorNodeRenderer = isOffline ? createDynamicsCompressorNodeRenderer() : null;
            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);
            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);
            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);
            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;
            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);
            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);
            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);
            setAudioNodeTailTime(this, 0.006);
        }
        get attack() {
            return this._attack;
        }
        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.
        get channelCount() {
            return this._nativeDynamicsCompressorNode.channelCount;
        }
        set channelCount(value) {
            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;
            this._nativeDynamicsCompressorNode.channelCount = value;
            if (value > 2) {
                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;
                throw createNotSupportedError();
            }
        }
        /*
         * Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be
         * overwritten here.
         */ get channelCountMode() {
            return this._nativeDynamicsCompressorNode.channelCountMode;
        }
        set channelCountMode(value) {
            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;
            this._nativeDynamicsCompressorNode.channelCountMode = value;
            if (value === "max") {
                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;
                throw createNotSupportedError();
            }
        }
        get knee() {
            return this._knee;
        }
        get ratio() {
            return this._ratio;
        }
        get reduction() {
            // Bug #111: Safari returns an AudioParam instead of a number.
            if (typeof this._nativeDynamicsCompressorNode.reduction.value === "number") return this._nativeDynamicsCompressorNode.reduction.value;
            return this._nativeDynamicsCompressorNode.reduction;
        }
        get release() {
            return this._release;
        }
        get threshold() {
            return this._threshold;
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"pqFDv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createDynamicsCompressorNodeRendererFactory", ()=>createDynamicsCompressorNodeRendererFactory);
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode)=>{
    return ()=>{
        const renderedNativeDynamicsCompressorNodes = new WeakMap();
        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);
            /*
             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be
             * created again.
             */ const nativeDynamicsCompressorNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeDynamicsCompressorNode, nativeOfflineAudioContext);
            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {
                const options = {
                    attack: nativeDynamicsCompressorNode.attack.value,
                    channelCount: nativeDynamicsCompressorNode.channelCount,
                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,
                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,
                    knee: nativeDynamicsCompressorNode.knee.value,
                    ratio: nativeDynamicsCompressorNode.ratio.value,
                    release: nativeDynamicsCompressorNode.release.value,
                    threshold: nativeDynamicsCompressorNode.threshold.value
                };
                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);
            }
            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);
            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {
                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);
                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);
                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);
                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);
                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);
            } else {
                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);
                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);
                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);
                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);
                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);
            }
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode);
            return nativeDynamicsCompressorNode;
        };
        return {
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);
                if (renderedNativeDynamicsCompressorNode !== undefined) return Promise.resolve(renderedNativeDynamicsCompressorNode);
                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2alua":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createEncodingError", ()=>createEncodingError);
const createEncodingError = ()=>new DOMException("", "EncodingError");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8CpjU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createEvaluateSource", ()=>createEvaluateSource);
const createEvaluateSource = (window)=>{
    return (source)=>new Promise((resolve, reject)=>{
            if (window === null) {
                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.
                reject(new SyntaxError());
                return;
            }
            const head = window.document.head;
            if (head === null) // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.
            reject(new SyntaxError());
            else {
                const script = window.document.createElement("script");
                // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.
                const blob = new Blob([
                    source
                ], {
                    type: "application/javascript"
                });
                const url = URL.createObjectURL(blob);
                const originalOnErrorHandler = window.onerror;
                const removeErrorEventListenerAndRevokeUrl = ()=>{
                    window.onerror = originalOnErrorHandler;
                    URL.revokeObjectURL(url);
                };
                window.onerror = (message, src, lineno, colno, error)=>{
                    // @todo Edge thinks the source is the one of the html document.
                    if (src === url || src === window.location.href && lineno === 1 && colno === 1) {
                        removeErrorEventListenerAndRevokeUrl();
                        reject(error);
                        return false;
                    }
                    if (originalOnErrorHandler !== null) return originalOnErrorHandler(message, src, lineno, colno, error);
                };
                script.onerror = ()=>{
                    removeErrorEventListenerAndRevokeUrl();
                    // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.
                    reject(new SyntaxError());
                };
                script.onload = ()=>{
                    removeErrorEventListenerAndRevokeUrl();
                    resolve();
                };
                script.src = url;
                script.type = "module";
                head.appendChild(script);
            }
        });
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gjDDq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createEventTargetConstructor", ()=>createEventTargetConstructor);
const createEventTargetConstructor = (wrapEventListener)=>{
    return class EventTarget {
        constructor(_nativeEventTarget){
            this._nativeEventTarget = _nativeEventTarget;
            this._listeners = new WeakMap();
        }
        addEventListener(type, listener, options) {
            if (listener !== null) {
                let wrappedEventListener = this._listeners.get(listener);
                if (wrappedEventListener === undefined) {
                    wrappedEventListener = wrapEventListener(this, listener);
                    if (typeof listener === "function") this._listeners.set(listener, wrappedEventListener);
                }
                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);
            }
        }
        dispatchEvent(event) {
            return this._nativeEventTarget.dispatchEvent(event);
        }
        removeEventListener(type, listener, options) {
            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);
            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gNRs4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createExposeCurrentFrameAndCurrentTime", ()=>createExposeCurrentFrameAndCurrentTime);
const createExposeCurrentFrameAndCurrentTime = (window)=>{
    return (currentTime, sampleRate, fn)=>{
        Object.defineProperties(window, {
            currentFrame: {
                configurable: true,
                get () {
                    return Math.round(currentTime * sampleRate);
                }
            },
            currentTime: {
                configurable: true,
                get () {
                    return currentTime;
                }
            }
        });
        try {
            return fn();
        } finally{
            if (window !== null) {
                delete window.currentFrame;
                delete window.currentTime;
            }
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h4onu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createFetchSource", ()=>createFetchSource);
const createFetchSource = (createAbortError)=>{
    return async (url)=>{
        try {
            const response = await fetch(url);
            if (response.ok) return [
                await response.text(),
                response.url
            ];
        } catch  {
        // Ignore errors.
        } // tslint:disable-line:no-empty
        throw createAbortError();
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9a9Vk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createGainNodeConstructor", ()=>createGainNodeConstructor);
var _constants = require("../constants");
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: "max",
    channelInterpretation: "speakers",
    gain: 1
};
const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext)=>{
    return class GainNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const gainNodeRenderer = isOffline ? createGainNodeRenderer() : null;
            super(context, false, nativeGainNode, gainNodeRenderer);
            // Bug #74: Safari does not export the correct values for maxValue and minValue.
            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, (0, _constants.MOST_POSITIVE_SINGLE_FLOAT), (0, _constants.MOST_NEGATIVE_SINGLE_FLOAT));
        }
        get gain() {
            return this._gain;
        }
    };
};

},{"../constants":"au584","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"itz3A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createGainNodeRendererFactory", ()=>createGainNodeRendererFactory);
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode)=>{
    return ()=>{
        const renderedNativeGainNodes = new WeakMap();
        const createGainNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeGainNode = getNativeAudioNode(proxy);
            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeGainNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeGainNode, nativeOfflineAudioContext);
            if (!nativeGainNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeGainNode.channelCount,
                    channelCountMode: nativeGainNode.channelCountMode,
                    channelInterpretation: nativeGainNode.channelInterpretation,
                    gain: nativeGainNode.gain.value
                };
                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);
            }
            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);
            if (!nativeGainNodeIsOwnedByContext) await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);
            else await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode);
            return nativeGainNode;
        };
        return {
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);
                if (renderedNativeGainNode !== undefined) return Promise.resolve(renderedNativeGainNode);
                return createGainNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dg8Gd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createGetActiveAudioWorkletNodeInputs", ()=>createGetActiveAudioWorkletNodeInputs);
const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey)=>{
    return (nativeAudioWorkletNode)=>getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k8CrE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createGetAudioNodeRenderer", ()=>createGetAudioNodeRenderer);
const createGetAudioNodeRenderer = (getAudioNodeConnections)=>{
    return (audioNode)=>{
        const audioNodeConnections = getAudioNodeConnections(audioNode);
        if (audioNodeConnections.renderer === null) throw new Error("Missing the renderer of the given AudioNode in the audio graph.");
        return audioNodeConnections.renderer;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cKCqS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createGetAudioNodeTailTime", ()=>createGetAudioNodeTailTime);
const createGetAudioNodeTailTime = (audioNodeTailTimeStore)=>{
    return (audioNode)=>{
        var _a;
        return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k8fN6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createGetAudioParamRenderer", ()=>createGetAudioParamRenderer);
const createGetAudioParamRenderer = (getAudioParamConnections)=>{
    return (audioParam)=>{
        const audioParamConnections = getAudioParamConnections(audioParam);
        if (audioParamConnections.renderer === null) throw new Error("Missing the renderer of the given AudioParam in the audio graph.");
        return audioParamConnections.renderer;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1vR8R":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createGetBackupOfflineAudioContext", ()=>createGetBackupOfflineAudioContext);
const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore)=>{
    return (nativeContext)=>{
        return backupOfflineAudioContextStore.get(nativeContext);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Ytji":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createGetNativeContext", ()=>createGetNativeContext);
var _invalidStateError = require("./invalid-state-error");
const createGetNativeContext = (contextStore)=>{
    return (context)=>{
        const nativeContext = contextStore.get(context);
        if (nativeContext === undefined) throw (0, _invalidStateError.createInvalidStateError)();
        return nativeContext;
    };
};

},{"./invalid-state-error":"diSZR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"diSZR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createInvalidStateError", ()=>createInvalidStateError);
const createInvalidStateError = ()=>new DOMException("", "InvalidStateError");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kLefC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createGetOrCreateBackupOfflineAudioContext", ()=>createGetOrCreateBackupOfflineAudioContext);
const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor)=>{
    return (nativeContext)=>{
        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);
        if (backupOfflineAudioContext !== undefined) return backupOfflineAudioContext;
        if (nativeOfflineAudioContextConstructor === null) throw new Error("Missing the native OfflineAudioContext constructor.");
        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.
        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);
        return backupOfflineAudioContext;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jI5Mi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createGetUnrenderedAudioWorkletNodes", ()=>createGetUnrenderedAudioWorkletNodes);
const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore)=>{
    return (nativeContext)=>{
        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);
        if (unrenderedAudioWorkletNodes === undefined) throw new Error("The context has no set of AudioWorkletNodes.");
        return unrenderedAudioWorkletNodes;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3jZOn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIIRFilterNodeConstructor", ()=>createIIRFilterNodeConstructor);
var _wrapIirFilterNodeGetFrequencyResponseMethod = require("../helpers/wrap-iir-filter-node-get-frequency-response-method");
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: "max",
    channelInterpretation: "speakers"
};
const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime)=>{
    return class IIRFilterNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);
            const iirFilterNodeRenderer = isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null;
            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);
            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.
            // @todo Write a test which allows other browsers to remain unpatched.
            (0, _wrapIirFilterNodeGetFrequencyResponseMethod.wrapIIRFilterNodeGetFrequencyResponseMethod)(nativeIIRFilterNode);
            this._nativeIIRFilterNode = nativeIIRFilterNode;
            // @todo Determine a meaningful tail-time instead of just using one second.
            setAudioNodeTailTime(this, 1);
        }
        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);
        }
    };
};

},{"../helpers/wrap-iir-filter-node-get-frequency-response-method":"chGIz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"chGIz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "wrapIIRFilterNodeGetFrequencyResponseMethod", ()=>wrapIIRFilterNodeGetFrequencyResponseMethod);
var _invalidAccessError = require("../factories/invalid-access-error");
const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode)=>{
    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse)=>{
        return (frequencyHz, magResponse, phaseResponse)=>{
            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) throw (0, _invalidAccessError.createInvalidAccessError)();
            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);
        };
    })(nativeIIRFilterNode.getFrequencyResponse);
};

},{"../factories/invalid-access-error":"u7Sql","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"u7Sql":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createInvalidAccessError", ()=>createInvalidAccessError);
const createInvalidAccessError = ()=>new DOMException("", "InvalidAccessError");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eyGMp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIIRFilterNodeRendererFactory", ()=>createIIRFilterNodeRendererFactory);
var _filterBuffer = require("../helpers/filter-buffer");
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward)=>{
    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);
    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);
    const feedbackLength = convertedFeedback.length;
    const feedforwardLength = convertedFeedforward.length;
    const minLength = Math.min(feedbackLength, feedforwardLength);
    if (convertedFeedback[0] !== 1) {
        for(let i = 0; i < feedbackLength; i += 1)convertedFeedforward[i] /= convertedFeedback[0];
        for(let i = 1; i < feedforwardLength; i += 1)convertedFeedback[i] /= convertedFeedback[0];
    }
    const bufferLength = 32;
    const xBuffer = new Float32Array(bufferLength);
    const yBuffer = new Float32Array(bufferLength);
    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);
    const numberOfChannels = renderedBuffer.numberOfChannels;
    for(let i = 0; i < numberOfChannels; i += 1){
        const input = renderedBuffer.getChannelData(i);
        const output = filteredBuffer.getChannelData(i);
        xBuffer.fill(0);
        yBuffer.fill(0);
        (0, _filterBuffer.filterBuffer)(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);
    }
    return filteredBuffer;
};
const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext)=>{
    return (feedback, feedforward)=>{
        const renderedNativeAudioNodes = new WeakMap();
        let filteredBufferPromise = null;
        const createAudioNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeAudioBufferSourceNode = null;
            let nativeIIRFilterNode = getNativeAudioNode(proxy);
            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeIIRFilterNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeIIRFilterNode, nativeOfflineAudioContext);
            // Bug #9: Safari does not support IIRFilterNodes.
            if (nativeOfflineAudioContext.createIIRFilter === undefined) nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {
                buffer: null,
                channelCount: 2,
                channelCountMode: "max",
                channelInterpretation: "speakers",
                loop: false,
                loopEnd: 0,
                loopStart: 0,
                playbackRate: 1
            });
            else if (!nativeIIRFilterNodeIsOwnedByContext) // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.
            nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);
            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);
            if (nativeAudioBufferSourceNode !== null) {
                if (filteredBufferPromise === null) {
                    if (nativeOfflineAudioContextConstructor === null) throw new Error("Missing the native OfflineAudioContext constructor.");
                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(// Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.
                    proxy.context.destination.channelCount, // Bug #17: Safari does not yet expose the length.
                    proxy.context.length, nativeOfflineAudioContext.sampleRate);
                    filteredBufferPromise = (async ()=>{
                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);
                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);
                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);
                    })();
                }
                const filteredBuffer = await filteredBufferPromise;
                nativeAudioBufferSourceNode.buffer = filteredBuffer;
                nativeAudioBufferSourceNode.start(0);
                return nativeAudioBufferSourceNode;
            }
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);
            return nativeIIRFilterNode;
        };
        return {
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
                if (renderedNativeAudioNode !== undefined) return Promise.resolve(renderedNativeAudioNode);
                return createAudioNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../helpers/filter-buffer":"bnsBL","../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bnsBL":[function(require,module,exports) {
// This implementation as shamelessly inspired by source code of
// tslint:disable-next-line:max-line-length
// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "filterBuffer", ()=>filterBuffer);
const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output)=>{
    const inputLength = input.length;
    let i = bufferIndex;
    for(let j = 0; j < inputLength; j += 1){
        let y = feedforward[0] * input[j];
        for(let k = 1; k < minLength; k += 1){
            const x = i - k & bufferLength - 1; // tslint:disable-line:no-bitwise
            y += feedforward[k] * xBuffer[x];
            y -= feedback[k] * yBuffer[x];
        }
        for(let k = minLength; k < feedforwardLength; k += 1)y += feedforward[k] * xBuffer[i - k & bufferLength - 1]; // tslint:disable-line:no-bitwise
        for(let k = minLength; k < feedbackLength; k += 1)y -= feedback[k] * yBuffer[i - k & bufferLength - 1]; // tslint:disable-line:no-bitwise
        xBuffer[i] = input[j];
        yBuffer[i] = y;
        i = i + 1 & bufferLength - 1; // tslint:disable-line:no-bitwise
        output[j] = y;
    }
    return i;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eIT5f":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIncrementCycleCounterFactory", ()=>createIncrementCycleCounterFactory);
var _audioNodeOutputConnection = require("../guards/audio-node-output-connection");
const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode)=>{
    return (isOffline)=>{
        return (audioNode, count)=>{
            const cycleCounter = cycleCounters.get(audioNode);
            if (cycleCounter === undefined) {
                if (!isOffline && isActiveAudioNode(audioNode)) {
                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);
                    const { outputs } = getAudioNodeConnections(audioNode);
                    for (const output of outputs)if ((0, _audioNodeOutputConnection.isAudioNodeOutputConnection)(output)) {
                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);
                        disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);
                    } else {
                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);
                        nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);
                    }
                }
                cycleCounters.set(audioNode, count);
            } else cycleCounters.set(audioNode, cycleCounter + count);
        };
    };
};

},{"../guards/audio-node-output-connection":"5S2ZA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eHxqH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIsAnyAudioContext", ()=>createIsAnyAudioContext);
const createIsAnyAudioContext = (contextStore, isNativeAudioContext)=>{
    return (anything)=>{
        const nativeContext = contextStore.get(anything);
        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"tjPuV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIsAnyAudioNode", ()=>createIsAnyAudioNode);
const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode)=>{
    return (anything)=>audioNodeStore.has(anything) || isNativeAudioNode(anything);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hncwE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIsAnyAudioParam", ()=>createIsAnyAudioParam);
const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam)=>{
    return (anything)=>audioParamStore.has(anything) || isNativeAudioParam(anything);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"evgeG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIsAnyOfflineAudioContext", ()=>createIsAnyOfflineAudioContext);
const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext)=>{
    return (anything)=>{
        const nativeContext = contextStore.get(anything);
        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ctipH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIsNativeAudioContext", ()=>createIsNativeAudioContext);
const createIsNativeAudioContext = (nativeAudioContextConstructor)=>{
    return (anything)=>{
        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6XefY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIsNativeAudioNode", ()=>createIsNativeAudioNode);
const createIsNativeAudioNode = (window)=>{
    return (anything)=>{
        return window !== null && typeof window.AudioNode === "function" && anything instanceof window.AudioNode;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8zo2U":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIsNativeAudioParam", ()=>createIsNativeAudioParam);
const createIsNativeAudioParam = (window)=>{
    return (anything)=>{
        return window !== null && typeof window.AudioParam === "function" && anything instanceof window.AudioParam;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bqWH8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIsNativeContext", ()=>createIsNativeContext);
const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext)=>{
    return (anything)=>{
        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"absQf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIsNativeOfflineAudioContext", ()=>createIsNativeOfflineAudioContext);
const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor)=>{
    return (anything)=>{
        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c4RLa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIsSecureContext", ()=>createIsSecureContext);
const createIsSecureContext = (window)=>window !== null && window.isSecureContext;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lB7Vh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createIsSupportedPromise", ()=>createIsSupportedPromise);
const createIsSupportedPromise = async (cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testConvolverNodeChannelCountSupport, testDomExceptionContrucorSupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport)=>{
    if (cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) && cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) && cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) && cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) && cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) && cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) && cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) && cacheTestResult(testConvolverNodeChannelCountSupport, testConvolverNodeChannelCountSupport) && cacheTestResult(testDomExceptionContrucorSupport, testDomExceptionContrucorSupport) && cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) && cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)) {
        const results = await Promise.all([
            cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport),
            cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport),
            cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport),
            cacheTestResult(testTransferablesSupport, testTransferablesSupport)
        ]);
        return results.every((result)=>result);
    }
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gvVfX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createMediaElementAudioSourceNodeConstructor", ()=>createMediaElementAudioSourceNodeConstructor);
const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext)=>{
    return class MediaElementAudioSourceNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);
            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.
            if (isNativeOfflineAudioContext(nativeContext)) throw TypeError();
            super(context, true, nativeMediaElementAudioSourceNode, null);
            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;
        }
        get mediaElement() {
            return this._nativeMediaElementAudioSourceNode.mediaElement;
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"76MLr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createMediaStreamAudioDestinationNodeConstructor", ()=>createMediaStreamAudioDestinationNodeConstructor);
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: "explicit",
    channelInterpretation: "speakers"
};
const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext)=>{
    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.
            if (isNativeOfflineAudioContext(nativeContext)) throw new TypeError();
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);
            super(context, false, nativeMediaStreamAudioDestinationNode, null);
            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;
        }
        get stream() {
            return this._nativeMediaStreamAudioDestinationNode.stream;
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7y92U":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createMediaStreamAudioSourceNodeConstructor", ()=>createMediaStreamAudioSourceNodeConstructor);
const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext)=>{
    return class MediaStreamAudioSourceNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);
            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.
            if (isNativeOfflineAudioContext(nativeContext)) throw new TypeError();
            super(context, true, nativeMediaStreamAudioSourceNode, null);
            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;
        }
        get mediaStream() {
            return this._nativeMediaStreamAudioSourceNode.mediaStream;
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eubAO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createMediaStreamTrackAudioSourceNodeConstructor", ()=>createMediaStreamTrackAudioSourceNodeConstructor);
const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext)=>{
    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);
            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Rukp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createMinimalAudioContextConstructor", ()=>createMinimalAudioContextConstructor);
var _deactivateAudioGraph = require("../helpers/deactivate-audio-graph");
var _isValidLatencyHint = require("../helpers/is-valid-latency-hint");
const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor)=>{
    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {
        constructor(options = {}){
            if (nativeAudioContextConstructor === null) throw new Error("Missing the native AudioContext constructor.");
            let nativeAudioContext;
            try {
                nativeAudioContext = new nativeAudioContextConstructor(options);
            } catch (err) {
                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.
                if (err.code === 12 && err.message === "sampleRate is not in range") throw createNotSupportedError();
                throw err;
            }
            // Bug #131 Safari returns null when there are four other AudioContexts running already.
            if (nativeAudioContext === null) throw createUnknownError();
            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.
            if (!(0, _isValidLatencyHint.isValidLatencyHint)(options.latencyHint)) throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);
            // Bug #150 Safari does not support setting the sampleRate.
            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) throw createNotSupportedError();
            super(nativeAudioContext, 2);
            const { latencyHint } = options;
            const { sampleRate } = nativeAudioContext;
            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.
            this._baseLatency = typeof nativeAudioContext.baseLatency === "number" ? nativeAudioContext.baseLatency : latencyHint === "balanced" ? 512 / sampleRate : latencyHint === "interactive" || latencyHint === undefined ? 256 / sampleRate : latencyHint === "playback" ? 1024 / sampleRate : /*
                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a
                                   * ScriptProcessorNode.
                                   */ Math.max(2, Math.min(128, Math.round(latencyHint * sampleRate / 128))) * 128 / sampleRate;
            this._nativeAudioContext = nativeAudioContext;
            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.
            if (nativeAudioContextConstructor.name === "webkitAudioContext") {
                this._nativeGainNode = nativeAudioContext.createGain();
                this._nativeOscillatorNode = nativeAudioContext.createOscillator();
                this._nativeGainNode.gain.value = 1e-37;
                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);
                this._nativeOscillatorNode.start();
            } else {
                this._nativeGainNode = null;
                this._nativeOscillatorNode = null;
            }
            this._state = null;
            /*
             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes
             * to 'running'.
             */ if (nativeAudioContext.state === "running") {
                this._state = "suspended";
                const revokeState = ()=>{
                    if (this._state === "suspended") this._state = null;
                    nativeAudioContext.removeEventListener("statechange", revokeState);
                };
                nativeAudioContext.addEventListener("statechange", revokeState);
            }
        }
        get baseLatency() {
            return this._baseLatency;
        }
        get state() {
            return this._state !== null ? this._state : this._nativeAudioContext.state;
        }
        close() {
            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.
            if (this.state === "closed") return this._nativeAudioContext.close().then(()=>{
                throw createInvalidStateError();
            });
            // Bug #34: If the state was set to suspended before it should be revoked now.
            if (this._state === "suspended") this._state = null;
            return this._nativeAudioContext.close().then(()=>{
                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {
                    this._nativeOscillatorNode.stop();
                    this._nativeGainNode.disconnect();
                    this._nativeOscillatorNode.disconnect();
                }
                (0, _deactivateAudioGraph.deactivateAudioGraph)(this);
            });
        }
        resume() {
            if (this._state === "suspended") return new Promise((resolve, reject)=>{
                const resolvePromise = ()=>{
                    this._nativeAudioContext.removeEventListener("statechange", resolvePromise);
                    if (this._nativeAudioContext.state === "running") resolve();
                    else this.resume().then(resolve, reject);
                };
                this._nativeAudioContext.addEventListener("statechange", resolvePromise);
            });
            return this._nativeAudioContext.resume().catch((err)=>{
                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.
                // Bug #56: Safari invokes the catch handler but without an error.
                if (err === undefined || err.code === 15) throw createInvalidStateError();
                throw err;
            });
        }
        suspend() {
            return this._nativeAudioContext.suspend().catch((err)=>{
                // Bug #56: Safari invokes the catch handler but without an error.
                if (err === undefined) throw createInvalidStateError();
                throw err;
            });
        }
    };
};

},{"../helpers/deactivate-audio-graph":"ap1I7","../helpers/is-valid-latency-hint":"7xWOy","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8u4st":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createMinimalBaseAudioContextConstructor", ()=>createMinimalBaseAudioContextConstructor);
var _globals = require("../globals");
const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener)=>{
    return class MinimalBaseAudioContext extends eventTargetConstructor {
        constructor(_nativeContext, numberOfChannels){
            super(_nativeContext);
            this._nativeContext = _nativeContext;
            (0, _globals.CONTEXT_STORE).set(this, _nativeContext);
            if (isNativeOfflineAudioContext(_nativeContext)) unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());
            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);
            this._listener = createAudioListener(this, _nativeContext);
            this._onstatechange = null;
        }
        get currentTime() {
            return this._nativeContext.currentTime;
        }
        get destination() {
            return this._destination;
        }
        get listener() {
            return this._listener;
        }
        get onstatechange() {
            return this._onstatechange;
        }
        set onstatechange(value) {
            const wrappedListener = typeof value === "function" ? wrapEventListener(this, value) : null;
            this._nativeContext.onstatechange = wrappedListener;
            const nativeOnStateChange = this._nativeContext.onstatechange;
            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;
        }
        get sampleRate() {
            return this._nativeContext.sampleRate;
        }
        get state() {
            return this._nativeContext.state;
        }
    };
};

},{"../globals":"j1ar4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9yhkF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createMinimalOfflineAudioContextConstructor", ()=>createMinimalOfflineAudioContextConstructor);
var _deactivateAudioGraph = require("../helpers/deactivate-audio-graph");
var _testPromiseSupport = require("../helpers/test-promise-support");
const DEFAULT_OPTIONS = {
    numberOfChannels: 1
};
const createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering)=>{
    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {
        constructor(options){
            const { length, numberOfChannels, sampleRate } = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);
            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.
            if (!cacheTestResult((0, _testPromiseSupport.testPromiseSupport), ()=>(0, _testPromiseSupport.testPromiseSupport)(nativeOfflineAudioContext))) nativeOfflineAudioContext.addEventListener("statechange", (()=>{
                let i = 0;
                const delayStateChangeEvent = (event)=>{
                    if (this._state === "running") {
                        if (i > 0) {
                            nativeOfflineAudioContext.removeEventListener("statechange", delayStateChangeEvent);
                            event.stopImmediatePropagation();
                            this._waitForThePromiseToSettle(event);
                        } else i += 1;
                    }
                };
                return delayStateChangeEvent;
            })());
            super(nativeOfflineAudioContext, numberOfChannels);
            this._length = length;
            this._nativeOfflineAudioContext = nativeOfflineAudioContext;
            this._state = null;
        }
        get length() {
            // Bug #17: Safari does not yet expose the length.
            if (this._nativeOfflineAudioContext.length === undefined) return this._length;
            return this._nativeOfflineAudioContext.length;
        }
        get state() {
            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;
        }
        startRendering() {
            /*
             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore
             * the state of the nativeOfflineAudioContext might no transition to running immediately.
             */ if (this._state === "running") return Promise.reject(createInvalidStateError());
            this._state = "running";
            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(()=>{
                this._state = null;
                (0, _deactivateAudioGraph.deactivateAudioGraph)(this);
            });
        }
        _waitForThePromiseToSettle(event) {
            if (this._state === null) this._nativeOfflineAudioContext.dispatchEvent(event);
            else setTimeout(()=>this._waitForThePromiseToSettle(event));
        }
    };
};

},{"../helpers/deactivate-audio-graph":"ap1I7","../helpers/test-promise-support":"4hyPB","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4hyPB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testPromiseSupport", ()=>testPromiseSupport);
const testPromiseSupport = (nativeContext)=>{
    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.
    const uint32Array = new Uint32Array([
        1179011410,
        40,
        1163280727,
        544501094,
        16,
        131073,
        44100,
        176400,
        1048580,
        1635017060,
        4,
        0
    ]);
    try {
        // Bug #1: Safari requires a successCallback.
        const promise = nativeContext.decodeAudioData(uint32Array.buffer, ()=>{
        // Ignore the success callback.
        });
        if (promise === undefined) return false;
        promise.catch(()=>{
        // Ignore rejected errors.
        });
        return true;
    } catch  {
    // Ignore errors.
    }
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eUd0z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createMonitorConnections", ()=>createMonitorConnections);
const createMonitorConnections = (insertElementInSet, isNativeAudioNode)=>{
    return (nativeAudioNode, whenConnected, whenDisconnected)=>{
        const connections = new Set();
        nativeAudioNode.connect = ((connect)=>{
            // tslint:disable-next-line:invalid-void no-inferrable-types
            return (destination, output = 0, input = 0)=>{
                const wasDisconnected = connections.size === 0;
                if (isNativeAudioNode(destination)) {
                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.
                    connect.call(nativeAudioNode, destination, output, input);
                    insertElementInSet(connections, [
                        destination,
                        output,
                        input
                    ], (connection)=>connection[0] === destination && connection[1] === output && connection[2] === input, true);
                    if (wasDisconnected) whenConnected();
                    return destination;
                }
                connect.call(nativeAudioNode, destination, output);
                insertElementInSet(connections, [
                    destination,
                    output
                ], (connection)=>connection[0] === destination && connection[1] === output, true);
                if (wasDisconnected) whenConnected();
                return;
            };
        })(nativeAudioNode.connect);
        nativeAudioNode.disconnect = ((disconnect)=>{
            return (destinationOrOutput, output, input)=>{
                const wasConnected = connections.size > 0;
                if (destinationOrOutput === undefined) {
                    disconnect.apply(nativeAudioNode);
                    connections.clear();
                } else if (typeof destinationOrOutput === "number") {
                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.
                    disconnect.call(nativeAudioNode, destinationOrOutput);
                    for (const connection of connections)if (connection[1] === destinationOrOutput) connections.delete(connection);
                } else {
                    if (isNativeAudioNode(destinationOrOutput)) // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.
                    disconnect.call(nativeAudioNode, destinationOrOutput, output, input);
                    else // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.
                    disconnect.call(nativeAudioNode, destinationOrOutput, output);
                    for (const connection of connections)if (connection[0] === destinationOrOutput && (output === undefined || connection[1] === output) && (input === undefined || connection[2] === input)) connections.delete(connection);
                }
                const isDisconnected = connections.size === 0;
                if (wasConnected && isDisconnected) whenDisconnected();
            };
        })(nativeAudioNode.disconnect);
        return nativeAudioNode;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eAIIV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeAnalyserNodeFactory", ()=>createNativeAnalyserNodeFactory);
var _assignNativeAudioNodeOption = require("../helpers/assign-native-audio-node-option");
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
var _testAnalyserNodeGetFloatTimeDomainDataMethodSupport = require("../helpers/test-analyser-node-get-float-time-domain-data-method-support");
var _wrapAnalyserNodeGetFloatTimeDomainDataMethod = require("../helpers/wrap-analyser-node-get-float-time-domain-data-method");
const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError)=>{
    return (nativeContext, options)=>{
        const nativeAnalyserNode = nativeContext.createAnalyser();
        // Bug #37: Firefox does not create an AnalyserNode with the default properties.
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeAnalyserNode, options);
        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.
        if (!(options.maxDecibels > options.minDecibels)) throw createIndexSizeError();
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeAnalyserNode, options, "fftSize");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeAnalyserNode, options, "maxDecibels");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeAnalyserNode, options, "minDecibels");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeAnalyserNode, options, "smoothingTimeConstant");
        // Bug #36: Safari does not support getFloatTimeDomainData() yet.
        if (!cacheTestResult((0, _testAnalyserNodeGetFloatTimeDomainDataMethodSupport.testAnalyserNodeGetFloatTimeDomainDataMethodSupport), ()=>(0, _testAnalyserNodeGetFloatTimeDomainDataMethodSupport.testAnalyserNodeGetFloatTimeDomainDataMethodSupport)(nativeAnalyserNode))) (0, _wrapAnalyserNodeGetFloatTimeDomainDataMethod.wrapAnalyserNodeGetFloatTimeDomainDataMethod)(nativeAnalyserNode);
        return nativeAnalyserNode;
    };
};

},{"../helpers/assign-native-audio-node-option":"gLjOv","../helpers/assign-native-audio-node-options":"hQ1ig","../helpers/test-analyser-node-get-float-time-domain-data-method-support":"7GxbJ","../helpers/wrap-analyser-node-get-float-time-domain-data-method":"glG5y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gLjOv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "assignNativeAudioNodeOption", ()=>assignNativeAudioNodeOption);
const assignNativeAudioNodeOption = (nativeAudioNode, options, option)=>{
    const value = options[option];
    if (value !== undefined && value !== nativeAudioNode[option]) nativeAudioNode[option] = value;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hQ1ig":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "assignNativeAudioNodeOptions", ()=>assignNativeAudioNodeOptions);
var _assignNativeAudioNodeOption = require("./assign-native-audio-node-option");
const assignNativeAudioNodeOptions = (nativeAudioNode, options)=>{
    (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeAudioNode, options, "channelCount");
    (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeAudioNode, options, "channelCountMode");
    (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeAudioNode, options, "channelInterpretation");
};

},{"./assign-native-audio-node-option":"gLjOv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7GxbJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testAnalyserNodeGetFloatTimeDomainDataMethodSupport", ()=>testAnalyserNodeGetFloatTimeDomainDataMethodSupport);
const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode)=>{
    return typeof nativeAnalyserNode.getFloatTimeDomainData === "function";
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"glG5y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "wrapAnalyserNodeGetFloatTimeDomainDataMethod", ()=>wrapAnalyserNodeGetFloatTimeDomainDataMethod);
const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode)=>{
    nativeAnalyserNode.getFloatTimeDomainData = (array)=>{
        const byteTimeDomainData = new Uint8Array(array.length);
        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);
        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);
        for(let i = 0; i < length; i += 1)array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;
        return array;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2XJiC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeAudioBufferConstructor", ()=>createNativeAudioBufferConstructor);
const createNativeAudioBufferConstructor = (window)=>{
    if (window === null) return null;
    if (window.hasOwnProperty("AudioBuffer")) return window.AudioBuffer;
    return null;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fj4aF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeAudioBufferSourceNodeFactory", ()=>createNativeAudioBufferSourceNodeFactory);
var _assignNativeAudioNodeAudioParamValue = require("../helpers/assign-native-audio-node-audio-param-value");
var _assignNativeAudioNodeOption = require("../helpers/assign-native-audio-node-option");
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
var _wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = require("../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls");
var _wrapAudioScheduledSourceNodeStartMethodNegativeParameters = require("../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters");
var _wrapAudioScheduledSourceNodeStopMethodNegativeParameters = require("../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters");
const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls)=>{
    return (nativeContext, options)=>{
        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeAudioBufferSourceNode, options);
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeAudioBufferSourceNode, options, "playbackRate");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeAudioBufferSourceNode, options, "buffer");
        // Bug #149: Safari does not yet support the detune AudioParam.
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeAudioBufferSourceNode, options, "loop");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeAudioBufferSourceNode, options, "loopEnd");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeAudioBufferSourceNode, options, "loopStart");
        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.
        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, ()=>testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) (0, _wrapAudioBufferSourceNodeStartMethodConsecutiveCalls.wrapAudioBufferSourceNodeStartMethodConsecutiveCalls)(nativeAudioBufferSourceNode);
        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.
        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, ()=>testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);
        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.
        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, ()=>testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);
        // Bug #44: Safari does not throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, ()=>testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) (0, _wrapAudioScheduledSourceNodeStartMethodNegativeParameters.wrapAudioScheduledSourceNodeStartMethodNegativeParameters)(nativeAudioBufferSourceNode);
        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.
        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, ()=>testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);
        // Bug #44: Only Firefox does not throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, ()=>testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) (0, _wrapAudioScheduledSourceNodeStopMethodNegativeParameters.wrapAudioScheduledSourceNodeStopMethodNegativeParameters)(nativeAudioBufferSourceNode);
        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.
        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);
        return nativeAudioBufferSourceNode;
    };
};

},{"../helpers/assign-native-audio-node-audio-param-value":"2k6Ld","../helpers/assign-native-audio-node-option":"gLjOv","../helpers/assign-native-audio-node-options":"hQ1ig","../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls":"80LCj","../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters":"eTpqG","../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters":"iy3CQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2k6Ld":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "assignNativeAudioNodeAudioParamValue", ()=>assignNativeAudioNodeAudioParamValue);
const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam)=>{
    const value = options[audioParam];
    if (value !== undefined && value !== nativeAudioNode[audioParam].value) nativeAudioNode[audioParam].value = value;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"80LCj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "wrapAudioBufferSourceNodeStartMethodConsecutiveCalls", ()=>wrapAudioBufferSourceNodeStartMethodConsecutiveCalls);
var _invalidStateError = require("../factories/invalid-state-error");
const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode)=>{
    nativeAudioBufferSourceNode.start = ((start)=>{
        let isScheduled = false;
        return (when = 0, offset = 0, duration)=>{
            if (isScheduled) throw (0, _invalidStateError.createInvalidStateError)();
            start.call(nativeAudioBufferSourceNode, when, offset, duration);
            isScheduled = true;
        };
    })(nativeAudioBufferSourceNode.start);
};

},{"../factories/invalid-state-error":"diSZR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eTpqG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "wrapAudioScheduledSourceNodeStartMethodNegativeParameters", ()=>wrapAudioScheduledSourceNodeStartMethodNegativeParameters);
const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode)=>{
    nativeAudioScheduledSourceNode.start = ((start)=>{
        return (when = 0, offset = 0, duration)=>{
            if (typeof duration === "number" && duration < 0 || offset < 0 || when < 0) throw new RangeError("The parameters can't be negative.");
            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.
            start.call(nativeAudioScheduledSourceNode, when, offset, duration);
        };
    })(nativeAudioScheduledSourceNode.start);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iy3CQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "wrapAudioScheduledSourceNodeStopMethodNegativeParameters", ()=>wrapAudioScheduledSourceNodeStopMethodNegativeParameters);
const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode)=>{
    nativeAudioScheduledSourceNode.stop = ((stop)=>{
        return (when = 0)=>{
            if (when < 0) throw new RangeError("The parameter can't be negative.");
            stop.call(nativeAudioScheduledSourceNode, when);
        };
    })(nativeAudioScheduledSourceNode.stop);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"awJaY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeAudioContextConstructor", ()=>createNativeAudioContextConstructor);
const createNativeAudioContextConstructor = (window)=>{
    if (window === null) return null;
    if (window.hasOwnProperty("AudioContext")) return window.AudioContext;
    return window.hasOwnProperty("webkitAudioContext") ? window.webkitAudioContext : null;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l61vA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeAudioDestinationNodeFactory", ()=>createNativeAudioDestinationNodeFactory);
const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors)=>{
    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext)=>{
        const nativeAudioDestinationNode = nativeContext.destination;
        // Bug #132: Safari does not have the correct channelCount.
        if (nativeAudioDestinationNode.channelCount !== channelCount) try {
            nativeAudioDestinationNode.channelCount = channelCount;
        } catch  {
        // Bug #169: Safari throws an error on each attempt to change the channelCount.
        }
        // Bug #83: Safari does not have the correct channelCountMode.
        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== "explicit") nativeAudioDestinationNode.channelCountMode = "explicit";
        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.
        if (nativeAudioDestinationNode.maxChannelCount === 0) Object.defineProperty(nativeAudioDestinationNode, "maxChannelCount", {
            value: channelCount
        });
        // Bug #168: No browser does yet have an AudioDestinationNode with an output.
        const gainNode = createNativeGainNode(nativeContext, {
            channelCount,
            channelCountMode: nativeAudioDestinationNode.channelCountMode,
            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,
            gain: 1
        });
        overwriteAccessors(gainNode, "channelCount", (get)=>()=>get.call(gainNode), (set)=>(value)=>{
                set.call(gainNode, value);
                try {
                    nativeAudioDestinationNode.channelCount = value;
                } catch (err) {
                    // Bug #169: Safari throws an error on each attempt to change the channelCount.
                    if (value > nativeAudioDestinationNode.maxChannelCount) throw err;
                }
            });
        overwriteAccessors(gainNode, "channelCountMode", (get)=>()=>get.call(gainNode), (set)=>(value)=>{
                set.call(gainNode, value);
                nativeAudioDestinationNode.channelCountMode = value;
            });
        overwriteAccessors(gainNode, "channelInterpretation", (get)=>()=>get.call(gainNode), (set)=>(value)=>{
                set.call(gainNode, value);
                nativeAudioDestinationNode.channelInterpretation = value;
            });
        Object.defineProperty(gainNode, "maxChannelCount", {
            get: ()=>nativeAudioDestinationNode.maxChannelCount
        });
        // @todo This should be disconnected when the context is closed.
        gainNode.connect(nativeAudioDestinationNode);
        return gainNode;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eKntr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeAudioWorkletNodeConstructor", ()=>createNativeAudioWorkletNodeConstructor);
const createNativeAudioWorkletNodeConstructor = (window)=>{
    if (window === null) return null;
    return window.hasOwnProperty("AudioWorkletNode") ? window.AudioWorkletNode : null;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3bxEK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeAudioWorkletNodeFactory", ()=>createNativeAudioWorkletNodeFactory);
var _testClonabilityOfAudioWorkletNodeOptions = require("../helpers/test-clonability-of-audio-worklet-node-options");
const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections)=>{
    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options)=>{
        if (nativeAudioWorkletNodeConstructor !== null) try {
            const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);
            const patchedEventListeners = new Map();
            let onprocessorerror = null;
            Object.defineProperties(nativeAudioWorkletNode, {
                /*
                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some
                     * browsers have no native implementation to achieve a consistent behavior.
                     */ channelCount: {
                    get: ()=>options.channelCount,
                    set: ()=>{
                        throw createInvalidStateError();
                    }
                },
                channelCountMode: {
                    get: ()=>"explicit",
                    set: ()=>{
                        throw createInvalidStateError();
                    }
                },
                // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.
                onprocessorerror: {
                    get: ()=>onprocessorerror,
                    set: (value)=>{
                        if (typeof onprocessorerror === "function") nativeAudioWorkletNode.removeEventListener("processorerror", onprocessorerror);
                        onprocessorerror = typeof value === "function" ? value : null;
                        if (typeof onprocessorerror === "function") nativeAudioWorkletNode.addEventListener("processorerror", onprocessorerror);
                    }
                }
            });
            nativeAudioWorkletNode.addEventListener = ((addEventListener)=>{
                return (...args)=>{
                    if (args[0] === "processorerror") {
                        const unpatchedEventListener = typeof args[1] === "function" ? args[1] : typeof args[1] === "object" && args[1] !== null && typeof args[1].handleEvent === "function" ? args[1].handleEvent : null;
                        if (unpatchedEventListener !== null) {
                            const patchedEventListener = patchedEventListeners.get(args[1]);
                            if (patchedEventListener !== undefined) args[1] = patchedEventListener;
                            else {
                                args[1] = (event)=>{
                                    // Bug #178: Chrome and Edge do fire an event of type error.
                                    if (event.type === "error") {
                                        Object.defineProperties(event, {
                                            type: {
                                                value: "processorerror"
                                            }
                                        });
                                        unpatchedEventListener(event);
                                    } else unpatchedEventListener(new ErrorEvent(args[0], {
                                        ...event
                                    }));
                                };
                                patchedEventListeners.set(unpatchedEventListener, args[1]);
                            }
                        }
                    }
                    // Bug #178: Chrome and Edge do fire an event of type error.
                    addEventListener.call(nativeAudioWorkletNode, "error", args[1], args[2]);
                    return addEventListener.call(nativeAudioWorkletNode, ...args);
                };
            })(nativeAudioWorkletNode.addEventListener);
            nativeAudioWorkletNode.removeEventListener = ((removeEventListener)=>{
                return (...args)=>{
                    if (args[0] === "processorerror") {
                        const patchedEventListener = patchedEventListeners.get(args[1]);
                        if (patchedEventListener !== undefined) {
                            patchedEventListeners.delete(args[1]);
                            args[1] = patchedEventListener;
                        }
                    }
                    // Bug #178: Chrome and Edge do fire an event of type error.
                    removeEventListener.call(nativeAudioWorkletNode, "error", args[1], args[2]);
                    return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);
                };
            })(nativeAudioWorkletNode.removeEventListener);
            /*
                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but
                 * has an output.
                 */ if (options.numberOfOutputs !== 0) {
                const nativeGainNode = createNativeGainNode(nativeContext, {
                    channelCount: 1,
                    channelCountMode: "explicit",
                    channelInterpretation: "discrete",
                    gain: 0
                });
                nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);
                const whenConnected = ()=>nativeGainNode.disconnect();
                const whenDisconnected = ()=>nativeGainNode.connect(nativeContext.destination);
                // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.
                return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);
            }
            return nativeAudioWorkletNode;
        } catch (err) {
            // Bug #60: Chrome & Edge throw an InvalidStateError instead of a NotSupportedError.
            if (err.code === 11) throw createNotSupportedError();
            throw err;
        }
        // Bug #61: Only Chrome & Edge have an implementation of the AudioWorkletNode yet.
        if (processorConstructor === undefined) throw createNotSupportedError();
        (0, _testClonabilityOfAudioWorkletNodeOptions.testClonabilityOfAudioWorkletNodeOptions)(options);
        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);
    };
};

},{"../helpers/test-clonability-of-audio-worklet-node-options":"6QBSP","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6QBSP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testClonabilityOfAudioWorkletNodeOptions", ()=>testClonabilityOfAudioWorkletNodeOptions);
const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions)=>{
    const { port1 } = new MessageChannel();
    try {
        // This will throw an error if the audioWorkletNodeOptions are not clonable.
        port1.postMessage(audioWorkletNodeOptions);
    } finally{
        port1.close();
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8dSFA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeAudioWorkletNodeFakerFactory", ()=>createNativeAudioWorkletNodeFakerFactory);
var _constants = require("../constants");
var _computeBufferSize = require("../helpers/compute-buffer-size");
var _copyFromChannel = require("../helpers/copy-from-channel");
var _copyToChannel = require("../helpers/copy-to-channel");
var _createAudioWorkletProcessor = require("../helpers/create-audio-worklet-processor");
var _createNestedArrays = require("../helpers/create-nested-arrays");
var _readOnlyMap = require("../read-only-map");
const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections)=>{
    return (nativeContext, baseLatency, processorConstructor, options)=>{
        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) throw createNotSupportedError();
        const outputChannelCount = Array.isArray(options.outputChannelCount) ? options.outputChannelCount : Array.from(options.outputChannelCount);
        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.
        if (outputChannelCount.some((channelCount)=>channelCount < 1)) throw createNotSupportedError();
        if (outputChannelCount.length !== options.numberOfOutputs) throw createIndexSizeError();
        // Bug #61: This is not part of the standard but required for the faker to work.
        if (options.channelCountMode !== "explicit") throw createNotSupportedError();
        const numberOfInputChannels = options.channelCount * options.numberOfInputs;
        const numberOfOutputChannels = outputChannelCount.reduce((sum, value1)=>sum + value1, 0);
        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;
        // Bug #61: This is not part of the standard but required for the faker to work.
        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) throw createNotSupportedError();
        const messageChannel = new MessageChannel();
        const gainNodes = [];
        const inputChannelSplitterNodes = [];
        for(let i = 0; i < options.numberOfInputs; i += 1){
            gainNodes.push(createNativeGainNode(nativeContext, {
                channelCount: options.channelCount,
                channelCountMode: options.channelCountMode,
                channelInterpretation: options.channelInterpretation,
                gain: 1
            }));
            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {
                channelCount: options.channelCount,
                channelCountMode: "explicit",
                channelInterpretation: "discrete",
                numberOfOutputs: options.channelCount
            }));
        }
        const constantSourceNodes = [];
        if (processorConstructor.parameterDescriptors !== undefined) for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors){
            const constantSourceNode = createNativeConstantSourceNode(nativeContext, {
                channelCount: 1,
                channelCountMode: "explicit",
                channelInterpretation: "discrete",
                offset: options.parameterData[name] !== undefined ? options.parameterData[name] : defaultValue === undefined ? 0 : defaultValue
            });
            Object.defineProperties(constantSourceNode.offset, {
                defaultValue: {
                    get: ()=>defaultValue === undefined ? 0 : defaultValue
                },
                maxValue: {
                    get: ()=>maxValue === undefined ? (0, _constants.MOST_POSITIVE_SINGLE_FLOAT) : maxValue
                },
                minValue: {
                    get: ()=>minValue === undefined ? (0, _constants.MOST_NEGATIVE_SINGLE_FLOAT) : minValue
                }
            });
            constantSourceNodes.push(constantSourceNode);
        }
        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {
            channelCount: 1,
            channelCountMode: "explicit",
            channelInterpretation: "speakers",
            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)
        });
        const bufferSize = (0, _computeBufferSize.computeBufferSize)(baseLatency, nativeContext.sampleRate);
        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.
        Math.max(1, numberOfOutputChannels));
        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {
            channelCount: Math.max(1, numberOfOutputChannels),
            channelCountMode: "explicit",
            channelInterpretation: "discrete",
            numberOfOutputs: Math.max(1, numberOfOutputChannels)
        });
        const outputChannelMergerNodes = [];
        for(let i = 0; i < options.numberOfOutputs; i += 1)outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {
            channelCount: 1,
            channelCountMode: "explicit",
            channelInterpretation: "speakers",
            numberOfInputs: outputChannelCount[i]
        }));
        for(let i = 0; i < options.numberOfInputs; i += 1){
            gainNodes[i].connect(inputChannelSplitterNodes[i]);
            for(let j = 0; j < options.channelCount; j += 1)inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);
        }
        const parameterMap = new (0, _readOnlyMap.ReadOnlyMap)(processorConstructor.parameterDescriptors === undefined ? [] : processorConstructor.parameterDescriptors.map(({ name }, index)=>{
            const constantSourceNode = constantSourceNodes[index];
            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);
            constantSourceNode.start(0);
            return [
                name,
                constantSourceNode.offset
            ];
        }));
        inputChannelMergerNode.connect(scriptProcessorNode);
        let channelInterpretation = options.channelInterpretation;
        let onprocessorerror = null;
        // Bug #87: Expose at least one output to make this node connectable.
        const outputAudioNodes = options.numberOfOutputs === 0 ? [
            scriptProcessorNode
        ] : outputChannelMergerNodes;
        const nativeAudioWorkletNodeFaker = {
            get bufferSize () {
                return bufferSize;
            },
            get channelCount () {
                return options.channelCount;
            },
            set channelCount (_){
                // Bug #61: This is not part of the standard but required for the faker to work.
                throw createInvalidStateError();
            },
            get channelCountMode () {
                return options.channelCountMode;
            },
            set channelCountMode (_){
                // Bug #61: This is not part of the standard but required for the faker to work.
                throw createInvalidStateError();
            },
            get channelInterpretation () {
                return channelInterpretation;
            },
            set channelInterpretation (value){
                for (const gainNode of gainNodes)gainNode.channelInterpretation = value;
                channelInterpretation = value;
            },
            get context () {
                return scriptProcessorNode.context;
            },
            get inputs () {
                return gainNodes;
            },
            get numberOfInputs () {
                return options.numberOfInputs;
            },
            get numberOfOutputs () {
                return options.numberOfOutputs;
            },
            get onprocessorerror () {
                return onprocessorerror;
            },
            set onprocessorerror (value){
                if (typeof onprocessorerror === "function") nativeAudioWorkletNodeFaker.removeEventListener("processorerror", onprocessorerror);
                onprocessorerror = typeof value === "function" ? value : null;
                if (typeof onprocessorerror === "function") nativeAudioWorkletNodeFaker.addEventListener("processorerror", onprocessorerror);
            },
            get parameters () {
                return parameterMap;
            },
            get port () {
                return messageChannel.port2;
            },
            addEventListener (...args) {
                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);
            },
            connect: connectMultipleOutputs.bind(null, outputAudioNodes),
            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),
            dispatchEvent (...args) {
                return scriptProcessorNode.dispatchEvent(args[0]);
            },
            removeEventListener (...args) {
                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);
            }
        };
        const patchedEventListeners = new Map();
        messageChannel.port1.addEventListener = ((addEventListener)=>{
            return (...args)=>{
                if (args[0] === "message") {
                    const unpatchedEventListener = typeof args[1] === "function" ? args[1] : typeof args[1] === "object" && args[1] !== null && typeof args[1].handleEvent === "function" ? args[1].handleEvent : null;
                    if (unpatchedEventListener !== null) {
                        const patchedEventListener = patchedEventListeners.get(args[1]);
                        if (patchedEventListener !== undefined) args[1] = patchedEventListener;
                        else {
                            args[1] = (event)=>{
                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, ()=>unpatchedEventListener(event));
                            };
                            patchedEventListeners.set(unpatchedEventListener, args[1]);
                        }
                    }
                }
                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);
            };
        })(messageChannel.port1.addEventListener);
        messageChannel.port1.removeEventListener = ((removeEventListener)=>{
            return (...args)=>{
                if (args[0] === "message") {
                    const patchedEventListener = patchedEventListeners.get(args[1]);
                    if (patchedEventListener !== undefined) {
                        patchedEventListeners.delete(args[1]);
                        args[1] = patchedEventListener;
                    }
                }
                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);
            };
        })(messageChannel.port1.removeEventListener);
        let onmessage = null;
        Object.defineProperty(messageChannel.port1, "onmessage", {
            get: ()=>onmessage,
            set: (value1)=>{
                if (typeof onmessage === "function") messageChannel.port1.removeEventListener("message", onmessage);
                onmessage = typeof value1 === "function" ? value1 : null;
                if (typeof onmessage === "function") {
                    messageChannel.port1.addEventListener("message", onmessage);
                    messageChannel.port1.start();
                }
            }
        });
        processorConstructor.prototype.port = messageChannel.port1;
        let audioWorkletProcessor = null;
        const audioWorkletProcessorPromise = (0, _createAudioWorkletProcessor.createAudioWorkletProcessor)(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);
        audioWorkletProcessorPromise.then((dWrkltPrcssr)=>audioWorkletProcessor = dWrkltPrcssr);
        const inputs = (0, _createNestedArrays.createNestedArrays)(options.numberOfInputs, options.channelCount);
        const outputs = (0, _createNestedArrays.createNestedArrays)(options.numberOfOutputs, outputChannelCount);
        const parameters = processorConstructor.parameterDescriptors === undefined ? [] : processorConstructor.parameterDescriptors.reduce((prmtrs, { name })=>({
                ...prmtrs,
                [name]: new Float32Array(128)
            }), {});
        let isActive = true;
        const disconnectOutputsGraph = ()=>{
            if (options.numberOfOutputs > 0) scriptProcessorNode.disconnect(outputChannelSplitterNode);
            for(let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1){
                const outputChannelMergerNode = outputChannelMergerNodes[i];
                for(let j = 0; j < outputChannelCount[i]; j += 1)outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);
                outputChannelSplitterNodeOutput += outputChannelCount[i];
            }
        };
        const activeInputIndexes = new Map();
        // tslint:disable-next-line:deprecation
        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer })=>{
            if (audioWorkletProcessor !== null) {
                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);
                for(let i = 0; i < bufferSize; i += 128){
                    for(let j = 0; j < options.numberOfInputs; j += 1)for(let k = 0; k < options.channelCount; k += 1)(0, _copyFromChannel.copyFromChannel)(inputBuffer, inputs[j], k, k, i);
                    if (processorConstructor.parameterDescriptors !== undefined) processorConstructor.parameterDescriptors.forEach(({ name }, index)=>{
                        (0, _copyFromChannel.copyFromChannel)(inputBuffer, parameters, name, numberOfInputChannels + index, i);
                    });
                    for(let j = 0; j < options.numberOfInputs; j += 1){
                        for(let k = 0; k < outputChannelCount[j]; k += 1)// The byteLength will be 0 when the ArrayBuffer was transferred.
                        if (outputs[j][k].byteLength === 0) outputs[j][k] = new Float32Array(128);
                    }
                    try {
                        const potentiallyEmptyInputs = inputs.map((input, index)=>{
                            const activeInput = activeInputs[index];
                            if (activeInput.size > 0) {
                                activeInputIndexes.set(index, bufferSize / 128);
                                return input;
                            }
                            const count = activeInputIndexes.get(index);
                            if (count === undefined) return [];
                            if (input.every((channelData)=>channelData.every((sample)=>sample === 0))) {
                                if (count === 1) activeInputIndexes.delete(index);
                                else activeInputIndexes.set(index, count - 1);
                            }
                            return input;
                        });
                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, ()=>audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));
                        isActive = activeSourceFlag;
                        for(let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1){
                            for(let k = 0; k < outputChannelCount[j]; k += 1)(0, _copyToChannel.copyToChannel)(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);
                            outputChannelSplitterNodeOutput += outputChannelCount[j];
                        }
                    } catch (error) {
                        isActive = false;
                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent("processorerror", {
                            colno: error.colno,
                            filename: error.filename,
                            lineno: error.lineno,
                            message: error.message
                        }));
                    }
                    if (!isActive) {
                        for(let j = 0; j < options.numberOfInputs; j += 1){
                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);
                            for(let k = 0; k < options.channelCount; k += 1)inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);
                        }
                        if (processorConstructor.parameterDescriptors !== undefined) {
                            const length = processorConstructor.parameterDescriptors.length;
                            for(let j = 0; j < length; j += 1){
                                const constantSourceNode = constantSourceNodes[j];
                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);
                                constantSourceNode.stop();
                            }
                        }
                        inputChannelMergerNode.disconnect(scriptProcessorNode);
                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation
                        if (isConnected) disconnectOutputsGraph();
                        else disconnectFakeGraph();
                        break;
                    }
                }
            }
        };
        let isConnected = false;
        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.
        const nativeGainNode = createNativeGainNode(nativeContext, {
            channelCount: 1,
            channelCountMode: "explicit",
            channelInterpretation: "discrete",
            gain: 0
        });
        const connectFakeGraph = ()=>scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);
        const disconnectFakeGraph = ()=>{
            scriptProcessorNode.disconnect(nativeGainNode);
            nativeGainNode.disconnect();
        };
        const whenConnected = ()=>{
            if (isActive) {
                disconnectFakeGraph();
                if (options.numberOfOutputs > 0) scriptProcessorNode.connect(outputChannelSplitterNode);
                for(let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1){
                    const outputChannelMergerNode = outputChannelMergerNodes[i];
                    for(let j = 0; j < outputChannelCount[i]; j += 1)outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);
                    outputChannelSplitterNodeOutput += outputChannelCount[i];
                }
            }
            isConnected = true;
        };
        const whenDisconnected = ()=>{
            if (isActive) {
                connectFakeGraph();
                disconnectOutputsGraph();
            }
            isConnected = false;
        };
        connectFakeGraph();
        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);
    };
};

},{"../constants":"au584","../helpers/compute-buffer-size":"bimg2","../helpers/copy-from-channel":"7bLp3","../helpers/copy-to-channel":"eA0D4","../helpers/create-audio-worklet-processor":"2k17r","../helpers/create-nested-arrays":"jcLoC","../read-only-map":"3UYbJ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bimg2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "computeBufferSize", ()=>computeBufferSize);
const computeBufferSize = (baseLatency, sampleRate)=>{
    if (baseLatency === null) return 512;
    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2k17r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioWorkletProcessor", ()=>createAudioWorkletProcessor);
var _globals = require("../globals");
var _createAudioWorkletProcessorPromise = require("./create-audio-worklet-processor-promise");
const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions)=>{
    let nodeToProcessorMap = (0, _globals.NODE_TO_PROCESSOR_MAPS).get(nativeContext);
    if (nodeToProcessorMap === undefined) {
        nodeToProcessorMap = new WeakMap();
        (0, _globals.NODE_TO_PROCESSOR_MAPS).set(nativeContext, nodeToProcessorMap);
    }
    const audioWorkletProcessorPromise = (0, _createAudioWorkletProcessorPromise.createAudioWorkletProcessorPromise)(processorConstructor, audioWorkletNodeOptions);
    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);
    return audioWorkletProcessorPromise;
};

},{"../globals":"j1ar4","./create-audio-worklet-processor-promise":"1r4lx","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1r4lx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAudioWorkletProcessorPromise", ()=>createAudioWorkletProcessorPromise);
var _cloneAudioWorkletNodeOptions = require("./clone-audio-worklet-node-options");
const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions)=>{
    const clonedAudioWorkletNodeOptions = await (0, _cloneAudioWorkletNodeOptions.cloneAudioWorkletNodeOptions)(audioWorkletNodeOptions);
    return new processorConstructor(clonedAudioWorkletNodeOptions);
};

},{"./clone-audio-worklet-node-options":"k1u1R","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k1u1R":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cloneAudioWorkletNodeOptions", ()=>cloneAudioWorkletNodeOptions);
const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions)=>{
    return new Promise((resolve, reject)=>{
        const { port1, port2 } = new MessageChannel();
        port1.onmessage = ({ data })=>{
            port1.close();
            port2.close();
            resolve(data);
        };
        port1.onmessageerror = ({ data })=>{
            port1.close();
            port2.close();
            reject(data);
        };
        // This will throw an error if the audioWorkletNodeOptions are not clonable.
        port2.postMessage(audioWorkletNodeOptions);
    });
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"Apyjl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeBiquadFilterNode", ()=>createNativeBiquadFilterNode);
var _assignNativeAudioNodeAudioParamValue = require("../helpers/assign-native-audio-node-audio-param-value");
var _assignNativeAudioNodeOption = require("../helpers/assign-native-audio-node-option");
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
const createNativeBiquadFilterNode = (nativeContext, options)=>{
    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();
    (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeBiquadFilterNode, options);
    (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeBiquadFilterNode, options, "Q");
    (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeBiquadFilterNode, options, "detune");
    (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeBiquadFilterNode, options, "frequency");
    (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeBiquadFilterNode, options, "gain");
    (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeBiquadFilterNode, options, "type");
    return nativeBiquadFilterNode;
};

},{"../helpers/assign-native-audio-node-audio-param-value":"2k6Ld","../helpers/assign-native-audio-node-option":"gLjOv","../helpers/assign-native-audio-node-options":"hQ1ig","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"90fMG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeChannelMergerNodeFactory", ()=>createNativeChannelMergerNodeFactory);
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode)=>{
    return (nativeContext, options)=>{
        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);
        /*
         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.
         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of
         * the webkitAudioContext is used as a workaround here.
         */ if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === "webkitAudioContext") wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeChannelMergerNode, options);
        return nativeChannelMergerNode;
    };
};

},{"../helpers/assign-native-audio-node-options":"hQ1ig","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8Z3X6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeChannelSplitterNode", ()=>createNativeChannelSplitterNode);
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
var _wrapChannelSplitterNode = require("../helpers/wrap-channel-splitter-node");
const createNativeChannelSplitterNode = (nativeContext, options)=>{
    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);
    // Bug #96: Safari does not have the correct channelCount.
    // Bug #29: Safari does not have the correct channelCountMode.
    // Bug #31: Safari does not have the correct channelInterpretation.
    (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeChannelSplitterNode, options);
    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge & Firefox partially support the spec yet.
    (0, _wrapChannelSplitterNode.wrapChannelSplitterNode)(nativeChannelSplitterNode);
    return nativeChannelSplitterNode;
};

},{"../helpers/assign-native-audio-node-options":"hQ1ig","../helpers/wrap-channel-splitter-node":"nuf83","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"nuf83":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "wrapChannelSplitterNode", ()=>wrapChannelSplitterNode);
var _invalidStateError = require("../factories/invalid-state-error");
const wrapChannelSplitterNode = (channelSplitterNode)=>{
    const channelCount = channelSplitterNode.numberOfOutputs;
    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.
    Object.defineProperty(channelSplitterNode, "channelCount", {
        get: ()=>channelCount,
        set: (value)=>{
            if (value !== channelCount) throw (0, _invalidStateError.createInvalidStateError)();
        }
    });
    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.
    Object.defineProperty(channelSplitterNode, "channelCountMode", {
        get: ()=>"explicit",
        set: (value)=>{
            if (value !== "explicit") throw (0, _invalidStateError.createInvalidStateError)();
        }
    });
    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.
    Object.defineProperty(channelSplitterNode, "channelInterpretation", {
        get: ()=>"discrete",
        set: (value)=>{
            if (value !== "discrete") throw (0, _invalidStateError.createInvalidStateError)();
        }
    });
};

},{"../factories/invalid-state-error":"diSZR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aZ9aQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeConstantSourceNodeFactory", ()=>createNativeConstantSourceNodeFactory);
var _assignNativeAudioNodeAudioParamValue = require("../helpers/assign-native-audio-node-audio-param-value");
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
var _wrapAudioScheduledSourceNodeStartMethodNegativeParameters = require("../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters");
var _wrapAudioScheduledSourceNodeStopMethodNegativeParameters = require("../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters");
const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport)=>{
    return (nativeContext, options)=>{
        // Bug #62: Safari does not support ConstantSourceNodes.
        if (nativeContext.createConstantSource === undefined) return createNativeConstantSourceNodeFaker(nativeContext, options);
        const nativeConstantSourceNode = nativeContext.createConstantSource();
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeConstantSourceNode, options);
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeConstantSourceNode, options, "offset");
        // Bug #44: Safari does not throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, ()=>testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) (0, _wrapAudioScheduledSourceNodeStartMethodNegativeParameters.wrapAudioScheduledSourceNodeStartMethodNegativeParameters)(nativeConstantSourceNode);
        // Bug #44: Only Firefox does not throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, ()=>testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) (0, _wrapAudioScheduledSourceNodeStopMethodNegativeParameters.wrapAudioScheduledSourceNodeStopMethodNegativeParameters)(nativeConstantSourceNode);
        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.
        addSilentConnection(nativeContext, nativeConstantSourceNode);
        return nativeConstantSourceNode;
    };
};

},{"../helpers/assign-native-audio-node-audio-param-value":"2k6Ld","../helpers/assign-native-audio-node-options":"hQ1ig","../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters":"eTpqG","../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters":"iy3CQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"Jx9uB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeConstantSourceNodeFakerFactory", ()=>createNativeConstantSourceNodeFakerFactory);
var _interceptConnections = require("../helpers/intercept-connections");
const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections)=>{
    return (nativeContext, { offset, ...audioNodeOptions })=>{
        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);
        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {
            buffer: null,
            channelCount: 2,
            channelCountMode: "max",
            channelInterpretation: "speakers",
            loop: false,
            loopEnd: 0,
            loopStart: 0,
            playbackRate: 1
        });
        const gainNode = createNativeGainNode(nativeContext, {
            ...audioNodeOptions,
            gain: offset
        });
        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
        const channelData = audioBuffer.getChannelData(0);
        // Bug #95: Safari does not play or loop one sample buffers.
        channelData[0] = 1;
        channelData[1] = 1;
        audioBufferSourceNode.buffer = audioBuffer;
        audioBufferSourceNode.loop = true;
        const nativeConstantSourceNodeFaker = {
            get bufferSize () {
                return undefined;
            },
            get channelCount () {
                return gainNode.channelCount;
            },
            set channelCount (value){
                gainNode.channelCount = value;
            },
            get channelCountMode () {
                return gainNode.channelCountMode;
            },
            set channelCountMode (value){
                gainNode.channelCountMode = value;
            },
            get channelInterpretation () {
                return gainNode.channelInterpretation;
            },
            set channelInterpretation (value){
                gainNode.channelInterpretation = value;
            },
            get context () {
                return gainNode.context;
            },
            get inputs () {
                return [];
            },
            get numberOfInputs () {
                return audioBufferSourceNode.numberOfInputs;
            },
            get numberOfOutputs () {
                return gainNode.numberOfOutputs;
            },
            get offset () {
                return gainNode.gain;
            },
            get onended () {
                return audioBufferSourceNode.onended;
            },
            set onended (value){
                audioBufferSourceNode.onended = value;
            },
            addEventListener (...args) {
                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);
            },
            dispatchEvent (...args) {
                return audioBufferSourceNode.dispatchEvent(args[0]);
            },
            removeEventListener (...args) {
                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);
            },
            start (when = 0) {
                audioBufferSourceNode.start.call(audioBufferSourceNode, when);
            },
            stop (when = 0) {
                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);
            }
        };
        const whenConnected = ()=>audioBufferSourceNode.connect(gainNode);
        const whenDisconnected = ()=>audioBufferSourceNode.disconnect(gainNode);
        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.
        addSilentConnection(nativeContext, audioBufferSourceNode);
        return monitorConnections((0, _interceptConnections.interceptConnections)(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);
    };
};

},{"../helpers/intercept-connections":"jvEjr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jvEjr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "interceptConnections", ()=>interceptConnections);
const interceptConnections = (original, interceptor)=>{
    original.connect = interceptor.connect.bind(interceptor);
    original.disconnect = interceptor.disconnect.bind(interceptor);
    return original;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1os2P":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeConvolverNodeFactory", ()=>createNativeConvolverNodeFactory);
var _assignNativeAudioNodeOption = require("../helpers/assign-native-audio-node-option");
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
const createNativeConvolverNodeFactory = (createNotSupportedError, overwriteAccessors)=>{
    return (nativeContext, options)=>{
        const nativeConvolverNode = nativeContext.createConvolver();
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeConvolverNode, options);
        // The normalize property needs to be set before setting the buffer.
        if (options.disableNormalization === nativeConvolverNode.normalize) nativeConvolverNode.normalize = !options.disableNormalization;
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeConvolverNode, options, "buffer");
        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.
        if (options.channelCount > 2) throw createNotSupportedError();
        overwriteAccessors(nativeConvolverNode, "channelCount", (get)=>()=>get.call(nativeConvolverNode), (set)=>(value)=>{
                if (value > 2) throw createNotSupportedError();
                return set.call(nativeConvolverNode, value);
            });
        // Bug #114: Safari allows to set the channelCountMode to 'max'.
        if (options.channelCountMode === "max") throw createNotSupportedError();
        overwriteAccessors(nativeConvolverNode, "channelCountMode", (get)=>()=>get.call(nativeConvolverNode), (set)=>(value)=>{
                if (value === "max") throw createNotSupportedError();
                return set.call(nativeConvolverNode, value);
            });
        return nativeConvolverNode;
    };
};

},{"../helpers/assign-native-audio-node-option":"gLjOv","../helpers/assign-native-audio-node-options":"hQ1ig","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"76TcR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeDelayNode", ()=>createNativeDelayNode);
var _assignNativeAudioNodeAudioParamValue = require("../helpers/assign-native-audio-node-audio-param-value");
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
const createNativeDelayNode = (nativeContext, options)=>{
    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);
    (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeDelayNode, options);
    (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeDelayNode, options, "delayTime");
    return nativeDelayNode;
};

},{"../helpers/assign-native-audio-node-audio-param-value":"2k6Ld","../helpers/assign-native-audio-node-options":"hQ1ig","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"63iaU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeDynamicsCompressorNodeFactory", ()=>createNativeDynamicsCompressorNodeFactory);
var _assignNativeAudioNodeAudioParamValue = require("../helpers/assign-native-audio-node-audio-param-value");
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
const createNativeDynamicsCompressorNodeFactory = (createNotSupportedError)=>{
    return (nativeContext, options)=>{
        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeDynamicsCompressorNode, options);
        // Bug #108: Safari allows a channelCount of three and above.
        if (options.channelCount > 2) throw createNotSupportedError();
        // Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max'.
        if (options.channelCountMode === "max") throw createNotSupportedError();
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeDynamicsCompressorNode, options, "attack");
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeDynamicsCompressorNode, options, "knee");
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeDynamicsCompressorNode, options, "ratio");
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeDynamicsCompressorNode, options, "release");
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeDynamicsCompressorNode, options, "threshold");
        return nativeDynamicsCompressorNode;
    };
};

},{"../helpers/assign-native-audio-node-audio-param-value":"2k6Ld","../helpers/assign-native-audio-node-options":"hQ1ig","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k23ba":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeGainNode", ()=>createNativeGainNode);
var _assignNativeAudioNodeAudioParamValue = require("../helpers/assign-native-audio-node-audio-param-value");
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
const createNativeGainNode = (nativeContext, options)=>{
    const nativeGainNode = nativeContext.createGain();
    (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeGainNode, options);
    (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeGainNode, options, "gain");
    return nativeGainNode;
};

},{"../helpers/assign-native-audio-node-audio-param-value":"2k6Ld","../helpers/assign-native-audio-node-options":"hQ1ig","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kpXKu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeIIRFilterNodeFactory", ()=>createNativeIIRFilterNodeFactory);
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
const createNativeIIRFilterNodeFactory = (createNativeIIRFilterNodeFaker)=>{
    return (nativeContext, baseLatency, options)=>{
        // Bug #9: Safari does not support IIRFilterNodes.
        if (nativeContext.createIIRFilter === undefined) return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);
        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.
        const nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeIIRFilterNode, options);
        return nativeIIRFilterNode;
    };
};

},{"../helpers/assign-native-audio-node-options":"hQ1ig","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3kywH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeIIRFilterNodeFakerFactory", ()=>createNativeIIRFilterNodeFakerFactory);
var _computeBufferSize = require("../helpers/compute-buffer-size");
var _filterBuffer = require("../helpers/filter-buffer");
var _interceptConnections = require("../helpers/intercept-connections");
function divide(a, b) {
    const denominator = b[0] * b[0] + b[1] * b[1];
    return [
        (a[0] * b[0] + a[1] * b[1]) / denominator,
        (a[1] * b[0] - a[0] * b[1]) / denominator
    ];
}
function multiply(a, b) {
    return [
        a[0] * b[0] - a[1] * b[1],
        a[0] * b[1] + a[1] * b[0]
    ];
}
function evaluatePolynomial(coefficient, z) {
    let result = [
        0,
        0
    ];
    for(let i = coefficient.length - 1; i >= 0; i -= 1){
        result = multiply(result, z);
        result[0] += coefficient[i];
    }
    return result;
}
const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError)=>{
    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward })=>{
        const bufferSize = (0, _computeBufferSize.computeBufferSize)(baseLatency, nativeContext.sampleRate);
        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);
        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);
        const feedbackLength = convertedFeedback.length;
        const feedforwardLength = convertedFeedforward.length;
        const minLength = Math.min(feedbackLength, feedforwardLength);
        if (feedbackLength === 0 || feedbackLength > 20) throw createNotSupportedError();
        if (convertedFeedback[0] === 0) throw createInvalidStateError();
        if (feedforwardLength === 0 || feedforwardLength > 20) throw createNotSupportedError();
        if (convertedFeedforward[0] === 0) throw createInvalidStateError();
        if (convertedFeedback[0] !== 1) {
            for(let i = 0; i < feedforwardLength; i += 1)convertedFeedforward[i] /= convertedFeedback[0];
            for(let i = 1; i < feedbackLength; i += 1)convertedFeedback[i] /= convertedFeedback[0];
        }
        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);
        scriptProcessorNode.channelCount = channelCount;
        scriptProcessorNode.channelCountMode = channelCountMode;
        scriptProcessorNode.channelInterpretation = channelInterpretation;
        const bufferLength = 32;
        const bufferIndexes = [];
        const xBuffers = [];
        const yBuffers = [];
        for(let i = 0; i < channelCount; i += 1){
            bufferIndexes.push(0);
            const xBuffer = new Float32Array(bufferLength);
            const yBuffer = new Float32Array(bufferLength);
            xBuffer.fill(0);
            yBuffer.fill(0);
            xBuffers.push(xBuffer);
            yBuffers.push(yBuffer);
        }
        // tslint:disable-next-line:deprecation
        scriptProcessorNode.onaudioprocess = (event)=>{
            const inputBuffer = event.inputBuffer;
            const outputBuffer = event.outputBuffer;
            const numberOfChannels = inputBuffer.numberOfChannels;
            for(let i = 0; i < numberOfChannels; i += 1){
                const input = inputBuffer.getChannelData(i);
                const output = outputBuffer.getChannelData(i);
                bufferIndexes[i] = (0, _filterBuffer.filterBuffer)(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);
            }
        };
        const nyquist = nativeContext.sampleRate / 2;
        const nativeIIRFilterNodeFaker = {
            get bufferSize () {
                return bufferSize;
            },
            get channelCount () {
                return scriptProcessorNode.channelCount;
            },
            set channelCount (value){
                scriptProcessorNode.channelCount = value;
            },
            get channelCountMode () {
                return scriptProcessorNode.channelCountMode;
            },
            set channelCountMode (value){
                scriptProcessorNode.channelCountMode = value;
            },
            get channelInterpretation () {
                return scriptProcessorNode.channelInterpretation;
            },
            set channelInterpretation (value){
                scriptProcessorNode.channelInterpretation = value;
            },
            get context () {
                return scriptProcessorNode.context;
            },
            get inputs () {
                return [
                    scriptProcessorNode
                ];
            },
            get numberOfInputs () {
                return scriptProcessorNode.numberOfInputs;
            },
            get numberOfOutputs () {
                return scriptProcessorNode.numberOfOutputs;
            },
            addEventListener (...args) {
                // @todo Dissallow adding an audioprocess listener.
                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);
            },
            dispatchEvent (...args) {
                return scriptProcessorNode.dispatchEvent(args[0]);
            },
            getFrequencyResponse (frequencyHz, magResponse, phaseResponse) {
                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) throw createInvalidAccessError();
                const length = frequencyHz.length;
                for(let i = 0; i < length; i += 1){
                    const omega = -Math.PI * (frequencyHz[i] / nyquist);
                    const z = [
                        Math.cos(omega),
                        Math.sin(omega)
                    ];
                    const numerator = evaluatePolynomial(convertedFeedforward, z);
                    const denominator = evaluatePolynomial(convertedFeedback, z);
                    const response = divide(numerator, denominator);
                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);
                    phaseResponse[i] = Math.atan2(response[1], response[0]);
                }
            },
            removeEventListener (...args) {
                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);
            }
        };
        return (0, _interceptConnections.interceptConnections)(nativeIIRFilterNodeFaker, scriptProcessorNode);
    };
};

},{"../helpers/compute-buffer-size":"bimg2","../helpers/filter-buffer":"bnsBL","../helpers/intercept-connections":"jvEjr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g804o":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeMediaElementAudioSourceNode", ()=>createNativeMediaElementAudioSourceNode);
const createNativeMediaElementAudioSourceNode = (nativeAudioContext, options)=>{
    return nativeAudioContext.createMediaElementSource(options.mediaElement);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5Nm8V":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeMediaStreamAudioDestinationNode", ()=>createNativeMediaStreamAudioDestinationNode);
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
const createNativeMediaStreamAudioDestinationNode = (nativeAudioContext, options)=>{
    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();
    (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeMediaStreamAudioDestinationNode, options);
    // Bug #174: Safari does expose a wrong numberOfOutputs.
    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) Object.defineProperty(nativeMediaStreamAudioDestinationNode, "numberOfOutputs", {
        get: ()=>0
    });
    return nativeMediaStreamAudioDestinationNode;
};

},{"../helpers/assign-native-audio-node-options":"hQ1ig","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cc1Vv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeMediaStreamAudioSourceNode", ()=>createNativeMediaStreamAudioSourceNode);
const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream })=>{
    const audioStreamTracks = mediaStream.getAudioTracks();
    /*
     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.
     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.
     */ audioStreamTracks.sort((a, b)=>a.id < b.id ? -1 : a.id > b.id ? 1 : 0);
    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);
    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));
    /*
     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs
     * to be overwritten as it would otherwise expose the reconstructed version.
     */ Object.defineProperty(nativeMediaStreamAudioSourceNode, "mediaStream", {
        value: mediaStream
    });
    return nativeMediaStreamAudioSourceNode;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"833HX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeMediaStreamTrackAudioSourceNodeFactory", ()=>createNativeMediaStreamTrackAudioSourceNodeFactory);
const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext)=>{
    return (nativeAudioContext, { mediaStreamTrack })=>{
        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.
        if (typeof nativeAudioContext.createMediaStreamTrackSource === "function") return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);
        const mediaStream = new MediaStream([
            mediaStreamTrack
        ]);
        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);
        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.
        if (mediaStreamTrack.kind !== "audio") throw createInvalidStateError();
        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.
        if (isNativeOfflineAudioContext(nativeAudioContext)) throw new TypeError();
        return nativeMediaStreamAudioSourceNode;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"clMxf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeOfflineAudioContextConstructor", ()=>createNativeOfflineAudioContextConstructor);
const createNativeOfflineAudioContextConstructor = (window)=>{
    if (window === null) return null;
    if (window.hasOwnProperty("OfflineAudioContext")) return window.OfflineAudioContext;
    return window.hasOwnProperty("webkitOfflineAudioContext") ? window.webkitOfflineAudioContext : null;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gRc8o":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeOscillatorNodeFactory", ()=>createNativeOscillatorNodeFactory);
var _assignNativeAudioNodeAudioParamValue = require("../helpers/assign-native-audio-node-audio-param-value");
var _assignNativeAudioNodeOption = require("../helpers/assign-native-audio-node-option");
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
var _wrapAudioScheduledSourceNodeStartMethodNegativeParameters = require("../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters");
var _wrapAudioScheduledSourceNodeStopMethodNegativeParameters = require("../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters");
const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls)=>{
    return (nativeContext, options)=>{
        const nativeOscillatorNode = nativeContext.createOscillator();
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeOscillatorNode, options);
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeOscillatorNode, options, "detune");
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeOscillatorNode, options, "frequency");
        if (options.periodicWave !== undefined) nativeOscillatorNode.setPeriodicWave(options.periodicWave);
        else (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeOscillatorNode, options, "type");
        // Bug #44: Only Chrome & Edge throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, ()=>testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) (0, _wrapAudioScheduledSourceNodeStartMethodNegativeParameters.wrapAudioScheduledSourceNodeStartMethodNegativeParameters)(nativeOscillatorNode);
        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.
        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, ()=>testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);
        // Bug #44: Only Firefox does not throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, ()=>testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) (0, _wrapAudioScheduledSourceNodeStopMethodNegativeParameters.wrapAudioScheduledSourceNodeStopMethodNegativeParameters)(nativeOscillatorNode);
        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.
        addSilentConnection(nativeContext, nativeOscillatorNode);
        return nativeOscillatorNode;
    };
};

},{"../helpers/assign-native-audio-node-audio-param-value":"2k6Ld","../helpers/assign-native-audio-node-option":"gLjOv","../helpers/assign-native-audio-node-options":"hQ1ig","../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters":"eTpqG","../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters":"iy3CQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aE8DJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativePannerNodeFactory", ()=>createNativePannerNodeFactory);
var _assignNativeAudioNodeAudioParamValue = require("../helpers/assign-native-audio-node-audio-param-value");
var _assignNativeAudioNodeOption = require("../helpers/assign-native-audio-node-option");
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
const createNativePannerNodeFactory = (createNativePannerNodeFaker)=>{
    return (nativeContext, options)=>{
        const nativePannerNode = nativeContext.createPanner();
        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.
        if (nativePannerNode.orientationX === undefined) return createNativePannerNodeFaker(nativeContext, options);
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativePannerNode, options);
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativePannerNode, options, "orientationX");
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativePannerNode, options, "orientationY");
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativePannerNode, options, "orientationZ");
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativePannerNode, options, "positionX");
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativePannerNode, options, "positionY");
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativePannerNode, options, "positionZ");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativePannerNode, options, "coneInnerAngle");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativePannerNode, options, "coneOuterAngle");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativePannerNode, options, "coneOuterGain");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativePannerNode, options, "distanceModel");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativePannerNode, options, "maxDistance");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativePannerNode, options, "panningModel");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativePannerNode, options, "refDistance");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativePannerNode, options, "rolloffFactor");
        return nativePannerNode;
    };
};

},{"../helpers/assign-native-audio-node-audio-param-value":"2k6Ld","../helpers/assign-native-audio-node-option":"gLjOv","../helpers/assign-native-audio-node-options":"hQ1ig","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"doyFo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativePannerNodeFakerFactory", ()=>createNativePannerNodeFakerFactory);
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
var _interceptConnections = require("../helpers/intercept-connections");
const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections)=>{
    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions })=>{
        const pannerNode = nativeContext.createPanner();
        // Bug #125: Safari does not throw an error yet.
        if (audioNodeOptions.channelCount > 2) throw createNotSupportedError();
        // Bug #126: Safari does not throw an error yet.
        if (audioNodeOptions.channelCountMode === "max") throw createNotSupportedError();
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(pannerNode, audioNodeOptions);
        const SINGLE_CHANNEL_OPTIONS = {
            channelCount: 1,
            channelCountMode: "explicit",
            channelInterpretation: "discrete"
        };
        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            channelInterpretation: "speakers",
            numberOfInputs: 6
        });
        const inputGainNode = createNativeGainNode(nativeContext, {
            ...audioNodeOptions,
            gain: 1
        });
        const orientationXGainNode = createNativeGainNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            gain: 1
        });
        const orientationYGainNode = createNativeGainNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            gain: 0
        });
        const orientationZGainNode = createNativeGainNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            gain: 0
        });
        const positionXGainNode = createNativeGainNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            gain: 0
        });
        const positionYGainNode = createNativeGainNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            gain: 0
        });
        const positionZGainNode = createNativeGainNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            gain: 0
        });
        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);
        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            curve: new Float32Array([
                1,
                1
            ]),
            oversample: "none"
        });
        let lastOrientation = [
            orientationX,
            orientationY,
            orientationZ
        ];
        let lastPosition = [
            positionX,
            positionY,
            positionZ
        ];
        const buffer = new Float32Array(1);
        // tslint:disable-next-line:deprecation
        scriptProcessorNode.onaudioprocess = ({ inputBuffer })=>{
            const orientation = [
                getFirstSample(inputBuffer, buffer, 0),
                getFirstSample(inputBuffer, buffer, 1),
                getFirstSample(inputBuffer, buffer, 2)
            ];
            if (orientation.some((value1, index)=>value1 !== lastOrientation[index])) {
                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation
                lastOrientation = orientation;
            }
            const positon = [
                getFirstSample(inputBuffer, buffer, 3),
                getFirstSample(inputBuffer, buffer, 4),
                getFirstSample(inputBuffer, buffer, 5)
            ];
            if (positon.some((value1, index)=>value1 !== lastPosition[index])) {
                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation
                lastPosition = positon;
            }
        };
        Object.defineProperty(orientationYGainNode.gain, "defaultValue", {
            get: ()=>0
        });
        Object.defineProperty(orientationZGainNode.gain, "defaultValue", {
            get: ()=>0
        });
        Object.defineProperty(positionXGainNode.gain, "defaultValue", {
            get: ()=>0
        });
        Object.defineProperty(positionYGainNode.gain, "defaultValue", {
            get: ()=>0
        });
        Object.defineProperty(positionZGainNode.gain, "defaultValue", {
            get: ()=>0
        });
        const nativePannerNodeFaker = {
            get bufferSize () {
                return undefined;
            },
            get channelCount () {
                return pannerNode.channelCount;
            },
            set channelCount (value){
                // Bug #125: Safari does not throw an error yet.
                if (value > 2) throw createNotSupportedError();
                inputGainNode.channelCount = value;
                pannerNode.channelCount = value;
            },
            get channelCountMode () {
                return pannerNode.channelCountMode;
            },
            set channelCountMode (value){
                // Bug #126: Safari does not throw an error yet.
                if (value === "max") throw createNotSupportedError();
                inputGainNode.channelCountMode = value;
                pannerNode.channelCountMode = value;
            },
            get channelInterpretation () {
                return pannerNode.channelInterpretation;
            },
            set channelInterpretation (value){
                inputGainNode.channelInterpretation = value;
                pannerNode.channelInterpretation = value;
            },
            get coneInnerAngle () {
                return pannerNode.coneInnerAngle;
            },
            set coneInnerAngle (value){
                pannerNode.coneInnerAngle = value;
            },
            get coneOuterAngle () {
                return pannerNode.coneOuterAngle;
            },
            set coneOuterAngle (value){
                pannerNode.coneOuterAngle = value;
            },
            get coneOuterGain () {
                return pannerNode.coneOuterGain;
            },
            set coneOuterGain (value){
                // Bug #127: Safari does not throw an InvalidStateError yet.
                if (value < 0 || value > 1) throw createInvalidStateError();
                pannerNode.coneOuterGain = value;
            },
            get context () {
                return pannerNode.context;
            },
            get distanceModel () {
                return pannerNode.distanceModel;
            },
            set distanceModel (value){
                pannerNode.distanceModel = value;
            },
            get inputs () {
                return [
                    inputGainNode
                ];
            },
            get maxDistance () {
                return pannerNode.maxDistance;
            },
            set maxDistance (value){
                // Bug #128: Safari does not throw an error yet.
                if (value < 0) throw new RangeError();
                pannerNode.maxDistance = value;
            },
            get numberOfInputs () {
                return pannerNode.numberOfInputs;
            },
            get numberOfOutputs () {
                return pannerNode.numberOfOutputs;
            },
            get orientationX () {
                return orientationXGainNode.gain;
            },
            get orientationY () {
                return orientationYGainNode.gain;
            },
            get orientationZ () {
                return orientationZGainNode.gain;
            },
            get panningModel () {
                return pannerNode.panningModel;
            },
            set panningModel (value){
                pannerNode.panningModel = value;
            },
            get positionX () {
                return positionXGainNode.gain;
            },
            get positionY () {
                return positionYGainNode.gain;
            },
            get positionZ () {
                return positionZGainNode.gain;
            },
            get refDistance () {
                return pannerNode.refDistance;
            },
            set refDistance (value){
                // Bug #129: Safari does not throw an error yet.
                if (value < 0) throw new RangeError();
                pannerNode.refDistance = value;
            },
            get rolloffFactor () {
                return pannerNode.rolloffFactor;
            },
            set rolloffFactor (value){
                // Bug #130: Safari does not throw an error yet.
                if (value < 0) throw new RangeError();
                pannerNode.rolloffFactor = value;
            },
            addEventListener (...args) {
                return inputGainNode.addEventListener(args[0], args[1], args[2]);
            },
            dispatchEvent (...args) {
                return inputGainNode.dispatchEvent(args[0]);
            },
            removeEventListener (...args) {
                return inputGainNode.removeEventListener(args[0], args[1], args[2]);
            }
        };
        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;
        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;
        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) nativePannerNodeFaker.coneOuterGain = coneOuterGain;
        if (distanceModel !== nativePannerNodeFaker.distanceModel) nativePannerNodeFaker.distanceModel = distanceModel;
        if (maxDistance !== nativePannerNodeFaker.maxDistance) nativePannerNodeFaker.maxDistance = maxDistance;
        if (orientationX !== nativePannerNodeFaker.orientationX.value) nativePannerNodeFaker.orientationX.value = orientationX;
        if (orientationY !== nativePannerNodeFaker.orientationY.value) nativePannerNodeFaker.orientationY.value = orientationY;
        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) nativePannerNodeFaker.orientationZ.value = orientationZ;
        if (panningModel !== nativePannerNodeFaker.panningModel) nativePannerNodeFaker.panningModel = panningModel;
        if (positionX !== nativePannerNodeFaker.positionX.value) nativePannerNodeFaker.positionX.value = positionX;
        if (positionY !== nativePannerNodeFaker.positionY.value) nativePannerNodeFaker.positionY.value = positionY;
        if (positionZ !== nativePannerNodeFaker.positionZ.value) nativePannerNodeFaker.positionZ.value = positionZ;
        if (refDistance !== nativePannerNodeFaker.refDistance) nativePannerNodeFaker.refDistance = refDistance;
        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) nativePannerNodeFaker.rolloffFactor = rolloffFactor;
        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation
        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation
        const whenConnected = ()=>{
            inputGainNode.connect(pannerNode);
            // Bug #119: Safari does not fully support the WaveShaperNode.
            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);
            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);
            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);
            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);
            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);
            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);
            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);
            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);
        };
        const whenDisconnected = ()=>{
            inputGainNode.disconnect(pannerNode);
            // Bug #119: Safari does not fully support the WaveShaperNode.
            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);
            waveShaperNode.disconnect(orientationXGainNode);
            orientationXGainNode.disconnect(channelMergerNode);
            waveShaperNode.disconnect(orientationYGainNode);
            orientationYGainNode.disconnect(channelMergerNode);
            waveShaperNode.disconnect(orientationZGainNode);
            orientationZGainNode.disconnect(channelMergerNode);
            waveShaperNode.disconnect(positionXGainNode);
            positionXGainNode.disconnect(channelMergerNode);
            waveShaperNode.disconnect(positionYGainNode);
            positionYGainNode.disconnect(channelMergerNode);
            waveShaperNode.disconnect(positionZGainNode);
            positionZGainNode.disconnect(channelMergerNode);
            channelMergerNode.disconnect(scriptProcessorNode);
            scriptProcessorNode.disconnect(nativeContext.destination);
        };
        return monitorConnections((0, _interceptConnections.interceptConnections)(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);
    };
};

},{"../helpers/assign-native-audio-node-options":"hQ1ig","../helpers/intercept-connections":"jvEjr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hMgnX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativePeriodicWaveFactory", ()=>createNativePeriodicWaveFactory);
const createNativePeriodicWaveFactory = (createIndexSizeError)=>{
    return (nativeContext, { disableNormalization, imag, real })=>{
        // Bug #180: Safari does not allow to use ordinary arrays.
        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);
        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);
        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, {
            disableNormalization
        });
        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.
        if (Array.from(imag).length < 2) throw createIndexSizeError();
        return nativePeriodicWave;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"63kc1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeScriptProcessorNode", ()=>createNativeScriptProcessorNode);
const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels)=>{
    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels); // tslint:disable-line deprecation
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"46iGP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeStereoPannerNodeFactory", ()=>createNativeStereoPannerNodeFactory);
var _assignNativeAudioNodeAudioParamValue = require("../helpers/assign-native-audio-node-audio-param-value");
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
const createNativeStereoPannerNodeFactory = (createNativeStereoPannerNodeFaker, createNotSupportedError)=>{
    return (nativeContext, options)=>{
        const channelCountMode = options.channelCountMode;
        /*
         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari
         * which supports it and therefore it can't be supported at all.
         */ if (channelCountMode === "clamped-max") throw createNotSupportedError();
        // Bug #105: Safari does not support the StereoPannerNode.
        if (nativeContext.createStereoPanner === undefined) return createNativeStereoPannerNodeFaker(nativeContext, options);
        const nativeStereoPannerNode = nativeContext.createStereoPanner();
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeStereoPannerNode, options);
        (0, _assignNativeAudioNodeAudioParamValue.assignNativeAudioNodeAudioParamValue)(nativeStereoPannerNode, options, "pan");
        /*
         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari
         * which supports it and therefore it can't be supported at all.
         */ Object.defineProperty(nativeStereoPannerNode, "channelCountMode", {
            get: ()=>channelCountMode,
            set: (value)=>{
                if (value !== channelCountMode) throw createNotSupportedError();
            }
        });
        return nativeStereoPannerNode;
    };
};

},{"../helpers/assign-native-audio-node-audio-param-value":"2k6Ld","../helpers/assign-native-audio-node-options":"hQ1ig","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3tpsg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeStereoPannerNodeFakerFactory", ()=>createNativeStereoPannerNodeFakerFactory);
var _interceptConnections = require("../helpers/intercept-connections");
const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections)=>{
    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.
    const CURVE_SIZE = 16385;
    const DC_CURVE = new Float32Array([
        1,
        1
    ]);
    const HALF_PI = Math.PI / 2;
    const SINGLE_CHANNEL_OPTIONS = {
        channelCount: 1,
        channelCountMode: "explicit",
        channelInterpretation: "discrete"
    };
    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = {
        ...SINGLE_CHANNEL_OPTIONS,
        oversample: "none"
    };
    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode)=>{
        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);
        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);
        for(let i = 0; i < CURVE_SIZE; i += 1){
            const x = i / (CURVE_SIZE - 1) * HALF_PI;
            leftWaveShaperCurve[i] = Math.cos(x);
            rightWaveShaperCurve[i] = Math.sin(x);
        }
        const leftGainNode = createNativeGainNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            gain: 0
        });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const leftWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
            curve: leftWaveShaperCurve
        });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
            curve: DC_CURVE
        });
        const rightGainNode = createNativeGainNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            gain: 0
        });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const rightWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
            curve: rightWaveShaperCurve
        });
        return {
            connectGraph () {
                inputGainNode.connect(leftGainNode);
                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);
                inputGainNode.connect(rightGainNode);
                panWaveShaperNode.connect(panGainNode);
                panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);
                panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);
                leftWaveShaperNode.connect(leftGainNode.gain);
                rightWaveShaperNode.connect(rightGainNode.gain);
                leftGainNode.connect(channelMergerNode, 0, 0);
                rightGainNode.connect(channelMergerNode, 0, 1);
            },
            disconnectGraph () {
                inputGainNode.disconnect(leftGainNode);
                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);
                inputGainNode.disconnect(rightGainNode);
                panWaveShaperNode.disconnect(panGainNode);
                panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);
                panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);
                leftWaveShaperNode.disconnect(leftGainNode.gain);
                rightWaveShaperNode.disconnect(rightGainNode.gain);
                leftGainNode.disconnect(channelMergerNode, 0, 0);
                rightGainNode.disconnect(channelMergerNode, 0, 1);
            }
        };
    };
    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode)=>{
        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
        const centerIndex = Math.floor(CURVE_SIZE / 2);
        for(let i = 0; i < CURVE_SIZE; i += 1)if (i > centerIndex) {
            const x = (i - centerIndex) / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;
            leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);
            leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);
            rightInputForLeftOutputWaveShaperCurve[i] = 0;
            rightInputForRightOutputWaveShaperCurve[i] = 1;
        } else {
            const x = i / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;
            leftInputForLeftOutputWaveShaperCurve[i] = 1;
            leftInputForRightOutputWaveShaperCurve[i] = 0;
            rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);
            rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);
        }
        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {
            channelCount: 2,
            channelCountMode: "explicit",
            channelInterpretation: "discrete",
            numberOfOutputs: 2
        });
        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            gain: 0
        });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
            curve: leftInputForLeftOutputWaveShaperCurve
        });
        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            gain: 0
        });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
            curve: leftInputForRightOutputWaveShaperCurve
        });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
            curve: DC_CURVE
        });
        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            gain: 0
        });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
            curve: rightInputForLeftOutputWaveShaperCurve
        });
        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, {
            ...SINGLE_CHANNEL_OPTIONS,
            gain: 0
        });
        // Bug #119: Safari does not fully support the WaveShaperNode.
        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
            curve: rightInputForRightOutputWaveShaperCurve
        });
        return {
            connectGraph () {
                inputGainNode.connect(channelSplitterNode);
                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);
                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);
                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);
                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);
                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);
                panWaveShaperNode.connect(panGainNode);
                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs === undefined ? leftInputForLeftOutputWaveShaperNode : leftInputForLeftOutputWaveShaperNode.inputs[0]);
                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs === undefined ? leftInputForRightOutputWaveShaperNode : leftInputForRightOutputWaveShaperNode.inputs[0]);
                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs === undefined ? rightInputForLeftOutputWaveShaperNode : rightInputForLeftOutputWaveShaperNode.inputs[0]);
                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs === undefined ? rightInputForRightOutputWaveShaperNode : rightInputForRightOutputWaveShaperNode.inputs[0]);
                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);
                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);
                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);
                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);
                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);
                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);
                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);
                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);
            },
            disconnectGraph () {
                inputGainNode.disconnect(channelSplitterNode);
                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);
                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);
                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);
                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);
                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);
                panWaveShaperNode.disconnect(panGainNode);
                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs === undefined ? leftInputForLeftOutputWaveShaperNode : leftInputForLeftOutputWaveShaperNode.inputs[0]);
                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs === undefined ? leftInputForRightOutputWaveShaperNode : leftInputForRightOutputWaveShaperNode.inputs[0]);
                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs === undefined ? rightInputForLeftOutputWaveShaperNode : rightInputForLeftOutputWaveShaperNode.inputs[0]);
                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs === undefined ? rightInputForRightOutputWaveShaperNode : rightInputForRightOutputWaveShaperNode.inputs[0]);
                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);
                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);
                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);
                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);
                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);
                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);
                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);
                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);
            }
        };
    };
    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode)=>{
        if (channelCount === 1) return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);
        if (channelCount === 2) return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);
        throw createNotSupportedError();
    };
    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions })=>{
        if (channelCountMode === "max") throw createNotSupportedError();
        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {
            ...audioNodeOptions,
            channelCount: 1,
            channelCountMode,
            numberOfInputs: 2
        });
        const inputGainNode = createNativeGainNode(nativeContext, {
            ...audioNodeOptions,
            channelCount,
            channelCountMode,
            gain: 1
        });
        const panGainNode = createNativeGainNode(nativeContext, {
            channelCount: 1,
            channelCountMode: "explicit",
            channelInterpretation: "discrete",
            gain: pan
        });
        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);
        Object.defineProperty(panGainNode.gain, "defaultValue", {
            get: ()=>0
        });
        Object.defineProperty(panGainNode.gain, "maxValue", {
            get: ()=>1
        });
        Object.defineProperty(panGainNode.gain, "minValue", {
            get: ()=>-1
        });
        const nativeStereoPannerNodeFakerFactory = {
            get bufferSize () {
                return undefined;
            },
            get channelCount () {
                return inputGainNode.channelCount;
            },
            set channelCount (value){
                if (inputGainNode.channelCount !== value) {
                    if (isConnected) disconnectGraph();
                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));
                    if (isConnected) connectGraph();
                }
                inputGainNode.channelCount = value;
            },
            get channelCountMode () {
                return inputGainNode.channelCountMode;
            },
            set channelCountMode (value){
                if (value === "clamped-max" || value === "max") throw createNotSupportedError();
                inputGainNode.channelCountMode = value;
            },
            get channelInterpretation () {
                return inputGainNode.channelInterpretation;
            },
            set channelInterpretation (value){
                inputGainNode.channelInterpretation = value;
            },
            get context () {
                return inputGainNode.context;
            },
            get inputs () {
                return [
                    inputGainNode
                ];
            },
            get numberOfInputs () {
                return inputGainNode.numberOfInputs;
            },
            get numberOfOutputs () {
                return inputGainNode.numberOfOutputs;
            },
            get pan () {
                return panGainNode.gain;
            },
            addEventListener (...args) {
                return inputGainNode.addEventListener(args[0], args[1], args[2]);
            },
            dispatchEvent (...args) {
                return inputGainNode.dispatchEvent(args[0]);
            },
            removeEventListener (...args) {
                return inputGainNode.removeEventListener(args[0], args[1], args[2]);
            }
        };
        let isConnected = false;
        const whenConnected = ()=>{
            connectGraph();
            isConnected = true;
        };
        const whenDisconnected = ()=>{
            disconnectGraph();
            isConnected = false;
        };
        return monitorConnections((0, _interceptConnections.interceptConnections)(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);
    };
};

},{"../helpers/intercept-connections":"jvEjr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fYxR5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeWaveShaperNodeFactory", ()=>createNativeWaveShaperNodeFactory);
var _assignNativeAudioNodeOption = require("../helpers/assign-native-audio-node-option");
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors)=>{
    return (nativeContext, options)=>{
        const nativeWaveShaperNode = nativeContext.createWaveShaper();
        /*
         * Bug #119: Safari does not correctly map the values.
         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of
         * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround
         * isn't necessary anymore since v14.0.2 of Safari.
         */ if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === "webkitAudioContext" && nativeContext.createGain().gain.automationRate === undefined) return createNativeWaveShaperNodeFaker(nativeContext, options);
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(nativeWaveShaperNode, options);
        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);
        // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.
        if (curve !== null && curve.length < 2) throw createInvalidStateError();
        // Only values of type Float32Array can be assigned to the curve property.
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeWaveShaperNode, {
            curve
        }, "curve");
        (0, _assignNativeAudioNodeOption.assignNativeAudioNodeOption)(nativeWaveShaperNode, options, "oversample");
        let disconnectNativeAudioBufferSourceNode = null;
        let isConnected = false;
        overwriteAccessors(nativeWaveShaperNode, "curve", (get)=>()=>get.call(nativeWaveShaperNode), (set)=>(value)=>{
                set.call(nativeWaveShaperNode, value);
                if (isConnected) {
                    if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);
                    else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {
                        disconnectNativeAudioBufferSourceNode();
                        disconnectNativeAudioBufferSourceNode = null;
                    }
                }
                return value;
            });
        const whenConnected = ()=>{
            isConnected = true;
            if (isDCCurve(nativeWaveShaperNode.curve)) disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);
        };
        const whenDisconnected = ()=>{
            isConnected = false;
            if (disconnectNativeAudioBufferSourceNode !== null) {
                disconnectNativeAudioBufferSourceNode();
                disconnectNativeAudioBufferSourceNode = null;
            }
        };
        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);
    };
};

},{"../helpers/assign-native-audio-node-option":"gLjOv","../helpers/assign-native-audio-node-options":"hQ1ig","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"48VV2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNativeWaveShaperNodeFakerFactory", ()=>createNativeWaveShaperNodeFakerFactory);
var _assignNativeAudioNodeOptions = require("../helpers/assign-native-audio-node-options");
var _interceptConnections = require("../helpers/intercept-connections");
const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections)=>{
    return (nativeContext, { curve, oversample, ...audioNodeOptions })=>{
        const negativeWaveShaperNode = nativeContext.createWaveShaper();
        const positiveWaveShaperNode = nativeContext.createWaveShaper();
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(negativeWaveShaperNode, audioNodeOptions);
        (0, _assignNativeAudioNodeOptions.assignNativeAudioNodeOptions)(positiveWaveShaperNode, audioNodeOptions);
        const inputGainNode = createNativeGainNode(nativeContext, {
            ...audioNodeOptions,
            gain: 1
        });
        const invertGainNode = createNativeGainNode(nativeContext, {
            ...audioNodeOptions,
            gain: -1
        });
        const outputGainNode = createNativeGainNode(nativeContext, {
            ...audioNodeOptions,
            gain: 1
        });
        const revertGainNode = createNativeGainNode(nativeContext, {
            ...audioNodeOptions,
            gain: -1
        });
        let disconnectNativeAudioBufferSourceNode = null;
        let isConnected = false;
        let unmodifiedCurve = null;
        const nativeWaveShaperNodeFaker = {
            get bufferSize () {
                return undefined;
            },
            get channelCount () {
                return negativeWaveShaperNode.channelCount;
            },
            set channelCount (value){
                inputGainNode.channelCount = value;
                invertGainNode.channelCount = value;
                negativeWaveShaperNode.channelCount = value;
                outputGainNode.channelCount = value;
                positiveWaveShaperNode.channelCount = value;
                revertGainNode.channelCount = value;
            },
            get channelCountMode () {
                return negativeWaveShaperNode.channelCountMode;
            },
            set channelCountMode (value){
                inputGainNode.channelCountMode = value;
                invertGainNode.channelCountMode = value;
                negativeWaveShaperNode.channelCountMode = value;
                outputGainNode.channelCountMode = value;
                positiveWaveShaperNode.channelCountMode = value;
                revertGainNode.channelCountMode = value;
            },
            get channelInterpretation () {
                return negativeWaveShaperNode.channelInterpretation;
            },
            set channelInterpretation (value){
                inputGainNode.channelInterpretation = value;
                invertGainNode.channelInterpretation = value;
                negativeWaveShaperNode.channelInterpretation = value;
                outputGainNode.channelInterpretation = value;
                positiveWaveShaperNode.channelInterpretation = value;
                revertGainNode.channelInterpretation = value;
            },
            get context () {
                return negativeWaveShaperNode.context;
            },
            get curve () {
                return unmodifiedCurve;
            },
            set curve (value){
                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.
                if (value !== null && value.length < 2) throw createInvalidStateError();
                if (value === null) {
                    negativeWaveShaperNode.curve = value;
                    positiveWaveShaperNode.curve = value;
                } else {
                    const curveLength = value.length;
                    const negativeCurve = new Float32Array(curveLength + 2 - curveLength % 2);
                    const positiveCurve = new Float32Array(curveLength + 2 - curveLength % 2);
                    negativeCurve[0] = value[0];
                    positiveCurve[0] = -value[curveLength - 1];
                    const length = Math.ceil((curveLength + 1) / 2);
                    const centerIndex = (curveLength + 1) / 2 - 1;
                    for(let i = 1; i < length; i += 1){
                        const theoreticIndex = i / length * centerIndex;
                        const lowerIndex = Math.floor(theoreticIndex);
                        const upperIndex = Math.ceil(theoreticIndex);
                        negativeCurve[i] = lowerIndex === upperIndex ? value[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * value[upperIndex];
                        positiveCurve[i] = lowerIndex === upperIndex ? -value[curveLength - 1 - lowerIndex] : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) - (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];
                    }
                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;
                    negativeWaveShaperNode.curve = negativeCurve;
                    positiveWaveShaperNode.curve = positiveCurve;
                }
                unmodifiedCurve = value;
                if (isConnected) {
                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);
                    else if (disconnectNativeAudioBufferSourceNode !== null) {
                        disconnectNativeAudioBufferSourceNode();
                        disconnectNativeAudioBufferSourceNode = null;
                    }
                }
            },
            get inputs () {
                return [
                    inputGainNode
                ];
            },
            get numberOfInputs () {
                return negativeWaveShaperNode.numberOfInputs;
            },
            get numberOfOutputs () {
                return negativeWaveShaperNode.numberOfOutputs;
            },
            get oversample () {
                return negativeWaveShaperNode.oversample;
            },
            set oversample (value){
                negativeWaveShaperNode.oversample = value;
                positiveWaveShaperNode.oversample = value;
            },
            addEventListener (...args) {
                return inputGainNode.addEventListener(args[0], args[1], args[2]);
            },
            dispatchEvent (...args) {
                return inputGainNode.dispatchEvent(args[0]);
            },
            removeEventListener (...args) {
                return inputGainNode.removeEventListener(args[0], args[1], args[2]);
            }
        };
        if (curve !== null) // Only values of type Float32Array can be assigned to the curve property.
        nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);
        if (oversample !== nativeWaveShaperNodeFaker.oversample) nativeWaveShaperNodeFaker.oversample = oversample;
        const whenConnected = ()=>{
            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);
            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);
            isConnected = true;
            if (isDCCurve(unmodifiedCurve)) disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);
        };
        const whenDisconnected = ()=>{
            inputGainNode.disconnect(negativeWaveShaperNode);
            negativeWaveShaperNode.disconnect(outputGainNode);
            inputGainNode.disconnect(invertGainNode);
            invertGainNode.disconnect(positiveWaveShaperNode);
            positiveWaveShaperNode.disconnect(revertGainNode);
            revertGainNode.disconnect(outputGainNode);
            isConnected = false;
            if (disconnectNativeAudioBufferSourceNode !== null) {
                disconnectNativeAudioBufferSourceNode();
                disconnectNativeAudioBufferSourceNode = null;
            }
        };
        return monitorConnections((0, _interceptConnections.interceptConnections)(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);
    };
};

},{"../helpers/assign-native-audio-node-options":"hQ1ig","../helpers/intercept-connections":"jvEjr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fLKAR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNotSupportedError", ()=>createNotSupportedError);
const createNotSupportedError = ()=>new DOMException("", "NotSupportedError");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9iLZs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createOfflineAudioContextConstructor", ()=>createOfflineAudioContextConstructor);
var _deactivateAudioGraph = require("../helpers/deactivate-audio-graph");
var _testPromiseSupport = require("../helpers/test-promise-support");
const DEFAULT_OPTIONS = {
    numberOfChannels: 1
};
const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering)=>{
    return class OfflineAudioContext extends baseAudioContextConstructor {
        constructor(a, b, c){
            let options;
            if (typeof a === "number" && b !== undefined && c !== undefined) options = {
                length: b,
                numberOfChannels: a,
                sampleRate: c
            };
            else if (typeof a === "object") options = a;
            else throw new Error("The given parameters are not valid.");
            const { length, numberOfChannels, sampleRate } = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);
            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.
            if (!cacheTestResult((0, _testPromiseSupport.testPromiseSupport), ()=>(0, _testPromiseSupport.testPromiseSupport)(nativeOfflineAudioContext))) nativeOfflineAudioContext.addEventListener("statechange", (()=>{
                let i = 0;
                const delayStateChangeEvent = (event)=>{
                    if (this._state === "running") {
                        if (i > 0) {
                            nativeOfflineAudioContext.removeEventListener("statechange", delayStateChangeEvent);
                            event.stopImmediatePropagation();
                            this._waitForThePromiseToSettle(event);
                        } else i += 1;
                    }
                };
                return delayStateChangeEvent;
            })());
            super(nativeOfflineAudioContext, numberOfChannels);
            this._length = length;
            this._nativeOfflineAudioContext = nativeOfflineAudioContext;
            this._state = null;
        }
        get length() {
            // Bug #17: Safari does not yet expose the length.
            if (this._nativeOfflineAudioContext.length === undefined) return this._length;
            return this._nativeOfflineAudioContext.length;
        }
        get state() {
            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;
        }
        startRendering() {
            /*
             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore
             * the state of the nativeOfflineAudioContext might no transition to running immediately.
             */ if (this._state === "running") return Promise.reject(createInvalidStateError());
            this._state = "running";
            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(()=>{
                this._state = null;
                (0, _deactivateAudioGraph.deactivateAudioGraph)(this);
            });
        }
        _waitForThePromiseToSettle(event) {
            if (this._state === null) this._nativeOfflineAudioContext.dispatchEvent(event);
            else setTimeout(()=>this._waitForThePromiseToSettle(event));
        }
    };
};

},{"../helpers/deactivate-audio-graph":"ap1I7","../helpers/test-promise-support":"4hyPB","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cS1X5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createOscillatorNodeConstructor", ()=>createOscillatorNodeConstructor);
var _isActiveAudioNode = require("../helpers/is-active-audio-node");
var _setInternalStateToActive = require("../helpers/set-internal-state-to-active");
var _setInternalStateToPassive = require("../helpers/set-internal-state-to-passive");
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: "max",
    channelInterpretation: "speakers",
    detune: 0,
    frequency: 440,
    periodicWave: undefined,
    type: "sine"
};
const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener)=>{
    return class OscillatorNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const oscillatorNodeRenderer = isOffline ? createOscillatorNodeRenderer() : null;
            const nyquist = context.sampleRate / 2;
            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);
            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.
            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);
            // Bug #76: Safari does not export the correct values for maxValue and minValue.
            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);
            this._nativeOscillatorNode = nativeOscillatorNode;
            this._onended = null;
            this._oscillatorNodeRenderer = oscillatorNodeRenderer;
            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) this._oscillatorNodeRenderer.periodicWave = mergedOptions.periodicWave;
        }
        get detune() {
            return this._detune;
        }
        get frequency() {
            return this._frequency;
        }
        get onended() {
            return this._onended;
        }
        set onended(value) {
            const wrappedListener = typeof value === "function" ? wrapEventListener(this, value) : null;
            this._nativeOscillatorNode.onended = wrappedListener;
            const nativeOnEnded = this._nativeOscillatorNode.onended;
            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
        }
        get type() {
            return this._nativeOscillatorNode.type;
        }
        set type(value) {
            this._nativeOscillatorNode.type = value;
            if (this._oscillatorNodeRenderer !== null) this._oscillatorNodeRenderer.periodicWave = null;
        }
        setPeriodicWave(periodicWave) {
            this._nativeOscillatorNode.setPeriodicWave(periodicWave);
            if (this._oscillatorNodeRenderer !== null) this._oscillatorNodeRenderer.periodicWave = periodicWave;
        }
        start(when = 0) {
            this._nativeOscillatorNode.start(when);
            if (this._oscillatorNodeRenderer !== null) this._oscillatorNodeRenderer.start = when;
            if (this.context.state !== "closed") {
                (0, _setInternalStateToActive.setInternalStateToActive)(this);
                const resetInternalStateToPassive = ()=>{
                    this._nativeOscillatorNode.removeEventListener("ended", resetInternalStateToPassive);
                    if ((0, _isActiveAudioNode.isActiveAudioNode)(this)) (0, _setInternalStateToPassive.setInternalStateToPassive)(this);
                };
                this._nativeOscillatorNode.addEventListener("ended", resetInternalStateToPassive);
            }
        }
        stop(when = 0) {
            this._nativeOscillatorNode.stop(when);
            if (this._oscillatorNodeRenderer !== null) this._oscillatorNodeRenderer.stop = when;
        }
    };
};

},{"../helpers/is-active-audio-node":"j8Y4t","../helpers/set-internal-state-to-active":"gc0b0","../helpers/set-internal-state-to-passive":"1Xtwa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"21Ubp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createOscillatorNodeRendererFactory", ()=>createOscillatorNodeRendererFactory);
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode)=>{
    return ()=>{
        const renderedNativeOscillatorNodes = new WeakMap();
        let periodicWave = null;
        let start = null;
        let stop = null;
        const createOscillatorNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeOscillatorNode = getNativeAudioNode(proxy);
            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeOscillatorNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeOscillatorNode, nativeOfflineAudioContext);
            if (!nativeOscillatorNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeOscillatorNode.channelCount,
                    channelCountMode: nativeOscillatorNode.channelCountMode,
                    channelInterpretation: nativeOscillatorNode.channelInterpretation,
                    detune: nativeOscillatorNode.detune.value,
                    frequency: nativeOscillatorNode.frequency.value,
                    periodicWave: periodicWave === null ? undefined : periodicWave,
                    type: nativeOscillatorNode.type
                };
                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);
                if (start !== null) nativeOscillatorNode.start(start);
                if (stop !== null) nativeOscillatorNode.stop(stop);
            }
            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);
            if (!nativeOscillatorNodeIsOwnedByContext) {
                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);
                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);
            } else {
                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);
                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);
            }
            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode);
            return nativeOscillatorNode;
        };
        return {
            set periodicWave (value){
                periodicWave = value;
            },
            set start (value){
                start = value;
            },
            set stop (value){
                stop = value;
            },
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);
                if (renderedNativeOscillatorNode !== undefined) return Promise.resolve(renderedNativeOscillatorNode);
                return createOscillatorNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3pCGA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createPannerNodeConstructor", ()=>createPannerNodeConstructor);
var _constants = require("../constants");
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: "clamped-max",
    channelInterpretation: "speakers",
    coneInnerAngle: 360,
    coneOuterAngle: 360,
    coneOuterGain: 0,
    distanceModel: "inverse",
    maxDistance: 10000,
    orientationX: 1,
    orientationY: 0,
    orientationZ: 0,
    panningModel: "equalpower",
    positionX: 0,
    positionY: 0,
    positionZ: 0,
    refDistance: 1,
    rolloffFactor: 1
};
const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime)=>{
    return class PannerNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const pannerNodeRenderer = isOffline ? createPannerNodeRenderer() : null;
            super(context, false, nativePannerNode, pannerNodeRenderer);
            this._nativePannerNode = nativePannerNode;
            // Bug #74: Safari does not export the correct values for maxValue and minValue.
            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, (0, _constants.MOST_POSITIVE_SINGLE_FLOAT), (0, _constants.MOST_NEGATIVE_SINGLE_FLOAT));
            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, (0, _constants.MOST_POSITIVE_SINGLE_FLOAT), (0, _constants.MOST_NEGATIVE_SINGLE_FLOAT));
            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, (0, _constants.MOST_POSITIVE_SINGLE_FLOAT), (0, _constants.MOST_NEGATIVE_SINGLE_FLOAT));
            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, (0, _constants.MOST_POSITIVE_SINGLE_FLOAT), (0, _constants.MOST_NEGATIVE_SINGLE_FLOAT));
            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, (0, _constants.MOST_POSITIVE_SINGLE_FLOAT), (0, _constants.MOST_NEGATIVE_SINGLE_FLOAT));
            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, (0, _constants.MOST_POSITIVE_SINGLE_FLOAT), (0, _constants.MOST_NEGATIVE_SINGLE_FLOAT));
            // @todo Determine a meaningful tail-time instead of just using one second.
            setAudioNodeTailTime(this, 1);
        }
        get coneInnerAngle() {
            return this._nativePannerNode.coneInnerAngle;
        }
        set coneInnerAngle(value) {
            this._nativePannerNode.coneInnerAngle = value;
        }
        get coneOuterAngle() {
            return this._nativePannerNode.coneOuterAngle;
        }
        set coneOuterAngle(value) {
            this._nativePannerNode.coneOuterAngle = value;
        }
        get coneOuterGain() {
            return this._nativePannerNode.coneOuterGain;
        }
        set coneOuterGain(value) {
            this._nativePannerNode.coneOuterGain = value;
        }
        get distanceModel() {
            return this._nativePannerNode.distanceModel;
        }
        set distanceModel(value) {
            this._nativePannerNode.distanceModel = value;
        }
        get maxDistance() {
            return this._nativePannerNode.maxDistance;
        }
        set maxDistance(value) {
            this._nativePannerNode.maxDistance = value;
        }
        get orientationX() {
            return this._orientationX;
        }
        get orientationY() {
            return this._orientationY;
        }
        get orientationZ() {
            return this._orientationZ;
        }
        get panningModel() {
            return this._nativePannerNode.panningModel;
        }
        set panningModel(value) {
            this._nativePannerNode.panningModel = value;
        }
        get positionX() {
            return this._positionX;
        }
        get positionY() {
            return this._positionY;
        }
        get positionZ() {
            return this._positionZ;
        }
        get refDistance() {
            return this._nativePannerNode.refDistance;
        }
        set refDistance(value) {
            this._nativePannerNode.refDistance = value;
        }
        get rolloffFactor() {
            return this._nativePannerNode.rolloffFactor;
        }
        set rolloffFactor(value) {
            this._nativePannerNode.rolloffFactor = value;
        }
    };
};

},{"../constants":"au584","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dmoFH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createPannerNodeRendererFactory", ()=>createPannerNodeRendererFactory);
var _nativeAudioNodeFaker = require("../guards/native-audio-node-faker");
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext)=>{
    return ()=>{
        const renderedNativeAudioNodes = new WeakMap();
        let renderedBufferPromise = null;
        const createAudioNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeGainNode = null;
            let nativePannerNode = getNativeAudioNode(proxy);
            const commonAudioNodeOptions = {
                channelCount: nativePannerNode.channelCount,
                channelCountMode: nativePannerNode.channelCountMode,
                channelInterpretation: nativePannerNode.channelInterpretation
            };
            const commonNativePannerNodeOptions = {
                ...commonAudioNodeOptions,
                coneInnerAngle: nativePannerNode.coneInnerAngle,
                coneOuterAngle: nativePannerNode.coneOuterAngle,
                coneOuterGain: nativePannerNode.coneOuterGain,
                distanceModel: nativePannerNode.distanceModel,
                maxDistance: nativePannerNode.maxDistance,
                panningModel: nativePannerNode.panningModel,
                refDistance: nativePannerNode.refDistance,
                rolloffFactor: nativePannerNode.rolloffFactor
            };
            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativePannerNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativePannerNode, nativeOfflineAudioContext);
            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.
            if ("bufferSize" in nativePannerNode) nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, {
                ...commonAudioNodeOptions,
                gain: 1
            });
            else if (!nativePannerNodeIsOwnedByContext) {
                const options = {
                    ...commonNativePannerNodeOptions,
                    orientationX: nativePannerNode.orientationX.value,
                    orientationY: nativePannerNode.orientationY.value,
                    orientationZ: nativePannerNode.orientationZ.value,
                    positionX: nativePannerNode.positionX.value,
                    positionY: nativePannerNode.positionY.value,
                    positionZ: nativePannerNode.positionZ.value
                };
                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);
            }
            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);
            if (nativeGainNode !== null) {
                if (renderedBufferPromise === null) {
                    if (nativeOfflineAudioContextConstructor === null) throw new Error("Missing the native OfflineAudioContext constructor.");
                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, // Bug #17: Safari does not yet expose the length.
                    proxy.context.length, nativeOfflineAudioContext.sampleRate);
                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {
                        channelCount: 1,
                        channelCountMode: "explicit",
                        channelInterpretation: "speakers",
                        numberOfInputs: 6
                    });
                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);
                    renderedBufferPromise = (async ()=>{
                        const nativeConstantSourceNodes = await Promise.all([
                            proxy.orientationX,
                            proxy.orientationY,
                            proxy.orientationZ,
                            proxy.positionX,
                            proxy.positionY,
                            proxy.positionZ
                        ].map(async (audioParam, index)=>{
                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {
                                channelCount: 1,
                                channelCountMode: "explicit",
                                channelInterpretation: "discrete",
                                offset: index === 0 ? 1 : 0
                            });
                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset);
                            return nativeConstantSourceNode;
                        }));
                        for(let i = 0; i < 6; i += 1){
                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);
                            nativeConstantSourceNodes[i].start(0);
                        }
                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);
                    })();
                }
                const renderedBuffer = await renderedBufferPromise;
                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, {
                    ...commonAudioNodeOptions,
                    gain: 1
                });
                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode);
                const channelDatas = [];
                for(let i = 0; i < renderedBuffer.numberOfChannels; i += 1)channelDatas.push(renderedBuffer.getChannelData(i));
                let lastOrientation = [
                    channelDatas[0][0],
                    channelDatas[1][0],
                    channelDatas[2][0]
                ];
                let lastPosition = [
                    channelDatas[3][0],
                    channelDatas[4][0],
                    channelDatas[5][0]
                ];
                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, {
                    ...commonAudioNodeOptions,
                    gain: 1
                });
                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {
                    ...commonNativePannerNodeOptions,
                    orientationX: lastOrientation[0],
                    orientationY: lastOrientation[1],
                    orientationZ: lastOrientation[2],
                    positionX: lastPosition[0],
                    positionY: lastPosition[1],
                    positionZ: lastPosition[2]
                });
                inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);
                partialPannerNode.connect(nativeGainNode);
                for(let i = 128; i < renderedBuffer.length; i += 128){
                    const orientation = [
                        channelDatas[0][i],
                        channelDatas[1][i],
                        channelDatas[2][i]
                    ];
                    const positon = [
                        channelDatas[3][i],
                        channelDatas[4][i],
                        channelDatas[5][i]
                    ];
                    if (orientation.some((value, index)=>value !== lastOrientation[index]) || positon.some((value, index)=>value !== lastPosition[index])) {
                        lastOrientation = orientation;
                        lastPosition = positon;
                        const currentTime = i / nativeOfflineAudioContext.sampleRate;
                        gateGainNode.gain.setValueAtTime(0, currentTime);
                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, {
                            ...commonAudioNodeOptions,
                            gain: 0
                        });
                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {
                            ...commonNativePannerNodeOptions,
                            orientationX: lastOrientation[0],
                            orientationY: lastOrientation[1],
                            orientationZ: lastOrientation[2],
                            positionX: lastPosition[0],
                            positionY: lastPosition[1],
                            positionZ: lastPosition[2]
                        });
                        gateGainNode.gain.setValueAtTime(1, currentTime);
                        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);
                        partialPannerNode.connect(nativeGainNode);
                    }
                }
                return nativeGainNode;
            }
            if (!nativePannerNodeIsOwnedByContext) {
                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);
                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);
                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);
                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);
                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);
                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);
            } else {
                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);
                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);
                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);
                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);
                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);
                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);
            }
            if ((0, _nativeAudioNodeFaker.isNativeAudioNodeFaker)(nativePannerNode)) await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0]);
            else await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode);
            return nativePannerNode;
        };
        return {
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
                if (renderedNativeGainNodeOrNativePannerNode !== undefined) return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);
                return createAudioNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../guards/native-audio-node-faker":"fNQvH","../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lQWxF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createPeriodicWaveConstructor", ()=>createPeriodicWaveConstructor);
const DEFAULT_OPTIONS = {
    disableNormalization: false
};
const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions)=>{
    return class PeriodicWave {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = sanitizePeriodicWaveOptions({
                ...DEFAULT_OPTIONS,
                ...options
            });
            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);
            periodicWaveStore.add(periodicWave);
            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.
            return periodicWave;
        }
        static [Symbol.hasInstance](instance) {
            return instance !== null && typeof instance === "object" && Object.getPrototypeOf(instance) === PeriodicWave.prototype || periodicWaveStore.has(instance);
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"beVBx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createRenderAutomation", ()=>createRenderAutomation);
const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam)=>{
    return (nativeOfflineAudioContext, audioParam, nativeAudioParam)=>{
        const audioParamRenderer = getAudioParamRenderer(audioParam);
        audioParamRenderer.replay(nativeAudioParam);
        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lHwkb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createRenderInputsOfAudioNode", ()=>createRenderInputsOfAudioNode);
const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle)=>{
    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode)=>{
        const audioNodeConnections = getAudioNodeConnections(audioNode);
        await Promise.all(audioNodeConnections.activeInputs.map((connections, input)=>Array.from(connections).map(async ([source, output])=>{
                const audioNodeRenderer = getAudioNodeRenderer(source);
                const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);
                const destination = audioNode.context.destination;
                if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) renderedNativeAudioNode.connect(nativeAudioNode, output, input);
            })).reduce((allRenderingPromises, renderingPromises)=>[
                ...allRenderingPromises,
                ...renderingPromises
            ], []));
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h2qZT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createRenderInputsOfAudioParam", ()=>createRenderInputsOfAudioParam);
const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle)=>{
    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam)=>{
        const audioParamConnections = getAudioParamConnections(audioParam);
        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output])=>{
            const audioNodeRenderer = getAudioNodeRenderer(source);
            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);
            if (!isPartOfACycle(source)) renderedNativeAudioNode.connect(nativeAudioParam, output);
        }));
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iIK4Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createRenderNativeOfflineAudioContext", ()=>createRenderNativeOfflineAudioContext);
var _testPromiseSupport = require("../helpers/test-promise-support");
const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport)=>{
    return (nativeOfflineAudioContext)=>{
        // Bug #21: Safari does not support promises yet.
        if (cacheTestResult((0, _testPromiseSupport.testPromiseSupport), ()=>(0, _testPromiseSupport.testPromiseSupport)(nativeOfflineAudioContext))) // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.
        return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported)=>{
            if (!isOfflineAudioContextCurrentTimeSupported) {
                const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);
                nativeOfflineAudioContext.oncomplete = ()=>{
                    scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation
                    scriptProcessorNode.disconnect();
                };
                scriptProcessorNode.onaudioprocess = ()=>nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation
                scriptProcessorNode.connect(nativeOfflineAudioContext.destination);
            }
            return nativeOfflineAudioContext.startRendering();
        });
        return new Promise((resolve)=>{
            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.
            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {
                channelCount: 1,
                channelCountMode: "explicit",
                channelInterpretation: "discrete",
                gain: 0
            });
            nativeOfflineAudioContext.oncomplete = (event)=>{
                gainNode.disconnect();
                resolve(event.renderedBuffer);
            };
            gainNode.connect(nativeOfflineAudioContext.destination);
            nativeOfflineAudioContext.startRendering();
        });
    };
};

},{"../helpers/test-promise-support":"4hyPB","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3VTsP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createSetActiveAudioWorkletNodeInputs", ()=>createSetActiveAudioWorkletNodeInputs);
const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore)=>{
    return (nativeAudioWorkletNode, activeInputs)=>{
        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hzHas":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createSetAudioNodeTailTime", ()=>createSetAudioNodeTailTime);
const createSetAudioNodeTailTime = (audioNodeTailTimeStore)=>{
    return (audioNode, tailTime)=>audioNodeTailTimeStore.set(audioNode, tailTime);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ebqUV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createStartRendering", ()=>createStartRendering);
var _wrapAudioBufferGetChannelDataMethod = require("../helpers/wrap-audio-buffer-get-channel-data-method");
const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds)=>{
    return (destination, nativeOfflineAudioContext)=>getAudioNodeRenderer(destination).render(destination, nativeOfflineAudioContext)/*
         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the
         * destination.
         */ .then(()=>Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode)=>getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext)))).then(()=>renderNativeOfflineAudioContext(nativeOfflineAudioContext)).then((audioBuffer)=>{
            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.
            if (typeof audioBuffer.copyFromChannel !== "function") {
                wrapAudioBufferCopyChannelMethods(audioBuffer);
                (0, _wrapAudioBufferGetChannelDataMethod.wrapAudioBufferGetChannelDataMethod)(audioBuffer);
            // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.
            } else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, ()=>testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
            audioBufferStore.add(audioBuffer);
            return audioBuffer;
        });
};

},{"../helpers/wrap-audio-buffer-get-channel-data-method":"bXfRI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gc2rO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createStereoPannerNodeConstructor", ()=>createStereoPannerNodeConstructor);
const DEFAULT_OPTIONS = {
    channelCount: 2,
    /*
     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent
     * behavior.
     */ channelCountMode: "explicit",
    channelInterpretation: "speakers",
    pan: 0
};
const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext)=>{
    return class StereoPannerNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const stereoPannerNodeRenderer = isOffline ? createStereoPannerNodeRenderer() : null;
            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);
            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);
        }
        get pan() {
            return this._pan;
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dAPan":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createStereoPannerNodeRendererFactory", ()=>createStereoPannerNodeRendererFactory);
var _nativeAudioNodeFaker = require("../guards/native-audio-node-faker");
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode)=>{
    return ()=>{
        const renderedNativeStereoPannerNodes = new WeakMap();
        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeStereoPannerNode = getNativeAudioNode(proxy);
            /*
             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created
             * again.
             */ const nativeStereoPannerNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeStereoPannerNode, nativeOfflineAudioContext);
            if (!nativeStereoPannerNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeStereoPannerNode.channelCount,
                    channelCountMode: nativeStereoPannerNode.channelCountMode,
                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,
                    pan: nativeStereoPannerNode.pan.value
                };
                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);
            }
            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);
            if (!nativeStereoPannerNodeIsOwnedByContext) await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);
            else await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);
            if ((0, _nativeAudioNodeFaker.isNativeAudioNodeFaker)(nativeStereoPannerNode)) await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0]);
            else await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode);
            return nativeStereoPannerNode;
        };
        return {
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);
                if (renderedNativeStereoPannerNode !== undefined) return Promise.resolve(renderedNativeStereoPannerNode);
                return createStereoPannerNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../guards/native-audio-node-faker":"fNQvH","../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"60xJt":[function(require,module,exports) {
// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestAudioBufferConstructorSupport", ()=>createTestAudioBufferConstructorSupport);
const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor)=>{
    return ()=>{
        if (nativeAudioBufferConstructor === null) return false;
        try {
            new nativeAudioBufferConstructor({
                length: 1,
                sampleRate: 44100
            }); // tslint:disable-line:no-unused-expression
        } catch  {
            return false;
        }
        return true;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fDZlv":[function(require,module,exports) {
/*
 * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods
 * is enough to know if the other one is supported as well.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestAudioBufferCopyChannelMethodsSubarraySupport", ()=>createTestAudioBufferCopyChannelMethodsSubarraySupport);
const createTestAudioBufferCopyChannelMethodsSubarraySupport = (nativeOfflineAudioContextConstructor)=>{
    return ()=>{
        if (nativeOfflineAudioContextConstructor === null) return false;
        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        const nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100);
        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
        if (nativeAudioBuffer.copyToChannel === undefined) return true;
        const source = new Float32Array(2);
        try {
            nativeAudioBuffer.copyFromChannel(source, 0, 0);
        } catch  {
            return false;
        }
        return true;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k9nLI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestAudioContextCloseMethodSupport", ()=>createTestAudioContextCloseMethodSupport);
const createTestAudioContextCloseMethodSupport = (nativeAudioContextConstructor)=>{
    return ()=>{
        if (nativeAudioContextConstructor === null) return false;
        // Try to check the prototype before constructing the AudioContext.
        if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) return true;
        const audioContext = new nativeAudioContextConstructor();
        const isAudioContextClosable = audioContext.close !== undefined;
        try {
            audioContext.close();
        } catch  {
        // Ignore errors.
        }
        return isAudioContextClosable;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8SGZm":[function(require,module,exports) {
/**
 * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers
 * did not refuse to decode invalid parameters with a TypeError.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestAudioContextDecodeAudioDataMethodTypeErrorSupport", ()=>createTestAudioContextDecodeAudioDataMethodTypeErrorSupport);
const createTestAudioContextDecodeAudioDataMethodTypeErrorSupport = (nativeOfflineAudioContextConstructor)=>{
    return ()=>{
        if (nativeOfflineAudioContextConstructor === null) return Promise.resolve(false);
        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        // Bug #21: Safari does not support promises yet.
        return new Promise((resolve)=>{
            let isPending = true;
            const resolvePromise = (err)=>{
                if (isPending) {
                    isPending = false;
                    offlineAudioContext.startRendering();
                    resolve(err instanceof TypeError);
                }
            };
            let promise;
            // Bug #26: Safari throws a synchronous error.
            try {
                promise = offlineAudioContext// Bug #1: Safari requires a successCallback.
                .decodeAudioData(null, ()=>{
                // Ignore the success callback.
                }, resolvePromise);
            } catch (err) {
                resolvePromise(err);
            }
            // Bug #21: Safari does not support promises yet.
            if (promise !== undefined) // Bug #6: Chrome, Edge and Firefox do not call the errorCallback.
            promise.catch(resolvePromise);
        });
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5NBS1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestAudioContextOptionsSupport", ()=>createTestAudioContextOptionsSupport);
const createTestAudioContextOptionsSupport = (nativeAudioContextConstructor)=>{
    return ()=>{
        if (nativeAudioContextConstructor === null) return false;
        let audioContext;
        try {
            audioContext = new nativeAudioContextConstructor({
                latencyHint: "balanced"
            });
        } catch  {
            return false;
        }
        audioContext.close();
        return true;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4ontN":[function(require,module,exports) {
// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestAudioNodeConnectMethodSupport", ()=>createTestAudioNodeConnectMethodSupport);
const createTestAudioNodeConnectMethodSupport = (nativeOfflineAudioContextConstructor)=>{
    return ()=>{
        if (nativeOfflineAudioContextConstructor === null) return false;
        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        const nativeGainNode = nativeOfflineAudioContext.createGain();
        const isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;
        nativeGainNode.disconnect(nativeGainNode);
        return isSupported;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"baMs2":[function(require,module,exports) {
/**
 * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was
 * enabled by default in version 66.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestAudioWorkletProcessorNoOutputsSupport", ()=>createTestAudioWorkletProcessorNoOutputsSupport);
const createTestAudioWorkletProcessorNoOutputsSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor)=>{
    return async ()=>{
        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.
        if (nativeAudioWorkletNodeConstructor === null) return true;
        if (nativeOfflineAudioContextConstructor === null) return false;
        const blob = new Blob([
            'let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor("a",A)'
        ], {
            type: "application/javascript; charset=utf-8"
        });
        const messageChannel = new MessageChannel();
        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.
        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);
        const url = URL.createObjectURL(blob);
        let isCallingProcess = false;
        try {
            await offlineAudioContext.audioWorklet.addModule(url);
            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, "a", {
                numberOfOutputs: 0
            });
            const oscillator = offlineAudioContext.createOscillator();
            await new Promise((resolve)=>{
                audioWorkletNode.port.onmessage = ()=>resolve();
                audioWorkletNode.port.postMessage(messageChannel.port2, [
                    messageChannel.port2
                ]);
            });
            audioWorkletNode.port.onmessage = ()=>isCallingProcess = true;
            oscillator.connect(audioWorkletNode);
            oscillator.start(0);
            await offlineAudioContext.startRendering();
            isCallingProcess = await new Promise((resolve)=>{
                messageChannel.port1.onmessage = ({ data })=>resolve(data === 1);
                messageChannel.port1.postMessage(0);
            });
        } catch  {
        // Ignore errors.
        } finally{
            messageChannel.port1.close();
            URL.revokeObjectURL(url);
        }
        return isCallingProcess;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"47G9e":[function(require,module,exports) {
// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestAudioWorkletProcessorPostMessageSupport", ()=>createTestAudioWorkletProcessorPostMessageSupport);
const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor)=>{
    return async ()=>{
        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.
        if (nativeAudioWorkletNodeConstructor === null) return true;
        if (nativeOfflineAudioContextConstructor === null) return false;
        const blob = new Blob([
            'class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'
        ], {
            type: "application/javascript; charset=utf-8"
        });
        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.
        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);
        const url = URL.createObjectURL(blob);
        let isEmittingMessageEvents = false;
        let isEmittingProcessorErrorEvents = false;
        try {
            await offlineAudioContext.audioWorklet.addModule(url);
            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, "a", {
                numberOfOutputs: 0
            });
            const oscillator = offlineAudioContext.createOscillator();
            audioWorkletNode.port.onmessage = ()=>isEmittingMessageEvents = true;
            audioWorkletNode.onprocessorerror = ()=>isEmittingProcessorErrorEvents = true;
            oscillator.connect(audioWorkletNode);
            oscillator.start(0);
            await offlineAudioContext.startRendering();
            // Bug #197: Safari does not deliver the messages before the promise returned by startRendering() resolves.
            await new Promise((resolve)=>setTimeout(resolve));
        } catch  {
        // Ignore errors.
        } finally{
            URL.revokeObjectURL(url);
        }
        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"X0MIV":[function(require,module,exports) {
/**
 * Firefox up to version 69 did not throw an error when setting a different channelCount or channelCountMode.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestChannelMergerNodeChannelCountSupport", ()=>createTestChannelMergerNodeChannelCountSupport);
const createTestChannelMergerNodeChannelCountSupport = (nativeOfflineAudioContextConstructor)=>{
    return ()=>{
        if (nativeOfflineAudioContextConstructor === null) return false;
        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        const nativeChannelMergerNode = offlineAudioContext.createChannelMerger();
        /**
         * Bug #15: Safari does not return the default properties. It still needs to be patched. This test is supposed to test the support
         * in other browsers.
         */ if (nativeChannelMergerNode.channelCountMode === "max") return true;
        try {
            nativeChannelMergerNode.channelCount = 2;
        } catch  {
            return true;
        }
        return false;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dl03N":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestConstantSourceNodeAccurateSchedulingSupport", ()=>createTestConstantSourceNodeAccurateSchedulingSupport);
const createTestConstantSourceNodeAccurateSchedulingSupport = (nativeOfflineAudioContextConstructor)=>{
    return ()=>{
        if (nativeOfflineAudioContextConstructor === null) return false;
        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        // Bug #62: Safari does not support ConstantSourceNodes.
        if (nativeOfflineAudioContext.createConstantSource === undefined) return true;
        const nativeConstantSourceNode = nativeOfflineAudioContext.createConstantSource();
        /*
         * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to
         * the implementation of Firefox right now, but it could probably be done in a better way.
         */ return nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5yl0D":[function(require,module,exports) {
// Opera up to version 57 did not allow to reassign the buffer of a ConvolverNode.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestConvolverNodeBufferReassignabilitySupport", ()=>createTestConvolverNodeBufferReassignabilitySupport);
const createTestConvolverNodeBufferReassignabilitySupport = (nativeOfflineAudioContextConstructor)=>{
    return ()=>{
        if (nativeOfflineAudioContextConstructor === null) return false;
        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        const nativeConvolverNode = offlineAudioContext.createConvolver();
        nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);
        try {
            nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);
        } catch  {
            return false;
        }
        return true;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gM3PR":[function(require,module,exports) {
// Chrome up to version v80, Edge up to version v80 and Opera up to version v67 did not allow to set the channelCount property of a ConvolverNode to 1. They also did not allow to set the channelCountMode to 'explicit'.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestConvolverNodeChannelCountSupport", ()=>createTestConvolverNodeChannelCountSupport);
const createTestConvolverNodeChannelCountSupport = (nativeOfflineAudioContextConstructor)=>{
    return ()=>{
        if (nativeOfflineAudioContextConstructor === null) return false;
        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        const nativeConvolverNode = offlineAudioContext.createConvolver();
        try {
            nativeConvolverNode.channelCount = 1;
        } catch  {
            return false;
        }
        return true;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"amjh7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestIsSecureContextSupport", ()=>createTestIsSecureContextSupport);
const createTestIsSecureContextSupport = (window)=>{
    return ()=>window !== null && window.hasOwnProperty("isSecureContext");
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bfbzD":[function(require,module,exports) {
// Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport", ()=>createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport);
const createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = (nativeAudioContextConstructor)=>{
    return ()=>{
        if (nativeAudioContextConstructor === null) return false;
        const audioContext = new nativeAudioContextConstructor();
        try {
            audioContext.createMediaStreamSource(new MediaStream());
            return false;
        } catch (err) {
            return true;
        } finally{
            audioContext.close();
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5xrL5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestOfflineAudioContextCurrentTimeSupport", ()=>createTestOfflineAudioContextCurrentTimeSupport);
const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor)=>{
    return ()=>{
        if (nativeOfflineAudioContextConstructor === null) return Promise.resolve(false);
        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.
        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {
            channelCount: 1,
            channelCountMode: "explicit",
            channelInterpretation: "discrete",
            gain: 0
        });
        // Bug #21: Safari does not support promises yet.
        return new Promise((resolve)=>{
            nativeOfflineAudioContext.oncomplete = ()=>{
                gainNode.disconnect();
                resolve(nativeOfflineAudioContext.currentTime !== 0);
            };
            nativeOfflineAudioContext.startRendering();
        });
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eG97H":[function(require,module,exports) {
/**
 * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTestStereoPannerNodeDefaultValueSupport", ()=>createTestStereoPannerNodeDefaultValueSupport);
const createTestStereoPannerNodeDefaultValueSupport = (nativeOfflineAudioContextConstructor)=>{
    return ()=>{
        if (nativeOfflineAudioContextConstructor === null) return Promise.resolve(false);
        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        /*
         * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does
         * support the tested behaviour.
         */ if (nativeOfflineAudioContext.createStereoPanner === undefined) return Promise.resolve(true);
        // Bug #62: Safari does not support ConstantSourceNodes.
        if (nativeOfflineAudioContext.createConstantSource === undefined) return Promise.resolve(true);
        const constantSourceNode = nativeOfflineAudioContext.createConstantSource();
        const stereoPanner = nativeOfflineAudioContext.createStereoPanner();
        constantSourceNode.channelCount = 1;
        constantSourceNode.offset.value = 1;
        stereoPanner.channelCount = 1;
        constantSourceNode.start();
        constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);
        return nativeOfflineAudioContext.startRendering().then((buffer)=>buffer.getChannelData(0)[0] !== 1);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"Vr3Lh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createUnknownError", ()=>createUnknownError);
const createUnknownError = ()=>new DOMException("", "UnknownError");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1yyiX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createWaveShaperNodeConstructor", ()=>createWaveShaperNodeConstructor);
const DEFAULT_OPTIONS = {
    channelCount: 2,
    channelCountMode: "max",
    channelInterpretation: "speakers",
    curve: null,
    oversample: "none"
};
const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime)=>{
    return class WaveShaperNode extends audioNodeConstructor {
        constructor(context, options){
            const nativeContext = getNativeContext(context);
            const mergedOptions = {
                ...DEFAULT_OPTIONS,
                ...options
            };
            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);
            const isOffline = isNativeOfflineAudioContext(nativeContext);
            const waveShaperNodeRenderer = isOffline ? createWaveShaperNodeRenderer() : null;
            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.
            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);
            this._isCurveNullified = false;
            this._nativeWaveShaperNode = nativeWaveShaperNode;
            // @todo Determine a meaningful tail-time instead of just using one second.
            setAudioNodeTailTime(this, 1);
        }
        get curve() {
            if (this._isCurveNullified) return null;
            return this._nativeWaveShaperNode.curve;
        }
        set curve(value) {
            // Bug #103: Safari does not allow to set the curve to null.
            if (value === null) {
                this._isCurveNullified = true;
                this._nativeWaveShaperNode.curve = new Float32Array([
                    0,
                    0
                ]);
            } else {
                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.
                // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.
                if (value.length < 2) throw createInvalidStateError();
                this._isCurveNullified = false;
                this._nativeWaveShaperNode.curve = value;
            }
        }
        get oversample() {
            return this._nativeWaveShaperNode.oversample;
        }
        set oversample(value) {
            this._nativeWaveShaperNode.oversample = value;
        }
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8vhCu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createWaveShaperNodeRendererFactory", ()=>createWaveShaperNodeRendererFactory);
var _nativeAudioNodeFaker = require("../guards/native-audio-node-faker");
var _isOwnedByContext = require("../helpers/is-owned-by-context");
const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode)=>{
    return ()=>{
        const renderedNativeWaveShaperNodes = new WeakMap();
        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext)=>{
            let nativeWaveShaperNode = getNativeAudioNode(proxy);
            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.
            const nativeWaveShaperNodeIsOwnedByContext = (0, _isOwnedByContext.isOwnedByContext)(nativeWaveShaperNode, nativeOfflineAudioContext);
            if (!nativeWaveShaperNodeIsOwnedByContext) {
                const options = {
                    channelCount: nativeWaveShaperNode.channelCount,
                    channelCountMode: nativeWaveShaperNode.channelCountMode,
                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,
                    curve: nativeWaveShaperNode.curve,
                    oversample: nativeWaveShaperNode.oversample
                };
                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);
            }
            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);
            if ((0, _nativeAudioNodeFaker.isNativeAudioNodeFaker)(nativeWaveShaperNode)) await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);
            else await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);
            return nativeWaveShaperNode;
        };
        return {
            render (proxy, nativeOfflineAudioContext) {
                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);
                if (renderedNativeWaveShaperNode !== undefined) return Promise.resolve(renderedNativeWaveShaperNode);
                return createWaveShaperNode(proxy, nativeOfflineAudioContext);
            }
        };
    };
};

},{"../guards/native-audio-node-faker":"fNQvH","../helpers/is-owned-by-context":"1Rud3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dEK7L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createWindow", ()=>createWindow);
const createWindow = ()=>typeof window === "undefined" ? null : window;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bNAxX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createWrapAudioBufferCopyChannelMethods", ()=>createWrapAudioBufferCopyChannelMethods);
const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError)=>{
    return (audioBuffer)=>{
        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0)=>{
            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);
            if (channelNumber >= audioBuffer.numberOfChannels) throw createIndexSizeError();
            const audioBufferLength = audioBuffer.length;
            const channelData = audioBuffer.getChannelData(channelNumber);
            const destinationLength = destination.length;
            for(let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1)destination[i] = channelData[i + bufferOffset];
        };
        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0)=>{
            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);
            if (channelNumber >= audioBuffer.numberOfChannels) throw createIndexSizeError();
            const audioBufferLength = audioBuffer.length;
            const channelData = audioBuffer.getChannelData(channelNumber);
            const sourceLength = source.length;
            for(let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1)channelData[i + bufferOffset] = source[i];
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4XNvu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createWrapAudioBufferCopyChannelMethodsOutOfBounds", ()=>createWrapAudioBufferCopyChannelMethodsOutOfBounds);
const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong)=>{
    return (audioBuffer)=>{
        audioBuffer.copyFromChannel = ((copyFromChannel)=>{
            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0)=>{
                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);
                if (bufferOffset < audioBuffer.length) return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);
            };
        })(audioBuffer.copyFromChannel);
        audioBuffer.copyToChannel = ((copyToChannel)=>{
            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0)=>{
                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);
                if (bufferOffset < audioBuffer.length) return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);
            };
        })(audioBuffer.copyToChannel);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ckaEw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer", ()=>createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer);
const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors)=>{
    return (nativeAudioBufferSourceNode, nativeContext)=>{
        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);
        if (nativeAudioBufferSourceNode.buffer === null) nativeAudioBufferSourceNode.buffer = nullifiedBuffer;
        overwriteAccessors(nativeAudioBufferSourceNode, "buffer", (get)=>()=>{
                const value = get.call(nativeAudioBufferSourceNode);
                return value === nullifiedBuffer ? null : value;
            }, (set)=>(value)=>{
                return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);
            });
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8txzE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createWrapChannelMergerNode", ()=>createWrapChannelMergerNode);
const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections)=>{
    return (nativeContext, channelMergerNode)=>{
        // Bug #15: Safari does not return the default properties.
        channelMergerNode.channelCount = 1;
        channelMergerNode.channelCountMode = "explicit";
        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.
        Object.defineProperty(channelMergerNode, "channelCount", {
            get: ()=>1,
            set: ()=>{
                throw createInvalidStateError();
            }
        });
        Object.defineProperty(channelMergerNode, "channelCountMode", {
            get: ()=>"explicit",
            set: ()=>{
                throw createInvalidStateError();
            }
        });
        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.
        const audioBufferSourceNode = nativeContext.createBufferSource();
        const whenConnected = ()=>{
            const length = channelMergerNode.numberOfInputs;
            for(let i = 0; i < length; i += 1)audioBufferSourceNode.connect(channelMergerNode, 0, i);
        };
        const whenDisconnected = ()=>audioBufferSourceNode.disconnect(channelMergerNode);
        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lprXE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getFirstSample", ()=>getFirstSample);
const getFirstSample = (audioBuffer, buffer, channelNumber)=>{
    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
    if (audioBuffer.copyFromChannel === undefined) return audioBuffer.getChannelData(channelNumber)[0];
    audioBuffer.copyFromChannel(buffer, channelNumber);
    return buffer[0];
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1AlFj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isDCCurve", ()=>isDCCurve);
const isDCCurve = (curve)=>{
    if (curve === null) return false;
    const length = curve.length;
    if (length % 2 !== 0) return curve[Math.floor(length / 2)] !== 0;
    return curve[length / 2 - 1] + curve[length / 2] !== 0;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hfSZZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "overwriteAccessors", ()=>overwriteAccessors);
const overwriteAccessors = (object, property, createGetter, createSetter)=>{
    let prototype = object;
    while(!prototype.hasOwnProperty(property))prototype = Object.getPrototypeOf(prototype);
    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);
    Object.defineProperty(object, property, {
        get: createGetter(get),
        set: createSetter(set)
    });
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"T7Ytc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sanitizeAudioWorkletNodeOptions", ()=>sanitizeAudioWorkletNodeOptions);
const sanitizeAudioWorkletNodeOptions = (options)=>{
    return {
        ...options,
        outputChannelCount: options.outputChannelCount !== undefined ? options.outputChannelCount : options.numberOfInputs === 1 && options.numberOfOutputs === 1 ? /*
                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why
                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That
                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.
                   */ [
            options.channelCount
        ] : Array.from({
            length: options.numberOfOutputs
        }, ()=>1)
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eYcVh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sanitizeChannelSplitterOptions", ()=>sanitizeChannelSplitterOptions);
const sanitizeChannelSplitterOptions = (options)=>{
    return {
        ...options,
        channelCount: options.numberOfOutputs
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2uUdY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sanitizePeriodicWaveOptions", ()=>sanitizePeriodicWaveOptions);
const sanitizePeriodicWaveOptions = (options)=>{
    const { imag, real } = options;
    if (imag === undefined) {
        if (real === undefined) return {
            ...options,
            imag: [
                0,
                0
            ],
            real: [
                0,
                0
            ]
        };
        return {
            ...options,
            imag: Array.from(real, ()=>0),
            real
        };
    }
    if (real === undefined) return {
        ...options,
        imag,
        real: Array.from(imag, ()=>0)
    };
    return {
        ...options,
        imag,
        real
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"U9WdO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setValueAtTimeUntilPossible", ()=>setValueAtTimeUntilPossible);
const setValueAtTimeUntilPossible = (audioParam, value, startTime)=>{
    try {
        audioParam.setValueAtTime(value, startTime);
    } catch (err) {
        if (err.code !== 9) throw err;
        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d1Bp3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport", ()=>testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport);
const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext)=>{
    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
    nativeAudioBufferSourceNode.start();
    try {
        nativeAudioBufferSourceNode.start();
    } catch  {
        return true;
    }
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ljLh5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testAudioBufferSourceNodeStartMethodOffsetClampingSupport", ()=>testAudioBufferSourceNodeStartMethodOffsetClampingSupport);
const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext)=>{
    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);
    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;
    try {
        nativeAudioBufferSourceNode.start(0, 1);
    } catch  {
        return false;
    }
    return true;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1AlzI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testAudioBufferSourceNodeStopMethodNullifiedBufferSupport", ()=>testAudioBufferSourceNodeStopMethodNullifiedBufferSupport);
const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext)=>{
    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
    nativeAudioBufferSourceNode.start();
    try {
        nativeAudioBufferSourceNode.stop();
    } catch  {
        return false;
    }
    return true;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iXOCC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testAudioScheduledSourceNodeStartMethodNegativeParametersSupport", ()=>testAudioScheduledSourceNodeStartMethodNegativeParametersSupport);
const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext)=>{
    const nativeAudioBufferSourceNode = nativeContext.createOscillator();
    try {
        nativeAudioBufferSourceNode.start(-1);
    } catch (err) {
        return err instanceof RangeError;
    }
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6HMSy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport", ()=>testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport);
const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext)=>{
    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);
    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;
    nativeAudioBufferSourceNode.start();
    nativeAudioBufferSourceNode.stop();
    try {
        nativeAudioBufferSourceNode.stop();
        return true;
    } catch  {
        return false;
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3eDpC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testAudioScheduledSourceNodeStopMethodNegativeParametersSupport", ()=>testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);
const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext)=>{
    const nativeAudioBufferSourceNode = nativeContext.createOscillator();
    try {
        nativeAudioBufferSourceNode.stop(-1);
    } catch (err) {
        return err instanceof RangeError;
    }
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cKeDz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testAudioWorkletNodeOptionsClonability", ()=>testAudioWorkletNodeOptionsClonability);
const testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions)=>{
    const { port1, port2 } = new MessageChannel();
    try {
        // This will throw an error if the audioWorkletNodeOptions are not clonable.
        port1.postMessage(audioWorkletNodeOptions);
    } finally{
        port1.close();
        port2.close();
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4CH46":[function(require,module,exports) {
/*
 * Bug #122: Edge up to version v18 did not allow to construct a DOMException'. It also had a couple more bugs but since this is easy to
 * test it's used here as a placeholder.
 *
 * Bug #27: Edge up to version v18 did reject an invalid arrayBuffer passed to decodeAudioData() with a DOMException.
 *
 * Bug #50: Edge up to version v18 did not allow to create AudioNodes on a closed context.
 *
 * Bug #57: Edge up to version v18 did not throw an error when assigning the type of an OscillatorNode to 'custom'.
 *
 * Bug #63: Edge up to version v18 did not expose the mediaElement property of a MediaElementAudioSourceNode.
 *
 * Bug #64: Edge up to version v18 did not support the MediaStreamAudioDestinationNode.
 *
 * Bug #71: Edge up to version v18 did not allow to set the buffer of an AudioBufferSourceNode to null.
 *
 * Bug #93: Edge up to version v18 did set the sampleRate of an AudioContext to zero when it was closed.
 *
 * Bug #101: Edge up to version v18 refused to execute decodeAudioData() on a closed context.
 *
 * Bug #106: Edge up to version v18 did not expose the maxValue and minValue properties of the pan AudioParam of a StereoPannerNode.
 *
 * Bug #110: Edge up to version v18 did not expose the maxValue and minValue properties of the attack, knee, ratio, release and threshold AudioParams of a DynamicsCompressorNode.
 *
 * Bug #123: Edge up to version v18 did not support HRTF as the panningModel for a PannerNode.
 *
 * Bug #145: Edge up to version v18 did throw an IndexSizeError when an OfflineAudioContext was created with a sampleRate of zero.
 *
 * Bug #161: Edge up to version v18 did not expose the maxValue and minValue properties of the delayTime AudioParam of a DelayNode.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testDomExceptionConstructorSupport", ()=>testDomExceptionConstructorSupport);
const testDomExceptionConstructorSupport = ()=>{
    try {
        new DOMException(); // tslint:disable-line:no-unused-expression
    } catch  {
        return false;
    }
    return true;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5nYF9":[function(require,module,exports) {
// Safari at version 11 did not support transferables.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testTransferablesSupport", ()=>testTransferablesSupport);
const testTransferablesSupport = ()=>new Promise((resolve)=>{
        const arrayBuffer = new ArrayBuffer(0);
        const { port1, port2 } = new MessageChannel();
        port1.onmessage = ({ data })=>resolve(data !== null);
        port2.postMessage(arrayBuffer, [
            arrayBuffer
        ]);
    });

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cWWvc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "wrapAudioBufferSourceNodeStartMethodOffsetClamping", ()=>wrapAudioBufferSourceNodeStartMethodOffsetClamping);
const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode)=>{
    nativeAudioBufferSourceNode.start = ((start)=>{
        return (when = 0, offset = 0, duration)=>{
            const buffer = nativeAudioBufferSourceNode.buffer;
            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.
            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);
            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.
            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) start.call(nativeAudioBufferSourceNode, when, 0, 0);
            else start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);
        };
    })(nativeAudioBufferSourceNode.start);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fZgIG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls", ()=>wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);
var _interceptConnections = require("./intercept-connections");
const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext)=>{
    const nativeGainNode = nativeContext.createGain();
    nativeAudioScheduledSourceNode.connect(nativeGainNode);
    const disconnectGainNode = ((disconnect)=>{
        return ()=>{
            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.
            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);
            nativeAudioScheduledSourceNode.removeEventListener("ended", disconnectGainNode);
        };
    })(nativeAudioScheduledSourceNode.disconnect);
    nativeAudioScheduledSourceNode.addEventListener("ended", disconnectGainNode);
    (0, _interceptConnections.interceptConnections)(nativeAudioScheduledSourceNode, nativeGainNode);
    nativeAudioScheduledSourceNode.stop = ((stop)=>{
        let isStopped = false;
        return (when = 0)=>{
            if (isStopped) try {
                stop.call(nativeAudioScheduledSourceNode, when);
            } catch  {
                nativeGainNode.gain.setValueAtTime(0, when);
            }
            else {
                stop.call(nativeAudioScheduledSourceNode, when);
                isStopped = true;
            }
        };
    })(nativeAudioScheduledSourceNode.stop);
};

},{"./intercept-connections":"jvEjr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gbqed":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "wrapEventListener", ()=>wrapEventListener);
const wrapEventListener = (target, eventListener)=>{
    return (event)=>{
        const descriptor = {
            value: target
        };
        Object.defineProperties(event, {
            currentTarget: descriptor,
            target: descriptor
        });
        if (typeof eventListener === "function") return eventListener.call(target, event);
        return eventListener.handleEvent.call(target, event);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bFhB6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _analyserNode = require("./analyser-node");
parcelHelpers.exportAll(_analyserNode, exports);
var _analyserOptions = require("./analyser-options");
parcelHelpers.exportAll(_analyserOptions, exports);
var _audioBuffer = require("./audio-buffer");
parcelHelpers.exportAll(_audioBuffer, exports);
var _audioBufferOptions = require("./audio-buffer-options");
parcelHelpers.exportAll(_audioBufferOptions, exports);
var _audioBufferSourceNode = require("./audio-buffer-source-node");
parcelHelpers.exportAll(_audioBufferSourceNode, exports);
var _audioBufferSourceNodeRenderer = require("./audio-buffer-source-node-renderer");
parcelHelpers.exportAll(_audioBufferSourceNodeRenderer, exports);
var _audioBufferSourceOptions = require("./audio-buffer-source-options");
parcelHelpers.exportAll(_audioBufferSourceOptions, exports);
var _audioContext = require("./audio-context");
parcelHelpers.exportAll(_audioContext, exports);
var _audioContextOptions = require("./audio-context-options");
parcelHelpers.exportAll(_audioContextOptions, exports);
var _audioDestinationNode = require("./audio-destination-node");
parcelHelpers.exportAll(_audioDestinationNode, exports);
var _audioListener = require("./audio-listener");
parcelHelpers.exportAll(_audioListener, exports);
var _audioNode = require("./audio-node");
parcelHelpers.exportAll(_audioNode, exports);
var _audioNodeOptions = require("./audio-node-options");
parcelHelpers.exportAll(_audioNodeOptions, exports);
var _audioNodeRenderer = require("./audio-node-renderer");
parcelHelpers.exportAll(_audioNodeRenderer, exports);
var _audioParam = require("./audio-param");
parcelHelpers.exportAll(_audioParam, exports);
var _audioParamDescriptor = require("./audio-param-descriptor");
parcelHelpers.exportAll(_audioParamDescriptor, exports);
var _audioParamRenderer = require("./audio-param-renderer");
parcelHelpers.exportAll(_audioParamRenderer, exports);
var _audioScheduledSourceNode = require("./audio-scheduled-source-node");
parcelHelpers.exportAll(_audioScheduledSourceNode, exports);
var _audioScheduledSourceNodeEventMap = require("./audio-scheduled-source-node-event-map");
parcelHelpers.exportAll(_audioScheduledSourceNodeEventMap, exports);
var _audioWorklet = require("./audio-worklet");
parcelHelpers.exportAll(_audioWorklet, exports);
var _audioWorkletNode = require("./audio-worklet-node");
parcelHelpers.exportAll(_audioWorkletNode, exports);
var _audioWorkletNodeEventMap = require("./audio-worklet-node-event-map");
parcelHelpers.exportAll(_audioWorkletNodeEventMap, exports);
var _audioWorkletNodeOptions = require("./audio-worklet-node-options");
parcelHelpers.exportAll(_audioWorkletNodeOptions, exports);
var _audioWorkletProcessor = require("./audio-worklet-processor");
parcelHelpers.exportAll(_audioWorkletProcessor, exports);
var _audioWorkletProcessorConstructor = require("./audio-worklet-processor-constructor");
parcelHelpers.exportAll(_audioWorkletProcessorConstructor, exports);
var _automation = require("./automation");
parcelHelpers.exportAll(_automation, exports);
var _baseAudioContext = require("./base-audio-context");
parcelHelpers.exportAll(_baseAudioContext, exports);
var _biquadFilterNode = require("./biquad-filter-node");
parcelHelpers.exportAll(_biquadFilterNode, exports);
var _biquadFilterOptions = require("./biquad-filter-options");
parcelHelpers.exportAll(_biquadFilterOptions, exports);
var _channelMergerOptions = require("./channel-merger-options");
parcelHelpers.exportAll(_channelMergerOptions, exports);
var _channelSplitterOptions = require("./channel-splitter-options");
parcelHelpers.exportAll(_channelSplitterOptions, exports);
var _commonAudioContext = require("./common-audio-context");
parcelHelpers.exportAll(_commonAudioContext, exports);
var _commonOfflineAudioContext = require("./common-offline-audio-context");
parcelHelpers.exportAll(_commonOfflineAudioContext, exports);
var _constantSourceNode = require("./constant-source-node");
parcelHelpers.exportAll(_constantSourceNode, exports);
var _constantSourceNodeRenderer = require("./constant-source-node-renderer");
parcelHelpers.exportAll(_constantSourceNodeRenderer, exports);
var _constantSourceOptions = require("./constant-source-options");
parcelHelpers.exportAll(_constantSourceOptions, exports);
var _convolverNode = require("./convolver-node");
parcelHelpers.exportAll(_convolverNode, exports);
var _convolverOptions = require("./convolver-options");
parcelHelpers.exportAll(_convolverOptions, exports);
var _delayNode = require("./delay-node");
parcelHelpers.exportAll(_delayNode, exports);
var _delayOptions = require("./delay-options");
parcelHelpers.exportAll(_delayOptions, exports);
var _dynamicsCompressorNode = require("./dynamics-compressor-node");
parcelHelpers.exportAll(_dynamicsCompressorNode, exports);
var _dynamicsCompressorOptions = require("./dynamics-compressor-options");
parcelHelpers.exportAll(_dynamicsCompressorOptions, exports);
var _eventTarget = require("./event-target");
parcelHelpers.exportAll(_eventTarget, exports);
var _gainNode = require("./gain-node");
parcelHelpers.exportAll(_gainNode, exports);
var _gainOptions = require("./gain-options");
parcelHelpers.exportAll(_gainOptions, exports);
var _iirFilterNode = require("./iir-filter-node");
parcelHelpers.exportAll(_iirFilterNode, exports);
var _iirFilterOptions = require("./iir-filter-options");
parcelHelpers.exportAll(_iirFilterOptions, exports);
var _mediaElementAudioSourceNode = require("./media-element-audio-source-node");
parcelHelpers.exportAll(_mediaElementAudioSourceNode, exports);
var _mediaElementAudioSourceOptions = require("./media-element-audio-source-options");
parcelHelpers.exportAll(_mediaElementAudioSourceOptions, exports);
var _mediaStreamAudioDestinationNode = require("./media-stream-audio-destination-node");
parcelHelpers.exportAll(_mediaStreamAudioDestinationNode, exports);
var _mediaStreamAudioSourceNode = require("./media-stream-audio-source-node");
parcelHelpers.exportAll(_mediaStreamAudioSourceNode, exports);
var _mediaStreamAudioSourceOptions = require("./media-stream-audio-source-options");
parcelHelpers.exportAll(_mediaStreamAudioSourceOptions, exports);
var _mediaStreamTrackAudioSourceNode = require("./media-stream-track-audio-source-node");
parcelHelpers.exportAll(_mediaStreamTrackAudioSourceNode, exports);
var _mediaStreamTrackAudioSourceOptions = require("./media-stream-track-audio-source-options");
parcelHelpers.exportAll(_mediaStreamTrackAudioSourceOptions, exports);
var _minimalAudioContext = require("./minimal-audio-context");
parcelHelpers.exportAll(_minimalAudioContext, exports);
var _minimalBaseAudioContext = require("./minimal-base-audio-context");
parcelHelpers.exportAll(_minimalBaseAudioContext, exports);
var _minimalBaseAudioContextEventMap = require("./minimal-base-audio-context-event-map");
parcelHelpers.exportAll(_minimalBaseAudioContextEventMap, exports);
var _minimalOfflineAudioContext = require("./minimal-offline-audio-context");
parcelHelpers.exportAll(_minimalOfflineAudioContext, exports);
var _nativeAudioNodeFaker = require("./native-audio-node-faker");
parcelHelpers.exportAll(_nativeAudioNodeFaker, exports);
var _nativeAudioWorkletNodeFaker = require("./native-audio-worklet-node-faker");
parcelHelpers.exportAll(_nativeAudioWorkletNodeFaker, exports);
var _nativeConstantSourceNodeFaker = require("./native-constant-source-node-faker");
parcelHelpers.exportAll(_nativeConstantSourceNodeFaker, exports);
var _nativeConvolverNodeFaker = require("./native-convolver-node-faker");
parcelHelpers.exportAll(_nativeConvolverNodeFaker, exports);
var _nativeIirFilterNodeFaker = require("./native-iir-filter-node-faker");
parcelHelpers.exportAll(_nativeIirFilterNodeFaker, exports);
var _nativePannerNodeFaker = require("./native-panner-node-faker");
parcelHelpers.exportAll(_nativePannerNodeFaker, exports);
var _nativeStereoPannerNodeFaker = require("./native-stereo-panner-node-faker");
parcelHelpers.exportAll(_nativeStereoPannerNodeFaker, exports);
var _nativeWaveShaperNodeFaker = require("./native-wave-shaper-node-faker");
parcelHelpers.exportAll(_nativeWaveShaperNodeFaker, exports);
var _offlineAudioCompletionEvent = require("./offline-audio-completion-event");
parcelHelpers.exportAll(_offlineAudioCompletionEvent, exports);
var _offlineAudioContext = require("./offline-audio-context");
parcelHelpers.exportAll(_offlineAudioContext, exports);
var _offlineAudioContextConstructor = require("./offline-audio-context-constructor");
parcelHelpers.exportAll(_offlineAudioContextConstructor, exports);
var _offlineAudioContextOptions = require("./offline-audio-context-options");
parcelHelpers.exportAll(_offlineAudioContextOptions, exports);
var _oscillatorNode = require("./oscillator-node");
parcelHelpers.exportAll(_oscillatorNode, exports);
var _oscillatorNodeRenderer = require("./oscillator-node-renderer");
parcelHelpers.exportAll(_oscillatorNodeRenderer, exports);
var _oscillatorOptions = require("./oscillator-options");
parcelHelpers.exportAll(_oscillatorOptions, exports);
var _pannerNode = require("./panner-node");
parcelHelpers.exportAll(_pannerNode, exports);
var _pannerOptions = require("./panner-options");
parcelHelpers.exportAll(_pannerOptions, exports);
var _periodicWave = require("./periodic-wave");
parcelHelpers.exportAll(_periodicWave, exports);
var _periodicWaveConstraints = require("./periodic-wave-constraints");
parcelHelpers.exportAll(_periodicWaveConstraints, exports);
var _periodicWaveOptions = require("./periodic-wave-options");
parcelHelpers.exportAll(_periodicWaveOptions, exports);
var _readOnlyMap = require("./read-only-map");
parcelHelpers.exportAll(_readOnlyMap, exports);
var _stereoPannerNode = require("./stereo-panner-node");
parcelHelpers.exportAll(_stereoPannerNode, exports);
var _stereoPannerOptions = require("./stereo-panner-options");
parcelHelpers.exportAll(_stereoPannerOptions, exports);
var _waveShaperNode = require("./wave-shaper-node");
parcelHelpers.exportAll(_waveShaperNode, exports);
var _waveShaperOptions = require("./wave-shaper-options");
parcelHelpers.exportAll(_waveShaperOptions, exports);
var _workletOptions = require("./worklet-options");
parcelHelpers.exportAll(_workletOptions, exports);

},{"./analyser-node":"irip4","./analyser-options":"407dd","./audio-buffer":"a2w0E","./audio-buffer-options":"gD8ck","./audio-buffer-source-node":"9J14C","./audio-buffer-source-node-renderer":"f5yvE","./audio-buffer-source-options":"jZ5wn","./audio-context":"4Ql4z","./audio-context-options":"11QSu","./audio-destination-node":"j3LIz","./audio-listener":"11DgS","./audio-node":"9zzhW","./audio-node-options":"g2swV","./audio-node-renderer":"iQ9Pl","./audio-param":"6UZJ1","./audio-param-descriptor":"kQb0b","./audio-param-renderer":"bAd4u","./audio-scheduled-source-node":"1nbIX","./audio-scheduled-source-node-event-map":"4IdxY","./audio-worklet":"2E4ZJ","./audio-worklet-node":"kcWfA","./audio-worklet-node-event-map":"huz6R","./audio-worklet-node-options":"59iYS","./audio-worklet-processor":"6nNnx","./audio-worklet-processor-constructor":"i4iuB","./automation":"7wfWd","./base-audio-context":"1XbKq","./biquad-filter-node":"UscWb","./biquad-filter-options":"cij3Z","./channel-merger-options":"gxcH3","./channel-splitter-options":"43KPc","./common-audio-context":"c0JmH","./common-offline-audio-context":"4Pmog","./constant-source-node":"eCJAj","./constant-source-node-renderer":"lYpZI","./constant-source-options":"iIPxE","./convolver-node":"hCspv","./convolver-options":"krqat","./delay-node":"atadQ","./delay-options":"j67fL","./dynamics-compressor-node":"89l7X","./dynamics-compressor-options":"H0ZEh","./event-target":"aiSKu","./gain-node":"5edmh","./gain-options":"j4VY1","./iir-filter-node":"asv13","./iir-filter-options":"5tENB","./media-element-audio-source-node":"h2sLz","./media-element-audio-source-options":"fz1u3","./media-stream-audio-destination-node":"8oYR0","./media-stream-audio-source-node":"c11K0","./media-stream-audio-source-options":"jsSN1","./media-stream-track-audio-source-node":"1gMRH","./media-stream-track-audio-source-options":"cgKHP","./minimal-audio-context":"9aLsN","./minimal-base-audio-context":"csZiK","./minimal-base-audio-context-event-map":"ghppE","./minimal-offline-audio-context":"eDC0X","./native-audio-node-faker":"acR9N","./native-audio-worklet-node-faker":"9VN5k","./native-constant-source-node-faker":"8Hy9s","./native-convolver-node-faker":"f9y0g","./native-iir-filter-node-faker":"aMNEV","./native-panner-node-faker":"85Moa","./native-stereo-panner-node-faker":"4co6d","./native-wave-shaper-node-faker":"ftsUG","./offline-audio-completion-event":"cTUZX","./offline-audio-context":"bm9EH","./offline-audio-context-constructor":"12BiK","./offline-audio-context-options":"dK833","./oscillator-node":"5KTXG","./oscillator-node-renderer":"jvqKZ","./oscillator-options":"hbqza","./panner-node":"nCTIs","./panner-options":"k6EmF","./periodic-wave":"bCDWN","./periodic-wave-constraints":"4La5a","./periodic-wave-options":"1CPtS","./read-only-map":"kERIu","./stereo-panner-node":"2nmF4","./stereo-panner-options":"jDlpZ","./wave-shaper-node":"4RRXg","./wave-shaper-options":"kwmsC","./worklet-options":"aaD13","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"irip4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"407dd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a2w0E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gD8ck":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9J14C":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f5yvE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jZ5wn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4Ql4z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"11QSu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j3LIz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"11DgS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9zzhW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g2swV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iQ9Pl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6UZJ1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kQb0b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bAd4u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1nbIX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4IdxY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2E4ZJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kcWfA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"huz6R":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"59iYS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6nNnx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i4iuB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7wfWd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1XbKq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"UscWb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cij3Z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gxcH3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"43KPc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c0JmH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4Pmog":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eCJAj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lYpZI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iIPxE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hCspv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"krqat":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"atadQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j67fL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"89l7X":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"H0ZEh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aiSKu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5edmh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j4VY1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"asv13":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5tENB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h2sLz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fz1u3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8oYR0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c11K0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jsSN1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1gMRH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cgKHP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9aLsN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"csZiK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ghppE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eDC0X":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"acR9N":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9VN5k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8Hy9s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f9y0g":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aMNEV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"85Moa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4co6d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ftsUG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cTUZX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bm9EH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"12BiK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dK833":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5KTXG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jvqKZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hbqza":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"nCTIs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k6EmF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bCDWN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4La5a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1CPtS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kERIu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2nmF4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jDlpZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4RRXg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kwmsC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aaD13":[function(require,module,exports) {
// @todo This is currently named IWorkletOptions and not IAudioWorkletOptions because it defines the options of a generic Worklet.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6tI3M":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _abortErrorFactory = require("./abort-error-factory");
parcelHelpers.exportAll(_abortErrorFactory, exports);
var _activeAudioWorkletNodeInputsStore = require("./active-audio-worklet-node-inputs-store");
parcelHelpers.exportAll(_activeAudioWorkletNodeInputsStore, exports);
var _activeInputConnection = require("./active-input-connection");
parcelHelpers.exportAll(_activeInputConnection, exports);
var _addActiveInputConnectionToAudioNodeFactory = require("./add-active-input-connection-to-audio-node-factory");
parcelHelpers.exportAll(_addActiveInputConnectionToAudioNodeFactory, exports);
var _addActiveInputConnectionToAudioNodeFunction = require("./add-active-input-connection-to-audio-node-function");
parcelHelpers.exportAll(_addActiveInputConnectionToAudioNodeFunction, exports);
var _addAudioNodeConnectionsFactory = require("./add-audio-node-connections-factory");
parcelHelpers.exportAll(_addAudioNodeConnectionsFactory, exports);
var _addAudioNodeConnectionsFunction = require("./add-audio-node-connections-function");
parcelHelpers.exportAll(_addAudioNodeConnectionsFunction, exports);
var _addAudioParamConnectionsFactory = require("./add-audio-param-connections-factory");
parcelHelpers.exportAll(_addAudioParamConnectionsFactory, exports);
var _addAudioParamConnectionsFunction = require("./add-audio-param-connections-function");
parcelHelpers.exportAll(_addAudioParamConnectionsFunction, exports);
var _addAudioWorkletModuleFactory = require("./add-audio-worklet-module-factory");
parcelHelpers.exportAll(_addAudioWorkletModuleFactory, exports);
var _addAudioWorkletModuleFunction = require("./add-audio-worklet-module-function");
parcelHelpers.exportAll(_addAudioWorkletModuleFunction, exports);
var _addConnectionToAudioNodeFactory = require("./add-connection-to-audio-node-factory");
parcelHelpers.exportAll(_addConnectionToAudioNodeFactory, exports);
var _addConnectionToAudioNodeFunction = require("./add-connection-to-audio-node-function");
parcelHelpers.exportAll(_addConnectionToAudioNodeFunction, exports);
var _addPassiveInputConnectionToAudioNodeFactory = require("./add-passive-input-connection-to-audio-node-factory");
parcelHelpers.exportAll(_addPassiveInputConnectionToAudioNodeFactory, exports);
var _addPassiveInputConnectionToAudioNodeFunction = require("./add-passive-input-connection-to-audio-node-function");
parcelHelpers.exportAll(_addPassiveInputConnectionToAudioNodeFunction, exports);
var _addSilentConnectionFactory = require("./add-silent-connection-factory");
parcelHelpers.exportAll(_addSilentConnectionFactory, exports);
var _addSilentConnectionFunction = require("./add-silent-connection-function");
parcelHelpers.exportAll(_addSilentConnectionFunction, exports);
var _addUnrenderedAudioWorkletNodeFactory = require("./add-unrendered-audio-worklet-node-factory");
parcelHelpers.exportAll(_addUnrenderedAudioWorkletNodeFactory, exports);
var _addUnrenderedAudioWorkletNodeFunction = require("./add-unrendered-audio-worklet-node-function");
parcelHelpers.exportAll(_addUnrenderedAudioWorkletNodeFunction, exports);
var _analyserNodeConstructor = require("./analyser-node-constructor");
parcelHelpers.exportAll(_analyserNodeConstructor, exports);
var _analyserNodeConstructorFactory = require("./analyser-node-constructor-factory");
parcelHelpers.exportAll(_analyserNodeConstructorFactory, exports);
var _analyserNodeRendererFactory = require("./analyser-node-renderer-factory");
parcelHelpers.exportAll(_analyserNodeRendererFactory, exports);
var _analyserNodeRendererFactoryFactory = require("./analyser-node-renderer-factory-factory");
parcelHelpers.exportAll(_analyserNodeRendererFactoryFactory, exports);
var _anyAudioBuffer = require("./any-audio-buffer");
parcelHelpers.exportAll(_anyAudioBuffer, exports);
var _anyContext = require("./any-context");
parcelHelpers.exportAll(_anyContext, exports);
var _audioBufferConstructor = require("./audio-buffer-constructor");
parcelHelpers.exportAll(_audioBufferConstructor, exports);
var _audioBufferConstructorFactory = require("./audio-buffer-constructor-factory");
parcelHelpers.exportAll(_audioBufferConstructorFactory, exports);
var _audioBufferSourceNodeConstructor = require("./audio-buffer-source-node-constructor");
parcelHelpers.exportAll(_audioBufferSourceNodeConstructor, exports);
var _audioBufferSourceNodeConstructorFactory = require("./audio-buffer-source-node-constructor-factory");
parcelHelpers.exportAll(_audioBufferSourceNodeConstructorFactory, exports);
var _audioBufferSourceNodeRenderer = require("./audio-buffer-source-node-renderer");
parcelHelpers.exportAll(_audioBufferSourceNodeRenderer, exports);
var _audioBufferSourceNodeRendererFactory = require("./audio-buffer-source-node-renderer-factory");
parcelHelpers.exportAll(_audioBufferSourceNodeRendererFactory, exports);
var _audioBufferSourceNodeRendererFactoryFactory = require("./audio-buffer-source-node-renderer-factory-factory");
parcelHelpers.exportAll(_audioBufferSourceNodeRendererFactoryFactory, exports);
var _audioBufferStore = require("./audio-buffer-store");
parcelHelpers.exportAll(_audioBufferStore, exports);
var _audioContextConstructor = require("./audio-context-constructor");
parcelHelpers.exportAll(_audioContextConstructor, exports);
var _audioContextConstructorFactory = require("./audio-context-constructor-factory");
parcelHelpers.exportAll(_audioContextConstructorFactory, exports);
var _audioContextLatencyCategory = require("./audio-context-latency-category");
parcelHelpers.exportAll(_audioContextLatencyCategory, exports);
var _audioContextState = require("./audio-context-state");
parcelHelpers.exportAll(_audioContextState, exports);
var _audioDestinationNodeConstructor = require("./audio-destination-node-constructor");
parcelHelpers.exportAll(_audioDestinationNodeConstructor, exports);
var _audioDestinationNodeConstructorFactory = require("./audio-destination-node-constructor-factory");
parcelHelpers.exportAll(_audioDestinationNodeConstructorFactory, exports);
var _audioDestinationNodeRendererFactory = require("./audio-destination-node-renderer-factory");
parcelHelpers.exportAll(_audioDestinationNodeRendererFactory, exports);
var _audioListenerFactory = require("./audio-listener-factory");
parcelHelpers.exportAll(_audioListenerFactory, exports);
var _audioListenerFactoryFactory = require("./audio-listener-factory-factory");
parcelHelpers.exportAll(_audioListenerFactoryFactory, exports);
var _audioNodeConnections = require("./audio-node-connections");
parcelHelpers.exportAll(_audioNodeConnections, exports);
var _audioNodeConnectionsStore = require("./audio-node-connections-store");
parcelHelpers.exportAll(_audioNodeConnectionsStore, exports);
var _audioNodeConstructor = require("./audio-node-constructor");
parcelHelpers.exportAll(_audioNodeConstructor, exports);
var _audioNodeConstructorFactory = require("./audio-node-constructor-factory");
parcelHelpers.exportAll(_audioNodeConstructorFactory, exports);
var _audioNodeOutputConnection = require("./audio-node-output-connection");
parcelHelpers.exportAll(_audioNodeOutputConnection, exports);
var _audioNodeRenderer = require("./audio-node-renderer");
parcelHelpers.exportAll(_audioNodeRenderer, exports);
var _audioNodeStore = require("./audio-node-store");
parcelHelpers.exportAll(_audioNodeStore, exports);
var _audioNodeTailTimeStore = require("./audio-node-tail-time-store");
parcelHelpers.exportAll(_audioNodeTailTimeStore, exports);
var _audioParamAudioNodeStore = require("./audio-param-audio-node-store");
parcelHelpers.exportAll(_audioParamAudioNodeStore, exports);
var _audioParamConnections = require("./audio-param-connections");
parcelHelpers.exportAll(_audioParamConnections, exports);
var _audioParamConnectionsStore = require("./audio-param-connections-store");
parcelHelpers.exportAll(_audioParamConnectionsStore, exports);
var _audioParamFactory = require("./audio-param-factory");
parcelHelpers.exportAll(_audioParamFactory, exports);
var _audioParamFactoryFactory = require("./audio-param-factory-factory");
parcelHelpers.exportAll(_audioParamFactoryFactory, exports);
var _audioParamMap = require("./audio-param-map");
parcelHelpers.exportAll(_audioParamMap, exports);
var _audioParamOutputConnection = require("./audio-param-output-connection");
parcelHelpers.exportAll(_audioParamOutputConnection, exports);
var _audioParamRendererFactory = require("./audio-param-renderer-factory");
parcelHelpers.exportAll(_audioParamRendererFactory, exports);
var _audioParamStore = require("./audio-param-store");
parcelHelpers.exportAll(_audioParamStore, exports);
var _audioWorkletNodeConstructor = require("./audio-worklet-node-constructor");
parcelHelpers.exportAll(_audioWorkletNodeConstructor, exports);
var _audioWorkletNodeConstructorFactory = require("./audio-worklet-node-constructor-factory");
parcelHelpers.exportAll(_audioWorkletNodeConstructorFactory, exports);
var _audioWorkletNodeRendererFactory = require("./audio-worklet-node-renderer-factory");
parcelHelpers.exportAll(_audioWorkletNodeRendererFactory, exports);
var _audioWorkletNodeRendererFactoryFactory = require("./audio-worklet-node-renderer-factory-factory");
parcelHelpers.exportAll(_audioWorkletNodeRendererFactoryFactory, exports);
var _backupOfflineAudioContextStore = require("./backup-offline-audio-context-store");
parcelHelpers.exportAll(_backupOfflineAudioContextStore, exports);
var _baseAudioContextConstructor = require("./base-audio-context-constructor");
parcelHelpers.exportAll(_baseAudioContextConstructor, exports);
var _baseAudioContextConstructorFactory = require("./base-audio-context-constructor-factory");
parcelHelpers.exportAll(_baseAudioContextConstructorFactory, exports);
var _biquadFilterNodeConstructor = require("./biquad-filter-node-constructor");
parcelHelpers.exportAll(_biquadFilterNodeConstructor, exports);
var _biquadFilterNodeConstructorFactory = require("./biquad-filter-node-constructor-factory");
parcelHelpers.exportAll(_biquadFilterNodeConstructorFactory, exports);
var _biquadFilterNodeRendererFactory = require("./biquad-filter-node-renderer-factory");
parcelHelpers.exportAll(_biquadFilterNodeRendererFactory, exports);
var _biquadFilterNodeRendererFactoryFactory = require("./biquad-filter-node-renderer-factory-factory");
parcelHelpers.exportAll(_biquadFilterNodeRendererFactoryFactory, exports);
var _biquadFilterType = require("./biquad-filter-type");
parcelHelpers.exportAll(_biquadFilterType, exports);
var _channelCountMode = require("./channel-count-mode");
parcelHelpers.exportAll(_channelCountMode, exports);
var _channelInterpretation = require("./channel-interpretation");
parcelHelpers.exportAll(_channelInterpretation, exports);
var _channelMergerNodeConstructor = require("./channel-merger-node-constructor");
parcelHelpers.exportAll(_channelMergerNodeConstructor, exports);
var _channelMergerNodeConstructorFactory = require("./channel-merger-node-constructor-factory");
parcelHelpers.exportAll(_channelMergerNodeConstructorFactory, exports);
var _channelMergerNodeRendererFactory = require("./channel-merger-node-renderer-factory");
parcelHelpers.exportAll(_channelMergerNodeRendererFactory, exports);
var _channelMergerNodeRendererFactoryFactory = require("./channel-merger-node-renderer-factory-factory");
parcelHelpers.exportAll(_channelMergerNodeRendererFactoryFactory, exports);
var _channelSplitterNodeConstructor = require("./channel-splitter-node-constructor");
parcelHelpers.exportAll(_channelSplitterNodeConstructor, exports);
var _channelSplitterNodeConstructorFactory = require("./channel-splitter-node-constructor-factory");
parcelHelpers.exportAll(_channelSplitterNodeConstructorFactory, exports);
var _channelSplitterNodeRendererFactory = require("./channel-splitter-node-renderer-factory");
parcelHelpers.exportAll(_channelSplitterNodeRendererFactory, exports);
var _channelSplitterNodeRendererFactoryFactory = require("./channel-splitter-node-renderer-factory-factory");
parcelHelpers.exportAll(_channelSplitterNodeRendererFactoryFactory, exports);
var _cacheTestResultFactory = require("./cache-test-result-factory");
parcelHelpers.exportAll(_cacheTestResultFactory, exports);
var _cacheTestResultFunction = require("./cache-test-result-function");
parcelHelpers.exportAll(_cacheTestResultFunction, exports);
var _connectAudioParamFactory = require("./connect-audio-param-factory");
parcelHelpers.exportAll(_connectAudioParamFactory, exports);
var _connectAudioParamFunction = require("./connect-audio-param-function");
parcelHelpers.exportAll(_connectAudioParamFunction, exports);
var _connectMultipleOutputsFactory = require("./connect-multiple-outputs-factory");
parcelHelpers.exportAll(_connectMultipleOutputsFactory, exports);
var _connectMultipleOutputsFunction = require("./connect-multiple-outputs-function");
parcelHelpers.exportAll(_connectMultipleOutputsFunction, exports);
var _connectNativeAudioNodeToNativeAudioNodeFunction = require("./connect-native-audio-node-to-native-audio-node-function");
parcelHelpers.exportAll(_connectNativeAudioNodeToNativeAudioNodeFunction, exports);
var _connectedNativeAudioBufferSourceNodeFactory = require("./connected-native-audio-buffer-source-node-factory");
parcelHelpers.exportAll(_connectedNativeAudioBufferSourceNodeFactory, exports);
var _connectedNativeAudioBufferSourceNodeFactoryFactory = require("./connected-native-audio-buffer-source-node-factory-factory");
parcelHelpers.exportAll(_connectedNativeAudioBufferSourceNodeFactoryFactory, exports);
var _constantSourceNodeConstructor = require("./constant-source-node-constructor");
parcelHelpers.exportAll(_constantSourceNodeConstructor, exports);
var _constantSourceNodeConstructorFactory = require("./constant-source-node-constructor-factory");
parcelHelpers.exportAll(_constantSourceNodeConstructorFactory, exports);
var _constantSourceNodeRenderer = require("./constant-source-node-renderer");
parcelHelpers.exportAll(_constantSourceNodeRenderer, exports);
var _constantSourceNodeRendererFactory = require("./constant-source-node-renderer-factory");
parcelHelpers.exportAll(_constantSourceNodeRendererFactory, exports);
var _constantSourceNodeRendererFactoryFactory = require("./constant-source-node-renderer-factory-factory");
parcelHelpers.exportAll(_constantSourceNodeRendererFactoryFactory, exports);
var _constructor = require("./constructor");
parcelHelpers.exportAll(_constructor, exports);
var _context = require("./context");
parcelHelpers.exportAll(_context, exports);
var _contextStore = require("./context-store");
parcelHelpers.exportAll(_contextStore, exports);
var _convertNumberToUnsignedLongFactory = require("./convert-number-to-unsigned-long-factory");
parcelHelpers.exportAll(_convertNumberToUnsignedLongFactory, exports);
var _convertNumberToUnsignedLongFunction = require("./convert-number-to-unsigned-long-function");
parcelHelpers.exportAll(_convertNumberToUnsignedLongFunction, exports);
var _convolverNodeConstructor = require("./convolver-node-constructor");
parcelHelpers.exportAll(_convolverNodeConstructor, exports);
var _convolverNodeConstructorFactory = require("./convolver-node-constructor-factory");
parcelHelpers.exportAll(_convolverNodeConstructorFactory, exports);
var _convolverNodeRendererFactory = require("./convolver-node-renderer-factory");
parcelHelpers.exportAll(_convolverNodeRendererFactory, exports);
var _convolverNodeRendererFactoryFactory = require("./convolver-node-renderer-factory-factory");
parcelHelpers.exportAll(_convolverNodeRendererFactoryFactory, exports);
var _createNativeOfflineAudioContextFactory = require("./create-native-offline-audio-context-factory");
parcelHelpers.exportAll(_createNativeOfflineAudioContextFactory, exports);
var _createNativeOfflineAudioContextFunction = require("./create-native-offline-audio-context-function");
parcelHelpers.exportAll(_createNativeOfflineAudioContextFunction, exports);
var _cycleCounters = require("./cycle-counters");
parcelHelpers.exportAll(_cycleCounters, exports);
var _dataCloneErrorFactory = require("./data-clone-error-factory");
parcelHelpers.exportAll(_dataCloneErrorFactory, exports);
var _decodeAudioDataFactory = require("./decode-audio-data-factory");
parcelHelpers.exportAll(_decodeAudioDataFactory, exports);
var _decodeAudioDataFunction = require("./decode-audio-data-function");
parcelHelpers.exportAll(_decodeAudioDataFunction, exports);
var _decodeErrorCallback = require("./decode-error-callback");
parcelHelpers.exportAll(_decodeErrorCallback, exports);
var _decodeSuccessCallback = require("./decode-success-callback");
parcelHelpers.exportAll(_decodeSuccessCallback, exports);
var _decrementCycleCounterFactory = require("./decrement-cycle-counter-factory");
parcelHelpers.exportAll(_decrementCycleCounterFactory, exports);
var _decrementCycleCounterFunction = require("./decrement-cycle-counter-function");
parcelHelpers.exportAll(_decrementCycleCounterFunction, exports);
var _delayNodeConstructor = require("./delay-node-constructor");
parcelHelpers.exportAll(_delayNodeConstructor, exports);
var _delayNodeConstructorFactory = require("./delay-node-constructor-factory");
parcelHelpers.exportAll(_delayNodeConstructorFactory, exports);
var _delayNodeRendererFactory = require("./delay-node-renderer-factory");
parcelHelpers.exportAll(_delayNodeRendererFactory, exports);
var _delayNodeRendererFactoryFactory = require("./delay-node-renderer-factory-factory");
parcelHelpers.exportAll(_delayNodeRendererFactoryFactory, exports);
var _deleteActiveInputConnectionToAudioNodeFactory = require("./delete-active-input-connection-to-audio-node-factory");
parcelHelpers.exportAll(_deleteActiveInputConnectionToAudioNodeFactory, exports);
var _deleteActiveInputConnectionToAudioNodeFunction = require("./delete-active-input-connection-to-audio-node-function");
parcelHelpers.exportAll(_deleteActiveInputConnectionToAudioNodeFunction, exports);
var _deleteUnrenderedAudioWorkletNodeFactory = require("./delete-unrendered-audio-worklet-node-factory");
parcelHelpers.exportAll(_deleteUnrenderedAudioWorkletNodeFactory, exports);
var _deleteUnrenderedAudioWorkletNodeFunction = require("./delete-unrendered-audio-worklet-node-function");
parcelHelpers.exportAll(_deleteUnrenderedAudioWorkletNodeFunction, exports);
var _detectCyclesFactory = require("./detect-cycles-factory");
parcelHelpers.exportAll(_detectCyclesFactory, exports);
var _detectCyclesFunction = require("./detect-cycles-function");
parcelHelpers.exportAll(_detectCyclesFunction, exports);
var _disconnectMultipleOutputsFactory = require("./disconnect-multiple-outputs-factory");
parcelHelpers.exportAll(_disconnectMultipleOutputsFactory, exports);
var _disconnectMultipleOutputsFunction = require("./disconnect-multiple-outputs-function");
parcelHelpers.exportAll(_disconnectMultipleOutputsFunction, exports);
var _disconnectNativeAudioNodeFromNativeAudioNodeFunction = require("./disconnect-native-audio-node-from-native-audio-node-function");
parcelHelpers.exportAll(_disconnectNativeAudioNodeFromNativeAudioNodeFunction, exports);
var _distanceModelType = require("./distance-model-type");
parcelHelpers.exportAll(_distanceModelType, exports);
var _dynamicsCompressorNodeConstructor = require("./dynamics-compressor-node-constructor");
parcelHelpers.exportAll(_dynamicsCompressorNodeConstructor, exports);
var _dynamicsCompressorNodeConstructorFactory = require("./dynamics-compressor-node-constructor-factory");
parcelHelpers.exportAll(_dynamicsCompressorNodeConstructorFactory, exports);
var _dynamicsCompressorNodeRendererFactory = require("./dynamics-compressor-node-renderer-factory");
parcelHelpers.exportAll(_dynamicsCompressorNodeRendererFactory, exports);
var _dynamicsCompressorNodeRendererFactoryFactory = require("./dynamics-compressor-node-renderer-factory-factory");
parcelHelpers.exportAll(_dynamicsCompressorNodeRendererFactoryFactory, exports);
var _encodingErrorFactory = require("./encoding-error-factory");
parcelHelpers.exportAll(_encodingErrorFactory, exports);
var _errorEventHandler = require("./error-event-handler");
parcelHelpers.exportAll(_errorEventHandler, exports);
var _evaluateAudioWorkletGlobalScopeFunction = require("./evaluate-audio-worklet-global-scope-function");
parcelHelpers.exportAll(_evaluateAudioWorkletGlobalScopeFunction, exports);
var _evaluateSourceFactory = require("./evaluate-source-factory");
parcelHelpers.exportAll(_evaluateSourceFactory, exports);
var _evaluateSourceFunction = require("./evaluate-source-function");
parcelHelpers.exportAll(_evaluateSourceFunction, exports);
var _eventHandler = require("./event-handler");
parcelHelpers.exportAll(_eventHandler, exports);
var _eventTargetConstructor = require("./event-target-constructor");
parcelHelpers.exportAll(_eventTargetConstructor, exports);
var _eventTargetConstructorFactory = require("./event-target-constructor-factory");
parcelHelpers.exportAll(_eventTargetConstructorFactory, exports);
var _exposeCurrentFrameAndCurrentTimeFactory = require("./expose-current-frame-and-current-time-factory");
parcelHelpers.exportAll(_exposeCurrentFrameAndCurrentTimeFactory, exports);
var _exposeCurrentFrameAndCurrentTimeFunction = require("./expose-current-frame-and-current-time-function");
parcelHelpers.exportAll(_exposeCurrentFrameAndCurrentTimeFunction, exports);
var _fetchSourceFactory = require("./fetch-source-factory");
parcelHelpers.exportAll(_fetchSourceFactory, exports);
var _fetchSourceFunction = require("./fetch-source-function");
parcelHelpers.exportAll(_fetchSourceFunction, exports);
var _gainNodeConstructor = require("./gain-node-constructor");
parcelHelpers.exportAll(_gainNodeConstructor, exports);
var _gainNodeConstructorFactory = require("./gain-node-constructor-factory");
parcelHelpers.exportAll(_gainNodeConstructorFactory, exports);
var _gainNodeRendererFactory = require("./gain-node-renderer-factory");
parcelHelpers.exportAll(_gainNodeRendererFactory, exports);
var _gainNodeRendererFactoryFactory = require("./gain-node-renderer-factory-factory");
parcelHelpers.exportAll(_gainNodeRendererFactoryFactory, exports);
var _getActiveAudioWorkletNodeInputsFactory = require("./get-active-audio-worklet-node-inputs-factory");
parcelHelpers.exportAll(_getActiveAudioWorkletNodeInputsFactory, exports);
var _getActiveAudioWorkletNodeInputsFunction = require("./get-active-audio-worklet-node-inputs-function");
parcelHelpers.exportAll(_getActiveAudioWorkletNodeInputsFunction, exports);
var _getAudioNodeConnectionsFunction = require("./get-audio-node-connections-function");
parcelHelpers.exportAll(_getAudioNodeConnectionsFunction, exports);
var _getAudioNodeRendererFactory = require("./get-audio-node-renderer-factory");
parcelHelpers.exportAll(_getAudioNodeRendererFactory, exports);
var _getAudioNodeRendererFunction = require("./get-audio-node-renderer-function");
parcelHelpers.exportAll(_getAudioNodeRendererFunction, exports);
var _getAudioNodeTailTimeFactory = require("./get-audio-node-tail-time-factory");
parcelHelpers.exportAll(_getAudioNodeTailTimeFactory, exports);
var _getAudioNodeTailTimeFunction = require("./get-audio-node-tail-time-function");
parcelHelpers.exportAll(_getAudioNodeTailTimeFunction, exports);
var _getAudioParamConnectionsFunction = require("./get-audio-param-connections-function");
parcelHelpers.exportAll(_getAudioParamConnectionsFunction, exports);
var _getAudioParamRendererFactory = require("./get-audio-param-renderer-factory");
parcelHelpers.exportAll(_getAudioParamRendererFactory, exports);
var _getAudioParamRendererFunction = require("./get-audio-param-renderer-function");
parcelHelpers.exportAll(_getAudioParamRendererFunction, exports);
var _getBackupOfflineAudioContextFactory = require("./get-backup-offline-audio-context-factory");
parcelHelpers.exportAll(_getBackupOfflineAudioContextFactory, exports);
var _getBackupOfflineAudioContextFunction = require("./get-backup-offline-audio-context-function");
parcelHelpers.exportAll(_getBackupOfflineAudioContextFunction, exports);
var _getEventListenersOfAudioNodeFunction = require("./get-event-listeners-of-audio-node-function");
parcelHelpers.exportAll(_getEventListenersOfAudioNodeFunction, exports);
var _getFirstSampleFunction = require("./get-first-sample-function");
parcelHelpers.exportAll(_getFirstSampleFunction, exports);
var _getNativeAudioNodeFunction = require("./get-native-audio-node-function");
parcelHelpers.exportAll(_getNativeAudioNodeFunction, exports);
var _getNativeAudioParamFunction = require("./get-native-audio-param-function");
parcelHelpers.exportAll(_getNativeAudioParamFunction, exports);
var _getNativeContextFactory = require("./get-native-context-factory");
parcelHelpers.exportAll(_getNativeContextFactory, exports);
var _getNativeContextFunction = require("./get-native-context-function");
parcelHelpers.exportAll(_getNativeContextFunction, exports);
var _getOrCreateBackupOfflineAudioContextFactory = require("./get-or-create-backup-offline-audio-context-factory");
parcelHelpers.exportAll(_getOrCreateBackupOfflineAudioContextFactory, exports);
var _getOrCreateBackupOfflineAudioContextFunction = require("./get-or-create-backup-offline-audio-context-function");
parcelHelpers.exportAll(_getOrCreateBackupOfflineAudioContextFunction, exports);
var _getUnrenderedAudioWorkletNodesFactory = require("./get-unrendered-audio-worklet-nodes-factory");
parcelHelpers.exportAll(_getUnrenderedAudioWorkletNodesFactory, exports);
var _getUnrenderedAudioWorkletNodesFunction = require("./get-unrendered-audio-worklet-nodes-function");
parcelHelpers.exportAll(_getUnrenderedAudioWorkletNodesFunction, exports);
var _getValueForKeyFunction = require("./get-value-for-key-function");
parcelHelpers.exportAll(_getValueForKeyFunction, exports);
var _iirFilterNodeConstructor = require("./iir-filter-node-constructor");
parcelHelpers.exportAll(_iirFilterNodeConstructor, exports);
var _iirFilterNodeConstructorFactory = require("./iir-filter-node-constructor-factory");
parcelHelpers.exportAll(_iirFilterNodeConstructorFactory, exports);
var _iirFilterNodeRendererFactory = require("./iir-filter-node-renderer-factory");
parcelHelpers.exportAll(_iirFilterNodeRendererFactory, exports);
var _iirFilterNodeRendererFactoryFactory = require("./iir-filter-node-renderer-factory-factory");
parcelHelpers.exportAll(_iirFilterNodeRendererFactoryFactory, exports);
var _incrementCycleCounterFactory = require("./increment-cycle-counter-factory");
parcelHelpers.exportAll(_incrementCycleCounterFactory, exports);
var _incrementCycleCounterFactoryFactory = require("./increment-cycle-counter-factory-factory");
parcelHelpers.exportAll(_incrementCycleCounterFactoryFactory, exports);
var _incrementCycleCounterFunction = require("./increment-cycle-counter-function");
parcelHelpers.exportAll(_incrementCycleCounterFunction, exports);
var _indexSizeErrorFactory = require("./index-size-error-factory");
parcelHelpers.exportAll(_indexSizeErrorFactory, exports);
var _insertElementInSetFunction = require("./insert-element-in-set-function");
parcelHelpers.exportAll(_insertElementInSetFunction, exports);
var _internalStateEventListener = require("./internal-state-event-listener");
parcelHelpers.exportAll(_internalStateEventListener, exports);
var _invalidAccessErrorFactory = require("./invalid-access-error-factory");
parcelHelpers.exportAll(_invalidAccessErrorFactory, exports);
var _invalidStateErrorFactory = require("./invalid-state-error-factory");
parcelHelpers.exportAll(_invalidStateErrorFactory, exports);
var _isActiveAudioNodeFunction = require("./is-active-audio-node-function");
parcelHelpers.exportAll(_isActiveAudioNodeFunction, exports);
var _isAnyAudioContextFactory = require("./is-any-audio-context-factory");
parcelHelpers.exportAll(_isAnyAudioContextFactory, exports);
var _isAnyAudioContextFunction = require("./is-any-audio-context-function");
parcelHelpers.exportAll(_isAnyAudioContextFunction, exports);
var _isAnyAudioNodeFactory = require("./is-any-audio-node-factory");
parcelHelpers.exportAll(_isAnyAudioNodeFactory, exports);
var _isAnyAudioNodeFunction = require("./is-any-audio-node-function");
parcelHelpers.exportAll(_isAnyAudioNodeFunction, exports);
var _isAnyAudioParamFactory = require("./is-any-audio-param-factory");
parcelHelpers.exportAll(_isAnyAudioParamFactory, exports);
var _isAnyAudioParamFunction = require("./is-any-audio-param-function");
parcelHelpers.exportAll(_isAnyAudioParamFunction, exports);
var _isAnyOfflineAudioContextFactory = require("./is-any-offline-audio-context-factory");
parcelHelpers.exportAll(_isAnyOfflineAudioContextFactory, exports);
var _isAnyOfflineAudioContextFunction = require("./is-any-offline-audio-context-function");
parcelHelpers.exportAll(_isAnyOfflineAudioContextFunction, exports);
var _isDcCurveFunction = require("./is-dc-curve-function");
parcelHelpers.exportAll(_isDcCurveFunction, exports);
var _isNativeAudioContextFactory = require("./is-native-audio-context-factory");
parcelHelpers.exportAll(_isNativeAudioContextFactory, exports);
var _isNativeAudioContextFunction = require("./is-native-audio-context-function");
parcelHelpers.exportAll(_isNativeAudioContextFunction, exports);
var _isNativeAudioNodeFactory = require("./is-native-audio-node-factory");
parcelHelpers.exportAll(_isNativeAudioNodeFactory, exports);
var _isNativeAudioNodeFunction = require("./is-native-audio-node-function");
parcelHelpers.exportAll(_isNativeAudioNodeFunction, exports);
var _isNativeAudioParamFactory = require("./is-native-audio-param-factory");
parcelHelpers.exportAll(_isNativeAudioParamFactory, exports);
var _isNativeAudioParamFunction = require("./is-native-audio-param-function");
parcelHelpers.exportAll(_isNativeAudioParamFunction, exports);
var _isNativeContextFactory = require("./is-native-context-factory");
parcelHelpers.exportAll(_isNativeContextFactory, exports);
var _isNativeContextFunction = require("./is-native-context-function");
parcelHelpers.exportAll(_isNativeContextFunction, exports);
var _isNativeOfflineAudioContextFactory = require("./is-native-offline-audio-context-factory");
parcelHelpers.exportAll(_isNativeOfflineAudioContextFactory, exports);
var _isNativeOfflineAudioContextFunction = require("./is-native-offline-audio-context-function");
parcelHelpers.exportAll(_isNativeOfflineAudioContextFunction, exports);
var _isPartOfACycleFunction = require("./is-part-of-a-cycle-function");
parcelHelpers.exportAll(_isPartOfACycleFunction, exports);
var _isPassiveAudioNodeFunction = require("./is-passive-audio-node-function");
parcelHelpers.exportAll(_isPassiveAudioNodeFunction, exports);
var _isSecureContextFactory = require("./is-secure-context-factory");
parcelHelpers.exportAll(_isSecureContextFactory, exports);
var _isSupportedPromiseFactory = require("./is-supported-promise-factory");
parcelHelpers.exportAll(_isSupportedPromiseFactory, exports);
var _mediaElementAudioSourceNodeConstructor = require("./media-element-audio-source-node-constructor");
parcelHelpers.exportAll(_mediaElementAudioSourceNodeConstructor, exports);
var _mediaElementAudioSourceNodeConstructorFactory = require("./media-element-audio-source-node-constructor-factory");
parcelHelpers.exportAll(_mediaElementAudioSourceNodeConstructorFactory, exports);
var _mediaStreamAudioDestinationNodeConstructor = require("./media-stream-audio-destination-node-constructor");
parcelHelpers.exportAll(_mediaStreamAudioDestinationNodeConstructor, exports);
var _mediaStreamAudioDestinationNodeConstructorFactory = require("./media-stream-audio-destination-node-constructor-factory");
parcelHelpers.exportAll(_mediaStreamAudioDestinationNodeConstructorFactory, exports);
var _mediaStreamAudioSourceNodeConstructor = require("./media-stream-audio-source-node-constructor");
parcelHelpers.exportAll(_mediaStreamAudioSourceNodeConstructor, exports);
var _mediaStreamAudioSourceNodeConstructorFactory = require("./media-stream-audio-source-node-constructor-factory");
parcelHelpers.exportAll(_mediaStreamAudioSourceNodeConstructorFactory, exports);
var _mediaStreamTrackAudioSourceNodeConstructor = require("./media-stream-track-audio-source-node-constructor");
parcelHelpers.exportAll(_mediaStreamTrackAudioSourceNodeConstructor, exports);
var _mediaStreamTrackAudioSourceNodeConstructorFactory = require("./media-stream-track-audio-source-node-constructor-factory");
parcelHelpers.exportAll(_mediaStreamTrackAudioSourceNodeConstructorFactory, exports);
var _minimalAudioContextConstructor = require("./minimal-audio-context-constructor");
parcelHelpers.exportAll(_minimalAudioContextConstructor, exports);
var _minimalAudioContextConstructorFactory = require("./minimal-audio-context-constructor-factory");
parcelHelpers.exportAll(_minimalAudioContextConstructorFactory, exports);
var _minimalBaseAudioContextConstructor = require("./minimal-base-audio-context-constructor");
parcelHelpers.exportAll(_minimalBaseAudioContextConstructor, exports);
var _minimalBaseAudioContextConstructorFactory = require("./minimal-base-audio-context-constructor-factory");
parcelHelpers.exportAll(_minimalBaseAudioContextConstructorFactory, exports);
var _minimalOfflineAudioContextConstructor = require("./minimal-offline-audio-context-constructor");
parcelHelpers.exportAll(_minimalOfflineAudioContextConstructor, exports);
var _minimalOfflineAudioContextConstructorFactory = require("./minimal-offline-audio-context-constructor-factory");
parcelHelpers.exportAll(_minimalOfflineAudioContextConstructorFactory, exports);
var _monitorConnectionsFactory = require("./monitor-connections-factory");
parcelHelpers.exportAll(_monitorConnectionsFactory, exports);
var _monitorConnectionsFunction = require("./monitor-connections-function");
parcelHelpers.exportAll(_monitorConnectionsFunction, exports);
var _nativeAnalyserNode = require("./native-analyser-node");
parcelHelpers.exportAll(_nativeAnalyserNode, exports);
var _nativeAnalyserNodeFactory = require("./native-analyser-node-factory");
parcelHelpers.exportAll(_nativeAnalyserNodeFactory, exports);
var _nativeAnalyserNodeFactoryFactory = require("./native-analyser-node-factory-factory");
parcelHelpers.exportAll(_nativeAnalyserNodeFactoryFactory, exports);
var _nativeAudioBuffer = require("./native-audio-buffer");
parcelHelpers.exportAll(_nativeAudioBuffer, exports);
var _nativeAudioBufferConstructor = require("./native-audio-buffer-constructor");
parcelHelpers.exportAll(_nativeAudioBufferConstructor, exports);
var _nativeAudioBufferConstructorFactory = require("./native-audio-buffer-constructor-factory");
parcelHelpers.exportAll(_nativeAudioBufferConstructorFactory, exports);
var _nativeAudioBufferSourceNode = require("./native-audio-buffer-source-node");
parcelHelpers.exportAll(_nativeAudioBufferSourceNode, exports);
var _nativeAudioBufferSourceNodeFactory = require("./native-audio-buffer-source-node-factory");
parcelHelpers.exportAll(_nativeAudioBufferSourceNodeFactory, exports);
var _nativeAudioBufferSourceNodeFactoryFactory = require("./native-audio-buffer-source-node-factory-factory");
parcelHelpers.exportAll(_nativeAudioBufferSourceNodeFactoryFactory, exports);
var _nativeAudioContext = require("./native-audio-context");
parcelHelpers.exportAll(_nativeAudioContext, exports);
var _nativeAudioContextConstructor = require("./native-audio-context-constructor");
parcelHelpers.exportAll(_nativeAudioContextConstructor, exports);
var _nativeAudioContextConstructorFactory = require("./native-audio-context-constructor-factory");
parcelHelpers.exportAll(_nativeAudioContextConstructorFactory, exports);
var _nativeAudioDestinationNode = require("./native-audio-destination-node");
parcelHelpers.exportAll(_nativeAudioDestinationNode, exports);
var _nativeAudioDestinationNodeFactory = require("./native-audio-destination-node-factory");
parcelHelpers.exportAll(_nativeAudioDestinationNodeFactory, exports);
var _nativeAudioDestinationNodeFactoryFactory = require("./native-audio-destination-node-factory-factory");
parcelHelpers.exportAll(_nativeAudioDestinationNodeFactoryFactory, exports);
var _nativeAudioListener = require("./native-audio-listener");
parcelHelpers.exportAll(_nativeAudioListener, exports);
var _nativeAudioNode = require("./native-audio-node");
parcelHelpers.exportAll(_nativeAudioNode, exports);
var _nativeAudioParam = require("./native-audio-param");
parcelHelpers.exportAll(_nativeAudioParam, exports);
var _nativeAudioParamMap = require("./native-audio-param-map");
parcelHelpers.exportAll(_nativeAudioParamMap, exports);
var _nativeAudioWorklet = require("./native-audio-worklet");
parcelHelpers.exportAll(_nativeAudioWorklet, exports);
var _nativeAudioWorkletNode = require("./native-audio-worklet-node");
parcelHelpers.exportAll(_nativeAudioWorkletNode, exports);
var _nativeAudioWorkletNodeConstructor = require("./native-audio-worklet-node-constructor");
parcelHelpers.exportAll(_nativeAudioWorkletNodeConstructor, exports);
var _nativeAudioWorkletNodeConstructorFactory = require("./native-audio-worklet-node-constructor-factory");
parcelHelpers.exportAll(_nativeAudioWorkletNodeConstructorFactory, exports);
var _nativeAudioWorkletNodeFactory = require("./native-audio-worklet-node-factory");
parcelHelpers.exportAll(_nativeAudioWorkletNodeFactory, exports);
var _nativeAudioWorkletNodeFactoryFactory = require("./native-audio-worklet-node-factory-factory");
parcelHelpers.exportAll(_nativeAudioWorkletNodeFactoryFactory, exports);
var _nativeAudioWorkletNodeFakerFactory = require("./native-audio-worklet-node-faker-factory");
parcelHelpers.exportAll(_nativeAudioWorkletNodeFakerFactory, exports);
var _nativeAudioWorkletNodeFakerFactoryFactory = require("./native-audio-worklet-node-faker-factory-factory");
parcelHelpers.exportAll(_nativeAudioWorkletNodeFakerFactoryFactory, exports);
var _nativeAudioWorkletNodeOptions = require("./native-audio-worklet-node-options");
parcelHelpers.exportAll(_nativeAudioWorkletNodeOptions, exports);
var _nativeBiquadFilterNode = require("./native-biquad-filter-node");
parcelHelpers.exportAll(_nativeBiquadFilterNode, exports);
var _nativeBiquadFilterNodeFactory = require("./native-biquad-filter-node-factory");
parcelHelpers.exportAll(_nativeBiquadFilterNodeFactory, exports);
var _nativeChannelMergerNode = require("./native-channel-merger-node");
parcelHelpers.exportAll(_nativeChannelMergerNode, exports);
var _nativeChannelMergerNodeFactory = require("./native-channel-merger-node-factory");
parcelHelpers.exportAll(_nativeChannelMergerNodeFactory, exports);
var _nativeChannelMergerNodeFactoryFactory = require("./native-channel-merger-node-factory-factory");
parcelHelpers.exportAll(_nativeChannelMergerNodeFactoryFactory, exports);
var _nativeChannelSplitterNode = require("./native-channel-splitter-node");
parcelHelpers.exportAll(_nativeChannelSplitterNode, exports);
var _nativeChannelSplitterNodeFactory = require("./native-channel-splitter-node-factory");
parcelHelpers.exportAll(_nativeChannelSplitterNodeFactory, exports);
var _nativeConstantSourceNode = require("./native-constant-source-node");
parcelHelpers.exportAll(_nativeConstantSourceNode, exports);
var _nativeConstantSourceNodeFactory = require("./native-constant-source-node-factory");
parcelHelpers.exportAll(_nativeConstantSourceNodeFactory, exports);
var _nativeConstantSourceNodeFactoryFactory = require("./native-constant-source-node-factory-factory");
parcelHelpers.exportAll(_nativeConstantSourceNodeFactoryFactory, exports);
var _nativeConstantSourceNodeFakerFactory = require("./native-constant-source-node-faker-factory");
parcelHelpers.exportAll(_nativeConstantSourceNodeFakerFactory, exports);
var _nativeConstantSourceNodeFakerFactoryFactory = require("./native-constant-source-node-faker-factory-factory");
parcelHelpers.exportAll(_nativeConstantSourceNodeFakerFactoryFactory, exports);
var _nativeContext = require("./native-context");
parcelHelpers.exportAll(_nativeContext, exports);
var _nativeConvolverNode = require("./native-convolver-node");
parcelHelpers.exportAll(_nativeConvolverNode, exports);
var _nativeConvolverNodeFactory = require("./native-convolver-node-factory");
parcelHelpers.exportAll(_nativeConvolverNodeFactory, exports);
var _nativeConvolverNodeFactoryFactory = require("./native-convolver-node-factory-factory");
parcelHelpers.exportAll(_nativeConvolverNodeFactoryFactory, exports);
var _nativeDelayNodeFactory = require("./native-delay-node-factory");
parcelHelpers.exportAll(_nativeDelayNodeFactory, exports);
var _nativeDelayNode = require("./native-delay-node");
parcelHelpers.exportAll(_nativeDelayNode, exports);
var _nativeDynamicsCompressorNode = require("./native-dynamics-compressor-node");
parcelHelpers.exportAll(_nativeDynamicsCompressorNode, exports);
var _nativeDynamicsCompressorNodeFactory = require("./native-dynamics-compressor-node-factory");
parcelHelpers.exportAll(_nativeDynamicsCompressorNodeFactory, exports);
var _nativeDynamicsCompressorNodeFactoryFactory = require("./native-dynamics-compressor-node-factory-factory");
parcelHelpers.exportAll(_nativeDynamicsCompressorNodeFactoryFactory, exports);
var _nativeEventTarget = require("./native-event-target");
parcelHelpers.exportAll(_nativeEventTarget, exports);
var _nativeGainNode = require("./native-gain-node");
parcelHelpers.exportAll(_nativeGainNode, exports);
var _nativeGainNodeFactory = require("./native-gain-node-factory");
parcelHelpers.exportAll(_nativeGainNodeFactory, exports);
var _nativeIirFilterNode = require("./native-iir-filter-node");
parcelHelpers.exportAll(_nativeIirFilterNode, exports);
var _nativeIirFilterNodeFactory = require("./native-iir-filter-node-factory");
parcelHelpers.exportAll(_nativeIirFilterNodeFactory, exports);
var _nativeIirFilterNodeFactoryFactory = require("./native-iir-filter-node-factory-factory");
parcelHelpers.exportAll(_nativeIirFilterNodeFactoryFactory, exports);
var _nativeIirFilterNodeFakerFactory = require("./native-iir-filter-node-faker-factory");
parcelHelpers.exportAll(_nativeIirFilterNodeFakerFactory, exports);
var _nativeIirFilterNodeFakerFactoryFactory = require("./native-iir-filter-node-faker-factory-factory");
parcelHelpers.exportAll(_nativeIirFilterNodeFakerFactoryFactory, exports);
var _nativeMediaElementAudioSourceNode = require("./native-media-element-audio-source-node");
parcelHelpers.exportAll(_nativeMediaElementAudioSourceNode, exports);
var _nativeMediaElementAudioSourceNodeFactory = require("./native-media-element-audio-source-node-factory");
parcelHelpers.exportAll(_nativeMediaElementAudioSourceNodeFactory, exports);
var _nativeMediaStreamAudioDestinationNode = require("./native-media-stream-audio-destination-node");
parcelHelpers.exportAll(_nativeMediaStreamAudioDestinationNode, exports);
var _nativeMediaStreamAudioDestinationNodeFactory = require("./native-media-stream-audio-destination-node-factory");
parcelHelpers.exportAll(_nativeMediaStreamAudioDestinationNodeFactory, exports);
var _nativeMediaStreamAudioSourceNode = require("./native-media-stream-audio-source-node");
parcelHelpers.exportAll(_nativeMediaStreamAudioSourceNode, exports);
var _nativeMediaStreamAudioSourceNodeFactory = require("./native-media-stream-audio-source-node-factory");
parcelHelpers.exportAll(_nativeMediaStreamAudioSourceNodeFactory, exports);
var _nativeMediaStreamTrackAudioSourceNode = require("./native-media-stream-track-audio-source-node");
parcelHelpers.exportAll(_nativeMediaStreamTrackAudioSourceNode, exports);
var _nativeMediaStreamTrackAudioSourceNodeFactory = require("./native-media-stream-track-audio-source-node-factory");
parcelHelpers.exportAll(_nativeMediaStreamTrackAudioSourceNodeFactory, exports);
var _nativeMediaStreamTrackAudioSourceNodeFactoryFactory = require("./native-media-stream-track-audio-source-node-factory-factory");
parcelHelpers.exportAll(_nativeMediaStreamTrackAudioSourceNodeFactoryFactory, exports);
var _nativeOfflineAudioContext = require("./native-offline-audio-context");
parcelHelpers.exportAll(_nativeOfflineAudioContext, exports);
var _nativeOfflineAudioContextConstructor = require("./native-offline-audio-context-constructor");
parcelHelpers.exportAll(_nativeOfflineAudioContextConstructor, exports);
var _nativeOfflineAudioContextConstructorFactory = require("./native-offline-audio-context-constructor-factory");
parcelHelpers.exportAll(_nativeOfflineAudioContextConstructorFactory, exports);
var _nativeOscillatorNode = require("./native-oscillator-node");
parcelHelpers.exportAll(_nativeOscillatorNode, exports);
var _nativeOscillatorNodeFactory = require("./native-oscillator-node-factory");
parcelHelpers.exportAll(_nativeOscillatorNodeFactory, exports);
var _nativeOscillatorNodeFactoryFactory = require("./native-oscillator-node-factory-factory");
parcelHelpers.exportAll(_nativeOscillatorNodeFactoryFactory, exports);
var _nativePannerNode = require("./native-panner-node");
parcelHelpers.exportAll(_nativePannerNode, exports);
var _nativePannerNodeFactory = require("./native-panner-node-factory");
parcelHelpers.exportAll(_nativePannerNodeFactory, exports);
var _nativePannerNodeFactoryFactory = require("./native-panner-node-factory-factory");
parcelHelpers.exportAll(_nativePannerNodeFactoryFactory, exports);
var _nativePannerNodeFakerFactory = require("./native-panner-node-faker-factory");
parcelHelpers.exportAll(_nativePannerNodeFakerFactory, exports);
var _nativePannerNodeFakerFactoryFactory = require("./native-panner-node-faker-factory-factory");
parcelHelpers.exportAll(_nativePannerNodeFakerFactoryFactory, exports);
var _nativePeriodicWave = require("./native-periodic-wave");
parcelHelpers.exportAll(_nativePeriodicWave, exports);
var _nativePeriodicWaveFactory = require("./native-periodic-wave-factory");
parcelHelpers.exportAll(_nativePeriodicWaveFactory, exports);
var _nativePeriodicWaveFactoryFactory = require("./native-periodic-wave-factory-factory");
parcelHelpers.exportAll(_nativePeriodicWaveFactoryFactory, exports);
var _nativeScriptProcessorNode = require("./native-script-processor-node");
parcelHelpers.exportAll(_nativeScriptProcessorNode, exports);
var _nativeScriptProcessorNodeFactory = require("./native-script-processor-node-factory");
parcelHelpers.exportAll(_nativeScriptProcessorNodeFactory, exports);
var _nativeStereoPannerNode = require("./native-stereo-panner-node");
parcelHelpers.exportAll(_nativeStereoPannerNode, exports);
var _nativeStereoPannerNodeFactory = require("./native-stereo-panner-node-factory");
parcelHelpers.exportAll(_nativeStereoPannerNodeFactory, exports);
var _nativeStereoPannerNodeFactoryFactory = require("./native-stereo-panner-node-factory-factory");
parcelHelpers.exportAll(_nativeStereoPannerNodeFactoryFactory, exports);
var _nativeStereoPannerNodeFakerFactory = require("./native-stereo-panner-node-faker-factory");
parcelHelpers.exportAll(_nativeStereoPannerNodeFakerFactory, exports);
var _nativeStereoPannerNodeFakerFactoryFactory = require("./native-stereo-panner-node-faker-factory-factory");
parcelHelpers.exportAll(_nativeStereoPannerNodeFakerFactoryFactory, exports);
var _nativeWaveShaperNode = require("./native-wave-shaper-node");
parcelHelpers.exportAll(_nativeWaveShaperNode, exports);
var _nativeWaveShaperNodeFactory = require("./native-wave-shaper-node-factory");
parcelHelpers.exportAll(_nativeWaveShaperNodeFactory, exports);
var _nativeWaveShaperNodeFactoryFactory = require("./native-wave-shaper-node-factory-factory");
parcelHelpers.exportAll(_nativeWaveShaperNodeFactoryFactory, exports);
var _nativeWaveShaperNodeFakerFactory = require("./native-wave-shaper-node-faker-factory");
parcelHelpers.exportAll(_nativeWaveShaperNodeFakerFactory, exports);
var _nativeWaveShaperNodeFakerFactoryFactory = require("./native-wave-shaper-node-faker-factory-factory");
parcelHelpers.exportAll(_nativeWaveShaperNodeFakerFactoryFactory, exports);
var _notSupportedErrorFactory = require("./not-supported-error-factory");
parcelHelpers.exportAll(_notSupportedErrorFactory, exports);
var _offlineAudioContextConstructorFactory = require("./offline-audio-context-constructor-factory");
parcelHelpers.exportAll(_offlineAudioContextConstructorFactory, exports);
var _oscillatorNodeConstructor = require("./oscillator-node-constructor");
parcelHelpers.exportAll(_oscillatorNodeConstructor, exports);
var _oscillatorNodeConstructorFactory = require("./oscillator-node-constructor-factory");
parcelHelpers.exportAll(_oscillatorNodeConstructorFactory, exports);
var _oscillatorNodeRenderer = require("./oscillator-node-renderer");
parcelHelpers.exportAll(_oscillatorNodeRenderer, exports);
var _oscillatorNodeRendererFactory = require("./oscillator-node-renderer-factory");
parcelHelpers.exportAll(_oscillatorNodeRendererFactory, exports);
var _oscillatorNodeRendererFactoryFactory = require("./oscillator-node-renderer-factory-factory");
parcelHelpers.exportAll(_oscillatorNodeRendererFactoryFactory, exports);
var _oscillatorType = require("./oscillator-type");
parcelHelpers.exportAll(_oscillatorType, exports);
var _outputConnection = require("./output-connection");
parcelHelpers.exportAll(_outputConnection, exports);
var _overSampleType = require("./over-sample-type");
parcelHelpers.exportAll(_overSampleType, exports);
var _overwriteAccessorsFunction = require("./overwrite-accessors-function");
parcelHelpers.exportAll(_overwriteAccessorsFunction, exports);
var _pannerNodeConstructor = require("./panner-node-constructor");
parcelHelpers.exportAll(_pannerNodeConstructor, exports);
var _pannerNodeConstructorFactory = require("./panner-node-constructor-factory");
parcelHelpers.exportAll(_pannerNodeConstructorFactory, exports);
var _pannerNodeRendererFactory = require("./panner-node-renderer-factory");
parcelHelpers.exportAll(_pannerNodeRendererFactory, exports);
var _pannerNodeRendererFactoryFactory = require("./panner-node-renderer-factory-factory");
parcelHelpers.exportAll(_pannerNodeRendererFactoryFactory, exports);
var _panningModelType = require("./panning-model-type");
parcelHelpers.exportAll(_panningModelType, exports);
var _passiveAudioNodeInputConnection = require("./passive-audio-node-input-connection");
parcelHelpers.exportAll(_passiveAudioNodeInputConnection, exports);
var _passiveAudioParamInputConnection = require("./passive-audio-param-input-connection");
parcelHelpers.exportAll(_passiveAudioParamInputConnection, exports);
var _periodicWaveConstructor = require("./periodic-wave-constructor");
parcelHelpers.exportAll(_periodicWaveConstructor, exports);
var _periodicWaveConstructorFactory = require("./periodic-wave-constructor-factory");
parcelHelpers.exportAll(_periodicWaveConstructorFactory, exports);
var _pickElementFromSetFunction = require("./pick-element-from-set-function");
parcelHelpers.exportAll(_pickElementFromSetFunction, exports);
var _renderAutomationFactory = require("./render-automation-factory");
parcelHelpers.exportAll(_renderAutomationFactory, exports);
var _renderAutomationFunction = require("./render-automation-function");
parcelHelpers.exportAll(_renderAutomationFunction, exports);
var _renderInputsOfAudioNodeFactory = require("./render-inputs-of-audio-node-factory");
parcelHelpers.exportAll(_renderInputsOfAudioNodeFactory, exports);
var _renderInputsOfAudioNodeFunction = require("./render-inputs-of-audio-node-function");
parcelHelpers.exportAll(_renderInputsOfAudioNodeFunction, exports);
var _renderInputsOfAudioParamFactory = require("./render-inputs-of-audio-param-factory");
parcelHelpers.exportAll(_renderInputsOfAudioParamFactory, exports);
var _renderInputsOfAudioParamFunction = require("./render-inputs-of-audio-param-function");
parcelHelpers.exportAll(_renderInputsOfAudioParamFunction, exports);
var _renderNativeOfflineAudioContextFactory = require("./render-native-offline-audio-context-factory");
parcelHelpers.exportAll(_renderNativeOfflineAudioContextFactory, exports);
var _renderNativeOfflineAudioContextFunction = require("./render-native-offline-audio-context-function");
parcelHelpers.exportAll(_renderNativeOfflineAudioContextFunction, exports);
var _sanitizeAudioWorkletNodeOptionsFunction = require("./sanitize-audio-worklet-node-options-function");
parcelHelpers.exportAll(_sanitizeAudioWorkletNodeOptionsFunction, exports);
var _sanitizeChannelSplitterOptionsFunction = require("./sanitize-channel-splitter-options-function");
parcelHelpers.exportAll(_sanitizeChannelSplitterOptionsFunction, exports);
var _sanitizePeriodicWaveOptionsFunction = require("./sanitize-periodic-wave-options-function");
parcelHelpers.exportAll(_sanitizePeriodicWaveOptionsFunction, exports);
var _setActiveAudioWorkletNodeInputsFactory = require("./set-active-audio-worklet-node-inputs-factory");
parcelHelpers.exportAll(_setActiveAudioWorkletNodeInputsFactory, exports);
var _setActiveAudioWorkletNodeInputsFunction = require("./set-active-audio-worklet-node-inputs-function");
parcelHelpers.exportAll(_setActiveAudioWorkletNodeInputsFunction, exports);
var _setAudioNodeTailTimeFactory = require("./set-audio-node-tail-time-factory");
parcelHelpers.exportAll(_setAudioNodeTailTimeFactory, exports);
var _setAudioNodeTailTimeFunction = require("./set-audio-node-tail-time-function");
parcelHelpers.exportAll(_setAudioNodeTailTimeFunction, exports);
var _setValueAtTimeUntilPossibleFunction = require("./set-value-at-time-until-possible-function");
parcelHelpers.exportAll(_setValueAtTimeUntilPossibleFunction, exports);
var _startRenderingFactory = require("./start-rendering-factory");
parcelHelpers.exportAll(_startRenderingFactory, exports);
var _startRenderingFunction = require("./start-rendering-function");
parcelHelpers.exportAll(_startRenderingFunction, exports);
var _stereoPannerNodeConstructor = require("./stereo-panner-node-constructor");
parcelHelpers.exportAll(_stereoPannerNodeConstructor, exports);
var _stereoPannerNodeConstructorFactory = require("./stereo-panner-node-constructor-factory");
parcelHelpers.exportAll(_stereoPannerNodeConstructorFactory, exports);
var _stereoPannerNodeRendererFactoryFactory = require("./stereo-panner-node-renderer-factory-factory");
parcelHelpers.exportAll(_stereoPannerNodeRendererFactoryFactory, exports);
var _stereoPannerNodeRendererFactory = require("./stereo-panner-node-renderer-factory");
parcelHelpers.exportAll(_stereoPannerNodeRendererFactory, exports);
var _testAudioBufferCopyChannelMethodsSubarraySupportFactory = require("./test-audio-buffer-copy-channel-methods-subarray-support-factory");
parcelHelpers.exportAll(_testAudioBufferCopyChannelMethodsSubarraySupportFactory, exports);
var _testAudioBufferConstructorSupportFactory = require("./test-audio-buffer-constructor-support-factory");
parcelHelpers.exportAll(_testAudioBufferConstructorSupportFactory, exports);
var _testAudioContextCloseMethodSupportFactory = require("./test-audio-context-close-method-support-factory");
parcelHelpers.exportAll(_testAudioContextCloseMethodSupportFactory, exports);
var _testAudioContextDecodeAudioDataMethodTypeErrorSupportFactory = require("./test-audio-context-decode-audio-data-method-type-error-support-factory");
parcelHelpers.exportAll(_testAudioContextDecodeAudioDataMethodTypeErrorSupportFactory, exports);
var _testAudioContextOptionsSupportFactory = require("./test-audio-context-options-support-factory");
parcelHelpers.exportAll(_testAudioContextOptionsSupportFactory, exports);
var _testAudioNodeConnectMethodSupportFactory = require("./test-audio-node-connect-method-support-factory");
parcelHelpers.exportAll(_testAudioNodeConnectMethodSupportFactory, exports);
var _testAudioWorkletNodeOptionsClonabilityFunction = require("./test-audio-worklet-node-options-clonability-function");
parcelHelpers.exportAll(_testAudioWorkletNodeOptionsClonabilityFunction, exports);
var _testAudioWorkletProcessorNoOutputsSupportFactory = require("./test-audio-worklet-processor-no-outputs-support-factory");
parcelHelpers.exportAll(_testAudioWorkletProcessorNoOutputsSupportFactory, exports);
var _testAudioWorkletProcessorPostMessageSupportFactory = require("./test-audio-worklet-processor-post-message-support-factory");
parcelHelpers.exportAll(_testAudioWorkletProcessorPostMessageSupportFactory, exports);
var _testChannelMergerNodeChannelCountSupportFactory = require("./test-channel-merger-node-channel-count-support-factory");
parcelHelpers.exportAll(_testChannelMergerNodeChannelCountSupportFactory, exports);
var _testConstantSourceNodeAccurateSchedulingSupportFactory = require("./test-constant-source-node-accurate-scheduling-support-factory");
parcelHelpers.exportAll(_testConstantSourceNodeAccurateSchedulingSupportFactory, exports);
var _testConvolverNodeBufferReassignabilitySupportFactory = require("./test-convolver-node-buffer-reassignability-support-factory");
parcelHelpers.exportAll(_testConvolverNodeBufferReassignabilitySupportFactory, exports);
var _testConvolverNodeChannelCountSupportFactory = require("./test-convolver-node-channel-count-support-factory");
parcelHelpers.exportAll(_testConvolverNodeChannelCountSupportFactory, exports);
var _testIsSecureContextSupportFactory = require("./test-is-secure-context-support-factory");
parcelHelpers.exportAll(_testIsSecureContextSupportFactory, exports);
var _testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = require("./test-media-stream-audio-source-node-media-stream-without-audio-track-support");
parcelHelpers.exportAll(_testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, exports);
var _testOfflineAudioContextCurrentTimeSupportFactory = require("./test-offline-audio-context-current-time-support-factory");
parcelHelpers.exportAll(_testOfflineAudioContextCurrentTimeSupportFactory, exports);
var _testStereoPannerNodeDefaultValueSupportFactory = require("./test-stereo-panner-node-default-value-support-factory");
parcelHelpers.exportAll(_testStereoPannerNodeDefaultValueSupportFactory, exports);
var _unknownErrorFactory = require("./unknown-error-factory");
parcelHelpers.exportAll(_unknownErrorFactory, exports);
var _unrenderedAudioWorkletNodeStore = require("./unrendered-audio-worklet-node-store");
parcelHelpers.exportAll(_unrenderedAudioWorkletNodeStore, exports);
var _unrenderedAudioWorkletNodes = require("./unrendered-audio-worklet-nodes");
parcelHelpers.exportAll(_unrenderedAudioWorkletNodes, exports);
var _waveShaperNodeConstructor = require("./wave-shaper-node-constructor");
parcelHelpers.exportAll(_waveShaperNodeConstructor, exports);
var _waveShaperNodeConstructorFactory = require("./wave-shaper-node-constructor-factory");
parcelHelpers.exportAll(_waveShaperNodeConstructorFactory, exports);
var _waveShaperNodeRendererFactoryFactory = require("./wave-shaper-node-renderer-factory-factory");
parcelHelpers.exportAll(_waveShaperNodeRendererFactoryFactory, exports);
var _waveShaperNodeRendererFactory = require("./wave-shaper-node-renderer-factory");
parcelHelpers.exportAll(_waveShaperNodeRendererFactory, exports);
var _window = require("./window");
parcelHelpers.exportAll(_window, exports);
var _windowFactory = require("./window-factory");
parcelHelpers.exportAll(_windowFactory, exports);
var _wrapAudioBufferCopyChannelMethodsFactory = require("./wrap-audio-buffer-copy-channel-methods-factory");
parcelHelpers.exportAll(_wrapAudioBufferCopyChannelMethodsFactory, exports);
var _wrapAudioBufferCopyChannelMethodsFunction = require("./wrap-audio-buffer-copy-channel-methods-function");
parcelHelpers.exportAll(_wrapAudioBufferCopyChannelMethodsFunction, exports);
var _wrapAudioBufferCopyChannelMethodsOutOfBoundsFactory = require("./wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory");
parcelHelpers.exportAll(_wrapAudioBufferCopyChannelMethodsOutOfBoundsFactory, exports);
var _wrapAudioBufferCopyChannelMethodsOutOfBoundsFunction = require("./wrap-audio-buffer-copy-channel-methods-out-of-bounds-function");
parcelHelpers.exportAll(_wrapAudioBufferCopyChannelMethodsOutOfBoundsFunction, exports);
var _wrapAudioBufferSourceNodeStartMethodOffsetClampingFunction = require("./wrap-audio-buffer-source-node-start-method-offset-clamping-function");
parcelHelpers.exportAll(_wrapAudioBufferSourceNodeStartMethodOffsetClampingFunction, exports);
var _wrapAudioBufferSourceNodeStopMethodNullifiedBufferFactory = require("./wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory");
parcelHelpers.exportAll(_wrapAudioBufferSourceNodeStopMethodNullifiedBufferFactory, exports);
var _wrapAudioBufferSourceNodeStopMethodNullifiedBufferFunction = require("./wrap-audio-buffer-source-node-stop-method-nullified-buffer-function");
parcelHelpers.exportAll(_wrapAudioBufferSourceNodeStopMethodNullifiedBufferFunction, exports);
var _wrapAudioScheduledSourceNodeStopMethodConsecutiveCallsFunction = require("./wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function");
parcelHelpers.exportAll(_wrapAudioScheduledSourceNodeStopMethodConsecutiveCallsFunction, exports);
var _wrapChannelMergerNodeFactory = require("./wrap-channel-merger-node-factory");
parcelHelpers.exportAll(_wrapChannelMergerNodeFactory, exports);
var _wrapChannelMergerNodeFunction = require("./wrap-channel-merger-node-function");
parcelHelpers.exportAll(_wrapChannelMergerNodeFunction, exports);
var _wrapEventListenerFunction = require("./wrap-event-listener-function");
parcelHelpers.exportAll(_wrapEventListenerFunction, exports);

},{"./abort-error-factory":"aUzMT","./active-audio-worklet-node-inputs-store":"ipST9","./active-input-connection":"btFkQ","./add-active-input-connection-to-audio-node-factory":"h43ad","./add-active-input-connection-to-audio-node-function":"bcRwN","./add-audio-node-connections-factory":"8rdil","./add-audio-node-connections-function":"fycj1","./add-audio-param-connections-factory":"e922S","./add-audio-param-connections-function":"aYJk2","./add-audio-worklet-module-factory":"cfV2t","./add-audio-worklet-module-function":"6RF9e","./add-connection-to-audio-node-factory":"iEM54","./add-connection-to-audio-node-function":"kWGv7","./add-passive-input-connection-to-audio-node-factory":"8MgBI","./add-passive-input-connection-to-audio-node-function":"aob1I","./add-silent-connection-factory":"lsQXn","./add-silent-connection-function":"dwiGY","./add-unrendered-audio-worklet-node-factory":"8vfjw","./add-unrendered-audio-worklet-node-function":"cXbOc","./analyser-node-constructor":"aOh6U","./analyser-node-constructor-factory":"8IsgL","./analyser-node-renderer-factory":"1pvk4","./analyser-node-renderer-factory-factory":"7XeJZ","./any-audio-buffer":"3ReL8","./any-context":"iBO2q","./audio-buffer-constructor":"dY71H","./audio-buffer-constructor-factory":"grM37","./audio-buffer-source-node-constructor":"4Y6lE","./audio-buffer-source-node-constructor-factory":"9dE6w","./audio-buffer-source-node-renderer":"aIlHX","./audio-buffer-source-node-renderer-factory":"bRjks","./audio-buffer-source-node-renderer-factory-factory":"jpODf","./audio-buffer-store":"z9Huw","./audio-context-constructor":"43r8p","./audio-context-constructor-factory":"liVbb","./audio-context-latency-category":"5otJq","./audio-context-state":"h5TOs","./audio-destination-node-constructor":"e0IdR","./audio-destination-node-constructor-factory":"bGj1m","./audio-destination-node-renderer-factory":"cYPRl","./audio-listener-factory":"dNHzm","./audio-listener-factory-factory":"9FBG1","./audio-node-connections":"37pv2","./audio-node-connections-store":"k0jVQ","./audio-node-constructor":"1F99O","./audio-node-constructor-factory":"iXs9h","./audio-node-output-connection":"eVR8v","./audio-node-renderer":"agskS","./audio-node-store":"3ftN3","./audio-node-tail-time-store":"5TtnK","./audio-param-audio-node-store":"byH9A","./audio-param-connections":"iH0XN","./audio-param-connections-store":"jNm5d","./audio-param-factory":"bAKDY","./audio-param-factory-factory":"2Bpih","./audio-param-map":"8a2QH","./audio-param-output-connection":"AUoGC","./audio-param-renderer-factory":"giW9q","./audio-param-store":"fDz5Y","./audio-worklet-node-constructor":"Iki1i","./audio-worklet-node-constructor-factory":"inNLm","./audio-worklet-node-renderer-factory":"7L2QS","./audio-worklet-node-renderer-factory-factory":"bR9k1","./backup-offline-audio-context-store":"RZxmA","./base-audio-context-constructor":"dEwjR","./base-audio-context-constructor-factory":"4Hjoo","./biquad-filter-node-constructor":"VAUlp","./biquad-filter-node-constructor-factory":"9i7OD","./biquad-filter-node-renderer-factory":"bZUmk","./biquad-filter-node-renderer-factory-factory":"bvmmC","./biquad-filter-type":"daxR7","./channel-count-mode":"gzXtD","./channel-interpretation":"g2UHY","./channel-merger-node-constructor":"hec1Q","./channel-merger-node-constructor-factory":"2dXLF","./channel-merger-node-renderer-factory":"epfg3","./channel-merger-node-renderer-factory-factory":"8hx8D","./channel-splitter-node-constructor":"kuZZp","./channel-splitter-node-constructor-factory":"2BOWF","./channel-splitter-node-renderer-factory":"2ABfM","./channel-splitter-node-renderer-factory-factory":"5YBN4","./cache-test-result-factory":"9TZ4M","./cache-test-result-function":"9mT4a","./connect-audio-param-factory":"3j0Fz","./connect-audio-param-function":"1VapG","./connect-multiple-outputs-factory":"lynAY","./connect-multiple-outputs-function":"9Ye60","./connect-native-audio-node-to-native-audio-node-function":"cIcob","./connected-native-audio-buffer-source-node-factory":"1r9h0","./connected-native-audio-buffer-source-node-factory-factory":"iYpbn","./constant-source-node-constructor":"aVPMc","./constant-source-node-constructor-factory":"7zJLN","./constant-source-node-renderer":"cYHXj","./constant-source-node-renderer-factory":"b0xJa","./constant-source-node-renderer-factory-factory":"asPCi","./constructor":"85AkH","./context":"iFJ4I","./context-store":"2fWln","./convert-number-to-unsigned-long-factory":"bB75W","./convert-number-to-unsigned-long-function":"2zqY6","./convolver-node-constructor":"7GS88","./convolver-node-constructor-factory":"fkTV8","./convolver-node-renderer-factory":"gyFuK","./convolver-node-renderer-factory-factory":"4cgV6","./create-native-offline-audio-context-factory":"6hAz0","./create-native-offline-audio-context-function":"8Mgf4","./cycle-counters":"cVUmO","./data-clone-error-factory":"4qo74","./decode-audio-data-factory":"j5Xnd","./decode-audio-data-function":"5tc3T","./decode-error-callback":"kk7W8","./decode-success-callback":"7iMlm","./decrement-cycle-counter-factory":"2go5R","./decrement-cycle-counter-function":"dGsRM","./delay-node-constructor":"dr51p","./delay-node-constructor-factory":"bPUha","./delay-node-renderer-factory":"3NK02","./delay-node-renderer-factory-factory":"bNs0r","./delete-active-input-connection-to-audio-node-factory":"emkUU","./delete-active-input-connection-to-audio-node-function":"bo4Th","./delete-unrendered-audio-worklet-node-factory":"7fAKj","./delete-unrendered-audio-worklet-node-function":"cWU4H","./detect-cycles-factory":"iJ10j","./detect-cycles-function":"5Qnyy","./disconnect-multiple-outputs-factory":"kXTb4","./disconnect-multiple-outputs-function":"6xi4t","./disconnect-native-audio-node-from-native-audio-node-function":"gCc0T","./distance-model-type":"ez0hd","./dynamics-compressor-node-constructor":"8p4l6","./dynamics-compressor-node-constructor-factory":"a5sok","./dynamics-compressor-node-renderer-factory":"jmfWE","./dynamics-compressor-node-renderer-factory-factory":"dxs58","./encoding-error-factory":"gPedL","./error-event-handler":"9Kodl","./evaluate-audio-worklet-global-scope-function":"8wIrB","./evaluate-source-factory":"5EsFh","./evaluate-source-function":"cRC9C","./event-handler":"hnJvg","./event-target-constructor":"8Osko","./event-target-constructor-factory":"991bA","./expose-current-frame-and-current-time-factory":"4ymhr","./expose-current-frame-and-current-time-function":"6J2MV","./fetch-source-factory":"kGcp0","./fetch-source-function":"cEMI9","./gain-node-constructor":"jNG9s","./gain-node-constructor-factory":"abuOG","./gain-node-renderer-factory":"9Sq68","./gain-node-renderer-factory-factory":"RYc3F","./get-active-audio-worklet-node-inputs-factory":"f5A22","./get-active-audio-worklet-node-inputs-function":"9w1aG","./get-audio-node-connections-function":"jwL3Y","./get-audio-node-renderer-factory":"ew43P","./get-audio-node-renderer-function":"34VMw","./get-audio-node-tail-time-factory":"8Flkc","./get-audio-node-tail-time-function":"hq7VA","./get-audio-param-connections-function":"koaAs","./get-audio-param-renderer-factory":"2L1gx","./get-audio-param-renderer-function":"jPUYK","./get-backup-offline-audio-context-factory":"kvSLR","./get-backup-offline-audio-context-function":"5dcsg","./get-event-listeners-of-audio-node-function":"9Domk","./get-first-sample-function":"5xCU5","./get-native-audio-node-function":"lGpbL","./get-native-audio-param-function":"4ajPV","./get-native-context-factory":"fydra","./get-native-context-function":"gyIoo","./get-or-create-backup-offline-audio-context-factory":"j1x9L","./get-or-create-backup-offline-audio-context-function":"hUe17","./get-unrendered-audio-worklet-nodes-factory":"52fJP","./get-unrendered-audio-worklet-nodes-function":"jFSsh","./get-value-for-key-function":"kxk38","./iir-filter-node-constructor":"fyaBJ","./iir-filter-node-constructor-factory":"jK2Xx","./iir-filter-node-renderer-factory":"2M4Hm","./iir-filter-node-renderer-factory-factory":"hbggM","./increment-cycle-counter-factory":"avEQI","./increment-cycle-counter-factory-factory":"4gE9N","./increment-cycle-counter-function":"eLv80","./index-size-error-factory":"g4wUZ","./insert-element-in-set-function":"1WXQU","./internal-state-event-listener":"7nv9f","./invalid-access-error-factory":"c1fU7","./invalid-state-error-factory":"1iowR","./is-active-audio-node-function":"95ze9","./is-any-audio-context-factory":"4croT","./is-any-audio-context-function":"4Z5rT","./is-any-audio-node-factory":"1VZ6r","./is-any-audio-node-function":"5Eutv","./is-any-audio-param-factory":"35EJS","./is-any-audio-param-function":"62Ied","./is-any-offline-audio-context-factory":"9PKQz","./is-any-offline-audio-context-function":"eTYGv","./is-dc-curve-function":"gDS2w","./is-native-audio-context-factory":"3lCEX","./is-native-audio-context-function":"3r8qm","./is-native-audio-node-factory":"dyo3w","./is-native-audio-node-function":"fFlug","./is-native-audio-param-factory":"5Hnm8","./is-native-audio-param-function":"aqXyY","./is-native-context-factory":"kT94m","./is-native-context-function":"arod4","./is-native-offline-audio-context-factory":"cHtQP","./is-native-offline-audio-context-function":"k1nf2","./is-part-of-a-cycle-function":"9Hux4","./is-passive-audio-node-function":"jpyfX","./is-secure-context-factory":"8gy3Q","./is-supported-promise-factory":"4QnYx","./media-element-audio-source-node-constructor":"4KNOm","./media-element-audio-source-node-constructor-factory":"jVYaK","./media-stream-audio-destination-node-constructor":"8WwsT","./media-stream-audio-destination-node-constructor-factory":"esFJ9","./media-stream-audio-source-node-constructor":"ePEDx","./media-stream-audio-source-node-constructor-factory":"3C8PS","./media-stream-track-audio-source-node-constructor":"hldCL","./media-stream-track-audio-source-node-constructor-factory":"k8Nya","./minimal-audio-context-constructor":"Yv1Sc","./minimal-audio-context-constructor-factory":"6Xbcb","./minimal-base-audio-context-constructor":"3XZ5M","./minimal-base-audio-context-constructor-factory":"lkVu3","./minimal-offline-audio-context-constructor":"py1MV","./minimal-offline-audio-context-constructor-factory":"8J5Nr","./monitor-connections-factory":"isyVz","./monitor-connections-function":"6LxAr","./native-analyser-node":"5fHCU","./native-analyser-node-factory":"l0Vzb","./native-analyser-node-factory-factory":"ai7cN","./native-audio-buffer":"ftwXI","./native-audio-buffer-constructor":"iJb7j","./native-audio-buffer-constructor-factory":"eGJ6K","./native-audio-buffer-source-node":"bOMHn","./native-audio-buffer-source-node-factory":"ftaWc","./native-audio-buffer-source-node-factory-factory":"h0GNd","./native-audio-context":"lgwDo","./native-audio-context-constructor":"8OLrd","./native-audio-context-constructor-factory":"1O4wn","./native-audio-destination-node":"5yVzS","./native-audio-destination-node-factory":"hJjCG","./native-audio-destination-node-factory-factory":"lyLPE","./native-audio-listener":"gKzj4","./native-audio-node":"6dE2I","./native-audio-param":"eccBR","./native-audio-param-map":"g8U1T","./native-audio-worklet":"jhxAL","./native-audio-worklet-node":"4BSDJ","./native-audio-worklet-node-constructor":"dvaEu","./native-audio-worklet-node-constructor-factory":"8GFKD","./native-audio-worklet-node-factory":"7vIBc","./native-audio-worklet-node-factory-factory":"aQlrl","./native-audio-worklet-node-faker-factory":"27287","./native-audio-worklet-node-faker-factory-factory":"2Qvzo","./native-audio-worklet-node-options":"iLEdF","./native-biquad-filter-node":"sX4hL","./native-biquad-filter-node-factory":"1rr36","./native-channel-merger-node":"gq9JB","./native-channel-merger-node-factory":"dkKJM","./native-channel-merger-node-factory-factory":"cAh2d","./native-channel-splitter-node":"c6qsA","./native-channel-splitter-node-factory":"cCUrb","./native-constant-source-node":"8od1O","./native-constant-source-node-factory":"dgRS0","./native-constant-source-node-factory-factory":"ha1Db","./native-constant-source-node-faker-factory":"chZTo","./native-constant-source-node-faker-factory-factory":"ak3OM","./native-context":"9SfLF","./native-convolver-node":"3Fxtv","./native-convolver-node-factory":"1Dy1V","./native-convolver-node-factory-factory":"dcQrS","./native-delay-node-factory":"g2gNy","./native-delay-node":"4LVjO","./native-dynamics-compressor-node":"4kiTv","./native-dynamics-compressor-node-factory":"hhZZQ","./native-dynamics-compressor-node-factory-factory":"98MUd","./native-event-target":"fj2c8","./native-gain-node":"joI9B","./native-gain-node-factory":"YeBQx","./native-iir-filter-node":"48gZR","./native-iir-filter-node-factory":"7Uaqw","./native-iir-filter-node-factory-factory":"76OdY","./native-iir-filter-node-faker-factory":"iCcpI","./native-iir-filter-node-faker-factory-factory":"3CH8G","./native-media-element-audio-source-node":"4dzZN","./native-media-element-audio-source-node-factory":"jNR0H","./native-media-stream-audio-destination-node":"i8Gzz","./native-media-stream-audio-destination-node-factory":"isv7n","./native-media-stream-audio-source-node":"fFxbg","./native-media-stream-audio-source-node-factory":"7dDEQ","./native-media-stream-track-audio-source-node":"89UdU","./native-media-stream-track-audio-source-node-factory":"jpjXG","./native-media-stream-track-audio-source-node-factory-factory":"4LSMG","./native-offline-audio-context":"fKZTC","./native-offline-audio-context-constructor":"HTJeH","./native-offline-audio-context-constructor-factory":"a9MY1","./native-oscillator-node":"6iCPg","./native-oscillator-node-factory":"5MgM0","./native-oscillator-node-factory-factory":"h39Dr","./native-panner-node":"d2MhQ","./native-panner-node-factory":"kOBiN","./native-panner-node-factory-factory":"chkg8","./native-panner-node-faker-factory":"5CYpg","./native-panner-node-faker-factory-factory":"bMtpM","./native-periodic-wave":"fnNVE","./native-periodic-wave-factory":"h33BO","./native-periodic-wave-factory-factory":"7SbgB","./native-script-processor-node":"eELQS","./native-script-processor-node-factory":"esp1w","./native-stereo-panner-node":"eHmJb","./native-stereo-panner-node-factory":"lWqsp","./native-stereo-panner-node-factory-factory":"bcWkB","./native-stereo-panner-node-faker-factory":"gw6Sp","./native-stereo-panner-node-faker-factory-factory":"gabS5","./native-wave-shaper-node":"b8Q3J","./native-wave-shaper-node-factory":"dj2rV","./native-wave-shaper-node-factory-factory":"jIoWv","./native-wave-shaper-node-faker-factory":"1eUGR","./native-wave-shaper-node-faker-factory-factory":"PL3J1","./not-supported-error-factory":"4ou1B","./offline-audio-context-constructor-factory":"2nMEr","./oscillator-node-constructor":"igviH","./oscillator-node-constructor-factory":"iW0sZ","./oscillator-node-renderer":"7kfAL","./oscillator-node-renderer-factory":"2IfGU","./oscillator-node-renderer-factory-factory":"3Xgsk","./oscillator-type":"aiz22","./output-connection":"gkfN3","./over-sample-type":"5Al8v","./overwrite-accessors-function":"2gdGV","./panner-node-constructor":"9M5hV","./panner-node-constructor-factory":"6CGrv","./panner-node-renderer-factory":"fp4vW","./panner-node-renderer-factory-factory":"2ddUV","./panning-model-type":"7wghh","./passive-audio-node-input-connection":"2ue4y","./passive-audio-param-input-connection":"cZfB9","./periodic-wave-constructor":"egwKh","./periodic-wave-constructor-factory":"dS3aZ","./pick-element-from-set-function":"dp1DX","./render-automation-factory":"5XE1m","./render-automation-function":"idqSi","./render-inputs-of-audio-node-factory":"4DoVL","./render-inputs-of-audio-node-function":"dJbcY","./render-inputs-of-audio-param-factory":"19FsI","./render-inputs-of-audio-param-function":"65pUG","./render-native-offline-audio-context-factory":"gZsiJ","./render-native-offline-audio-context-function":"iwuDH","./sanitize-audio-worklet-node-options-function":"60Syy","./sanitize-channel-splitter-options-function":"EGeCu","./sanitize-periodic-wave-options-function":"kv52Q","./set-active-audio-worklet-node-inputs-factory":"8bUBr","./set-active-audio-worklet-node-inputs-function":"ll24L","./set-audio-node-tail-time-factory":"9IPtR","./set-audio-node-tail-time-function":"jzeBP","./set-value-at-time-until-possible-function":"euRQ6","./start-rendering-factory":"kp1Mr","./start-rendering-function":"jnwbU","./stereo-panner-node-constructor":"lWpSG","./stereo-panner-node-constructor-factory":"cT1l0","./stereo-panner-node-renderer-factory-factory":"axKiB","./stereo-panner-node-renderer-factory":"lvNSy","./test-audio-buffer-copy-channel-methods-subarray-support-factory":"frcUD","./test-audio-buffer-constructor-support-factory":"96UOT","./test-audio-context-close-method-support-factory":"hSxba","./test-audio-context-decode-audio-data-method-type-error-support-factory":"60HtJ","./test-audio-context-options-support-factory":"j65CQ","./test-audio-node-connect-method-support-factory":"gkWR3","./test-audio-worklet-node-options-clonability-function":"c8hBt","./test-audio-worklet-processor-no-outputs-support-factory":"e3Hr0","./test-audio-worklet-processor-post-message-support-factory":"d9Pdm","./test-channel-merger-node-channel-count-support-factory":"aJgeT","./test-constant-source-node-accurate-scheduling-support-factory":"6kbpN","./test-convolver-node-buffer-reassignability-support-factory":"7obSE","./test-convolver-node-channel-count-support-factory":"dk0SD","./test-is-secure-context-support-factory":"59xUC","./test-media-stream-audio-source-node-media-stream-without-audio-track-support":"kEqp3","./test-offline-audio-context-current-time-support-factory":"2Jdp7","./test-stereo-panner-node-default-value-support-factory":"1gJUr","./unknown-error-factory":"eauik","./unrendered-audio-worklet-node-store":"4PmYP","./unrendered-audio-worklet-nodes":"8GJHC","./wave-shaper-node-constructor":"9AzvI","./wave-shaper-node-constructor-factory":"cElf2","./wave-shaper-node-renderer-factory-factory":"iKZcM","./wave-shaper-node-renderer-factory":"A5RWt","./window":"j77wm","./window-factory":"a3p4t","./wrap-audio-buffer-copy-channel-methods-factory":"bSNo3","./wrap-audio-buffer-copy-channel-methods-function":"fS9TF","./wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory":"dP834","./wrap-audio-buffer-copy-channel-methods-out-of-bounds-function":"2F4QJ","./wrap-audio-buffer-source-node-start-method-offset-clamping-function":"lf7QF","./wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory":"l7G2Q","./wrap-audio-buffer-source-node-stop-method-nullified-buffer-function":"bBwY3","./wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function":"gND3m","./wrap-channel-merger-node-factory":"ghFAN","./wrap-channel-merger-node-function":"k9n1J","./wrap-event-listener-function":"fcfNo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aUzMT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ipST9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"btFkQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h43ad":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bcRwN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8rdil":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fycj1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e922S":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aYJk2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cfV2t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6RF9e":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iEM54":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kWGv7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8MgBI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aob1I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lsQXn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dwiGY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8vfjw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cXbOc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aOh6U":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8IsgL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1pvk4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7XeJZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3ReL8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iBO2q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dY71H":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"grM37":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4Y6lE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9dE6w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aIlHX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bRjks":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jpODf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"z9Huw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"43r8p":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"liVbb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5otJq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h5TOs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e0IdR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bGj1m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cYPRl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dNHzm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9FBG1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"37pv2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k0jVQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1F99O":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iXs9h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eVR8v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"agskS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3ftN3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5TtnK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"byH9A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iH0XN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jNm5d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bAKDY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Bpih":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8a2QH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"AUoGC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"giW9q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fDz5Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"Iki1i":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"inNLm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7L2QS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bR9k1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"RZxmA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dEwjR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4Hjoo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"VAUlp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9i7OD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bZUmk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bvmmC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"daxR7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gzXtD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g2UHY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hec1Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2dXLF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"epfg3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8hx8D":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kuZZp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2BOWF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2ABfM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5YBN4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9TZ4M":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9mT4a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3j0Fz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1VapG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lynAY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9Ye60":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cIcob":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1r9h0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iYpbn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aVPMc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7zJLN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cYHXj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b0xJa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"asPCi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"85AkH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iFJ4I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2fWln":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bB75W":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2zqY6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7GS88":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fkTV8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gyFuK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4cgV6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6hAz0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8Mgf4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cVUmO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4qo74":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j5Xnd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5tc3T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kk7W8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7iMlm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2go5R":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dGsRM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dr51p":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bPUha":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3NK02":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bNs0r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"emkUU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bo4Th":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7fAKj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cWU4H":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iJ10j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5Qnyy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kXTb4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6xi4t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gCc0T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ez0hd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8p4l6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a5sok":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jmfWE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dxs58":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gPedL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9Kodl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8wIrB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5EsFh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cRC9C":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hnJvg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8Osko":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"991bA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4ymhr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6J2MV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kGcp0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cEMI9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jNG9s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"abuOG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9Sq68":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"RYc3F":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f5A22":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9w1aG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jwL3Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ew43P":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"34VMw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8Flkc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hq7VA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"koaAs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2L1gx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jPUYK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kvSLR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5dcsg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9Domk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5xCU5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lGpbL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4ajPV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fydra":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gyIoo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j1x9L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hUe17":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"52fJP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jFSsh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kxk38":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fyaBJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jK2Xx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2M4Hm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hbggM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"avEQI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4gE9N":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eLv80":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g4wUZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1WXQU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7nv9f":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c1fU7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1iowR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"95ze9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4croT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4Z5rT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1VZ6r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5Eutv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"35EJS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"62Ied":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9PKQz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eTYGv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gDS2w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3lCEX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3r8qm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dyo3w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fFlug":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5Hnm8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aqXyY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kT94m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"arod4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cHtQP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k1nf2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9Hux4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jpyfX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8gy3Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4QnYx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4KNOm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jVYaK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8WwsT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"esFJ9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ePEDx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3C8PS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hldCL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k8Nya":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"Yv1Sc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6Xbcb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3XZ5M":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lkVu3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"py1MV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8J5Nr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"isyVz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6LxAr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5fHCU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l0Vzb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ai7cN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ftwXI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iJb7j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eGJ6K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bOMHn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ftaWc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h0GNd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lgwDo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8OLrd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1O4wn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5yVzS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hJjCG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lyLPE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gKzj4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6dE2I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eccBR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g8U1T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jhxAL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4BSDJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dvaEu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8GFKD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7vIBc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aQlrl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"27287":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Qvzo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iLEdF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"sX4hL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1rr36":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gq9JB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dkKJM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cAh2d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c6qsA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cCUrb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8od1O":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dgRS0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ha1Db":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"chZTo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ak3OM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9SfLF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Fxtv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1Dy1V":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dcQrS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g2gNy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4LVjO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4kiTv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hhZZQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"98MUd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fj2c8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"joI9B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"YeBQx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"48gZR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7Uaqw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"76OdY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iCcpI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3CH8G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4dzZN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jNR0H":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i8Gzz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"isv7n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fFxbg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7dDEQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"89UdU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jpjXG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4LSMG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fKZTC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"HTJeH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a9MY1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6iCPg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5MgM0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h39Dr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d2MhQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kOBiN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"chkg8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5CYpg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bMtpM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fnNVE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h33BO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7SbgB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eELQS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"esp1w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eHmJb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lWqsp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bcWkB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gw6Sp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gabS5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b8Q3J":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dj2rV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jIoWv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1eUGR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"PL3J1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4ou1B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2nMEr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"igviH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iW0sZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7kfAL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2IfGU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Xgsk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aiz22":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gkfN3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5Al8v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2gdGV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9M5hV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6CGrv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fp4vW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2ddUV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7wghh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2ue4y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cZfB9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"egwKh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dS3aZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dp1DX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5XE1m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"idqSi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4DoVL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dJbcY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"19FsI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"65pUG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gZsiJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iwuDH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"60Syy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"EGeCu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kv52Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8bUBr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ll24L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9IPtR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jzeBP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"euRQ6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kp1Mr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jnwbU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lWpSG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cT1l0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"axKiB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lvNSy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"frcUD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"96UOT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hSxba":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"60HtJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j65CQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gkWR3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c8hBt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e3Hr0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d9Pdm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aJgeT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6kbpN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7obSE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dk0SD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"59xUC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kEqp3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Jdp7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1gJUr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eauik":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4PmYP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8GJHC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9AzvI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cElf2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iKZcM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"A5RWt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j77wm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a3p4t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bSNo3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fS9TF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dP834":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2F4QJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lf7QF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l7G2Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bBwY3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gND3m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ghFAN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k9n1J":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fcfNo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2lOIQ":[function(require,module,exports) {
/**
 * Assert that the statement is true, otherwise invoke the error.
 * @param statement
 * @param error The message which is passed into an Error
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "assert", ()=>assert);
/**
 * Make sure that the given value is within the range
 */ parcelHelpers.export(exports, "assertRange", ()=>assertRange);
/**
 * Make sure that the given value is within the range
 */ parcelHelpers.export(exports, "assertContextRunning", ()=>assertContextRunning);
/**
 * Set the logging interface
 */ parcelHelpers.export(exports, "setLogger", ()=>setLogger);
/**
 * Log anything
 */ parcelHelpers.export(exports, "log", ()=>log);
/**
 * Warn anything
 */ parcelHelpers.export(exports, "warn", ()=>warn);
function assert(statement, error) {
    if (!statement) throw new Error(error);
}
function assertRange(value, gte, lte = Infinity) {
    if (!(gte <= value && value <= lte)) throw new RangeError(`Value must be within [${gte}, ${lte}], got: ${value}`);
}
function assertContextRunning(context) {
    // add a warning if the context is not started
    if (!context.isOffline && context.state !== "running") warn('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.');
}
/**
 * The default logger is the console
 */ let defaultLogger = console;
function setLogger(logger) {
    defaultLogger = logger;
}
function log(...args) {
    defaultLogger.log(...args);
}
function warn(...args) {
    defaultLogger.warn(...args);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eMH5A":[function(require,module,exports) {
/**
 * Test if the arg is undefined
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isUndef", ()=>isUndef);
/**
 * Test if the arg is not undefined
 */ parcelHelpers.export(exports, "isDefined", ()=>isDefined);
/**
 * Test if the arg is a function
 */ parcelHelpers.export(exports, "isFunction", ()=>isFunction);
/**
 * Test if the argument is a number.
 */ parcelHelpers.export(exports, "isNumber", ()=>isNumber);
/**
 * Test if the given argument is an object literal (i.e. `{}`);
 */ parcelHelpers.export(exports, "isObject", ()=>isObject);
/**
 * Test if the argument is a boolean.
 */ parcelHelpers.export(exports, "isBoolean", ()=>isBoolean);
/**
 * Test if the argument is an Array
 */ parcelHelpers.export(exports, "isArray", ()=>isArray);
/**
 * Test if the argument is a string.
 */ parcelHelpers.export(exports, "isString", ()=>isString);
/**
 * Test if the argument is in the form of a note in scientific pitch notation.
 * e.g. "C4"
 */ parcelHelpers.export(exports, "isNote", ()=>isNote);
function isUndef(arg) {
    return typeof arg === "undefined";
}
function isDefined(arg) {
    return !isUndef(arg);
}
function isFunction(arg) {
    return typeof arg === "function";
}
function isNumber(arg) {
    return typeof arg === "number";
}
function isObject(arg) {
    return Object.prototype.toString.call(arg) === "[object Object]" && arg.constructor === Object;
}
function isBoolean(arg) {
    return typeof arg === "boolean";
}
function isArray(arg) {
    return Array.isArray(arg);
}
function isString(arg) {
    return typeof arg === "string";
}
function isNote(arg) {
    return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1CuCx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Wrapper around the native AudioContext.
 * @category Core
 */ parcelHelpers.export(exports, "Context", ()=>Context);
var _tslib = require("tslib");
var _ticker = require("../clock/Ticker");
var _advancedTypeCheck = require("../util/AdvancedTypeCheck");
var _defaults = require("../util/Defaults");
var _timeline = require("../util/Timeline");
var _typeCheck = require("../util/TypeCheck");
var _audioContext = require("./AudioContext");
var _contextInitialization = require("./ContextInitialization");
var _baseContext = require("./BaseContext");
var _debug = require("../util/Debug");
class Context extends (0, _baseContext.BaseContext) {
    constructor(){
        super();
        this.name = "Context";
        /**
         * An object containing all of the constants AudioBufferSourceNodes
         */ this._constants = new Map();
        /**
         * All of the setTimeout events.
         */ this._timeouts = new (0, _timeline.Timeline)();
        /**
         * The timeout id counter
         */ this._timeoutIds = 0;
        /**
         * Private indicator if the context has been initialized
         */ this._initialized = false;
        /**
         * Indicates if the context is an OfflineAudioContext or an AudioContext
         */ this.isOffline = false;
        //--------------------------------------------
        // AUDIO WORKLET
        //--------------------------------------------
        /**
         * Maps a module name to promise of the addModule method
         */ this._workletModules = new Map();
        const options = (0, _defaults.optionsFromArguments)(Context.getDefaults(), arguments, [
            "context"
        ]);
        if (options.context) this._context = options.context;
        else this._context = (0, _audioContext.createAudioContext)({
            latencyHint: options.latencyHint
        });
        this._ticker = new (0, _ticker.Ticker)(this.emit.bind(this, "tick"), options.clockSource, options.updateInterval);
        this.on("tick", this._timeoutLoop.bind(this));
        // fwd events from the context
        this._context.onstatechange = ()=>{
            this.emit("statechange", this.state);
        };
        this._setLatencyHint(options.latencyHint);
        this.lookAhead = options.lookAhead;
    }
    static getDefaults() {
        return {
            clockSource: "worker",
            latencyHint: "interactive",
            lookAhead: 0.1,
            updateInterval: 0.05
        };
    }
    /**
     * Finish setting up the context. **You usually do not need to do this manually.**
     */ initialize() {
        if (!this._initialized) {
            // add any additional modules
            (0, _contextInitialization.initializeContext)(this);
            this._initialized = true;
        }
        return this;
    }
    //---------------------------
    // BASE AUDIO CONTEXT METHODS
    //---------------------------
    createAnalyser() {
        return this._context.createAnalyser();
    }
    createOscillator() {
        return this._context.createOscillator();
    }
    createBufferSource() {
        return this._context.createBufferSource();
    }
    createBiquadFilter() {
        return this._context.createBiquadFilter();
    }
    createBuffer(numberOfChannels, length, sampleRate) {
        return this._context.createBuffer(numberOfChannels, length, sampleRate);
    }
    createChannelMerger(numberOfInputs) {
        return this._context.createChannelMerger(numberOfInputs);
    }
    createChannelSplitter(numberOfOutputs) {
        return this._context.createChannelSplitter(numberOfOutputs);
    }
    createConstantSource() {
        return this._context.createConstantSource();
    }
    createConvolver() {
        return this._context.createConvolver();
    }
    createDelay(maxDelayTime) {
        return this._context.createDelay(maxDelayTime);
    }
    createDynamicsCompressor() {
        return this._context.createDynamicsCompressor();
    }
    createGain() {
        return this._context.createGain();
    }
    createIIRFilter(feedForward, feedback) {
        // @ts-ignore
        return this._context.createIIRFilter(feedForward, feedback);
    }
    createPanner() {
        return this._context.createPanner();
    }
    createPeriodicWave(real, imag, constraints) {
        return this._context.createPeriodicWave(real, imag, constraints);
    }
    createStereoPanner() {
        return this._context.createStereoPanner();
    }
    createWaveShaper() {
        return this._context.createWaveShaper();
    }
    createMediaStreamSource(stream) {
        (0, _debug.assert)((0, _advancedTypeCheck.isAudioContext)(this._context), "Not available if OfflineAudioContext");
        const context = this._context;
        return context.createMediaStreamSource(stream);
    }
    createMediaElementSource(element) {
        (0, _debug.assert)((0, _advancedTypeCheck.isAudioContext)(this._context), "Not available if OfflineAudioContext");
        const context = this._context;
        return context.createMediaElementSource(element);
    }
    createMediaStreamDestination() {
        (0, _debug.assert)((0, _advancedTypeCheck.isAudioContext)(this._context), "Not available if OfflineAudioContext");
        const context = this._context;
        return context.createMediaStreamDestination();
    }
    decodeAudioData(audioData) {
        return this._context.decodeAudioData(audioData);
    }
    /**
     * The current time in seconds of the AudioContext.
     */ get currentTime() {
        return this._context.currentTime;
    }
    /**
     * The current time in seconds of the AudioContext.
     */ get state() {
        return this._context.state;
    }
    /**
     * The current time in seconds of the AudioContext.
     */ get sampleRate() {
        return this._context.sampleRate;
    }
    /**
     * The listener
     */ get listener() {
        this.initialize();
        return this._listener;
    }
    set listener(l) {
        (0, _debug.assert)(!this._initialized, "The listener cannot be set after initialization.");
        this._listener = l;
    }
    /**
     * There is only one Transport per Context. It is created on initialization.
     */ get transport() {
        this.initialize();
        return this._transport;
    }
    set transport(t) {
        (0, _debug.assert)(!this._initialized, "The transport cannot be set after initialization.");
        this._transport = t;
    }
    /**
     * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.
     */ get draw() {
        this.initialize();
        return this._draw;
    }
    set draw(d) {
        (0, _debug.assert)(!this._initialized, "Draw cannot be set after initialization.");
        this._draw = d;
    }
    /**
     * A reference to the Context's destination node.
     */ get destination() {
        this.initialize();
        return this._destination;
    }
    set destination(d) {
        (0, _debug.assert)(!this._initialized, "The destination cannot be set after initialization.");
        this._destination = d;
    }
    /**
     * Create an audio worklet node from a name and options. The module
     * must first be loaded using [[addAudioWorkletModule]].
     */ createAudioWorkletNode(name, options) {
        return (0, _audioContext.createAudioWorkletNode)(this.rawContext, name, options);
    }
    /**
     * Add an AudioWorkletProcessor module
     * @param url The url of the module
     * @param name The name of the module
     */ addAudioWorkletModule(url, name) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            (0, _debug.assert)((0, _typeCheck.isDefined)(this.rawContext.audioWorklet), "AudioWorkletNode is only available in a secure context (https or localhost)");
            if (!this._workletModules.has(name)) this._workletModules.set(name, this.rawContext.audioWorklet.addModule(url));
            yield this._workletModules.get(name);
        });
    }
    /**
     * Returns a promise which resolves when all of the worklets have been loaded on this context
     */ workletsAreReady() {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            const promises = [];
            this._workletModules.forEach((promise)=>promises.push(promise));
            yield Promise.all(promises);
        });
    }
    //---------------------------
    // TICKER
    //---------------------------
    /**
     * How often the interval callback is invoked.
     * This number corresponds to how responsive the scheduling
     * can be. context.updateInterval + context.lookAhead gives you the
     * total latency between scheduling an event and hearing it.
     */ get updateInterval() {
        return this._ticker.updateInterval;
    }
    set updateInterval(interval) {
        this._ticker.updateInterval = interval;
    }
    /**
     * What the source of the clock is, either "worker" (default),
     * "timeout", or "offline" (none).
     */ get clockSource() {
        return this._ticker.type;
    }
    set clockSource(type) {
        this._ticker.type = type;
    }
    /**
     * The type of playback, which affects tradeoffs between audio
     * output latency and responsiveness.
     * In addition to setting the value in seconds, the latencyHint also
     * accepts the strings "interactive" (prioritizes low latency),
     * "playback" (prioritizes sustained playback), "balanced" (balances
     * latency and performance).
     * @example
     * // prioritize sustained playback
     * const context = new Tone.Context({ latencyHint: "playback" });
     * // set this context as the global Context
     * Tone.setContext(context);
     * // the global context is gettable with Tone.getContext()
     * console.log(Tone.getContext().latencyHint);
     */ get latencyHint() {
        return this._latencyHint;
    }
    /**
     * Update the lookAhead and updateInterval based on the latencyHint
     */ _setLatencyHint(hint) {
        let lookAheadValue = 0;
        this._latencyHint = hint;
        if ((0, _typeCheck.isString)(hint)) switch(hint){
            case "interactive":
                lookAheadValue = 0.1;
                break;
            case "playback":
                lookAheadValue = 0.5;
                break;
            case "balanced":
                lookAheadValue = 0.25;
                break;
        }
        this.lookAhead = lookAheadValue;
        this.updateInterval = lookAheadValue / 2;
    }
    /**
     * The unwrapped AudioContext or OfflineAudioContext
     */ get rawContext() {
        return this._context;
    }
    /**
     * The current audio context time plus a short [[lookAhead]].
     */ now() {
        return this._context.currentTime + this.lookAhead;
    }
    /**
     * The current audio context time without the [[lookAhead]].
     * In most cases it is better to use [[now]] instead of [[immediate]] since
     * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,
     * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]
     * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.
     */ immediate() {
        return this._context.currentTime;
    }
    /**
     * Starts the audio context from a suspended state. This is required
     * to initially start the AudioContext. See [[Tone.start]]
     */ resume() {
        if ((0, _advancedTypeCheck.isAudioContext)(this._context)) return this._context.resume();
        else return Promise.resolve();
    }
    /**
     * Close the context. Once closed, the context can no longer be used and
     * any AudioNodes created from the context will be silent.
     */ close() {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            if ((0, _advancedTypeCheck.isAudioContext)(this._context)) yield this._context.close();
            if (this._initialized) (0, _contextInitialization.closeContext)(this);
        });
    }
    /**
     * **Internal** Generate a looped buffer at some constant value.
     */ getConstant(val) {
        if (this._constants.has(val)) return this._constants.get(val);
        else {
            const buffer = this._context.createBuffer(1, 128, this._context.sampleRate);
            const arr = buffer.getChannelData(0);
            for(let i = 0; i < arr.length; i++)arr[i] = val;
            const constant = this._context.createBufferSource();
            constant.channelCount = 1;
            constant.channelCountMode = "explicit";
            constant.buffer = buffer;
            constant.loop = true;
            constant.start(0);
            this._constants.set(val, constant);
            return constant;
        }
    }
    /**
     * Clean up. Also closes the audio context.
     */ dispose() {
        super.dispose();
        this._ticker.dispose();
        this._timeouts.dispose();
        Object.keys(this._constants).map((val)=>this._constants[val].disconnect());
        return this;
    }
    //---------------------------
    // TIMEOUTS
    //---------------------------
    /**
     * The private loop which keeps track of the context scheduled timeouts
     * Is invoked from the clock source
     */ _timeoutLoop() {
        const now = this.now();
        let firstEvent = this._timeouts.peek();
        while(this._timeouts.length && firstEvent && firstEvent.time <= now){
            // invoke the callback
            firstEvent.callback();
            // shift the first event off
            this._timeouts.shift();
            // get the next one
            firstEvent = this._timeouts.peek();
        }
    }
    /**
     * A setTimeout which is guaranteed by the clock source.
     * Also runs in the offline context.
     * @param  fn       The callback to invoke
     * @param  timeout  The timeout in seconds
     * @returns ID to use when invoking Context.clearTimeout
     */ setTimeout(fn, timeout) {
        this._timeoutIds++;
        const now = this.now();
        this._timeouts.add({
            callback: fn,
            id: this._timeoutIds,
            time: now + timeout
        });
        return this._timeoutIds;
    }
    /**
     * Clears a previously scheduled timeout with Tone.context.setTimeout
     * @param  id  The ID returned from setTimeout
     */ clearTimeout(id) {
        this._timeouts.forEach((event)=>{
            if (event.id === id) this._timeouts.remove(event);
        });
        return this;
    }
    /**
     * Clear the function scheduled by [[setInterval]]
     */ clearInterval(id) {
        return this.clearTimeout(id);
    }
    /**
     * Adds a repeating event to the context's callback clock
     */ setInterval(fn, interval) {
        const id = ++this._timeoutIds;
        const intervalFn = ()=>{
            const now = this.now();
            this._timeouts.add({
                callback: ()=>{
                    // invoke the callback
                    fn();
                    // invoke the event to repeat it
                    intervalFn();
                },
                id,
                time: now + interval
            });
        };
        // kick it off
        intervalFn();
        return id;
    }
}

},{"tslib":"lRdW5","../clock/Ticker":"jj5sD","../util/AdvancedTypeCheck":"gKVc7","../util/Defaults":"a9M5s","../util/Timeline":"36KJ4","../util/TypeCheck":"eMH5A","./AudioContext":"1NjF0","./ContextInitialization":"iapnw","./BaseContext":"bktf5","../util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lRdW5":[function(require,module,exports) {
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__extends", ()=>__extends);
parcelHelpers.export(exports, "__assign", ()=>__assign);
parcelHelpers.export(exports, "__rest", ()=>__rest);
parcelHelpers.export(exports, "__decorate", ()=>__decorate);
parcelHelpers.export(exports, "__param", ()=>__param);
parcelHelpers.export(exports, "__esDecorate", ()=>__esDecorate);
parcelHelpers.export(exports, "__runInitializers", ()=>__runInitializers);
parcelHelpers.export(exports, "__propKey", ()=>__propKey);
parcelHelpers.export(exports, "__setFunctionName", ()=>__setFunctionName);
parcelHelpers.export(exports, "__metadata", ()=>__metadata);
parcelHelpers.export(exports, "__awaiter", ()=>__awaiter);
parcelHelpers.export(exports, "__generator", ()=>__generator);
parcelHelpers.export(exports, "__createBinding", ()=>__createBinding);
parcelHelpers.export(exports, "__exportStar", ()=>__exportStar);
parcelHelpers.export(exports, "__values", ()=>__values);
parcelHelpers.export(exports, "__read", ()=>__read);
/** @deprecated */ parcelHelpers.export(exports, "__spread", ()=>__spread);
/** @deprecated */ parcelHelpers.export(exports, "__spreadArrays", ()=>__spreadArrays);
parcelHelpers.export(exports, "__spreadArray", ()=>__spreadArray);
parcelHelpers.export(exports, "__await", ()=>__await);
parcelHelpers.export(exports, "__asyncGenerator", ()=>__asyncGenerator);
parcelHelpers.export(exports, "__asyncDelegator", ()=>__asyncDelegator);
parcelHelpers.export(exports, "__asyncValues", ()=>__asyncValues);
parcelHelpers.export(exports, "__makeTemplateObject", ()=>__makeTemplateObject);
parcelHelpers.export(exports, "__importStar", ()=>__importStar);
parcelHelpers.export(exports, "__importDefault", ()=>__importDefault);
parcelHelpers.export(exports, "__classPrivateFieldGet", ()=>__classPrivateFieldGet);
parcelHelpers.export(exports, "__classPrivateFieldSet", ()=>__classPrivateFieldSet);
parcelHelpers.export(exports, "__classPrivateFieldIn", ()=>__classPrivateFieldIn);
parcelHelpers.export(exports, "__addDisposableResource", ()=>__addDisposableResource);
parcelHelpers.export(exports, "__disposeResources", ()=>__disposeResources);
var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
}
function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) {
        if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected");
        return f;
    }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for(var i = decorators.length - 1; i >= 0; i--){
        var context = {};
        for(var p in contextIn)context[p] = p === "access" ? {} : contextIn[p];
        for(var p in contextIn.access)context.access[p] = contextIn.access[p];
        context.addInitializer = function(f) {
            if (done) throw new TypeError("Cannot add initializers after decoration has completed");
            extraInitializers.push(accept(f || null));
        };
        var result = (0, decorators[i])(kind === "accessor" ? {
            get: descriptor.get,
            set: descriptor.set
        } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        } else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
}
function __runInitializers(thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for(var i = 0; i < initializers.length; i++)value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    return useValue ? value : void 0;
}
function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
}
function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", {
        configurable: true,
        value: prefix ? "".concat(prefix, " ", name) : name
    });
}
function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var __createBinding = Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {
        enumerable: true,
        get: function() {
            return m[k];
        }
    };
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
};
function __exportStar(m, o) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function __spread() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
}
function __spreadArrays() {
    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;
    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];
    return r;
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) {
        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    function verb(n) {
        if (g[n]) i[n] = function(v) {
            return new Promise(function(a, b) {
                q.push([
                    n,
                    v,
                    a,
                    b
                ]) > 1 || resume(n, v);
            });
        };
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
}
function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function(e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
        return this;
    }, i;
    function verb(n, f) {
        i[n] = o[n] ? function(v) {
            return (p = !p) ? {
                value: __await(o[n](v)),
                done: false
            } : f ? f(v) : v;
        } : f;
    }
}
function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
}
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) Object.defineProperty(cooked, "raw", {
        value: raw
    });
    else cooked.raw = raw;
    return cooked;
}
var __setModuleDefault = Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
};
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
}
function __importDefault(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}
function __addDisposableResource(env, value, async) {
    if (value !== null && value !== void 0) {
        if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
        var dispose;
        if (async) {
            if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
            dispose = value[Symbol.asyncDispose];
        }
        if (dispose === void 0) {
            if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
            dispose = value[Symbol.dispose];
        }
        if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
        env.stack.push({
            value: value,
            dispose: dispose,
            async: async
        });
    } else if (async) env.stack.push({
        async: true
    });
    return value;
}
var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};
function __disposeResources(env) {
    function fail(e) {
        env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
        env.hasError = true;
    }
    function next() {
        while(env.stack.length){
            var rec = env.stack.pop();
            try {
                var result = rec.dispose && rec.dispose.call(rec.value);
                if (rec.async) return Promise.resolve(result).then(next, function(e) {
                    fail(e);
                    return next();
                });
            } catch (e) {
                fail(e);
            }
        }
        if (env.hasError) throw env.error;
    }
    return next();
}
exports.default = {
    __extends: __extends,
    __assign: __assign,
    __rest: __rest,
    __decorate: __decorate,
    __param: __param,
    __metadata: __metadata,
    __awaiter: __awaiter,
    __generator: __generator,
    __createBinding: __createBinding,
    __exportStar: __exportStar,
    __values: __values,
    __read: __read,
    __spread: __spread,
    __spreadArrays: __spreadArrays,
    __spreadArray: __spreadArray,
    __await: __await,
    __asyncGenerator: __asyncGenerator,
    __asyncDelegator: __asyncDelegator,
    __asyncValues: __asyncValues,
    __makeTemplateObject: __makeTemplateObject,
    __importStar: __importStar,
    __importDefault: __importDefault,
    __classPrivateFieldGet: __classPrivateFieldGet,
    __classPrivateFieldSet: __classPrivateFieldSet,
    __classPrivateFieldIn: __classPrivateFieldIn,
    __addDisposableResource: __addDisposableResource,
    __disposeResources: __disposeResources
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jj5sD":[function(require,module,exports) {
/**
 * A class which provides a reliable callback using either
 * a Web Worker, or if that isn't supported, falls back to setTimeout.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Ticker", ()=>Ticker);
class Ticker {
    constructor(callback, type, updateInterval){
        this._callback = callback;
        this._type = type;
        this._updateInterval = updateInterval;
        // create the clock source for the first time
        this._createClock();
    }
    /**
     * Generate a web worker
     */ _createWorker() {
        const blob = new Blob([
            /* javascript */ `
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval * 1000).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`
        ], {
            type: "text/javascript"
        });
        const blobUrl = URL.createObjectURL(blob);
        const worker = new Worker(blobUrl);
        worker.onmessage = this._callback.bind(this);
        this._worker = worker;
    }
    /**
     * Create a timeout loop
     */ _createTimeout() {
        this._timeout = setTimeout(()=>{
            this._createTimeout();
            this._callback();
        }, this._updateInterval * 1000);
    }
    /**
     * Create the clock source.
     */ _createClock() {
        if (this._type === "worker") try {
            this._createWorker();
        } catch (e) {
            // workers not supported, fallback to timeout
            this._type = "timeout";
            this._createClock();
        }
        else if (this._type === "timeout") this._createTimeout();
    }
    /**
     * Clean up the current clock source
     */ _disposeClock() {
        if (this._timeout) {
            clearTimeout(this._timeout);
            this._timeout = 0;
        }
        if (this._worker) {
            this._worker.terminate();
            this._worker.onmessage = null;
        }
    }
    /**
     * The rate in seconds the ticker will update
     */ get updateInterval() {
        return this._updateInterval;
    }
    set updateInterval(interval) {
        this._updateInterval = Math.max(interval, 128 / 44100);
        if (this._type === "worker") this._worker.postMessage(Math.max(interval * 1000, 1));
    }
    /**
     * The type of the ticker, either a worker or a timeout
     */ get type() {
        return this._type;
    }
    set type(type) {
        this._disposeClock();
        this._type = type;
        this._createClock();
    }
    /**
     * Clean up
     */ dispose() {
        this._disposeClock();
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gKVc7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Test if the given value is an instanceof AudioParam
 */ parcelHelpers.export(exports, "isAudioParam", ()=>isAudioParam);
/**
 * Test if the given value is an instanceof AudioNode
 */ parcelHelpers.export(exports, "isAudioNode", ()=>isAudioNode);
/**
 * Test if the arg is instanceof an OfflineAudioContext
 */ parcelHelpers.export(exports, "isOfflineAudioContext", ()=>isOfflineAudioContext);
/**
 * Test if the arg is an instanceof AudioContext
 */ parcelHelpers.export(exports, "isAudioContext", ()=>isAudioContext);
/**
 * Test if the arg is instanceof an AudioBuffer
 */ parcelHelpers.export(exports, "isAudioBuffer", ()=>isAudioBuffer);
var _standardizedAudioContext = require("standardized-audio-context");
function isAudioParam(arg) {
    return (0, _standardizedAudioContext.isAnyAudioParam)(arg);
}
function isAudioNode(arg) {
    return (0, _standardizedAudioContext.isAnyAudioNode)(arg);
}
function isOfflineAudioContext(arg) {
    return (0, _standardizedAudioContext.isAnyOfflineAudioContext)(arg);
}
function isAudioContext(arg) {
    return (0, _standardizedAudioContext.isAnyAudioContext)(arg);
}
function isAudioBuffer(arg) {
    return arg instanceof AudioBuffer;
}

},{"standardized-audio-context":"J0Z3v","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a9M5s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "deepMerge", ()=>deepMerge);
/**
 * Returns true if the two arrays have the same value for each of the elements
 */ parcelHelpers.export(exports, "deepEquals", ()=>deepEquals);
/**
 * Convert an args array into an object.
 */ parcelHelpers.export(exports, "optionsFromArguments", ()=>optionsFromArguments);
/**
 * Return this instances default values by calling Constructor.getDefaults()
 */ parcelHelpers.export(exports, "getDefaultsFromInstance", ()=>getDefaultsFromInstance);
/**
 * Returns the fallback if the given object is undefined.
 * Take an array of arguments and return a formatted options object.
 */ parcelHelpers.export(exports, "defaultArg", ()=>defaultArg);
/**
 * Remove all of the properties belonging to omit from obj.
 */ parcelHelpers.export(exports, "omitFromObject", ()=>omitFromObject);
var _advancedTypeCheck = require("./AdvancedTypeCheck");
var _typeCheck = require("./TypeCheck");
/**
 * Some objects should not be merged
 */ function noCopy(key, arg) {
    return key === "value" || (0, _advancedTypeCheck.isAudioParam)(arg) || (0, _advancedTypeCheck.isAudioNode)(arg) || (0, _advancedTypeCheck.isAudioBuffer)(arg);
}
function deepMerge(target, ...sources) {
    if (!sources.length) return target;
    const source = sources.shift();
    if ((0, _typeCheck.isObject)(target) && (0, _typeCheck.isObject)(source)) for(const key in source){
        if (noCopy(key, source[key])) target[key] = source[key];
        else if ((0, _typeCheck.isObject)(source[key])) {
            if (!target[key]) Object.assign(target, {
                [key]: {}
            });
            deepMerge(target[key], source[key]);
        } else Object.assign(target, {
            [key]: source[key]
        });
    }
    // @ts-ignore
    return deepMerge(target, ...sources);
}
function deepEquals(arrayA, arrayB) {
    return arrayA.length === arrayB.length && arrayA.every((element, index)=>arrayB[index] === element);
}
function optionsFromArguments(defaults, argsArray, keys = [], objKey) {
    const opts = {};
    const args = Array.from(argsArray);
    // if the first argument is an object and has an object key
    if ((0, _typeCheck.isObject)(args[0]) && objKey && !Reflect.has(args[0], objKey)) {
        // if it's not part of the defaults
        const partOfDefaults = Object.keys(args[0]).some((key)=>Reflect.has(defaults, key));
        if (!partOfDefaults) {
            // merge that key
            deepMerge(opts, {
                [objKey]: args[0]
            });
            // remove the obj key from the keys
            keys.splice(keys.indexOf(objKey), 1);
            // shift the first argument off
            args.shift();
        }
    }
    if (args.length === 1 && (0, _typeCheck.isObject)(args[0])) deepMerge(opts, args[0]);
    else {
        for(let i = 0; i < keys.length; i++)if ((0, _typeCheck.isDefined)(args[i])) opts[keys[i]] = args[i];
    }
    return deepMerge(defaults, opts);
}
function getDefaultsFromInstance(instance) {
    return instance.constructor.getDefaults();
}
function defaultArg(given, fallback) {
    if ((0, _typeCheck.isUndef)(given)) return fallback;
    else return given;
}
function omitFromObject(obj, omit) {
    omit.forEach((prop)=>{
        if (Reflect.has(obj, prop)) delete obj[prop];
    });
    return obj;
}

},{"./AdvancedTypeCheck":"gKVc7","./TypeCheck":"eMH5A","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"36KJ4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A Timeline class for scheduling and maintaining state
 * along a timeline. All events must have a "time" property.
 * Internally, events are stored in time order for fast
 * retrieval.
 */ parcelHelpers.export(exports, "Timeline", ()=>Timeline);
var _tone = require("../Tone");
var _defaults = require("./Defaults");
var _debug = require("./Debug");
var _math = require("./Math");
class Timeline extends (0, _tone.Tone) {
    constructor(){
        super();
        this.name = "Timeline";
        /**
         * The array of scheduled timeline events
         */ this._timeline = [];
        const options = (0, _defaults.optionsFromArguments)(Timeline.getDefaults(), arguments, [
            "memory"
        ]);
        this.memory = options.memory;
        this.increasing = options.increasing;
    }
    static getDefaults() {
        return {
            memory: Infinity,
            increasing: false
        };
    }
    /**
     * The number of items in the timeline.
     */ get length() {
        return this._timeline.length;
    }
    /**
     * Insert an event object onto the timeline. Events must have a "time" attribute.
     * @param event  The event object to insert into the timeline.
     */ add(event) {
        // the event needs to have a time attribute
        (0, _debug.assert)(Reflect.has(event, "time"), "Timeline: events must have a time attribute");
        event.time = event.time.valueOf();
        if (this.increasing && this.length) {
            const lastValue = this._timeline[this.length - 1];
            (0, _debug.assert)((0, _math.GTE)(event.time, lastValue.time), "The time must be greater than or equal to the last scheduled time");
            this._timeline.push(event);
        } else {
            const index = this._search(event.time);
            this._timeline.splice(index + 1, 0, event);
        }
        // if the length is more than the memory, remove the previous ones
        if (this.length > this.memory) {
            const diff = this.length - this.memory;
            this._timeline.splice(0, diff);
        }
        return this;
    }
    /**
     * Remove an event from the timeline.
     * @param  {Object}  event  The event object to remove from the list.
     * @returns {Timeline} this
     */ remove(event) {
        const index = this._timeline.indexOf(event);
        if (index !== -1) this._timeline.splice(index, 1);
        return this;
    }
    /**
     * Get the nearest event whose time is less than or equal to the given time.
     * @param  time  The time to query.
     */ get(time, param = "time") {
        const index = this._search(time, param);
        if (index !== -1) return this._timeline[index];
        else return null;
    }
    /**
     * Return the first event in the timeline without removing it
     * @returns {Object} The first event object
     */ peek() {
        return this._timeline[0];
    }
    /**
     * Return the first event in the timeline and remove it
     */ shift() {
        return this._timeline.shift();
    }
    /**
     * Get the event which is scheduled after the given time.
     * @param  time  The time to query.
     */ getAfter(time, param = "time") {
        const index = this._search(time, param);
        if (index + 1 < this._timeline.length) return this._timeline[index + 1];
        else return null;
    }
    /**
     * Get the event before the event at the given time.
     * @param  time  The time to query.
     */ getBefore(time) {
        const len = this._timeline.length;
        // if it's after the last item, return the last item
        if (len > 0 && this._timeline[len - 1].time < time) return this._timeline[len - 1];
        const index = this._search(time);
        if (index - 1 >= 0) return this._timeline[index - 1];
        else return null;
    }
    /**
     * Cancel events at and after the given time
     * @param  after  The time to query.
     */ cancel(after) {
        if (this._timeline.length > 1) {
            let index = this._search(after);
            if (index >= 0) {
                if ((0, _math.EQ)(this._timeline[index].time, after)) {
                    // get the first item with that time
                    for(let i = index; i >= 0; i--){
                        if ((0, _math.EQ)(this._timeline[i].time, after)) index = i;
                        else break;
                    }
                    this._timeline = this._timeline.slice(0, index);
                } else this._timeline = this._timeline.slice(0, index + 1);
            } else this._timeline = [];
        } else if (this._timeline.length === 1) // the first item's time
        {
            if ((0, _math.GTE)(this._timeline[0].time, after)) this._timeline = [];
        }
        return this;
    }
    /**
     * Cancel events before or equal to the given time.
     * @param  time  The time to cancel before.
     */ cancelBefore(time) {
        const index = this._search(time);
        if (index >= 0) this._timeline = this._timeline.slice(index + 1);
        return this;
    }
    /**
     * Returns the previous event if there is one. null otherwise
     * @param  event The event to find the previous one of
     * @return The event right before the given event
     */ previousEvent(event) {
        const index = this._timeline.indexOf(event);
        if (index > 0) return this._timeline[index - 1];
        else return null;
    }
    /**
     * Does a binary search on the timeline array and returns the
     * nearest event index whose time is after or equal to the given time.
     * If a time is searched before the first index in the timeline, -1 is returned.
     * If the time is after the end, the index of the last item is returned.
     */ _search(time, param = "time") {
        if (this._timeline.length === 0) return -1;
        let beginning = 0;
        const len = this._timeline.length;
        let end = len;
        if (len > 0 && this._timeline[len - 1][param] <= time) return len - 1;
        while(beginning < end){
            // calculate the midpoint for roughly equal partition
            let midPoint = Math.floor(beginning + (end - beginning) / 2);
            const event = this._timeline[midPoint];
            const nextEvent = this._timeline[midPoint + 1];
            if ((0, _math.EQ)(event[param], time)) {
                // choose the last one that has the same time
                for(let i = midPoint; i < this._timeline.length; i++){
                    const testEvent = this._timeline[i];
                    if ((0, _math.EQ)(testEvent[param], time)) midPoint = i;
                    else break;
                }
                return midPoint;
            } else if ((0, _math.LT)(event[param], time) && (0, _math.GT)(nextEvent[param], time)) return midPoint;
            else if ((0, _math.GT)(event[param], time)) // search lower
            end = midPoint;
            else // search upper
            beginning = midPoint + 1;
        }
        return -1;
    }
    /**
     * Internal iterator. Applies extra safety checks for
     * removing items from the array.
     */ _iterate(callback, lowerBound = 0, upperBound = this._timeline.length - 1) {
        this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);
    }
    /**
     * Iterate over everything in the array
     * @param  callback The callback to invoke with every item
     */ forEach(callback) {
        this._iterate(callback);
        return this;
    }
    /**
     * Iterate over everything in the array at or before the given time.
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */ forEachBefore(time, callback) {
        // iterate over the items in reverse so that removing an item doesn't break things
        const upperBound = this._search(time);
        if (upperBound !== -1) this._iterate(callback, 0, upperBound);
        return this;
    }
    /**
     * Iterate over everything in the array after the given time.
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */ forEachAfter(time, callback) {
        // iterate over the items in reverse so that removing an item doesn't break things
        const lowerBound = this._search(time);
        this._iterate(callback, lowerBound + 1);
        return this;
    }
    /**
     * Iterate over everything in the array between the startTime and endTime.
     * The timerange is inclusive of the startTime, but exclusive of the endTime.
     * range = [startTime, endTime).
     * @param  startTime The time to check if items are before
     * @param  endTime The end of the test interval.
     * @param  callback The callback to invoke with every item
     */ forEachBetween(startTime, endTime, callback) {
        let lowerBound = this._search(startTime);
        let upperBound = this._search(endTime);
        if (lowerBound !== -1 && upperBound !== -1) {
            if (this._timeline[lowerBound].time !== startTime) lowerBound += 1;
            // exclusive of the end time
            if (this._timeline[upperBound].time === endTime) upperBound -= 1;
            this._iterate(callback, lowerBound, upperBound);
        } else if (lowerBound === -1) this._iterate(callback, 0, upperBound);
        return this;
    }
    /**
     * Iterate over everything in the array at or after the given time. Similar to
     * forEachAfter, but includes the item(s) at the given time.
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */ forEachFrom(time, callback) {
        // iterate over the items in reverse so that removing an item doesn't break things
        let lowerBound = this._search(time);
        // work backwards until the event time is less than time
        while(lowerBound >= 0 && this._timeline[lowerBound].time >= time)lowerBound--;
        this._iterate(callback, lowerBound + 1);
        return this;
    }
    /**
     * Iterate over everything in the array at the given time
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */ forEachAtTime(time, callback) {
        // iterate over the items in reverse so that removing an item doesn't break things
        const upperBound = this._search(time);
        if (upperBound !== -1 && (0, _math.EQ)(this._timeline[upperBound].time, time)) {
            let lowerBound = upperBound;
            for(let i = upperBound; i >= 0; i--){
                if ((0, _math.EQ)(this._timeline[i].time, time)) lowerBound = i;
                else break;
            }
            this._iterate((event)=>{
                callback(event);
            }, lowerBound, upperBound);
        }
        return this;
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this._timeline = [];
        return this;
    }
}

},{"../Tone":"6Gzxl","./Defaults":"a9M5s","./Debug":"2lOIQ","./Math":"7mtt2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6Gzxl":[function(require,module,exports) {
/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * @class  Tone is the base class of all other classes.
 * @category Core
 * @constructor
 */ parcelHelpers.export(exports, "Tone", ()=>Tone);
var _version = require("../version");
var _audioContext = require("./context/AudioContext");
var _debug = require("./util/Debug");
class Tone {
    constructor(){
        //-------------------------------------
        // 	DEBUGGING
        //-------------------------------------
        /**
         * Set this debug flag to log all events that happen in this class.
         */ this.debug = false;
        //-------------------------------------
        // 	DISPOSING
        //-------------------------------------
        /**
         * Indicates if the instance was disposed
         */ this._wasDisposed = false;
    }
    /**
     * Returns all of the default options belonging to the class.
     */ static getDefaults() {
        return {};
    }
    /**
     * Prints the outputs to the console log for debugging purposes.
     * Prints the contents only if either the object has a property
     * called `debug` set to true, or a variable called TONE_DEBUG_CLASS
     * is set to the name of the class.
     * @example
     * const osc = new Tone.Oscillator();
     * // prints all logs originating from this oscillator
     * osc.debug = true;
     * // calls to start/stop will print in the console
     * osc.start();
     */ log(...args) {
        // if the object is either set to debug = true
        // or if there is a string on the Tone.global.with the class name
        if (this.debug || (0, _audioContext.theWindow) && this.toString() === (0, _audioContext.theWindow).TONE_DEBUG_CLASS) (0, _debug.log)(this, ...args);
    }
    /**
     * disconnect and dispose.
     */ dispose() {
        this._wasDisposed = true;
        return this;
    }
    /**
     * Indicates if the instance was disposed. 'Disposing' an
     * instance means that all of the Web Audio nodes that were
     * created for the instance are disconnected and freed for garbage collection.
     */ get disposed() {
        return this._wasDisposed;
    }
    /**
     * Convert the class to a string
     * @example
     * const osc = new Tone.Oscillator();
     * console.log(osc.toString());
     */ toString() {
        return this.name;
    }
}
/**
 * The version number semver
 */ Tone.version = (0, _version.version);

},{"../version":"kWqOI","./context/AudioContext":"1NjF0","./util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7mtt2":[function(require,module,exports) {
/**
 * The threshold for correctness for operators. Less than one sample even
 * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Test if A is greater than B
 */ parcelHelpers.export(exports, "GT", ()=>GT);
/**
 * Test if A is greater than or equal to B
 */ parcelHelpers.export(exports, "GTE", ()=>GTE);
/**
 * Test if A is less than B
 */ parcelHelpers.export(exports, "LT", ()=>LT);
/**
 * Test if A is less than B
 */ parcelHelpers.export(exports, "EQ", ()=>EQ);
/**
 * Clamp the value within the given range
 */ parcelHelpers.export(exports, "clamp", ()=>clamp);
const EPSILON = 1e-6;
function GT(a, b) {
    return a > b + EPSILON;
}
function GTE(a, b) {
    return GT(a, b) || EQ(a, b);
}
function LT(a, b) {
    return a + EPSILON < b;
}
function EQ(a, b) {
    return Math.abs(a - b) < EPSILON;
}
function clamp(value, min, max) {
    return Math.max(Math.min(value, max), min);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iapnw":[function(require,module,exports) {
//-------------------------------------
// INITIALIZING NEW CONTEXT
//-------------------------------------
/**
 * Array of callbacks to invoke when a new context is created
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Used internally to setup a new Context
 */ parcelHelpers.export(exports, "onContextInit", ()=>onContextInit);
/**
 * Invoke any classes which need to also be initialized when a new context is created.
 */ parcelHelpers.export(exports, "initializeContext", ()=>initializeContext);
/**
 * Used internally to tear down a Context
 */ parcelHelpers.export(exports, "onContextClose", ()=>onContextClose);
parcelHelpers.export(exports, "closeContext", ()=>closeContext);
const notifyNewContext = [];
function onContextInit(cb) {
    notifyNewContext.push(cb);
}
function initializeContext(ctx) {
    // add any additional modules
    notifyNewContext.forEach((cb)=>cb(ctx));
}
/**
 * Array of callbacks to invoke when a new context is created
 */ const notifyCloseContext = [];
function onContextClose(cb) {
    notifyCloseContext.push(cb);
}
function closeContext(ctx) {
    // add any additional modules
    notifyCloseContext.forEach((cb)=>cb(ctx));
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bktf5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BaseContext", ()=>BaseContext);
var _emitter = require("../util/Emitter");
class BaseContext extends (0, _emitter.Emitter) {
    constructor(){
        super(...arguments);
        this.isOffline = false;
    }
    /*
     * This is a placeholder so that JSON.stringify does not throw an error
     * This matches what JSON.stringify(audioContext) returns on a native
     * audioContext instance.
     */ toJSON() {
        return {};
    }
}

},{"../util/Emitter":"4ROyf","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4ROyf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Emitter gives classes which extend it
 * the ability to listen for and emit events.
 * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).
 * MIT (c) 2011 Jerome Etienne.
 * @category Core
 */ parcelHelpers.export(exports, "Emitter", ()=>Emitter);
var _tone = require("../Tone");
var _typeCheck = require("./TypeCheck");
class Emitter extends (0, _tone.Tone) {
    constructor(){
        super(...arguments);
        this.name = "Emitter";
    }
    /**
     * Bind a callback to a specific event.
     * @param  event     The name of the event to listen for.
     * @param  callback  The callback to invoke when the event is emitted
     */ on(event, callback) {
        // split the event
        const events = event.split(/\W+/);
        events.forEach((eventName)=>{
            if ((0, _typeCheck.isUndef)(this._events)) this._events = {};
            if (!this._events.hasOwnProperty(eventName)) this._events[eventName] = [];
            this._events[eventName].push(callback);
        });
        return this;
    }
    /**
     * Bind a callback which is only invoked once
     * @param  event     The name of the event to listen for.
     * @param  callback  The callback to invoke when the event is emitted
     */ once(event, callback) {
        const boundCallback = (...args)=>{
            // invoke the callback
            callback(...args);
            // remove the event
            this.off(event, boundCallback);
        };
        this.on(event, boundCallback);
        return this;
    }
    /**
     * Remove the event listener.
     * @param  event     The event to stop listening to.
     * @param  callback  The callback which was bound to the event with Emitter.on.
     *                   If no callback is given, all callbacks events are removed.
     */ off(event, callback) {
        const events = event.split(/\W+/);
        events.forEach((eventName)=>{
            if ((0, _typeCheck.isUndef)(this._events)) this._events = {};
            if (this._events.hasOwnProperty(event)) {
                if ((0, _typeCheck.isUndef)(callback)) this._events[event] = [];
                else {
                    const eventList = this._events[event];
                    for(let i = eventList.length - 1; i >= 0; i--)if (eventList[i] === callback) eventList.splice(i, 1);
                }
            }
        });
        return this;
    }
    /**
     * Invoke all of the callbacks bound to the event
     * with any arguments passed in.
     * @param  event  The name of the event.
     * @param args The arguments to pass to the functions listening.
     */ emit(event, ...args) {
        if (this._events) {
            if (this._events.hasOwnProperty(event)) {
                const eventList = this._events[event].slice(0);
                for(let i = 0, len = eventList.length; i < len; i++)eventList[i].apply(this, args);
            }
        }
        return this;
    }
    /**
     * Add Emitter functions (on/off/emit) to the object
     */ static mixin(constr) {
        // instance._events = {};
        [
            "on",
            "once",
            "off",
            "emit"
        ].forEach((name)=>{
            const property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);
            Object.defineProperty(constr.prototype, name, property);
        });
    }
    /**
     * Clean up
     */ dispose() {
        super.dispose();
        this._events = undefined;
        return this;
    }
}

},{"../Tone":"6Gzxl","./TypeCheck":"eMH5A","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lf5qO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DummyContext", ()=>DummyContext);
var _tslib = require("tslib");
var _baseContext = require("./BaseContext");
class DummyContext extends (0, _baseContext.BaseContext) {
    constructor(){
        super(...arguments);
        this.lookAhead = 0;
        this.latencyHint = 0;
        this.isOffline = false;
    }
    //---------------------------
    // BASE AUDIO CONTEXT METHODS
    //---------------------------
    createAnalyser() {
        return {};
    }
    createOscillator() {
        return {};
    }
    createBufferSource() {
        return {};
    }
    createBiquadFilter() {
        return {};
    }
    createBuffer(_numberOfChannels, _length, _sampleRate) {
        return {};
    }
    createChannelMerger(_numberOfInputs) {
        return {};
    }
    createChannelSplitter(_numberOfOutputs) {
        return {};
    }
    createConstantSource() {
        return {};
    }
    createConvolver() {
        return {};
    }
    createDelay(_maxDelayTime) {
        return {};
    }
    createDynamicsCompressor() {
        return {};
    }
    createGain() {
        return {};
    }
    createIIRFilter(_feedForward, _feedback) {
        return {};
    }
    createPanner() {
        return {};
    }
    createPeriodicWave(_real, _imag, _constraints) {
        return {};
    }
    createStereoPanner() {
        return {};
    }
    createWaveShaper() {
        return {};
    }
    createMediaStreamSource(_stream) {
        return {};
    }
    createMediaElementSource(_element) {
        return {};
    }
    createMediaStreamDestination() {
        return {};
    }
    decodeAudioData(_audioData) {
        return Promise.resolve({});
    }
    //---------------------------
    // TONE AUDIO CONTEXT METHODS
    //---------------------------
    createAudioWorkletNode(_name, _options) {
        return {};
    }
    get rawContext() {
        return {};
    }
    addAudioWorkletModule(_url, _name) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            return Promise.resolve();
        });
    }
    resume() {
        return Promise.resolve();
    }
    setTimeout(_fn, _timeout) {
        return 0;
    }
    clearTimeout(_id) {
        return this;
    }
    setInterval(_fn, _interval) {
        return 0;
    }
    clearInterval(_id) {
        return this;
    }
    getConstant(_val) {
        return {};
    }
    get currentTime() {
        return 0;
    }
    get state() {
        return {};
    }
    get sampleRate() {
        return 0;
    }
    get listener() {
        return {};
    }
    get transport() {
        return {};
    }
    get draw() {
        return {};
    }
    set draw(_d) {}
    get destination() {
        return {};
    }
    set destination(_d) {}
    now() {
        return 0;
    }
    immediate() {
        return 0;
    }
}

},{"tslib":"lRdW5","./BaseContext":"bktf5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8VnAL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Wrapper around the OfflineAudioContext
 * @category Core
 * @example
 * // generate a single channel, 0.5 second buffer
 * const context = new Tone.OfflineContext(1, 0.5, 44100);
 * const osc = new Tone.Oscillator({ context });
 * context.render().then(buffer => {
 * 	console.log(buffer.numberOfChannels, buffer.duration);
 * });
 */ parcelHelpers.export(exports, "OfflineContext", ()=>OfflineContext);
var _tslib = require("tslib");
var _audioContext = require("../context/AudioContext");
var _context = require("../context/Context");
var _advancedTypeCheck = require("../util/AdvancedTypeCheck");
var _toneAudioBuffer = require("./ToneAudioBuffer");
class OfflineContext extends (0, _context.Context) {
    constructor(){
        super({
            clockSource: "offline",
            context: (0, _advancedTypeCheck.isOfflineAudioContext)(arguments[0]) ? arguments[0] : (0, _audioContext.createOfflineAudioContext)(arguments[0], arguments[1] * arguments[2], arguments[2]),
            lookAhead: 0,
            updateInterval: (0, _advancedTypeCheck.isOfflineAudioContext)(arguments[0]) ? 128 / arguments[0].sampleRate : 128 / arguments[2]
        });
        this.name = "OfflineContext";
        /**
         * An artificial clock source
         */ this._currentTime = 0;
        this.isOffline = true;
        this._duration = (0, _advancedTypeCheck.isOfflineAudioContext)(arguments[0]) ? arguments[0].length / arguments[0].sampleRate : arguments[1];
    }
    /**
     * Override the now method to point to the internal clock time
     */ now() {
        return this._currentTime;
    }
    /**
     * Same as this.now()
     */ get currentTime() {
        return this._currentTime;
    }
    /**
     * Render just the clock portion of the audio context.
     */ _renderClock(asynchronous) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            let index = 0;
            while(this._duration - this._currentTime >= 0){
                // invoke all the callbacks on that time
                this.emit("tick");
                // increment the clock in block-sized chunks
                this._currentTime += 128 / this.sampleRate;
                // yield once a second of audio
                index++;
                const yieldEvery = Math.floor(this.sampleRate / 128);
                if (asynchronous && index % yieldEvery === 0) yield new Promise((done)=>setTimeout(done, 1));
            }
        });
    }
    /**
     * Render the output of the OfflineContext
     * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.
     */ render(asynchronous = true) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            yield this.workletsAreReady();
            yield this._renderClock(asynchronous);
            const buffer = yield this._context.startRendering();
            return new (0, _toneAudioBuffer.ToneAudioBuffer)(buffer);
        });
    }
    /**
     * Close the context
     */ close() {
        return Promise.resolve();
    }
}

},{"tslib":"lRdW5","../context/AudioContext":"1NjF0","../context/Context":"1CuCx","../util/AdvancedTypeCheck":"gKVc7","./ToneAudioBuffer":"8aSPC","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8aSPC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all
 * classes that make requests for audio files such as Tone.Player,
 * Tone.Sampler and Tone.Convolver.
 * @example
 * const buffer = new Tone.ToneAudioBuffer("https://tonejs.github.io/audio/casio/A1.mp3", () => {
 * 	console.log("loaded");
 * });
 * @category Core
 */ parcelHelpers.export(exports, "ToneAudioBuffer", ()=>ToneAudioBuffer);
var _tslib = require("tslib");
var _global = require("../Global");
var _tone = require("../Tone");
var _advancedTypeCheck = require("../util/AdvancedTypeCheck");
var _defaults = require("../util/Defaults");
var _interface = require("../util/Interface");
var _typeCheck = require("../util/TypeCheck");
var _debug = require("../util/Debug");
class ToneAudioBuffer extends (0, _tone.Tone) {
    constructor(){
        super();
        this.name = "ToneAudioBuffer";
        /**
         * Callback when the buffer is loaded.
         */ this.onload = (0, _interface.noOp);
        const options = (0, _defaults.optionsFromArguments)(ToneAudioBuffer.getDefaults(), arguments, [
            "url",
            "onload",
            "onerror"
        ]);
        this.reverse = options.reverse;
        this.onload = options.onload;
        if (options.url && (0, _advancedTypeCheck.isAudioBuffer)(options.url) || options.url instanceof ToneAudioBuffer) this.set(options.url);
        else if ((0, _typeCheck.isString)(options.url)) // initiate the download
        this.load(options.url).catch(options.onerror);
    }
    static getDefaults() {
        return {
            onerror: (0, _interface.noOp),
            onload: (0, _interface.noOp),
            reverse: false
        };
    }
    /**
     * The sample rate of the AudioBuffer
     */ get sampleRate() {
        if (this._buffer) return this._buffer.sampleRate;
        else return (0, _global.getContext)().sampleRate;
    }
    /**
     * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.
     */ set(buffer) {
        if (buffer instanceof ToneAudioBuffer) {
            // if it's loaded, set it
            if (buffer.loaded) this._buffer = buffer.get();
            else // otherwise when it's loaded, invoke it's callback
            buffer.onload = ()=>{
                this.set(buffer);
                this.onload(this);
            };
        } else this._buffer = buffer;
        // reverse it initially
        if (this._reversed) this._reverse();
        return this;
    }
    /**
     * The audio buffer stored in the object.
     */ get() {
        return this._buffer;
    }
    /**
     * Makes an fetch request for the selected url then decodes the file as an audio buffer.
     * Invokes the callback once the audio buffer loads.
     * @param url The url of the buffer to load. filetype support depends on the browser.
     * @returns A Promise which resolves with this ToneAudioBuffer
     */ load(url) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            const doneLoading = ToneAudioBuffer.load(url).then((audioBuffer)=>{
                this.set(audioBuffer);
                // invoke the onload method
                this.onload(this);
            });
            ToneAudioBuffer.downloads.push(doneLoading);
            try {
                yield doneLoading;
            } finally{
                // remove the downloaded file
                const index = ToneAudioBuffer.downloads.indexOf(doneLoading);
                ToneAudioBuffer.downloads.splice(index, 1);
            }
            return this;
        });
    }
    /**
     * clean up
     */ dispose() {
        super.dispose();
        this._buffer = undefined;
        return this;
    }
    /**
     * Set the audio buffer from the array.
     * To create a multichannel AudioBuffer, pass in a multidimensional array.
     * @param array The array to fill the audio buffer
     */ fromArray(array) {
        const isMultidimensional = (0, _typeCheck.isArray)(array) && array[0].length > 0;
        const channels = isMultidimensional ? array.length : 1;
        const len = isMultidimensional ? array[0].length : array.length;
        const context = (0, _global.getContext)();
        const buffer = context.createBuffer(channels, len, context.sampleRate);
        const multiChannelArray = !isMultidimensional && channels === 1 ? [
            array
        ] : array;
        for(let c = 0; c < channels; c++)buffer.copyToChannel(multiChannelArray[c], c);
        this._buffer = buffer;
        return this;
    }
    /**
     * Sums multiple channels into 1 channel
     * @param chanNum Optionally only copy a single channel from the array.
     */ toMono(chanNum) {
        if ((0, _typeCheck.isNumber)(chanNum)) this.fromArray(this.toArray(chanNum));
        else {
            let outputArray = new Float32Array(this.length);
            const numChannels = this.numberOfChannels;
            for(let channel = 0; channel < numChannels; channel++){
                const channelArray = this.toArray(channel);
                for(let i = 0; i < channelArray.length; i++)outputArray[i] += channelArray[i];
            }
            // divide by the number of channels
            outputArray = outputArray.map((sample)=>sample / numChannels);
            this.fromArray(outputArray);
        }
        return this;
    }
    /**
     * Get the buffer as an array. Single channel buffers will return a 1-dimensional
     * Float32Array, and multichannel buffers will return multidimensional arrays.
     * @param channel Optionally only copy a single channel from the array.
     */ toArray(channel) {
        if ((0, _typeCheck.isNumber)(channel)) return this.getChannelData(channel);
        else if (this.numberOfChannels === 1) return this.toArray(0);
        else {
            const ret = [];
            for(let c = 0; c < this.numberOfChannels; c++)ret[c] = this.getChannelData(c);
            return ret;
        }
    }
    /**
     * Returns the Float32Array representing the PCM audio data for the specific channel.
     * @param  channel  The channel number to return
     * @return The audio as a TypedArray
     */ getChannelData(channel) {
        if (this._buffer) return this._buffer.getChannelData(channel);
        else return new Float32Array(0);
    }
    /**
     * Cut a subsection of the array and return a buffer of the
     * subsection. Does not modify the original buffer
     * @param start The time to start the slice
     * @param end The end time to slice. If none is given will default to the end of the buffer
     */ slice(start, end = this.duration) {
        const startSamples = Math.floor(start * this.sampleRate);
        const endSamples = Math.floor(end * this.sampleRate);
        (0, _debug.assert)(startSamples < endSamples, "The start time must be less than the end time");
        const length = endSamples - startSamples;
        const retBuffer = (0, _global.getContext)().createBuffer(this.numberOfChannels, length, this.sampleRate);
        for(let channel = 0; channel < this.numberOfChannels; channel++)retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);
        return new ToneAudioBuffer(retBuffer);
    }
    /**
     * Reverse the buffer.
     */ _reverse() {
        if (this.loaded) for(let i = 0; i < this.numberOfChannels; i++)this.getChannelData(i).reverse();
        return this;
    }
    /**
     * If the buffer is loaded or not
     */ get loaded() {
        return this.length > 0;
    }
    /**
     * The duration of the buffer in seconds.
     */ get duration() {
        if (this._buffer) return this._buffer.duration;
        else return 0;
    }
    /**
     * The length of the buffer in samples
     */ get length() {
        if (this._buffer) return this._buffer.length;
        else return 0;
    }
    /**
     * The number of discrete audio channels. Returns 0 if no buffer is loaded.
     */ get numberOfChannels() {
        if (this._buffer) return this._buffer.numberOfChannels;
        else return 0;
    }
    /**
     * Reverse the buffer.
     */ get reverse() {
        return this._reversed;
    }
    set reverse(rev) {
        if (this._reversed !== rev) {
            this._reversed = rev;
            this._reverse();
        }
    }
    /**
     * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,
     * pass in a multidimensional array.
     * @param array The array to fill the audio buffer
     * @return A ToneAudioBuffer created from the array
     */ static fromArray(array) {
        return new ToneAudioBuffer().fromArray(array);
    }
    /**
     * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer
     * @param  url The url to load.
     * @return A promise which resolves to a ToneAudioBuffer
     */ static fromUrl(url) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            const buffer = new ToneAudioBuffer();
            return yield buffer.load(url);
        });
    }
    /**
     * Loads a url using fetch and returns the AudioBuffer.
     */ static load(url) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            // test if the url contains multiple extensions
            const matches = url.match(/\[([^\]\[]+\|.+)\]$/);
            if (matches) {
                const extensions = matches[1].split("|");
                let extension = extensions[0];
                for (const ext of extensions)if (ToneAudioBuffer.supportsType(ext)) {
                    extension = ext;
                    break;
                }
                url = url.replace(matches[0], extension);
            }
            // make sure there is a slash between the baseUrl and the url
            const baseUrl = ToneAudioBuffer.baseUrl === "" || ToneAudioBuffer.baseUrl.endsWith("/") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + "/";
            const response = yield fetch(baseUrl + url);
            if (!response.ok) throw new Error(`could not load url: ${url}`);
            const arrayBuffer = yield response.arrayBuffer();
            const audioBuffer = yield (0, _global.getContext)().decodeAudioData(arrayBuffer);
            return audioBuffer;
        });
    }
    /**
     * Checks a url's extension to see if the current browser can play that file type.
     * @param url The url/extension to test
     * @return If the file extension can be played
     * @static
     * @example
     * Tone.ToneAudioBuffer.supportsType("wav"); // returns true
     * Tone.ToneAudioBuffer.supportsType("path/to/file.wav"); // returns true
     */ static supportsType(url) {
        const extensions = url.split(".");
        const extension = extensions[extensions.length - 1];
        const response = document.createElement("audio").canPlayType("audio/" + extension);
        return response !== "";
    }
    /**
     * Returns a Promise which resolves when all of the buffers have loaded
     */ static loaded() {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            // this makes sure that the function is always async
            yield Promise.resolve();
            while(ToneAudioBuffer.downloads.length)yield ToneAudioBuffer.downloads[0];
        });
    }
}
//-------------------------------------
// STATIC METHODS
//-------------------------------------
/**
 * A path which is prefixed before every url.
 */ ToneAudioBuffer.baseUrl = "";
/**
 * All of the downloads
 */ ToneAudioBuffer.downloads = [];

},{"tslib":"lRdW5","../Global":"79THw","../Tone":"6Gzxl","../util/AdvancedTypeCheck":"gKVc7","../util/Defaults":"a9M5s","../util/Interface":"hVOjA","../util/TypeCheck":"eMH5A","../util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hVOjA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Make the property not writable using `defineProperty`. Internal use only.
 */ parcelHelpers.export(exports, "readOnly", ()=>readOnly);
/**
 * Make an attribute writeable. Internal use only.
 */ parcelHelpers.export(exports, "writable", ()=>writable);
parcelHelpers.export(exports, "noOp", ()=>noOp);
var _typeCheck = require("./TypeCheck");
function readOnly(target, property) {
    if ((0, _typeCheck.isArray)(property)) property.forEach((str)=>readOnly(target, str));
    else Object.defineProperty(target, property, {
        enumerable: true,
        writable: false
    });
}
function writable(target, property) {
    if ((0, _typeCheck.isArray)(property)) property.forEach((str)=>writable(target, str));
    else Object.defineProperty(target, property, {
        writable: true
    });
}
const noOp = ()=>{
// no operation here!
};

},{"./TypeCheck":"eMH5A","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bbfCi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _index = require("./core/index");
parcelHelpers.exportAll(_index, exports);
var _index1 = require("./source/index");
parcelHelpers.exportAll(_index1, exports);
var _index2 = require("./signal/index");
parcelHelpers.exportAll(_index2, exports);
var _index3 = require("./instrument/index");
parcelHelpers.exportAll(_index3, exports);
var _index4 = require("./event/index");
parcelHelpers.exportAll(_index4, exports);
var _index5 = require("./effect/index");
parcelHelpers.exportAll(_index5, exports);
var _index6 = require("./component/index");
parcelHelpers.exportAll(_index6, exports);

},{"./core/index":"leLmE","./source/index":"1mJV8","./signal/index":"kDXus","./instrument/index":"ed4wq","./event/index":"eiKIt","./effect/index":"hRVtA","./component/index":"ab9jt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"leLmE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "dbToGain", ()=>(0, _conversions.dbToGain));
parcelHelpers.export(exports, "gainToDb", ()=>(0, _conversions.gainToDb));
parcelHelpers.export(exports, "intervalToFrequencyRatio", ()=>(0, _conversions.intervalToFrequencyRatio));
parcelHelpers.export(exports, "ftom", ()=>(0, _conversions.ftom));
parcelHelpers.export(exports, "mtof", ()=>(0, _conversions.mtof));
parcelHelpers.export(exports, "optionsFromArguments", ()=>(0, _defaults.optionsFromArguments));
parcelHelpers.export(exports, "defaultArg", ()=>(0, _defaults.defaultArg));
parcelHelpers.export(exports, "Unit", ()=>_units);
parcelHelpers.export(exports, "debug", ()=>_debug);
var _clock = require("./clock/Clock");
parcelHelpers.exportAll(_clock, exports);
// export * from "./clock/Transport";
var _context = require("./context/Context");
parcelHelpers.exportAll(_context, exports);
var _baseContext = require("./context/BaseContext");
parcelHelpers.exportAll(_baseContext, exports);
var _delay = require("./context/Delay");
parcelHelpers.exportAll(_delay, exports);
// export * from "./context/Destination";
var _gain = require("./context/Gain");
parcelHelpers.exportAll(_gain, exports);
var _offline = require("./context/Offline");
parcelHelpers.exportAll(_offline, exports);
var _offlineContext = require("./context/OfflineContext");
parcelHelpers.exportAll(_offlineContext, exports);
var _param = require("./context/Param");
parcelHelpers.exportAll(_param, exports);
var _toneAudioBuffer = require("./context/ToneAudioBuffer");
parcelHelpers.exportAll(_toneAudioBuffer, exports);
var _toneAudioBuffers = require("./context/ToneAudioBuffers");
parcelHelpers.exportAll(_toneAudioBuffers, exports);
var _toneAudioNode = require("./context/ToneAudioNode");
parcelHelpers.exportAll(_toneAudioNode, exports);
var _frequency = require("./type/Frequency");
parcelHelpers.exportAll(_frequency, exports);
var _midi = require("./type/Midi");
parcelHelpers.exportAll(_midi, exports);
var _time = require("./type/Time");
parcelHelpers.exportAll(_time, exports);
var _ticks = require("./type/Ticks");
parcelHelpers.exportAll(_ticks, exports);
var _transportTime = require("./type/TransportTime");
parcelHelpers.exportAll(_transportTime, exports);
var _draw = require("./util/Draw");
var _emitter = require("./util/Emitter");
parcelHelpers.exportAll(_emitter, exports);
var _intervalTimeline = require("./util/IntervalTimeline");
parcelHelpers.exportAll(_intervalTimeline, exports);
var _stateTimeline = require("./util/StateTimeline");
parcelHelpers.exportAll(_stateTimeline, exports);
var _timeline = require("./util/Timeline");
parcelHelpers.exportAll(_timeline, exports);
var _typeCheck = require("./util/TypeCheck");
parcelHelpers.exportAll(_typeCheck, exports);
var _conversions = require("./type/Conversions");
var _defaults = require("./util/Defaults");
// get the units and export them under the "Unit" namespace
var _units = require("./type/Units");
// export the debug stuff as Debug
var _debug = require("./util/Debug");

},{"./clock/Clock":"52dVv","./context/Context":"1CuCx","./context/BaseContext":"bktf5","./context/Delay":"1qHQA","./context/Gain":"kj68Y","./context/Offline":"fDjd0","./context/OfflineContext":"8VnAL","./context/Param":"5PVlJ","./context/ToneAudioBuffer":"8aSPC","./context/ToneAudioBuffers":"8zO1I","./context/ToneAudioNode":"kZ3Kj","./type/Frequency":"bObwr","./type/Midi":"kST2k","./type/Time":"9A3Zu","./type/Ticks":"BGGsE","./type/TransportTime":"a6yW0","./util/Draw":"9CgWk","./util/Emitter":"4ROyf","./util/IntervalTimeline":"4FYQZ","./util/StateTimeline":"hkouL","./util/Timeline":"36KJ4","./util/TypeCheck":"eMH5A","./type/Conversions":"iww1u","./util/Defaults":"a9M5s","./type/Units":"gjqPS","./util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"52dVv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A sample accurate clock which provides a callback at the given rate.
 * While the callback is not sample-accurate (it is still susceptible to
 * loose JS timing), the time passed in as the argument to the callback
 * is precise. For most applications, it is better to use Tone.Transport
 * instead of the Clock by itself since you can synchronize multiple callbacks.
 * @example
 * // the callback will be invoked approximately once a second
 * // and will print the time exactly once a second apart.
 * const clock = new Tone.Clock(time => {
 * 	console.log(time);
 * }, 1);
 * clock.start();
 * @category Core
 */ parcelHelpers.export(exports, "Clock", ()=>Clock);
var _toneWithContext = require("../context/ToneWithContext");
var _defaults = require("../util/Defaults");
var _emitter = require("../util/Emitter");
var _interface = require("../util/Interface");
var _stateTimeline = require("../util/StateTimeline");
var _tickSource = require("./TickSource");
var _debug = require("../util/Debug");
class Clock extends (0, _toneWithContext.ToneWithContext) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Clock.getDefaults(), arguments, [
            "callback",
            "frequency"
        ]));
        this.name = "Clock";
        /**
         * The callback function to invoke at the scheduled tick.
         */ this.callback = (0, _interface.noOp);
        /**
         * The last time the loop callback was invoked
         */ this._lastUpdate = 0;
        /**
         * Keep track of the playback state
         */ this._state = new (0, _stateTimeline.StateTimeline)("stopped");
        /**
         * Context bound reference to the _loop method
         * This is necessary to remove the event in the end.
         */ this._boundLoop = this._loop.bind(this);
        const options = (0, _defaults.optionsFromArguments)(Clock.getDefaults(), arguments, [
            "callback",
            "frequency"
        ]);
        this.callback = options.callback;
        this._tickSource = new (0, _tickSource.TickSource)({
            context: this.context,
            frequency: options.frequency,
            units: options.units
        });
        this._lastUpdate = 0;
        this.frequency = this._tickSource.frequency;
        (0, _interface.readOnly)(this, "frequency");
        // add an initial state
        this._state.setStateAtTime("stopped", 0);
        // bind a callback to the worker thread
        this.context.on("tick", this._boundLoop);
    }
    static getDefaults() {
        return Object.assign((0, _toneWithContext.ToneWithContext).getDefaults(), {
            callback: (0, _interface.noOp),
            frequency: 1,
            units: "hertz"
        });
    }
    /**
     * Returns the playback state of the source, either "started", "stopped" or "paused".
     */ get state() {
        return this._state.getValueAtTime(this.now());
    }
    /**
     * Start the clock at the given time. Optionally pass in an offset
     * of where to start the tick counter from.
     * @param  time    The time the clock should start
     * @param offset  Where the tick counter starts counting from.
     */ start(time, offset) {
        // make sure the context is running
        (0, _debug.assertContextRunning)(this.context);
        // start the loop
        const computedTime = this.toSeconds(time);
        this.log("start", computedTime);
        if (this._state.getValueAtTime(computedTime) !== "started") {
            this._state.setStateAtTime("started", computedTime);
            this._tickSource.start(computedTime, offset);
            if (computedTime < this._lastUpdate) this.emit("start", computedTime, offset);
        }
        return this;
    }
    /**
     * Stop the clock. Stopping the clock resets the tick counter to 0.
     * @param time The time when the clock should stop.
     * @example
     * const clock = new Tone.Clock(time => {
     * 	console.log(time);
     * }, 1);
     * clock.start();
     * // stop the clock after 10 seconds
     * clock.stop("+10");
     */ stop(time) {
        const computedTime = this.toSeconds(time);
        this.log("stop", computedTime);
        this._state.cancel(computedTime);
        this._state.setStateAtTime("stopped", computedTime);
        this._tickSource.stop(computedTime);
        if (computedTime < this._lastUpdate) this.emit("stop", computedTime);
        return this;
    }
    /**
     * Pause the clock. Pausing does not reset the tick counter.
     * @param time The time when the clock should stop.
     */ pause(time) {
        const computedTime = this.toSeconds(time);
        if (this._state.getValueAtTime(computedTime) === "started") {
            this._state.setStateAtTime("paused", computedTime);
            this._tickSource.pause(computedTime);
            if (computedTime < this._lastUpdate) this.emit("pause", computedTime);
        }
        return this;
    }
    /**
     * The number of times the callback was invoked. Starts counting at 0
     * and increments after the callback was invoked.
     */ get ticks() {
        return Math.ceil(this.getTicksAtTime(this.now()));
    }
    set ticks(t) {
        this._tickSource.ticks = t;
    }
    /**
     * The time since ticks=0 that the Clock has been running. Accounts for tempo curves
     */ get seconds() {
        return this._tickSource.seconds;
    }
    set seconds(s) {
        this._tickSource.seconds = s;
    }
    /**
     * Return the elapsed seconds at the given time.
     * @param  time  When to get the elapsed seconds
     * @return  The number of elapsed seconds
     */ getSecondsAtTime(time) {
        return this._tickSource.getSecondsAtTime(time);
    }
    /**
     * Set the clock's ticks at the given time.
     * @param  ticks The tick value to set
     * @param  time  When to set the tick value
     */ setTicksAtTime(ticks, time) {
        this._tickSource.setTicksAtTime(ticks, time);
        return this;
    }
    /**
     * Get the time of the given tick. The second argument
     * is when to test before. Since ticks can be set (with setTicksAtTime)
     * there may be multiple times for a given tick value.
     * @param  tick The tick number.
     * @param  before When to measure the tick value from.
     * @return The time of the tick
     */ getTimeOfTick(tick, before = this.now()) {
        return this._tickSource.getTimeOfTick(tick, before);
    }
    /**
     * Get the clock's ticks at the given time.
     * @param  time  When to get the tick value
     * @return The tick value at the given time.
     */ getTicksAtTime(time) {
        return this._tickSource.getTicksAtTime(time);
    }
    /**
     * Get the time of the next tick
     * @param  offset The tick number.
     */ nextTickTime(offset, when) {
        const computedTime = this.toSeconds(when);
        const currentTick = this.getTicksAtTime(computedTime);
        return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);
    }
    /**
     * The scheduling loop.
     */ _loop() {
        const startTime = this._lastUpdate;
        const endTime = this.now();
        this._lastUpdate = endTime;
        this.log("loop", startTime, endTime);
        if (startTime !== endTime) {
            // the state change events
            this._state.forEachBetween(startTime, endTime, (e)=>{
                switch(e.state){
                    case "started":
                        const offset = this._tickSource.getTicksAtTime(e.time);
                        this.emit("start", e.time, offset);
                        break;
                    case "stopped":
                        if (e.time !== 0) this.emit("stop", e.time);
                        break;
                    case "paused":
                        this.emit("pause", e.time);
                        break;
                }
            });
            // the tick callbacks
            this._tickSource.forEachTickBetween(startTime, endTime, (time, ticks)=>{
                this.callback(time, ticks);
            });
        }
    }
    /**
     * Returns the scheduled state at the given time.
     * @param  time  The time to query.
     * @return  The name of the state input in setStateAtTime.
     * @example
     * const clock = new Tone.Clock();
     * clock.start("+0.1");
     * clock.getStateAtTime("+0.1"); // returns "started"
     */ getStateAtTime(time) {
        const computedTime = this.toSeconds(time);
        return this._state.getValueAtTime(computedTime);
    }
    /**
     * Clean up
     */ dispose() {
        super.dispose();
        this.context.off("tick", this._boundLoop);
        this._tickSource.dispose();
        this._state.dispose();
        return this;
    }
}
(0, _emitter.Emitter).mixin(Clock);

},{"../context/ToneWithContext":"gAuzg","../util/Defaults":"a9M5s","../util/Emitter":"4ROyf","../util/Interface":"hVOjA","../util/StateTimeline":"hkouL","./TickSource":"7GTFV","../util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gAuzg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * The Base class for all nodes that have an AudioContext.
 */ parcelHelpers.export(exports, "ToneWithContext", ()=>ToneWithContext);
var _global = require("../Global");
var _tone = require("../Tone");
var _frequency = require("../type/Frequency");
var _time = require("../type/Time");
var _transportTime = require("../type/TransportTime");
var _defaults = require("../util/Defaults");
var _typeCheck = require("../util/TypeCheck");
class ToneWithContext extends (0, _tone.Tone) {
    constructor(){
        super();
        const options = (0, _defaults.optionsFromArguments)(ToneWithContext.getDefaults(), arguments, [
            "context"
        ]);
        if (this.defaultContext) this.context = this.defaultContext;
        else this.context = options.context;
    }
    static getDefaults() {
        return {
            context: (0, _global.getContext)()
        };
    }
    /**
     * Return the current time of the Context clock plus the lookAhead.
     * @example
     * setInterval(() => {
     * 	console.log(Tone.now());
     * }, 100);
     */ now() {
        return this.context.currentTime + this.context.lookAhead;
    }
    /**
     * Return the current time of the Context clock without any lookAhead.
     * @example
     * setInterval(() => {
     * 	console.log(Tone.immediate());
     * }, 100);
     */ immediate() {
        return this.context.currentTime;
    }
    /**
     * The duration in seconds of one sample.
     * @example
     * console.log(Tone.Transport.sampleTime);
     */ get sampleTime() {
        return 1 / this.context.sampleRate;
    }
    /**
     * The number of seconds of 1 processing block (128 samples)
     * @example
     * console.log(Tone.Destination.blockTime);
     */ get blockTime() {
        return 128 / this.context.sampleRate;
    }
    /**
     * Convert the incoming time to seconds.
     * This is calculated against the current [[Tone.Transport]] bpm
     * @example
     * const gain = new Tone.Gain();
     * setInterval(() => console.log(gain.toSeconds("4n")), 100);
     * // ramp the tempo to 60 bpm over 30 seconds
     * Tone.getTransport().bpm.rampTo(60, 30);
     */ toSeconds(time) {
        return new (0, _time.TimeClass)(this.context, time).toSeconds();
    }
    /**
     * Convert the input to a frequency number
     * @example
     * const gain = new Tone.Gain();
     * console.log(gain.toFrequency("4n"));
     */ toFrequency(freq) {
        return new (0, _frequency.FrequencyClass)(this.context, freq).toFrequency();
    }
    /**
     * Convert the input time into ticks
     * @example
     * const gain = new Tone.Gain();
     * console.log(gain.toTicks("4n"));
     */ toTicks(time) {
        return new (0, _transportTime.TransportTimeClass)(this.context, time).toTicks();
    }
    //-------------------------------------
    // 	GET/SET
    //-------------------------------------
    /**
     * Get a subset of the properties which are in the partial props
     */ _getPartialProperties(props) {
        const options = this.get();
        // remove attributes from the prop that are not in the partial
        Object.keys(options).forEach((name)=>{
            if ((0, _typeCheck.isUndef)(props[name])) delete options[name];
        });
        return options;
    }
    /**
     * Get the object's attributes.
     * @example
     * const osc = new Tone.Oscillator();
     * console.log(osc.get());
     */ get() {
        const defaults = (0, _defaults.getDefaultsFromInstance)(this);
        Object.keys(defaults).forEach((attribute)=>{
            if (Reflect.has(this, attribute)) {
                const member = this[attribute];
                if ((0, _typeCheck.isDefined)(member) && (0, _typeCheck.isDefined)(member.value) && (0, _typeCheck.isDefined)(member.setValueAtTime)) defaults[attribute] = member.value;
                else if (member instanceof ToneWithContext) defaults[attribute] = member._getPartialProperties(defaults[attribute]);
                else if ((0, _typeCheck.isArray)(member) || (0, _typeCheck.isNumber)(member) || (0, _typeCheck.isString)(member) || (0, _typeCheck.isBoolean)(member)) defaults[attribute] = member;
                else // remove all undefined and unserializable attributes
                delete defaults[attribute];
            }
        });
        return defaults;
    }
    /**
     * Set multiple properties at once with an object.
     * @example
     * const filter = new Tone.Filter().toDestination();
     * // set values using an object
     * filter.set({
     * 	frequency: "C6",
     * 	type: "highpass"
     * });
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/Analogsynth_octaves_highmid.mp3").connect(filter);
     * player.autostart = true;
     */ set(props) {
        Object.keys(props).forEach((attribute)=>{
            if (Reflect.has(this, attribute) && (0, _typeCheck.isDefined)(this[attribute])) {
                if (this[attribute] && (0, _typeCheck.isDefined)(this[attribute].value) && (0, _typeCheck.isDefined)(this[attribute].setValueAtTime)) // small optimization
                {
                    if (this[attribute].value !== props[attribute]) this[attribute].value = props[attribute];
                } else if (this[attribute] instanceof ToneWithContext) this[attribute].set(props[attribute]);
                else this[attribute] = props[attribute];
            }
        });
        return this;
    }
}

},{"../Global":"79THw","../Tone":"6Gzxl","../type/Frequency":"bObwr","../type/Time":"9A3Zu","../type/TransportTime":"a6yW0","../util/Defaults":"a9M5s","../util/TypeCheck":"eMH5A","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bObwr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Frequency is a primitive type for encoding Frequency values.
 * Eventually all time values are evaluated to hertz using the `valueOf` method.
 * @example
 * Tone.Frequency("C3"); // 261
 * Tone.Frequency(38, "midi");
 * Tone.Frequency("C3").transpose(4);
 * @category Unit
 */ parcelHelpers.export(exports, "FrequencyClass", ()=>FrequencyClass);
/**
 * Convert a value into a FrequencyClass object.
 * @category Unit
 * @example
 * const midi = Tone.Frequency("C3").toMidi();
 * console.log(midi);
 * @example
 * const hertz = Tone.Frequency(38, "midi").toFrequency();
 * console.log(hertz);
 */ parcelHelpers.export(exports, "Frequency", ()=>Frequency);
var _global = require("../Global");
var _conversions = require("./Conversions");
var _time = require("./Time");
class FrequencyClass extends (0, _time.TimeClass) {
    constructor(){
        super(...arguments);
        this.name = "Frequency";
        this.defaultUnits = "hz";
    }
    /**
     * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used
     * to generate all the other pitch values from notes. A4's values in Hertz.
     */ static get A4() {
        return (0, _conversions.getA4)();
    }
    static set A4(freq) {
        (0, _conversions.setA4)(freq);
    }
    //-------------------------------------
    // 	AUGMENT BASE EXPRESSIONS
    //-------------------------------------
    _getExpressions() {
        return Object.assign({}, super._getExpressions(), {
            midi: {
                regexp: /^(\d+(?:\.\d+)?midi)/,
                method (value) {
                    if (this.defaultUnits === "midi") return value;
                    else return FrequencyClass.mtof(value);
                }
            },
            note: {
                regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,
                method (pitch, octave) {
                    const index = noteToScaleIndex[pitch.toLowerCase()];
                    const noteNumber = index + (parseInt(octave, 10) + 1) * 12;
                    if (this.defaultUnits === "midi") return noteNumber;
                    else return FrequencyClass.mtof(noteNumber);
                }
            },
            tr: {
                regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,
                method (m, q, s) {
                    let total = 1;
                    if (m && m !== "0") total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));
                    if (q && q !== "0") total *= this._beatsToUnits(parseFloat(q));
                    if (s && s !== "0") total *= this._beatsToUnits(parseFloat(s) / 4);
                    return total;
                }
            }
        });
    }
    //-------------------------------------
    // 	EXPRESSIONS
    //-------------------------------------
    /**
     * Transposes the frequency by the given number of semitones.
     * @return  A new transposed frequency
     * @example
     * Tone.Frequency("A4").transpose(3); // "C5"
     */ transpose(interval) {
        return new FrequencyClass(this.context, this.valueOf() * (0, _conversions.intervalToFrequencyRatio)(interval));
    }
    /**
     * Takes an array of semitone intervals and returns
     * an array of frequencies transposed by those intervals.
     * @return  Returns an array of Frequencies
     * @example
     * Tone.Frequency("A4").harmonize([0, 3, 7]); // ["A4", "C5", "E5"]
     */ harmonize(intervals) {
        return intervals.map((interval)=>{
            return this.transpose(interval);
        });
    }
    //-------------------------------------
    // 	UNIT CONVERSIONS
    //-------------------------------------
    /**
     * Return the value of the frequency as a MIDI note
     * @example
     * Tone.Frequency("C4").toMidi(); // 60
     */ toMidi() {
        return (0, _conversions.ftom)(this.valueOf());
    }
    /**
     * Return the value of the frequency in Scientific Pitch Notation
     * @example
     * Tone.Frequency(69, "midi").toNote(); // "A4"
     */ toNote() {
        const freq = this.toFrequency();
        const log = Math.log2(freq / FrequencyClass.A4);
        let noteNumber = Math.round(12 * log) + 57;
        const octave = Math.floor(noteNumber / 12);
        if (octave < 0) noteNumber += -12 * octave;
        const noteName = scaleIndexToNote[noteNumber % 12];
        return noteName + octave.toString();
    }
    /**
     * Return the duration of one cycle in seconds.
     */ toSeconds() {
        return 1 / super.toSeconds();
    }
    /**
     * Return the duration of one cycle in ticks
     */ toTicks() {
        const quarterTime = this._beatsToUnits(1);
        const quarters = this.valueOf() / quarterTime;
        return Math.floor(quarters * this._getPPQ());
    }
    //-------------------------------------
    // 	UNIT CONVERSIONS HELPERS
    //-------------------------------------
    /**
     * With no arguments, return 0
     */ _noArg() {
        return 0;
    }
    /**
     * Returns the value of a frequency in the current units
     */ _frequencyToUnits(freq) {
        return freq;
    }
    /**
     * Returns the value of a tick in the current time units
     */ _ticksToUnits(ticks) {
        return 1 / (ticks * 60 / (this._getBpm() * this._getPPQ()));
    }
    /**
     * Return the value of the beats in the current units
     */ _beatsToUnits(beats) {
        return 1 / super._beatsToUnits(beats);
    }
    /**
     * Returns the value of a second in the current units
     */ _secondsToUnits(seconds) {
        return 1 / seconds;
    }
    /**
     * Convert a MIDI note to frequency value.
     * @param  midi The midi number to convert.
     * @return The corresponding frequency value
     */ static mtof(midi) {
        return (0, _conversions.mtof)(midi);
    }
    /**
     * Convert a frequency value to a MIDI note.
     * @param frequency The value to frequency value to convert.
     */ static ftom(frequency) {
        return (0, _conversions.ftom)(frequency);
    }
}
//-------------------------------------
// 	FREQUENCY CONVERSIONS
//-------------------------------------
/**
 * Note to scale index.
 * @hidden
 */ const noteToScaleIndex = {
    cbb: -2,
    cb: -1,
    c: 0,
    "c#": 1,
    cx: 2,
    dbb: 0,
    db: 1,
    d: 2,
    "d#": 3,
    dx: 4,
    ebb: 2,
    eb: 3,
    e: 4,
    "e#": 5,
    ex: 6,
    fbb: 3,
    fb: 4,
    f: 5,
    "f#": 6,
    fx: 7,
    gbb: 5,
    gb: 6,
    g: 7,
    "g#": 8,
    gx: 9,
    abb: 7,
    ab: 8,
    a: 9,
    "a#": 10,
    ax: 11,
    bbb: 9,
    bb: 10,
    b: 11,
    "b#": 12,
    bx: 13
};
/**
 * scale index to note (sharps)
 * @hidden
 */ const scaleIndexToNote = [
    "C",
    "C#",
    "D",
    "D#",
    "E",
    "F",
    "F#",
    "G",
    "G#",
    "A",
    "A#",
    "B"
];
function Frequency(value, units) {
    return new FrequencyClass((0, _global.getContext)(), value, units);
}

},{"../Global":"79THw","./Conversions":"iww1u","./Time":"9A3Zu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iww1u":[function(require,module,exports) {
/**
 * Equal power gain scale. Good for cross-fading.
 * @param  percent (0-1)
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "equalPowerScale", ()=>equalPowerScale);
/**
 * Convert decibels into gain.
 */ parcelHelpers.export(exports, "dbToGain", ()=>dbToGain);
/**
 * Convert gain to decibels.
 */ parcelHelpers.export(exports, "gainToDb", ()=>gainToDb);
/**
 * Convert an interval (in semitones) to a frequency ratio.
 * @param interval the number of semitones above the base note
 * @example
 * Tone.intervalToFrequencyRatio(0); // 1
 * Tone.intervalToFrequencyRatio(12); // 2
 * Tone.intervalToFrequencyRatio(-12); // 0.5
 */ parcelHelpers.export(exports, "intervalToFrequencyRatio", ()=>intervalToFrequencyRatio);
parcelHelpers.export(exports, "getA4", ()=>getA4);
parcelHelpers.export(exports, "setA4", ()=>setA4);
/**
 * Convert a frequency value to a MIDI note.
 * @param frequency The value to frequency value to convert.
 * @example
 * Tone.ftom(440); // returns 69
 */ parcelHelpers.export(exports, "ftom", ()=>ftom);
/**
 * Convert a frequency to a floating point midi value
 */ parcelHelpers.export(exports, "ftomf", ()=>ftomf);
/**
 * Convert a MIDI note to frequency value.
 * @param  midi The midi number to convert.
 * @return The corresponding frequency value
 * @example
 * Tone.mtof(69); // 440
 */ parcelHelpers.export(exports, "mtof", ()=>mtof);
function equalPowerScale(percent) {
    const piFactor = 0.5 * Math.PI;
    return Math.sin(percent * piFactor);
}
function dbToGain(db) {
    return Math.pow(10, db / 20);
}
function gainToDb(gain) {
    return 20 * (Math.log(gain) / Math.LN10);
}
function intervalToFrequencyRatio(interval) {
    return Math.pow(2, interval / 12);
}
/**
 * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used
 * to generate all the other pitch values from notes. A4's values in Hertz.
 */ let A4 = 440;
function getA4() {
    return A4;
}
function setA4(freq) {
    A4 = freq;
}
function ftom(frequency) {
    return Math.round(ftomf(frequency));
}
function ftomf(frequency) {
    return 69 + 12 * Math.log2(frequency / A4);
}
function mtof(midi) {
    return A4 * Math.pow(2, (midi - 69) / 12);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9A3Zu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * TimeClass is a primitive type for encoding and decoding Time values.
 * TimeClass can be passed into the parameter of any method which takes time as an argument.
 * @param  val    The time value.
 * @param  units  The units of the value.
 * @example
 * const time = Tone.Time("4n"); // a quarter note
 * @category Unit
 */ parcelHelpers.export(exports, "TimeClass", ()=>TimeClass);
/**
 * Create a TimeClass from a time string or number. The time is computed against the
 * global Tone.Context. To use a specific context, use [[TimeClass]]
 * @param value A value which represents time
 * @param units The value's units if they can't be inferred by the value.
 * @category Unit
 * @example
 * const time = Tone.Time("4n").toSeconds();
 * console.log(time);
 * @example
 * const note = Tone.Time(1).toNotation();
 * console.log(note);
 * @example
 * const freq = Tone.Time(0.5).toFrequency();
 * console.log(freq);
 */ parcelHelpers.export(exports, "Time", ()=>Time);
var _global = require("../Global");
var _conversions = require("./Conversions");
var _timeBase = require("./TimeBase");
class TimeClass extends (0, _timeBase.TimeBaseClass) {
    constructor(){
        super(...arguments);
        this.name = "TimeClass";
    }
    _getExpressions() {
        return Object.assign(super._getExpressions(), {
            now: {
                method: (capture)=>{
                    return this._now() + new this.constructor(this.context, capture).valueOf();
                },
                regexp: /^\+(.+)/
            },
            quantize: {
                method: (capture)=>{
                    const quantTo = new TimeClass(this.context, capture).valueOf();
                    return this._secondsToUnits(this.context.transport.nextSubdivision(quantTo));
                },
                regexp: /^@(.+)/
            }
        });
    }
    /**
     * Quantize the time by the given subdivision. Optionally add a
     * percentage which will move the time value towards the ideal
     * quantized value by that percentage.
     * @param  subdiv    The subdivision to quantize to
     * @param  percent  Move the time value towards the quantized value by a percentage.
     * @example
     * Tone.Time(21).quantize(2); // returns 22
     * Tone.Time(0.6).quantize("4n", 0.5); // returns 0.55
     */ quantize(subdiv, percent = 1) {
        const subdivision = new this.constructor(this.context, subdiv).valueOf();
        const value = this.valueOf();
        const multiple = Math.round(value / subdivision);
        const ideal = multiple * subdivision;
        const diff = ideal - value;
        return value + diff * percent;
    }
    //-------------------------------------
    // CONVERSIONS
    //-------------------------------------
    /**
     * Convert a Time to Notation. The notation values are will be the
     * closest representation between 1m to 128th note.
     * @return {Notation}
     * @example
     * // if the Transport is at 120bpm:
     * Tone.Time(2).toNotation(); // returns "1m"
     */ toNotation() {
        const time = this.toSeconds();
        const testNotations = [
            "1m"
        ];
        for(let power = 1; power < 9; power++){
            const subdiv = Math.pow(2, power);
            testNotations.push(subdiv + "n.");
            testNotations.push(subdiv + "n");
            testNotations.push(subdiv + "t");
        }
        testNotations.push("0");
        // find the closets notation representation
        let closest = testNotations[0];
        let closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();
        testNotations.forEach((notation)=>{
            const notationSeconds = new TimeClass(this.context, notation).toSeconds();
            if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {
                closest = notation;
                closestSeconds = notationSeconds;
            }
        });
        return closest;
    }
    /**
     * Return the time encoded as Bars:Beats:Sixteenths.
     */ toBarsBeatsSixteenths() {
        const quarterTime = this._beatsToUnits(1);
        let quarters = this.valueOf() / quarterTime;
        quarters = parseFloat(quarters.toFixed(4));
        const measures = Math.floor(quarters / this._getTimeSignature());
        let sixteenths = quarters % 1 * 4;
        quarters = Math.floor(quarters) % this._getTimeSignature();
        const sixteenthString = sixteenths.toString();
        if (sixteenthString.length > 3) // the additional parseFloat removes insignificant trailing zeroes
        sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));
        const progress = [
            measures,
            quarters,
            sixteenths
        ];
        return progress.join(":");
    }
    /**
     * Return the time in ticks.
     */ toTicks() {
        const quarterTime = this._beatsToUnits(1);
        const quarters = this.valueOf() / quarterTime;
        return Math.round(quarters * this._getPPQ());
    }
    /**
     * Return the time in seconds.
     */ toSeconds() {
        return this.valueOf();
    }
    /**
     * Return the value as a midi note.
     */ toMidi() {
        return (0, _conversions.ftom)(this.toFrequency());
    }
    _now() {
        return this.context.now();
    }
}
function Time(value, units) {
    return new TimeClass((0, _global.getContext)(), value, units);
}

},{"../Global":"79THw","./Conversions":"iww1u","./TimeBase":"1rDQh","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1rDQh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * TimeBase is a flexible encoding of time which can be evaluated to and from a string.
 */ parcelHelpers.export(exports, "TimeBaseClass", ()=>TimeBaseClass);
var _tone = require("../Tone");
var _typeCheck = require("../util/TypeCheck");
class TimeBaseClass extends (0, _tone.Tone) {
    /**
     * @param context The context associated with the time value. Used to compute
     * Transport and context-relative timing.
     * @param  value  The time value as a number, string or object
     * @param  units  Unit values
     */ constructor(context, value, units){
        super();
        /**
         * The default units
         */ this.defaultUnits = "s";
        this._val = value;
        this._units = units;
        this.context = context;
        this._expressions = this._getExpressions();
    }
    /**
     * All of the time encoding expressions
     */ _getExpressions() {
        return {
            hz: {
                method: (value)=>{
                    return this._frequencyToUnits(parseFloat(value));
                },
                regexp: /^(\d+(?:\.\d+)?)hz$/i
            },
            i: {
                method: (value)=>{
                    return this._ticksToUnits(parseInt(value, 10));
                },
                regexp: /^(\d+)i$/i
            },
            m: {
                method: (value)=>{
                    return this._beatsToUnits(parseInt(value, 10) * this._getTimeSignature());
                },
                regexp: /^(\d+)m$/i
            },
            n: {
                method: (value, dot)=>{
                    const numericValue = parseInt(value, 10);
                    const scalar = dot === "." ? 1.5 : 1;
                    if (numericValue === 1) return this._beatsToUnits(this._getTimeSignature()) * scalar;
                    else return this._beatsToUnits(4 / numericValue) * scalar;
                },
                regexp: /^(\d+)n(\.?)$/i
            },
            number: {
                method: (value)=>{
                    return this._expressions[this.defaultUnits].method.call(this, value);
                },
                regexp: /^(\d+(?:\.\d+)?)$/
            },
            s: {
                method: (value)=>{
                    return this._secondsToUnits(parseFloat(value));
                },
                regexp: /^(\d+(?:\.\d+)?)s$/
            },
            samples: {
                method: (value)=>{
                    return parseInt(value, 10) / this.context.sampleRate;
                },
                regexp: /^(\d+)samples$/
            },
            t: {
                method: (value)=>{
                    const numericValue = parseInt(value, 10);
                    return this._beatsToUnits(8 / (Math.floor(numericValue) * 3));
                },
                regexp: /^(\d+)t$/i
            },
            tr: {
                method: (m, q, s)=>{
                    let total = 0;
                    if (m && m !== "0") total += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));
                    if (q && q !== "0") total += this._beatsToUnits(parseFloat(q));
                    if (s && s !== "0") total += this._beatsToUnits(parseFloat(s) / 4);
                    return total;
                },
                regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/
            }
        };
    }
    //-------------------------------------
    // 	VALUE OF
    //-------------------------------------
    /**
     * Evaluate the time value. Returns the time in seconds.
     */ valueOf() {
        if (this._val instanceof TimeBaseClass) this.fromType(this._val);
        if ((0, _typeCheck.isUndef)(this._val)) return this._noArg();
        else if ((0, _typeCheck.isString)(this._val) && (0, _typeCheck.isUndef)(this._units)) {
            for(const units in this._expressions)if (this._expressions[units].regexp.test(this._val.trim())) {
                this._units = units;
                break;
            }
        } else if ((0, _typeCheck.isObject)(this._val)) {
            let total = 0;
            for(const typeName in this._val)if ((0, _typeCheck.isDefined)(this._val[typeName])) {
                const quantity = this._val[typeName];
                // @ts-ignore
                const time = new this.constructor(this.context, typeName).valueOf() * quantity;
                total += time;
            }
            return total;
        }
        if ((0, _typeCheck.isDefined)(this._units)) {
            const expr = this._expressions[this._units];
            const matching = this._val.toString().trim().match(expr.regexp);
            if (matching) return expr.method.apply(this, matching.slice(1));
            else return expr.method.call(this, this._val);
        } else if ((0, _typeCheck.isString)(this._val)) return parseFloat(this._val);
        else return this._val;
    }
    //-------------------------------------
    // 	UNIT CONVERSIONS
    //-------------------------------------
    /**
     * Returns the value of a frequency in the current units
     */ _frequencyToUnits(freq) {
        return 1 / freq;
    }
    /**
     * Return the value of the beats in the current units
     */ _beatsToUnits(beats) {
        return 60 / this._getBpm() * beats;
    }
    /**
     * Returns the value of a second in the current units
     */ _secondsToUnits(seconds) {
        return seconds;
    }
    /**
     * Returns the value of a tick in the current time units
     */ _ticksToUnits(ticks) {
        return ticks * this._beatsToUnits(1) / this._getPPQ();
    }
    /**
     * With no arguments, return 'now'
     */ _noArg() {
        return this._now();
    }
    //-------------------------------------
    // 	TEMPO CONVERSIONS
    //-------------------------------------
    /**
     * Return the bpm
     */ _getBpm() {
        return this.context.transport.bpm.value;
    }
    /**
     * Return the timeSignature
     */ _getTimeSignature() {
        return this.context.transport.timeSignature;
    }
    /**
     * Return the PPQ or 192 if Transport is not available
     */ _getPPQ() {
        return this.context.transport.PPQ;
    }
    //-------------------------------------
    // 	CONVERSION INTERFACE
    //-------------------------------------
    /**
     * Coerce a time type into this units type.
     * @param type Any time type units
     */ fromType(type) {
        this._units = undefined;
        switch(this.defaultUnits){
            case "s":
                this._val = type.toSeconds();
                break;
            case "i":
                this._val = type.toTicks();
                break;
            case "hz":
                this._val = type.toFrequency();
                break;
            case "midi":
                this._val = type.toMidi();
                break;
        }
        return this;
    }
    /**
     * Return the value in hertz
     */ toFrequency() {
        return 1 / this.toSeconds();
    }
    /**
     * Return the time in samples
     */ toSamples() {
        return this.toSeconds() * this.context.sampleRate;
    }
    /**
     * Return the time in milliseconds.
     */ toMilliseconds() {
        return this.toSeconds() * 1000;
    }
}

},{"../Tone":"6Gzxl","../util/TypeCheck":"eMH5A","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a6yW0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * TransportTime is a the time along the Transport's
 * timeline. It is similar to Tone.Time, but instead of evaluating
 * against the AudioContext's clock, it is evaluated against
 * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).
 * @category Unit
 */ parcelHelpers.export(exports, "TransportTimeClass", ()=>TransportTimeClass);
/**
 * TransportTime is a the time along the Transport's
 * timeline. It is similar to [[Time]], but instead of evaluating
 * against the AudioContext's clock, it is evaluated against
 * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).
 * @category Unit
 */ parcelHelpers.export(exports, "TransportTime", ()=>TransportTime);
var _global = require("../Global");
var _time = require("./Time");
class TransportTimeClass extends (0, _time.TimeClass) {
    constructor(){
        super(...arguments);
        this.name = "TransportTime";
    }
    /**
     * Return the current time in whichever context is relevant
     */ _now() {
        return this.context.transport.seconds;
    }
}
function TransportTime(value, units) {
    return new TransportTimeClass((0, _global.getContext)(), value, units);
}

},{"../Global":"79THw","./Time":"9A3Zu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hkouL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A Timeline State. Provides the methods: `setStateAtTime("state", time)` and `getValueAtTime(time)`
 * @param initial The initial state of the StateTimeline.  Defaults to `undefined`
 */ parcelHelpers.export(exports, "StateTimeline", ()=>StateTimeline);
var _timeline = require("./Timeline");
var _debug = require("./Debug");
class StateTimeline extends (0, _timeline.Timeline) {
    constructor(initial = "stopped"){
        super();
        this.name = "StateTimeline";
        this._initial = initial;
        this.setStateAtTime(this._initial, 0);
    }
    /**
     * Returns the scheduled state scheduled before or at
     * the given time.
     * @param  time  The time to query.
     * @return  The name of the state input in setStateAtTime.
     */ getValueAtTime(time) {
        const event = this.get(time);
        if (event !== null) return event.state;
        else return this._initial;
    }
    /**
     * Add a state to the timeline.
     * @param  state The name of the state to set.
     * @param  time  The time to query.
     * @param options Any additional options that are needed in the timeline.
     */ setStateAtTime(state, time, options) {
        (0, _debug.assertRange)(time, 0);
        this.add(Object.assign({}, options, {
            state,
            time
        }));
        return this;
    }
    /**
     * Return the event before the time with the given state
     * @param  state The state to look for
     * @param  time  When to check before
     * @return  The event with the given state before the time
     */ getLastState(state, time) {
        // time = this.toSeconds(time);
        const index = this._search(time);
        for(let i = index; i >= 0; i--){
            const event = this._timeline[i];
            if (event.state === state) return event;
        }
    }
    /**
     * Return the event after the time with the given state
     * @param  state The state to look for
     * @param  time  When to check from
     * @return  The event with the given state after the time
     */ getNextState(state, time) {
        // time = this.toSeconds(time);
        const index = this._search(time);
        if (index !== -1) for(let i = index; i < this._timeline.length; i++){
            const event = this._timeline[i];
            if (event.state === state) return event;
        }
    }
}

},{"./Timeline":"36KJ4","./Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7GTFV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.
 */ parcelHelpers.export(exports, "TickSource", ()=>TickSource);
var _toneWithContext = require("../context/ToneWithContext");
var _defaults = require("../util/Defaults");
var _interface = require("../util/Interface");
var _stateTimeline = require("../util/StateTimeline");
var _timeline = require("../util/Timeline");
var _typeCheck = require("../util/TypeCheck");
var _tickSignal = require("./TickSignal");
var _math = require("../util/Math");
class TickSource extends (0, _toneWithContext.ToneWithContext) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(TickSource.getDefaults(), arguments, [
            "frequency"
        ]));
        this.name = "TickSource";
        /**
         * The state timeline
         */ this._state = new (0, _stateTimeline.StateTimeline)();
        /**
         * The offset values of the ticks
         */ this._tickOffset = new (0, _timeline.Timeline)();
        const options = (0, _defaults.optionsFromArguments)(TickSource.getDefaults(), arguments, [
            "frequency"
        ]);
        this.frequency = new (0, _tickSignal.TickSignal)({
            context: this.context,
            units: options.units,
            value: options.frequency
        });
        (0, _interface.readOnly)(this, "frequency");
        // set the initial state
        this._state.setStateAtTime("stopped", 0);
        // add the first event
        this.setTicksAtTime(0, 0);
    }
    static getDefaults() {
        return Object.assign({
            frequency: 1,
            units: "hertz"
        }, (0, _toneWithContext.ToneWithContext).getDefaults());
    }
    /**
     * Returns the playback state of the source, either "started", "stopped" or "paused".
     */ get state() {
        return this.getStateAtTime(this.now());
    }
    /**
     * Start the clock at the given time. Optionally pass in an offset
     * of where to start the tick counter from.
     * @param  time    The time the clock should start
     * @param offset The number of ticks to start the source at
     */ start(time, offset) {
        const computedTime = this.toSeconds(time);
        if (this._state.getValueAtTime(computedTime) !== "started") {
            this._state.setStateAtTime("started", computedTime);
            if ((0, _typeCheck.isDefined)(offset)) this.setTicksAtTime(offset, computedTime);
        }
        return this;
    }
    /**
     * Stop the clock. Stopping the clock resets the tick counter to 0.
     * @param time The time when the clock should stop.
     */ stop(time) {
        const computedTime = this.toSeconds(time);
        // cancel the previous stop
        if (this._state.getValueAtTime(computedTime) === "stopped") {
            const event = this._state.get(computedTime);
            if (event && event.time > 0) {
                this._tickOffset.cancel(event.time);
                this._state.cancel(event.time);
            }
        }
        this._state.cancel(computedTime);
        this._state.setStateAtTime("stopped", computedTime);
        this.setTicksAtTime(0, computedTime);
        return this;
    }
    /**
     * Pause the clock. Pausing does not reset the tick counter.
     * @param time The time when the clock should stop.
     */ pause(time) {
        const computedTime = this.toSeconds(time);
        if (this._state.getValueAtTime(computedTime) === "started") this._state.setStateAtTime("paused", computedTime);
        return this;
    }
    /**
     * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.
     * @param time When to clear the events after
     */ cancel(time) {
        time = this.toSeconds(time);
        this._state.cancel(time);
        this._tickOffset.cancel(time);
        return this;
    }
    /**
     * Get the elapsed ticks at the given time
     * @param  time  When to get the tick value
     * @return The number of ticks
     */ getTicksAtTime(time) {
        const computedTime = this.toSeconds(time);
        const stopEvent = this._state.getLastState("stopped", computedTime);
        // this event allows forEachBetween to iterate until the current time
        const tmpEvent = {
            state: "paused",
            time: computedTime
        };
        this._state.add(tmpEvent);
        // keep track of the previous offset event
        let lastState = stopEvent;
        let elapsedTicks = 0;
        // iterate through all the events since the last stop
        this._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, (e)=>{
            let periodStartTime = lastState.time;
            // if there is an offset event in this period use that
            const offsetEvent = this._tickOffset.get(e.time);
            if (offsetEvent && offsetEvent.time >= lastState.time) {
                elapsedTicks = offsetEvent.ticks;
                periodStartTime = offsetEvent.time;
            }
            if (lastState.state === "started" && e.state !== "started") elapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);
            lastState = e;
        });
        // remove the temporary event
        this._state.remove(tmpEvent);
        // return the ticks
        return elapsedTicks;
    }
    /**
     * The number of times the callback was invoked. Starts counting at 0
     * and increments after the callback was invoked. Returns -1 when stopped.
     */ get ticks() {
        return this.getTicksAtTime(this.now());
    }
    set ticks(t) {
        this.setTicksAtTime(t, this.now());
    }
    /**
     * The time since ticks=0 that the TickSource has been running. Accounts
     * for tempo curves
     */ get seconds() {
        return this.getSecondsAtTime(this.now());
    }
    set seconds(s) {
        const now = this.now();
        const ticks = this.frequency.timeToTicks(s, now);
        this.setTicksAtTime(ticks, now);
    }
    /**
     * Return the elapsed seconds at the given time.
     * @param  time  When to get the elapsed seconds
     * @return  The number of elapsed seconds
     */ getSecondsAtTime(time) {
        time = this.toSeconds(time);
        const stopEvent = this._state.getLastState("stopped", time);
        // this event allows forEachBetween to iterate until the current time
        const tmpEvent = {
            state: "paused",
            time
        };
        this._state.add(tmpEvent);
        // keep track of the previous offset event
        let lastState = stopEvent;
        let elapsedSeconds = 0;
        // iterate through all the events since the last stop
        this._state.forEachBetween(stopEvent.time, time + this.sampleTime, (e)=>{
            let periodStartTime = lastState.time;
            // if there is an offset event in this period use that
            const offsetEvent = this._tickOffset.get(e.time);
            if (offsetEvent && offsetEvent.time >= lastState.time) {
                elapsedSeconds = offsetEvent.seconds;
                periodStartTime = offsetEvent.time;
            }
            if (lastState.state === "started" && e.state !== "started") elapsedSeconds += e.time - periodStartTime;
            lastState = e;
        });
        // remove the temporary event
        this._state.remove(tmpEvent);
        // return the ticks
        return elapsedSeconds;
    }
    /**
     * Set the clock's ticks at the given time.
     * @param  ticks The tick value to set
     * @param  time  When to set the tick value
     */ setTicksAtTime(ticks, time) {
        time = this.toSeconds(time);
        this._tickOffset.cancel(time);
        this._tickOffset.add({
            seconds: this.frequency.getDurationOfTicks(ticks, time),
            ticks,
            time
        });
        return this;
    }
    /**
     * Returns the scheduled state at the given time.
     * @param  time  The time to query.
     */ getStateAtTime(time) {
        time = this.toSeconds(time);
        return this._state.getValueAtTime(time);
    }
    /**
     * Get the time of the given tick. The second argument
     * is when to test before. Since ticks can be set (with setTicksAtTime)
     * there may be multiple times for a given tick value.
     * @param  tick The tick number.
     * @param  before When to measure the tick value from.
     * @return The time of the tick
     */ getTimeOfTick(tick, before = this.now()) {
        const offset = this._tickOffset.get(before);
        const event = this._state.get(before);
        const startTime = Math.max(offset.time, event.time);
        const absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;
        return this.frequency.getTimeOfTick(absoluteTicks);
    }
    /**
     * Invoke the callback event at all scheduled ticks between the
     * start time and the end time
     * @param  startTime  The beginning of the search range
     * @param  endTime    The end of the search range
     * @param  callback   The callback to invoke with each tick
     */ forEachTickBetween(startTime, endTime, callback) {
        // only iterate through the sections where it is "started"
        let lastStateEvent = this._state.get(startTime);
        this._state.forEachBetween(startTime, endTime, (event)=>{
            if (lastStateEvent && lastStateEvent.state === "started" && event.state !== "started") this.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);
            lastStateEvent = event;
        });
        let error = null;
        if (lastStateEvent && lastStateEvent.state === "started") {
            const maxStartTime = Math.max(lastStateEvent.time, startTime);
            // figure out the difference between the frequency ticks and the
            const startTicks = this.frequency.getTicksAtTime(maxStartTime);
            const ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);
            const diff = startTicks - ticksAtStart;
            let offset = Math.ceil(diff) - diff;
            // guard against floating point issues
            offset = (0, _math.EQ)(offset, 1) ? 0 : offset;
            let nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);
            while(nextTickTime < endTime){
                try {
                    callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));
                } catch (e) {
                    error = e;
                    break;
                }
                nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);
            }
        }
        if (error) throw error;
        return this;
    }
    /**
     * Clean up
     */ dispose() {
        super.dispose();
        this._state.dispose();
        this._tickOffset.dispose();
        this.frequency.dispose();
        return this;
    }
}

},{"../context/ToneWithContext":"gAuzg","../util/Defaults":"a9M5s","../util/Interface":"hVOjA","../util/StateTimeline":"hkouL","../util/Timeline":"36KJ4","../util/TypeCheck":"eMH5A","./TickSignal":"2rtQf","../util/Math":"7mtt2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2rtQf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * TickSignal extends Tone.Signal, but adds the capability
 * to calculate the number of elapsed ticks. exponential and target curves
 * are approximated with multiple linear ramps.
 *
 * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,
 * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)
 * describing integrating timing functions for tempo calculations.
 */ parcelHelpers.export(exports, "TickSignal", ()=>TickSignal);
var _signal = require("../../signal/Signal");
var _defaults = require("../util/Defaults");
var _tickParam = require("./TickParam");
class TickSignal extends (0, _signal.Signal) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(TickSignal.getDefaults(), arguments, [
            "value"
        ]));
        this.name = "TickSignal";
        const options = (0, _defaults.optionsFromArguments)(TickSignal.getDefaults(), arguments, [
            "value"
        ]);
        this.input = this._param = new (0, _tickParam.TickParam)({
            context: this.context,
            convert: options.convert,
            multiplier: options.multiplier,
            param: this._constantSource.offset,
            units: options.units,
            value: options.value
        });
    }
    static getDefaults() {
        return Object.assign((0, _signal.Signal).getDefaults(), {
            multiplier: 1,
            units: "hertz",
            value: 1
        });
    }
    ticksToTime(ticks, when) {
        return this._param.ticksToTime(ticks, when);
    }
    timeToTicks(duration, when) {
        return this._param.timeToTicks(duration, when);
    }
    getTimeOfTick(tick) {
        return this._param.getTimeOfTick(tick);
    }
    getDurationOfTicks(ticks, time) {
        return this._param.getDurationOfTicks(ticks, time);
    }
    getTicksAtTime(time) {
        return this._param.getTicksAtTime(time);
    }
    /**
     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.
     */ get multiplier() {
        return this._param.multiplier;
    }
    set multiplier(m) {
        this._param.multiplier = m;
    }
    dispose() {
        super.dispose();
        this._param.dispose();
        return this;
    }
}

},{"../../signal/Signal":"980ri","../util/Defaults":"a9M5s","./TickParam":"5sGSd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"980ri":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A signal is an audio-rate value. Tone.Signal is a core component of the library.
 * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal
 * has all of the methods available to native Web Audio
 * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)
 * as well as additional conveniences. Read more about working with signals
 * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).
 *
 * @example
 * const osc = new Tone.Oscillator().toDestination().start();
 * // a scheduleable signal which can be connected to control an AudioParam or another Signal
 * const signal = new Tone.Signal({
 * 	value: "C4",
 * 	units: "frequency"
 * }).connect(osc.frequency);
 * // the scheduled ramp controls the connected signal
 * signal.rampTo("C2", 4, "+0.5");
 * @category Signal
 */ parcelHelpers.export(exports, "Signal", ()=>Signal);
/**
 * When connecting from a signal, it's necessary to zero out the node destination
 * node if that node is also a signal. If the destination is not 0, then the values
 * will be summed. This method insures that the output of the destination signal will
 * be the same as the source signal, making the destination signal a pass through node.
 * @param signal The output signal to connect from
 * @param destination the destination to connect to
 * @param outputNum the optional output number
 * @param inputNum the input number
 */ parcelHelpers.export(exports, "connectSignal", ()=>connectSignal);
var _param = require("../core/context/Param");
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _advancedTypeCheck = require("../core/util/AdvancedTypeCheck");
var _defaults = require("../core/util/Defaults");
var _toneConstantSource = require("./ToneConstantSource");
class Signal extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Signal.getDefaults(), arguments, [
            "value",
            "units"
        ]));
        this.name = "Signal";
        /**
         * Indicates if the value should be overridden on connection.
         */ this.override = true;
        const options = (0, _defaults.optionsFromArguments)(Signal.getDefaults(), arguments, [
            "value",
            "units"
        ]);
        this.output = this._constantSource = new (0, _toneConstantSource.ToneConstantSource)({
            context: this.context,
            convert: options.convert,
            offset: options.value,
            units: options.units,
            minValue: options.minValue,
            maxValue: options.maxValue
        });
        this._constantSource.start(0);
        this.input = this._param = this._constantSource.offset;
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            convert: true,
            units: "number",
            value: 0
        });
    }
    connect(destination, outputNum = 0, inputNum = 0) {
        // start it only when connected to something
        connectSignal(this, destination, outputNum, inputNum);
        return this;
    }
    dispose() {
        super.dispose();
        this._param.dispose();
        this._constantSource.dispose();
        return this;
    }
    //-------------------------------------
    // ABSTRACT PARAM INTERFACE
    // just a proxy for the ConstantSourceNode's offset AudioParam
    // all docs are generated from AbstractParam.ts
    //-------------------------------------
    setValueAtTime(value, time) {
        this._param.setValueAtTime(value, time);
        return this;
    }
    getValueAtTime(time) {
        return this._param.getValueAtTime(time);
    }
    setRampPoint(time) {
        this._param.setRampPoint(time);
        return this;
    }
    linearRampToValueAtTime(value, time) {
        this._param.linearRampToValueAtTime(value, time);
        return this;
    }
    exponentialRampToValueAtTime(value, time) {
        this._param.exponentialRampToValueAtTime(value, time);
        return this;
    }
    exponentialRampTo(value, rampTime, startTime) {
        this._param.exponentialRampTo(value, rampTime, startTime);
        return this;
    }
    linearRampTo(value, rampTime, startTime) {
        this._param.linearRampTo(value, rampTime, startTime);
        return this;
    }
    targetRampTo(value, rampTime, startTime) {
        this._param.targetRampTo(value, rampTime, startTime);
        return this;
    }
    exponentialApproachValueAtTime(value, time, rampTime) {
        this._param.exponentialApproachValueAtTime(value, time, rampTime);
        return this;
    }
    setTargetAtTime(value, startTime, timeConstant) {
        this._param.setTargetAtTime(value, startTime, timeConstant);
        return this;
    }
    setValueCurveAtTime(values, startTime, duration, scaling) {
        this._param.setValueCurveAtTime(values, startTime, duration, scaling);
        return this;
    }
    cancelScheduledValues(time) {
        this._param.cancelScheduledValues(time);
        return this;
    }
    cancelAndHoldAtTime(time) {
        this._param.cancelAndHoldAtTime(time);
        return this;
    }
    rampTo(value, rampTime, startTime) {
        this._param.rampTo(value, rampTime, startTime);
        return this;
    }
    get value() {
        return this._param.value;
    }
    set value(value) {
        this._param.value = value;
    }
    get convert() {
        return this._param.convert;
    }
    set convert(convert) {
        this._param.convert = convert;
    }
    get units() {
        return this._param.units;
    }
    get overridden() {
        return this._param.overridden;
    }
    set overridden(overridden) {
        this._param.overridden = overridden;
    }
    get maxValue() {
        return this._param.maxValue;
    }
    get minValue() {
        return this._param.minValue;
    }
    /**
     * See [[Param.apply]].
     */ apply(param) {
        this._param.apply(param);
        return this;
    }
}
function connectSignal(signal, destination, outputNum, inputNum) {
    if (destination instanceof (0, _param.Param) || (0, _advancedTypeCheck.isAudioParam)(destination) || destination instanceof Signal && destination.override) {
        // cancel changes
        destination.cancelScheduledValues(0);
        // reset the value
        destination.setValueAtTime(0, 0);
        // mark the value as overridden
        if (destination instanceof Signal) destination.overridden = true;
    }
    (0, _toneAudioNode.connect)(signal, destination, outputNum, inputNum);
}

},{"../core/context/Param":"5PVlJ","../core/context/ToneAudioNode":"kZ3Kj","../core/util/AdvancedTypeCheck":"gKVc7","../core/util/Defaults":"a9M5s","./ToneConstantSource":"aU7Ju","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5PVlJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Param wraps the native Web Audio's AudioParam to provide
 * additional unit conversion functionality. It also
 * serves as a base-class for classes which have a single,
 * automatable parameter.
 * @category Core
 */ parcelHelpers.export(exports, "Param", ()=>Param);
var _conversions = require("../type/Conversions");
var _advancedTypeCheck = require("../util/AdvancedTypeCheck");
var _defaults = require("../util/Defaults");
var _timeline = require("../util/Timeline");
var _typeCheck = require("../util/TypeCheck");
var _toneWithContext = require("./ToneWithContext");
var _math = require("../util/Math");
var _debug = require("../util/Debug");
class Param extends (0, _toneWithContext.ToneWithContext) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Param.getDefaults(), arguments, [
            "param",
            "units",
            "convert"
        ]));
        this.name = "Param";
        this.overridden = false;
        /**
         * The minimum output value
         */ this._minOutput = 1e-7;
        const options = (0, _defaults.optionsFromArguments)(Param.getDefaults(), arguments, [
            "param",
            "units",
            "convert"
        ]);
        (0, _debug.assert)((0, _typeCheck.isDefined)(options.param) && ((0, _advancedTypeCheck.isAudioParam)(options.param) || options.param instanceof Param), "param must be an AudioParam");
        while(!(0, _advancedTypeCheck.isAudioParam)(options.param))options.param = options.param._param;
        this._swappable = (0, _typeCheck.isDefined)(options.swappable) ? options.swappable : false;
        if (this._swappable) {
            this.input = this.context.createGain();
            // initialize
            this._param = options.param;
            this.input.connect(this._param);
        } else this._param = this.input = options.param;
        this._events = new (0, _timeline.Timeline)(1000);
        this._initialValue = this._param.defaultValue;
        this.units = options.units;
        this.convert = options.convert;
        this._minValue = options.minValue;
        this._maxValue = options.maxValue;
        // if the value is defined, set it immediately
        if ((0, _typeCheck.isDefined)(options.value) && options.value !== this._toType(this._initialValue)) this.setValueAtTime(options.value, 0);
    }
    static getDefaults() {
        return Object.assign((0, _toneWithContext.ToneWithContext).getDefaults(), {
            convert: true,
            units: "number"
        });
    }
    get value() {
        const now = this.now();
        return this.getValueAtTime(now);
    }
    set value(value) {
        this.cancelScheduledValues(this.now());
        this.setValueAtTime(value, this.now());
    }
    get minValue() {
        // if it's not the default minValue, return it
        if ((0, _typeCheck.isDefined)(this._minValue)) return this._minValue;
        else if (this.units === "time" || this.units === "frequency" || this.units === "normalRange" || this.units === "positive" || this.units === "transportTime" || this.units === "ticks" || this.units === "bpm" || this.units === "hertz" || this.units === "samples") return 0;
        else if (this.units === "audioRange") return -1;
        else if (this.units === "decibels") return -Infinity;
        else return this._param.minValue;
    }
    get maxValue() {
        if ((0, _typeCheck.isDefined)(this._maxValue)) return this._maxValue;
        else if (this.units === "normalRange" || this.units === "audioRange") return 1;
        else return this._param.maxValue;
    }
    /**
     * Type guard based on the unit name
     */ _is(arg, type) {
        return this.units === type;
    }
    /**
     * Make sure the value is always in the defined range
     */ _assertRange(value) {
        if ((0, _typeCheck.isDefined)(this.maxValue) && (0, _typeCheck.isDefined)(this.minValue)) (0, _debug.assertRange)(value, this._fromType(this.minValue), this._fromType(this.maxValue));
        return value;
    }
    /**
     * Convert the given value from the type specified by Param.units
     * into the destination value (such as Gain or Frequency).
     */ _fromType(val) {
        if (this.convert && !this.overridden) {
            if (this._is(val, "time")) return this.toSeconds(val);
            else if (this._is(val, "decibels")) return (0, _conversions.dbToGain)(val);
            else if (this._is(val, "frequency")) return this.toFrequency(val);
            else return val;
        } else if (this.overridden) // if it's overridden, should only schedule 0s
        return 0;
        else return val;
    }
    /**
     * Convert the parameters value into the units specified by Param.units.
     */ _toType(val) {
        if (this.convert && this.units === "decibels") return (0, _conversions.gainToDb)(val);
        else return val;
    }
    //-------------------------------------
    // ABSTRACT PARAM INTERFACE
    // all docs are generated from ParamInterface.ts
    //-------------------------------------
    setValueAtTime(value, time) {
        const computedTime = this.toSeconds(time);
        const numericValue = this._fromType(value);
        (0, _debug.assert)(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(time)}`);
        this._assertRange(numericValue);
        this.log(this.units, "setValueAtTime", value, computedTime);
        this._events.add({
            time: computedTime,
            type: "setValueAtTime",
            value: numericValue
        });
        this._param.setValueAtTime(numericValue, computedTime);
        return this;
    }
    getValueAtTime(time) {
        const computedTime = Math.max(this.toSeconds(time), 0);
        const after = this._events.getAfter(computedTime);
        const before = this._events.get(computedTime);
        let value = this._initialValue;
        // if it was set by
        if (before === null) value = this._initialValue;
        else if (before.type === "setTargetAtTime" && (after === null || after.type === "setValueAtTime")) {
            const previous = this._events.getBefore(before.time);
            let previousVal;
            if (previous === null) previousVal = this._initialValue;
            else previousVal = previous.value;
            if (before.type === "setTargetAtTime") value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);
        } else if (after === null) value = before.value;
        else if (after.type === "linearRampToValueAtTime" || after.type === "exponentialRampToValueAtTime") {
            let beforeValue = before.value;
            if (before.type === "setTargetAtTime") {
                const previous = this._events.getBefore(before.time);
                if (previous === null) beforeValue = this._initialValue;
                else beforeValue = previous.value;
            }
            if (after.type === "linearRampToValueAtTime") value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);
            else value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);
        } else value = before.value;
        return this._toType(value);
    }
    setRampPoint(time) {
        time = this.toSeconds(time);
        let currentVal = this.getValueAtTime(time);
        this.cancelAndHoldAtTime(time);
        if (this._fromType(currentVal) === 0) currentVal = this._toType(this._minOutput);
        this.setValueAtTime(currentVal, time);
        return this;
    }
    linearRampToValueAtTime(value, endTime) {
        const numericValue = this._fromType(value);
        const computedTime = this.toSeconds(endTime);
        (0, _debug.assert)(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);
        this._assertRange(numericValue);
        this._events.add({
            time: computedTime,
            type: "linearRampToValueAtTime",
            value: numericValue
        });
        this.log(this.units, "linearRampToValueAtTime", value, computedTime);
        this._param.linearRampToValueAtTime(numericValue, computedTime);
        return this;
    }
    exponentialRampToValueAtTime(value, endTime) {
        let numericValue = this._fromType(value);
        // the value can't be 0
        numericValue = (0, _math.EQ)(numericValue, 0) ? this._minOutput : numericValue;
        this._assertRange(numericValue);
        const computedTime = this.toSeconds(endTime);
        (0, _debug.assert)(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);
        // store the event
        this._events.add({
            time: computedTime,
            type: "exponentialRampToValueAtTime",
            value: numericValue
        });
        this.log(this.units, "exponentialRampToValueAtTime", value, computedTime);
        this._param.exponentialRampToValueAtTime(numericValue, computedTime);
        return this;
    }
    exponentialRampTo(value, rampTime, startTime) {
        startTime = this.toSeconds(startTime);
        this.setRampPoint(startTime);
        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));
        return this;
    }
    linearRampTo(value, rampTime, startTime) {
        startTime = this.toSeconds(startTime);
        this.setRampPoint(startTime);
        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));
        return this;
    }
    targetRampTo(value, rampTime, startTime) {
        startTime = this.toSeconds(startTime);
        this.setRampPoint(startTime);
        this.exponentialApproachValueAtTime(value, startTime, rampTime);
        return this;
    }
    exponentialApproachValueAtTime(value, time, rampTime) {
        time = this.toSeconds(time);
        rampTime = this.toSeconds(rampTime);
        const timeConstant = Math.log(rampTime + 1) / Math.log(200);
        this.setTargetAtTime(value, time, timeConstant);
        // at 90% start a linear ramp to the final value
        this.cancelAndHoldAtTime(time + rampTime * 0.9);
        this.linearRampToValueAtTime(value, time + rampTime);
        return this;
    }
    setTargetAtTime(value, startTime, timeConstant) {
        const numericValue = this._fromType(value);
        // The value will never be able to approach without timeConstant > 0.
        (0, _debug.assert)(isFinite(timeConstant) && timeConstant > 0, "timeConstant must be a number greater than 0");
        const computedTime = this.toSeconds(startTime);
        this._assertRange(numericValue);
        (0, _debug.assert)(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setTargetAtTime: ${JSON.stringify(value)}, ${JSON.stringify(startTime)}`);
        this._events.add({
            constant: timeConstant,
            time: computedTime,
            type: "setTargetAtTime",
            value: numericValue
        });
        this.log(this.units, "setTargetAtTime", value, computedTime, timeConstant);
        this._param.setTargetAtTime(numericValue, computedTime, timeConstant);
        return this;
    }
    setValueCurveAtTime(values, startTime, duration, scaling = 1) {
        duration = this.toSeconds(duration);
        startTime = this.toSeconds(startTime);
        const startingValue = this._fromType(values[0]) * scaling;
        this.setValueAtTime(this._toType(startingValue), startTime);
        const segTime = duration / (values.length - 1);
        for(let i = 1; i < values.length; i++){
            const numericValue = this._fromType(values[i]) * scaling;
            this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);
        }
        return this;
    }
    cancelScheduledValues(time) {
        const computedTime = this.toSeconds(time);
        (0, _debug.assert)(isFinite(computedTime), `Invalid argument to cancelScheduledValues: ${JSON.stringify(time)}`);
        this._events.cancel(computedTime);
        this._param.cancelScheduledValues(computedTime);
        this.log(this.units, "cancelScheduledValues", computedTime);
        return this;
    }
    cancelAndHoldAtTime(time) {
        const computedTime = this.toSeconds(time);
        const valueAtTime = this._fromType(this.getValueAtTime(computedTime));
        // remove the schedule events
        (0, _debug.assert)(isFinite(computedTime), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(time)}`);
        this.log(this.units, "cancelAndHoldAtTime", computedTime, "value=" + valueAtTime);
        // if there is an event at the given computedTime
        // and that even is not a "set"
        const before = this._events.get(computedTime);
        const after = this._events.getAfter(computedTime);
        if (before && (0, _math.EQ)(before.time, computedTime)) {
            // remove everything after
            if (after) {
                this._param.cancelScheduledValues(after.time);
                this._events.cancel(after.time);
            } else {
                this._param.cancelAndHoldAtTime(computedTime);
                this._events.cancel(computedTime + this.sampleTime);
            }
        } else if (after) {
            this._param.cancelScheduledValues(after.time);
            // cancel the next event(s)
            this._events.cancel(after.time);
            if (after.type === "linearRampToValueAtTime") this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);
            else if (after.type === "exponentialRampToValueAtTime") this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);
        }
        // set the value at the given time
        this._events.add({
            time: computedTime,
            type: "setValueAtTime",
            value: valueAtTime
        });
        this._param.setValueAtTime(valueAtTime, computedTime);
        return this;
    }
    rampTo(value, rampTime = 0.1, startTime) {
        if (this.units === "frequency" || this.units === "bpm" || this.units === "decibels") this.exponentialRampTo(value, rampTime, startTime);
        else this.linearRampTo(value, rampTime, startTime);
        return this;
    }
    /**
     * Apply all of the previously scheduled events to the passed in Param or AudioParam.
     * The applied values will start at the context's current time and schedule
     * all of the events which are scheduled on this Param onto the passed in param.
     */ apply(param) {
        const now = this.context.currentTime;
        // set the param's value at the current time and schedule everything else
        param.setValueAtTime(this.getValueAtTime(now), now);
        // if the previous event was a curve, then set the rest of it
        const previousEvent = this._events.get(now);
        if (previousEvent && previousEvent.type === "setTargetAtTime") {
            // approx it until the next event with linear ramps
            const nextEvent = this._events.getAfter(previousEvent.time);
            // or for 2 seconds if there is no event
            const endTime = nextEvent ? nextEvent.time : now + 2;
            const subdivisions = (endTime - now) / 10;
            for(let i = now; i < endTime; i += subdivisions)param.linearRampToValueAtTime(this.getValueAtTime(i), i);
        }
        this._events.forEachAfter(this.context.currentTime, (event)=>{
            if (event.type === "cancelScheduledValues") param.cancelScheduledValues(event.time);
            else if (event.type === "setTargetAtTime") param.setTargetAtTime(event.value, event.time, event.constant);
            else param[event.type](event.value, event.time);
        });
        return this;
    }
    /**
     * Replace the Param's internal AudioParam. Will apply scheduled curves
     * onto the parameter and replace the connections.
     */ setParam(param) {
        (0, _debug.assert)(this._swappable, "The Param must be assigned as 'swappable' in the constructor");
        const input = this.input;
        input.disconnect(this._param);
        this.apply(param);
        this._param = param;
        input.connect(this._param);
        return this;
    }
    dispose() {
        super.dispose();
        this._events.dispose();
        return this;
    }
    get defaultValue() {
        return this._toType(this._param.defaultValue);
    }
    //-------------------------------------
    // 	AUTOMATION CURVE CALCULATIONS
    // 	MIT License, copyright (c) 2014 Jordan Santell
    //-------------------------------------
    // Calculates the the value along the curve produced by setTargetAtTime
    _exponentialApproach(t0, v0, v1, timeConstant, t) {
        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);
    }
    // Calculates the the value along the curve produced by linearRampToValueAtTime
    _linearInterpolate(t0, v0, t1, v1, t) {
        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));
    }
    // Calculates the the value along the curve produced by exponentialRampToValueAtTime
    _exponentialInterpolate(t0, v0, t1, v1, t) {
        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));
    }
}

},{"../type/Conversions":"iww1u","../util/AdvancedTypeCheck":"gKVc7","../util/Defaults":"a9M5s","../util/Timeline":"36KJ4","../util/TypeCheck":"eMH5A","./ToneWithContext":"gAuzg","../util/Math":"7mtt2","../util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kZ3Kj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * ToneAudioNode is the base class for classes which process audio.
 */ parcelHelpers.export(exports, "ToneAudioNode", ()=>ToneAudioNode);
//-------------------------------------
// CONNECTIONS
//-------------------------------------
/**
 * connect together all of the arguments in series
 * @param nodes
 */ parcelHelpers.export(exports, "connectSeries", ()=>connectSeries);
/**
 * Connect two nodes together so that signal flows from the
 * first node to the second. Optionally specify the input and output channels.
 * @param srcNode The source node
 * @param dstNode The destination node
 * @param outputNumber The output channel of the srcNode
 * @param inputNumber The input channel of the dstNode
 */ parcelHelpers.export(exports, "connect", ()=>connect);
/**
 * Disconnect a node from all nodes or optionally include a destination node and input/output channels.
 * @param srcNode The source node
 * @param dstNode The destination node
 * @param outputNumber The output channel of the srcNode
 * @param inputNumber The input channel of the dstNode
 */ parcelHelpers.export(exports, "disconnect", ()=>disconnect);
var _advancedTypeCheck = require("../util/AdvancedTypeCheck");
var _typeCheck = require("../util/TypeCheck");
var _param = require("./Param");
var _toneWithContext = require("./ToneWithContext");
var _debug = require("../util/Debug");
class ToneAudioNode extends (0, _toneWithContext.ToneWithContext) {
    constructor(){
        super(...arguments);
        /**
         * The name of the class
         */ this.name = "ToneAudioNode";
        /**
         * List all of the node that must be set to match the ChannelProperties
         */ this._internalChannels = [];
    }
    /**
     * The number of inputs feeding into the AudioNode.
     * For source nodes, this will be 0.
     * @example
     * const node = new Tone.Gain();
     * console.log(node.numberOfInputs);
     */ get numberOfInputs() {
        if ((0, _typeCheck.isDefined)(this.input)) {
            if ((0, _advancedTypeCheck.isAudioParam)(this.input) || this.input instanceof (0, _param.Param)) return 1;
            else return this.input.numberOfInputs;
        } else return 0;
    }
    /**
     * The number of outputs of the AudioNode.
     * @example
     * const node = new Tone.Gain();
     * console.log(node.numberOfOutputs);
     */ get numberOfOutputs() {
        if ((0, _typeCheck.isDefined)(this.output)) return this.output.numberOfOutputs;
        else return 0;
    }
    //-------------------------------------
    // AUDIO PROPERTIES
    //-------------------------------------
    /**
     * Used to decide which nodes to get/set properties on
     */ _isAudioNode(node) {
        return (0, _typeCheck.isDefined)(node) && (node instanceof ToneAudioNode || (0, _advancedTypeCheck.isAudioNode)(node));
    }
    /**
     * Get all of the audio nodes (either internal or input/output) which together
     * make up how the class node responds to channel input/output
     */ _getInternalNodes() {
        const nodeList = this._internalChannels.slice(0);
        if (this._isAudioNode(this.input)) nodeList.push(this.input);
        if (this._isAudioNode(this.output)) {
            if (this.input !== this.output) nodeList.push(this.output);
        }
        return nodeList;
    }
    /**
     * Set the audio options for this node such as channelInterpretation
     * channelCount, etc.
     * @param options
     */ _setChannelProperties(options) {
        const nodeList = this._getInternalNodes();
        nodeList.forEach((node)=>{
            node.channelCount = options.channelCount;
            node.channelCountMode = options.channelCountMode;
            node.channelInterpretation = options.channelInterpretation;
        });
    }
    /**
     * Get the current audio options for this node such as channelInterpretation
     * channelCount, etc.
     */ _getChannelProperties() {
        const nodeList = this._getInternalNodes();
        (0, _debug.assert)(nodeList.length > 0, "ToneAudioNode does not have any internal nodes");
        // use the first node to get properties
        // they should all be the same
        const node = nodeList[0];
        return {
            channelCount: node.channelCount,
            channelCountMode: node.channelCountMode,
            channelInterpretation: node.channelInterpretation
        };
    }
    /**
     * channelCount is the number of channels used when up-mixing and down-mixing
     * connections to any inputs to the node. The default value is 2 except for
     * specific nodes where its value is specially determined.
     */ get channelCount() {
        return this._getChannelProperties().channelCount;
    }
    set channelCount(channelCount) {
        const props = this._getChannelProperties();
        // merge it with the other properties
        this._setChannelProperties(Object.assign(props, {
            channelCount
        }));
    }
    /**
     * channelCountMode determines how channels will be counted when up-mixing and
     * down-mixing connections to any inputs to the node.
     * The default value is "max". This attribute has no effect for nodes with no inputs.
     * * "max" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.
     * * "clamped-max" - computedNumberOfChannels is determined as for "max" and then clamped to a maximum value of the given channelCount.
     * * "explicit" - computedNumberOfChannels is the exact value as specified by the channelCount.
     */ get channelCountMode() {
        return this._getChannelProperties().channelCountMode;
    }
    set channelCountMode(channelCountMode) {
        const props = this._getChannelProperties();
        // merge it with the other properties
        this._setChannelProperties(Object.assign(props, {
            channelCountMode
        }));
    }
    /**
     * channelInterpretation determines how individual channels will be treated
     * when up-mixing and down-mixing connections to any inputs to the node.
     * The default value is "speakers".
     */ get channelInterpretation() {
        return this._getChannelProperties().channelInterpretation;
    }
    set channelInterpretation(channelInterpretation) {
        const props = this._getChannelProperties();
        // merge it with the other properties
        this._setChannelProperties(Object.assign(props, {
            channelInterpretation
        }));
    }
    //-------------------------------------
    // CONNECTIONS
    //-------------------------------------
    /**
     * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode
     * @param destination The output to connect to
     * @param outputNum The output to connect from
     * @param inputNum The input to connect to
     */ connect(destination, outputNum = 0, inputNum = 0) {
        connect(this, destination, outputNum, inputNum);
        return this;
    }
    /**
     * Connect the output to the context's destination node.
     * @example
     * const osc = new Tone.Oscillator("C2").start();
     * osc.toDestination();
     */ toDestination() {
        this.connect(this.context.destination);
        return this;
    }
    /**
     * Connect the output to the context's destination node.
     * See [[toDestination]]
     * @deprecated
     */ toMaster() {
        (0, _debug.warn)("toMaster() has been renamed toDestination()");
        return this.toDestination();
    }
    /**
     * disconnect the output
     */ disconnect(destination, outputNum = 0, inputNum = 0) {
        disconnect(this, destination, outputNum, inputNum);
        return this;
    }
    /**
     * Connect the output of this node to the rest of the nodes in series.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/drum-samples/handdrum-loop.mp3");
     * player.autostart = true;
     * const filter = new Tone.AutoFilter(4).start();
     * const distortion = new Tone.Distortion(0.5);
     * // connect the player to the filter, distortion and then to the master output
     * player.chain(filter, distortion, Tone.Destination);
     */ chain(...nodes) {
        connectSeries(this, ...nodes);
        return this;
    }
    /**
     * connect the output of this node to the rest of the nodes in parallel.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3");
     * player.autostart = true;
     * const pitchShift = new Tone.PitchShift(4).toDestination();
     * const filter = new Tone.Filter("G5").toDestination();
     * // connect a node to the pitch shift and filter in parallel
     * player.fan(pitchShift, filter);
     */ fan(...nodes) {
        nodes.forEach((node)=>this.connect(node));
        return this;
    }
    /**
     * Dispose and disconnect
     */ dispose() {
        super.dispose();
        if ((0, _typeCheck.isDefined)(this.input)) {
            if (this.input instanceof ToneAudioNode) this.input.dispose();
            else if ((0, _advancedTypeCheck.isAudioNode)(this.input)) this.input.disconnect();
        }
        if ((0, _typeCheck.isDefined)(this.output)) {
            if (this.output instanceof ToneAudioNode) this.output.dispose();
            else if ((0, _advancedTypeCheck.isAudioNode)(this.output)) this.output.disconnect();
        }
        this._internalChannels = [];
        return this;
    }
}
function connectSeries(...nodes) {
    const first = nodes.shift();
    nodes.reduce((prev, current)=>{
        if (prev instanceof ToneAudioNode) prev.connect(current);
        else if ((0, _advancedTypeCheck.isAudioNode)(prev)) connect(prev, current);
        return current;
    }, first);
}
function connect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {
    (0, _debug.assert)((0, _typeCheck.isDefined)(srcNode), "Cannot connect from undefined node");
    (0, _debug.assert)((0, _typeCheck.isDefined)(dstNode), "Cannot connect to undefined node");
    if (dstNode instanceof ToneAudioNode || (0, _advancedTypeCheck.isAudioNode)(dstNode)) (0, _debug.assert)(dstNode.numberOfInputs > 0, "Cannot connect to node with no inputs");
    (0, _debug.assert)(srcNode.numberOfOutputs > 0, "Cannot connect from node with no outputs");
    // resolve the input of the dstNode
    while(dstNode instanceof ToneAudioNode || dstNode instanceof (0, _param.Param))if ((0, _typeCheck.isDefined)(dstNode.input)) dstNode = dstNode.input;
    while(srcNode instanceof ToneAudioNode)if ((0, _typeCheck.isDefined)(srcNode.output)) srcNode = srcNode.output;
    // make the connection
    if ((0, _advancedTypeCheck.isAudioParam)(dstNode)) srcNode.connect(dstNode, outputNumber);
    else srcNode.connect(dstNode, outputNumber, inputNumber);
}
function disconnect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {
    // resolve the destination node
    if ((0, _typeCheck.isDefined)(dstNode)) while(dstNode instanceof ToneAudioNode)dstNode = dstNode.input;
    // resolve the src node
    while(!(0, _advancedTypeCheck.isAudioNode)(srcNode))if ((0, _typeCheck.isDefined)(srcNode.output)) srcNode = srcNode.output;
    if ((0, _advancedTypeCheck.isAudioParam)(dstNode)) srcNode.disconnect(dstNode, outputNumber);
    else if ((0, _advancedTypeCheck.isAudioNode)(dstNode)) srcNode.disconnect(dstNode, outputNumber, inputNumber);
    else srcNode.disconnect();
}

},{"../util/AdvancedTypeCheck":"gKVc7","../util/TypeCheck":"eMH5A","./Param":"5PVlJ","./ToneWithContext":"gAuzg","../util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aU7Ju":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Wrapper around the native fire-and-forget ConstantSource.
 * Adds the ability to reschedule the stop method.
 * @category Signal
 */ parcelHelpers.export(exports, "ToneConstantSource", ()=>ToneConstantSource);
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _param = require("../core/context/Param");
var _defaults = require("../core/util/Defaults");
var _oneShotSource = require("../source/OneShotSource");
class ToneConstantSource extends (0, _oneShotSource.OneShotSource) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(ToneConstantSource.getDefaults(), arguments, [
            "offset"
        ]));
        this.name = "ToneConstantSource";
        /**
         * The signal generator
         */ this._source = this.context.createConstantSource();
        const options = (0, _defaults.optionsFromArguments)(ToneConstantSource.getDefaults(), arguments, [
            "offset"
        ]);
        (0, _toneAudioNode.connect)(this._source, this._gainNode);
        this.offset = new (0, _param.Param)({
            context: this.context,
            convert: options.convert,
            param: this._source.offset,
            units: options.units,
            value: options.offset,
            minValue: options.minValue,
            maxValue: options.maxValue
        });
    }
    static getDefaults() {
        return Object.assign((0, _oneShotSource.OneShotSource).getDefaults(), {
            convert: true,
            offset: 1,
            units: "number"
        });
    }
    /**
     * Start the source node at the given time
     * @param  time When to start the source
     */ start(time) {
        const computedTime = this.toSeconds(time);
        this.log("start", computedTime);
        this._startGain(computedTime);
        this._source.start(computedTime);
        return this;
    }
    _stopSource(time) {
        this._source.stop(time);
    }
    dispose() {
        super.dispose();
        if (this.state === "started") this.stop();
        this._source.disconnect();
        this.offset.dispose();
        return this;
    }
}

},{"../core/context/ToneAudioNode":"kZ3Kj","../core/context/Param":"5PVlJ","../core/util/Defaults":"a9M5s","../source/OneShotSource":"iVQxd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iVQxd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Base class for fire-and-forget nodes
 */ parcelHelpers.export(exports, "OneShotSource", ()=>OneShotSource);
var _gain = require("../core/context/Gain");
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _interface = require("../core/util/Interface");
var _debug = require("../core/util/Debug");
class OneShotSource extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(options){
        super(options);
        /**
         * The callback to invoke after the
         * source is done playing.
         */ this.onended = (0, _interface.noOp);
        /**
         * The start time
         */ this._startTime = -1;
        /**
         * The stop time
         */ this._stopTime = -1;
        /**
         * The id of the timeout
         */ this._timeout = -1;
        /**
         * The public output node
         */ this.output = new (0, _gain.Gain)({
            context: this.context,
            gain: 0
        });
        /**
         * The output gain node.
         */ this._gainNode = this.output;
        /**
         * Get the playback state at the given time
         */ this.getStateAtTime = function(time) {
            const computedTime = this.toSeconds(time);
            if (this._startTime !== -1 && computedTime >= this._startTime && (this._stopTime === -1 || computedTime <= this._stopTime)) return "started";
            else return "stopped";
        };
        this._fadeIn = options.fadeIn;
        this._fadeOut = options.fadeOut;
        this._curve = options.curve;
        this.onended = options.onended;
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            curve: "linear",
            fadeIn: 0,
            fadeOut: 0,
            onended: (0, _interface.noOp)
        });
    }
    /**
     * Start the source at the given time
     * @param  time When to start the source
     */ _startGain(time, gain = 1) {
        (0, _debug.assert)(this._startTime === -1, "Source cannot be started more than once");
        // apply a fade in envelope
        const fadeInTime = this.toSeconds(this._fadeIn);
        // record the start time
        this._startTime = time + fadeInTime;
        this._startTime = Math.max(this._startTime, this.context.currentTime);
        // schedule the envelope
        if (fadeInTime > 0) {
            this._gainNode.gain.setValueAtTime(0, time);
            if (this._curve === "linear") this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);
            else this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);
        } else this._gainNode.gain.setValueAtTime(gain, time);
        return this;
    }
    /**
     * Stop the source node at the given time.
     * @param time When to stop the source
     */ stop(time) {
        this.log("stop", time);
        this._stopGain(this.toSeconds(time));
        return this;
    }
    /**
     * Stop the source at the given time
     * @param  time When to stop the source
     */ _stopGain(time) {
        (0, _debug.assert)(this._startTime !== -1, "'start' must be called before 'stop'");
        // cancel the previous stop
        this.cancelStop();
        // the fadeOut time
        const fadeOutTime = this.toSeconds(this._fadeOut);
        // schedule the stop callback
        this._stopTime = this.toSeconds(time) + fadeOutTime;
        this._stopTime = Math.max(this._stopTime, this.context.currentTime);
        if (fadeOutTime > 0) {
            // start the fade out curve at the given time
            if (this._curve === "linear") this._gainNode.gain.linearRampTo(0, fadeOutTime, time);
            else this._gainNode.gain.targetRampTo(0, fadeOutTime, time);
        } else {
            // stop any ongoing ramps, and set the value to 0
            this._gainNode.gain.cancelAndHoldAtTime(time);
            this._gainNode.gain.setValueAtTime(0, time);
        }
        this.context.clearTimeout(this._timeout);
        this._timeout = this.context.setTimeout(()=>{
            // allow additional time for the exponential curve to fully decay
            const additionalTail = this._curve === "exponential" ? fadeOutTime * 2 : 0;
            this._stopSource(this.now() + additionalTail);
            this._onended();
        }, this._stopTime - this.context.currentTime);
        return this;
    }
    /**
     * Invoke the onended callback
     */ _onended() {
        if (this.onended !== (0, _interface.noOp)) {
            this.onended(this);
            // overwrite onended to make sure it only is called once
            this.onended = (0, _interface.noOp);
            // dispose when it's ended to free up for garbage collection only in the online context
            if (!this.context.isOffline) {
                const disposeCallback = ()=>this.dispose();
                // @ts-ignore
                if (typeof window.requestIdleCallback !== "undefined") // @ts-ignore
                window.requestIdleCallback(disposeCallback);
                else setTimeout(disposeCallback, 1000);
            }
        }
    }
    /**
     * Get the playback state at the current time
     */ get state() {
        return this.getStateAtTime(this.now());
    }
    /**
     * Cancel a scheduled stop event
     */ cancelStop() {
        this.log("cancelStop");
        (0, _debug.assert)(this._startTime !== -1, "Source is not started");
        // cancel the stop envelope
        this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);
        this.context.clearTimeout(this._timeout);
        this._stopTime = -1;
        return this;
    }
    dispose() {
        super.dispose();
        this._gainNode.disconnect();
        return this;
    }
}

},{"../core/context/Gain":"kj68Y","../core/context/ToneAudioNode":"kZ3Kj","../core/util/Interface":"hVOjA","../core/util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kj68Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A thin wrapper around the Native Web Audio GainNode.
 * The GainNode is a basic building block of the Web Audio
 * API and is useful for routing audio and adjusting gains.
 * @category Core
 * @example
 * return Tone.Offline(() => {
 * 	const gainNode = new Tone.Gain(0).toDestination();
 * 	const osc = new Tone.Oscillator(30).connect(gainNode).start();
 * 	gainNode.gain.rampTo(1, 0.1);
 * 	gainNode.gain.rampTo(0, 0.4, 0.2);
 * }, 0.7, 1);
 */ parcelHelpers.export(exports, "Gain", ()=>Gain);
var _param = require("../context/Param");
var _defaults = require("../util/Defaults");
var _interface = require("../util/Interface");
var _toneAudioNode = require("./ToneAudioNode");
class Gain extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Gain.getDefaults(), arguments, [
            "gain",
            "units"
        ]));
        this.name = "Gain";
        /**
         * The wrapped GainNode.
         */ this._gainNode = this.context.createGain();
        // input = output
        this.input = this._gainNode;
        this.output = this._gainNode;
        const options = (0, _defaults.optionsFromArguments)(Gain.getDefaults(), arguments, [
            "gain",
            "units"
        ]);
        this.gain = new (0, _param.Param)({
            context: this.context,
            convert: options.convert,
            param: this._gainNode.gain,
            units: options.units,
            value: options.gain,
            minValue: options.minValue,
            maxValue: options.maxValue
        });
        (0, _interface.readOnly)(this, "gain");
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            convert: true,
            gain: 1,
            units: "gain"
        });
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this._gainNode.disconnect();
        this.gain.dispose();
        return this;
    }
}

},{"../context/Param":"5PVlJ","../util/Defaults":"a9M5s","../util/Interface":"hVOjA","./ToneAudioNode":"kZ3Kj","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5sGSd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A Param class just for computing ticks. Similar to the [[Param]] class,
 * but offers conversion to BPM values as well as ability to compute tick
 * duration and elapsed ticks
 */ parcelHelpers.export(exports, "TickParam", ()=>TickParam);
var _param = require("../context/Param");
var _defaults = require("../util/Defaults");
var _timeline = require("../util/Timeline");
var _typeCheck = require("../util/TypeCheck");
class TickParam extends (0, _param.Param) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(TickParam.getDefaults(), arguments, [
            "value"
        ]));
        this.name = "TickParam";
        /**
         * The timeline which tracks all of the automations.
         */ this._events = new (0, _timeline.Timeline)(Infinity);
        /**
         * The internal holder for the multiplier value
         */ this._multiplier = 1;
        const options = (0, _defaults.optionsFromArguments)(TickParam.getDefaults(), arguments, [
            "value"
        ]);
        // set the multiplier
        this._multiplier = options.multiplier;
        // clear the ticks from the beginning
        this._events.cancel(0);
        // set an initial event
        this._events.add({
            ticks: 0,
            time: 0,
            type: "setValueAtTime",
            value: this._fromType(options.value)
        });
        this.setValueAtTime(options.value, 0);
    }
    static getDefaults() {
        return Object.assign((0, _param.Param).getDefaults(), {
            multiplier: 1,
            units: "hertz",
            value: 1
        });
    }
    setTargetAtTime(value, time, constant) {
        // approximate it with multiple linear ramps
        time = this.toSeconds(time);
        this.setRampPoint(time);
        const computedValue = this._fromType(value);
        // start from previously scheduled value
        const prevEvent = this._events.get(time);
        const segments = Math.round(Math.max(1 / constant, 1));
        for(let i = 0; i <= segments; i++){
            const segTime = constant * i + time;
            const rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);
            this.linearRampToValueAtTime(this._toType(rampVal), segTime);
        }
        return this;
    }
    setValueAtTime(value, time) {
        const computedTime = this.toSeconds(time);
        super.setValueAtTime(value, time);
        const event = this._events.get(computedTime);
        const previousEvent = this._events.previousEvent(event);
        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);
        event.ticks = Math.max(ticksUntilTime, 0);
        return this;
    }
    linearRampToValueAtTime(value, time) {
        const computedTime = this.toSeconds(time);
        super.linearRampToValueAtTime(value, time);
        const event = this._events.get(computedTime);
        const previousEvent = this._events.previousEvent(event);
        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);
        event.ticks = Math.max(ticksUntilTime, 0);
        return this;
    }
    exponentialRampToValueAtTime(value, time) {
        // aproximate it with multiple linear ramps
        time = this.toSeconds(time);
        const computedVal = this._fromType(value);
        // start from previously scheduled value
        const prevEvent = this._events.get(time);
        // approx 10 segments per second
        const segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));
        const segmentDur = (time - prevEvent.time) / segments;
        for(let i = 0; i <= segments; i++){
            const segTime = segmentDur * i + prevEvent.time;
            const rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);
            this.linearRampToValueAtTime(this._toType(rampVal), segTime);
        }
        return this;
    }
    /**
     * Returns the tick value at the time. Takes into account
     * any automation curves scheduled on the signal.
     * @param  event The time to get the tick count at
     * @return The number of ticks which have elapsed at the time given any automations.
     */ _getTicksUntilEvent(event, time) {
        if (event === null) event = {
            ticks: 0,
            time: 0,
            type: "setValueAtTime",
            value: 0
        };
        else if ((0, _typeCheck.isUndef)(event.ticks)) {
            const previousEvent = this._events.previousEvent(event);
            event.ticks = this._getTicksUntilEvent(previousEvent, event.time);
        }
        const val0 = this._fromType(this.getValueAtTime(event.time));
        let val1 = this._fromType(this.getValueAtTime(time));
        // if it's right on the line, take the previous value
        const onTheLineEvent = this._events.get(time);
        if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === "setValueAtTime") val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));
        return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;
    }
    /**
     * Returns the tick value at the time. Takes into account
     * any automation curves scheduled on the signal.
     * @param  time The time to get the tick count at
     * @return The number of ticks which have elapsed at the time given any automations.
     */ getTicksAtTime(time) {
        const computedTime = this.toSeconds(time);
        const event = this._events.get(computedTime);
        return Math.max(this._getTicksUntilEvent(event, computedTime), 0);
    }
    /**
     * Return the elapsed time of the number of ticks from the given time
     * @param ticks The number of ticks to calculate
     * @param  time The time to get the next tick from
     * @return The duration of the number of ticks from the given time in seconds
     */ getDurationOfTicks(ticks, time) {
        const computedTime = this.toSeconds(time);
        const currentTick = this.getTicksAtTime(time);
        return this.getTimeOfTick(currentTick + ticks) - computedTime;
    }
    /**
     * Given a tick, returns the time that tick occurs at.
     * @return The time that the tick occurs.
     */ getTimeOfTick(tick) {
        const before = this._events.get(tick, "ticks");
        const after = this._events.getAfter(tick, "ticks");
        if (before && before.ticks === tick) return before.time;
        else if (before && after && after.type === "linearRampToValueAtTime" && before.value !== after.value) {
            const val0 = this._fromType(this.getValueAtTime(before.time));
            const val1 = this._fromType(this.getValueAtTime(after.time));
            const delta = (val1 - val0) / (after.time - before.time);
            const k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));
            const sol1 = (-val0 + k) / delta;
            const sol2 = (-val0 - k) / delta;
            return (sol1 > 0 ? sol1 : sol2) + before.time;
        } else if (before) {
            if (before.value === 0) return Infinity;
            else return before.time + (tick - before.ticks) / before.value;
        } else return tick / this._initialValue;
    }
    /**
     * Convert some number of ticks their the duration in seconds accounting
     * for any automation curves starting at the given time.
     * @param  ticks The number of ticks to convert to seconds.
     * @param  when  When along the automation timeline to convert the ticks.
     * @return The duration in seconds of the ticks.
     */ ticksToTime(ticks, when) {
        return this.getDurationOfTicks(ticks, when);
    }
    /**
     * The inverse of [[ticksToTime]]. Convert a duration in
     * seconds to the corresponding number of ticks accounting for any
     * automation curves starting at the given time.
     * @param  duration The time interval to convert to ticks.
     * @param  when When along the automation timeline to convert the ticks.
     * @return The duration in ticks.
     */ timeToTicks(duration, when) {
        const computedTime = this.toSeconds(when);
        const computedDuration = this.toSeconds(duration);
        const startTicks = this.getTicksAtTime(computedTime);
        const endTicks = this.getTicksAtTime(computedTime + computedDuration);
        return endTicks - startTicks;
    }
    /**
     * Convert from the type when the unit value is BPM
     */ _fromType(val) {
        if (this.units === "bpm" && this.multiplier) return 1 / (60 / val / this.multiplier);
        else return super._fromType(val);
    }
    /**
     * Special case of type conversion where the units === "bpm"
     */ _toType(val) {
        if (this.units === "bpm" && this.multiplier) return val / this.multiplier * 60;
        else return super._toType(val);
    }
    /**
     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.
     */ get multiplier() {
        return this._multiplier;
    }
    set multiplier(m) {
        // get and reset the current value with the new multiplier
        // might be necessary to clear all the previous values
        const currentVal = this.value;
        this._multiplier = m;
        this.cancelScheduledValues(0);
        this.setValueAtTime(currentVal, 0);
    }
}

},{"../context/Param":"5PVlJ","../util/Defaults":"a9M5s","../util/Timeline":"36KJ4","../util/TypeCheck":"eMH5A","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1qHQA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).
 * @category Core
 * @example
 * return Tone.Offline(() => {
 * 	const delay = new Tone.Delay(0.1).toDestination();
 * 	// connect the signal to both the delay and the destination
 * 	const pulse = new Tone.PulseOscillator().connect(delay).toDestination();
 * 	// start and stop the pulse
 * 	pulse.start(0).stop(0.01);
 * }, 0.5, 1);
 */ parcelHelpers.export(exports, "Delay", ()=>Delay);
var _param = require("../context/Param");
var _defaults = require("../util/Defaults");
var _interface = require("../util/Interface");
var _toneAudioNode = require("./ToneAudioNode");
class Delay extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Delay.getDefaults(), arguments, [
            "delayTime",
            "maxDelay"
        ]));
        this.name = "Delay";
        const options = (0, _defaults.optionsFromArguments)(Delay.getDefaults(), arguments, [
            "delayTime",
            "maxDelay"
        ]);
        const maxDelayInSeconds = this.toSeconds(options.maxDelay);
        this._maxDelay = Math.max(maxDelayInSeconds, this.toSeconds(options.delayTime));
        this._delayNode = this.input = this.output = this.context.createDelay(maxDelayInSeconds);
        this.delayTime = new (0, _param.Param)({
            context: this.context,
            param: this._delayNode.delayTime,
            units: "time",
            value: options.delayTime,
            minValue: 0,
            maxValue: this.maxDelay
        });
        (0, _interface.readOnly)(this, "delayTime");
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            delayTime: 0,
            maxDelay: 1
        });
    }
    /**
     * The maximum delay time. This cannot be changed after
     * the value is passed into the constructor.
     */ get maxDelay() {
        return this._maxDelay;
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this._delayNode.disconnect();
        this.delayTime.dispose();
        return this;
    }
}

},{"../context/Param":"5PVlJ","../util/Defaults":"a9M5s","../util/Interface":"hVOjA","./ToneAudioNode":"kZ3Kj","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fDjd0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.
 * The OfflineAudioContext is capable of rendering much faster than real time in many cases.
 * The callback function also passes in an offline instance of [[Context]] which can be used
 * to schedule events along the Transport.
 * @param  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.
 * @param  duration     the amount of time to record for.
 * @return  The promise which is invoked with the ToneAudioBuffer of the recorded output.
 * @example
 * // render 2 seconds of the oscillator
 * Tone.Offline(() => {
 * 	// only nodes created in this callback will be recorded
 * 	const oscillator = new Tone.Oscillator().toDestination().start(0);
 * }, 2).then((buffer) => {
 * 	// do something with the output buffer
 * 	console.log(buffer);
 * });
 * @example
 * // can also schedule events along the Transport
 * // using the passed in Offline Transport
 * Tone.Offline(({ transport }) => {
 * 	const osc = new Tone.Oscillator().toDestination();
 * 	transport.schedule(time => {
 * 		osc.start(time).stop(time + 0.1);
 * 	}, 1);
 * 	// make sure to start the transport
 * 	transport.start(0.2);
 * }, 4).then((buffer) => {
 * 	// do something with the output buffer
 * 	console.log(buffer);
 * });
 * @category Core
 */ parcelHelpers.export(exports, "Offline", ()=>Offline);
var _tslib = require("tslib");
var _global = require("../Global");
var _offlineContext = require("./OfflineContext");
var _toneAudioBuffer = require("./ToneAudioBuffer");
function Offline(callback, duration, channels = 2, sampleRate = (0, _global.getContext)().sampleRate) {
    return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
        // set the OfflineAudioContext based on the current context
        const originalContext = (0, _global.getContext)();
        const context = new (0, _offlineContext.OfflineContext)(channels, duration, sampleRate);
        (0, _global.setContext)(context);
        // invoke the callback/scheduling
        yield callback(context);
        // then render the audio
        const bufferPromise = context.render();
        // return the original AudioContext
        (0, _global.setContext)(originalContext);
        // await the rendering
        const buffer = yield bufferPromise;
        // return the audio
        return new (0, _toneAudioBuffer.ToneAudioBuffer)(buffer);
    });
}

},{"tslib":"lRdW5","../Global":"79THw","./OfflineContext":"8VnAL","./ToneAudioBuffer":"8aSPC","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8zO1I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A data structure for holding multiple buffers in a Map-like datastructure.
 *
 * @example
 * const pianoSamples = new Tone.ToneAudioBuffers({
 * 	A1: "https://tonejs.github.io/audio/casio/A1.mp3",
 * 	A2: "https://tonejs.github.io/audio/casio/A2.mp3",
 * }, () => {
 * 	const player = new Tone.Player().toDestination();
 * 	// play one of the samples when they all load
 * 	player.buffer = pianoSamples.get("A2");
 * 	player.start();
 * });
 * @example
 * // To pass in additional parameters in the second parameter
 * const buffers = new Tone.ToneAudioBuffers({
 * 	 urls: {
 * 		 A1: "A1.mp3",
 * 		 A2: "A2.mp3",
 * 	 },
 * 	 onload: () => console.log("loaded"),
 * 	 baseUrl: "https://tonejs.github.io/audio/casio/"
 * });
 * @category Core
 */ parcelHelpers.export(exports, "ToneAudioBuffers", ()=>ToneAudioBuffers);
var _tone = require("../Tone");
var _defaults = require("../util/Defaults");
var _interface = require("../util/Interface");
var _typeCheck = require("../util/TypeCheck");
var _toneAudioBuffer = require("./ToneAudioBuffer");
var _debug = require("../util/Debug");
class ToneAudioBuffers extends (0, _tone.Tone) {
    constructor(){
        super();
        this.name = "ToneAudioBuffers";
        /**
         * All of the buffers
         */ this._buffers = new Map();
        /**
         * Keep track of the number of loaded buffers
         */ this._loadingCount = 0;
        const options = (0, _defaults.optionsFromArguments)(ToneAudioBuffers.getDefaults(), arguments, [
            "urls",
            "onload",
            "baseUrl"
        ], "urls");
        this.baseUrl = options.baseUrl;
        // add each one
        Object.keys(options.urls).forEach((name)=>{
            this._loadingCount++;
            const url = options.urls[name];
            this.add(name, url, this._bufferLoaded.bind(this, options.onload), options.onerror);
        });
    }
    static getDefaults() {
        return {
            baseUrl: "",
            onerror: (0, _interface.noOp),
            onload: (0, _interface.noOp),
            urls: {}
        };
    }
    /**
     * True if the buffers object has a buffer by that name.
     * @param  name  The key or index of the buffer.
     */ has(name) {
        return this._buffers.has(name.toString());
    }
    /**
     * Get a buffer by name. If an array was loaded,
     * then use the array index.
     * @param  name  The key or index of the buffer.
     */ get(name) {
        (0, _debug.assert)(this.has(name), `ToneAudioBuffers has no buffer named: ${name}`);
        return this._buffers.get(name.toString());
    }
    /**
     * A buffer was loaded. decrement the counter.
     */ _bufferLoaded(callback) {
        this._loadingCount--;
        if (this._loadingCount === 0 && callback) callback();
    }
    /**
     * If the buffers are loaded or not
     */ get loaded() {
        return Array.from(this._buffers).every(([_, buffer])=>buffer.loaded);
    }
    /**
     * Add a buffer by name and url to the Buffers
     * @param  name      A unique name to give the buffer
     * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.
     * @param  callback  The callback to invoke when the url is loaded.
     * @param  onerror  Invoked if the buffer can't be loaded
     */ add(name, url, callback = (0, _interface.noOp), onerror = (0, _interface.noOp)) {
        if ((0, _typeCheck.isString)(url)) this._buffers.set(name.toString(), new (0, _toneAudioBuffer.ToneAudioBuffer)(this.baseUrl + url, callback, onerror));
        else this._buffers.set(name.toString(), new (0, _toneAudioBuffer.ToneAudioBuffer)(url, callback, onerror));
        return this;
    }
    dispose() {
        super.dispose();
        this._buffers.forEach((buffer)=>buffer.dispose());
        this._buffers.clear();
        return this;
    }
}

},{"../Tone":"6Gzxl","../util/Defaults":"a9M5s","../util/Interface":"hVOjA","../util/TypeCheck":"eMH5A","./ToneAudioBuffer":"8aSPC","../util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kST2k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Midi is a primitive type for encoding Time values.
 * Midi can be constructed with or without the `new` keyword. Midi can be passed
 * into the parameter of any method which takes time as an argument.
 * @category Unit
 */ parcelHelpers.export(exports, "MidiClass", ()=>MidiClass);
/**
 * Convert a value into a FrequencyClass object.
 * @category Unit
 */ parcelHelpers.export(exports, "Midi", ()=>Midi);
var _global = require("../Global");
var _conversions = require("./Conversions");
var _frequency = require("./Frequency");
class MidiClass extends (0, _frequency.FrequencyClass) {
    constructor(){
        super(...arguments);
        this.name = "MidiClass";
        this.defaultUnits = "midi";
    }
    /**
     * Returns the value of a frequency in the current units
     */ _frequencyToUnits(freq) {
        return (0, _conversions.ftom)(super._frequencyToUnits(freq));
    }
    /**
     * Returns the value of a tick in the current time units
     */ _ticksToUnits(ticks) {
        return (0, _conversions.ftom)(super._ticksToUnits(ticks));
    }
    /**
     * Return the value of the beats in the current units
     */ _beatsToUnits(beats) {
        return (0, _conversions.ftom)(super._beatsToUnits(beats));
    }
    /**
     * Returns the value of a second in the current units
     */ _secondsToUnits(seconds) {
        return (0, _conversions.ftom)(super._secondsToUnits(seconds));
    }
    /**
     * Return the value of the frequency as a MIDI note
     * @example
     * Tone.Midi(60).toMidi(); // 60
     */ toMidi() {
        return this.valueOf();
    }
    /**
     * Return the value of the frequency as a MIDI note
     * @example
     * Tone.Midi(60).toFrequency(); // 261.6255653005986
     */ toFrequency() {
        return (0, _conversions.mtof)(this.toMidi());
    }
    /**
     * Transposes the frequency by the given number of semitones.
     * @return A new transposed MidiClass
     * @example
     * Tone.Midi("A4").transpose(3); // "C5"
     */ transpose(interval) {
        return new MidiClass(this.context, this.toMidi() + interval);
    }
}
function Midi(value, units) {
    return new MidiClass((0, _global.getContext)(), value, units);
}

},{"../Global":"79THw","./Conversions":"iww1u","./Frequency":"bObwr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"BGGsE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Ticks is a primitive type for encoding Time values.
 * Ticks can be constructed with or without the `new` keyword. Ticks can be passed
 * into the parameter of any method which takes time as an argument.
 * @example
 * const t = Tone.Ticks("4n"); // a quarter note as ticks
 * @category Unit
 */ parcelHelpers.export(exports, "TicksClass", ()=>TicksClass);
/**
 * Convert a time representation to ticks
 * @category Unit
 */ parcelHelpers.export(exports, "Ticks", ()=>Ticks);
var _global = require("../Global");
var _transportTime = require("./TransportTime");
class TicksClass extends (0, _transportTime.TransportTimeClass) {
    constructor(){
        super(...arguments);
        this.name = "Ticks";
        this.defaultUnits = "i";
    }
    /**
     * Get the current time in the given units
     */ _now() {
        return this.context.transport.ticks;
    }
    /**
     * Return the value of the beats in the current units
     */ _beatsToUnits(beats) {
        return this._getPPQ() * beats;
    }
    /**
     * Returns the value of a second in the current units
     */ _secondsToUnits(seconds) {
        return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());
    }
    /**
     * Returns the value of a tick in the current time units
     */ _ticksToUnits(ticks) {
        return ticks;
    }
    /**
     * Return the time in ticks
     */ toTicks() {
        return this.valueOf();
    }
    /**
     * Return the time in seconds
     */ toSeconds() {
        return this.valueOf() / this._getPPQ() * (60 / this._getBpm());
    }
}
function Ticks(value, units) {
    return new TicksClass((0, _global.getContext)(), value, units);
}

},{"../Global":"79THw","./TransportTime":"a6yW0","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9CgWk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Draw is useful for synchronizing visuals and audio events.
 * Callbacks from Tone.Transport or any of the Tone.Event classes
 * always happen _before_ the scheduled time and are not synchronized
 * to the animation frame so they are not good for triggering tightly
 * synchronized visuals and sound. Draw makes it easy to schedule
 * callbacks using the AudioContext time and uses requestAnimationFrame.
 * @example
 * Tone.Transport.schedule((time) => {
 * 	// use the time argument to schedule a callback with Draw
 * 	Tone.Draw.schedule(() => {
 * 		// do drawing or DOM manipulation here
 * 		console.log(time);
 * 	}, time);
 * }, "+0.5");
 * Tone.Transport.start();
 * @category Core
 */ parcelHelpers.export(exports, "Draw", ()=>Draw);
var _toneWithContext = require("../context/ToneWithContext");
var _timeline = require("./Timeline");
var _contextInitialization = require("../context/ContextInitialization");
class Draw extends (0, _toneWithContext.ToneWithContext) {
    constructor(){
        super(...arguments);
        this.name = "Draw";
        /**
         * The duration after which events are not invoked.
         */ this.expiration = 0.25;
        /**
         * The amount of time before the scheduled time
         * that the callback can be invoked. Default is
         * half the time of an animation frame (0.008 seconds).
         */ this.anticipation = 0.008;
        /**
         * All of the events.
         */ this._events = new (0, _timeline.Timeline)();
        /**
         * The draw loop
         */ this._boundDrawLoop = this._drawLoop.bind(this);
        /**
         * The animation frame id
         */ this._animationFrame = -1;
    }
    /**
     * Schedule a function at the given time to be invoked
     * on the nearest animation frame.
     * @param  callback  Callback is invoked at the given time.
     * @param  time      The time relative to the AudioContext time to invoke the callback.
     * @example
     * Tone.Transport.scheduleRepeat(time => {
     * 	Tone.Draw.schedule(() => console.log(time), time);
     * }, 1);
     * Tone.Transport.start();
     */ schedule(callback, time) {
        this._events.add({
            callback,
            time: this.toSeconds(time)
        });
        // start the draw loop on the first event
        if (this._events.length === 1) this._animationFrame = requestAnimationFrame(this._boundDrawLoop);
        return this;
    }
    /**
     * Cancel events scheduled after the given time
     * @param  after  Time after which scheduled events will be removed from the scheduling timeline.
     */ cancel(after) {
        this._events.cancel(this.toSeconds(after));
        return this;
    }
    /**
     * The draw loop
     */ _drawLoop() {
        const now = this.context.currentTime;
        while(this._events.length && this._events.peek().time - this.anticipation <= now){
            const event = this._events.shift();
            if (event && now - event.time <= this.expiration) event.callback();
        }
        if (this._events.length > 0) this._animationFrame = requestAnimationFrame(this._boundDrawLoop);
    }
    dispose() {
        super.dispose();
        this._events.dispose();
        cancelAnimationFrame(this._animationFrame);
        return this;
    }
}
//-------------------------------------
// 	INITIALIZATION
//-------------------------------------
(0, _contextInitialization.onContextInit)((context)=>{
    context.draw = new Draw({
        context
    });
});
(0, _contextInitialization.onContextClose)((context)=>{
    context.draw.dispose();
});

},{"../context/ToneWithContext":"gAuzg","./Timeline":"36KJ4","../context/ContextInitialization":"iapnw","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4FYQZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Similar to Tone.Timeline, but all events represent
 * intervals with both "time" and "duration" times. The
 * events are placed in a tree structure optimized
 * for querying an intersection point with the timeline
 * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)
 * to represent the data.
 */ parcelHelpers.export(exports, "IntervalTimeline", ()=>IntervalTimeline);
var _tone = require("../Tone");
var _typeCheck = require("./TypeCheck");
var _debug = require("./Debug");
class IntervalTimeline extends (0, _tone.Tone) {
    constructor(){
        super(...arguments);
        this.name = "IntervalTimeline";
        /**
         * The root node of the inteval tree
         */ this._root = null;
        /**
         * Keep track of the length of the timeline.
         */ this._length = 0;
    }
    /**
     * The event to add to the timeline. All events must
     * have a time and duration value
     * @param  event  The event to add to the timeline
     */ add(event) {
        (0, _debug.assert)((0, _typeCheck.isDefined)(event.time), "Events must have a time property");
        (0, _debug.assert)((0, _typeCheck.isDefined)(event.duration), "Events must have a duration parameter");
        event.time = event.time.valueOf();
        let node = new IntervalNode(event.time, event.time + event.duration, event);
        if (this._root === null) this._root = node;
        else this._root.insert(node);
        this._length++;
        // Restructure tree to be balanced
        while(node !== null){
            node.updateHeight();
            node.updateMax();
            this._rebalance(node);
            node = node.parent;
        }
        return this;
    }
    /**
     * Remove an event from the timeline.
     * @param  event  The event to remove from the timeline
     */ remove(event) {
        if (this._root !== null) {
            const results = [];
            this._root.search(event.time, results);
            for (const node of results)if (node.event === event) {
                this._removeNode(node);
                this._length--;
                break;
            }
        }
        return this;
    }
    /**
     * The number of items in the timeline.
     * @readOnly
     */ get length() {
        return this._length;
    }
    /**
     * Remove events whose time time is after the given time
     * @param  after  The time to query.
     */ cancel(after) {
        this.forEachFrom(after, (event)=>this.remove(event));
        return this;
    }
    /**
     * Set the root node as the given node
     */ _setRoot(node) {
        this._root = node;
        if (this._root !== null) this._root.parent = null;
    }
    /**
     * Replace the references to the node in the node's parent
     * with the replacement node.
     */ _replaceNodeInParent(node, replacement) {
        if (node.parent !== null) {
            if (node.isLeftChild()) node.parent.left = replacement;
            else node.parent.right = replacement;
            this._rebalance(node.parent);
        } else this._setRoot(replacement);
    }
    /**
     * Remove the node from the tree and replace it with
     * a successor which follows the schema.
     */ _removeNode(node) {
        if (node.left === null && node.right === null) this._replaceNodeInParent(node, null);
        else if (node.right === null) this._replaceNodeInParent(node, node.left);
        else if (node.left === null) this._replaceNodeInParent(node, node.right);
        else {
            const balance = node.getBalance();
            let replacement;
            let temp = null;
            if (balance > 0) {
                if (node.left.right === null) {
                    replacement = node.left;
                    replacement.right = node.right;
                    temp = replacement;
                } else {
                    replacement = node.left.right;
                    while(replacement.right !== null)replacement = replacement.right;
                    if (replacement.parent) {
                        replacement.parent.right = replacement.left;
                        temp = replacement.parent;
                        replacement.left = node.left;
                        replacement.right = node.right;
                    }
                }
            } else if (node.right.left === null) {
                replacement = node.right;
                replacement.left = node.left;
                temp = replacement;
            } else {
                replacement = node.right.left;
                while(replacement.left !== null)replacement = replacement.left;
                if (replacement.parent) {
                    replacement.parent.left = replacement.right;
                    temp = replacement.parent;
                    replacement.left = node.left;
                    replacement.right = node.right;
                }
            }
            if (node.parent !== null) {
                if (node.isLeftChild()) node.parent.left = replacement;
                else node.parent.right = replacement;
            } else this._setRoot(replacement);
            if (temp) this._rebalance(temp);
        }
        node.dispose();
    }
    /**
     * Rotate the tree to the left
     */ _rotateLeft(node) {
        const parent = node.parent;
        const isLeftChild = node.isLeftChild();
        // Make node.right the new root of this sub tree (instead of node)
        const pivotNode = node.right;
        if (pivotNode) {
            node.right = pivotNode.left;
            pivotNode.left = node;
        }
        if (parent !== null) {
            if (isLeftChild) parent.left = pivotNode;
            else parent.right = pivotNode;
        } else this._setRoot(pivotNode);
    }
    /**
     * Rotate the tree to the right
     */ _rotateRight(node) {
        const parent = node.parent;
        const isLeftChild = node.isLeftChild();
        // Make node.left the new root of this sub tree (instead of node)
        const pivotNode = node.left;
        if (pivotNode) {
            node.left = pivotNode.right;
            pivotNode.right = node;
        }
        if (parent !== null) {
            if (isLeftChild) parent.left = pivotNode;
            else parent.right = pivotNode;
        } else this._setRoot(pivotNode);
    }
    /**
     * Balance the BST
     */ _rebalance(node) {
        const balance = node.getBalance();
        if (balance > 1 && node.left) {
            if (node.left.getBalance() < 0) this._rotateLeft(node.left);
            else this._rotateRight(node);
        } else if (balance < -1 && node.right) {
            if (node.right.getBalance() > 0) this._rotateRight(node.right);
            else this._rotateLeft(node);
        }
    }
    /**
     * Get an event whose time and duration span the give time. Will
     * return the match whose "time" value is closest to the given time.
     * @return  The event which spans the desired time
     */ get(time) {
        if (this._root !== null) {
            const results = [];
            this._root.search(time, results);
            if (results.length > 0) {
                let max = results[0];
                for(let i = 1; i < results.length; i++)if (results[i].low > max.low) max = results[i];
                return max.event;
            }
        }
        return null;
    }
    /**
     * Iterate over everything in the timeline.
     * @param  callback The callback to invoke with every item
     */ forEach(callback) {
        if (this._root !== null) {
            const allNodes = [];
            this._root.traverse((node)=>allNodes.push(node));
            allNodes.forEach((node)=>{
                if (node.event) callback(node.event);
            });
        }
        return this;
    }
    /**
     * Iterate over everything in the array in which the given time
     * overlaps with the time and duration time of the event.
     * @param  time The time to check if items are overlapping
     * @param  callback The callback to invoke with every item
     */ forEachAtTime(time, callback) {
        if (this._root !== null) {
            const results = [];
            this._root.search(time, results);
            results.forEach((node)=>{
                if (node.event) callback(node.event);
            });
        }
        return this;
    }
    /**
     * Iterate over everything in the array in which the time is greater
     * than or equal to the given time.
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */ forEachFrom(time, callback) {
        if (this._root !== null) {
            const results = [];
            this._root.searchAfter(time, results);
            results.forEach((node)=>{
                if (node.event) callback(node.event);
            });
        }
        return this;
    }
    /**
     * Clean up
     */ dispose() {
        super.dispose();
        if (this._root !== null) this._root.traverse((node)=>node.dispose());
        this._root = null;
        return this;
    }
}
//-------------------------------------
// 	INTERVAL NODE HELPER
//-------------------------------------
/**
 * Represents a node in the binary search tree, with the addition
 * of a "high" value which keeps track of the highest value of
 * its children.
 * References:
 * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/
 * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf
 * @param low
 * @param high
 */ class IntervalNode {
    constructor(low, high, event){
        // the nodes to the left
        this._left = null;
        // the nodes to the right
        this._right = null;
        // the parent node
        this.parent = null;
        // the number of child nodes
        this.height = 0;
        this.event = event;
        // the low value
        this.low = low;
        // the high value
        this.high = high;
        // the high value for this and all child nodes
        this.max = this.high;
    }
    /**
     * Insert a node into the correct spot in the tree
     */ insert(node) {
        if (node.low <= this.low) {
            if (this.left === null) this.left = node;
            else this.left.insert(node);
        } else if (this.right === null) this.right = node;
        else this.right.insert(node);
    }
    /**
     * Search the tree for nodes which overlap
     * with the given point
     * @param  point  The point to query
     * @param  results  The array to put the results
     */ search(point, results) {
        // If p is to the right of the rightmost point of any interval
        // in this node and all children, there won't be any matches.
        if (point > this.max) return;
        // Search left children
        if (this.left !== null) this.left.search(point, results);
        // Check this node
        if (this.low <= point && this.high > point) results.push(this);
        // If p is to the left of the time of this interval,
        // then it can't be in any child to the right.
        if (this.low > point) return;
        // Search right children
        if (this.right !== null) this.right.search(point, results);
    }
    /**
     * Search the tree for nodes which are less
     * than the given point
     * @param  point  The point to query
     * @param  results  The array to put the results
     */ searchAfter(point, results) {
        // Check this node
        if (this.low >= point) {
            results.push(this);
            if (this.left !== null) this.left.searchAfter(point, results);
        }
        // search the right side
        if (this.right !== null) this.right.searchAfter(point, results);
    }
    /**
     * Invoke the callback on this element and both it's branches
     * @param  {Function}  callback
     */ traverse(callback) {
        callback(this);
        if (this.left !== null) this.left.traverse(callback);
        if (this.right !== null) this.right.traverse(callback);
    }
    /**
     * Update the height of the node
     */ updateHeight() {
        if (this.left !== null && this.right !== null) this.height = Math.max(this.left.height, this.right.height) + 1;
        else if (this.right !== null) this.height = this.right.height + 1;
        else if (this.left !== null) this.height = this.left.height + 1;
        else this.height = 0;
    }
    /**
     * Update the height of the node
     */ updateMax() {
        this.max = this.high;
        if (this.left !== null) this.max = Math.max(this.max, this.left.max);
        if (this.right !== null) this.max = Math.max(this.max, this.right.max);
    }
    /**
     * The balance is how the leafs are distributed on the node
     * @return  Negative numbers are balanced to the right
     */ getBalance() {
        let balance = 0;
        if (this.left !== null && this.right !== null) balance = this.left.height - this.right.height;
        else if (this.left !== null) balance = this.left.height + 1;
        else if (this.right !== null) balance = -(this.right.height + 1);
        return balance;
    }
    /**
     * @returns true if this node is the left child of its parent
     */ isLeftChild() {
        return this.parent !== null && this.parent.left === this;
    }
    /**
     * get/set the left node
     */ get left() {
        return this._left;
    }
    set left(node) {
        this._left = node;
        if (node !== null) node.parent = this;
        this.updateHeight();
        this.updateMax();
    }
    /**
     * get/set the right node
     */ get right() {
        return this._right;
    }
    set right(node) {
        this._right = node;
        if (node !== null) node.parent = this;
        this.updateHeight();
        this.updateMax();
    }
    /**
     * null out references.
     */ dispose() {
        this.parent = null;
        this._left = null;
        this._right = null;
        this.event = null;
    }
}

},{"../Tone":"6Gzxl","./TypeCheck":"eMH5A","./Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gjqPS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _noteUnits = require("./NoteUnits");
parcelHelpers.exportAll(_noteUnits, exports);

},{"./NoteUnits":"dBjsJ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dBjsJ":[function(require,module,exports) {
// this file contains all of the valid note names for all pitches between C-4 and C11
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1mJV8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _noise = require("./Noise");
parcelHelpers.exportAll(_noise, exports);
var _userMedia = require("./UserMedia");
parcelHelpers.exportAll(_userMedia, exports);
var _oscillator = require("./oscillator/Oscillator");
parcelHelpers.exportAll(_oscillator, exports);
var _amoscillator = require("./oscillator/AMOscillator");
parcelHelpers.exportAll(_amoscillator, exports);
var _fmoscillator = require("./oscillator/FMOscillator");
parcelHelpers.exportAll(_fmoscillator, exports);
var _pulseOscillator = require("./oscillator/PulseOscillator");
parcelHelpers.exportAll(_pulseOscillator, exports);
var _fatOscillator = require("./oscillator/FatOscillator");
parcelHelpers.exportAll(_fatOscillator, exports);
var _pwmoscillator = require("./oscillator/PWMOscillator");
parcelHelpers.exportAll(_pwmoscillator, exports);
var _omniOscillator = require("./oscillator/OmniOscillator");
parcelHelpers.exportAll(_omniOscillator, exports);
var _toneOscillatorNode = require("./oscillator/ToneOscillatorNode");
parcelHelpers.exportAll(_toneOscillatorNode, exports);
var _lfo = require("./oscillator/LFO");
parcelHelpers.exportAll(_lfo, exports);
var _toneBufferSource = require("./buffer/ToneBufferSource");
parcelHelpers.exportAll(_toneBufferSource, exports);
var _player = require("./buffer/Player");
parcelHelpers.exportAll(_player, exports);
var _players = require("./buffer/Players");
parcelHelpers.exportAll(_players, exports);
var _grainPlayer = require("./buffer/GrainPlayer");
parcelHelpers.exportAll(_grainPlayer, exports);

},{"./Noise":"cOpzx","./UserMedia":"f1Txo","./oscillator/Oscillator":"204g3","./oscillator/AMOscillator":"9mU3E","./oscillator/FMOscillator":"3UNlG","./oscillator/PulseOscillator":"g3ood","./oscillator/FatOscillator":"2aUtm","./oscillator/PWMOscillator":"8eNKU","./oscillator/OmniOscillator":"7bzEJ","./oscillator/ToneOscillatorNode":"gLw4W","./oscillator/LFO":"jsBJT","./buffer/ToneBufferSource":"9FxEt","./buffer/Player":"4UJCG","./buffer/Players":"17BMn","./buffer/GrainPlayer":"opCGx","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cOpzx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Noise is a noise generator. It uses looped noise buffers to save on performance.
 * Noise supports the noise types: "pink", "white", and "brown". Read more about
 * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).
 *
 * @example
 * // initialize the noise and start
 * const noise = new Tone.Noise("pink").start();
 * // make an autofilter to shape the noise
 * const autoFilter = new Tone.AutoFilter({
 * 	frequency: "8n",
 * 	baseFrequency: 200,
 * 	octaves: 8
 * }).toDestination().start();
 * // connect the noise
 * noise.connect(autoFilter);
 * // start the autofilter LFO
 * autoFilter.start();
 * @category Source
 */ parcelHelpers.export(exports, "Noise", ()=>Noise);
var _toneAudioBuffer = require("../core/context/ToneAudioBuffer");
var _defaults = require("../core/util/Defaults");
var _debug = require("../core/util/Debug");
var _source = require("../source/Source");
var _toneBufferSource = require("./buffer/ToneBufferSource");
class Noise extends (0, _source.Source) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Noise.getDefaults(), arguments, [
            "type"
        ]));
        this.name = "Noise";
        /**
         * Private reference to the source
         */ this._source = null;
        const options = (0, _defaults.optionsFromArguments)(Noise.getDefaults(), arguments, [
            "type"
        ]);
        this._playbackRate = options.playbackRate;
        this.type = options.type;
        this._fadeIn = options.fadeIn;
        this._fadeOut = options.fadeOut;
    }
    static getDefaults() {
        return Object.assign((0, _source.Source).getDefaults(), {
            fadeIn: 0,
            fadeOut: 0,
            playbackRate: 1,
            type: "white"
        });
    }
    /**
     * The type of the noise. Can be "white", "brown", or "pink".
     * @example
     * const noise = new Tone.Noise().toDestination().start();
     * noise.type = "brown";
     */ get type() {
        return this._type;
    }
    set type(type) {
        (0, _debug.assert)(type in _noiseBuffers, "Noise: invalid type: " + type);
        if (this._type !== type) {
            this._type = type;
            // if it's playing, stop and restart it
            if (this.state === "started") {
                const now = this.now();
                this._stop(now);
                this._start(now);
            }
        }
    }
    /**
     * The playback rate of the noise. Affects
     * the "frequency" of the noise.
     */ get playbackRate() {
        return this._playbackRate;
    }
    set playbackRate(rate) {
        this._playbackRate = rate;
        if (this._source) this._source.playbackRate.value = rate;
    }
    /**
     * internal start method
     */ _start(time) {
        const buffer = _noiseBuffers[this._type];
        this._source = new (0, _toneBufferSource.ToneBufferSource)({
            url: buffer,
            context: this.context,
            fadeIn: this._fadeIn,
            fadeOut: this._fadeOut,
            loop: true,
            onended: ()=>this.onstop(this),
            playbackRate: this._playbackRate
        }).connect(this.output);
        this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));
    }
    /**
     * internal stop method
     */ _stop(time) {
        if (this._source) {
            this._source.stop(this.toSeconds(time));
            this._source = null;
        }
    }
    /**
     * The fadeIn time of the amplitude envelope.
     */ get fadeIn() {
        return this._fadeIn;
    }
    set fadeIn(time) {
        this._fadeIn = time;
        if (this._source) this._source.fadeIn = this._fadeIn;
    }
    /**
     * The fadeOut time of the amplitude envelope.
     */ get fadeOut() {
        return this._fadeOut;
    }
    set fadeOut(time) {
        this._fadeOut = time;
        if (this._source) this._source.fadeOut = this._fadeOut;
    }
    _restart(time) {
        // TODO could be optimized by cancelling the buffer source 'stop'
        this._stop(time);
        this._start(time);
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        if (this._source) this._source.disconnect();
        return this;
    }
}
//--------------------
// THE NOISE BUFFERS
//--------------------
// Noise buffer stats
const BUFFER_LENGTH = 220500;
const NUM_CHANNELS = 2;
/**
 * Cache the noise buffers
 */ const _noiseCache = {
    brown: null,
    pink: null,
    white: null
};
/**
 * The noise arrays. Generated on initialization.
 * borrowed heavily from https://github.com/zacharydenton/noise.js
 * (c) 2013 Zach Denton (MIT)
 */ const _noiseBuffers = {
    get brown () {
        if (!_noiseCache.brown) {
            const buffer = [];
            for(let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++){
                const channel = new Float32Array(BUFFER_LENGTH);
                buffer[channelNum] = channel;
                let lastOut = 0.0;
                for(let i = 0; i < BUFFER_LENGTH; i++){
                    const white = Math.random() * 2 - 1;
                    channel[i] = (lastOut + 0.02 * white) / 1.02;
                    lastOut = channel[i];
                    channel[i] *= 3.5; // (roughly) compensate for gain
                }
            }
            _noiseCache.brown = new (0, _toneAudioBuffer.ToneAudioBuffer)().fromArray(buffer);
        }
        return _noiseCache.brown;
    },
    get pink () {
        if (!_noiseCache.pink) {
            const buffer = [];
            for(let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++){
                const channel = new Float32Array(BUFFER_LENGTH);
                buffer[channelNum] = channel;
                let b0, b1, b2, b3, b4, b5, b6;
                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;
                for(let i = 0; i < BUFFER_LENGTH; i++){
                    const white = Math.random() * 2 - 1;
                    b0 = 0.99886 * b0 + white * 0.0555179;
                    b1 = 0.99332 * b1 + white * 0.0750759;
                    b2 = 0.96900 * b2 + white * 0.1538520;
                    b3 = 0.86650 * b3 + white * 0.3104856;
                    b4 = 0.55000 * b4 + white * 0.5329522;
                    b5 = -0.7616 * b5 - white * 0.0168980;
                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;
                    channel[i] *= 0.11; // (roughly) compensate for gain
                    b6 = white * 0.115926;
                }
            }
            _noiseCache.pink = new (0, _toneAudioBuffer.ToneAudioBuffer)().fromArray(buffer);
        }
        return _noiseCache.pink;
    },
    get white () {
        if (!_noiseCache.white) {
            const buffer = [];
            for(let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++){
                const channel = new Float32Array(BUFFER_LENGTH);
                buffer[channelNum] = channel;
                for(let i = 0; i < BUFFER_LENGTH; i++)channel[i] = Math.random() * 2 - 1;
            }
            _noiseCache.white = new (0, _toneAudioBuffer.ToneAudioBuffer)().fromArray(buffer);
        }
        return _noiseCache.white;
    }
};

},{"../core/context/ToneAudioBuffer":"8aSPC","../core/util/Defaults":"a9M5s","../core/util/Debug":"2lOIQ","../source/Source":"eBYFz","./buffer/ToneBufferSource":"9FxEt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eBYFz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Base class for sources.
 * start/stop of this.context.transport.
 *
 * ```
 * // Multiple state change events can be chained together,
 * // but must be set in the correct order and with ascending times
 * // OK
 * state.start().stop("+0.2");
 * // OK
 * state.start().stop("+0.2").start("+0.4").stop("+0.7")
 * // BAD
 * state.stop("+0.2").start();
 * // BAD
 * state.start("+0.3").stop("+0.2");
 * ```
 */ parcelHelpers.export(exports, "Source", ()=>Source);
var _volume = require("../component/channel/Volume");
var _destination = require("../core/context/Destination");
var _transport = require("../core/clock/Transport");
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
var _stateTimeline = require("../core/util/StateTimeline");
var _typeCheck = require("../core/util/TypeCheck");
var _debug = require("../core/util/Debug");
var _math = require("../core/util/Math");
class Source extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(options){
        super(options);
        /**
         * Sources have no inputs
         */ this.input = undefined;
        /**
         * Keep track of the scheduled state.
         */ this._state = new (0, _stateTimeline.StateTimeline)("stopped");
        /**
         * The synced `start` callback function from the transport
         */ this._synced = false;
        /**
         * Keep track of all of the scheduled event ids
         */ this._scheduled = [];
        /**
         * Placeholder functions for syncing/unsyncing to transport
         */ this._syncedStart = (0, _interface.noOp);
        this._syncedStop = (0, _interface.noOp);
        this._state.memory = 100;
        this._state.increasing = true;
        this._volume = this.output = new (0, _volume.Volume)({
            context: this.context,
            mute: options.mute,
            volume: options.volume
        });
        this.volume = this._volume.volume;
        (0, _interface.readOnly)(this, "volume");
        this.onstop = options.onstop;
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            mute: false,
            onstop: (0, _interface.noOp),
            volume: 0
        });
    }
    /**
     * Returns the playback state of the source, either "started" or "stopped".
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/ahntone_c3.mp3", () => {
     * 	player.start();
     * 	console.log(player.state);
     * }).toDestination();
     */ get state() {
        if (this._synced) {
            if (this.context.transport.state === "started") return this._state.getValueAtTime(this.context.transport.seconds);
            else return "stopped";
        } else return this._state.getValueAtTime(this.now());
    }
    /**
     * Mute the output.
     * @example
     * const osc = new Tone.Oscillator().toDestination().start();
     * // mute the output
     * osc.mute = true;
     */ get mute() {
        return this._volume.mute;
    }
    set mute(mute) {
        this._volume.mute = mute;
    }
    /**
     * Ensure that the scheduled time is not before the current time.
     * Should only be used when scheduled unsynced.
     */ _clampToCurrentTime(time) {
        if (this._synced) return time;
        else return Math.max(time, this.context.currentTime);
    }
    /**
     * Start the source at the specified time. If no time is given,
     * start the source now.
     * @param  time When the source should be started.
     * @example
     * const source = new Tone.Oscillator().toDestination();
     * source.start("+0.5"); // starts the source 0.5 seconds from now
     */ start(time, offset, duration) {
        let computedTime = (0, _typeCheck.isUndef)(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);
        computedTime = this._clampToCurrentTime(computedTime);
        // if it's started, stop it and restart it
        if (!this._synced && this._state.getValueAtTime(computedTime) === "started") {
            // time should be strictly greater than the previous start time
            (0, _debug.assert)((0, _math.GT)(computedTime, this._state.get(computedTime).time), "Start time must be strictly greater than previous start time");
            this._state.cancel(computedTime);
            this._state.setStateAtTime("started", computedTime);
            this.log("restart", computedTime);
            this.restart(computedTime, offset, duration);
        } else {
            this.log("start", computedTime);
            this._state.setStateAtTime("started", computedTime);
            if (this._synced) {
                // add the offset time to the event
                const event = this._state.get(computedTime);
                if (event) {
                    event.offset = this.toSeconds((0, _defaults.defaultArg)(offset, 0));
                    event.duration = duration ? this.toSeconds(duration) : undefined;
                }
                const sched = this.context.transport.schedule((t)=>{
                    this._start(t, offset, duration);
                }, computedTime);
                this._scheduled.push(sched);
                // if the transport is already started
                // and the time is greater than where the transport is
                if (this.context.transport.state === "started" && this.context.transport.getSecondsAtTime(this.immediate()) > computedTime) this._syncedStart(this.now(), this.context.transport.seconds);
            } else {
                (0, _debug.assertContextRunning)(this.context);
                this._start(computedTime, offset, duration);
            }
        }
        return this;
    }
    /**
     * Stop the source at the specified time. If no time is given,
     * stop the source now.
     * @param  time When the source should be stopped.
     * @example
     * const source = new Tone.Oscillator().toDestination();
     * source.start();
     * source.stop("+0.5"); // stops the source 0.5 seconds from now
     */ stop(time) {
        let computedTime = (0, _typeCheck.isUndef)(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);
        computedTime = this._clampToCurrentTime(computedTime);
        if (this._state.getValueAtTime(computedTime) === "started" || (0, _typeCheck.isDefined)(this._state.getNextState("started", computedTime))) {
            this.log("stop", computedTime);
            if (!this._synced) this._stop(computedTime);
            else {
                const sched = this.context.transport.schedule(this._stop.bind(this), computedTime);
                this._scheduled.push(sched);
            }
            this._state.cancel(computedTime);
            this._state.setStateAtTime("stopped", computedTime);
        }
        return this;
    }
    /**
     * Restart the source.
     */ restart(time, offset, duration) {
        time = this.toSeconds(time);
        if (this._state.getValueAtTime(time) === "started") {
            this._state.cancel(time);
            this._restart(time, offset, duration);
        }
        return this;
    }
    /**
     * Sync the source to the Transport so that all subsequent
     * calls to `start` and `stop` are synced to the TransportTime
     * instead of the AudioContext time.
     *
     * @example
     * const osc = new Tone.Oscillator().toDestination();
     * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline
     * osc.sync().start(0).stop(0.3);
     * // start the transport.
     * Tone.Transport.start();
     * // set it to loop once a second
     * Tone.Transport.loop = true;
     * Tone.Transport.loopEnd = 1;
     */ sync() {
        if (!this._synced) {
            this._synced = true;
            this._syncedStart = (time, offset)=>{
                if (offset > 0) {
                    // get the playback state at that time
                    const stateEvent = this._state.get(offset);
                    // listen for start events which may occur in the middle of the sync'ed time
                    if (stateEvent && stateEvent.state === "started" && stateEvent.time !== offset) {
                        // get the offset
                        const startOffset = offset - this.toSeconds(stateEvent.time);
                        let duration;
                        if (stateEvent.duration) duration = this.toSeconds(stateEvent.duration) - startOffset;
                        this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);
                    }
                }
            };
            this._syncedStop = (time)=>{
                const seconds = this.context.transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));
                if (this._state.getValueAtTime(seconds) === "started") this._stop(time);
            };
            this.context.transport.on("start", this._syncedStart);
            this.context.transport.on("loopStart", this._syncedStart);
            this.context.transport.on("stop", this._syncedStop);
            this.context.transport.on("pause", this._syncedStop);
            this.context.transport.on("loopEnd", this._syncedStop);
        }
        return this;
    }
    /**
     * Unsync the source to the Transport. See Source.sync
     */ unsync() {
        if (this._synced) {
            this.context.transport.off("stop", this._syncedStop);
            this.context.transport.off("pause", this._syncedStop);
            this.context.transport.off("loopEnd", this._syncedStop);
            this.context.transport.off("start", this._syncedStart);
            this.context.transport.off("loopStart", this._syncedStart);
        }
        this._synced = false;
        // clear all of the scheduled ids
        this._scheduled.forEach((id)=>this.context.transport.clear(id));
        this._scheduled = [];
        this._state.cancel(0);
        // stop it also
        this._stop(0);
        return this;
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this.onstop = (0, _interface.noOp);
        this.unsync();
        this._volume.dispose();
        this._state.dispose();
        return this;
    }
}

},{"../component/channel/Volume":"7Ooeo","../core/context/Destination":"fSNpu","../core/clock/Transport":"2kVaU","../core/context/ToneAudioNode":"kZ3Kj","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","../core/util/StateTimeline":"hkouL","../core/util/TypeCheck":"eMH5A","../core/util/Debug":"2lOIQ","../core/util/Math":"7mtt2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7Ooeo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Volume is a simple volume node, useful for creating a volume fader.
 *
 * @example
 * const vol = new Tone.Volume(-12).toDestination();
 * const osc = new Tone.Oscillator().connect(vol).start();
 * @category Component
 */ parcelHelpers.export(exports, "Volume", ()=>Volume);
var _gain = require("../../core/context/Gain");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
class Volume extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Volume.getDefaults(), arguments, [
            "volume"
        ]));
        this.name = "Volume";
        const options = (0, _defaults.optionsFromArguments)(Volume.getDefaults(), arguments, [
            "volume"
        ]);
        this.input = this.output = new (0, _gain.Gain)({
            context: this.context,
            gain: options.volume,
            units: "decibels"
        });
        this.volume = this.output.gain;
        (0, _interface.readOnly)(this, "volume");
        this._unmutedVolume = options.volume;
        // set the mute initially
        this.mute = options.mute;
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            mute: false,
            volume: 0
        });
    }
    /**
     * Mute the output.
     * @example
     * const vol = new Tone.Volume(-12).toDestination();
     * const osc = new Tone.Oscillator().connect(vol).start();
     * // mute the output
     * vol.mute = true;
     */ get mute() {
        return this.volume.value === -Infinity;
    }
    set mute(mute) {
        if (!this.mute && mute) {
            this._unmutedVolume = this.volume.value;
            // maybe it should ramp here?
            this.volume.value = -Infinity;
        } else if (this.mute && !mute) this.volume.value = this._unmutedVolume;
    }
    /**
     * clean up
     */ dispose() {
        super.dispose();
        this.input.dispose();
        this.volume.dispose();
        return this;
    }
}

},{"../../core/context/Gain":"kj68Y","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fSNpu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A single master output which is connected to the
 * AudioDestinationNode (aka your speakers).
 * It provides useful conveniences such as the ability
 * to set the volume and mute the entire application.
 * It also gives you the ability to apply master effects to your application.
 *
 * @example
 * const oscillator = new Tone.Oscillator().start();
 * // the audio will go from the oscillator to the speakers
 * oscillator.connect(Tone.getDestination());
 * // a convenience for connecting to the master output is also provided:
 * oscillator.toDestination();
 * @category Core
 */ parcelHelpers.export(exports, "Destination", ()=>Destination);
var _volume = require("../../component/channel/Volume");
var _defaults = require("../util/Defaults");
var _contextInitialization = require("./ContextInitialization");
var _gain = require("./Gain");
var _toneAudioNode = require("./ToneAudioNode");
class Destination extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Destination.getDefaults(), arguments));
        this.name = "Destination";
        this.input = new (0, _volume.Volume)({
            context: this.context
        });
        this.output = new (0, _gain.Gain)({
            context: this.context
        });
        /**
         * The volume of the master output in decibels. -Infinity is silent, and 0 is no change.
         * @example
         * const osc = new Tone.Oscillator().toDestination();
         * osc.start();
         * // ramp the volume down to silent over 10 seconds
         * Tone.getDestination().volume.rampTo(-Infinity, 10);
         */ this.volume = this.input.volume;
        const options = (0, _defaults.optionsFromArguments)(Destination.getDefaults(), arguments);
        (0, _toneAudioNode.connectSeries)(this.input, this.output, this.context.rawContext.destination);
        this.mute = options.mute;
        this._internalChannels = [
            this.input,
            this.context.rawContext.destination,
            this.output
        ];
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            mute: false,
            volume: 0
        });
    }
    /**
     * Mute the output.
     * @example
     * const oscillator = new Tone.Oscillator().start().toDestination();
     * setTimeout(() => {
     * 	// mute the output
     * 	Tone.Destination.mute = true;
     * }, 1000);
     */ get mute() {
        return this.input.mute;
    }
    set mute(mute) {
        this.input.mute = mute;
    }
    /**
     * Add a master effects chain. NOTE: this will disconnect any nodes which were previously
     * chained in the master effects chain.
     * @param args All arguments will be connected in a row and the Master will be routed through it.
     * @example
     * // route all audio through a filter and compressor
     * const lowpass = new Tone.Filter(800, "lowpass");
     * const compressor = new Tone.Compressor(-18);
     * Tone.Destination.chain(lowpass, compressor);
     */ chain(...args) {
        this.input.disconnect();
        args.unshift(this.input);
        args.push(this.output);
        (0, _toneAudioNode.connectSeries)(...args);
        return this;
    }
    /**
     * The maximum number of channels the system can output
     * @example
     * console.log(Tone.Destination.maxChannelCount);
     */ get maxChannelCount() {
        return this.context.rawContext.destination.maxChannelCount;
    }
    /**
     * Clean up
     */ dispose() {
        super.dispose();
        this.volume.dispose();
        return this;
    }
}
//-------------------------------------
// 	INITIALIZATION
//-------------------------------------
(0, _contextInitialization.onContextInit)((context)=>{
    context.destination = new Destination({
        context
    });
});
(0, _contextInitialization.onContextClose)((context)=>{
    context.destination.dispose();
});

},{"../../component/channel/Volume":"7Ooeo","../util/Defaults":"a9M5s","./ContextInitialization":"iapnw","./Gain":"kj68Y","./ToneAudioNode":"kZ3Kj","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2kVaU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Transport for timing musical events.
 * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)
 * Transport timing events pass in the exact time of the scheduled event
 * in the argument of the callback function. Pass that time value to the object
 * you're scheduling. <br><br>
 * A single transport is created for you when the library is initialized.
 * <br><br>
 * The transport emits the events: "start", "stop", "pause", and "loop" which are
 * called with the time of that event as the argument.
 *
 * @example
 * const osc = new Tone.Oscillator().toDestination();
 * // repeated event every 8th note
 * Tone.Transport.scheduleRepeat((time) => {
 * 	// use the callback time to schedule events
 * 	osc.start(time).stop(time + 0.1);
 * }, "8n");
 * // transport must be started before it starts invoking events
 * Tone.Transport.start();
 * @category Core
 */ parcelHelpers.export(exports, "Transport", ()=>Transport);
var _time = require("../../core/type/Time");
var _timelineValue = require("../../core/util/TimelineValue");
var _contextInitialization = require("../context/ContextInitialization");
var _gain = require("../context/Gain");
var _toneWithContext = require("../context/ToneWithContext");
var _ticks = require("../type/Ticks");
var _transportTime = require("../type/TransportTime");
var _defaults = require("../util/Defaults");
var _emitter = require("../util/Emitter");
var _interface = require("../util/Interface");
var _intervalTimeline = require("../util/IntervalTimeline");
var _timeline = require("../util/Timeline");
var _typeCheck = require("../util/TypeCheck");
var _clock = require("./Clock");
var _transportEvent = require("./TransportEvent");
var _transportRepeatEvent = require("./TransportRepeatEvent");
class Transport extends (0, _toneWithContext.ToneWithContext) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Transport.getDefaults(), arguments));
        this.name = "Transport";
        //-------------------------------------
        // 	LOOPING
        //-------------------------------------
        /**
         * If the transport loops or not.
         */ this._loop = new (0, _timelineValue.TimelineValue)(false);
        /**
         * The loop start position in ticks
         */ this._loopStart = 0;
        /**
         * The loop end position in ticks
         */ this._loopEnd = 0;
        //-------------------------------------
        // 	TIMELINE EVENTS
        //-------------------------------------
        /**
         * All the events in an object to keep track by ID
         */ this._scheduledEvents = {};
        /**
         * The scheduled events.
         */ this._timeline = new (0, _timeline.Timeline)();
        /**
         * Repeated events
         */ this._repeatedEvents = new (0, _intervalTimeline.IntervalTimeline)();
        /**
         * All of the synced Signals
         */ this._syncedSignals = [];
        /**
         * The swing amount
         */ this._swingAmount = 0;
        const options = (0, _defaults.optionsFromArguments)(Transport.getDefaults(), arguments);
        // CLOCK/TEMPO
        this._ppq = options.ppq;
        this._clock = new (0, _clock.Clock)({
            callback: this._processTick.bind(this),
            context: this.context,
            frequency: 0,
            units: "bpm"
        });
        this._bindClockEvents();
        this.bpm = this._clock.frequency;
        this._clock.frequency.multiplier = options.ppq;
        this.bpm.setValueAtTime(options.bpm, 0);
        (0, _interface.readOnly)(this, "bpm");
        this._timeSignature = options.timeSignature;
        // SWING
        this._swingTicks = options.ppq / 2; // 8n
    }
    static getDefaults() {
        return Object.assign((0, _toneWithContext.ToneWithContext).getDefaults(), {
            bpm: 120,
            loopEnd: "4m",
            loopStart: 0,
            ppq: 192,
            swing: 0,
            swingSubdivision: "8n",
            timeSignature: 4
        });
    }
    //-------------------------------------
    // 	TICKS
    //-------------------------------------
    /**
     * called on every tick
     * @param  tickTime clock relative tick time
     */ _processTick(tickTime, ticks) {
        // do the loop test
        if (this._loop.get(tickTime)) {
            if (ticks >= this._loopEnd) {
                this.emit("loopEnd", tickTime);
                this._clock.setTicksAtTime(this._loopStart, tickTime);
                ticks = this._loopStart;
                this.emit("loopStart", tickTime, this._clock.getSecondsAtTime(tickTime));
                this.emit("loop", tickTime);
            }
        }
        // handle swing
        if (this._swingAmount > 0 && ticks % this._ppq !== 0 && // not on a downbeat
        ticks % (this._swingTicks * 2) !== 0) {
            // add some swing
            const progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);
            const amount = Math.sin(progress * Math.PI) * this._swingAmount;
            tickTime += new (0, _ticks.TicksClass)(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;
        }
        // invoke the timeline events scheduled on this tick
        this._timeline.forEachAtTime(ticks, (event)=>event.invoke(tickTime));
    }
    //-------------------------------------
    // 	SCHEDULABLE EVENTS
    //-------------------------------------
    /**
     * Schedule an event along the timeline.
     * @param callback The callback to be invoked at the time.
     * @param time The time to invoke the callback at.
     * @return The id of the event which can be used for canceling the event.
     * @example
     * // schedule an event on the 16th measure
     * Tone.Transport.schedule((time) => {
     * 	// invoked on measure 16
     * 	console.log("measure 16!");
     * }, "16:0:0");
     */ schedule(callback, time) {
        const event = new (0, _transportEvent.TransportEvent)(this, {
            callback,
            time: new (0, _transportTime.TransportTimeClass)(this.context, time).toTicks()
        });
        return this._addEvent(event, this._timeline);
    }
    /**
     * Schedule a repeated event along the timeline. The event will fire
     * at the `interval` starting at the `startTime` and for the specified
     * `duration`.
     * @param  callback   The callback to invoke.
     * @param  interval   The duration between successive callbacks. Must be a positive number.
     * @param  startTime  When along the timeline the events should start being invoked.
     * @param  duration How long the event should repeat.
     * @return  The ID of the scheduled event. Use this to cancel the event.
     * @example
     * const osc = new Tone.Oscillator().toDestination().start();
     * // a callback invoked every eighth note after the first measure
     * Tone.Transport.scheduleRepeat((time) => {
     * 	osc.start(time).stop(time + 0.1);
     * }, "8n", "1m");
     */ scheduleRepeat(callback, interval, startTime, duration = Infinity) {
        const event = new (0, _transportRepeatEvent.TransportRepeatEvent)(this, {
            callback,
            duration: new (0, _time.TimeClass)(this.context, duration).toTicks(),
            interval: new (0, _time.TimeClass)(this.context, interval).toTicks(),
            time: new (0, _transportTime.TransportTimeClass)(this.context, startTime).toTicks()
        });
        // kick it off if the Transport is started
        // @ts-ignore
        return this._addEvent(event, this._repeatedEvents);
    }
    /**
     * Schedule an event that will be removed after it is invoked.
     * @param callback The callback to invoke once.
     * @param time The time the callback should be invoked.
     * @returns The ID of the scheduled event.
     */ scheduleOnce(callback, time) {
        const event = new (0, _transportEvent.TransportEvent)(this, {
            callback,
            once: true,
            time: new (0, _transportTime.TransportTimeClass)(this.context, time).toTicks()
        });
        return this._addEvent(event, this._timeline);
    }
    /**
     * Clear the passed in event id from the timeline
     * @param eventId The id of the event.
     */ clear(eventId) {
        if (this._scheduledEvents.hasOwnProperty(eventId)) {
            const item = this._scheduledEvents[eventId.toString()];
            item.timeline.remove(item.event);
            item.event.dispose();
            delete this._scheduledEvents[eventId.toString()];
        }
        return this;
    }
    /**
     * Add an event to the correct timeline. Keep track of the
     * timeline it was added to.
     * @returns the event id which was just added
     */ _addEvent(event, timeline) {
        this._scheduledEvents[event.id.toString()] = {
            event,
            timeline
        };
        timeline.add(event);
        return event.id;
    }
    /**
     * Remove scheduled events from the timeline after
     * the given time. Repeated events will be removed
     * if their startTime is after the given time
     * @param after Clear all events after this time.
     */ cancel(after = 0) {
        const computedAfter = this.toTicks(after);
        this._timeline.forEachFrom(computedAfter, (event)=>this.clear(event.id));
        this._repeatedEvents.forEachFrom(computedAfter, (event)=>this.clear(event.id));
        return this;
    }
    //-------------------------------------
    // 	START/STOP/PAUSE
    //-------------------------------------
    /**
     * Bind start/stop/pause events from the clock and emit them.
     */ _bindClockEvents() {
        this._clock.on("start", (time, offset)=>{
            offset = new (0, _ticks.TicksClass)(this.context, offset).toSeconds();
            this.emit("start", time, offset);
        });
        this._clock.on("stop", (time)=>{
            this.emit("stop", time);
        });
        this._clock.on("pause", (time)=>{
            this.emit("pause", time);
        });
    }
    /**
     * Returns the playback state of the source, either "started", "stopped", or "paused"
     */ get state() {
        return this._clock.getStateAtTime(this.now());
    }
    /**
     * Start the transport and all sources synced to the transport.
     * @param  time The time when the transport should start.
     * @param  offset The timeline offset to start the transport.
     * @example
     * // start the transport in one second starting at beginning of the 5th measure.
     * Tone.Transport.start("+1", "4:0:0");
     */ start(time, offset) {
        let offsetTicks;
        if ((0, _typeCheck.isDefined)(offset)) offsetTicks = this.toTicks(offset);
        // start the clock
        this._clock.start(time, offsetTicks);
        return this;
    }
    /**
     * Stop the transport and all sources synced to the transport.
     * @param time The time when the transport should stop.
     * @example
     * Tone.Transport.stop();
     */ stop(time) {
        this._clock.stop(time);
        return this;
    }
    /**
     * Pause the transport and all sources synced to the transport.
     */ pause(time) {
        this._clock.pause(time);
        return this;
    }
    /**
     * Toggle the current state of the transport. If it is
     * started, it will stop it, otherwise it will start the Transport.
     * @param  time The time of the event
     */ toggle(time) {
        time = this.toSeconds(time);
        if (this._clock.getStateAtTime(time) !== "started") this.start(time);
        else this.stop(time);
        return this;
    }
    //-------------------------------------
    // 	SETTERS/GETTERS
    //-------------------------------------
    /**
     * The time signature as just the numerator over 4.
     * For example 4/4 would be just 4 and 6/8 would be 3.
     * @example
     * // common time
     * Tone.Transport.timeSignature = 4;
     * // 7/8
     * Tone.Transport.timeSignature = [7, 8];
     * // this will be reduced to a single number
     * Tone.Transport.timeSignature; // returns 3.5
     */ get timeSignature() {
        return this._timeSignature;
    }
    set timeSignature(timeSig) {
        if ((0, _typeCheck.isArray)(timeSig)) timeSig = timeSig[0] / timeSig[1] * 4;
        this._timeSignature = timeSig;
    }
    /**
     * When the Transport.loop = true, this is the starting position of the loop.
     */ get loopStart() {
        return new (0, _time.TimeClass)(this.context, this._loopStart, "i").toSeconds();
    }
    set loopStart(startPosition) {
        this._loopStart = this.toTicks(startPosition);
    }
    /**
     * When the Transport.loop = true, this is the ending position of the loop.
     */ get loopEnd() {
        return new (0, _time.TimeClass)(this.context, this._loopEnd, "i").toSeconds();
    }
    set loopEnd(endPosition) {
        this._loopEnd = this.toTicks(endPosition);
    }
    /**
     * If the transport loops or not.
     */ get loop() {
        return this._loop.get(this.now());
    }
    set loop(loop) {
        this._loop.set(loop, this.now());
    }
    /**
     * Set the loop start and stop at the same time.
     * @example
     * // loop over the first measure
     * Tone.Transport.setLoopPoints(0, "1m");
     * Tone.Transport.loop = true;
     */ setLoopPoints(startPosition, endPosition) {
        this.loopStart = startPosition;
        this.loopEnd = endPosition;
        return this;
    }
    /**
     * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.
     */ get swing() {
        return this._swingAmount;
    }
    set swing(amount) {
        // scale the values to a normal range
        this._swingAmount = amount;
    }
    /**
     * Set the subdivision which the swing will be applied to.
     * The default value is an 8th note. Value must be less
     * than a quarter note.
     */ get swingSubdivision() {
        return new (0, _ticks.TicksClass)(this.context, this._swingTicks).toNotation();
    }
    set swingSubdivision(subdivision) {
        this._swingTicks = this.toTicks(subdivision);
    }
    /**
     * The Transport's position in Bars:Beats:Sixteenths.
     * Setting the value will jump to that position right away.
     */ get position() {
        const now = this.now();
        const ticks = this._clock.getTicksAtTime(now);
        return new (0, _ticks.TicksClass)(this.context, ticks).toBarsBeatsSixteenths();
    }
    set position(progress) {
        const ticks = this.toTicks(progress);
        this.ticks = ticks;
    }
    /**
     * The Transport's position in seconds
     * Setting the value will jump to that position right away.
     */ get seconds() {
        return this._clock.seconds;
    }
    set seconds(s) {
        const now = this.now();
        const ticks = this._clock.frequency.timeToTicks(s, now);
        this.ticks = ticks;
    }
    /**
     * The Transport's loop position as a normalized value. Always
     * returns 0 if the transport if loop is not true.
     */ get progress() {
        if (this.loop) {
            const now = this.now();
            const ticks = this._clock.getTicksAtTime(now);
            return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);
        } else return 0;
    }
    /**
     * The transports current tick position.
     */ get ticks() {
        return this._clock.ticks;
    }
    set ticks(t) {
        if (this._clock.ticks !== t) {
            const now = this.now();
            // stop everything synced to the transport
            if (this.state === "started") {
                const ticks = this._clock.getTicksAtTime(now);
                // schedule to start on the next tick, #573
                const remainingTick = this._clock.frequency.getDurationOfTicks(Math.ceil(ticks) - ticks, now);
                const time = now + remainingTick;
                this.emit("stop", time);
                this._clock.setTicksAtTime(t, time);
                // restart it with the new time
                this.emit("start", time, this._clock.getSecondsAtTime(time));
            } else this._clock.setTicksAtTime(t, now);
        }
    }
    /**
     * Get the clock's ticks at the given time.
     * @param  time  When to get the tick value
     * @return The tick value at the given time.
     */ getTicksAtTime(time) {
        return Math.round(this._clock.getTicksAtTime(time));
    }
    /**
     * Return the elapsed seconds at the given time.
     * @param  time  When to get the elapsed seconds
     * @return  The number of elapsed seconds
     */ getSecondsAtTime(time) {
        return this._clock.getSecondsAtTime(time);
    }
    /**
     * Pulses Per Quarter note. This is the smallest resolution
     * the Transport timing supports. This should be set once
     * on initialization and not set again. Changing this value
     * after other objects have been created can cause problems.
     */ get PPQ() {
        return this._clock.frequency.multiplier;
    }
    set PPQ(ppq) {
        this._clock.frequency.multiplier = ppq;
    }
    //-------------------------------------
    // 	SYNCING
    //-------------------------------------
    /**
     * Returns the time aligned to the next subdivision
     * of the Transport. If the Transport is not started,
     * it will return 0.
     * Note: this will not work precisely during tempo ramps.
     * @param  subdivision  The subdivision to quantize to
     * @return  The context time of the next subdivision.
     * @example
     * // the transport must be started, otherwise returns 0
     * Tone.Transport.start();
     * Tone.Transport.nextSubdivision("4n");
     */ nextSubdivision(subdivision) {
        subdivision = this.toTicks(subdivision);
        if (this.state !== "started") // if the transport's not started, return 0
        return 0;
        else {
            const now = this.now();
            // the remainder of the current ticks and the subdivision
            const transportPos = this.getTicksAtTime(now);
            const remainingTicks = subdivision - transportPos % subdivision;
            return this._clock.nextTickTime(remainingTicks, now);
        }
    }
    /**
     * Attaches the signal to the tempo control signal so that
     * any changes in the tempo will change the signal in the same
     * ratio.
     *
     * @param signal
     * @param ratio Optionally pass in the ratio between the two signals.
     * 			Otherwise it will be computed based on their current values.
     */ syncSignal(signal, ratio) {
        if (!ratio) {
            // get the sync ratio
            const now = this.now();
            if (signal.getValueAtTime(now) !== 0) {
                const bpm = this.bpm.getValueAtTime(now);
                const computedFreq = 1 / (60 / bpm / this.PPQ);
                ratio = signal.getValueAtTime(now) / computedFreq;
            } else ratio = 0;
        }
        const ratioSignal = new (0, _gain.Gain)(ratio);
        // @ts-ignore
        this.bpm.connect(ratioSignal);
        // @ts-ignore
        ratioSignal.connect(signal._param);
        this._syncedSignals.push({
            initial: signal.value,
            ratio: ratioSignal,
            signal
        });
        signal.value = 0;
        return this;
    }
    /**
     * Unsyncs a previously synced signal from the transport's control.
     * See Transport.syncSignal.
     */ unsyncSignal(signal) {
        for(let i = this._syncedSignals.length - 1; i >= 0; i--){
            const syncedSignal = this._syncedSignals[i];
            if (syncedSignal.signal === signal) {
                syncedSignal.ratio.dispose();
                syncedSignal.signal.value = syncedSignal.initial;
                this._syncedSignals.splice(i, 1);
            }
        }
        return this;
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this._clock.dispose();
        (0, _interface.writable)(this, "bpm");
        this._timeline.dispose();
        this._repeatedEvents.dispose();
        return this;
    }
}
(0, _emitter.Emitter).mixin(Transport);
//-------------------------------------
// 	INITIALIZATION
//-------------------------------------
(0, _contextInitialization.onContextInit)((context)=>{
    context.transport = new Transport({
        context
    });
});
(0, _contextInitialization.onContextClose)((context)=>{
    context.transport.dispose();
});

},{"../../core/type/Time":"9A3Zu","../../core/util/TimelineValue":"2Tqlj","../context/ContextInitialization":"iapnw","../context/Gain":"kj68Y","../context/ToneWithContext":"gAuzg","../type/Ticks":"BGGsE","../type/TransportTime":"a6yW0","../util/Defaults":"a9M5s","../util/Emitter":"4ROyf","../util/Interface":"hVOjA","../util/IntervalTimeline":"4FYQZ","../util/Timeline":"36KJ4","../util/TypeCheck":"eMH5A","./Clock":"52dVv","./TransportEvent":"coPXu","./TransportRepeatEvent":"7DSUo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Tqlj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Represents a single value which is gettable and settable in a timed way
 */ parcelHelpers.export(exports, "TimelineValue", ()=>TimelineValue);
var _timeline = require("./Timeline");
var _tone = require("../Tone");
class TimelineValue extends (0, _tone.Tone) {
    /**
     * @param initialValue The value to return if there is no scheduled values
     */ constructor(initialValue){
        super();
        this.name = "TimelineValue";
        /**
         * The timeline which stores the values
         */ this._timeline = new (0, _timeline.Timeline)({
            memory: 10
        });
        this._initialValue = initialValue;
    }
    /**
     * Set the value at the given time
     */ set(value, time) {
        this._timeline.add({
            value,
            time
        });
        return this;
    }
    /**
     * Get the value at the given time
     */ get(time) {
        const event = this._timeline.get(time);
        if (event) return event.value;
        else return this._initialValue;
    }
}

},{"./Timeline":"36KJ4","../Tone":"6Gzxl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"coPXu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * TransportEvent is an internal class used by [[Transport]]
 * to schedule events. Do no invoke this class directly, it is
 * handled from within Tone.Transport.
 */ parcelHelpers.export(exports, "TransportEvent", ()=>TransportEvent);
var _interface = require("../util/Interface");
class TransportEvent {
    /**
     * @param transport The transport object which the event belongs to
     */ constructor(transport, opts){
        /**
         * The unique id of the event
         */ this.id = TransportEvent._eventId++;
        const options = Object.assign(TransportEvent.getDefaults(), opts);
        this.transport = transport;
        this.callback = options.callback;
        this._once = options.once;
        this.time = options.time;
    }
    static getDefaults() {
        return {
            callback: (0, _interface.noOp),
            once: false,
            time: 0
        };
    }
    /**
     * Invoke the event callback.
     * @param  time  The AudioContext time in seconds of the event
     */ invoke(time) {
        if (this.callback) {
            this.callback(time);
            if (this._once) this.transport.clear(this.id);
        }
    }
    /**
     * Clean up
     */ dispose() {
        this.callback = undefined;
        return this;
    }
}
/**
 * Current ID counter
 */ TransportEvent._eventId = 0;

},{"../util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7DSUo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * TransportRepeatEvent is an internal class used by Tone.Transport
 * to schedule repeat events. This class should not be instantiated directly.
 */ parcelHelpers.export(exports, "TransportRepeatEvent", ()=>TransportRepeatEvent);
var _ticks = require("../type/Ticks");
var _transportEvent = require("./TransportEvent");
class TransportRepeatEvent extends (0, _transportEvent.TransportEvent) {
    /**
     * @param transport The transport object which the event belongs to
     */ constructor(transport, opts){
        super(transport, opts);
        /**
         * The ID of the current timeline event
         */ this._currentId = -1;
        /**
         * The ID of the next timeline event
         */ this._nextId = -1;
        /**
         * The time of the next event
         */ this._nextTick = this.time;
        /**
         * a reference to the bound start method
         */ this._boundRestart = this._restart.bind(this);
        const options = Object.assign(TransportRepeatEvent.getDefaults(), opts);
        this.duration = new (0, _ticks.TicksClass)(transport.context, options.duration).valueOf();
        this._interval = new (0, _ticks.TicksClass)(transport.context, options.interval).valueOf();
        this._nextTick = options.time;
        this.transport.on("start", this._boundRestart);
        this.transport.on("loopStart", this._boundRestart);
        this.context = this.transport.context;
        this._restart();
    }
    static getDefaults() {
        return Object.assign({}, (0, _transportEvent.TransportEvent).getDefaults(), {
            duration: Infinity,
            interval: 1,
            once: false
        });
    }
    /**
     * Invoke the callback. Returns the tick time which
     * the next event should be scheduled at.
     * @param  time  The AudioContext time in seconds of the event
     */ invoke(time) {
        // create more events if necessary
        this._createEvents(time);
        // call the super class
        super.invoke(time);
    }
    /**
     * Push more events onto the timeline to keep up with the position of the timeline
     */ _createEvents(time) {
        // schedule the next event
        const ticks = this.transport.getTicksAtTime(time);
        if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {
            this._nextTick += this._interval;
            this._currentId = this._nextId;
            this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new (0, _ticks.TicksClass)(this.context, this._nextTick).toSeconds());
        }
    }
    /**
     * Push more events onto the timeline to keep up with the position of the timeline
     */ _restart(time) {
        this.transport.clear(this._currentId);
        this.transport.clear(this._nextId);
        this._nextTick = this.time;
        const ticks = this.transport.getTicksAtTime(time);
        if (ticks > this.time) this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;
        this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new (0, _ticks.TicksClass)(this.context, this._nextTick).toSeconds());
        this._nextTick += this._interval;
        this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new (0, _ticks.TicksClass)(this.context, this._nextTick).toSeconds());
    }
    /**
     * Clean up
     */ dispose() {
        super.dispose();
        this.transport.clear(this._currentId);
        this.transport.clear(this._nextId);
        this.transport.off("start", this._boundRestart);
        this.transport.off("loopStart", this._boundRestart);
        return this;
    }
}

},{"../type/Ticks":"BGGsE","./TransportEvent":"coPXu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9FxEt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Wrapper around the native BufferSourceNode.
 * @category Source
 */ parcelHelpers.export(exports, "ToneBufferSource", ()=>ToneBufferSource);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _param = require("../../core/context/Param");
var _toneAudioBuffer = require("../../core/context/ToneAudioBuffer");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _typeCheck = require("../../core/util/TypeCheck");
var _debug = require("../../core/util/Debug");
var _oneShotSource = require("../OneShotSource");
var _math = require("../../core/util/Math");
class ToneBufferSource extends (0, _oneShotSource.OneShotSource) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(ToneBufferSource.getDefaults(), arguments, [
            "url",
            "onload"
        ]));
        this.name = "ToneBufferSource";
        /**
         * The oscillator
         */ this._source = this.context.createBufferSource();
        this._internalChannels = [
            this._source
        ];
        /**
         * indicators if the source has started/stopped
         */ this._sourceStarted = false;
        this._sourceStopped = false;
        const options = (0, _defaults.optionsFromArguments)(ToneBufferSource.getDefaults(), arguments, [
            "url",
            "onload"
        ]);
        (0, _toneAudioNode.connect)(this._source, this._gainNode);
        this._source.onended = ()=>this._stopSource();
        /**
         * The playbackRate of the buffer
         */ this.playbackRate = new (0, _param.Param)({
            context: this.context,
            param: this._source.playbackRate,
            units: "positive",
            value: options.playbackRate
        });
        // set some values initially
        this.loop = options.loop;
        this.loopStart = options.loopStart;
        this.loopEnd = options.loopEnd;
        this._buffer = new (0, _toneAudioBuffer.ToneAudioBuffer)(options.url, options.onload, options.onerror);
        this._internalChannels.push(this._source);
    }
    static getDefaults() {
        return Object.assign((0, _oneShotSource.OneShotSource).getDefaults(), {
            url: new (0, _toneAudioBuffer.ToneAudioBuffer)(),
            loop: false,
            loopEnd: 0,
            loopStart: 0,
            onload: (0, _interface.noOp),
            onerror: (0, _interface.noOp),
            playbackRate: 1
        });
    }
    /**
     * The fadeIn time of the amplitude envelope.
     */ get fadeIn() {
        return this._fadeIn;
    }
    set fadeIn(t) {
        this._fadeIn = t;
    }
    /**
     * The fadeOut time of the amplitude envelope.
     */ get fadeOut() {
        return this._fadeOut;
    }
    set fadeOut(t) {
        this._fadeOut = t;
    }
    /**
     * The curve applied to the fades, either "linear" or "exponential"
     */ get curve() {
        return this._curve;
    }
    set curve(t) {
        this._curve = t;
    }
    /**
     * Start the buffer
     * @param  time When the player should start.
     * @param  offset The offset from the beginning of the sample to start at.
     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)
     * @param  gain  The gain to play the buffer back at.
     */ start(time, offset, duration, gain = 1) {
        (0, _debug.assert)(this.buffer.loaded, "buffer is either not set or not loaded");
        const computedTime = this.toSeconds(time);
        // apply the gain envelope
        this._startGain(computedTime, gain);
        // if it's a loop the default offset is the loopstart point
        if (this.loop) offset = (0, _defaults.defaultArg)(offset, this.loopStart);
        else // otherwise the default offset is 0
        offset = (0, _defaults.defaultArg)(offset, 0);
        // make sure the offset is not less than 0
        let computedOffset = Math.max(this.toSeconds(offset), 0);
        // start the buffer source
        if (this.loop) {
            // modify the offset if it's greater than the loop time
            const loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;
            const loopStart = this.toSeconds(this.loopStart);
            const loopDuration = loopEnd - loopStart;
            // move the offset back
            if ((0, _math.GTE)(computedOffset, loopEnd)) computedOffset = (computedOffset - loopStart) % loopDuration + loopStart;
            // when the offset is very close to the duration, set it to 0
            if ((0, _math.EQ)(computedOffset, this.buffer.duration)) computedOffset = 0;
        }
        // this.buffer.loaded would have return false if the AudioBuffer was undefined
        this._source.buffer = this.buffer.get();
        this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;
        if ((0, _math.LT)(computedOffset, this.buffer.duration)) {
            this._sourceStarted = true;
            this._source.start(computedTime, computedOffset);
        }
        // if a duration is given, schedule a stop
        if ((0, _typeCheck.isDefined)(duration)) {
            let computedDur = this.toSeconds(duration);
            // make sure it's never negative
            computedDur = Math.max(computedDur, 0);
            this.stop(computedTime + computedDur);
        }
        return this;
    }
    _stopSource(time) {
        if (!this._sourceStopped && this._sourceStarted) {
            this._sourceStopped = true;
            this._source.stop(this.toSeconds(time));
            this._onended();
        }
    }
    /**
     * If loop is true, the loop will start at this position.
     */ get loopStart() {
        return this._source.loopStart;
    }
    set loopStart(loopStart) {
        this._source.loopStart = this.toSeconds(loopStart);
    }
    /**
     * If loop is true, the loop will end at this position.
     */ get loopEnd() {
        return this._source.loopEnd;
    }
    set loopEnd(loopEnd) {
        this._source.loopEnd = this.toSeconds(loopEnd);
    }
    /**
     * The audio buffer belonging to the player.
     */ get buffer() {
        return this._buffer;
    }
    set buffer(buffer) {
        this._buffer.set(buffer);
    }
    /**
     * If the buffer should loop once it's over.
     */ get loop() {
        return this._source.loop;
    }
    set loop(loop) {
        this._source.loop = loop;
        if (this._sourceStarted) this.cancelStop();
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this._source.onended = null;
        this._source.disconnect();
        this._buffer.dispose();
        this.playbackRate.dispose();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../core/context/Param":"5PVlJ","../../core/context/ToneAudioBuffer":"8aSPC","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../core/util/TypeCheck":"eMH5A","../../core/util/Debug":"2lOIQ","../OneShotSource":"iVQxd","../../core/util/Math":"7mtt2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f1Txo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * UserMedia uses MediaDevices.getUserMedia to open up and external microphone or audio input.
 * Check [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)
 * to see which browsers are supported. Access to an external input
 * is limited to secure (HTTPS) connections.
 * @example
 * const meter = new Tone.Meter();
 * const mic = new Tone.UserMedia().connect(meter);
 * mic.open().then(() => {
 * 	// promise resolves when input is available
 * 	console.log("mic open");
 * 	// print the incoming mic levels in decibels
 * 	setInterval(() => console.log(meter.getValue()), 100);
 * }).catch(e => {
 * 	// promise is rejected when the user doesn't have or allow mic access
 * 	console.log("mic not open");
 * });
 * @category Source
 */ parcelHelpers.export(exports, "UserMedia", ()=>UserMedia);
var _tslib = require("tslib");
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _volume = require("../component/channel/Volume");
var _defaults = require("../core/util/Defaults");
var _debug = require("../core/util/Debug");
var _interface = require("../core/util/Interface");
var _typeCheck = require("../core/util/TypeCheck");
class UserMedia extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(UserMedia.getDefaults(), arguments, [
            "volume"
        ]));
        this.name = "UserMedia";
        const options = (0, _defaults.optionsFromArguments)(UserMedia.getDefaults(), arguments, [
            "volume"
        ]);
        this._volume = this.output = new (0, _volume.Volume)({
            context: this.context,
            volume: options.volume
        });
        this.volume = this._volume.volume;
        (0, _interface.readOnly)(this, "volume");
        this.mute = options.mute;
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            mute: false,
            volume: 0
        });
    }
    /**
     * Open the media stream. If a string is passed in, it is assumed
     * to be the label or id of the stream, if a number is passed in,
     * it is the input number of the stream.
     * @param  labelOrId The label or id of the audio input media device.
     *                   With no argument, the default stream is opened.
     * @return The promise is resolved when the stream is open.
     */ open(labelOrId) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            (0, _debug.assert)(UserMedia.supported, "UserMedia is not supported");
            // close the previous stream
            if (this.state === "started") this.close();
            const devices = yield UserMedia.enumerateDevices();
            if ((0, _typeCheck.isNumber)(labelOrId)) this._device = devices[labelOrId];
            else {
                this._device = devices.find((device)=>{
                    return device.label === labelOrId || device.deviceId === labelOrId;
                });
                // didn't find a matching device
                if (!this._device && devices.length > 0) this._device = devices[0];
                (0, _debug.assert)((0, _typeCheck.isDefined)(this._device), `No matching device ${labelOrId}`);
            }
            // do getUserMedia
            const constraints = {
                audio: {
                    echoCancellation: false,
                    sampleRate: this.context.sampleRate,
                    noiseSuppression: false,
                    mozNoiseSuppression: false
                }
            };
            if (this._device) // @ts-ignore
            constraints.audio.deviceId = this._device.deviceId;
            const stream = yield navigator.mediaDevices.getUserMedia(constraints);
            // start a new source only if the previous one is closed
            if (!this._stream) {
                this._stream = stream;
                // Wrap a MediaStreamSourceNode around the live input stream.
                const mediaStreamNode = this.context.createMediaStreamSource(stream);
                // Connect the MediaStreamSourceNode to a gate gain node
                (0, _toneAudioNode.connect)(mediaStreamNode, this.output);
                this._mediaStream = mediaStreamNode;
            }
            return this;
        });
    }
    /**
     * Close the media stream
     */ close() {
        if (this._stream && this._mediaStream) {
            this._stream.getAudioTracks().forEach((track)=>{
                track.stop();
            });
            this._stream = undefined;
            // remove the old media stream
            this._mediaStream.disconnect();
            this._mediaStream = undefined;
        }
        this._device = undefined;
        return this;
    }
    /**
     * Returns a promise which resolves with the list of audio input devices available.
     * @return The promise that is resolved with the devices
     * @example
     * Tone.UserMedia.enumerateDevices().then((devices) => {
     * 	// print the device labels
     * 	console.log(devices.map(device => device.label));
     * });
     */ static enumerateDevices() {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            const allDevices = yield navigator.mediaDevices.enumerateDevices();
            return allDevices.filter((device)=>{
                return device.kind === "audioinput";
            });
        });
    }
    /**
     * Returns the playback state of the source, "started" when the microphone is open
     * and "stopped" when the mic is closed.
     */ get state() {
        return this._stream && this._stream.active ? "started" : "stopped";
    }
    /**
     * Returns an identifier for the represented device that is
     * persisted across sessions. It is un-guessable by other applications and
     * unique to the origin of the calling application. It is reset when the
     * user clears cookies (for Private Browsing, a different identifier is
     * used that is not persisted across sessions). Returns undefined when the
     * device is not open.
     */ get deviceId() {
        if (this._device) return this._device.deviceId;
        else return undefined;
    }
    /**
     * Returns a group identifier. Two devices have the
     * same group identifier if they belong to the same physical device.
     * Returns null  when the device is not open.
     */ get groupId() {
        if (this._device) return this._device.groupId;
        else return undefined;
    }
    /**
     * Returns a label describing this device (for example "Built-in Microphone").
     * Returns undefined when the device is not open or label is not available
     * because of permissions.
     */ get label() {
        if (this._device) return this._device.label;
        else return undefined;
    }
    /**
     * Mute the output.
     * @example
     * const mic = new Tone.UserMedia();
     * mic.open().then(() => {
     * 	// promise resolves when input is available
     * });
     * // mute the output
     * mic.mute = true;
     */ get mute() {
        return this._volume.mute;
    }
    set mute(mute) {
        this._volume.mute = mute;
    }
    dispose() {
        super.dispose();
        this.close();
        this._volume.dispose();
        this.volume.dispose();
        return this;
    }
    /**
     * If getUserMedia is supported by the browser.
     */ static get supported() {
        return (0, _typeCheck.isDefined)(navigator.mediaDevices) && (0, _typeCheck.isDefined)(navigator.mediaDevices.getUserMedia);
    }
}

},{"tslib":"lRdW5","../core/context/ToneAudioNode":"kZ3Kj","../component/channel/Volume":"7Ooeo","../core/util/Defaults":"a9M5s","../core/util/Debug":"2lOIQ","../core/util/Interface":"hVOjA","../core/util/TypeCheck":"eMH5A","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"204g3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Oscillator supports a number of features including
 * phase rotation, multiple oscillator types (see Oscillator.type),
 * and Transport syncing (see Oscillator.syncFrequency).
 *
 * @example
 * // make and start a 440hz sine tone
 * const osc = new Tone.Oscillator(440, "sine").toDestination().start();
 * @category Source
 */ parcelHelpers.export(exports, "Oscillator", ()=>Oscillator);
var _tslib = require("tslib");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _typeCheck = require("../../core/util/TypeCheck");
var _signal = require("../../signal/Signal");
var _source = require("../Source");
var _oscillatorInterface = require("./OscillatorInterface");
var _toneOscillatorNode = require("./ToneOscillatorNode");
var _debug = require("../../core/util/Debug");
var _math = require("../../core/util/Math");
class Oscillator extends (0, _source.Source) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Oscillator.getDefaults(), arguments, [
            "frequency",
            "type"
        ]));
        this.name = "Oscillator";
        /**
         * the main oscillator
         */ this._oscillator = null;
        const options = (0, _defaults.optionsFromArguments)(Oscillator.getDefaults(), arguments, [
            "frequency",
            "type"
        ]);
        this.frequency = new (0, _signal.Signal)({
            context: this.context,
            units: "frequency",
            value: options.frequency
        });
        (0, _interface.readOnly)(this, "frequency");
        this.detune = new (0, _signal.Signal)({
            context: this.context,
            units: "cents",
            value: options.detune
        });
        (0, _interface.readOnly)(this, "detune");
        this._partials = options.partials;
        this._partialCount = options.partialCount;
        this._type = options.type;
        if (options.partialCount && options.type !== "custom") this._type = this.baseType + options.partialCount.toString();
        this.phase = options.phase;
    }
    static getDefaults() {
        return Object.assign((0, _source.Source).getDefaults(), {
            detune: 0,
            frequency: 440,
            partialCount: 0,
            partials: [],
            phase: 0,
            type: "sine"
        });
    }
    /**
     * start the oscillator
     */ _start(time) {
        const computedTime = this.toSeconds(time);
        // new oscillator with previous values
        const oscillator = new (0, _toneOscillatorNode.ToneOscillatorNode)({
            context: this.context,
            onended: ()=>this.onstop(this)
        });
        this._oscillator = oscillator;
        if (this._wave) this._oscillator.setPeriodicWave(this._wave);
        else this._oscillator.type = this._type;
        // connect the control signal to the oscillator frequency & detune
        this._oscillator.connect(this.output);
        this.frequency.connect(this._oscillator.frequency);
        this.detune.connect(this._oscillator.detune);
        // start the oscillator
        this._oscillator.start(computedTime);
    }
    /**
     * stop the oscillator
     */ _stop(time) {
        const computedTime = this.toSeconds(time);
        if (this._oscillator) this._oscillator.stop(computedTime);
    }
    /**
     * Restart the oscillator. Does not stop the oscillator, but instead
     * just cancels any scheduled 'stop' from being invoked.
     */ _restart(time) {
        const computedTime = this.toSeconds(time);
        this.log("restart", computedTime);
        if (this._oscillator) this._oscillator.cancelStop();
        this._state.cancel(computedTime);
        return this;
    }
    /**
     * Sync the signal to the Transport's bpm. Any changes to the transports bpm,
     * will also affect the oscillators frequency.
     * @example
     * const osc = new Tone.Oscillator().toDestination().start();
     * osc.frequency.value = 440;
     * // the ratio between the bpm and the frequency will be maintained
     * osc.syncFrequency();
     * // double the tempo
     * Tone.Transport.bpm.value *= 2;
     * // the frequency of the oscillator is doubled to 880
     */ syncFrequency() {
        this.context.transport.syncSignal(this.frequency);
        return this;
    }
    /**
     * Unsync the oscillator's frequency from the Transport.
     * See Oscillator.syncFrequency
     */ unsyncFrequency() {
        this.context.transport.unsyncSignal(this.frequency);
        return this;
    }
    /**
     * Get a cached periodic wave. Avoids having to recompute
     * the oscillator values when they have already been computed
     * with the same values.
     */ _getCachedPeriodicWave() {
        if (this._type === "custom") {
            const oscProps = Oscillator._periodicWaveCache.find((description)=>{
                return description.phase === this._phase && (0, _defaults.deepEquals)(description.partials, this._partials);
            });
            return oscProps;
        } else {
            const oscProps = Oscillator._periodicWaveCache.find((description)=>{
                return description.type === this._type && description.phase === this._phase;
            });
            this._partialCount = oscProps ? oscProps.partialCount : this._partialCount;
            return oscProps;
        }
    }
    get type() {
        return this._type;
    }
    set type(type) {
        this._type = type;
        const isBasicType = [
            "sine",
            "square",
            "sawtooth",
            "triangle"
        ].indexOf(type) !== -1;
        if (this._phase === 0 && isBasicType) {
            this._wave = undefined;
            this._partialCount = 0;
            // just go with the basic approach
            if (this._oscillator !== null) // already tested that it's a basic type
            this._oscillator.type = type;
        } else {
            // first check if the value is cached
            const cache = this._getCachedPeriodicWave();
            if ((0, _typeCheck.isDefined)(cache)) {
                const { partials, wave } = cache;
                this._wave = wave;
                this._partials = partials;
                if (this._oscillator !== null) this._oscillator.setPeriodicWave(this._wave);
            } else {
                const [real, imag] = this._getRealImaginary(type, this._phase);
                const periodicWave = this.context.createPeriodicWave(real, imag);
                this._wave = periodicWave;
                if (this._oscillator !== null) this._oscillator.setPeriodicWave(this._wave);
                // set the cache
                Oscillator._periodicWaveCache.push({
                    imag,
                    partialCount: this._partialCount,
                    partials: this._partials,
                    phase: this._phase,
                    real,
                    type: this._type,
                    wave: this._wave
                });
                if (Oscillator._periodicWaveCache.length > 100) Oscillator._periodicWaveCache.shift();
            }
        }
    }
    get baseType() {
        return this._type.replace(this.partialCount.toString(), "");
    }
    set baseType(baseType) {
        if (this.partialCount && this._type !== "custom" && baseType !== "custom") this.type = baseType + this.partialCount;
        else this.type = baseType;
    }
    get partialCount() {
        return this._partialCount;
    }
    set partialCount(p) {
        (0, _debug.assertRange)(p, 0);
        let type = this._type;
        const partial = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);
        if (partial) type = partial[1];
        if (this._type !== "custom") {
            if (p === 0) this.type = type;
            else this.type = type + p.toString();
        } else {
            // extend or shorten the partials array
            const fullPartials = new Float32Array(p);
            // copy over the partials array
            this._partials.forEach((v, i)=>fullPartials[i] = v);
            this._partials = Array.from(fullPartials);
            this.type = this._type;
        }
    }
    /**
     * Returns the real and imaginary components based
     * on the oscillator type.
     * @returns [real: Float32Array, imaginary: Float32Array]
     */ _getRealImaginary(type, phase) {
        const fftSize = 4096;
        let periodicWaveSize = fftSize / 2;
        const real = new Float32Array(periodicWaveSize);
        const imag = new Float32Array(periodicWaveSize);
        let partialCount = 1;
        if (type === "custom") {
            partialCount = this._partials.length + 1;
            this._partialCount = this._partials.length;
            periodicWaveSize = partialCount;
            // if the partial count is 0, don't bother doing any computation
            if (this._partials.length === 0) return [
                real,
                imag
            ];
        } else {
            const partial = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(type);
            if (partial) {
                partialCount = parseInt(partial[2], 10) + 1;
                this._partialCount = parseInt(partial[2], 10);
                type = partial[1];
                partialCount = Math.max(partialCount, 2);
                periodicWaveSize = partialCount;
            } else this._partialCount = 0;
            this._partials = [];
        }
        for(let n = 1; n < periodicWaveSize; ++n){
            const piFactor = 2 / (n * Math.PI);
            let b;
            switch(type){
                case "sine":
                    b = n <= partialCount ? 1 : 0;
                    this._partials[n - 1] = b;
                    break;
                case "square":
                    b = n & 1 ? 2 * piFactor : 0;
                    this._partials[n - 1] = b;
                    break;
                case "sawtooth":
                    b = piFactor * (n & 1 ? 1 : -1);
                    this._partials[n - 1] = b;
                    break;
                case "triangle":
                    if (n & 1) b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);
                    else b = 0;
                    this._partials[n - 1] = b;
                    break;
                case "custom":
                    b = this._partials[n - 1];
                    break;
                default:
                    throw new TypeError("Oscillator: invalid type: " + type);
            }
            if (b !== 0) {
                real[n] = -b * Math.sin(phase * n);
                imag[n] = b * Math.cos(phase * n);
            } else {
                real[n] = 0;
                imag[n] = 0;
            }
        }
        return [
            real,
            imag
        ];
    }
    /**
     * Compute the inverse FFT for a given phase.
     */ _inverseFFT(real, imag, phase) {
        let sum = 0;
        const len = real.length;
        for(let i = 0; i < len; i++)sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);
        return sum;
    }
    /**
     * Returns the initial value of the oscillator when stopped.
     * E.g. a "sine" oscillator with phase = 90 would return an initial value of -1.
     */ getInitialValue() {
        const [real, imag] = this._getRealImaginary(this._type, 0);
        let maxValue = 0;
        const twoPi = Math.PI * 2;
        const testPositions = 32;
        // check for peaks in 16 places
        for(let i = 0; i < testPositions; i++)maxValue = Math.max(this._inverseFFT(real, imag, i / testPositions * twoPi), maxValue);
        return (0, _math.clamp)(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);
    }
    get partials() {
        return this._partials.slice(0, this.partialCount);
    }
    set partials(partials) {
        this._partials = partials;
        this._partialCount = this._partials.length;
        if (partials.length) this.type = "custom";
    }
    get phase() {
        return this._phase * (180 / Math.PI);
    }
    set phase(phase) {
        this._phase = phase * Math.PI / 180;
        // reset the type
        this.type = this._type;
    }
    asArray(length = 1024) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            return (0, _oscillatorInterface.generateWaveform)(this, length);
        });
    }
    dispose() {
        super.dispose();
        if (this._oscillator !== null) this._oscillator.dispose();
        this._wave = undefined;
        this.frequency.dispose();
        this.detune.dispose();
        return this;
    }
}
/**
 * Cache the periodic waves to avoid having to redo computations
 */ Oscillator._periodicWaveCache = [];

},{"tslib":"lRdW5","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../core/util/TypeCheck":"eMH5A","../../signal/Signal":"980ri","../Source":"eBYFz","./OscillatorInterface":"wCQWx","./ToneOscillatorNode":"gLw4W","../../core/util/Debug":"2lOIQ","../../core/util/Math":"7mtt2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"wCQWx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Render a segment of the oscillator to an offline context and return the results as an array
 */ parcelHelpers.export(exports, "generateWaveform", ()=>generateWaveform);
var _tslib = require("tslib");
var _offlineContext = require("../../core/context/OfflineContext");
function generateWaveform(instance, length) {
    return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
        const duration = length / instance.context.sampleRate;
        const context = new (0, _offlineContext.OfflineContext)(1, duration, instance.context.sampleRate);
        const clone = new instance.constructor(Object.assign(instance.get(), {
            // should do 2 iterations
            frequency: 2 / duration,
            // zero out the detune
            detune: 0,
            context
        })).toDestination();
        clone.start(0);
        const buffer = yield context.render();
        return buffer.getChannelData(0);
    });
}

},{"tslib":"lRdW5","../../core/context/OfflineContext":"8VnAL","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gLw4W":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Wrapper around the native fire-and-forget OscillatorNode.
 * Adds the ability to reschedule the stop method.
 * ***[[Oscillator]] is better for most use-cases***
 * @category Source
 */ parcelHelpers.export(exports, "ToneOscillatorNode", ()=>ToneOscillatorNode);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _param = require("../../core/context/Param");
var _defaults = require("../../core/util/Defaults");
var _oneShotSource = require("../OneShotSource");
var _interface = require("../../core/util/Interface");
class ToneOscillatorNode extends (0, _oneShotSource.OneShotSource) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(ToneOscillatorNode.getDefaults(), arguments, [
            "frequency",
            "type"
        ]));
        this.name = "ToneOscillatorNode";
        /**
         * The oscillator
         */ this._oscillator = this.context.createOscillator();
        this._internalChannels = [
            this._oscillator
        ];
        const options = (0, _defaults.optionsFromArguments)(ToneOscillatorNode.getDefaults(), arguments, [
            "frequency",
            "type"
        ]);
        (0, _toneAudioNode.connect)(this._oscillator, this._gainNode);
        this.type = options.type;
        this.frequency = new (0, _param.Param)({
            context: this.context,
            param: this._oscillator.frequency,
            units: "frequency",
            value: options.frequency
        });
        this.detune = new (0, _param.Param)({
            context: this.context,
            param: this._oscillator.detune,
            units: "cents",
            value: options.detune
        });
        (0, _interface.readOnly)(this, [
            "frequency",
            "detune"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _oneShotSource.OneShotSource).getDefaults(), {
            detune: 0,
            frequency: 440,
            type: "sine"
        });
    }
    /**
     * Start the oscillator node at the given time
     * @param  time When to start the oscillator
     */ start(time) {
        const computedTime = this.toSeconds(time);
        this.log("start", computedTime);
        this._startGain(computedTime);
        this._oscillator.start(computedTime);
        return this;
    }
    _stopSource(time) {
        this._oscillator.stop(time);
    }
    /**
     * Sets an arbitrary custom periodic waveform given a PeriodicWave.
     * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave
     */ setPeriodicWave(periodicWave) {
        this._oscillator.setPeriodicWave(periodicWave);
        return this;
    }
    /**
     * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'
     */ get type() {
        return this._oscillator.type;
    }
    set type(type) {
        this._oscillator.type = type;
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        if (this.state === "started") this.stop();
        this._oscillator.disconnect();
        this.frequency.dispose();
        this.detune.dispose();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../core/context/Param":"5PVlJ","../../core/util/Defaults":"a9M5s","../OneShotSource":"iVQxd","../../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9mU3E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * An amplitude modulated oscillator node. It is implemented with
 * two oscillators, one which modulators the other's amplitude
 * through a gain node.
 * ```
 *    +-------------+       +----------+
 *    | Carrier Osc +>------> GainNode |
 *    +-------------+       |          +--->Output
 *                      +---> gain     |
 * +---------------+    |   +----------+
 * | Modulator Osc +>---+
 * +---------------+
 * ```
 * @example
 * return Tone.Offline(() => {
 * 	const amOsc = new Tone.AMOscillator(30, "sine", "square").toDestination().start();
 * }, 0.2, 1);
 * @category Source
 */ parcelHelpers.export(exports, "AMOscillator", ()=>AMOscillator);
var _tslib = require("tslib");
var _gain = require("../../core/context/Gain");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _audioToGain = require("../../signal/AudioToGain");
var _multiply = require("../../signal/Multiply");
var _source = require("../Source");
var _oscillator = require("./Oscillator");
var _oscillatorInterface = require("./OscillatorInterface");
class AMOscillator extends (0, _source.Source) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(AMOscillator.getDefaults(), arguments, [
            "frequency",
            "type",
            "modulationType"
        ]));
        this.name = "AMOscillator";
        /**
         * convert the -1,1 output to 0,1
         */ this._modulationScale = new (0, _audioToGain.AudioToGain)({
            context: this.context
        });
        /**
         * the node where the modulation happens
         */ this._modulationNode = new (0, _gain.Gain)({
            context: this.context
        });
        const options = (0, _defaults.optionsFromArguments)(AMOscillator.getDefaults(), arguments, [
            "frequency",
            "type",
            "modulationType"
        ]);
        this._carrier = new (0, _oscillator.Oscillator)({
            context: this.context,
            detune: options.detune,
            frequency: options.frequency,
            onstop: ()=>this.onstop(this),
            phase: options.phase,
            type: options.type
        });
        this.frequency = this._carrier.frequency, this.detune = this._carrier.detune;
        this._modulator = new (0, _oscillator.Oscillator)({
            context: this.context,
            phase: options.phase,
            type: options.modulationType
        });
        this.harmonicity = new (0, _multiply.Multiply)({
            context: this.context,
            units: "positive",
            value: options.harmonicity
        });
        // connections
        this.frequency.chain(this.harmonicity, this._modulator.frequency);
        this._modulator.chain(this._modulationScale, this._modulationNode.gain);
        this._carrier.chain(this._modulationNode, this.output);
        (0, _interface.readOnly)(this, [
            "frequency",
            "detune",
            "harmonicity"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _oscillator.Oscillator).getDefaults(), {
            harmonicity: 1,
            modulationType: "square"
        });
    }
    /**
     * start the oscillator
     */ _start(time) {
        this._modulator.start(time);
        this._carrier.start(time);
    }
    /**
     * stop the oscillator
     */ _stop(time) {
        this._modulator.stop(time);
        this._carrier.stop(time);
    }
    _restart(time) {
        this._modulator.restart(time);
        this._carrier.restart(time);
    }
    /**
     * The type of the carrier oscillator
     */ get type() {
        return this._carrier.type;
    }
    set type(type) {
        this._carrier.type = type;
    }
    get baseType() {
        return this._carrier.baseType;
    }
    set baseType(baseType) {
        this._carrier.baseType = baseType;
    }
    get partialCount() {
        return this._carrier.partialCount;
    }
    set partialCount(partialCount) {
        this._carrier.partialCount = partialCount;
    }
    /**
     * The type of the modulator oscillator
     */ get modulationType() {
        return this._modulator.type;
    }
    set modulationType(type) {
        this._modulator.type = type;
    }
    get phase() {
        return this._carrier.phase;
    }
    set phase(phase) {
        this._carrier.phase = phase;
        this._modulator.phase = phase;
    }
    get partials() {
        return this._carrier.partials;
    }
    set partials(partials) {
        this._carrier.partials = partials;
    }
    asArray(length = 1024) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            return (0, _oscillatorInterface.generateWaveform)(this, length);
        });
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this.frequency.dispose();
        this.detune.dispose();
        this.harmonicity.dispose();
        this._carrier.dispose();
        this._modulator.dispose();
        this._modulationNode.dispose();
        this._modulationScale.dispose();
        return this;
    }
}

},{"tslib":"lRdW5","../../core/context/Gain":"kj68Y","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../signal/AudioToGain":"kLli1","../../signal/Multiply":"4C0VG","../Source":"eBYFz","./Oscillator":"204g3","./OscillatorInterface":"wCQWx","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kLli1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].
 * See [[GainToAudio]].
 * @category Signal
 */ parcelHelpers.export(exports, "AudioToGain", ()=>AudioToGain);
var _signalOperator = require("./SignalOperator");
var _waveShaper = require("./WaveShaper");
class AudioToGain extends (0, _signalOperator.SignalOperator) {
    constructor(){
        super(...arguments);
        this.name = "AudioToGain";
        /**
         * The node which converts the audio ranges
         */ this._norm = new (0, _waveShaper.WaveShaper)({
            context: this.context,
            mapping: (x)=>(x + 1) / 2
        });
        /**
         * The AudioRange input [-1, 1]
         */ this.input = this._norm;
        /**
         * The GainRange output [0, 1]
         */ this.output = this._norm;
    }
    /**
     * clean up
     */ dispose() {
        super.dispose();
        this._norm.dispose();
        return this;
    }
}

},{"./SignalOperator":"4XSes","./WaveShaper":"k4nzV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4XSes":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A signal operator has an input and output and modifies the signal.
 */ parcelHelpers.export(exports, "SignalOperator", ()=>SignalOperator);
var _defaults = require("../core/util/Defaults");
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _signal = require("./Signal");
class SignalOperator extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(SignalOperator.getDefaults(), arguments, [
            "context"
        ])));
    }
    connect(destination, outputNum = 0, inputNum = 0) {
        (0, _signal.connectSignal)(this, destination, outputNum, inputNum);
        return this;
    }
}

},{"../core/util/Defaults":"a9M5s","../core/context/ToneAudioNode":"kZ3Kj","./Signal":"980ri","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k4nzV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Wraps the native Web Audio API
 * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).
 *
 * @example
 * const osc = new Tone.Oscillator().toDestination().start();
 * // multiply the output of the signal by 2 using the waveshaper's function
 * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);
 * const signal = new Tone.Signal(440).connect(timesTwo);
 * @category Signal
 */ parcelHelpers.export(exports, "WaveShaper", ()=>WaveShaper);
var _defaults = require("../core/util/Defaults");
var _typeCheck = require("../core/util/TypeCheck");
var _debug = require("../core/util/Debug");
var _signal = require("./Signal");
var _signalOperator = require("./SignalOperator");
class WaveShaper extends (0, _signalOperator.SignalOperator) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(WaveShaper.getDefaults(), arguments, [
            "mapping",
            "length"
        ])));
        this.name = "WaveShaper";
        /**
         * the waveshaper node
         */ this._shaper = this.context.createWaveShaper();
        /**
         * The input to the waveshaper node.
         */ this.input = this._shaper;
        /**
         * The output from the waveshaper node
         */ this.output = this._shaper;
        const options = (0, _defaults.optionsFromArguments)(WaveShaper.getDefaults(), arguments, [
            "mapping",
            "length"
        ]);
        if ((0, _typeCheck.isArray)(options.mapping) || options.mapping instanceof Float32Array) this.curve = Float32Array.from(options.mapping);
        else if ((0, _typeCheck.isFunction)(options.mapping)) this.setMap(options.mapping, options.length);
    }
    static getDefaults() {
        return Object.assign((0, _signal.Signal).getDefaults(), {
            length: 1024
        });
    }
    /**
     * Uses a mapping function to set the value of the curve.
     * @param mapping The function used to define the values.
     *                The mapping function take two arguments:
     *                the first is the value at the current position
     *                which goes from -1 to 1 over the number of elements
     *                in the curve array. The second argument is the array position.
     * @example
     * const shaper = new Tone.WaveShaper();
     * // map the input signal from [-1, 1] to [0, 10]
     * shaper.setMap((val, index) => (val + 1) * 5);
     */ setMap(mapping, length = 1024) {
        const array = new Float32Array(length);
        for(let i = 0, len = length; i < len; i++){
            const normalized = i / (len - 1) * 2 - 1;
            array[i] = mapping(normalized, i);
        }
        this.curve = array;
        return this;
    }
    /**
     * The array to set as the waveshaper curve. For linear curves
     * array length does not make much difference, but for complex curves
     * longer arrays will provide smoother interpolation.
     */ get curve() {
        return this._shaper.curve;
    }
    set curve(mapping) {
        this._shaper.curve = mapping;
    }
    /**
     * Specifies what type of oversampling (if any) should be used when
     * applying the shaping curve. Can either be "none", "2x" or "4x".
     */ get oversample() {
        return this._shaper.oversample;
    }
    set oversample(oversampling) {
        const isOverSampleType = [
            "none",
            "2x",
            "4x"
        ].some((str)=>str.includes(oversampling));
        (0, _debug.assert)(isOverSampleType, "oversampling must be either 'none', '2x', or '4x'");
        this._shaper.oversample = oversampling;
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this._shaper.disconnect();
        return this;
    }
}

},{"../core/util/Defaults":"a9M5s","../core/util/TypeCheck":"eMH5A","../core/util/Debug":"2lOIQ","./Signal":"980ri","./SignalOperator":"4XSes","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4C0VG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Multiply two incoming signals. Or, if a number is given in the constructor,
 * multiplies the incoming signal by that value.
 *
 * @example
 * // multiply two signals
 * const mult = new Tone.Multiply();
 * const sigA = new Tone.Signal(3);
 * const sigB = new Tone.Signal(4);
 * sigA.connect(mult);
 * sigB.connect(mult.factor);
 * // output of mult is 12.
 * @example
 * // multiply a signal and a number
 * const mult = new Tone.Multiply(10);
 * const sig = new Tone.Signal(2).connect(mult);
 * // the output of mult is 20.
 * @category Signal
 */ parcelHelpers.export(exports, "Multiply", ()=>Multiply);
var _gain = require("../core/context/Gain");
var _defaults = require("../core/util/Defaults");
var _signal = require("./Signal");
class Multiply extends (0, _signal.Signal) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(Multiply.getDefaults(), arguments, [
            "value"
        ])));
        this.name = "Multiply";
        /**
         * Indicates if the value should be overridden on connection
         */ this.override = false;
        const options = (0, _defaults.optionsFromArguments)(Multiply.getDefaults(), arguments, [
            "value"
        ]);
        this._mult = this.input = this.output = new (0, _gain.Gain)({
            context: this.context,
            minValue: options.minValue,
            maxValue: options.maxValue
        });
        this.factor = this._param = this._mult.gain;
        this.factor.setValueAtTime(options.value, 0);
    }
    static getDefaults() {
        return Object.assign((0, _signal.Signal).getDefaults(), {
            value: 0
        });
    }
    dispose() {
        super.dispose();
        this._mult.dispose();
        return this;
    }
}

},{"../core/context/Gain":"kj68Y","../core/util/Defaults":"a9M5s","./Signal":"980ri","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3UNlG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * FMOscillator implements a frequency modulation synthesis
 * ```
 *                                              +-------------+
 * +---------------+        +-------------+     | Carrier Osc |
 * | Modulator Osc +>-------> GainNode    |     |             +--->Output
 * +---------------+        |             +>----> frequency   |
 *                       +--> gain        |     +-------------+
 *                       |  +-------------+
 * +-----------------+   |
 * | modulationIndex +>--+
 * +-----------------+
 * ```
 *
 * @example
 * return Tone.Offline(() => {
 * 	const fmOsc = new Tone.FMOscillator({
 * 		frequency: 200,
 * 		type: "square",
 * 		modulationType: "triangle",
 * 		harmonicity: 0.2,
 * 		modulationIndex: 3
 * 	}).toDestination().start();
 * }, 0.1, 1);
 * @category Source
 */ parcelHelpers.export(exports, "FMOscillator", ()=>FMOscillator);
var _tslib = require("tslib");
var _gain = require("../../core/context/Gain");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _multiply = require("../../signal/Multiply");
var _signal = require("../../signal/Signal");
var _source = require("../Source");
var _oscillator = require("./Oscillator");
var _oscillatorInterface = require("./OscillatorInterface");
class FMOscillator extends (0, _source.Source) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(FMOscillator.getDefaults(), arguments, [
            "frequency",
            "type",
            "modulationType"
        ]));
        this.name = "FMOscillator";
        /**
         * the node where the modulation happens
         */ this._modulationNode = new (0, _gain.Gain)({
            context: this.context,
            gain: 0
        });
        const options = (0, _defaults.optionsFromArguments)(FMOscillator.getDefaults(), arguments, [
            "frequency",
            "type",
            "modulationType"
        ]);
        this._carrier = new (0, _oscillator.Oscillator)({
            context: this.context,
            detune: options.detune,
            frequency: 0,
            onstop: ()=>this.onstop(this),
            phase: options.phase,
            type: options.type
        });
        this.detune = this._carrier.detune;
        this.frequency = new (0, _signal.Signal)({
            context: this.context,
            units: "frequency",
            value: options.frequency
        });
        this._modulator = new (0, _oscillator.Oscillator)({
            context: this.context,
            phase: options.phase,
            type: options.modulationType
        });
        this.harmonicity = new (0, _multiply.Multiply)({
            context: this.context,
            units: "positive",
            value: options.harmonicity
        });
        this.modulationIndex = new (0, _multiply.Multiply)({
            context: this.context,
            units: "positive",
            value: options.modulationIndex
        });
        // connections
        this.frequency.connect(this._carrier.frequency);
        this.frequency.chain(this.harmonicity, this._modulator.frequency);
        this.frequency.chain(this.modulationIndex, this._modulationNode);
        this._modulator.connect(this._modulationNode.gain);
        this._modulationNode.connect(this._carrier.frequency);
        this._carrier.connect(this.output);
        this.detune.connect(this._modulator.detune);
        (0, _interface.readOnly)(this, [
            "modulationIndex",
            "frequency",
            "detune",
            "harmonicity"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _oscillator.Oscillator).getDefaults(), {
            harmonicity: 1,
            modulationIndex: 2,
            modulationType: "square"
        });
    }
    /**
     * start the oscillator
     */ _start(time) {
        this._modulator.start(time);
        this._carrier.start(time);
    }
    /**
     * stop the oscillator
     */ _stop(time) {
        this._modulator.stop(time);
        this._carrier.stop(time);
    }
    _restart(time) {
        this._modulator.restart(time);
        this._carrier.restart(time);
        return this;
    }
    get type() {
        return this._carrier.type;
    }
    set type(type) {
        this._carrier.type = type;
    }
    get baseType() {
        return this._carrier.baseType;
    }
    set baseType(baseType) {
        this._carrier.baseType = baseType;
    }
    get partialCount() {
        return this._carrier.partialCount;
    }
    set partialCount(partialCount) {
        this._carrier.partialCount = partialCount;
    }
    /**
     * The type of the modulator oscillator
     */ get modulationType() {
        return this._modulator.type;
    }
    set modulationType(type) {
        this._modulator.type = type;
    }
    get phase() {
        return this._carrier.phase;
    }
    set phase(phase) {
        this._carrier.phase = phase;
        this._modulator.phase = phase;
    }
    get partials() {
        return this._carrier.partials;
    }
    set partials(partials) {
        this._carrier.partials = partials;
    }
    asArray(length = 1024) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            return (0, _oscillatorInterface.generateWaveform)(this, length);
        });
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this.frequency.dispose();
        this.harmonicity.dispose();
        this._carrier.dispose();
        this._modulator.dispose();
        this._modulationNode.dispose();
        this.modulationIndex.dispose();
        return this;
    }
}

},{"tslib":"lRdW5","../../core/context/Gain":"kj68Y","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../signal/Multiply":"4C0VG","../../signal/Signal":"980ri","../Source":"eBYFz","./Oscillator":"204g3","./OscillatorInterface":"wCQWx","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g3ood":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * PulseOscillator is an oscillator with control over pulse width,
 * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is
 * a square wave.
 * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).
 * ```
 *    width = -0.25        width = 0.0          width = 0.25
 *
 *   +-----+            +-------+       +    +-------+     +-+
 *   |     |            |       |       |            |     |
 *   |     |            |       |       |            |     |
 * +-+     +-------+    +       +-------+            +-----+
 *
 *
 *    width = -0.5                              width = 0.5
 *
 *     +---+                                 +-------+   +---+
 *     |   |                                         |   |
 *     |   |                                         |   |
 * +---+   +-------+                                 +---+
 *
 *
 *    width = -0.75                             width = 0.75
 *
 *       +-+                                 +-------+ +-----+
 *       | |                                         | |
 *       | |                                         | |
 * +-----+ +-------+                                 +-+
 * ```
 * @example
 * return Tone.Offline(() => {
 * 	const pulse = new Tone.PulseOscillator(50, 0.4).toDestination().start();
 * }, 0.1, 1);
 * @category Source
 */ parcelHelpers.export(exports, "PulseOscillator", ()=>PulseOscillator);
var _tslib = require("tslib");
var _gain = require("../../core/context/Gain");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _signal = require("../../signal/Signal");
var _waveShaper = require("../../signal/WaveShaper");
var _source = require("../Source");
var _oscillator = require("./Oscillator");
var _oscillatorInterface = require("./OscillatorInterface");
class PulseOscillator extends (0, _source.Source) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(PulseOscillator.getDefaults(), arguments, [
            "frequency",
            "width"
        ]));
        this.name = "PulseOscillator";
        /**
         * gate the width amount
         */ this._widthGate = new (0, _gain.Gain)({
            context: this.context,
            gain: 0
        });
        /**
         * Threshold the signal to turn it into a square
         */ this._thresh = new (0, _waveShaper.WaveShaper)({
            context: this.context,
            mapping: (val)=>val <= 0 ? -1 : 1
        });
        const options = (0, _defaults.optionsFromArguments)(PulseOscillator.getDefaults(), arguments, [
            "frequency",
            "width"
        ]);
        this.width = new (0, _signal.Signal)({
            context: this.context,
            units: "audioRange",
            value: options.width
        });
        this._triangle = new (0, _oscillator.Oscillator)({
            context: this.context,
            detune: options.detune,
            frequency: options.frequency,
            onstop: ()=>this.onstop(this),
            phase: options.phase,
            type: "triangle"
        });
        this.frequency = this._triangle.frequency;
        this.detune = this._triangle.detune;
        // connections
        this._triangle.chain(this._thresh, this.output);
        this.width.chain(this._widthGate, this._thresh);
        (0, _interface.readOnly)(this, [
            "width",
            "frequency",
            "detune"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _source.Source).getDefaults(), {
            detune: 0,
            frequency: 440,
            phase: 0,
            type: "pulse",
            width: 0.2
        });
    }
    /**
     * start the oscillator
     */ _start(time) {
        time = this.toSeconds(time);
        this._triangle.start(time);
        this._widthGate.gain.setValueAtTime(1, time);
    }
    /**
     * stop the oscillator
     */ _stop(time) {
        time = this.toSeconds(time);
        this._triangle.stop(time);
        // the width is still connected to the output.
        // that needs to be stopped also
        this._widthGate.gain.cancelScheduledValues(time);
        this._widthGate.gain.setValueAtTime(0, time);
    }
    _restart(time) {
        this._triangle.restart(time);
        this._widthGate.gain.cancelScheduledValues(time);
        this._widthGate.gain.setValueAtTime(1, time);
    }
    /**
     * The phase of the oscillator in degrees.
     */ get phase() {
        return this._triangle.phase;
    }
    set phase(phase) {
        this._triangle.phase = phase;
    }
    /**
     * The type of the oscillator. Always returns "pulse".
     */ get type() {
        return "pulse";
    }
    /**
     * The baseType of the oscillator. Always returns "pulse".
     */ get baseType() {
        return "pulse";
    }
    /**
     * The partials of the waveform. Cannot set partials for this waveform type
     */ get partials() {
        return [];
    }
    /**
     * No partials for this waveform type.
     */ get partialCount() {
        return 0;
    }
    /**
     * *Internal use* The carrier oscillator type is fed through the
     * waveshaper node to create the pulse. Using different carrier oscillators
     * changes oscillator's behavior.
     */ set carrierType(type) {
        this._triangle.type = type;
    }
    asArray(length = 1024) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            return (0, _oscillatorInterface.generateWaveform)(this, length);
        });
    }
    /**
     * Clean up method.
     */ dispose() {
        super.dispose();
        this._triangle.dispose();
        this.width.dispose();
        this._widthGate.dispose();
        this._thresh.dispose();
        return this;
    }
}

},{"tslib":"lRdW5","../../core/context/Gain":"kj68Y","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../signal/Signal":"980ri","../../signal/WaveShaper":"k4nzV","../Source":"eBYFz","./Oscillator":"204g3","./OscillatorInterface":"wCQWx","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2aUtm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * FatOscillator is an array of oscillators with detune spread between the oscillators
 * @example
 * const fatOsc = new Tone.FatOscillator("Ab3", "sawtooth", 40).toDestination().start();
 * @category Source
 */ parcelHelpers.export(exports, "FatOscillator", ()=>FatOscillator);
var _tslib = require("tslib");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _signal = require("../../signal/Signal");
var _source = require("../Source");
var _oscillator = require("./Oscillator");
var _oscillatorInterface = require("./OscillatorInterface");
var _debug = require("../../core/util/Debug");
class FatOscillator extends (0, _source.Source) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(FatOscillator.getDefaults(), arguments, [
            "frequency",
            "type",
            "spread"
        ]));
        this.name = "FatOscillator";
        /**
         * The array of oscillators
         */ this._oscillators = [];
        const options = (0, _defaults.optionsFromArguments)(FatOscillator.getDefaults(), arguments, [
            "frequency",
            "type",
            "spread"
        ]);
        this.frequency = new (0, _signal.Signal)({
            context: this.context,
            units: "frequency",
            value: options.frequency
        });
        this.detune = new (0, _signal.Signal)({
            context: this.context,
            units: "cents",
            value: options.detune
        });
        this._spread = options.spread;
        this._type = options.type;
        this._phase = options.phase;
        this._partials = options.partials;
        this._partialCount = options.partialCount;
        // set the count initially
        this.count = options.count;
        (0, _interface.readOnly)(this, [
            "frequency",
            "detune"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _oscillator.Oscillator).getDefaults(), {
            count: 3,
            spread: 20,
            type: "sawtooth"
        });
    }
    /**
     * start the oscillator
     */ _start(time) {
        time = this.toSeconds(time);
        this._forEach((osc)=>osc.start(time));
    }
    /**
     * stop the oscillator
     */ _stop(time) {
        time = this.toSeconds(time);
        this._forEach((osc)=>osc.stop(time));
    }
    _restart(time) {
        this._forEach((osc)=>osc.restart(time));
    }
    /**
     * Iterate over all of the oscillators
     */ _forEach(iterator) {
        for(let i = 0; i < this._oscillators.length; i++)iterator(this._oscillators[i], i);
    }
    /**
     * The type of the oscillator
     */ get type() {
        return this._type;
    }
    set type(type) {
        this._type = type;
        this._forEach((osc)=>osc.type = type);
    }
    /**
     * The detune spread between the oscillators. If "count" is
     * set to 3 oscillators and the "spread" is set to 40,
     * the three oscillators would be detuned like this: [-20, 0, 20]
     * for a total detune spread of 40 cents.
     * @example
     * const fatOsc = new Tone.FatOscillator().toDestination().start();
     * fatOsc.spread = 70;
     */ get spread() {
        return this._spread;
    }
    set spread(spread) {
        this._spread = spread;
        if (this._oscillators.length > 1) {
            const start = -spread / 2;
            const step = spread / (this._oscillators.length - 1);
            this._forEach((osc, i)=>osc.detune.value = start + step * i);
        }
    }
    /**
     * The number of detuned oscillators. Must be an integer greater than 1.
     * @example
     * const fatOsc = new Tone.FatOscillator("C#3", "sawtooth").toDestination().start();
     * // use 4 sawtooth oscillators
     * fatOsc.count = 4;
     */ get count() {
        return this._oscillators.length;
    }
    set count(count) {
        (0, _debug.assertRange)(count, 1);
        if (this._oscillators.length !== count) {
            // dispose the previous oscillators
            this._forEach((osc)=>osc.dispose());
            this._oscillators = [];
            for(let i = 0; i < count; i++){
                const osc = new (0, _oscillator.Oscillator)({
                    context: this.context,
                    volume: -6 - count * 1.1,
                    type: this._type,
                    phase: this._phase + i / count * 360,
                    partialCount: this._partialCount,
                    onstop: i === 0 ? ()=>this.onstop(this) : (0, _interface.noOp)
                });
                if (this.type === "custom") osc.partials = this._partials;
                this.frequency.connect(osc.frequency);
                this.detune.connect(osc.detune);
                osc.detune.overridden = false;
                osc.connect(this.output);
                this._oscillators[i] = osc;
            }
            // set the spread
            this.spread = this._spread;
            if (this.state === "started") this._forEach((osc)=>osc.start());
        }
    }
    get phase() {
        return this._phase;
    }
    set phase(phase) {
        this._phase = phase;
        this._forEach((osc, i)=>osc.phase = this._phase + i / this.count * 360);
    }
    get baseType() {
        return this._oscillators[0].baseType;
    }
    set baseType(baseType) {
        this._forEach((osc)=>osc.baseType = baseType);
        this._type = this._oscillators[0].type;
    }
    get partials() {
        return this._oscillators[0].partials;
    }
    set partials(partials) {
        this._partials = partials;
        this._partialCount = this._partials.length;
        if (partials.length) {
            this._type = "custom";
            this._forEach((osc)=>osc.partials = partials);
        }
    }
    get partialCount() {
        return this._oscillators[0].partialCount;
    }
    set partialCount(partialCount) {
        this._partialCount = partialCount;
        this._forEach((osc)=>osc.partialCount = partialCount);
        this._type = this._oscillators[0].type;
    }
    asArray(length = 1024) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            return (0, _oscillatorInterface.generateWaveform)(this, length);
        });
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this.frequency.dispose();
        this.detune.dispose();
        this._forEach((osc)=>osc.dispose());
        return this;
    }
}

},{"tslib":"lRdW5","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../signal/Signal":"980ri","../Source":"eBYFz","./Oscillator":"204g3","./OscillatorInterface":"wCQWx","../../core/util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8eNKU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * PWMOscillator modulates the width of a Tone.PulseOscillator
 * at the modulationFrequency. This has the effect of continuously
 * changing the timbre of the oscillator by altering the harmonics
 * generated.
 * @example
 * return Tone.Offline(() => {
 * 	const pwm = new Tone.PWMOscillator(60, 0.3).toDestination().start();
 * }, 0.1, 1);
 * @category Source
 */ parcelHelpers.export(exports, "PWMOscillator", ()=>PWMOscillator);
var _tslib = require("tslib");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _multiply = require("../../signal/Multiply");
var _source = require("../Source");
var _oscillator = require("./Oscillator");
var _oscillatorInterface = require("./OscillatorInterface");
var _pulseOscillator = require("./PulseOscillator");
class PWMOscillator extends (0, _source.Source) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(PWMOscillator.getDefaults(), arguments, [
            "frequency",
            "modulationFrequency"
        ]));
        this.name = "PWMOscillator";
        this.sourceType = "pwm";
        /**
         * Scale the oscillator so it doesn't go silent
         * at the extreme values.
         */ this._scale = new (0, _multiply.Multiply)({
            context: this.context,
            value: 2
        });
        const options = (0, _defaults.optionsFromArguments)(PWMOscillator.getDefaults(), arguments, [
            "frequency",
            "modulationFrequency"
        ]);
        this._pulse = new (0, _pulseOscillator.PulseOscillator)({
            context: this.context,
            frequency: options.modulationFrequency
        });
        // change the pulse oscillator type
        this._pulse.carrierType = "sine";
        this.modulationFrequency = this._pulse.frequency;
        this._modulator = new (0, _oscillator.Oscillator)({
            context: this.context,
            detune: options.detune,
            frequency: options.frequency,
            onstop: ()=>this.onstop(this),
            phase: options.phase
        });
        this.frequency = this._modulator.frequency;
        this.detune = this._modulator.detune;
        // connections
        this._modulator.chain(this._scale, this._pulse.width);
        this._pulse.connect(this.output);
        (0, _interface.readOnly)(this, [
            "modulationFrequency",
            "frequency",
            "detune"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _source.Source).getDefaults(), {
            detune: 0,
            frequency: 440,
            modulationFrequency: 0.4,
            phase: 0,
            type: "pwm"
        });
    }
    /**
     * start the oscillator
     */ _start(time) {
        time = this.toSeconds(time);
        this._modulator.start(time);
        this._pulse.start(time);
    }
    /**
     * stop the oscillator
     */ _stop(time) {
        time = this.toSeconds(time);
        this._modulator.stop(time);
        this._pulse.stop(time);
    }
    /**
     * restart the oscillator
     */ _restart(time) {
        this._modulator.restart(time);
        this._pulse.restart(time);
    }
    /**
     * The type of the oscillator. Always returns "pwm".
     */ get type() {
        return "pwm";
    }
    /**
     * The baseType of the oscillator. Always returns "pwm".
     */ get baseType() {
        return "pwm";
    }
    /**
     * The partials of the waveform. Cannot set partials for this waveform type
     */ get partials() {
        return [];
    }
    /**
     * No partials for this waveform type.
     */ get partialCount() {
        return 0;
    }
    /**
     * The phase of the oscillator in degrees.
     */ get phase() {
        return this._modulator.phase;
    }
    set phase(phase) {
        this._modulator.phase = phase;
    }
    asArray(length = 1024) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            return (0, _oscillatorInterface.generateWaveform)(this, length);
        });
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this._pulse.dispose();
        this._scale.dispose();
        this._modulator.dispose();
        return this;
    }
}

},{"tslib":"lRdW5","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../signal/Multiply":"4C0VG","../Source":"eBYFz","./Oscillator":"204g3","./OscillatorInterface":"wCQWx","./PulseOscillator":"g3ood","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7bzEJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * OmniOscillator aggregates all of the oscillator types into one.
 * @example
 * return Tone.Offline(() => {
 * 	const omniOsc = new Tone.OmniOscillator("C#4", "pwm").toDestination().start();
 * }, 0.1, 1);
 * @category Source
 */ parcelHelpers.export(exports, "OmniOscillator", ()=>OmniOscillator);
var _tslib = require("tslib");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _typeCheck = require("../../core/util/TypeCheck");
var _signal = require("../../signal/Signal");
var _source = require("../Source");
var _amoscillator = require("./AMOscillator");
var _fatOscillator = require("./FatOscillator");
var _fmoscillator = require("./FMOscillator");
var _oscillator = require("./Oscillator");
var _oscillatorInterface = require("./OscillatorInterface");
var _pulseOscillator = require("./PulseOscillator");
var _pwmoscillator = require("./PWMOscillator");
const OmniOscillatorSourceMap = {
    am: (0, _amoscillator.AMOscillator),
    fat: (0, _fatOscillator.FatOscillator),
    fm: (0, _fmoscillator.FMOscillator),
    oscillator: (0, _oscillator.Oscillator),
    pulse: (0, _pulseOscillator.PulseOscillator),
    pwm: (0, _pwmoscillator.PWMOscillator)
};
class OmniOscillator extends (0, _source.Source) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(OmniOscillator.getDefaults(), arguments, [
            "frequency",
            "type"
        ]));
        this.name = "OmniOscillator";
        const options = (0, _defaults.optionsFromArguments)(OmniOscillator.getDefaults(), arguments, [
            "frequency",
            "type"
        ]);
        this.frequency = new (0, _signal.Signal)({
            context: this.context,
            units: "frequency",
            value: options.frequency
        });
        this.detune = new (0, _signal.Signal)({
            context: this.context,
            units: "cents",
            value: options.detune
        });
        (0, _interface.readOnly)(this, [
            "frequency",
            "detune"
        ]);
        // set the options
        this.set(options);
    }
    static getDefaults() {
        return Object.assign((0, _oscillator.Oscillator).getDefaults(), (0, _fmoscillator.FMOscillator).getDefaults(), (0, _amoscillator.AMOscillator).getDefaults(), (0, _fatOscillator.FatOscillator).getDefaults(), (0, _pulseOscillator.PulseOscillator).getDefaults(), (0, _pwmoscillator.PWMOscillator).getDefaults());
    }
    /**
     * start the oscillator
     */ _start(time) {
        this._oscillator.start(time);
    }
    /**
     * start the oscillator
     */ _stop(time) {
        this._oscillator.stop(time);
    }
    _restart(time) {
        this._oscillator.restart(time);
        return this;
    }
    /**
     * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or
     * prefix the basic types with "fm", "am", or "fat" to use the FMOscillator, AMOscillator or FatOscillator
     * types. The oscillator could also be set to "pwm" or "pulse". All of the parameters of the
     * oscillator's class are accessible when the oscillator is set to that type, but throws an error
     * when it's not.
     * @example
     * const omniOsc = new Tone.OmniOscillator().toDestination().start();
     * omniOsc.type = "pwm";
     * // modulationFrequency is parameter which is available
     * // only when the type is "pwm".
     * omniOsc.modulationFrequency.value = 0.5;
     */ get type() {
        let prefix = "";
        if ([
            "am",
            "fm",
            "fat"
        ].some((p)=>this._sourceType === p)) prefix = this._sourceType;
        return prefix + this._oscillator.type;
    }
    set type(type) {
        if (type.substr(0, 2) === "fm") {
            this._createNewOscillator("fm");
            this._oscillator = this._oscillator;
            this._oscillator.type = type.substr(2);
        } else if (type.substr(0, 2) === "am") {
            this._createNewOscillator("am");
            this._oscillator = this._oscillator;
            this._oscillator.type = type.substr(2);
        } else if (type.substr(0, 3) === "fat") {
            this._createNewOscillator("fat");
            this._oscillator = this._oscillator;
            this._oscillator.type = type.substr(3);
        } else if (type === "pwm") {
            this._createNewOscillator("pwm");
            this._oscillator = this._oscillator;
        } else if (type === "pulse") this._createNewOscillator("pulse");
        else {
            this._createNewOscillator("oscillator");
            this._oscillator = this._oscillator;
            this._oscillator.type = type;
        }
    }
    /**
     * The value is an empty array when the type is not "custom".
     * This is not available on "pwm" and "pulse" oscillator types.
     * See [[Oscillator.partials]]
     */ get partials() {
        return this._oscillator.partials;
    }
    set partials(partials) {
        if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm")) this._oscillator.partials = partials;
    }
    get partialCount() {
        return this._oscillator.partialCount;
    }
    set partialCount(partialCount) {
        if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm")) this._oscillator.partialCount = partialCount;
    }
    set(props) {
        // make sure the type is set first
        if (Reflect.has(props, "type") && props.type) this.type = props.type;
        // then set the rest
        super.set(props);
        return this;
    }
    /**
     * connect the oscillator to the frequency and detune signals
     */ _createNewOscillator(oscType) {
        if (oscType !== this._sourceType) {
            this._sourceType = oscType;
            const OscConstructor = OmniOscillatorSourceMap[oscType];
            // short delay to avoid clicks on the change
            const now = this.now();
            if (this._oscillator) {
                const oldOsc = this._oscillator;
                oldOsc.stop(now);
                // dispose the old one
                this.context.setTimeout(()=>oldOsc.dispose(), this.blockTime);
            }
            this._oscillator = new OscConstructor({
                context: this.context
            });
            this.frequency.connect(this._oscillator.frequency);
            this.detune.connect(this._oscillator.detune);
            this._oscillator.connect(this.output);
            this._oscillator.onstop = ()=>this.onstop(this);
            if (this.state === "started") this._oscillator.start(now);
        }
    }
    get phase() {
        return this._oscillator.phase;
    }
    set phase(phase) {
        this._oscillator.phase = phase;
    }
    /**
     * The source type of the oscillator.
     * @example
     * const omniOsc = new Tone.OmniOscillator(440, "fmsquare");
     * console.log(omniOsc.sourceType); // 'fm'
     */ get sourceType() {
        return this._sourceType;
    }
    set sourceType(sType) {
        // the basetype defaults to sine
        let baseType = "sine";
        if (this._oscillator.type !== "pwm" && this._oscillator.type !== "pulse") baseType = this._oscillator.type;
        // set the type
        if (sType === "fm") this.type = "fm" + baseType;
        else if (sType === "am") this.type = "am" + baseType;
        else if (sType === "fat") this.type = "fat" + baseType;
        else if (sType === "oscillator") this.type = baseType;
        else if (sType === "pulse") this.type = "pulse";
        else if (sType === "pwm") this.type = "pwm";
    }
    _getOscType(osc, sourceType) {
        return osc instanceof OmniOscillatorSourceMap[sourceType];
    }
    /**
     * The base type of the oscillator. See [[Oscillator.baseType]]
     * @example
     * const omniOsc = new Tone.OmniOscillator(440, "fmsquare4");
     * console.log(omniOsc.sourceType, omniOsc.baseType, omniOsc.partialCount);
     */ get baseType() {
        return this._oscillator.baseType;
    }
    set baseType(baseType) {
        if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm") && baseType !== "pulse" && baseType !== "pwm") this._oscillator.baseType = baseType;
    }
    /**
     * The width of the oscillator when sourceType === "pulse".
     * See [[PWMOscillator.width]]
     */ get width() {
        if (this._getOscType(this._oscillator, "pulse")) return this._oscillator.width;
        else return undefined;
    }
    /**
     * The number of detuned oscillators when sourceType === "fat".
     * See [[FatOscillator.count]]
     */ get count() {
        if (this._getOscType(this._oscillator, "fat")) return this._oscillator.count;
        else return undefined;
    }
    set count(count) {
        if (this._getOscType(this._oscillator, "fat") && (0, _typeCheck.isNumber)(count)) this._oscillator.count = count;
    }
    /**
     * The detune spread between the oscillators when sourceType === "fat".
     * See [[FatOscillator.count]]
     */ get spread() {
        if (this._getOscType(this._oscillator, "fat")) return this._oscillator.spread;
        else return undefined;
    }
    set spread(spread) {
        if (this._getOscType(this._oscillator, "fat") && (0, _typeCheck.isNumber)(spread)) this._oscillator.spread = spread;
    }
    /**
     * The type of the modulator oscillator. Only if the oscillator is set to "am" or "fm" types.
     * See [[AMOscillator]] or [[FMOscillator]]
     */ get modulationType() {
        if (this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) return this._oscillator.modulationType;
        else return undefined;
    }
    set modulationType(mType) {
        if ((this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) && (0, _typeCheck.isString)(mType)) this._oscillator.modulationType = mType;
    }
    /**
     * The modulation index when the sourceType === "fm"
     * See [[FMOscillator]].
     */ get modulationIndex() {
        if (this._getOscType(this._oscillator, "fm")) return this._oscillator.modulationIndex;
        else return undefined;
    }
    /**
     * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.
     * See [[AMOscillator]] or [[FMOscillator]]
     */ get harmonicity() {
        if (this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) return this._oscillator.harmonicity;
        else return undefined;
    }
    /**
     * The modulationFrequency Signal of the oscillator when sourceType === "pwm"
     * see [[PWMOscillator]]
     * @min 0.1
     * @max 5
     */ get modulationFrequency() {
        if (this._getOscType(this._oscillator, "pwm")) return this._oscillator.modulationFrequency;
        else return undefined;
    }
    asArray(length = 1024) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            return (0, _oscillatorInterface.generateWaveform)(this, length);
        });
    }
    dispose() {
        super.dispose();
        this.detune.dispose();
        this.frequency.dispose();
        this._oscillator.dispose();
        return this;
    }
}

},{"tslib":"lRdW5","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../core/util/TypeCheck":"eMH5A","../../signal/Signal":"980ri","../Source":"eBYFz","./AMOscillator":"9mU3E","./FatOscillator":"2aUtm","./FMOscillator":"3UNlG","./Oscillator":"204g3","./OscillatorInterface":"wCQWx","./PulseOscillator":"g3ood","./PWMOscillator":"8eNKU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jsBJT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * LFO stands for low frequency oscillator. LFO produces an output signal
 * which can be attached to an AudioParam or Tone.Signal
 * in order to modulate that parameter with an oscillator. The LFO can
 * also be synced to the transport to start/stop and change when the tempo changes.
 * @example
 * return Tone.Offline(() => {
 * 	const lfo = new Tone.LFO("4n", 400, 4000).start().toDestination();
 * }, 0.5, 1);
 * @category Source
 */ parcelHelpers.export(exports, "LFO", ()=>LFO);
var _gain = require("../../core/context/Gain");
var _param = require("../../core/context/Param");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _audioToGain = require("../../signal/AudioToGain");
var _scale = require("../../signal/Scale");
var _signal = require("../../signal/Signal");
var _zero = require("../../signal/Zero");
var _oscillator = require("./Oscillator");
class LFO extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(LFO.getDefaults(), arguments, [
            "frequency",
            "min",
            "max"
        ]));
        this.name = "LFO";
        /**
         * The value that the LFO outputs when it's stopped
         */ this._stoppedValue = 0;
        /**
         * A private placeholder for the units
         */ this._units = "number";
        /**
         * If the input value is converted using the [[units]]
         */ this.convert = true;
        /**
         * Private methods borrowed from Param
         */ // @ts-ignore
        this._fromType = (0, _param.Param).prototype._fromType;
        // @ts-ignore
        this._toType = (0, _param.Param).prototype._toType;
        // @ts-ignore
        this._is = (0, _param.Param).prototype._is;
        // @ts-ignore
        this._clampValue = (0, _param.Param).prototype._clampValue;
        const options = (0, _defaults.optionsFromArguments)(LFO.getDefaults(), arguments, [
            "frequency",
            "min",
            "max"
        ]);
        this._oscillator = new (0, _oscillator.Oscillator)(options);
        this.frequency = this._oscillator.frequency;
        this._amplitudeGain = new (0, _gain.Gain)({
            context: this.context,
            gain: options.amplitude,
            units: "normalRange"
        });
        this.amplitude = this._amplitudeGain.gain;
        this._stoppedSignal = new (0, _signal.Signal)({
            context: this.context,
            units: "audioRange",
            value: 0
        });
        this._zeros = new (0, _zero.Zero)({
            context: this.context
        });
        this._a2g = new (0, _audioToGain.AudioToGain)({
            context: this.context
        });
        this._scaler = this.output = new (0, _scale.Scale)({
            context: this.context,
            max: options.max,
            min: options.min
        });
        this.units = options.units;
        this.min = options.min;
        this.max = options.max;
        // connect it up
        this._oscillator.chain(this._amplitudeGain, this._a2g, this._scaler);
        this._zeros.connect(this._a2g);
        this._stoppedSignal.connect(this._a2g);
        (0, _interface.readOnly)(this, [
            "amplitude",
            "frequency"
        ]);
        this.phase = options.phase;
    }
    static getDefaults() {
        return Object.assign((0, _oscillator.Oscillator).getDefaults(), {
            amplitude: 1,
            frequency: "4n",
            max: 1,
            min: 0,
            type: "sine",
            units: "number"
        });
    }
    /**
     * Start the LFO.
     * @param time The time the LFO will start
     */ start(time) {
        time = this.toSeconds(time);
        this._stoppedSignal.setValueAtTime(0, time);
        this._oscillator.start(time);
        return this;
    }
    /**
     * Stop the LFO.
     * @param  time The time the LFO will stop
     */ stop(time) {
        time = this.toSeconds(time);
        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);
        this._oscillator.stop(time);
        return this;
    }
    /**
     * Sync the start/stop/pause to the transport
     * and the frequency to the bpm of the transport
     * @example
     * const lfo = new Tone.LFO("8n");
     * lfo.sync().start(0);
     * // the rate of the LFO will always be an eighth note, even as the tempo changes
     */ sync() {
        this._oscillator.sync();
        this._oscillator.syncFrequency();
        return this;
    }
    /**
     * unsync the LFO from transport control
     */ unsync() {
        this._oscillator.unsync();
        this._oscillator.unsyncFrequency();
        return this;
    }
    /**
     * After the oscillator waveform is updated, reset the `_stoppedSignal` value to match the updated waveform
     */ _setStoppedValue() {
        this._stoppedValue = this._oscillator.getInitialValue();
        this._stoppedSignal.value = this._stoppedValue;
    }
    /**
     * The minimum output of the LFO.
     */ get min() {
        return this._toType(this._scaler.min);
    }
    set min(min) {
        min = this._fromType(min);
        this._scaler.min = min;
    }
    /**
     * The maximum output of the LFO.
     */ get max() {
        return this._toType(this._scaler.max);
    }
    set max(max) {
        max = this._fromType(max);
        this._scaler.max = max;
    }
    /**
     * The type of the oscillator: See [[Oscillator.type]]
     */ get type() {
        return this._oscillator.type;
    }
    set type(type) {
        this._oscillator.type = type;
        this._setStoppedValue();
    }
    /**
     * The oscillator's partials array: See [[Oscillator.partials]]
     */ get partials() {
        return this._oscillator.partials;
    }
    set partials(partials) {
        this._oscillator.partials = partials;
        this._setStoppedValue();
    }
    /**
     * The phase of the LFO.
     */ get phase() {
        return this._oscillator.phase;
    }
    set phase(phase) {
        this._oscillator.phase = phase;
        this._setStoppedValue();
    }
    /**
     * The output units of the LFO.
     */ get units() {
        return this._units;
    }
    set units(val) {
        const currentMin = this.min;
        const currentMax = this.max;
        // convert the min and the max
        this._units = val;
        this.min = currentMin;
        this.max = currentMax;
    }
    /**
     * Returns the playback state of the source, either "started" or "stopped".
     */ get state() {
        return this._oscillator.state;
    }
    /**
     * @param node the destination to connect to
     * @param outputNum the optional output number
     * @param inputNum the input number
     */ connect(node, outputNum, inputNum) {
        if (node instanceof (0, _param.Param) || node instanceof (0, _signal.Signal)) {
            this.convert = node.convert;
            this.units = node.units;
        }
        (0, _signal.connectSignal)(this, node, outputNum, inputNum);
        return this;
    }
    dispose() {
        super.dispose();
        this._oscillator.dispose();
        this._stoppedSignal.dispose();
        this._zeros.dispose();
        this._scaler.dispose();
        this._a2g.dispose();
        this._amplitudeGain.dispose();
        this.amplitude.dispose();
        return this;
    }
}

},{"../../core/context/Gain":"kj68Y","../../core/context/Param":"5PVlJ","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../signal/AudioToGain":"kLli1","../../signal/Scale":"3qxrw","../../signal/Signal":"980ri","../../signal/Zero":"5ROIx","./Oscillator":"204g3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3qxrw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Performs a linear scaling on an input signal.
 * Scales a NormalRange input to between
 * outputMin and outputMax.
 *
 * @example
 * const scale = new Tone.Scale(50, 100);
 * const signal = new Tone.Signal(0.5).connect(scale);
 * // the output of scale equals 75
 * @category Signal
 */ parcelHelpers.export(exports, "Scale", ()=>Scale);
var _defaults = require("../core/util/Defaults");
var _add = require("./Add");
var _multiply = require("./Multiply");
var _signalOperator = require("./SignalOperator");
class Scale extends (0, _signalOperator.SignalOperator) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(Scale.getDefaults(), arguments, [
            "min",
            "max"
        ])));
        this.name = "Scale";
        const options = (0, _defaults.optionsFromArguments)(Scale.getDefaults(), arguments, [
            "min",
            "max"
        ]);
        this._mult = this.input = new (0, _multiply.Multiply)({
            context: this.context,
            value: options.max - options.min
        });
        this._add = this.output = new (0, _add.Add)({
            context: this.context,
            value: options.min
        });
        this._min = options.min;
        this._max = options.max;
        this.input.connect(this.output);
    }
    static getDefaults() {
        return Object.assign((0, _signalOperator.SignalOperator).getDefaults(), {
            max: 1,
            min: 0
        });
    }
    /**
     * The minimum output value. This number is output when the value input value is 0.
     */ get min() {
        return this._min;
    }
    set min(min) {
        this._min = min;
        this._setRange();
    }
    /**
     * The maximum output value. This number is output when the value input value is 1.
     */ get max() {
        return this._max;
    }
    set max(max) {
        this._max = max;
        this._setRange();
    }
    /**
     * set the values
     */ _setRange() {
        this._add.value = this._min;
        this._mult.value = this._max - this._min;
    }
    dispose() {
        super.dispose();
        this._add.dispose();
        this._mult.dispose();
        return this;
    }
}

},{"../core/util/Defaults":"a9M5s","./Add":"jeoK8","./Multiply":"4C0VG","./SignalOperator":"4XSes","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jeoK8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Add a signal and a number or two signals. When no value is
 * passed into the constructor, Tone.Add will sum input and `addend`
 * If a value is passed into the constructor, the it will be added to the input.
 *
 * @example
 * return Tone.Offline(() => {
 * 	const add = new Tone.Add(2).toDestination();
 * 	add.addend.setValueAtTime(1, 0.2);
 * 	const signal = new Tone.Signal(2);
 * 	// add a signal and a scalar
 * 	signal.connect(add);
 * 	signal.setValueAtTime(1, 0.1);
 * }, 0.5, 1);
 * @category Signal
 */ parcelHelpers.export(exports, "Add", ()=>Add);
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _gain = require("../core/context/Gain");
var _defaults = require("../core/util/Defaults");
var _signal = require("./Signal");
class Add extends (0, _signal.Signal) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(Add.getDefaults(), arguments, [
            "value"
        ])));
        this.override = false;
        this.name = "Add";
        /**
         * the summing node
         */ this._sum = new (0, _gain.Gain)({
            context: this.context
        });
        this.input = this._sum;
        this.output = this._sum;
        /**
         * The value which is added to the input signal
         */ this.addend = this._param;
        (0, _toneAudioNode.connectSeries)(this._constantSource, this._sum);
    }
    static getDefaults() {
        return Object.assign((0, _signal.Signal).getDefaults(), {
            value: 0
        });
    }
    dispose() {
        super.dispose();
        this._sum.dispose();
        return this;
    }
}

},{"../core/context/ToneAudioNode":"kZ3Kj","../core/context/Gain":"kj68Y","../core/util/Defaults":"a9M5s","./Signal":"980ri","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5ROIx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Tone.Zero outputs 0's at audio-rate. The reason this has to be
 * it's own class is that many browsers optimize out Tone.Signal
 * with a value of 0 and will not process nodes further down the graph.
 * @category Signal
 */ parcelHelpers.export(exports, "Zero", ()=>Zero);
var _gain = require("../core/context/Gain");
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _defaults = require("../core/util/Defaults");
var _signalOperator = require("./SignalOperator");
class Zero extends (0, _signalOperator.SignalOperator) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(Zero.getDefaults(), arguments)));
        this.name = "Zero";
        /**
         * The gain node which connects the constant source to the output
         */ this._gain = new (0, _gain.Gain)({
            context: this.context
        });
        /**
         * Only outputs 0
         */ this.output = this._gain;
        /**
         * no input node
         */ this.input = undefined;
        (0, _toneAudioNode.connect)(this.context.getConstant(0), this._gain);
    }
    /**
     * clean up
     */ dispose() {
        super.dispose();
        (0, _toneAudioNode.disconnect)(this.context.getConstant(0), this._gain);
        return this;
    }
}

},{"../core/context/Gain":"kj68Y","../core/context/ToneAudioNode":"kZ3Kj","../core/util/Defaults":"a9M5s","./SignalOperator":"4XSes","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4UJCG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Player is an audio file player with start, loop, and stop functions.
 * @example
 * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/gong_1.mp3").toDestination();
 * // play as soon as the buffer is loaded
 * player.autostart = true;
 * @category Source
 */ parcelHelpers.export(exports, "Player", ()=>Player);
var _tslib = require("tslib");
var _toneAudioBuffer = require("../../core/context/ToneAudioBuffer");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _typeCheck = require("../../core/util/TypeCheck");
var _source = require("../Source");
var _toneBufferSource = require("./ToneBufferSource");
var _debug = require("../../core/util/Debug");
var _decorator = require("../../core/util/Decorator");
class Player extends (0, _source.Source) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Player.getDefaults(), arguments, [
            "url",
            "onload"
        ]));
        this.name = "Player";
        /**
         * All of the active buffer source nodes
         */ this._activeSources = new Set();
        const options = (0, _defaults.optionsFromArguments)(Player.getDefaults(), arguments, [
            "url",
            "onload"
        ]);
        this._buffer = new (0, _toneAudioBuffer.ToneAudioBuffer)({
            onload: this._onload.bind(this, options.onload),
            onerror: options.onerror,
            reverse: options.reverse,
            url: options.url
        });
        this.autostart = options.autostart;
        this._loop = options.loop;
        this._loopStart = options.loopStart;
        this._loopEnd = options.loopEnd;
        this._playbackRate = options.playbackRate;
        this.fadeIn = options.fadeIn;
        this.fadeOut = options.fadeOut;
    }
    static getDefaults() {
        return Object.assign((0, _source.Source).getDefaults(), {
            autostart: false,
            fadeIn: 0,
            fadeOut: 0,
            loop: false,
            loopEnd: 0,
            loopStart: 0,
            onload: (0, _interface.noOp),
            onerror: (0, _interface.noOp),
            playbackRate: 1,
            reverse: false
        });
    }
    /**
     * Load the audio file as an audio buffer.
     * Decodes the audio asynchronously and invokes
     * the callback once the audio buffer loads.
     * Note: this does not need to be called if a url
     * was passed in to the constructor. Only use this
     * if you want to manually load a new url.
     * @param url The url of the buffer to load. Filetype support depends on the browser.
     */ load(url) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            yield this._buffer.load(url);
            this._onload();
            return this;
        });
    }
    /**
     * Internal callback when the buffer is loaded.
     */ _onload(callback = (0, _interface.noOp)) {
        callback();
        if (this.autostart) this.start();
    }
    /**
     * Internal callback when the buffer is done playing.
     */ _onSourceEnd(source) {
        // invoke the onstop function
        this.onstop(this);
        // delete the source from the active sources
        this._activeSources.delete(source);
        if (this._activeSources.size === 0 && !this._synced && this._state.getValueAtTime(this.now()) === "started") {
            // remove the 'implicitEnd' event and replace with an explicit end
            this._state.cancel(this.now());
            this._state.setStateAtTime("stopped", this.now());
        }
    }
    /**
     * Play the buffer at the given startTime. Optionally add an offset
     * and/or duration which will play the buffer from a position
     * within the buffer for the given duration.
     *
     * @param  time When the player should start.
     * @param  offset The offset from the beginning of the sample to start at.
     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)
     */ start(time, offset, duration) {
        super.start(time, offset, duration);
        return this;
    }
    /**
     * Internal start method
     */ _start(startTime, offset, duration) {
        // if it's a loop the default offset is the loopStart point
        if (this._loop) offset = (0, _defaults.defaultArg)(offset, this._loopStart);
        else // otherwise the default offset is 0
        offset = (0, _defaults.defaultArg)(offset, 0);
        // compute the values in seconds
        const computedOffset = this.toSeconds(offset);
        // compute the duration which is either the passed in duration of the buffer.duration - offset
        const origDuration = duration;
        duration = (0, _defaults.defaultArg)(duration, Math.max(this._buffer.duration - computedOffset, 0));
        let computedDuration = this.toSeconds(duration);
        // scale it by the playback rate
        computedDuration = computedDuration / this._playbackRate;
        // get the start time
        startTime = this.toSeconds(startTime);
        // make the source
        const source = new (0, _toneBufferSource.ToneBufferSource)({
            url: this._buffer,
            context: this.context,
            fadeIn: this.fadeIn,
            fadeOut: this.fadeOut,
            loop: this._loop,
            loopEnd: this._loopEnd,
            loopStart: this._loopStart,
            onended: this._onSourceEnd.bind(this),
            playbackRate: this._playbackRate
        }).connect(this.output);
        // set the looping properties
        if (!this._loop && !this._synced) {
            // cancel the previous stop
            this._state.cancel(startTime + computedDuration);
            // if it's not looping, set the state change at the end of the sample
            this._state.setStateAtTime("stopped", startTime + computedDuration, {
                implicitEnd: true
            });
        }
        // add it to the array of active sources
        this._activeSources.add(source);
        // start it
        if (this._loop && (0, _typeCheck.isUndef)(origDuration)) source.start(startTime, computedOffset);
        else // subtract the fade out time
        source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));
    }
    /**
     * Stop playback.
     */ _stop(time) {
        const computedTime = this.toSeconds(time);
        this._activeSources.forEach((source)=>source.stop(computedTime));
    }
    /**
     * Stop and then restart the player from the beginning (or offset)
     * @param  time When the player should start.
     * @param  offset The offset from the beginning of the sample to start at.
     * @param  duration How long the sample should play. If no duration is given,
     * 					it will default to the full length of the sample (minus any offset)
     */ restart(time, offset, duration) {
        super.restart(time, offset, duration);
        return this;
    }
    _restart(time, offset, duration) {
        this._stop(time);
        this._start(time, offset, duration);
    }
    /**
     * Seek to a specific time in the player's buffer. If the
     * source is no longer playing at that time, it will stop.
     * @param offset The time to seek to.
     * @param when The time for the seek event to occur.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/gurgling_theremin_1.mp3", () => {
     * 	player.start();
     * 	// seek to the offset in 1 second from now
     * 	player.seek(0.4, "+1");
     * }).toDestination();
     */ seek(offset, when) {
        const computedTime = this.toSeconds(when);
        if (this._state.getValueAtTime(computedTime) === "started") {
            const computedOffset = this.toSeconds(offset);
            // if it's currently playing, stop it
            this._stop(computedTime);
            // restart it at the given time
            this._start(computedTime, computedOffset);
        }
        return this;
    }
    /**
     * Set the loop start and end. Will only loop if loop is set to true.
     * @param loopStart The loop start time
     * @param loopEnd The loop end time
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/malevoices_aa2_F3.mp3").toDestination();
     * // loop between the given points
     * player.setLoopPoints(0.2, 0.3);
     * player.loop = true;
     * player.autostart = true;
     */ setLoopPoints(loopStart, loopEnd) {
        this.loopStart = loopStart;
        this.loopEnd = loopEnd;
        return this;
    }
    /**
     * If loop is true, the loop will start at this position.
     */ get loopStart() {
        return this._loopStart;
    }
    set loopStart(loopStart) {
        this._loopStart = loopStart;
        if (this.buffer.loaded) (0, _debug.assertRange)(this.toSeconds(loopStart), 0, this.buffer.duration);
        // get the current source
        this._activeSources.forEach((source)=>{
            source.loopStart = loopStart;
        });
    }
    /**
     * If loop is true, the loop will end at this position.
     */ get loopEnd() {
        return this._loopEnd;
    }
    set loopEnd(loopEnd) {
        this._loopEnd = loopEnd;
        if (this.buffer.loaded) (0, _debug.assertRange)(this.toSeconds(loopEnd), 0, this.buffer.duration);
        // get the current source
        this._activeSources.forEach((source)=>{
            source.loopEnd = loopEnd;
        });
    }
    /**
     * The audio buffer belonging to the player.
     */ get buffer() {
        return this._buffer;
    }
    set buffer(buffer) {
        this._buffer.set(buffer);
    }
    /**
     * If the buffer should loop once it's over.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/drum-samples/breakbeat.mp3").toDestination();
     * player.loop = true;
     * player.autostart = true;
     */ get loop() {
        return this._loop;
    }
    set loop(loop) {
        // if no change, do nothing
        if (this._loop === loop) return;
        this._loop = loop;
        // set the loop of all of the sources
        this._activeSources.forEach((source)=>{
            source.loop = loop;
        });
        if (loop) {
            // remove the next stopEvent
            const stopEvent = this._state.getNextState("stopped", this.now());
            if (stopEvent) this._state.cancel(stopEvent.time);
        }
    }
    /**
     * Normal speed is 1. The pitch will change with the playback rate.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/femalevoices_aa2_A5.mp3").toDestination();
     * // play at 1/4 speed
     * player.playbackRate = 0.25;
     * // play as soon as the buffer is loaded
     * player.autostart = true;
     */ get playbackRate() {
        return this._playbackRate;
    }
    set playbackRate(rate) {
        this._playbackRate = rate;
        const now = this.now();
        // cancel the stop event since it's at a different time now
        const stopEvent = this._state.getNextState("stopped", now);
        if (stopEvent && stopEvent.implicitEnd) {
            this._state.cancel(stopEvent.time);
            this._activeSources.forEach((source)=>source.cancelStop());
        }
        // set all the sources
        this._activeSources.forEach((source)=>{
            source.playbackRate.setValueAtTime(rate, now);
        });
    }
    /**
     * If the buffer should be reversed
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/chime_1.mp3").toDestination();
     * player.autostart = true;
     * player.reverse = true;
     */ get reverse() {
        return this._buffer.reverse;
    }
    set reverse(rev) {
        this._buffer.reverse = rev;
    }
    /**
     * If the buffer is loaded
     */ get loaded() {
        return this._buffer.loaded;
    }
    dispose() {
        super.dispose();
        // disconnect all of the players
        this._activeSources.forEach((source)=>source.dispose());
        this._activeSources.clear();
        this._buffer.dispose();
        return this;
    }
}
(0, _tslib.__decorate)([
    (0, _decorator.timeRange)(0)
], Player.prototype, "fadeIn", void 0);
(0, _tslib.__decorate)([
    (0, _decorator.timeRange)(0)
], Player.prototype, "fadeOut", void 0);

},{"tslib":"lRdW5","../../core/context/ToneAudioBuffer":"8aSPC","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../core/util/TypeCheck":"eMH5A","../Source":"eBYFz","./ToneBufferSource":"9FxEt","../../core/util/Debug":"2lOIQ","../../core/util/Decorator":"fl7ql","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fl7ql":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Assert that the number is in the given range.
 */ parcelHelpers.export(exports, "range", ()=>range);
/**
 * Convert the time to seconds and assert that the time is in between the two
 * values when being set.
 */ parcelHelpers.export(exports, "timeRange", ()=>timeRange);
var _debug = require("./Debug");
function range(min, max = Infinity) {
    const valueMap = new WeakMap();
    return function(target, propertyKey) {
        Reflect.defineProperty(target, propertyKey, {
            configurable: true,
            enumerable: true,
            get: function() {
                return valueMap.get(this);
            },
            set: function(newValue) {
                (0, _debug.assertRange)(newValue, min, max);
                valueMap.set(this, newValue);
            }
        });
    };
}
function timeRange(min, max = Infinity) {
    const valueMap = new WeakMap();
    return function(target, propertyKey) {
        Reflect.defineProperty(target, propertyKey, {
            configurable: true,
            enumerable: true,
            get: function() {
                return valueMap.get(this);
            },
            set: function(newValue) {
                (0, _debug.assertRange)(this.toSeconds(newValue), min, max);
                valueMap.set(this, newValue);
            }
        });
    };
}

},{"./Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"17BMn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Players combines multiple [[Player]] objects.
 * @category Source
 */ parcelHelpers.export(exports, "Players", ()=>Players);
var _volume = require("../../component/channel/Volume");
var _toneAudioBuffers = require("../../core/context/ToneAudioBuffers");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _debug = require("../../core/util/Debug");
var _interface = require("../../core/util/Interface");
var _source = require("../Source");
var _player = require("./Player");
class Players extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Players.getDefaults(), arguments, [
            "urls",
            "onload"
        ], "urls"));
        this.name = "Players";
        /**
         * Players has no input.
         */ this.input = undefined;
        /**
         * The container of all of the players
         */ this._players = new Map();
        const options = (0, _defaults.optionsFromArguments)(Players.getDefaults(), arguments, [
            "urls",
            "onload"
        ], "urls");
        /**
         * The output volume node
         */ this._volume = this.output = new (0, _volume.Volume)({
            context: this.context,
            volume: options.volume
        });
        this.volume = this._volume.volume;
        (0, _interface.readOnly)(this, "volume");
        this._buffers = new (0, _toneAudioBuffers.ToneAudioBuffers)({
            urls: options.urls,
            onload: options.onload,
            baseUrl: options.baseUrl,
            onerror: options.onerror
        });
        // mute initially
        this.mute = options.mute;
        this._fadeIn = options.fadeIn;
        this._fadeOut = options.fadeOut;
    }
    static getDefaults() {
        return Object.assign((0, _source.Source).getDefaults(), {
            baseUrl: "",
            fadeIn: 0,
            fadeOut: 0,
            mute: false,
            onload: (0, _interface.noOp),
            onerror: (0, _interface.noOp),
            urls: {},
            volume: 0
        });
    }
    /**
     * Mute the output.
     */ get mute() {
        return this._volume.mute;
    }
    set mute(mute) {
        this._volume.mute = mute;
    }
    /**
     * The fadeIn time of the envelope applied to the source.
     */ get fadeIn() {
        return this._fadeIn;
    }
    set fadeIn(fadeIn) {
        this._fadeIn = fadeIn;
        this._players.forEach((player)=>{
            player.fadeIn = fadeIn;
        });
    }
    /**
     * The fadeOut time of the each of the sources.
     */ get fadeOut() {
        return this._fadeOut;
    }
    set fadeOut(fadeOut) {
        this._fadeOut = fadeOut;
        this._players.forEach((player)=>{
            player.fadeOut = fadeOut;
        });
    }
    /**
     * The state of the players object. Returns "started" if any of the players are playing.
     */ get state() {
        const playing = Array.from(this._players).some(([_, player])=>player.state === "started");
        return playing ? "started" : "stopped";
    }
    /**
     * True if the buffers object has a buffer by that name.
     * @param name  The key or index of the buffer.
     */ has(name) {
        return this._buffers.has(name);
    }
    /**
     * Get a player by name.
     * @param  name  The players name as defined in the constructor object or `add` method.
     */ player(name) {
        (0, _debug.assert)(this.has(name), `No Player with the name ${name} exists on this object`);
        if (!this._players.has(name)) {
            const player = new (0, _player.Player)({
                context: this.context,
                fadeIn: this._fadeIn,
                fadeOut: this._fadeOut,
                url: this._buffers.get(name)
            }).connect(this.output);
            this._players.set(name, player);
        }
        return this._players.get(name);
    }
    /**
     * If all the buffers are loaded or not
     */ get loaded() {
        return this._buffers.loaded;
    }
    /**
     * Add a player by name and url to the Players
     * @param  name A unique name to give the player
     * @param  url  Either the url of the bufer or a buffer which will be added with the given name.
     * @param callback  The callback to invoke when the url is loaded.
     */ add(name, url, callback) {
        (0, _debug.assert)(!this._buffers.has(name), "A buffer with that name already exists on this object");
        this._buffers.add(name, url, callback);
        return this;
    }
    /**
     * Stop all of the players at the given time
     * @param time The time to stop all of the players.
     */ stopAll(time) {
        this._players.forEach((player)=>player.stop(time));
        return this;
    }
    dispose() {
        super.dispose();
        this._volume.dispose();
        this.volume.dispose();
        this._players.forEach((player)=>player.dispose());
        this._buffers.dispose();
        return this;
    }
}

},{"../../component/channel/Volume":"7Ooeo","../../core/context/ToneAudioBuffers":"8zO1I","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/util/Debug":"2lOIQ","../../core/util/Interface":"hVOjA","../Source":"eBYFz","./Player":"4UJCG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"opCGx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).
 * Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the
 * amount of time each small chunk of audio is played for and the overlap is the
 * amount of crossfading transition time between successive grains.
 * @category Source
 */ parcelHelpers.export(exports, "GrainPlayer", ()=>GrainPlayer);
var _source = require("../Source");
var _interface = require("../../core/util/Interface");
var _toneAudioBuffer = require("../../core/context/ToneAudioBuffer");
var _defaults = require("../../core/util/Defaults");
var _clock = require("../../core/clock/Clock");
var _toneBufferSource = require("./ToneBufferSource");
var _conversions = require("../../core/type/Conversions");
var _debug = require("../../core/util/Debug");
class GrainPlayer extends (0, _source.Source) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(GrainPlayer.getDefaults(), arguments, [
            "url",
            "onload"
        ]));
        this.name = "GrainPlayer";
        /**
         * Internal loopStart value
         */ this._loopStart = 0;
        /**
         * Internal loopStart value
         */ this._loopEnd = 0;
        /**
         * All of the currently playing BufferSources
         */ this._activeSources = [];
        const options = (0, _defaults.optionsFromArguments)(GrainPlayer.getDefaults(), arguments, [
            "url",
            "onload"
        ]);
        this.buffer = new (0, _toneAudioBuffer.ToneAudioBuffer)({
            onload: options.onload,
            onerror: options.onerror,
            reverse: options.reverse,
            url: options.url
        });
        this._clock = new (0, _clock.Clock)({
            context: this.context,
            callback: this._tick.bind(this),
            frequency: 1 / options.grainSize
        });
        this._playbackRate = options.playbackRate;
        this._grainSize = options.grainSize;
        this._overlap = options.overlap;
        this.detune = options.detune;
        // setup
        this.overlap = options.overlap;
        this.loop = options.loop;
        this.playbackRate = options.playbackRate;
        this.grainSize = options.grainSize;
        this.loopStart = options.loopStart;
        this.loopEnd = options.loopEnd;
        this.reverse = options.reverse;
        this._clock.on("stop", this._onstop.bind(this));
    }
    static getDefaults() {
        return Object.assign((0, _source.Source).getDefaults(), {
            onload: (0, _interface.noOp),
            onerror: (0, _interface.noOp),
            overlap: 0.1,
            grainSize: 0.2,
            playbackRate: 1,
            detune: 0,
            loop: false,
            loopStart: 0,
            loopEnd: 0,
            reverse: false
        });
    }
    /**
     * Internal start method
     */ _start(time, offset, duration) {
        offset = (0, _defaults.defaultArg)(offset, 0);
        offset = this.toSeconds(offset);
        time = this.toSeconds(time);
        const grainSize = 1 / this._clock.frequency.getValueAtTime(time);
        this._clock.start(time, offset / grainSize);
        if (duration) this.stop(time + this.toSeconds(duration));
    }
    /**
     * Stop and then restart the player from the beginning (or offset)
     * @param  time When the player should start.
     * @param  offset The offset from the beginning of the sample to start at.
     * @param  duration How long the sample should play. If no duration is given,
     * 					it will default to the full length of the sample (minus any offset)
     */ restart(time, offset, duration) {
        super.restart(time, offset, duration);
        return this;
    }
    _restart(time, offset, duration) {
        this._stop(time);
        this._start(time, offset, duration);
    }
    /**
     * Internal stop method
     */ _stop(time) {
        this._clock.stop(time);
    }
    /**
     * Invoked when the clock is stopped
     */ _onstop(time) {
        // stop the players
        this._activeSources.forEach((source)=>{
            source.fadeOut = 0;
            source.stop(time);
        });
        this.onstop(this);
    }
    /**
     * Invoked on each clock tick. scheduled a new grain at this time.
     */ _tick(time) {
        // check if it should stop looping
        const ticks = this._clock.getTicksAtTime(time);
        const offset = ticks * this._grainSize;
        this.log("offset", offset);
        if (!this.loop && offset > this.buffer.duration) {
            this.stop(time);
            return;
        }
        // at the beginning of the file, the fade in should be 0
        const fadeIn = offset < this._overlap ? 0 : this._overlap;
        // create a buffer source
        const source = new (0, _toneBufferSource.ToneBufferSource)({
            context: this.context,
            url: this.buffer,
            fadeIn: fadeIn,
            fadeOut: this._overlap,
            loop: this.loop,
            loopStart: this._loopStart,
            loopEnd: this._loopEnd,
            // compute the playbackRate based on the detune
            playbackRate: (0, _conversions.intervalToFrequencyRatio)(this.detune / 100)
        }).connect(this.output);
        source.start(time, this._grainSize * ticks);
        source.stop(time + this._grainSize / this.playbackRate);
        // add it to the active sources
        this._activeSources.push(source);
        // remove it when it's done
        source.onended = ()=>{
            const index = this._activeSources.indexOf(source);
            if (index !== -1) this._activeSources.splice(index, 1);
        };
    }
    /**
     * The playback rate of the sample
     */ get playbackRate() {
        return this._playbackRate;
    }
    set playbackRate(rate) {
        (0, _debug.assertRange)(rate, 0.001);
        this._playbackRate = rate;
        this.grainSize = this._grainSize;
    }
    /**
     * The loop start time.
     */ get loopStart() {
        return this._loopStart;
    }
    set loopStart(time) {
        if (this.buffer.loaded) (0, _debug.assertRange)(this.toSeconds(time), 0, this.buffer.duration);
        this._loopStart = this.toSeconds(time);
    }
    /**
     * The loop end time.
     */ get loopEnd() {
        return this._loopEnd;
    }
    set loopEnd(time) {
        if (this.buffer.loaded) (0, _debug.assertRange)(this.toSeconds(time), 0, this.buffer.duration);
        this._loopEnd = this.toSeconds(time);
    }
    /**
     * The direction the buffer should play in
     */ get reverse() {
        return this.buffer.reverse;
    }
    set reverse(rev) {
        this.buffer.reverse = rev;
    }
    /**
     * The size of each chunk of audio that the
     * buffer is chopped into and played back at.
     */ get grainSize() {
        return this._grainSize;
    }
    set grainSize(size) {
        this._grainSize = this.toSeconds(size);
        this._clock.frequency.setValueAtTime(this._playbackRate / this._grainSize, this.now());
    }
    /**
     * The duration of the cross-fade between successive grains.
     */ get overlap() {
        return this._overlap;
    }
    set overlap(time) {
        const computedTime = this.toSeconds(time);
        (0, _debug.assertRange)(computedTime, 0);
        this._overlap = computedTime;
    }
    /**
     * If all the buffer is loaded
     */ get loaded() {
        return this.buffer.loaded;
    }
    dispose() {
        super.dispose();
        this.buffer.dispose();
        this._clock.dispose();
        this._activeSources.forEach((source)=>source.dispose());
        return this;
    }
}

},{"../Source":"eBYFz","../../core/util/Interface":"hVOjA","../../core/context/ToneAudioBuffer":"8aSPC","../../core/util/Defaults":"a9M5s","../../core/clock/Clock":"52dVv","./ToneBufferSource":"9FxEt","../../core/type/Conversions":"iww1u","../../core/util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kDXus":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _add = require("./Add");
parcelHelpers.exportAll(_add, exports);
var _abs = require("./Abs");
parcelHelpers.exportAll(_abs, exports);
var _audioToGain = require("./AudioToGain");
parcelHelpers.exportAll(_audioToGain, exports);
var _gainToAudio = require("./GainToAudio");
parcelHelpers.exportAll(_gainToAudio, exports);
var _greaterThan = require("./GreaterThan");
parcelHelpers.exportAll(_greaterThan, exports);
var _greaterThanZero = require("./GreaterThanZero");
parcelHelpers.exportAll(_greaterThanZero, exports);
var _multiply = require("./Multiply");
parcelHelpers.exportAll(_multiply, exports);
var _negate = require("./Negate");
parcelHelpers.exportAll(_negate, exports);
var _pow = require("./Pow");
parcelHelpers.exportAll(_pow, exports);
var _signal = require("./Signal");
parcelHelpers.exportAll(_signal, exports);
var _scale = require("./Scale");
parcelHelpers.exportAll(_scale, exports);
var _scaleExp = require("./ScaleExp");
parcelHelpers.exportAll(_scaleExp, exports);
var _subtract = require("./Subtract");
parcelHelpers.exportAll(_subtract, exports);
var _syncedSignal = require("./SyncedSignal");
parcelHelpers.exportAll(_syncedSignal, exports);
var _waveShaper = require("./WaveShaper");
parcelHelpers.exportAll(_waveShaper, exports);
var _zero = require("./Zero");
parcelHelpers.exportAll(_zero, exports);

},{"./Add":"jeoK8","./Abs":"91cHq","./AudioToGain":"kLli1","./GainToAudio":"g3Bng","./GreaterThan":"gPdXT","./GreaterThanZero":"hu7tO","./Multiply":"4C0VG","./Negate":"9nMgn","./Pow":"9vO86","./Signal":"980ri","./Scale":"3qxrw","./ScaleExp":"aFAXE","./Subtract":"cVmeJ","./SyncedSignal":"9n5vu","./WaveShaper":"k4nzV","./Zero":"5ROIx","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"91cHq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Return the absolute value of an incoming signal.
 *
 * @example
 * return Tone.Offline(() => {
 * 	const abs = new Tone.Abs().toDestination();
 * 	const signal = new Tone.Signal(1);
 * 	signal.rampTo(-1, 0.5);
 * 	signal.connect(abs);
 * }, 0.5, 1);
 * @category Signal
 */ parcelHelpers.export(exports, "Abs", ()=>Abs);
var _signalOperator = require("./SignalOperator");
var _waveShaper = require("./WaveShaper");
class Abs extends (0, _signalOperator.SignalOperator) {
    constructor(){
        super(...arguments);
        this.name = "Abs";
        /**
         * The node which converts the audio ranges
         */ this._abs = new (0, _waveShaper.WaveShaper)({
            context: this.context,
            mapping: (val)=>{
                if (Math.abs(val) < 0.001) return 0;
                else return Math.abs(val);
            }
        });
        /**
         * The AudioRange input [-1, 1]
         */ this.input = this._abs;
        /**
         * The output range [0, 1]
         */ this.output = this._abs;
    }
    /**
     * clean up
     */ dispose() {
        super.dispose();
        this._abs.dispose();
        return this;
    }
}

},{"./SignalOperator":"4XSes","./WaveShaper":"k4nzV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g3Bng":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].
 * See [[AudioToGain]].
 * @category Signal
 */ parcelHelpers.export(exports, "GainToAudio", ()=>GainToAudio);
var _signalOperator = require("./SignalOperator");
var _waveShaper = require("./WaveShaper");
class GainToAudio extends (0, _signalOperator.SignalOperator) {
    constructor(){
        super(...arguments);
        this.name = "GainToAudio";
        /**
         * The node which converts the audio ranges
         */ this._norm = new (0, _waveShaper.WaveShaper)({
            context: this.context,
            mapping: (x)=>Math.abs(x) * 2 - 1
        });
        /**
         * The NormalRange input [0, 1]
         */ this.input = this._norm;
        /**
         * The AudioRange output [-1, 1]
         */ this.output = this._norm;
    }
    /**
     * clean up
     */ dispose() {
        super.dispose();
        this._norm.dispose();
        return this;
    }
}

},{"./SignalOperator":"4XSes","./WaveShaper":"k4nzV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gPdXT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Output 1 if the signal is greater than the value, otherwise outputs 0.
 * can compare two signals or a signal and a number.
 *
 * @example
 * return Tone.Offline(() => {
 * 	const gt = new Tone.GreaterThan(2).toDestination();
 * 	const sig = new Tone.Signal(4).connect(gt);
 * }, 0.1, 1);
 * @category Signal
 */ parcelHelpers.export(exports, "GreaterThan", ()=>GreaterThan);
var _defaults = require("../core/util/Defaults");
var _subtract = require("./Subtract");
var _signal = require("./Signal");
var _greaterThanZero = require("./GreaterThanZero");
var _interface = require("../core/util/Interface");
class GreaterThan extends (0, _signal.Signal) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(GreaterThan.getDefaults(), arguments, [
            "value"
        ])));
        this.name = "GreaterThan";
        this.override = false;
        const options = (0, _defaults.optionsFromArguments)(GreaterThan.getDefaults(), arguments, [
            "value"
        ]);
        this._subtract = this.input = new (0, _subtract.Subtract)({
            context: this.context,
            value: options.value
        });
        this._gtz = this.output = new (0, _greaterThanZero.GreaterThanZero)({
            context: this.context
        });
        this.comparator = this._param = this._subtract.subtrahend;
        (0, _interface.readOnly)(this, "comparator");
        // connect
        this._subtract.connect(this._gtz);
    }
    static getDefaults() {
        return Object.assign((0, _signal.Signal).getDefaults(), {
            value: 0
        });
    }
    dispose() {
        super.dispose();
        this._gtz.dispose();
        this._subtract.dispose();
        this.comparator.dispose();
        return this;
    }
}

},{"../core/util/Defaults":"a9M5s","./Subtract":"cVmeJ","./Signal":"980ri","./GreaterThanZero":"hu7tO","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cVmeJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Subtract the signal connected to the input is subtracted from the signal connected
 * The subtrahend.
 *
 * @example
 * // subtract a scalar from a signal
 * const sub = new Tone.Subtract(1);
 * const sig = new Tone.Signal(4).connect(sub);
 * // the output of sub is 3.
 * @example
 * // subtract two signals
 * const sub = new Tone.Subtract();
 * const sigA = new Tone.Signal(10);
 * const sigB = new Tone.Signal(2.5);
 * sigA.connect(sub);
 * sigB.connect(sub.subtrahend);
 * // output of sub is 7.5
 * @category Signal
 */ parcelHelpers.export(exports, "Subtract", ()=>Subtract);
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _gain = require("../core/context/Gain");
var _defaults = require("../core/util/Defaults");
var _negate = require("../signal/Negate");
var _signal = require("../signal/Signal");
class Subtract extends (0, _signal.Signal) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(Subtract.getDefaults(), arguments, [
            "value"
        ])));
        this.override = false;
        this.name = "Subtract";
        /**
         * the summing node
         */ this._sum = new (0, _gain.Gain)({
            context: this.context
        });
        this.input = this._sum;
        this.output = this._sum;
        /**
         * Negate the input of the second input before connecting it to the summing node.
         */ this._neg = new (0, _negate.Negate)({
            context: this.context
        });
        /**
         * The value which is subtracted from the main signal
         */ this.subtrahend = this._param;
        (0, _toneAudioNode.connectSeries)(this._constantSource, this._neg, this._sum);
    }
    static getDefaults() {
        return Object.assign((0, _signal.Signal).getDefaults(), {
            value: 0
        });
    }
    dispose() {
        super.dispose();
        this._neg.dispose();
        this._sum.dispose();
        return this;
    }
}

},{"../core/context/ToneAudioNode":"kZ3Kj","../core/context/Gain":"kj68Y","../core/util/Defaults":"a9M5s","../signal/Negate":"9nMgn","../signal/Signal":"980ri","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9nMgn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Negate the incoming signal. i.e. an input signal of 10 will output -10
 *
 * @example
 * const neg = new Tone.Negate();
 * const sig = new Tone.Signal(-2).connect(neg);
 * // output of neg is positive 2.
 * @category Signal
 */ parcelHelpers.export(exports, "Negate", ()=>Negate);
var _multiply = require("./Multiply");
var _signalOperator = require("./SignalOperator");
class Negate extends (0, _signalOperator.SignalOperator) {
    constructor(){
        super(...arguments);
        this.name = "Negate";
        /**
         * negation is done by multiplying by -1
         */ this._multiply = new (0, _multiply.Multiply)({
            context: this.context,
            value: -1
        });
        /**
         * The input and output are equal to the multiply node
         */ this.input = this._multiply;
        this.output = this._multiply;
    }
    /**
     * clean up
     * @returns {Negate} this
     */ dispose() {
        super.dispose();
        this._multiply.dispose();
        return this;
    }
}

},{"./Multiply":"4C0VG","./SignalOperator":"4XSes","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hu7tO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * GreaterThanZero outputs 1 when the input is strictly greater than zero
 * @example
 * return Tone.Offline(() => {
 * 	const gt0 = new Tone.GreaterThanZero().toDestination();
 * 	const sig = new Tone.Signal(0.5).connect(gt0);
 * 	sig.setValueAtTime(-1, 0.05);
 * }, 0.1, 1);
 * @category Signal
 */ parcelHelpers.export(exports, "GreaterThanZero", ()=>GreaterThanZero);
var _signalOperator = require("./SignalOperator");
var _multiply = require("./Multiply");
var _waveShaper = require("./WaveShaper");
var _defaults = require("../core/util/Defaults");
class GreaterThanZero extends (0, _signalOperator.SignalOperator) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(GreaterThanZero.getDefaults(), arguments)));
        this.name = "GreaterThanZero";
        this._thresh = this.output = new (0, _waveShaper.WaveShaper)({
            context: this.context,
            length: 127,
            mapping: (val)=>{
                if (val <= 0) return 0;
                else return 1;
            }
        });
        this._scale = this.input = new (0, _multiply.Multiply)({
            context: this.context,
            value: 10000
        });
        // connections
        this._scale.connect(this._thresh);
    }
    dispose() {
        super.dispose();
        this._scale.dispose();
        this._thresh.dispose();
        return this;
    }
}

},{"./SignalOperator":"4XSes","./Multiply":"4C0VG","./WaveShaper":"k4nzV","../core/util/Defaults":"a9M5s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9vO86":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Pow applies an exponent to the incoming signal. The incoming signal must be AudioRange [-1, 1]
 *
 * @example
 * const pow = new Tone.Pow(2);
 * const sig = new Tone.Signal(0.5).connect(pow);
 * // output of pow is 0.25.
 * @category Signal
 */ parcelHelpers.export(exports, "Pow", ()=>Pow);
var _waveShaper = require("./WaveShaper");
var _defaults = require("../core/util/Defaults");
var _signalOperator = require("./SignalOperator");
class Pow extends (0, _signalOperator.SignalOperator) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(Pow.getDefaults(), arguments, [
            "value"
        ])));
        this.name = "Pow";
        const options = (0, _defaults.optionsFromArguments)(Pow.getDefaults(), arguments, [
            "value"
        ]);
        this._exponentScaler = this.input = this.output = new (0, _waveShaper.WaveShaper)({
            context: this.context,
            mapping: this._expFunc(options.value),
            length: 8192
        });
        this._exponent = options.value;
    }
    static getDefaults() {
        return Object.assign((0, _signalOperator.SignalOperator).getDefaults(), {
            value: 1
        });
    }
    /**
     * the function which maps the waveshaper
     * @param exponent exponent value
     */ _expFunc(exponent) {
        return (val)=>{
            return Math.pow(Math.abs(val), exponent);
        };
    }
    /**
     * The value of the exponent.
     */ get value() {
        return this._exponent;
    }
    set value(exponent) {
        this._exponent = exponent;
        this._exponentScaler.setMap(this._expFunc(this._exponent));
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this._exponentScaler.dispose();
        return this;
    }
}

},{"./WaveShaper":"k4nzV","../core/util/Defaults":"a9M5s","./SignalOperator":"4XSes","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aFAXE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Performs an exponential scaling on an input signal.
 * Scales a NormalRange value [0,1] exponentially
 * to the output range of outputMin to outputMax.
 * @example
 * const scaleExp = new Tone.ScaleExp(0, 100, 2);
 * const signal = new Tone.Signal(0.5).connect(scaleExp);
 * @category Signal
 */ parcelHelpers.export(exports, "ScaleExp", ()=>ScaleExp);
var _scale = require("./Scale");
var _defaults = require("../core/util/Defaults");
var _pow = require("./Pow");
class ScaleExp extends (0, _scale.Scale) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(ScaleExp.getDefaults(), arguments, [
            "min",
            "max",
            "exponent"
        ])));
        this.name = "ScaleExp";
        const options = (0, _defaults.optionsFromArguments)(ScaleExp.getDefaults(), arguments, [
            "min",
            "max",
            "exponent"
        ]);
        this.input = this._exp = new (0, _pow.Pow)({
            context: this.context,
            value: options.exponent
        });
        this._exp.connect(this._mult);
    }
    static getDefaults() {
        return Object.assign((0, _scale.Scale).getDefaults(), {
            exponent: 1
        });
    }
    /**
     * Instead of interpolating linearly between the [[min]] and
     * [[max]] values, setting the exponent will interpolate between
     * the two values with an exponential curve.
     */ get exponent() {
        return this._exp.value;
    }
    set exponent(exp) {
        this._exp.value = exp;
    }
    dispose() {
        super.dispose();
        this._exp.dispose();
        return this;
    }
}

},{"./Scale":"3qxrw","../core/util/Defaults":"a9M5s","./Pow":"9vO86","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9n5vu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Adds the ability to synchronize the signal to the [[Transport]]
 */ parcelHelpers.export(exports, "SyncedSignal", ()=>SyncedSignal);
var _signal = require("./Signal");
var _defaults = require("../core/util/Defaults");
var _transportTime = require("../core/type/TransportTime");
var _toneConstantSource = require("./ToneConstantSource");
class SyncedSignal extends (0, _signal.Signal) {
    constructor(){
        super((0, _defaults.optionsFromArguments)((0, _signal.Signal).getDefaults(), arguments, [
            "value",
            "units"
        ]));
        this.name = "SyncedSignal";
        /**
         * Don't override when something is connected to the input
         */ this.override = false;
        const options = (0, _defaults.optionsFromArguments)((0, _signal.Signal).getDefaults(), arguments, [
            "value",
            "units"
        ]);
        this._lastVal = options.value;
        this._synced = this.context.transport.scheduleRepeat(this._onTick.bind(this), "1i");
        this._syncedCallback = this._anchorValue.bind(this);
        this.context.transport.on("start", this._syncedCallback);
        this.context.transport.on("pause", this._syncedCallback);
        this.context.transport.on("stop", this._syncedCallback);
        // disconnect the constant source from the output and replace it with another one
        this._constantSource.disconnect();
        this._constantSource.stop(0);
        // create a new one
        this._constantSource = this.output = new (0, _toneConstantSource.ToneConstantSource)({
            context: this.context,
            offset: options.value,
            units: options.units
        }).start(0);
        this.setValueAtTime(options.value, 0);
    }
    /**
     * Callback which is invoked every tick.
     */ _onTick(time) {
        const val = super.getValueAtTime(this.context.transport.seconds);
        // approximate ramp curves with linear ramps
        if (this._lastVal !== val) {
            this._lastVal = val;
            this._constantSource.offset.setValueAtTime(val, time);
        }
    }
    /**
     * Anchor the value at the start and stop of the Transport
     */ _anchorValue(time) {
        const val = super.getValueAtTime(this.context.transport.seconds);
        this._lastVal = val;
        this._constantSource.offset.cancelAndHoldAtTime(time);
        this._constantSource.offset.setValueAtTime(val, time);
    }
    getValueAtTime(time) {
        const computedTime = new (0, _transportTime.TransportTimeClass)(this.context, time).toSeconds();
        return super.getValueAtTime(computedTime);
    }
    setValueAtTime(value, time) {
        const computedTime = new (0, _transportTime.TransportTimeClass)(this.context, time).toSeconds();
        super.setValueAtTime(value, computedTime);
        return this;
    }
    linearRampToValueAtTime(value, time) {
        const computedTime = new (0, _transportTime.TransportTimeClass)(this.context, time).toSeconds();
        super.linearRampToValueAtTime(value, computedTime);
        return this;
    }
    exponentialRampToValueAtTime(value, time) {
        const computedTime = new (0, _transportTime.TransportTimeClass)(this.context, time).toSeconds();
        super.exponentialRampToValueAtTime(value, computedTime);
        return this;
    }
    setTargetAtTime(value, startTime, timeConstant) {
        const computedTime = new (0, _transportTime.TransportTimeClass)(this.context, startTime).toSeconds();
        super.setTargetAtTime(value, computedTime, timeConstant);
        return this;
    }
    cancelScheduledValues(startTime) {
        const computedTime = new (0, _transportTime.TransportTimeClass)(this.context, startTime).toSeconds();
        super.cancelScheduledValues(computedTime);
        return this;
    }
    setValueCurveAtTime(values, startTime, duration, scaling) {
        const computedTime = new (0, _transportTime.TransportTimeClass)(this.context, startTime).toSeconds();
        duration = this.toSeconds(duration);
        super.setValueCurveAtTime(values, computedTime, duration, scaling);
        return this;
    }
    cancelAndHoldAtTime(time) {
        const computedTime = new (0, _transportTime.TransportTimeClass)(this.context, time).toSeconds();
        super.cancelAndHoldAtTime(computedTime);
        return this;
    }
    setRampPoint(time) {
        const computedTime = new (0, _transportTime.TransportTimeClass)(this.context, time).toSeconds();
        super.setRampPoint(computedTime);
        return this;
    }
    exponentialRampTo(value, rampTime, startTime) {
        const computedTime = new (0, _transportTime.TransportTimeClass)(this.context, startTime).toSeconds();
        super.exponentialRampTo(value, rampTime, computedTime);
        return this;
    }
    linearRampTo(value, rampTime, startTime) {
        const computedTime = new (0, _transportTime.TransportTimeClass)(this.context, startTime).toSeconds();
        super.linearRampTo(value, rampTime, computedTime);
        return this;
    }
    targetRampTo(value, rampTime, startTime) {
        const computedTime = new (0, _transportTime.TransportTimeClass)(this.context, startTime).toSeconds();
        super.targetRampTo(value, rampTime, computedTime);
        return this;
    }
    dispose() {
        super.dispose();
        this.context.transport.clear(this._synced);
        this.context.transport.off("start", this._syncedCallback);
        this.context.transport.off("pause", this._syncedCallback);
        this.context.transport.off("stop", this._syncedCallback);
        this._constantSource.dispose();
        return this;
    }
}

},{"./Signal":"980ri","../core/util/Defaults":"a9M5s","../core/type/TransportTime":"a6yW0","./ToneConstantSource":"aU7Ju","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ed4wq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _amsynth = require("./AMSynth");
parcelHelpers.exportAll(_amsynth, exports);
var _duoSynth = require("./DuoSynth");
parcelHelpers.exportAll(_duoSynth, exports);
var _fmsynth = require("./FMSynth");
parcelHelpers.exportAll(_fmsynth, exports);
var _metalSynth = require("./MetalSynth");
parcelHelpers.exportAll(_metalSynth, exports);
var _membraneSynth = require("./MembraneSynth");
parcelHelpers.exportAll(_membraneSynth, exports);
var _monoSynth = require("./MonoSynth");
parcelHelpers.exportAll(_monoSynth, exports);
var _noiseSynth = require("./NoiseSynth");
parcelHelpers.exportAll(_noiseSynth, exports);
var _pluckSynth = require("./PluckSynth");
parcelHelpers.exportAll(_pluckSynth, exports);
var _polySynth = require("./PolySynth");
parcelHelpers.exportAll(_polySynth, exports);
var _sampler = require("./Sampler");
parcelHelpers.exportAll(_sampler, exports);
var _synth = require("./Synth");
parcelHelpers.exportAll(_synth, exports);

},{"./AMSynth":"jPnoh","./DuoSynth":"batNh","./FMSynth":"9ms3z","./MetalSynth":"itJ1n","./MembraneSynth":"gVrZJ","./MonoSynth":"jT7JE","./NoiseSynth":"hhi7P","./PluckSynth":"4DPlg","./PolySynth":"6hx2H","./Sampler":"dBIID","./Synth":"kwmGi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jPnoh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * AMSynth uses the output of one Tone.Synth to modulate the
 * amplitude of another Tone.Synth. The harmonicity (the ratio between
 * the two signals) affects the timbre of the output signal greatly.
 * Read more about Amplitude Modulation Synthesis on
 * [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).
 *
 * @example
 * const synth = new Tone.AMSynth().toDestination();
 * synth.triggerAttackRelease("C4", "4n");
 *
 * @category Instrument
 */ parcelHelpers.export(exports, "AMSynth", ()=>AMSynth);
var _audioToGain = require("../signal/AudioToGain");
var _defaults = require("../core/util/Defaults");
var _modulationSynth = require("./ModulationSynth");
class AMSynth extends (0, _modulationSynth.ModulationSynth) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(AMSynth.getDefaults(), arguments));
        this.name = "AMSynth";
        this._modulationScale = new (0, _audioToGain.AudioToGain)({
            context: this.context
        });
        // control the two voices frequency
        this.frequency.connect(this._carrier.frequency);
        this.frequency.chain(this.harmonicity, this._modulator.frequency);
        this.detune.fan(this._carrier.detune, this._modulator.detune);
        this._modulator.chain(this._modulationScale, this._modulationNode.gain);
        this._carrier.chain(this._modulationNode, this.output);
    }
    dispose() {
        super.dispose();
        this._modulationScale.dispose();
        return this;
    }
}

},{"../signal/AudioToGain":"kLli1","../core/util/Defaults":"a9M5s","./ModulationSynth":"3DhsT","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3DhsT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Base class for both AM and FM synths
 */ parcelHelpers.export(exports, "ModulationSynth", ()=>ModulationSynth);
var _signal = require("../signal/Signal");
var _multiply = require("../signal/Multiply");
var _gain = require("../core/context/Gain");
var _envelope = require("../component/envelope/Envelope");
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _monophonic = require("./Monophonic");
var _omniOscillator = require("../source/oscillator/OmniOscillator");
var _source = require("../source/Source");
var _synth = require("./Synth");
var _interface = require("../core/util/Interface");
var _defaults = require("../core/util/Defaults");
class ModulationSynth extends (0, _monophonic.Monophonic) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(ModulationSynth.getDefaults(), arguments));
        this.name = "ModulationSynth";
        const options = (0, _defaults.optionsFromArguments)(ModulationSynth.getDefaults(), arguments);
        this._carrier = new (0, _synth.Synth)({
            context: this.context,
            oscillator: options.oscillator,
            envelope: options.envelope,
            onsilence: ()=>this.onsilence(this),
            volume: -10
        });
        this._modulator = new (0, _synth.Synth)({
            context: this.context,
            oscillator: options.modulation,
            envelope: options.modulationEnvelope,
            volume: -10
        });
        this.oscillator = this._carrier.oscillator;
        this.envelope = this._carrier.envelope;
        this.modulation = this._modulator.oscillator;
        this.modulationEnvelope = this._modulator.envelope;
        this.frequency = new (0, _signal.Signal)({
            context: this.context,
            units: "frequency"
        });
        this.detune = new (0, _signal.Signal)({
            context: this.context,
            value: options.detune,
            units: "cents"
        });
        this.harmonicity = new (0, _multiply.Multiply)({
            context: this.context,
            value: options.harmonicity,
            minValue: 0
        });
        this._modulationNode = new (0, _gain.Gain)({
            context: this.context,
            gain: 0
        });
        (0, _interface.readOnly)(this, [
            "frequency",
            "harmonicity",
            "oscillator",
            "envelope",
            "modulation",
            "modulationEnvelope",
            "detune"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _monophonic.Monophonic).getDefaults(), {
            harmonicity: 3,
            oscillator: Object.assign((0, _defaults.omitFromObject)((0, _omniOscillator.OmniOscillator).getDefaults(), [
                ...Object.keys((0, _source.Source).getDefaults()),
                "frequency",
                "detune"
            ]), {
                type: "sine"
            }),
            envelope: Object.assign((0, _defaults.omitFromObject)((0, _envelope.Envelope).getDefaults(), Object.keys((0, _toneAudioNode.ToneAudioNode).getDefaults())), {
                attack: 0.01,
                decay: 0.01,
                sustain: 1,
                release: 0.5
            }),
            modulation: Object.assign((0, _defaults.omitFromObject)((0, _omniOscillator.OmniOscillator).getDefaults(), [
                ...Object.keys((0, _source.Source).getDefaults()),
                "frequency",
                "detune"
            ]), {
                type: "square"
            }),
            modulationEnvelope: Object.assign((0, _defaults.omitFromObject)((0, _envelope.Envelope).getDefaults(), Object.keys((0, _toneAudioNode.ToneAudioNode).getDefaults())), {
                attack: 0.5,
                decay: 0.0,
                sustain: 1,
                release: 0.5
            })
        });
    }
    /**
     * Trigger the attack portion of the note
     */ _triggerEnvelopeAttack(time, velocity) {
        // @ts-ignore
        this._carrier._triggerEnvelopeAttack(time, velocity);
        // @ts-ignore
        this._modulator._triggerEnvelopeAttack(time, velocity);
    }
    /**
     * Trigger the release portion of the note
     */ _triggerEnvelopeRelease(time) {
        // @ts-ignore
        this._carrier._triggerEnvelopeRelease(time);
        // @ts-ignore
        this._modulator._triggerEnvelopeRelease(time);
        return this;
    }
    getLevelAtTime(time) {
        time = this.toSeconds(time);
        return this.envelope.getValueAtTime(time);
    }
    dispose() {
        super.dispose();
        this._carrier.dispose();
        this._modulator.dispose();
        this.frequency.dispose();
        this.detune.dispose();
        this.harmonicity.dispose();
        this._modulationNode.dispose();
        return this;
    }
}

},{"../signal/Signal":"980ri","../signal/Multiply":"4C0VG","../core/context/Gain":"kj68Y","../component/envelope/Envelope":"cU1tT","../core/context/ToneAudioNode":"kZ3Kj","./Monophonic":"eKiiZ","../source/oscillator/OmniOscillator":"7bzEJ","../source/Source":"eBYFz","./Synth":"kwmGi","../core/util/Interface":"hVOjA","../core/util/Defaults":"a9M5s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cU1tT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)
 * envelope generator. Envelope outputs a signal which
 * can be connected to an AudioParam or Tone.Signal.
 * ```
 *           /\
 *          /  \
 *         /    \
 *        /      \
 *       /        \___________
 *      /                     \
 *     /                       \
 *    /                         \
 *   /                           \
 * ```
 * @example
 * return Tone.Offline(() => {
 * 	const env = new Tone.Envelope({
 * 		attack: 0.1,
 * 		decay: 0.2,
 * 		sustain: 0.5,
 * 		release: 0.8,
 * 	}).toDestination();
 * 	env.triggerAttackRelease(0.5);
 * }, 1.5, 1);
 * @category Component
 */ parcelHelpers.export(exports, "Envelope", ()=>Envelope);
var _tslib = require("tslib");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _typeCheck = require("../../core/util/TypeCheck");
var _signal = require("../../signal/Signal");
var _offlineContext = require("../../core/context/OfflineContext");
var _debug = require("../../core/util/Debug");
var _decorator = require("../../core/util/Decorator");
class Envelope extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Envelope.getDefaults(), arguments, [
            "attack",
            "decay",
            "sustain",
            "release"
        ]));
        this.name = "Envelope";
        /**
         * the signal which is output.
         */ this._sig = new (0, _signal.Signal)({
            context: this.context,
            value: 0
        });
        /**
         * The output signal of the envelope
         */ this.output = this._sig;
        /**
         * Envelope has no input
         */ this.input = undefined;
        const options = (0, _defaults.optionsFromArguments)(Envelope.getDefaults(), arguments, [
            "attack",
            "decay",
            "sustain",
            "release"
        ]);
        this.attack = options.attack;
        this.decay = options.decay;
        this.sustain = options.sustain;
        this.release = options.release;
        this.attackCurve = options.attackCurve;
        this.releaseCurve = options.releaseCurve;
        this.decayCurve = options.decayCurve;
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            attack: 0.01,
            attackCurve: "linear",
            decay: 0.1,
            decayCurve: "exponential",
            release: 1,
            releaseCurve: "exponential",
            sustain: 0.5
        });
    }
    /**
     * Read the current value of the envelope. Useful for
     * synchronizing visual output to the envelope.
     */ get value() {
        return this.getValueAtTime(this.now());
    }
    /**
     * Get the curve
     * @param  curve
     * @param  direction  In/Out
     * @return The curve name
     */ _getCurve(curve, direction) {
        if ((0, _typeCheck.isString)(curve)) return curve;
        else {
            // look up the name in the curves array
            let curveName;
            for(curveName in EnvelopeCurves){
                if (EnvelopeCurves[curveName][direction] === curve) return curveName;
            }
            // return the custom curve
            return curve;
        }
    }
    /**
     * Assign a the curve to the given name using the direction
     * @param  name
     * @param  direction In/Out
     * @param  curve
     */ _setCurve(name, direction, curve) {
        // check if it's a valid type
        if ((0, _typeCheck.isString)(curve) && Reflect.has(EnvelopeCurves, curve)) {
            const curveDef = EnvelopeCurves[curve];
            if ((0, _typeCheck.isObject)(curveDef)) {
                if (name !== "_decayCurve") this[name] = curveDef[direction];
            } else this[name] = curveDef;
        } else if ((0, _typeCheck.isArray)(curve) && name !== "_decayCurve") this[name] = curve;
        else throw new Error("Envelope: invalid curve: " + curve);
    }
    /**
     * The shape of the attack.
     * Can be any of these strings:
     * * "linear"
     * * "exponential"
     * * "sine"
     * * "cosine"
     * * "bounce"
     * * "ripple"
     * * "step"
     *
     * Can also be an array which describes the curve. Values
     * in the array are evenly subdivided and linearly
     * interpolated over the duration of the attack.
     * @example
     * return Tone.Offline(() => {
     * 	const env = new Tone.Envelope(0.4).toDestination();
     * 	env.attackCurve = "linear";
     * 	env.triggerAttack();
     * }, 1, 1);
     */ get attackCurve() {
        return this._getCurve(this._attackCurve, "In");
    }
    set attackCurve(curve) {
        this._setCurve("_attackCurve", "In", curve);
    }
    /**
     * The shape of the release. See the attack curve types.
     * @example
     * return Tone.Offline(() => {
     * 	const env = new Tone.Envelope({
     * 		release: 0.8
     * 	}).toDestination();
     * 	env.triggerAttack();
     * 	// release curve could also be defined by an array
     * 	env.releaseCurve = [1, 0.3, 0.4, 0.2, 0.7, 0];
     * 	env.triggerRelease(0.2);
     * }, 1, 1);
     */ get releaseCurve() {
        return this._getCurve(this._releaseCurve, "Out");
    }
    set releaseCurve(curve) {
        this._setCurve("_releaseCurve", "Out", curve);
    }
    /**
     * The shape of the decay either "linear" or "exponential"
     * @example
     * return Tone.Offline(() => {
     * 	const env = new Tone.Envelope({
     * 		sustain: 0.1,
     * 		decay: 0.5
     * 	}).toDestination();
     * 	env.decayCurve = "linear";
     * 	env.triggerAttack();
     * }, 1, 1);
     */ get decayCurve() {
        return this._decayCurve;
    }
    set decayCurve(curve) {
        (0, _debug.assert)([
            "linear",
            "exponential"
        ].some((c)=>c === curve), `Invalid envelope curve: ${curve}`);
        this._decayCurve = curve;
    }
    /**
     * Trigger the attack/decay portion of the ADSR envelope.
     * @param  time When the attack should start.
     * @param velocity The velocity of the envelope scales the vales.
     *                             number between 0-1
     * @example
     * const env = new Tone.AmplitudeEnvelope().toDestination();
     * const osc = new Tone.Oscillator().connect(env).start();
     * // trigger the attack 0.5 seconds from now with a velocity of 0.2
     * env.triggerAttack("+0.5", 0.2);
     */ triggerAttack(time, velocity = 1) {
        this.log("triggerAttack", time, velocity);
        time = this.toSeconds(time);
        const originalAttack = this.toSeconds(this.attack);
        let attack = originalAttack;
        const decay = this.toSeconds(this.decay);
        // check if it's not a complete attack
        const currentValue = this.getValueAtTime(time);
        if (currentValue > 0) {
            // subtract the current value from the attack time
            const attackRate = 1 / attack;
            const remainingDistance = 1 - currentValue;
            // the attack is now the remaining time
            attack = remainingDistance / attackRate;
        }
        // attack
        if (attack < this.sampleTime) {
            this._sig.cancelScheduledValues(time);
            // case where the attack time is 0 should set instantly
            this._sig.setValueAtTime(velocity, time);
        } else if (this._attackCurve === "linear") this._sig.linearRampTo(velocity, attack, time);
        else if (this._attackCurve === "exponential") this._sig.targetRampTo(velocity, attack, time);
        else {
            this._sig.cancelAndHoldAtTime(time);
            let curve = this._attackCurve;
            // find the starting position in the curve
            for(let i = 1; i < curve.length; i++)// the starting index is between the two values
            if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {
                curve = this._attackCurve.slice(i);
                // the first index is the current value
                curve[0] = currentValue;
                break;
            }
            this._sig.setValueCurveAtTime(curve, time, attack, velocity);
        }
        // decay
        if (decay && this.sustain < 1) {
            const decayValue = velocity * this.sustain;
            const decayStart = time + attack;
            this.log("decay", decayStart);
            if (this._decayCurve === "linear") this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);
            else this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);
        }
        return this;
    }
    /**
     * Triggers the release of the envelope.
     * @param  time When the release portion of the envelope should start.
     * @example
     * const env = new Tone.AmplitudeEnvelope().toDestination();
     * const osc = new Tone.Oscillator({
     * 	type: "sawtooth"
     * }).connect(env).start();
     * env.triggerAttack();
     * // trigger the release half a second after the attack
     * env.triggerRelease("+0.5");
     */ triggerRelease(time) {
        this.log("triggerRelease", time);
        time = this.toSeconds(time);
        const currentValue = this.getValueAtTime(time);
        if (currentValue > 0) {
            const release = this.toSeconds(this.release);
            if (release < this.sampleTime) this._sig.setValueAtTime(0, time);
            else if (this._releaseCurve === "linear") this._sig.linearRampTo(0, release, time);
            else if (this._releaseCurve === "exponential") this._sig.targetRampTo(0, release, time);
            else {
                (0, _debug.assert)((0, _typeCheck.isArray)(this._releaseCurve), "releaseCurve must be either 'linear', 'exponential' or an array");
                this._sig.cancelAndHoldAtTime(time);
                this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);
            }
        }
        return this;
    }
    /**
     * Get the scheduled value at the given time. This will
     * return the unconverted (raw) value.
     * @example
     * const env = new Tone.Envelope(0.5, 1, 0.4, 2);
     * env.triggerAttackRelease(2);
     * setInterval(() => console.log(env.getValueAtTime(Tone.now())), 100);
     */ getValueAtTime(time) {
        return this._sig.getValueAtTime(time);
    }
    /**
     * triggerAttackRelease is shorthand for triggerAttack, then waiting
     * some duration, then triggerRelease.
     * @param duration The duration of the sustain.
     * @param time When the attack should be triggered.
     * @param velocity The velocity of the envelope.
     * @example
     * const env = new Tone.AmplitudeEnvelope().toDestination();
     * const osc = new Tone.Oscillator().connect(env).start();
     * // trigger the release 0.5 seconds after the attack
     * env.triggerAttackRelease(0.5);
     */ triggerAttackRelease(duration, time, velocity = 1) {
        time = this.toSeconds(time);
        this.triggerAttack(time, velocity);
        this.triggerRelease(time + this.toSeconds(duration));
        return this;
    }
    /**
     * Cancels all scheduled envelope changes after the given time.
     */ cancel(after) {
        this._sig.cancelScheduledValues(this.toSeconds(after));
        return this;
    }
    /**
     * Connect the envelope to a destination node.
     */ connect(destination, outputNumber = 0, inputNumber = 0) {
        (0, _signal.connectSignal)(this, destination, outputNumber, inputNumber);
        return this;
    }
    /**
     * Render the envelope curve to an array of the given length.
     * Good for visualizing the envelope curve. Rescales the duration of the
     * envelope to fit the length.
     */ asArray(length = 1024) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            const duration = length / this.context.sampleRate;
            const context = new (0, _offlineContext.OfflineContext)(1, duration, this.context.sampleRate);
            // normalize the ADSR for the given duration with 20% sustain time
            const attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);
            const envelopeDuration = attackPortion + this.toSeconds(this.release);
            const sustainTime = envelopeDuration * 0.1;
            const totalDuration = envelopeDuration + sustainTime;
            // @ts-ignore
            const clone = new this.constructor(Object.assign(this.get(), {
                attack: duration * this.toSeconds(this.attack) / totalDuration,
                decay: duration * this.toSeconds(this.decay) / totalDuration,
                release: duration * this.toSeconds(this.release) / totalDuration,
                context
            }));
            clone._sig.toDestination();
            clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);
            const buffer = yield context.render();
            return buffer.getChannelData(0);
        });
    }
    dispose() {
        super.dispose();
        this._sig.dispose();
        return this;
    }
}
(0, _tslib.__decorate)([
    (0, _decorator.timeRange)(0)
], Envelope.prototype, "attack", void 0);
(0, _tslib.__decorate)([
    (0, _decorator.timeRange)(0)
], Envelope.prototype, "decay", void 0);
(0, _tslib.__decorate)([
    (0, _decorator.range)(0, 1)
], Envelope.prototype, "sustain", void 0);
(0, _tslib.__decorate)([
    (0, _decorator.timeRange)(0)
], Envelope.prototype, "release", void 0);
/**
 * Generate some complex envelope curves.
 */ const EnvelopeCurves = (()=>{
    const curveLen = 128;
    let i;
    let k;
    // cosine curve
    const cosineCurve = [];
    for(i = 0; i < curveLen; i++)cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));
    // ripple curve
    const rippleCurve = [];
    const rippleCurveFreq = 6.4;
    for(i = 0; i < curveLen - 1; i++){
        k = i / (curveLen - 1);
        const sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;
        rippleCurve[i] = sineWave / 10 + k * 0.83;
    }
    rippleCurve[curveLen - 1] = 1;
    // stairs curve
    const stairsCurve = [];
    const steps = 5;
    for(i = 0; i < curveLen; i++)stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;
    // in-out easing curve
    const sineCurve = [];
    for(i = 0; i < curveLen; i++){
        k = i / (curveLen - 1);
        sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));
    }
    // a bounce curve
    const bounceCurve = [];
    for(i = 0; i < curveLen; i++){
        k = i / (curveLen - 1);
        const freq = Math.pow(k, 3) * 4 + 0.2;
        const val = Math.cos(freq * Math.PI * 2 * k);
        bounceCurve[i] = Math.abs(val * (1 - k));
    }
    /**
     * Invert a value curve to make it work for the release
     */ function invertCurve(curve) {
        const out = new Array(curve.length);
        for(let j = 0; j < curve.length; j++)out[j] = 1 - curve[j];
        return out;
    }
    /**
     * reverse the curve
     */ function reverseCurve(curve) {
        return curve.slice(0).reverse();
    }
    /**
     * attack and release curve arrays
     */ return {
        bounce: {
            In: invertCurve(bounceCurve),
            Out: bounceCurve
        },
        cosine: {
            In: cosineCurve,
            Out: reverseCurve(cosineCurve)
        },
        exponential: "exponential",
        linear: "linear",
        ripple: {
            In: rippleCurve,
            Out: invertCurve(rippleCurve)
        },
        sine: {
            In: sineCurve,
            Out: invertCurve(sineCurve)
        },
        step: {
            In: stairsCurve,
            Out: invertCurve(stairsCurve)
        }
    };
})();

},{"tslib":"lRdW5","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/util/TypeCheck":"eMH5A","../../signal/Signal":"980ri","../../core/context/OfflineContext":"8VnAL","../../core/util/Debug":"2lOIQ","../../core/util/Decorator":"fl7ql","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eKiiZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Abstract base class for other monophonic instruments to extend.
 */ parcelHelpers.export(exports, "Monophonic", ()=>Monophonic);
var _tslib = require("tslib");
var _frequency = require("../core/type/Frequency");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
var _instrument = require("../instrument/Instrument");
var _decorator = require("../core/util/Decorator");
class Monophonic extends (0, _instrument.Instrument) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Monophonic.getDefaults(), arguments));
        const options = (0, _defaults.optionsFromArguments)(Monophonic.getDefaults(), arguments);
        this.portamento = options.portamento;
        this.onsilence = options.onsilence;
    }
    static getDefaults() {
        return Object.assign((0, _instrument.Instrument).getDefaults(), {
            detune: 0,
            onsilence: (0, _interface.noOp),
            portamento: 0
        });
    }
    /**
     * Trigger the attack of the note optionally with a given velocity.
     * @param  note The note to trigger.
     * @param  time When the note should start.
     * @param  velocity The velocity scaler determines how "loud" the note will be triggered.
     * @example
     * const synth = new Tone.Synth().toDestination();
     * // trigger the note a half second from now at half velocity
     * synth.triggerAttack("C4", "+0.5", 0.5);
     */ triggerAttack(note, time, velocity = 1) {
        this.log("triggerAttack", note, time, velocity);
        const seconds = this.toSeconds(time);
        this._triggerEnvelopeAttack(seconds, velocity);
        this.setNote(note, seconds);
        return this;
    }
    /**
     * Trigger the release portion of the envelope
     * @param  time If no time is given, the release happens immediatly
     * @example
     * const synth = new Tone.Synth().toDestination();
     * synth.triggerAttack("C4");
     * // trigger the release a second from now
     * synth.triggerRelease("+1");
     */ triggerRelease(time) {
        this.log("triggerRelease", time);
        const seconds = this.toSeconds(time);
        this._triggerEnvelopeRelease(seconds);
        return this;
    }
    /**
     * Set the note at the given time. If no time is given, the note
     * will set immediately.
     * @param note The note to change to.
     * @param  time The time when the note should be set.
     * @example
     * const synth = new Tone.Synth().toDestination();
     * synth.triggerAttack("C4");
     * // change to F#6 in one quarter note from now.
     * synth.setNote("F#6", "+4n");
     */ setNote(note, time) {
        const computedTime = this.toSeconds(time);
        const computedFrequency = note instanceof (0, _frequency.FrequencyClass) ? note.toFrequency() : note;
        if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {
            const portTime = this.toSeconds(this.portamento);
            this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);
        } else this.frequency.setValueAtTime(computedFrequency, computedTime);
        return this;
    }
}
(0, _tslib.__decorate)([
    (0, _decorator.timeRange)(0)
], Monophonic.prototype, "portamento", void 0);

},{"tslib":"lRdW5","../core/type/Frequency":"bObwr","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","../instrument/Instrument":"cFM2P","../core/util/Decorator":"fl7ql","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cFM2P":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Base-class for all instruments
 */ parcelHelpers.export(exports, "Instrument", ()=>Instrument);
var _volume = require("../component/channel/Volume");
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
class Instrument extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Instrument.getDefaults(), arguments));
        /**
         * Keep track of all events scheduled to the transport
         * when the instrument is 'synced'
         */ this._scheduledEvents = [];
        /**
         * If the instrument is currently synced
         */ this._synced = false;
        this._original_triggerAttack = this.triggerAttack;
        this._original_triggerRelease = this.triggerRelease;
        const options = (0, _defaults.optionsFromArguments)(Instrument.getDefaults(), arguments);
        this._volume = this.output = new (0, _volume.Volume)({
            context: this.context,
            volume: options.volume
        });
        this.volume = this._volume.volume;
        (0, _interface.readOnly)(this, "volume");
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            volume: 0
        });
    }
    /**
     * Sync the instrument to the Transport. All subsequent calls of
     * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.
     * @example
     * const fmSynth = new Tone.FMSynth().toDestination();
     * fmSynth.volume.value = -6;
     * fmSynth.sync();
     * // schedule 3 notes when the transport first starts
     * fmSynth.triggerAttackRelease("C4", "8n", 0);
     * fmSynth.triggerAttackRelease("E4", "8n", "8n");
     * fmSynth.triggerAttackRelease("G4", "8n", "4n");
     * // start the transport to hear the notes
     * Tone.Transport.start();
     */ sync() {
        if (this._syncState()) {
            this._syncMethod("triggerAttack", 1);
            this._syncMethod("triggerRelease", 0);
        }
        return this;
    }
    /**
     * set _sync
     */ _syncState() {
        let changed = false;
        if (!this._synced) {
            this._synced = true;
            changed = true;
        }
        return changed;
    }
    /**
     * Wrap the given method so that it can be synchronized
     * @param method Which method to wrap and sync
     * @param  timePosition What position the time argument appears in
     */ _syncMethod(method, timePosition) {
        const originalMethod = this["_original_" + method] = this[method];
        this[method] = (...args)=>{
            const time = args[timePosition];
            const id = this.context.transport.schedule((t)=>{
                args[timePosition] = t;
                originalMethod.apply(this, args);
            }, time);
            this._scheduledEvents.push(id);
        };
    }
    /**
     * Unsync the instrument from the Transport
     */ unsync() {
        this._scheduledEvents.forEach((id)=>this.context.transport.clear(id));
        this._scheduledEvents = [];
        if (this._synced) {
            this._synced = false;
            this.triggerAttack = this._original_triggerAttack;
            this.triggerRelease = this._original_triggerRelease;
        }
        return this;
    }
    /**
     * Trigger the attack and then the release after the duration.
     * @param  note     The note to trigger.
     * @param  duration How long the note should be held for before
     *                         triggering the release. This value must be greater than 0.
     * @param time  When the note should be triggered.
     * @param  velocity The velocity the note should be triggered at.
     * @example
     * const synth = new Tone.Synth().toDestination();
     * // trigger "C4" for the duration of an 8th note
     * synth.triggerAttackRelease("C4", "8n");
     */ triggerAttackRelease(note, duration, time, velocity) {
        const computedTime = this.toSeconds(time);
        const computedDuration = this.toSeconds(duration);
        this.triggerAttack(note, computedTime, velocity);
        this.triggerRelease(computedTime + computedDuration);
        return this;
    }
    /**
     * clean up
     * @returns {Instrument} this
     */ dispose() {
        super.dispose();
        this._volume.dispose();
        this.unsync();
        this._scheduledEvents = [];
        return this;
    }
}

},{"../component/channel/Volume":"7Ooeo","../core/context/ToneAudioNode":"kZ3Kj","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kwmGi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Synth is composed simply of a [[OmniOscillator]] routed through an [[AmplitudeEnvelope]].
 * ```
 * +----------------+   +-------------------+
 * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output
 * +----------------+   +-------------------+
 * ```
 * @example
 * const synth = new Tone.Synth().toDestination();
 * synth.triggerAttackRelease("C4", "8n");
 * @category Instrument
 */ parcelHelpers.export(exports, "Synth", ()=>Synth);
var _amplitudeEnvelope = require("../component/envelope/AmplitudeEnvelope");
var _envelope = require("../component/envelope/Envelope");
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
var _omniOscillator = require("../source/oscillator/OmniOscillator");
var _source = require("../source/Source");
var _monophonic = require("./Monophonic");
class Synth extends (0, _monophonic.Monophonic) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Synth.getDefaults(), arguments));
        this.name = "Synth";
        const options = (0, _defaults.optionsFromArguments)(Synth.getDefaults(), arguments);
        this.oscillator = new (0, _omniOscillator.OmniOscillator)(Object.assign({
            context: this.context,
            detune: options.detune,
            onstop: ()=>this.onsilence(this)
        }, options.oscillator));
        this.frequency = this.oscillator.frequency;
        this.detune = this.oscillator.detune;
        this.envelope = new (0, _amplitudeEnvelope.AmplitudeEnvelope)(Object.assign({
            context: this.context
        }, options.envelope));
        // connect the oscillators to the output
        this.oscillator.chain(this.envelope, this.output);
        (0, _interface.readOnly)(this, [
            "oscillator",
            "frequency",
            "detune",
            "envelope"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _monophonic.Monophonic).getDefaults(), {
            envelope: Object.assign((0, _defaults.omitFromObject)((0, _envelope.Envelope).getDefaults(), Object.keys((0, _toneAudioNode.ToneAudioNode).getDefaults())), {
                attack: 0.005,
                decay: 0.1,
                release: 1,
                sustain: 0.3
            }),
            oscillator: Object.assign((0, _defaults.omitFromObject)((0, _omniOscillator.OmniOscillator).getDefaults(), [
                ...Object.keys((0, _source.Source).getDefaults()),
                "frequency",
                "detune"
            ]), {
                type: "triangle"
            })
        });
    }
    /**
     * start the attack portion of the envelope
     * @param time the time the attack should start
     * @param velocity the velocity of the note (0-1)
     */ _triggerEnvelopeAttack(time, velocity) {
        // the envelopes
        this.envelope.triggerAttack(time, velocity);
        this.oscillator.start(time);
        // if there is no release portion, stop the oscillator
        if (this.envelope.sustain === 0) {
            const computedAttack = this.toSeconds(this.envelope.attack);
            const computedDecay = this.toSeconds(this.envelope.decay);
            this.oscillator.stop(time + computedAttack + computedDecay);
        }
    }
    /**
     * start the release portion of the envelope
     * @param time the time the release should start
     */ _triggerEnvelopeRelease(time) {
        this.envelope.triggerRelease(time);
        this.oscillator.stop(time + this.toSeconds(this.envelope.release));
    }
    getLevelAtTime(time) {
        time = this.toSeconds(time);
        return this.envelope.getValueAtTime(time);
    }
    /**
     * clean up
     */ dispose() {
        super.dispose();
        this.oscillator.dispose();
        this.envelope.dispose();
        return this;
    }
}

},{"../component/envelope/AmplitudeEnvelope":"l33WV","../component/envelope/Envelope":"cU1tT","../core/context/ToneAudioNode":"kZ3Kj","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","../source/oscillator/OmniOscillator":"7bzEJ","../source/Source":"eBYFz","./Monophonic":"eKiiZ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l33WV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.
 * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts
 * an audio signal as the input and will apply the envelope to the amplitude
 * of the signal.
 * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).
 *
 * @example
 * return Tone.Offline(() => {
 * 	const ampEnv = new Tone.AmplitudeEnvelope({
 * 		attack: 0.1,
 * 		decay: 0.2,
 * 		sustain: 1.0,
 * 		release: 0.8
 * 	}).toDestination();
 * 	// create an oscillator and connect it
 * 	const osc = new Tone.Oscillator().connect(ampEnv).start();
 * 	// trigger the envelopes attack and release "8t" apart
 * 	ampEnv.triggerAttackRelease("8t");
 * }, 1.5, 1);
 * @category Component
 */ parcelHelpers.export(exports, "AmplitudeEnvelope", ()=>AmplitudeEnvelope);
var _gain = require("../../core/context/Gain");
var _defaults = require("../../core/util/Defaults");
var _envelope = require("./Envelope");
class AmplitudeEnvelope extends (0, _envelope.Envelope) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(AmplitudeEnvelope.getDefaults(), arguments, [
            "attack",
            "decay",
            "sustain",
            "release"
        ]));
        this.name = "AmplitudeEnvelope";
        this._gainNode = new (0, _gain.Gain)({
            context: this.context,
            gain: 0
        });
        this.output = this._gainNode;
        this.input = this._gainNode;
        this._sig.connect(this._gainNode.gain);
        this.output = this._gainNode;
        this.input = this._gainNode;
    }
    /**
     * Clean up
     */ dispose() {
        super.dispose();
        this._gainNode.dispose();
        return this;
    }
}

},{"../../core/context/Gain":"kj68Y","../../core/util/Defaults":"a9M5s","./Envelope":"cU1tT","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"batNh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * DuoSynth is a monophonic synth composed of two [[MonoSynths]] run in parallel with control over the
 * frequency ratio between the two voices and vibrato effect.
 * @example
 * const duoSynth = new Tone.DuoSynth().toDestination();
 * duoSynth.triggerAttackRelease("C4", "2n");
 * @category Instrument
 */ parcelHelpers.export(exports, "DuoSynth", ()=>DuoSynth);
var _monophonic = require("./Monophonic");
var _monoSynth = require("./MonoSynth");
var _signal = require("../signal/Signal");
var _interface = require("../core/util/Interface");
var _lfo = require("../source/oscillator/LFO");
var _gain = require("../core/context/Gain");
var _multiply = require("../signal/Multiply");
var _defaults = require("../core/util/Defaults");
class DuoSynth extends (0, _monophonic.Monophonic) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(DuoSynth.getDefaults(), arguments));
        this.name = "DuoSynth";
        const options = (0, _defaults.optionsFromArguments)(DuoSynth.getDefaults(), arguments);
        this.voice0 = new (0, _monoSynth.MonoSynth)(Object.assign(options.voice0, {
            context: this.context,
            onsilence: ()=>this.onsilence(this)
        }));
        this.voice1 = new (0, _monoSynth.MonoSynth)(Object.assign(options.voice1, {
            context: this.context
        }));
        this.harmonicity = new (0, _multiply.Multiply)({
            context: this.context,
            units: "positive",
            value: options.harmonicity
        });
        this._vibrato = new (0, _lfo.LFO)({
            frequency: options.vibratoRate,
            context: this.context,
            min: -50,
            max: 50
        });
        // start the vibrato immediately
        this._vibrato.start();
        this.vibratoRate = this._vibrato.frequency;
        this._vibratoGain = new (0, _gain.Gain)({
            context: this.context,
            units: "normalRange",
            gain: options.vibratoAmount
        });
        this.vibratoAmount = this._vibratoGain.gain;
        this.frequency = new (0, _signal.Signal)({
            context: this.context,
            units: "frequency",
            value: 440
        });
        this.detune = new (0, _signal.Signal)({
            context: this.context,
            units: "cents",
            value: options.detune
        });
        // control the two voices frequency
        this.frequency.connect(this.voice0.frequency);
        this.frequency.chain(this.harmonicity, this.voice1.frequency);
        this._vibrato.connect(this._vibratoGain);
        this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);
        this.detune.fan(this.voice0.detune, this.voice1.detune);
        this.voice0.connect(this.output);
        this.voice1.connect(this.output);
        (0, _interface.readOnly)(this, [
            "voice0",
            "voice1",
            "frequency",
            "vibratoAmount",
            "vibratoRate"
        ]);
    }
    getLevelAtTime(time) {
        time = this.toSeconds(time);
        return this.voice0.envelope.getValueAtTime(time) + this.voice1.envelope.getValueAtTime(time);
    }
    static getDefaults() {
        return (0, _defaults.deepMerge)((0, _monophonic.Monophonic).getDefaults(), {
            vibratoAmount: 0.5,
            vibratoRate: 5,
            harmonicity: 1.5,
            voice0: (0, _defaults.deepMerge)((0, _defaults.omitFromObject)((0, _monoSynth.MonoSynth).getDefaults(), Object.keys((0, _monophonic.Monophonic).getDefaults())), {
                filterEnvelope: {
                    attack: 0.01,
                    decay: 0.0,
                    sustain: 1,
                    release: 0.5
                },
                envelope: {
                    attack: 0.01,
                    decay: 0.0,
                    sustain: 1,
                    release: 0.5
                }
            }),
            voice1: (0, _defaults.deepMerge)((0, _defaults.omitFromObject)((0, _monoSynth.MonoSynth).getDefaults(), Object.keys((0, _monophonic.Monophonic).getDefaults())), {
                filterEnvelope: {
                    attack: 0.01,
                    decay: 0.0,
                    sustain: 1,
                    release: 0.5
                },
                envelope: {
                    attack: 0.01,
                    decay: 0.0,
                    sustain: 1,
                    release: 0.5
                }
            })
        });
    }
    /**
     * Trigger the attack portion of the note
     */ _triggerEnvelopeAttack(time, velocity) {
        // @ts-ignore
        this.voice0._triggerEnvelopeAttack(time, velocity);
        // @ts-ignore
        this.voice1._triggerEnvelopeAttack(time, velocity);
    }
    /**
     * Trigger the release portion of the note
     */ _triggerEnvelopeRelease(time) {
        // @ts-ignore
        this.voice0._triggerEnvelopeRelease(time);
        // @ts-ignore
        this.voice1._triggerEnvelopeRelease(time);
        return this;
    }
    dispose() {
        super.dispose();
        this.voice0.dispose();
        this.voice1.dispose();
        this.frequency.dispose();
        this.detune.dispose();
        this._vibrato.dispose();
        this.vibratoRate.dispose();
        this._vibratoGain.dispose();
        this.harmonicity.dispose();
        return this;
    }
}

},{"./Monophonic":"eKiiZ","./MonoSynth":"jT7JE","../signal/Signal":"980ri","../core/util/Interface":"hVOjA","../source/oscillator/LFO":"jsBJT","../core/context/Gain":"kj68Y","../signal/Multiply":"4C0VG","../core/util/Defaults":"a9M5s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jT7JE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.
 * The amplitude of the Oscillator and the cutoff frequency of the
 * Filter are controlled by Envelopes.
 * <img src="https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240">
 * @example
 * const synth = new Tone.MonoSynth({
 * 	oscillator: {
 * 		type: "square"
 * 	},
 * 	envelope: {
 * 		attack: 0.1
 * 	}
 * }).toDestination();
 * synth.triggerAttackRelease("C4", "8n");
 * @category Instrument
 */ parcelHelpers.export(exports, "MonoSynth", ()=>MonoSynth);
var _amplitudeEnvelope = require("../component/envelope/AmplitudeEnvelope");
var _envelope = require("../component/envelope/Envelope");
var _filter = require("../component/filter/Filter");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
var _monophonic = require("../instrument/Monophonic");
var _omniOscillator = require("../source/oscillator/OmniOscillator");
var _source = require("../source/Source");
var _frequencyEnvelope = require("../component/envelope/FrequencyEnvelope");
var _toneAudioNode = require("../core/context/ToneAudioNode");
class MonoSynth extends (0, _monophonic.Monophonic) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(MonoSynth.getDefaults(), arguments));
        this.name = "MonoSynth";
        const options = (0, _defaults.optionsFromArguments)(MonoSynth.getDefaults(), arguments);
        this.oscillator = new (0, _omniOscillator.OmniOscillator)(Object.assign(options.oscillator, {
            context: this.context,
            detune: options.detune,
            onstop: ()=>this.onsilence(this)
        }));
        this.frequency = this.oscillator.frequency;
        this.detune = this.oscillator.detune;
        this.filter = new (0, _filter.Filter)(Object.assign(options.filter, {
            context: this.context
        }));
        this.filterEnvelope = new (0, _frequencyEnvelope.FrequencyEnvelope)(Object.assign(options.filterEnvelope, {
            context: this.context
        }));
        this.envelope = new (0, _amplitudeEnvelope.AmplitudeEnvelope)(Object.assign(options.envelope, {
            context: this.context
        }));
        // connect the oscillators to the output
        this.oscillator.chain(this.filter, this.envelope, this.output);
        // connect the filter envelope
        this.filterEnvelope.connect(this.filter.frequency);
        (0, _interface.readOnly)(this, [
            "oscillator",
            "frequency",
            "detune",
            "filter",
            "filterEnvelope",
            "envelope"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _monophonic.Monophonic).getDefaults(), {
            envelope: Object.assign((0, _defaults.omitFromObject)((0, _envelope.Envelope).getDefaults(), Object.keys((0, _toneAudioNode.ToneAudioNode).getDefaults())), {
                attack: 0.005,
                decay: 0.1,
                release: 1,
                sustain: 0.9
            }),
            filter: Object.assign((0, _defaults.omitFromObject)((0, _filter.Filter).getDefaults(), Object.keys((0, _toneAudioNode.ToneAudioNode).getDefaults())), {
                Q: 1,
                rolloff: -12,
                type: "lowpass"
            }),
            filterEnvelope: Object.assign((0, _defaults.omitFromObject)((0, _frequencyEnvelope.FrequencyEnvelope).getDefaults(), Object.keys((0, _toneAudioNode.ToneAudioNode).getDefaults())), {
                attack: 0.6,
                baseFrequency: 200,
                decay: 0.2,
                exponent: 2,
                octaves: 3,
                release: 2,
                sustain: 0.5
            }),
            oscillator: Object.assign((0, _defaults.omitFromObject)((0, _omniOscillator.OmniOscillator).getDefaults(), Object.keys((0, _source.Source).getDefaults())), {
                type: "sawtooth"
            })
        });
    }
    /**
     * start the attack portion of the envelope
     * @param time the time the attack should start
     * @param velocity the velocity of the note (0-1)
     */ _triggerEnvelopeAttack(time, velocity = 1) {
        this.envelope.triggerAttack(time, velocity);
        this.filterEnvelope.triggerAttack(time);
        this.oscillator.start(time);
        if (this.envelope.sustain === 0) {
            const computedAttack = this.toSeconds(this.envelope.attack);
            const computedDecay = this.toSeconds(this.envelope.decay);
            this.oscillator.stop(time + computedAttack + computedDecay);
        }
    }
    /**
     * start the release portion of the envelope
     * @param time the time the release should start
     */ _triggerEnvelopeRelease(time) {
        this.envelope.triggerRelease(time);
        this.filterEnvelope.triggerRelease(time);
        this.oscillator.stop(time + this.toSeconds(this.envelope.release));
    }
    getLevelAtTime(time) {
        time = this.toSeconds(time);
        return this.envelope.getValueAtTime(time);
    }
    dispose() {
        super.dispose();
        this.oscillator.dispose();
        this.envelope.dispose();
        this.filterEnvelope.dispose();
        this.filter.dispose();
        return this;
    }
}

},{"../component/envelope/AmplitudeEnvelope":"l33WV","../component/envelope/Envelope":"cU1tT","../component/filter/Filter":"lel48","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","../instrument/Monophonic":"eKiiZ","../source/oscillator/OmniOscillator":"7bzEJ","../source/Source":"eBYFz","../component/envelope/FrequencyEnvelope":"beAqg","../core/context/ToneAudioNode":"kZ3Kj","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lel48":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Tone.Filter is a filter which allows for all of the same native methods
 * as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).
 * Tone.Filter has the added ability to set the filter rolloff at -12
 * (default), -24 and -48.
 * @example
 * const filter = new Tone.Filter(1500, "highpass").toDestination();
 * filter.frequency.rampTo(20000, 10);
 * const noise = new Tone.Noise().connect(filter).start();
 * @category Component
 */ parcelHelpers.export(exports, "Filter", ()=>Filter);
var _gain = require("../../core/context/Gain");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _typeCheck = require("../../core/util/TypeCheck");
var _signal = require("../../signal/Signal");
var _debug = require("../../core/util/Debug");
var _biquadFilter = require("./BiquadFilter");
class Filter extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Filter.getDefaults(), arguments, [
            "frequency",
            "type",
            "rolloff"
        ]));
        this.name = "Filter";
        this.input = new (0, _gain.Gain)({
            context: this.context
        });
        this.output = new (0, _gain.Gain)({
            context: this.context
        });
        this._filters = [];
        const options = (0, _defaults.optionsFromArguments)(Filter.getDefaults(), arguments, [
            "frequency",
            "type",
            "rolloff"
        ]);
        this._filters = [];
        this.Q = new (0, _signal.Signal)({
            context: this.context,
            units: "positive",
            value: options.Q
        });
        this.frequency = new (0, _signal.Signal)({
            context: this.context,
            units: "frequency",
            value: options.frequency
        });
        this.detune = new (0, _signal.Signal)({
            context: this.context,
            units: "cents",
            value: options.detune
        });
        this.gain = new (0, _signal.Signal)({
            context: this.context,
            units: "decibels",
            convert: false,
            value: options.gain
        });
        this._type = options.type;
        this.rolloff = options.rolloff;
        (0, _interface.readOnly)(this, [
            "detune",
            "frequency",
            "gain",
            "Q"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            Q: 1,
            detune: 0,
            frequency: 350,
            gain: 0,
            rolloff: -12,
            type: "lowpass"
        });
    }
    /**
     * The type of the filter. Types: "lowpass", "highpass",
     * "bandpass", "lowshelf", "highshelf", "notch", "allpass", or "peaking".
     */ get type() {
        return this._type;
    }
    set type(type) {
        const types = [
            "lowpass",
            "highpass",
            "bandpass",
            "lowshelf",
            "highshelf",
            "notch",
            "allpass",
            "peaking"
        ];
        (0, _debug.assert)(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);
        this._type = type;
        this._filters.forEach((filter)=>filter.type = type);
    }
    /**
     * The rolloff of the filter which is the drop in db
     * per octave. Implemented internally by cascading filters.
     * Only accepts the values -12, -24, -48 and -96.
     */ get rolloff() {
        return this._rolloff;
    }
    set rolloff(rolloff) {
        const rolloffNum = (0, _typeCheck.isNumber)(rolloff) ? rolloff : parseInt(rolloff, 10);
        const possibilities = [
            -12,
            -24,
            -48,
            -96
        ];
        let cascadingCount = possibilities.indexOf(rolloffNum);
        // check the rolloff is valid
        (0, _debug.assert)(cascadingCount !== -1, `rolloff can only be ${possibilities.join(", ")}`);
        cascadingCount += 1;
        this._rolloff = rolloffNum;
        this.input.disconnect();
        this._filters.forEach((filter)=>filter.disconnect());
        this._filters = new Array(cascadingCount);
        for(let count = 0; count < cascadingCount; count++){
            const filter = new (0, _biquadFilter.BiquadFilter)({
                context: this.context
            });
            filter.type = this._type;
            this.frequency.connect(filter.frequency);
            this.detune.connect(filter.detune);
            this.Q.connect(filter.Q);
            this.gain.connect(filter.gain);
            this._filters[count] = filter;
        }
        this._internalChannels = this._filters;
        (0, _toneAudioNode.connectSeries)(this.input, ...this._internalChannels, this.output);
    }
    /**
     * Get the frequency response curve. This curve represents how the filter
     * responses to frequencies between 20hz-20khz.
     * @param  len The number of values to return
     * @return The frequency response curve between 20-20kHz
     */ getFrequencyResponse(len = 128) {
        const filterClone = new (0, _biquadFilter.BiquadFilter)({
            frequency: this.frequency.value,
            gain: this.gain.value,
            Q: this.Q.value,
            type: this._type,
            detune: this.detune.value
        });
        // start with all 1s
        const totalResponse = new Float32Array(len).map(()=>1);
        this._filters.forEach(()=>{
            const response = filterClone.getFrequencyResponse(len);
            response.forEach((val, i)=>totalResponse[i] *= val);
        });
        filterClone.dispose();
        return totalResponse;
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this._filters.forEach((filter)=>{
            filter.dispose();
        });
        (0, _interface.writable)(this, [
            "detune",
            "frequency",
            "gain",
            "Q"
        ]);
        this.frequency.dispose();
        this.Q.dispose();
        this.detune.dispose();
        this.gain.dispose();
        return this;
    }
}

},{"../../core/context/Gain":"kj68Y","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../core/util/TypeCheck":"eMH5A","../../signal/Signal":"980ri","../../core/util/Debug":"2lOIQ","./BiquadFilter":"bJIpY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bJIpY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Thin wrapper around the native Web Audio [BiquadFilterNode](https://webaudio.github.io/web-audio-api/#biquadfilternode).
 * BiquadFilter is similar to [[Filter]] but doesn't have the option to set the "rolloff" value.
 * @category Component
 */ parcelHelpers.export(exports, "BiquadFilter", ()=>BiquadFilter);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _param = require("../../core/context/Param");
var _debug = require("../../core/util/Debug");
class BiquadFilter extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(BiquadFilter.getDefaults(), arguments, [
            "frequency",
            "type"
        ]));
        this.name = "BiquadFilter";
        const options = (0, _defaults.optionsFromArguments)(BiquadFilter.getDefaults(), arguments, [
            "frequency",
            "type"
        ]);
        this._filter = this.context.createBiquadFilter();
        this.input = this.output = this._filter;
        this.Q = new (0, _param.Param)({
            context: this.context,
            units: "number",
            value: options.Q,
            param: this._filter.Q
        });
        this.frequency = new (0, _param.Param)({
            context: this.context,
            units: "frequency",
            value: options.frequency,
            param: this._filter.frequency
        });
        this.detune = new (0, _param.Param)({
            context: this.context,
            units: "cents",
            value: options.detune,
            param: this._filter.detune
        });
        this.gain = new (0, _param.Param)({
            context: this.context,
            units: "decibels",
            convert: false,
            value: options.gain,
            param: this._filter.gain
        });
        this.type = options.type;
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            Q: 1,
            type: "lowpass",
            frequency: 350,
            detune: 0,
            gain: 0
        });
    }
    /**
     * The type of this BiquadFilterNode. For a complete list of types and their attributes, see the
     * [Web Audio API](https://webaudio.github.io/web-audio-api/#dom-biquadfiltertype-lowpass)
     */ get type() {
        return this._filter.type;
    }
    set type(type) {
        const types = [
            "lowpass",
            "highpass",
            "bandpass",
            "lowshelf",
            "highshelf",
            "notch",
            "allpass",
            "peaking"
        ];
        (0, _debug.assert)(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);
        this._filter.type = type;
    }
    /**
     * Get the frequency response curve. This curve represents how the filter
     * responses to frequencies between 20hz-20khz.
     * @param  len The number of values to return
     * @return The frequency response curve between 20-20kHz
     */ getFrequencyResponse(len = 128) {
        // start with all 1s
        const freqValues = new Float32Array(len);
        for(let i = 0; i < len; i++){
            const norm = Math.pow(i / len, 2);
            const freq = norm * 19980 + 20;
            freqValues[i] = freq;
        }
        const magValues = new Float32Array(len);
        const phaseValues = new Float32Array(len);
        // clone the filter to remove any connections which may be changing the value
        const filterClone = this.context.createBiquadFilter();
        filterClone.type = this.type;
        filterClone.Q.value = this.Q.value;
        filterClone.frequency.value = this.frequency.value;
        filterClone.gain.value = this.gain.value;
        filterClone.getFrequencyResponse(freqValues, magValues, phaseValues);
        return magValues;
    }
    dispose() {
        super.dispose();
        this._filter.disconnect();
        this.Q.dispose();
        this.frequency.dispose();
        this.gain.dispose();
        this.detune.dispose();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/context/Param":"5PVlJ","../../core/util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"beAqg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * FrequencyEnvelope is an [[Envelope]] which ramps between [[baseFrequency]]
 * and [[octaves]]. It can also have an optional [[exponent]] to adjust the curve
 * which it ramps.
 * @example
 * const oscillator = new Tone.Oscillator().toDestination().start();
 * const freqEnv = new Tone.FrequencyEnvelope({
 * 	attack: 0.2,
 * 	baseFrequency: "C2",
 * 	octaves: 4
 * });
 * freqEnv.connect(oscillator.frequency);
 * freqEnv.triggerAttack();
 * @category Component
 */ parcelHelpers.export(exports, "FrequencyEnvelope", ()=>FrequencyEnvelope);
var _defaults = require("../../core/util/Defaults");
var _envelope = require("./Envelope");
var _scale = require("../../signal/Scale");
var _pow = require("../../signal/Pow");
var _debug = require("../../core/util/Debug");
class FrequencyEnvelope extends (0, _envelope.Envelope) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(FrequencyEnvelope.getDefaults(), arguments, [
            "attack",
            "decay",
            "sustain",
            "release"
        ]));
        this.name = "FrequencyEnvelope";
        const options = (0, _defaults.optionsFromArguments)(FrequencyEnvelope.getDefaults(), arguments, [
            "attack",
            "decay",
            "sustain",
            "release"
        ]);
        this._octaves = options.octaves;
        this._baseFrequency = this.toFrequency(options.baseFrequency);
        this._exponent = this.input = new (0, _pow.Pow)({
            context: this.context,
            value: options.exponent
        });
        this._scale = this.output = new (0, _scale.Scale)({
            context: this.context,
            min: this._baseFrequency,
            max: this._baseFrequency * Math.pow(2, this._octaves)
        });
        this._sig.chain(this._exponent, this._scale);
    }
    static getDefaults() {
        return Object.assign((0, _envelope.Envelope).getDefaults(), {
            baseFrequency: 200,
            exponent: 1,
            octaves: 4
        });
    }
    /**
     * The envelope's minimum output value. This is the value which it
     * starts at.
     */ get baseFrequency() {
        return this._baseFrequency;
    }
    set baseFrequency(min) {
        const freq = this.toFrequency(min);
        (0, _debug.assertRange)(freq, 0);
        this._baseFrequency = freq;
        this._scale.min = this._baseFrequency;
        // update the max value when the min changes
        this.octaves = this._octaves;
    }
    /**
     * The number of octaves above the baseFrequency that the
     * envelope will scale to.
     */ get octaves() {
        return this._octaves;
    }
    set octaves(octaves) {
        this._octaves = octaves;
        this._scale.max = this._baseFrequency * Math.pow(2, octaves);
    }
    /**
     * The envelope's exponent value.
     */ get exponent() {
        return this._exponent.value;
    }
    set exponent(exponent) {
        this._exponent.value = exponent;
    }
    /**
     * Clean up
     */ dispose() {
        super.dispose();
        this._exponent.dispose();
        this._scale.dispose();
        return this;
    }
}

},{"../../core/util/Defaults":"a9M5s","./Envelope":"cU1tT","../../signal/Scale":"3qxrw","../../signal/Pow":"9vO86","../../core/util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9ms3z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * FMSynth is composed of two Tone.Synths where one Tone.Synth modulates
 * the frequency of a second Tone.Synth. A lot of spectral content
 * can be explored using the modulationIndex parameter. Read more about
 * frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).
 *
 * @example
 * const fmSynth = new Tone.FMSynth().toDestination();
 * fmSynth.triggerAttackRelease("C5", "4n");
 *
 * @category Instrument
 */ parcelHelpers.export(exports, "FMSynth", ()=>FMSynth);
var _defaults = require("../core/util/Defaults");
var _multiply = require("../signal/Multiply");
var _modulationSynth = require("./ModulationSynth");
class FMSynth extends (0, _modulationSynth.ModulationSynth) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(FMSynth.getDefaults(), arguments));
        this.name = "FMSynth";
        const options = (0, _defaults.optionsFromArguments)(FMSynth.getDefaults(), arguments);
        this.modulationIndex = new (0, _multiply.Multiply)({
            context: this.context,
            value: options.modulationIndex
        });
        // control the two voices frequency
        this.frequency.connect(this._carrier.frequency);
        this.frequency.chain(this.harmonicity, this._modulator.frequency);
        this.frequency.chain(this.modulationIndex, this._modulationNode);
        this.detune.fan(this._carrier.detune, this._modulator.detune);
        this._modulator.connect(this._modulationNode.gain);
        this._modulationNode.connect(this._carrier.frequency);
        this._carrier.connect(this.output);
    }
    static getDefaults() {
        return Object.assign((0, _modulationSynth.ModulationSynth).getDefaults(), {
            modulationIndex: 10
        });
    }
    dispose() {
        super.dispose();
        this.modulationIndex.dispose();
        return this;
    }
}

},{"../core/util/Defaults":"a9M5s","../signal/Multiply":"4C0VG","./ModulationSynth":"3DhsT","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"itJ1n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A highly inharmonic and spectrally complex source with a highpass filter
 * and amplitude envelope which is good for making metallophone sounds.
 * Based on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).
 * Inspiration from [Sound on Sound](https://shorturl.at/rSZ12).
 * @category Instrument
 */ parcelHelpers.export(exports, "MetalSynth", ()=>MetalSynth);
var _envelope = require("../component/envelope/Envelope");
var _filter = require("../component/filter/Filter");
var _gain = require("../core/context/Gain");
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
var _multiply = require("../signal/Multiply");
var _scale = require("../signal/Scale");
var _signal = require("../signal/Signal");
var _fmoscillator = require("../source/oscillator/FMOscillator");
var _monophonic = require("./Monophonic");
/**
 * Inharmonic ratio of frequencies based on the Roland TR-808
 * Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model
 */ const inharmRatios = [
    1.0,
    1.483,
    1.932,
    2.546,
    2.630,
    3.897
];
class MetalSynth extends (0, _monophonic.Monophonic) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(MetalSynth.getDefaults(), arguments));
        this.name = "MetalSynth";
        /**
         * The array of FMOscillators
         */ this._oscillators = [];
        /**
         * The frequency multipliers
         */ this._freqMultipliers = [];
        const options = (0, _defaults.optionsFromArguments)(MetalSynth.getDefaults(), arguments);
        this.detune = new (0, _signal.Signal)({
            context: this.context,
            units: "cents",
            value: options.detune
        });
        this.frequency = new (0, _signal.Signal)({
            context: this.context,
            units: "frequency"
        });
        this._amplitude = new (0, _gain.Gain)({
            context: this.context,
            gain: 0
        }).connect(this.output);
        this._highpass = new (0, _filter.Filter)({
            // Q: -3.0102999566398125,
            Q: 0,
            context: this.context,
            type: "highpass"
        }).connect(this._amplitude);
        for(let i = 0; i < inharmRatios.length; i++){
            const osc = new (0, _fmoscillator.FMOscillator)({
                context: this.context,
                harmonicity: options.harmonicity,
                modulationIndex: options.modulationIndex,
                modulationType: "square",
                onstop: i === 0 ? ()=>this.onsilence(this) : (0, _interface.noOp),
                type: "square"
            });
            osc.connect(this._highpass);
            this._oscillators[i] = osc;
            const mult = new (0, _multiply.Multiply)({
                context: this.context,
                value: inharmRatios[i]
            });
            this._freqMultipliers[i] = mult;
            this.frequency.chain(mult, osc.frequency);
            this.detune.connect(osc.detune);
        }
        this._filterFreqScaler = new (0, _scale.Scale)({
            context: this.context,
            max: 7000,
            min: this.toFrequency(options.resonance)
        });
        this.envelope = new (0, _envelope.Envelope)({
            attack: options.envelope.attack,
            attackCurve: "linear",
            context: this.context,
            decay: options.envelope.decay,
            release: options.envelope.release,
            sustain: 0
        });
        this.envelope.chain(this._filterFreqScaler, this._highpass.frequency);
        this.envelope.connect(this._amplitude.gain);
        // set the octaves
        this._octaves = options.octaves;
        this.octaves = options.octaves;
    }
    static getDefaults() {
        return (0, _defaults.deepMerge)((0, _monophonic.Monophonic).getDefaults(), {
            envelope: Object.assign((0, _defaults.omitFromObject)((0, _envelope.Envelope).getDefaults(), Object.keys((0, _toneAudioNode.ToneAudioNode).getDefaults())), {
                attack: 0.001,
                decay: 1.4,
                release: 0.2
            }),
            harmonicity: 5.1,
            modulationIndex: 32,
            octaves: 1.5,
            resonance: 4000
        });
    }
    /**
     * Trigger the attack.
     * @param time When the attack should be triggered.
     * @param velocity The velocity that the envelope should be triggered at.
     */ _triggerEnvelopeAttack(time, velocity = 1) {
        this.envelope.triggerAttack(time, velocity);
        this._oscillators.forEach((osc)=>osc.start(time));
        if (this.envelope.sustain === 0) this._oscillators.forEach((osc)=>{
            osc.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));
        });
        return this;
    }
    /**
     * Trigger the release of the envelope.
     * @param time When the release should be triggered.
     */ _triggerEnvelopeRelease(time) {
        this.envelope.triggerRelease(time);
        this._oscillators.forEach((osc)=>osc.stop(time + this.toSeconds(this.envelope.release)));
        return this;
    }
    getLevelAtTime(time) {
        time = this.toSeconds(time);
        return this.envelope.getValueAtTime(time);
    }
    /**
     * The modulationIndex of the oscillators which make up the source.
     * see [[FMOscillator.modulationIndex]]
     * @min 1
     * @max 100
     */ get modulationIndex() {
        return this._oscillators[0].modulationIndex.value;
    }
    set modulationIndex(val) {
        this._oscillators.forEach((osc)=>osc.modulationIndex.value = val);
    }
    /**
     * The harmonicity of the oscillators which make up the source.
     * see Tone.FMOscillator.harmonicity
     * @min 0.1
     * @max 10
     */ get harmonicity() {
        return this._oscillators[0].harmonicity.value;
    }
    set harmonicity(val) {
        this._oscillators.forEach((osc)=>osc.harmonicity.value = val);
    }
    /**
     * The lower level of the highpass filter which is attached to the envelope.
     * This value should be between [0, 7000]
     * @min 0
     * @max 7000
     */ get resonance() {
        return this._filterFreqScaler.min;
    }
    set resonance(val) {
        this._filterFreqScaler.min = this.toFrequency(val);
        this.octaves = this._octaves;
    }
    /**
     * The number of octaves above the "resonance" frequency
     * that the filter ramps during the attack/decay envelope
     * @min 0
     * @max 8
     */ get octaves() {
        return this._octaves;
    }
    set octaves(val) {
        this._octaves = val;
        this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, val);
    }
    dispose() {
        super.dispose();
        this._oscillators.forEach((osc)=>osc.dispose());
        this._freqMultipliers.forEach((freqMult)=>freqMult.dispose());
        this.frequency.dispose();
        this.detune.dispose();
        this._filterFreqScaler.dispose();
        this._amplitude.dispose();
        this.envelope.dispose();
        this._highpass.dispose();
        return this;
    }
}

},{"../component/envelope/Envelope":"cU1tT","../component/filter/Filter":"lel48","../core/context/Gain":"kj68Y","../core/context/ToneAudioNode":"kZ3Kj","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","../signal/Multiply":"4C0VG","../signal/Scale":"3qxrw","../signal/Signal":"980ri","../source/oscillator/FMOscillator":"3UNlG","./Monophonic":"eKiiZ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gVrZJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * MembraneSynth makes kick and tom sounds using a single oscillator
 * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator
 * is routed through a Tone.AmplitudeEnvelope to the output. The drum
 * quality of the sound comes from the frequency envelope applied
 * during MembraneSynth.triggerAttack(note). The frequency envelope
 * starts at <code>note * .octaves</code> and ramps to <code>note</code>
 * over the duration of <code>.pitchDecay</code>.
 * @example
 * const synth = new Tone.MembraneSynth().toDestination();
 * synth.triggerAttackRelease("C2", "8n");
 * @category Instrument
 */ parcelHelpers.export(exports, "MembraneSynth", ()=>MembraneSynth);
var _tslib = require("tslib");
var _frequency = require("../core/type/Frequency");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
var _monophonic = require("./Monophonic");
var _synth = require("./Synth");
var _decorator = require("../core/util/Decorator");
class MembraneSynth extends (0, _synth.Synth) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(MembraneSynth.getDefaults(), arguments));
        this.name = "MembraneSynth";
        /**
         * Portamento is ignored in this synth. use pitch decay instead.
         */ this.portamento = 0;
        const options = (0, _defaults.optionsFromArguments)(MembraneSynth.getDefaults(), arguments);
        this.pitchDecay = options.pitchDecay;
        this.octaves = options.octaves;
        (0, _interface.readOnly)(this, [
            "oscillator",
            "envelope"
        ]);
    }
    static getDefaults() {
        return (0, _defaults.deepMerge)((0, _monophonic.Monophonic).getDefaults(), (0, _synth.Synth).getDefaults(), {
            envelope: {
                attack: 0.001,
                attackCurve: "exponential",
                decay: 0.4,
                release: 1.4,
                sustain: 0.01
            },
            octaves: 10,
            oscillator: {
                type: "sine"
            },
            pitchDecay: 0.05
        });
    }
    setNote(note, time) {
        const seconds = this.toSeconds(time);
        const hertz = this.toFrequency(note instanceof (0, _frequency.FrequencyClass) ? note.toFrequency() : note);
        const maxNote = hertz * this.octaves;
        this.oscillator.frequency.setValueAtTime(maxNote, seconds);
        this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));
        return this;
    }
    dispose() {
        super.dispose();
        return this;
    }
}
(0, _tslib.__decorate)([
    (0, _decorator.range)(0)
], MembraneSynth.prototype, "octaves", void 0);
(0, _tslib.__decorate)([
    (0, _decorator.timeRange)(0)
], MembraneSynth.prototype, "pitchDecay", void 0);

},{"tslib":"lRdW5","../core/type/Frequency":"bObwr","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","./Monophonic":"eKiiZ","./Synth":"kwmGi","../core/util/Decorator":"fl7ql","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hhi7P":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Tone.NoiseSynth is composed of [[Noise]] through an [[AmplitudeEnvelope]].
 * ```
 * +-------+   +-------------------+
 * | Noise +>--> AmplitudeEnvelope +>--> Output
 * +-------+   +-------------------+
 * ```
 * @example
 * const noiseSynth = new Tone.NoiseSynth().toDestination();
 * noiseSynth.triggerAttackRelease("8n", 0.05);
 * @category Instrument
 */ parcelHelpers.export(exports, "NoiseSynth", ()=>NoiseSynth);
var _amplitudeEnvelope = require("../component/envelope/AmplitudeEnvelope");
var _defaults = require("../core/util/Defaults");
var _noise = require("../source/Noise");
var _instrument = require("./Instrument");
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _envelope = require("../component/envelope/Envelope");
var _source = require("../source/Source");
class NoiseSynth extends (0, _instrument.Instrument) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(NoiseSynth.getDefaults(), arguments));
        this.name = "NoiseSynth";
        const options = (0, _defaults.optionsFromArguments)(NoiseSynth.getDefaults(), arguments);
        this.noise = new (0, _noise.Noise)(Object.assign({
            context: this.context
        }, options.noise));
        this.envelope = new (0, _amplitudeEnvelope.AmplitudeEnvelope)(Object.assign({
            context: this.context
        }, options.envelope));
        // connect the noise to the output
        this.noise.chain(this.envelope, this.output);
    }
    static getDefaults() {
        return Object.assign((0, _instrument.Instrument).getDefaults(), {
            envelope: Object.assign((0, _defaults.omitFromObject)((0, _envelope.Envelope).getDefaults(), Object.keys((0, _toneAudioNode.ToneAudioNode).getDefaults())), {
                decay: 0.1,
                sustain: 0.0
            }),
            noise: Object.assign((0, _defaults.omitFromObject)((0, _noise.Noise).getDefaults(), Object.keys((0, _source.Source).getDefaults())), {
                type: "white"
            })
        });
    }
    /**
     * Start the attack portion of the envelopes. Unlike other
     * instruments, Tone.NoiseSynth doesn't have a note.
     * @example
     * const noiseSynth = new Tone.NoiseSynth().toDestination();
     * noiseSynth.triggerAttack();
     */ triggerAttack(time, velocity = 1) {
        time = this.toSeconds(time);
        // the envelopes
        this.envelope.triggerAttack(time, velocity);
        // start the noise
        this.noise.start(time);
        if (this.envelope.sustain === 0) this.noise.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));
        return this;
    }
    /**
     * Start the release portion of the envelopes.
     */ triggerRelease(time) {
        time = this.toSeconds(time);
        this.envelope.triggerRelease(time);
        this.noise.stop(time + this.toSeconds(this.envelope.release));
        return this;
    }
    sync() {
        if (this._syncState()) {
            this._syncMethod("triggerAttack", 0);
            this._syncMethod("triggerRelease", 0);
        }
        return this;
    }
    triggerAttackRelease(duration, time, velocity = 1) {
        time = this.toSeconds(time);
        duration = this.toSeconds(duration);
        this.triggerAttack(time, velocity);
        this.triggerRelease(time + duration);
        return this;
    }
    dispose() {
        super.dispose();
        this.noise.dispose();
        this.envelope.dispose();
        return this;
    }
}

},{"../component/envelope/AmplitudeEnvelope":"l33WV","../core/util/Defaults":"a9M5s","../source/Noise":"cOpzx","./Instrument":"cFM2P","../core/context/ToneAudioNode":"kZ3Kj","../component/envelope/Envelope":"cU1tT","../source/Source":"eBYFz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4DPlg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Karplus-String string synthesis.
 * @example
 * const plucky = new Tone.PluckSynth().toDestination();
 * plucky.triggerAttack("C4", "+0.5");
 * plucky.triggerAttack("C3", "+1");
 * plucky.triggerAttack("C2", "+1.5");
 * plucky.triggerAttack("C1", "+2");
 * @category Instrument
 */ parcelHelpers.export(exports, "PluckSynth", ()=>PluckSynth);
var _lowpassCombFilter = require("../component/filter/LowpassCombFilter");
var _defaults = require("../core/util/Defaults");
var _noise = require("../source/Noise");
var _instrument = require("./Instrument");
class PluckSynth extends (0, _instrument.Instrument) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(PluckSynth.getDefaults(), arguments));
        this.name = "PluckSynth";
        const options = (0, _defaults.optionsFromArguments)(PluckSynth.getDefaults(), arguments);
        this._noise = new (0, _noise.Noise)({
            context: this.context,
            type: "pink"
        });
        this.attackNoise = options.attackNoise;
        this._lfcf = new (0, _lowpassCombFilter.LowpassCombFilter)({
            context: this.context,
            dampening: options.dampening,
            resonance: options.resonance
        });
        this.resonance = options.resonance;
        this.release = options.release;
        this._noise.connect(this._lfcf);
        this._lfcf.connect(this.output);
    }
    static getDefaults() {
        return (0, _defaults.deepMerge)((0, _instrument.Instrument).getDefaults(), {
            attackNoise: 1,
            dampening: 4000,
            resonance: 0.7,
            release: 1
        });
    }
    /**
     * The dampening control. i.e. the lowpass filter frequency of the comb filter
     * @min 0
     * @max 7000
     */ get dampening() {
        return this._lfcf.dampening;
    }
    set dampening(fq) {
        this._lfcf.dampening = fq;
    }
    triggerAttack(note, time) {
        const freq = this.toFrequency(note);
        time = this.toSeconds(time);
        const delayAmount = 1 / freq;
        this._lfcf.delayTime.setValueAtTime(delayAmount, time);
        this._noise.start(time);
        this._noise.stop(time + delayAmount * this.attackNoise);
        this._lfcf.resonance.cancelScheduledValues(time);
        this._lfcf.resonance.setValueAtTime(this.resonance, time);
        return this;
    }
    /**
     * Ramp down the [[resonance]] to 0 over the duration of the release time.
     */ triggerRelease(time) {
        this._lfcf.resonance.linearRampTo(0, this.release, time);
        return this;
    }
    dispose() {
        super.dispose();
        this._noise.dispose();
        this._lfcf.dispose();
        return this;
    }
}

},{"../component/filter/LowpassCombFilter":"01n6w","../core/util/Defaults":"a9M5s","../source/Noise":"cOpzx","./Instrument":"cFM2P","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"01n6w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A lowpass feedback comb filter. It is similar to
 * [[FeedbackCombFilter]], but includes a lowpass filter.
 * @category Component
 */ parcelHelpers.export(exports, "LowpassCombFilter", ()=>LowpassCombFilter);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _feedbackCombFilter = require("./FeedbackCombFilter");
var _onePoleFilter = require("./OnePoleFilter");
class LowpassCombFilter extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(LowpassCombFilter.getDefaults(), arguments, [
            "delayTime",
            "resonance",
            "dampening"
        ]));
        this.name = "LowpassCombFilter";
        const options = (0, _defaults.optionsFromArguments)(LowpassCombFilter.getDefaults(), arguments, [
            "delayTime",
            "resonance",
            "dampening"
        ]);
        this._combFilter = this.output = new (0, _feedbackCombFilter.FeedbackCombFilter)({
            context: this.context,
            delayTime: options.delayTime,
            resonance: options.resonance
        });
        this.delayTime = this._combFilter.delayTime;
        this.resonance = this._combFilter.resonance;
        this._lowpass = this.input = new (0, _onePoleFilter.OnePoleFilter)({
            context: this.context,
            frequency: options.dampening,
            type: "lowpass"
        });
        // connections
        this._lowpass.connect(this._combFilter);
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            dampening: 3000,
            delayTime: 0.1,
            resonance: 0.5
        });
    }
    /**
     * The dampening control of the feedback
     */ get dampening() {
        return this._lowpass.frequency;
    }
    set dampening(fq) {
        this._lowpass.frequency = fq;
    }
    dispose() {
        super.dispose();
        this._combFilter.dispose();
        this._lowpass.dispose();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","./FeedbackCombFilter":"iMAnY","./OnePoleFilter":"1CfWn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iMAnY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Comb filters are basic building blocks for physical modeling. Read more
 * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).
 *
 * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the
 * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the
 * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode.
 * @category Component
 */ parcelHelpers.export(exports, "FeedbackCombFilter", ()=>FeedbackCombFilter);
var _gain = require("../../core/context/Gain");
var _param = require("../../core/context/Param");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _toneAudioWorklet = require("../../core/worklet/ToneAudioWorklet");
var _feedbackCombFilterWorklet = require("./FeedbackCombFilter.worklet");
class FeedbackCombFilter extends (0, _toneAudioWorklet.ToneAudioWorklet) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(FeedbackCombFilter.getDefaults(), arguments, [
            "delayTime",
            "resonance"
        ]));
        this.name = "FeedbackCombFilter";
        const options = (0, _defaults.optionsFromArguments)(FeedbackCombFilter.getDefaults(), arguments, [
            "delayTime",
            "resonance"
        ]);
        this.input = new (0, _gain.Gain)({
            context: this.context
        });
        this.output = new (0, _gain.Gain)({
            context: this.context
        });
        this.delayTime = new (0, _param.Param)({
            context: this.context,
            value: options.delayTime,
            units: "time",
            minValue: 0,
            maxValue: 1,
            param: this._dummyParam,
            swappable: true
        });
        this.resonance = new (0, _param.Param)({
            context: this.context,
            value: options.resonance,
            units: "normalRange",
            param: this._dummyParam,
            swappable: true
        });
        (0, _interface.readOnly)(this, [
            "resonance",
            "delayTime"
        ]);
    }
    _audioWorkletName() {
        return 0, _feedbackCombFilterWorklet.workletName;
    }
    /**
     * The default parameters
     */ static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            delayTime: 0.1,
            resonance: 0.5
        });
    }
    onReady(node) {
        (0, _toneAudioNode.connectSeries)(this.input, node, this.output);
        const delayTime = node.parameters.get("delayTime");
        this.delayTime.setParam(delayTime);
        const feedback = node.parameters.get("feedback");
        this.resonance.setParam(feedback);
    }
    dispose() {
        super.dispose();
        this.input.dispose();
        this.output.dispose();
        this.delayTime.dispose();
        this.resonance.dispose();
        return this;
    }
}

},{"../../core/context/Gain":"kj68Y","../../core/context/Param":"5PVlJ","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../core/worklet/ToneAudioWorklet":"gJKvW","./FeedbackCombFilter.worklet":"gdia3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gJKvW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ToneAudioWorklet", ()=>ToneAudioWorklet);
var _toneAudioNode = require("../context/ToneAudioNode");
var _interface = require("../util/Interface");
var _workletGlobalScope = require("./WorkletGlobalScope");
class ToneAudioWorklet extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(options){
        super(options);
        this.name = "ToneAudioWorklet";
        /**
         * The constructor options for the node
         */ this.workletOptions = {};
        /**
         * Callback which is invoked when there is an error in the processing
         */ this.onprocessorerror = (0, _interface.noOp);
        const blobUrl = URL.createObjectURL(new Blob([
            (0, _workletGlobalScope.getWorkletGlobalScope)()
        ], {
            type: "text/javascript"
        }));
        const name = this._audioWorkletName();
        this._dummyGain = this.context.createGain();
        this._dummyParam = this._dummyGain.gain;
        // Register the processor
        this.context.addAudioWorkletModule(blobUrl, name).then(()=>{
            // create the worklet when it's read
            if (!this.disposed) {
                this._worklet = this.context.createAudioWorkletNode(name, this.workletOptions);
                this._worklet.onprocessorerror = this.onprocessorerror.bind(this);
                this.onReady(this._worklet);
            }
        });
    }
    dispose() {
        super.dispose();
        this._dummyGain.disconnect();
        if (this._worklet) {
            this._worklet.port.postMessage("dispose");
            this._worklet.disconnect();
        }
        return this;
    }
}

},{"../context/ToneAudioNode":"kZ3Kj","../util/Interface":"hVOjA","./WorkletGlobalScope":"KZYDB","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"KZYDB":[function(require,module,exports) {
/**
 * All of the classes or functions which are loaded into the AudioWorkletGlobalScope
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Add a class to the AudioWorkletGlobalScope
 */ parcelHelpers.export(exports, "addToWorklet", ()=>addToWorklet);
/**
 * Register a processor in the AudioWorkletGlobalScope with the given name
 */ parcelHelpers.export(exports, "registerProcessor", ()=>registerProcessor);
/**
 * Get all of the modules which have been registered to the AudioWorkletGlobalScope
 */ parcelHelpers.export(exports, "getWorkletGlobalScope", ()=>getWorkletGlobalScope);
const workletContext = new Set();
function addToWorklet(classOrFunction) {
    workletContext.add(classOrFunction);
}
function registerProcessor(name, classDesc) {
    const processor = /* javascript */ `registerProcessor("${name}", ${classDesc})`;
    workletContext.add(processor);
}
function getWorkletGlobalScope() {
    return Array.from(workletContext).join("\n");
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gdia3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "workletName", ()=>workletName);
var _singleIOProcessorWorklet = require("../../core/worklet/SingleIOProcessor.worklet");
var _delayLineWorklet = require("../../core/worklet/DelayLine.worklet");
var _workletGlobalScope = require("../../core/worklet/WorkletGlobalScope");
const workletName = "feedback-comb-filter";
const feedbackCombFilter = /* javascript */ `
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;
(0, _workletGlobalScope.registerProcessor)(workletName, feedbackCombFilter);

},{"../../core/worklet/SingleIOProcessor.worklet":"c8hmn","../../core/worklet/DelayLine.worklet":"7MQGt","../../core/worklet/WorkletGlobalScope":"KZYDB","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c8hmn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "singleIOProcess", ()=>singleIOProcess);
var _toneAudioWorkletProcessorWorklet = require("./ToneAudioWorkletProcessor.worklet");
var _workletGlobalScope = require("./WorkletGlobalScope");
const singleIOProcess = /* javascript */ `
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;
(0, _workletGlobalScope.addToWorklet)(singleIOProcess);

},{"./ToneAudioWorkletProcessor.worklet":"gKUpY","./WorkletGlobalScope":"KZYDB","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gKUpY":[function(require,module,exports) {
var _workletGlobalScope = require("./WorkletGlobalScope");
const toneAudioWorkletProcessor = /* javascript */ `
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;
(0, _workletGlobalScope.addToWorklet)(toneAudioWorkletProcessor);

},{"./WorkletGlobalScope":"KZYDB"}],"7MQGt":[function(require,module,exports) {
var _workletGlobalScope = require("./WorkletGlobalScope");
const delayLine = /* javascript */ `
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;
(0, _workletGlobalScope.addToWorklet)(delayLine);

},{"./WorkletGlobalScope":"KZYDB"}],"1CfWn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A one pole filter with 6db-per-octave rolloff. Either "highpass" or "lowpass".
 * Note that changing the type or frequency may result in a discontinuity which
 * can sound like a click or pop.
 * References:
 * * http://www.earlevel.com/main/2012/12/15/a-one-pole-filter/
 * * http://www.dspguide.com/ch19/2.htm
 * * https://github.com/vitaliy-bobrov/js-rocks/blob/master/src/app/audio/effects/one-pole-filters.ts
 * @category Component
 */ parcelHelpers.export(exports, "OnePoleFilter", ()=>OnePoleFilter);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _gain = require("../../core/context/Gain");
class OnePoleFilter extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(OnePoleFilter.getDefaults(), arguments, [
            "frequency",
            "type"
        ]));
        this.name = "OnePoleFilter";
        const options = (0, _defaults.optionsFromArguments)(OnePoleFilter.getDefaults(), arguments, [
            "frequency",
            "type"
        ]);
        this._frequency = options.frequency;
        this._type = options.type;
        this.input = new (0, _gain.Gain)({
            context: this.context
        });
        this.output = new (0, _gain.Gain)({
            context: this.context
        });
        this._createFilter();
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            frequency: 880,
            type: "lowpass"
        });
    }
    /**
     * Create a filter and dispose the old one
     */ _createFilter() {
        const oldFilter = this._filter;
        const freq = this.toFrequency(this._frequency);
        const t = 1 / (2 * Math.PI * freq);
        if (this._type === "lowpass") {
            const a0 = 1 / (t * this.context.sampleRate);
            const b1 = a0 - 1;
            this._filter = this.context.createIIRFilter([
                a0,
                0
            ], [
                1,
                b1
            ]);
        } else {
            const b1 = 1 / (t * this.context.sampleRate) - 1;
            this._filter = this.context.createIIRFilter([
                1,
                -1
            ], [
                1,
                b1
            ]);
        }
        this.input.chain(this._filter, this.output);
        if (oldFilter) // dispose it on the next block
        this.context.setTimeout(()=>{
            if (!this.disposed) {
                this.input.disconnect(oldFilter);
                oldFilter.disconnect();
            }
        }, this.blockTime);
    }
    /**
     * The frequency value.
     */ get frequency() {
        return this._frequency;
    }
    set frequency(fq) {
        this._frequency = fq;
        this._createFilter();
    }
    /**
     * The OnePole Filter type, either "highpass" or "lowpass"
     */ get type() {
        return this._type;
    }
    set type(t) {
        this._type = t;
        this._createFilter();
    }
    /**
     * Get the frequency response curve. This curve represents how the filter
     * responses to frequencies between 20hz-20khz.
     * @param  len The number of values to return
     * @return The frequency response curve between 20-20kHz
     */ getFrequencyResponse(len = 128) {
        const freqValues = new Float32Array(len);
        for(let i = 0; i < len; i++){
            const norm = Math.pow(i / len, 2);
            const freq = norm * 19980 + 20;
            freqValues[i] = freq;
        }
        const magValues = new Float32Array(len);
        const phaseValues = new Float32Array(len);
        this._filter.getFrequencyResponse(freqValues, magValues, phaseValues);
        return magValues;
    }
    dispose() {
        super.dispose();
        this.input.dispose();
        this.output.dispose();
        this._filter.disconnect();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/context/Gain":"kj68Y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6hx2H":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * PolySynth handles voice creation and allocation for any
 * instruments passed in as the second paramter. PolySynth is
 * not a synthesizer by itself, it merely manages voices of
 * one of the other types of synths, allowing any of the
 * monophonic synthesizers to be polyphonic.
 *
 * @example
 * const synth = new Tone.PolySynth().toDestination();
 * // set the attributes across all the voices using 'set'
 * synth.set({ detune: -1200 });
 * // play a chord
 * synth.triggerAttackRelease(["C4", "E4", "A4"], 1);
 * @category Instrument
 */ parcelHelpers.export(exports, "PolySynth", ()=>PolySynth);
var _midi = require("../core/type/Midi");
var _defaults = require("../core/util/Defaults");
var _typeCheck = require("../core/util/TypeCheck");
var _instrument = require("./Instrument");
var _synth = require("./Synth");
var _debug = require("../core/util/Debug");
class PolySynth extends (0, _instrument.Instrument) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(PolySynth.getDefaults(), arguments, [
            "voice",
            "options"
        ]));
        this.name = "PolySynth";
        /**
         * The voices which are not currently in use
         */ this._availableVoices = [];
        /**
         * The currently active voices
         */ this._activeVoices = [];
        /**
         * All of the allocated voices for this synth.
         */ this._voices = [];
        /**
         * The GC timeout. Held so that it could be cancelled when the node is disposed.
         */ this._gcTimeout = -1;
        /**
         * A moving average of the number of active voices
         */ this._averageActiveVoices = 0;
        const options = (0, _defaults.optionsFromArguments)(PolySynth.getDefaults(), arguments, [
            "voice",
            "options"
        ]);
        // check against the old API (pre 14.3.0)
        (0, _debug.assert)(!(0, _typeCheck.isNumber)(options.voice), "DEPRECATED: The polyphony count is no longer the first argument.");
        const defaults = options.voice.getDefaults();
        this.options = Object.assign(defaults, options.options);
        this.voice = options.voice;
        this.maxPolyphony = options.maxPolyphony;
        // create the first voice
        this._dummyVoice = this._getNextAvailableVoice();
        // remove it from the voices list
        const index = this._voices.indexOf(this._dummyVoice);
        this._voices.splice(index, 1);
        // kick off the GC interval
        this._gcTimeout = this.context.setInterval(this._collectGarbage.bind(this), 1);
    }
    static getDefaults() {
        return Object.assign((0, _instrument.Instrument).getDefaults(), {
            maxPolyphony: 32,
            options: {},
            voice: (0, _synth.Synth)
        });
    }
    /**
     * The number of active voices.
     */ get activeVoices() {
        return this._activeVoices.length;
    }
    /**
     * Invoked when the source is done making sound, so that it can be
     * readded to the pool of available voices
     */ _makeVoiceAvailable(voice) {
        this._availableVoices.push(voice);
        // remove the midi note from 'active voices'
        const activeVoiceIndex = this._activeVoices.findIndex((e)=>e.voice === voice);
        this._activeVoices.splice(activeVoiceIndex, 1);
    }
    /**
     * Get an available voice from the pool of available voices.
     * If one is not available and the maxPolyphony limit is reached,
     * steal a voice, otherwise return null.
     */ _getNextAvailableVoice() {
        // if there are available voices, return the first one
        if (this._availableVoices.length) return this._availableVoices.shift();
        else if (this._voices.length < this.maxPolyphony) {
            // otherwise if there is still more maxPolyphony, make a new voice
            const voice = new this.voice(Object.assign(this.options, {
                context: this.context,
                onsilence: this._makeVoiceAvailable.bind(this)
            }));
            voice.connect(this.output);
            this._voices.push(voice);
            return voice;
        } else (0, _debug.warn)("Max polyphony exceeded. Note dropped.");
    }
    /**
     * Occasionally check if there are any allocated voices which can be cleaned up.
     */ _collectGarbage() {
        this._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);
        if (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {
            // take off an available note
            const firstAvail = this._availableVoices.shift();
            const index = this._voices.indexOf(firstAvail);
            this._voices.splice(index, 1);
            if (!this.context.isOffline) firstAvail.dispose();
        }
    }
    /**
     * Internal method which triggers the attack
     */ _triggerAttack(notes, time, velocity) {
        notes.forEach((note)=>{
            const midiNote = new (0, _midi.MidiClass)(this.context, note).toMidi();
            const voice = this._getNextAvailableVoice();
            if (voice) {
                voice.triggerAttack(note, time, velocity);
                this._activeVoices.push({
                    midi: midiNote,
                    voice,
                    released: false
                });
                this.log("triggerAttack", note, time);
            }
        });
    }
    /**
     * Internal method which triggers the release
     */ _triggerRelease(notes, time) {
        notes.forEach((note)=>{
            const midiNote = new (0, _midi.MidiClass)(this.context, note).toMidi();
            const event = this._activeVoices.find(({ midi, released })=>midi === midiNote && !released);
            if (event) {
                // trigger release on that note
                event.voice.triggerRelease(time);
                // mark it as released
                event.released = true;
                this.log("triggerRelease", note, time);
            }
        });
    }
    /**
     * Schedule the attack/release events. If the time is in the future, then it should set a timeout
     * to wait for just-in-time scheduling
     */ _scheduleEvent(type, notes, time, velocity) {
        (0, _debug.assert)(!this.disposed, "Synth was already disposed");
        // if the notes are greater than this amount of time in the future, they should be scheduled with setTimeout
        if (time <= this.now()) {
            // do it immediately
            if (type === "attack") this._triggerAttack(notes, time, velocity);
            else this._triggerRelease(notes, time);
        } else // schedule it to start in the future
        this.context.setTimeout(()=>{
            this._scheduleEvent(type, notes, time, velocity);
        }, time - this.now());
    }
    /**
     * Trigger the attack portion of the note
     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.
     * @param  time  The start time of the note.
     * @param velocity The velocity of the note.
     * @example
     * const synth = new Tone.PolySynth(Tone.FMSynth).toDestination();
     * // trigger a chord immediately with a velocity of 0.2
     * synth.triggerAttack(["Ab3", "C4", "F5"], Tone.now(), 0.2);
     */ triggerAttack(notes, time, velocity) {
        if (!Array.isArray(notes)) notes = [
            notes
        ];
        const computedTime = this.toSeconds(time);
        this._scheduleEvent("attack", notes, computedTime, velocity);
        return this;
    }
    /**
     * Trigger the release of the note. Unlike monophonic instruments,
     * a note (or array of notes) needs to be passed in as the first argument.
     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.
     * @param  time  When the release will be triggered.
     * @example
     * @example
     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();
     * poly.triggerAttack(["Ab3", "C4", "F5"]);
     * // trigger the release of the given notes.
     * poly.triggerRelease(["Ab3", "C4"], "+1");
     * poly.triggerRelease("F5", "+3");
     */ triggerRelease(notes, time) {
        if (!Array.isArray(notes)) notes = [
            notes
        ];
        const computedTime = this.toSeconds(time);
        this._scheduleEvent("release", notes, computedTime);
        return this;
    }
    /**
     * Trigger the attack and release after the specified duration
     * @param  notes The notes to play. Accepts a single  Frequency or an array of frequencies.
     * @param  duration the duration of the note
     * @param  time  if no time is given, defaults to now
     * @param  velocity the velocity of the attack (0-1)
     * @example
     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();
     * // can pass in an array of durations as well
     * poly.triggerAttackRelease(["Eb3", "G4", "Bb4", "D5"], [4, 3, 2, 1]);
     */ triggerAttackRelease(notes, duration, time, velocity) {
        const computedTime = this.toSeconds(time);
        this.triggerAttack(notes, computedTime, velocity);
        if ((0, _typeCheck.isArray)(duration)) {
            (0, _debug.assert)((0, _typeCheck.isArray)(notes), "If the duration is an array, the notes must also be an array");
            notes;
            for(let i = 0; i < notes.length; i++){
                const d = duration[Math.min(i, duration.length - 1)];
                const durationSeconds = this.toSeconds(d);
                (0, _debug.assert)(durationSeconds > 0, "The duration must be greater than 0");
                this.triggerRelease(notes[i], computedTime + durationSeconds);
            }
        } else {
            const durationSeconds = this.toSeconds(duration);
            (0, _debug.assert)(durationSeconds > 0, "The duration must be greater than 0");
            this.triggerRelease(notes, computedTime + durationSeconds);
        }
        return this;
    }
    sync() {
        if (this._syncState()) {
            this._syncMethod("triggerAttack", 1);
            this._syncMethod("triggerRelease", 1);
        }
        return this;
    }
    /**
     * Set a member/attribute of the voices
     * @example
     * const poly = new Tone.PolySynth().toDestination();
     * // set all of the voices using an options object for the synth type
     * poly.set({
     * 	envelope: {
     * 		attack: 0.25
     * 	}
     * });
     * poly.triggerAttackRelease("Bb3", 0.2);
     */ set(options) {
        // remove options which are controlled by the PolySynth
        const sanitizedOptions = (0, _defaults.omitFromObject)(options, [
            "onsilence",
            "context"
        ]);
        // store all of the options
        this.options = (0, _defaults.deepMerge)(this.options, sanitizedOptions);
        this._voices.forEach((voice)=>voice.set(sanitizedOptions));
        this._dummyVoice.set(sanitizedOptions);
        return this;
    }
    get() {
        return this._dummyVoice.get();
    }
    /**
     * Trigger the release portion of all the currently active voices immediately.
     * Useful for silencing the synth.
     */ releaseAll(time) {
        const computedTime = this.toSeconds(time);
        this._activeVoices.forEach(({ voice })=>{
            voice.triggerRelease(computedTime);
        });
        return this;
    }
    dispose() {
        super.dispose();
        this._dummyVoice.dispose();
        this._voices.forEach((v)=>v.dispose());
        this._activeVoices = [];
        this._availableVoices = [];
        this.context.clearInterval(this._gcTimeout);
        return this;
    }
}

},{"../core/type/Midi":"kST2k","../core/util/Defaults":"a9M5s","../core/util/TypeCheck":"eMH5A","./Instrument":"cFM2P","./Synth":"kwmGi","../core/util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dBIID":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Pass in an object which maps the note's pitch or midi value to the url,
 * then you can trigger the attack and release of that note like other instruments.
 * By automatically repitching the samples, it is possible to play pitches which
 * were not explicitly included which can save loading time.
 *
 * For sample or buffer playback where repitching is not necessary,
 * use [[Player]].
 * @example
 * const sampler = new Tone.Sampler({
 * 	urls: {
 * 		A1: "A1.mp3",
 * 		A2: "A2.mp3",
 * 	},
 * 	baseUrl: "https://tonejs.github.io/audio/casio/",
 * 	onload: () => {
 * 		sampler.triggerAttackRelease(["C1", "E1", "G1", "B1"], 0.5);
 * 	}
 * }).toDestination();
 * @category Instrument
 */ parcelHelpers.export(exports, "Sampler", ()=>Sampler);
var _tslib = require("tslib");
var _toneAudioBuffers = require("../core/context/ToneAudioBuffers");
var _conversions = require("../core/type/Conversions");
var _frequency = require("../core/type/Frequency");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
var _typeCheck = require("../core/util/TypeCheck");
var _instrument = require("../instrument/Instrument");
var _toneBufferSource = require("../source/buffer/ToneBufferSource");
var _decorator = require("../core/util/Decorator");
var _debug = require("../core/util/Debug");
class Sampler extends (0, _instrument.Instrument) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Sampler.getDefaults(), arguments, [
            "urls",
            "onload",
            "baseUrl"
        ], "urls"));
        this.name = "Sampler";
        /**
         * The object of all currently playing BufferSources
         */ this._activeSources = new Map();
        const options = (0, _defaults.optionsFromArguments)(Sampler.getDefaults(), arguments, [
            "urls",
            "onload",
            "baseUrl"
        ], "urls");
        const urlMap = {};
        Object.keys(options.urls).forEach((note)=>{
            const noteNumber = parseInt(note, 10);
            (0, _debug.assert)((0, _typeCheck.isNote)(note) || (0, _typeCheck.isNumber)(noteNumber) && isFinite(noteNumber), `url key is neither a note or midi pitch: ${note}`);
            if ((0, _typeCheck.isNote)(note)) {
                // convert the note name to MIDI
                const mid = new (0, _frequency.FrequencyClass)(this.context, note).toMidi();
                urlMap[mid] = options.urls[note];
            } else if ((0, _typeCheck.isNumber)(noteNumber) && isFinite(noteNumber)) // otherwise if it's numbers assume it's midi
            urlMap[noteNumber] = options.urls[noteNumber];
        });
        this._buffers = new (0, _toneAudioBuffers.ToneAudioBuffers)({
            urls: urlMap,
            onload: options.onload,
            baseUrl: options.baseUrl,
            onerror: options.onerror
        });
        this.attack = options.attack;
        this.release = options.release;
        this.curve = options.curve;
        // invoke the callback if it's already loaded
        if (this._buffers.loaded) // invoke onload deferred
        Promise.resolve().then(options.onload);
    }
    static getDefaults() {
        return Object.assign((0, _instrument.Instrument).getDefaults(), {
            attack: 0,
            baseUrl: "",
            curve: "exponential",
            onload: (0, _interface.noOp),
            onerror: (0, _interface.noOp),
            release: 0.1,
            urls: {}
        });
    }
    /**
     * Returns the difference in steps between the given midi note at the closets sample.
     */ _findClosest(midi) {
        // searches within 8 octaves of the given midi note
        const MAX_INTERVAL = 96;
        let interval = 0;
        while(interval < MAX_INTERVAL){
            // check above and below
            if (this._buffers.has(midi + interval)) return -interval;
            else if (this._buffers.has(midi - interval)) return interval;
            interval++;
        }
        throw new Error(`No available buffers for note: ${midi}`);
    }
    /**
     * @param  notes	The note to play, or an array of notes.
     * @param  time     When to play the note
     * @param  velocity The velocity to play the sample back.
     */ triggerAttack(notes, time, velocity = 1) {
        this.log("triggerAttack", notes, time, velocity);
        if (!Array.isArray(notes)) notes = [
            notes
        ];
        notes.forEach((note)=>{
            const midiFloat = (0, _conversions.ftomf)(new (0, _frequency.FrequencyClass)(this.context, note).toFrequency());
            const midi = Math.round(midiFloat);
            const remainder = midiFloat - midi;
            // find the closest note pitch
            const difference = this._findClosest(midi);
            const closestNote = midi - difference;
            const buffer = this._buffers.get(closestNote);
            const playbackRate = (0, _conversions.intervalToFrequencyRatio)(difference + remainder);
            // play that note
            const source = new (0, _toneBufferSource.ToneBufferSource)({
                url: buffer,
                context: this.context,
                curve: this.curve,
                fadeIn: this.attack,
                fadeOut: this.release,
                playbackRate
            }).connect(this.output);
            source.start(time, 0, buffer.duration / playbackRate, velocity);
            // add it to the active sources
            if (!(0, _typeCheck.isArray)(this._activeSources.get(midi))) this._activeSources.set(midi, []);
            this._activeSources.get(midi).push(source);
            // remove it when it's done
            source.onended = ()=>{
                if (this._activeSources && this._activeSources.has(midi)) {
                    const sources = this._activeSources.get(midi);
                    const index = sources.indexOf(source);
                    if (index !== -1) sources.splice(index, 1);
                }
            };
        });
        return this;
    }
    /**
     * @param  notes	The note to release, or an array of notes.
     * @param  time     	When to release the note.
     */ triggerRelease(notes, time) {
        this.log("triggerRelease", notes, time);
        if (!Array.isArray(notes)) notes = [
            notes
        ];
        notes.forEach((note)=>{
            const midi = new (0, _frequency.FrequencyClass)(this.context, note).toMidi();
            // find the note
            if (this._activeSources.has(midi) && this._activeSources.get(midi).length) {
                const sources = this._activeSources.get(midi);
                time = this.toSeconds(time);
                sources.forEach((source)=>{
                    source.stop(time);
                });
                this._activeSources.set(midi, []);
            }
        });
        return this;
    }
    /**
     * Release all currently active notes.
     * @param  time     	When to release the notes.
     */ releaseAll(time) {
        const computedTime = this.toSeconds(time);
        this._activeSources.forEach((sources)=>{
            while(sources.length){
                const source = sources.shift();
                source.stop(computedTime);
            }
        });
        return this;
    }
    sync() {
        if (this._syncState()) {
            this._syncMethod("triggerAttack", 1);
            this._syncMethod("triggerRelease", 1);
        }
        return this;
    }
    /**
     * Invoke the attack phase, then after the duration, invoke the release.
     * @param  notes	The note to play and release, or an array of notes.
     * @param  duration The time the note should be held
     * @param  time     When to start the attack
     * @param  velocity The velocity of the attack
     */ triggerAttackRelease(notes, duration, time, velocity = 1) {
        const computedTime = this.toSeconds(time);
        this.triggerAttack(notes, computedTime, velocity);
        if ((0, _typeCheck.isArray)(duration)) {
            (0, _debug.assert)((0, _typeCheck.isArray)(notes), "notes must be an array when duration is array");
            notes.forEach((note, index)=>{
                const d = duration[Math.min(index, duration.length - 1)];
                this.triggerRelease(note, computedTime + this.toSeconds(d));
            });
        } else this.triggerRelease(notes, computedTime + this.toSeconds(duration));
        return this;
    }
    /**
     * Add a note to the sampler.
     * @param  note      The buffer's pitch.
     * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.
     * @param  callback  The callback to invoke when the url is loaded.
     */ add(note, url, callback) {
        (0, _debug.assert)((0, _typeCheck.isNote)(note) || isFinite(note), `note must be a pitch or midi: ${note}`);
        if ((0, _typeCheck.isNote)(note)) {
            // convert the note name to MIDI
            const mid = new (0, _frequency.FrequencyClass)(this.context, note).toMidi();
            this._buffers.add(mid, url, callback);
        } else // otherwise if it's numbers assume it's midi
        this._buffers.add(note, url, callback);
        return this;
    }
    /**
     * If the buffers are loaded or not
     */ get loaded() {
        return this._buffers.loaded;
    }
    /**
     * Clean up
     */ dispose() {
        super.dispose();
        this._buffers.dispose();
        this._activeSources.forEach((sources)=>{
            sources.forEach((source)=>source.dispose());
        });
        this._activeSources.clear();
        return this;
    }
}
(0, _tslib.__decorate)([
    (0, _decorator.timeRange)(0)
], Sampler.prototype, "attack", void 0);
(0, _tslib.__decorate)([
    (0, _decorator.timeRange)(0)
], Sampler.prototype, "release", void 0);

},{"tslib":"lRdW5","../core/context/ToneAudioBuffers":"8zO1I","../core/type/Conversions":"iww1u","../core/type/Frequency":"bObwr","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","../core/util/TypeCheck":"eMH5A","../instrument/Instrument":"cFM2P","../source/buffer/ToneBufferSource":"9FxEt","../core/util/Decorator":"fl7ql","../core/util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eiKIt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _loop = require("./Loop");
parcelHelpers.exportAll(_loop, exports);
var _part = require("./Part");
parcelHelpers.exportAll(_part, exports);
var _pattern = require("./Pattern");
parcelHelpers.exportAll(_pattern, exports);
var _sequence = require("./Sequence");
parcelHelpers.exportAll(_sequence, exports);
var _toneEvent = require("./ToneEvent");
parcelHelpers.exportAll(_toneEvent, exports);

},{"./Loop":"dX4Gv","./Part":"5vWpY","./Pattern":"6vioO","./Sequence":"ekSeO","./ToneEvent":"bq5Fc","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dX4Gv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Loop creates a looped callback at the
 * specified interval. The callback can be
 * started, stopped and scheduled along
 * the Transport's timeline.
 * @example
 * const loop = new Tone.Loop((time) => {
 * 	// triggered every eighth note.
 * 	console.log(time);
 * }, "8n").start(0);
 * Tone.Transport.start();
 * @category Event
 */ parcelHelpers.export(exports, "Loop", ()=>Loop);
var _toneEvent = require("./ToneEvent");
var _toneWithContext = require("../core/context/ToneWithContext");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
class Loop extends (0, _toneWithContext.ToneWithContext) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Loop.getDefaults(), arguments, [
            "callback",
            "interval"
        ]));
        this.name = "Loop";
        const options = (0, _defaults.optionsFromArguments)(Loop.getDefaults(), arguments, [
            "callback",
            "interval"
        ]);
        this._event = new (0, _toneEvent.ToneEvent)({
            context: this.context,
            callback: this._tick.bind(this),
            loop: true,
            loopEnd: options.interval,
            playbackRate: options.playbackRate,
            probability: options.probability
        });
        this.callback = options.callback;
        // set the iterations
        this.iterations = options.iterations;
    }
    static getDefaults() {
        return Object.assign((0, _toneWithContext.ToneWithContext).getDefaults(), {
            interval: "4n",
            callback: (0, _interface.noOp),
            playbackRate: 1,
            iterations: Infinity,
            probability: 1,
            mute: false,
            humanize: false
        });
    }
    /**
     * Start the loop at the specified time along the Transport's timeline.
     * @param  time  When to start the Loop.
     */ start(time) {
        this._event.start(time);
        return this;
    }
    /**
     * Stop the loop at the given time.
     * @param  time  When to stop the Loop.
     */ stop(time) {
        this._event.stop(time);
        return this;
    }
    /**
     * Cancel all scheduled events greater than or equal to the given time
     * @param  time  The time after which events will be cancel.
     */ cancel(time) {
        this._event.cancel(time);
        return this;
    }
    /**
     * Internal function called when the notes should be called
     * @param time  The time the event occurs
     */ _tick(time) {
        this.callback(time);
    }
    /**
     * The state of the Loop, either started or stopped.
     */ get state() {
        return this._event.state;
    }
    /**
     * The progress of the loop as a value between 0-1. 0, when the loop is stopped or done iterating.
     */ get progress() {
        return this._event.progress;
    }
    /**
     * The time between successive callbacks.
     * @example
     * const loop = new Tone.Loop();
     * loop.interval = "8n"; // loop every 8n
     */ get interval() {
        return this._event.loopEnd;
    }
    set interval(interval) {
        this._event.loopEnd = interval;
    }
    /**
     * The playback rate of the loop. The normal playback rate is 1 (no change).
     * A `playbackRate` of 2 would be twice as fast.
     */ get playbackRate() {
        return this._event.playbackRate;
    }
    set playbackRate(rate) {
        this._event.playbackRate = rate;
    }
    /**
     * Random variation +/-0.01s to the scheduled time.
     * Or give it a time value which it will randomize by.
     */ get humanize() {
        return this._event.humanize;
    }
    set humanize(variation) {
        this._event.humanize = variation;
    }
    /**
     * The probably of the callback being invoked.
     */ get probability() {
        return this._event.probability;
    }
    set probability(prob) {
        this._event.probability = prob;
    }
    /**
     * Muting the Loop means that no callbacks are invoked.
     */ get mute() {
        return this._event.mute;
    }
    set mute(mute) {
        this._event.mute = mute;
    }
    /**
     * The number of iterations of the loop. The default value is `Infinity` (loop forever).
     */ get iterations() {
        if (this._event.loop === true) return Infinity;
        else return this._event.loop;
    }
    set iterations(iters) {
        if (iters === Infinity) this._event.loop = true;
        else this._event.loop = iters;
    }
    dispose() {
        super.dispose();
        this._event.dispose();
        return this;
    }
}

},{"./ToneEvent":"bq5Fc","../core/context/ToneWithContext":"gAuzg","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bq5Fc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * ToneEvent abstracts away this.context.transport.schedule and provides a schedulable
 * callback for a single or repeatable events along the timeline.
 *
 * @example
 * const synth = new Tone.PolySynth().toDestination();
 * const chordEvent = new Tone.ToneEvent(((time, chord) => {
 * 	// the chord as well as the exact time of the event
 * 	// are passed in as arguments to the callback function
 * 	synth.triggerAttackRelease(chord, 0.5, time);
 * }), ["D4", "E4", "F4"]);
 * // start the chord at the beginning of the transport timeline
 * chordEvent.start();
 * // loop it every measure for 8 measures
 * chordEvent.loop = 8;
 * chordEvent.loopEnd = "1m";
 * @category Event
 */ parcelHelpers.export(exports, "ToneEvent", ()=>ToneEvent);
var _transport = require("../core/clock/Transport");
var _toneWithContext = require("../core/context/ToneWithContext");
var _ticks = require("../core/type/Ticks");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
var _stateTimeline = require("../core/util/StateTimeline");
var _typeCheck = require("../core/util/TypeCheck");
class ToneEvent extends (0, _toneWithContext.ToneWithContext) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(ToneEvent.getDefaults(), arguments, [
            "callback",
            "value"
        ]));
        this.name = "ToneEvent";
        /**
         * Tracks the scheduled events
         */ this._state = new (0, _stateTimeline.StateTimeline)("stopped");
        /**
         * A delay time from when the event is scheduled to start
         */ this._startOffset = 0;
        const options = (0, _defaults.optionsFromArguments)(ToneEvent.getDefaults(), arguments, [
            "callback",
            "value"
        ]);
        this._loop = options.loop;
        this.callback = options.callback;
        this.value = options.value;
        this._loopStart = this.toTicks(options.loopStart);
        this._loopEnd = this.toTicks(options.loopEnd);
        this._playbackRate = options.playbackRate;
        this._probability = options.probability;
        this._humanize = options.humanize;
        this.mute = options.mute;
        this._playbackRate = options.playbackRate;
        this._state.increasing = true;
        // schedule the events for the first time
        this._rescheduleEvents();
    }
    static getDefaults() {
        return Object.assign((0, _toneWithContext.ToneWithContext).getDefaults(), {
            callback: (0, _interface.noOp),
            humanize: false,
            loop: false,
            loopEnd: "1m",
            loopStart: 0,
            mute: false,
            playbackRate: 1,
            probability: 1,
            value: null
        });
    }
    /**
     * Reschedule all of the events along the timeline
     * with the updated values.
     * @param after Only reschedules events after the given time.
     */ _rescheduleEvents(after = -1) {
        // if no argument is given, schedules all of the events
        this._state.forEachFrom(after, (event)=>{
            let duration;
            if (event.state === "started") {
                if (event.id !== -1) this.context.transport.clear(event.id);
                const startTick = event.time + Math.round(this.startOffset / this._playbackRate);
                if (this._loop === true || (0, _typeCheck.isNumber)(this._loop) && this._loop > 1) {
                    duration = Infinity;
                    if ((0, _typeCheck.isNumber)(this._loop)) duration = this._loop * this._getLoopDuration();
                    const nextEvent = this._state.getAfter(startTick);
                    if (nextEvent !== null) duration = Math.min(duration, nextEvent.time - startTick);
                    if (duration !== Infinity) {
                        // schedule a stop since it's finite duration
                        this._state.setStateAtTime("stopped", startTick + duration + 1, {
                            id: -1
                        });
                        duration = new (0, _ticks.TicksClass)(this.context, duration);
                    }
                    const interval = new (0, _ticks.TicksClass)(this.context, this._getLoopDuration());
                    event.id = this.context.transport.scheduleRepeat(this._tick.bind(this), interval, new (0, _ticks.TicksClass)(this.context, startTick), duration);
                } else event.id = this.context.transport.schedule(this._tick.bind(this), new (0, _ticks.TicksClass)(this.context, startTick));
            }
        });
    }
    /**
     * Returns the playback state of the note, either "started" or "stopped".
     */ get state() {
        return this._state.getValueAtTime(this.context.transport.ticks);
    }
    /**
     * The start from the scheduled start time.
     */ get startOffset() {
        return this._startOffset;
    }
    set startOffset(offset) {
        this._startOffset = offset;
    }
    /**
     * The probability of the notes being triggered.
     */ get probability() {
        return this._probability;
    }
    set probability(prob) {
        this._probability = prob;
    }
    /**
     * If set to true, will apply small random variation
     * to the callback time. If the value is given as a time, it will randomize
     * by that amount.
     * @example
     * const event = new Tone.ToneEvent();
     * event.humanize = true;
     */ get humanize() {
        return this._humanize;
    }
    set humanize(variation) {
        this._humanize = variation;
    }
    /**
     * Start the note at the given time.
     * @param  time  When the event should start.
     */ start(time) {
        const ticks = this.toTicks(time);
        if (this._state.getValueAtTime(ticks) === "stopped") {
            this._state.add({
                id: -1,
                state: "started",
                time: ticks
            });
            this._rescheduleEvents(ticks);
        }
        return this;
    }
    /**
     * Stop the Event at the given time.
     * @param  time  When the event should stop.
     */ stop(time) {
        this.cancel(time);
        const ticks = this.toTicks(time);
        if (this._state.getValueAtTime(ticks) === "started") {
            this._state.setStateAtTime("stopped", ticks, {
                id: -1
            });
            const previousEvent = this._state.getBefore(ticks);
            let reschedulTime = ticks;
            if (previousEvent !== null) reschedulTime = previousEvent.time;
            this._rescheduleEvents(reschedulTime);
        }
        return this;
    }
    /**
     * Cancel all scheduled events greater than or equal to the given time
     * @param  time  The time after which events will be cancel.
     */ cancel(time) {
        time = (0, _defaults.defaultArg)(time, -Infinity);
        const ticks = this.toTicks(time);
        this._state.forEachFrom(ticks, (event)=>{
            this.context.transport.clear(event.id);
        });
        this._state.cancel(ticks);
        return this;
    }
    /**
     * The callback function invoker. Also
     * checks if the Event is done playing
     * @param  time  The time of the event in seconds
     */ _tick(time) {
        const ticks = this.context.transport.getTicksAtTime(time);
        if (!this.mute && this._state.getValueAtTime(ticks) === "started") {
            if (this.probability < 1 && Math.random() > this.probability) return;
            if (this.humanize) {
                let variation = 0.02;
                if (!(0, _typeCheck.isBoolean)(this.humanize)) variation = this.toSeconds(this.humanize);
                time += (Math.random() * 2 - 1) * variation;
            }
            this.callback(time, this.value);
        }
    }
    /**
     * Get the duration of the loop.
     */ _getLoopDuration() {
        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);
    }
    /**
     * If the note should loop or not
     * between ToneEvent.loopStart and
     * ToneEvent.loopEnd. If set to true,
     * the event will loop indefinitely,
     * if set to a number greater than 1
     * it will play a specific number of
     * times, if set to false, 0 or 1, the
     * part will only play once.
     */ get loop() {
        return this._loop;
    }
    set loop(loop) {
        this._loop = loop;
        this._rescheduleEvents();
    }
    /**
     * The playback rate of the note. Defaults to 1.
     * @example
     * const note = new Tone.ToneEvent();
     * note.loop = true;
     * // repeat the note twice as fast
     * note.playbackRate = 2;
     */ get playbackRate() {
        return this._playbackRate;
    }
    set playbackRate(rate) {
        this._playbackRate = rate;
        this._rescheduleEvents();
    }
    /**
     * The loopEnd point is the time the event will loop
     * if ToneEvent.loop is true.
     */ get loopEnd() {
        return new (0, _ticks.TicksClass)(this.context, this._loopEnd).toSeconds();
    }
    set loopEnd(loopEnd) {
        this._loopEnd = this.toTicks(loopEnd);
        if (this._loop) this._rescheduleEvents();
    }
    /**
     * The time when the loop should start.
     */ get loopStart() {
        return new (0, _ticks.TicksClass)(this.context, this._loopStart).toSeconds();
    }
    set loopStart(loopStart) {
        this._loopStart = this.toTicks(loopStart);
        if (this._loop) this._rescheduleEvents();
    }
    /**
     * The current progress of the loop interval.
     * Returns 0 if the event is not started yet or
     * it is not set to loop.
     */ get progress() {
        if (this._loop) {
            const ticks = this.context.transport.ticks;
            const lastEvent = this._state.get(ticks);
            if (lastEvent !== null && lastEvent.state === "started") {
                const loopDuration = this._getLoopDuration();
                const progress = (ticks - lastEvent.time) % loopDuration;
                return progress / loopDuration;
            } else return 0;
        } else return 0;
    }
    dispose() {
        super.dispose();
        this.cancel();
        this._state.dispose();
        return this;
    }
}

},{"../core/clock/Transport":"2kVaU","../core/context/ToneWithContext":"gAuzg","../core/type/Ticks":"BGGsE","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","../core/util/StateTimeline":"hkouL","../core/util/TypeCheck":"eMH5A","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5vWpY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Part is a collection ToneEvents which can be started/stopped and looped as a single unit.
 *
 * @example
 * const synth = new Tone.Synth().toDestination();
 * const part = new Tone.Part(((time, note) => {
 * 	// the notes given as the second element in the array
 * 	// will be passed in as the second argument
 * 	synth.triggerAttackRelease(note, "8n", time);
 * }), [[0, "C2"], ["0:2", "C3"], ["0:3:2", "G2"]]);
 * Tone.Transport.start();
 * @example
 * const synth = new Tone.Synth().toDestination();
 * // use an array of objects as long as the object has a "time" attribute
 * const part = new Tone.Part(((time, value) => {
 * 	// the value is an object which contains both the note and the velocity
 * 	synth.triggerAttackRelease(value.note, "8n", time, value.velocity);
 * }), [{ time: 0, note: "C3", velocity: 0.9 },
 * 	{ time: "0:2", note: "C4", velocity: 0.5 }
 * ]).start(0);
 * Tone.Transport.start();
 * @category Event
 */ parcelHelpers.export(exports, "Part", ()=>Part);
var _ticks = require("../core/type/Ticks");
var _transportTime = require("../core/type/TransportTime");
var _defaults = require("../core/util/Defaults");
var _stateTimeline = require("../core/util/StateTimeline");
var _typeCheck = require("../core/util/TypeCheck");
var _toneEvent = require("./ToneEvent");
class Part extends (0, _toneEvent.ToneEvent) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Part.getDefaults(), arguments, [
            "callback",
            "events"
        ]));
        this.name = "Part";
        /**
         * Tracks the scheduled events
         */ this._state = new (0, _stateTimeline.StateTimeline)("stopped");
        /**
         * The events that belong to this part
         */ this._events = new Set();
        const options = (0, _defaults.optionsFromArguments)(Part.getDefaults(), arguments, [
            "callback",
            "events"
        ]);
        // make sure things are assigned in the right order
        this._state.increasing = true;
        // add the events
        options.events.forEach((event)=>{
            if ((0, _typeCheck.isArray)(event)) this.add(event[0], event[1]);
            else this.add(event);
        });
    }
    static getDefaults() {
        return Object.assign((0, _toneEvent.ToneEvent).getDefaults(), {
            events: []
        });
    }
    /**
     * Start the part at the given time.
     * @param  time    When to start the part.
     * @param  offset  The offset from the start of the part to begin playing at.
     */ start(time, offset) {
        const ticks = this.toTicks(time);
        if (this._state.getValueAtTime(ticks) !== "started") {
            offset = (0, _defaults.defaultArg)(offset, this._loop ? this._loopStart : 0);
            if (this._loop) offset = (0, _defaults.defaultArg)(offset, this._loopStart);
            else offset = (0, _defaults.defaultArg)(offset, 0);
            const computedOffset = this.toTicks(offset);
            this._state.add({
                id: -1,
                offset: computedOffset,
                state: "started",
                time: ticks
            });
            this._forEach((event)=>{
                this._startNote(event, ticks, computedOffset);
            });
        }
        return this;
    }
    /**
     * Start the event in the given event at the correct time given
     * the ticks and offset and looping.
     * @param  event
     * @param  ticks
     * @param  offset
     */ _startNote(event, ticks, offset) {
        ticks -= offset;
        if (this._loop) {
            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {
                if (event.startOffset < offset) // start it on the next loop
                ticks += this._getLoopDuration();
                event.start(new (0, _ticks.TicksClass)(this.context, ticks));
            } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {
                event.loop = false;
                event.start(new (0, _ticks.TicksClass)(this.context, ticks));
            }
        } else if (event.startOffset >= offset) event.start(new (0, _ticks.TicksClass)(this.context, ticks));
    }
    get startOffset() {
        return this._startOffset;
    }
    set startOffset(offset) {
        this._startOffset = offset;
        this._forEach((event)=>{
            event.startOffset += this._startOffset;
        });
    }
    /**
     * Stop the part at the given time.
     * @param  time  When to stop the part.
     */ stop(time) {
        const ticks = this.toTicks(time);
        this._state.cancel(ticks);
        this._state.setStateAtTime("stopped", ticks);
        this._forEach((event)=>{
            event.stop(time);
        });
        return this;
    }
    /**
     * Get/Set an Event's value at the given time.
     * If a value is passed in and no event exists at
     * the given time, one will be created with that value.
     * If two events are at the same time, the first one will
     * be returned.
     * @example
     * const part = new Tone.Part();
     * part.at("1m"); // returns the part at the first measure
     * part.at("2m", "C2"); // set the value at "2m" to C2.
     * // if an event didn't exist at that time, it will be created.
     * @param time The time of the event to get or set.
     * @param value If a value is passed in, the value of the event at the given time will be set to it.
     */ at(time, value) {
        const timeInTicks = new (0, _transportTime.TransportTimeClass)(this.context, time).toTicks();
        const tickTime = new (0, _ticks.TicksClass)(this.context, 1).toSeconds();
        const iterator = this._events.values();
        let result = iterator.next();
        while(!result.done){
            const event = result.value;
            if (Math.abs(timeInTicks - event.startOffset) < tickTime) {
                if ((0, _typeCheck.isDefined)(value)) event.value = value;
                return event;
            }
            result = iterator.next();
        }
        // if there was no event at that time, create one
        if ((0, _typeCheck.isDefined)(value)) {
            this.add(time, value);
            // return the new event
            return this.at(time);
        } else return null;
    }
    add(time, value) {
        // extract the parameters
        if (time instanceof Object && Reflect.has(time, "time")) {
            value = time;
            time = value.time;
        }
        const ticks = this.toTicks(time);
        let event;
        if (value instanceof (0, _toneEvent.ToneEvent)) {
            event = value;
            event.callback = this._tick.bind(this);
        } else event = new (0, _toneEvent.ToneEvent)({
            callback: this._tick.bind(this),
            context: this.context,
            value
        });
        // the start offset
        event.startOffset = ticks;
        // initialize the values
        event.set({
            humanize: this.humanize,
            loop: this.loop,
            loopEnd: this.loopEnd,
            loopStart: this.loopStart,
            playbackRate: this.playbackRate,
            probability: this.probability
        });
        this._events.add(event);
        // start the note if it should be played right now
        this._restartEvent(event);
        return this;
    }
    /**
     * Restart the given event
     */ _restartEvent(event) {
        this._state.forEach((stateEvent)=>{
            if (stateEvent.state === "started") this._startNote(event, stateEvent.time, stateEvent.offset);
            else // stop the note
            event.stop(new (0, _ticks.TicksClass)(this.context, stateEvent.time));
        });
    }
    remove(time, value) {
        // extract the parameters
        if ((0, _typeCheck.isObject)(time) && time.hasOwnProperty("time")) {
            value = time;
            time = value.time;
        }
        time = this.toTicks(time);
        this._events.forEach((event)=>{
            if (event.startOffset === time) {
                if ((0, _typeCheck.isUndef)(value) || (0, _typeCheck.isDefined)(value) && event.value === value) {
                    this._events.delete(event);
                    event.dispose();
                }
            }
        });
        return this;
    }
    /**
     * Remove all of the notes from the group.
     */ clear() {
        this._forEach((event)=>event.dispose());
        this._events.clear();
        return this;
    }
    /**
     * Cancel scheduled state change events: i.e. "start" and "stop".
     * @param after The time after which to cancel the scheduled events.
     */ cancel(after) {
        this._forEach((event)=>event.cancel(after));
        this._state.cancel(this.toTicks(after));
        return this;
    }
    /**
     * Iterate over all of the events
     */ _forEach(callback) {
        if (this._events) this._events.forEach((event)=>{
            if (event instanceof Part) event._forEach(callback);
            else callback(event);
        });
        return this;
    }
    /**
     * Set the attribute of all of the events
     * @param  attr  the attribute to set
     * @param  value      The value to set it to
     */ _setAll(attr, value) {
        this._forEach((event)=>{
            event[attr] = value;
        });
    }
    /**
     * Internal tick method
     * @param  time  The time of the event in seconds
     */ _tick(time, value) {
        if (!this.mute) this.callback(time, value);
    }
    /**
     * Determine if the event should be currently looping
     * given the loop boundries of this Part.
     * @param  event  The event to test
     */ _testLoopBoundries(event) {
        if (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)) event.cancel(0);
        else if (event.state === "stopped") // reschedule it if it's stopped
        this._restartEvent(event);
    }
    get probability() {
        return this._probability;
    }
    set probability(prob) {
        this._probability = prob;
        this._setAll("probability", prob);
    }
    get humanize() {
        return this._humanize;
    }
    set humanize(variation) {
        this._humanize = variation;
        this._setAll("humanize", variation);
    }
    /**
     * If the part should loop or not
     * between Part.loopStart and
     * Part.loopEnd. If set to true,
     * the part will loop indefinitely,
     * if set to a number greater than 1
     * it will play a specific number of
     * times, if set to false, 0 or 1, the
     * part will only play once.
     * @example
     * const part = new Tone.Part();
     * // loop the part 8 times
     * part.loop = 8;
     */ get loop() {
        return this._loop;
    }
    set loop(loop) {
        this._loop = loop;
        this._forEach((event)=>{
            event.loopStart = this.loopStart;
            event.loopEnd = this.loopEnd;
            event.loop = loop;
            this._testLoopBoundries(event);
        });
    }
    /**
     * The loopEnd point determines when it will
     * loop if Part.loop is true.
     */ get loopEnd() {
        return new (0, _ticks.TicksClass)(this.context, this._loopEnd).toSeconds();
    }
    set loopEnd(loopEnd) {
        this._loopEnd = this.toTicks(loopEnd);
        if (this._loop) this._forEach((event)=>{
            event.loopEnd = loopEnd;
            this._testLoopBoundries(event);
        });
    }
    /**
     * The loopStart point determines when it will
     * loop if Part.loop is true.
     */ get loopStart() {
        return new (0, _ticks.TicksClass)(this.context, this._loopStart).toSeconds();
    }
    set loopStart(loopStart) {
        this._loopStart = this.toTicks(loopStart);
        if (this._loop) this._forEach((event)=>{
            event.loopStart = this.loopStart;
            this._testLoopBoundries(event);
        });
    }
    /**
     * The playback rate of the part
     */ get playbackRate() {
        return this._playbackRate;
    }
    set playbackRate(rate) {
        this._playbackRate = rate;
        this._setAll("playbackRate", rate);
    }
    /**
     * The number of scheduled notes in the part.
     */ get length() {
        return this._events.size;
    }
    dispose() {
        super.dispose();
        this.clear();
        return this;
    }
}

},{"../core/type/Ticks":"BGGsE","../core/type/TransportTime":"a6yW0","../core/util/Defaults":"a9M5s","../core/util/StateTimeline":"hkouL","../core/util/TypeCheck":"eMH5A","./ToneEvent":"bq5Fc","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6vioO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Pattern arpeggiates between the given notes
 * in a number of patterns.
 * @example
 * const pattern = new Tone.Pattern((time, note) => {
 * 	// the order of the notes passed in depends on the pattern
 * }, ["C2", "D4", "E5", "A6"], "upDown");
 * @category Event
 */ parcelHelpers.export(exports, "Pattern", ()=>Pattern);
var _loop = require("./Loop");
var _patternGenerator = require("./PatternGenerator");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
class Pattern extends (0, _loop.Loop) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Pattern.getDefaults(), arguments, [
            "callback",
            "values",
            "pattern"
        ]));
        this.name = "Pattern";
        const options = (0, _defaults.optionsFromArguments)(Pattern.getDefaults(), arguments, [
            "callback",
            "values",
            "pattern"
        ]);
        this.callback = options.callback;
        this._values = options.values;
        this._pattern = (0, _patternGenerator.PatternGenerator)(options.values, options.pattern);
        this._type = options.pattern;
    }
    static getDefaults() {
        return Object.assign((0, _loop.Loop).getDefaults(), {
            pattern: "up",
            values: [],
            callback: (0, _interface.noOp)
        });
    }
    /**
     * Internal function called when the notes should be called
     */ _tick(time) {
        const value = this._pattern.next();
        this._value = value.value;
        this.callback(time, this._value);
    }
    /**
     * The array of events.
     */ get values() {
        return this._values;
    }
    set values(val) {
        this._values = val;
        // reset the pattern
        this.pattern = this._type;
    }
    /**
     * The current value of the pattern.
     */ get value() {
        return this._value;
    }
    /**
     * The pattern type. See Tone.CtrlPattern for the full list of patterns.
     */ get pattern() {
        return this._type;
    }
    set pattern(pattern) {
        this._type = pattern;
        this._pattern = (0, _patternGenerator.PatternGenerator)(this._values, this._type);
    }
}

},{"./Loop":"dX4Gv","./PatternGenerator":"37MIC","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"37MIC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * PatternGenerator returns a generator which will iterate over the given array
 * of values and yield the items according to the passed in pattern
 * @param values An array of values to iterate over
 * @param pattern The name of the pattern use when iterating over
 * @param index Where to start in the offset of the values array
 */ parcelHelpers.export(exports, "PatternGenerator", ()=>PatternGenerator);
var _debug = require("../core/util/Debug");
var _math = require("../core/util/Math");
/**
 * Start at the first value and go up to the last
 */ function* upPatternGen(values) {
    let index = 0;
    while(index < values.length){
        index = clampToArraySize(index, values);
        yield values[index];
        index++;
    }
}
/**
 * Start at the last value and go down to 0
 */ function* downPatternGen(values) {
    let index = values.length - 1;
    while(index >= 0){
        index = clampToArraySize(index, values);
        yield values[index];
        index--;
    }
}
/**
 * Infinitely yield the generator
 */ function* infiniteGen(values, gen) {
    while(true)yield* gen(values);
}
/**
 * Make sure that the index is in the given range
 */ function clampToArraySize(index, values) {
    return (0, _math.clamp)(index, 0, values.length - 1);
}
/**
 * Alternate between two generators
 */ function* alternatingGenerator(values, directionUp) {
    let index = directionUp ? 0 : values.length - 1;
    while(true){
        index = clampToArraySize(index, values);
        yield values[index];
        if (directionUp) {
            index++;
            if (index >= values.length - 1) directionUp = false;
        } else {
            index--;
            if (index <= 0) directionUp = true;
        }
    }
}
/**
 * Starting from the bottom move up 2, down 1
 */ function* jumpUp(values) {
    let index = 0;
    let stepIndex = 0;
    while(index < values.length){
        index = clampToArraySize(index, values);
        yield values[index];
        stepIndex++;
        index += stepIndex % 2 ? 2 : -1;
    }
}
/**
 * Starting from the top move down 2, up 1
 */ function* jumpDown(values) {
    let index = values.length - 1;
    let stepIndex = 0;
    while(index >= 0){
        index = clampToArraySize(index, values);
        yield values[index];
        stepIndex++;
        index += stepIndex % 2 ? -2 : 1;
    }
}
/**
 * Choose a random index each time
 */ function* randomGen(values) {
    while(true){
        const randomIndex = Math.floor(Math.random() * values.length);
        yield values[randomIndex];
    }
}
/**
 * Randomly go through all of the values once before choosing a new random order
 */ function* randomOnce(values) {
    // create an array of indices
    const copy = [];
    for(let i = 0; i < values.length; i++)copy.push(i);
    while(copy.length > 0){
        // random choose an index, and then remove it so it's not chosen again
        const randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);
        const index = clampToArraySize(randVal[0], values);
        yield values[index];
    }
}
/**
 * Randomly choose to walk up or down 1 index in the values array
 */ function* randomWalk(values) {
    // randomly choose a starting index in the values array
    let index = Math.floor(Math.random() * values.length);
    while(true){
        if (index === 0) index++; // at bottom of array, so force upward step
        else if (index === values.length - 1) index--; // at top of array, so force downward step
        else if (Math.random() < 0.5) index--;
        else index++;
        yield values[index];
    }
}
function* PatternGenerator(values, pattern = "up", index = 0) {
    // safeguards
    (0, _debug.assert)(values.length > 0, "The array must have more than one value in it");
    switch(pattern){
        case "up":
            yield* infiniteGen(values, upPatternGen);
        case "down":
            yield* infiniteGen(values, downPatternGen);
        case "upDown":
            yield* alternatingGenerator(values, true);
        case "downUp":
            yield* alternatingGenerator(values, false);
        case "alternateUp":
            yield* infiniteGen(values, jumpUp);
        case "alternateDown":
            yield* infiniteGen(values, jumpDown);
        case "random":
            yield* randomGen(values);
        case "randomOnce":
            yield* infiniteGen(values, randomOnce);
        case "randomWalk":
            yield* randomWalk(values);
    }
}

},{"../core/util/Debug":"2lOIQ","../core/util/Math":"7mtt2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ekSeO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A sequence is an alternate notation of a part. Instead
 * of passing in an array of [time, event] pairs, pass
 * in an array of events which will be spaced at the
 * given subdivision. Sub-arrays will subdivide that beat
 * by the number of items are in the array.
 * Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)
 * @example
 * const synth = new Tone.Synth().toDestination();
 * const seq = new Tone.Sequence((time, note) => {
 * 	synth.triggerAttackRelease(note, 0.1, time);
 * 	// subdivisions are given as subarrays
 * }, ["C4", ["E4", "D4", "E4"], "G4", ["A4", "G4"]]).start(0);
 * Tone.Transport.start();
 * @category Event
 */ parcelHelpers.export(exports, "Sequence", ()=>Sequence);
var _ticks = require("../core/type/Ticks");
var _defaults = require("../core/util/Defaults");
var _typeCheck = require("../core/util/TypeCheck");
var _part = require("./Part");
var _toneEvent = require("./ToneEvent");
class Sequence extends (0, _toneEvent.ToneEvent) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Sequence.getDefaults(), arguments, [
            "callback",
            "events",
            "subdivision"
        ]));
        this.name = "Sequence";
        /**
         * The object responsible for scheduling all of the events
         */ this._part = new (0, _part.Part)({
            callback: this._seqCallback.bind(this),
            context: this.context
        });
        /**
         * private reference to all of the sequence proxies
         */ this._events = [];
        /**
         * The proxied array
         */ this._eventsArray = [];
        const options = (0, _defaults.optionsFromArguments)(Sequence.getDefaults(), arguments, [
            "callback",
            "events",
            "subdivision"
        ]);
        this._subdivision = this.toTicks(options.subdivision);
        this.events = options.events;
        // set all of the values
        this.loop = options.loop;
        this.loopStart = options.loopStart;
        this.loopEnd = options.loopEnd;
        this.playbackRate = options.playbackRate;
        this.probability = options.probability;
        this.humanize = options.humanize;
        this.mute = options.mute;
        this.playbackRate = options.playbackRate;
    }
    static getDefaults() {
        return Object.assign((0, _defaults.omitFromObject)((0, _toneEvent.ToneEvent).getDefaults(), [
            "value"
        ]), {
            events: [],
            loop: true,
            loopEnd: 0,
            loopStart: 0,
            subdivision: "8n"
        });
    }
    /**
     * The internal callback for when an event is invoked
     */ _seqCallback(time, value) {
        if (value !== null) this.callback(time, value);
    }
    /**
     * The sequence
     */ get events() {
        return this._events;
    }
    set events(s) {
        this.clear();
        this._eventsArray = s;
        this._events = this._createSequence(this._eventsArray);
        this._eventsUpdated();
    }
    /**
     * Start the part at the given time.
     * @param  time    When to start the part.
     * @param  offset  The offset index to start at
     */ start(time, offset) {
        this._part.start(time, offset ? this._indexTime(offset) : offset);
        return this;
    }
    /**
     * Stop the part at the given time.
     * @param  time  When to stop the part.
     */ stop(time) {
        this._part.stop(time);
        return this;
    }
    /**
     * The subdivision of the sequence. This can only be
     * set in the constructor. The subdivision is the
     * interval between successive steps.
     */ get subdivision() {
        return new (0, _ticks.TicksClass)(this.context, this._subdivision).toSeconds();
    }
    /**
     * Create a sequence proxy which can be monitored to create subsequences
     */ _createSequence(array) {
        return new Proxy(array, {
            get: (target, property)=>{
                // property is index in this case
                return target[property];
            },
            set: (target, property, value)=>{
                if ((0, _typeCheck.isString)(property) && isFinite(parseInt(property, 10))) {
                    if ((0, _typeCheck.isArray)(value)) target[property] = this._createSequence(value);
                    else target[property] = value;
                } else target[property] = value;
                this._eventsUpdated();
                // return true to accept the changes
                return true;
            }
        });
    }
    /**
     * When the sequence has changed, all of the events need to be recreated
     */ _eventsUpdated() {
        this._part.clear();
        this._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset);
        // update the loopEnd
        this.loopEnd = this.loopEnd;
    }
    /**
     * reschedule all of the events that need to be rescheduled
     */ _rescheduleSequence(sequence, subdivision, startOffset) {
        sequence.forEach((value, index)=>{
            const eventOffset = index * subdivision + startOffset;
            if ((0, _typeCheck.isArray)(value)) this._rescheduleSequence(value, subdivision / value.length, eventOffset);
            else {
                const startTime = new (0, _ticks.TicksClass)(this.context, eventOffset, "i").toSeconds();
                this._part.add(startTime, value);
            }
        });
    }
    /**
     * Get the time of the index given the Sequence's subdivision
     * @param  index
     * @return The time of that index
     */ _indexTime(index) {
        return new (0, _ticks.TicksClass)(this.context, index * this._subdivision + this.startOffset).toSeconds();
    }
    /**
     * Clear all of the events
     */ clear() {
        this._part.clear();
        return this;
    }
    dispose() {
        super.dispose();
        this._part.dispose();
        return this;
    }
    //-------------------------------------
    // PROXY CALLS
    //-------------------------------------
    get loop() {
        return this._part.loop;
    }
    set loop(l) {
        this._part.loop = l;
    }
    /**
     * The index at which the sequence should start looping
     */ get loopStart() {
        return this._loopStart;
    }
    set loopStart(index) {
        this._loopStart = index;
        this._part.loopStart = this._indexTime(index);
    }
    /**
     * The index at which the sequence should end looping
     */ get loopEnd() {
        return this._loopEnd;
    }
    set loopEnd(index) {
        this._loopEnd = index;
        if (index === 0) this._part.loopEnd = this._indexTime(this._eventsArray.length);
        else this._part.loopEnd = this._indexTime(index);
    }
    get startOffset() {
        return this._part.startOffset;
    }
    set startOffset(start) {
        this._part.startOffset = start;
    }
    get playbackRate() {
        return this._part.playbackRate;
    }
    set playbackRate(rate) {
        this._part.playbackRate = rate;
    }
    get probability() {
        return this._part.probability;
    }
    set probability(prob) {
        this._part.probability = prob;
    }
    get progress() {
        return this._part.progress;
    }
    get humanize() {
        return this._part.humanize;
    }
    set humanize(variation) {
        this._part.humanize = variation;
    }
    /**
     * The number of scheduled events
     */ get length() {
        return this._part.length;
    }
}

},{"../core/type/Ticks":"BGGsE","../core/util/Defaults":"a9M5s","../core/util/TypeCheck":"eMH5A","./Part":"5vWpY","./ToneEvent":"bq5Fc","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hRVtA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _autoFilter = require("./AutoFilter");
parcelHelpers.exportAll(_autoFilter, exports);
var _autoPanner = require("./AutoPanner");
parcelHelpers.exportAll(_autoPanner, exports);
var _autoWah = require("./AutoWah");
parcelHelpers.exportAll(_autoWah, exports);
var _bitCrusher = require("./BitCrusher");
parcelHelpers.exportAll(_bitCrusher, exports);
var _chebyshev = require("./Chebyshev");
parcelHelpers.exportAll(_chebyshev, exports);
var _chorus = require("./Chorus");
parcelHelpers.exportAll(_chorus, exports);
var _distortion = require("./Distortion");
parcelHelpers.exportAll(_distortion, exports);
var _feedbackDelay = require("./FeedbackDelay");
parcelHelpers.exportAll(_feedbackDelay, exports);
var _frequencyShifter = require("./FrequencyShifter");
parcelHelpers.exportAll(_frequencyShifter, exports);
var _freeverb = require("./Freeverb");
parcelHelpers.exportAll(_freeverb, exports);
var _jcreverb = require("./JCReverb");
parcelHelpers.exportAll(_jcreverb, exports);
var _pingPongDelay = require("./PingPongDelay");
parcelHelpers.exportAll(_pingPongDelay, exports);
var _pitchShift = require("./PitchShift");
parcelHelpers.exportAll(_pitchShift, exports);
var _phaser = require("./Phaser");
parcelHelpers.exportAll(_phaser, exports);
var _reverb = require("./Reverb");
parcelHelpers.exportAll(_reverb, exports);
var _stereoWidener = require("./StereoWidener");
parcelHelpers.exportAll(_stereoWidener, exports);
var _tremolo = require("./Tremolo");
parcelHelpers.exportAll(_tremolo, exports);
var _vibrato = require("./Vibrato");
parcelHelpers.exportAll(_vibrato, exports);

},{"./AutoFilter":"dGqIv","./AutoPanner":"h1nsJ","./AutoWah":"dd0sv","./BitCrusher":"jplDV","./Chebyshev":"cRQFX","./Chorus":"5Fgrn","./Distortion":"kWHiD","./FeedbackDelay":"5n2nf","./FrequencyShifter":"bB1gQ","./Freeverb":"k7mdD","./JCReverb":"gi3q6","./PingPongDelay":"avdgi","./PitchShift":"8mlNP","./Phaser":"8FJ4l","./Reverb":"j2JHY","./StereoWidener":"5qIOm","./Tremolo":"3TUHb","./Vibrato":"5uE99","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dGqIv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.
 * Setting the LFO rate and depth allows for control over the filter modulation rate
 * and depth.
 *
 * @example
 * // create an autofilter and start it's LFO
 * const autoFilter = new Tone.AutoFilter("4n").toDestination().start();
 * // route an oscillator through the filter and start it
 * const oscillator = new Tone.Oscillator().connect(autoFilter).start();
 * @category Effect
 */ parcelHelpers.export(exports, "AutoFilter", ()=>AutoFilter);
var _filter = require("../component/filter/Filter");
var _defaults = require("../core/util/Defaults");
var _lfoeffect = require("./LFOEffect");
class AutoFilter extends (0, _lfoeffect.LFOEffect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(AutoFilter.getDefaults(), arguments, [
            "frequency",
            "baseFrequency",
            "octaves"
        ]));
        this.name = "AutoFilter";
        const options = (0, _defaults.optionsFromArguments)(AutoFilter.getDefaults(), arguments, [
            "frequency",
            "baseFrequency",
            "octaves"
        ]);
        this.filter = new (0, _filter.Filter)(Object.assign(options.filter, {
            context: this.context
        }));
        // connections
        this.connectEffect(this.filter);
        this._lfo.connect(this.filter.frequency);
        this.octaves = options.octaves;
        this.baseFrequency = options.baseFrequency;
    }
    static getDefaults() {
        return Object.assign((0, _lfoeffect.LFOEffect).getDefaults(), {
            baseFrequency: 200,
            octaves: 2.6,
            filter: {
                type: "lowpass",
                rolloff: -12,
                Q: 1
            }
        });
    }
    /**
     * The minimum value of the filter's cutoff frequency.
     */ get baseFrequency() {
        return this._lfo.min;
    }
    set baseFrequency(freq) {
        this._lfo.min = this.toFrequency(freq);
        // and set the max
        this.octaves = this._octaves;
    }
    /**
     * The maximum value of the filter's cutoff frequency.
     */ get octaves() {
        return this._octaves;
    }
    set octaves(oct) {
        this._octaves = oct;
        this._lfo.max = this._lfo.min * Math.pow(2, oct);
    }
    dispose() {
        super.dispose();
        this.filter.dispose();
        return this;
    }
}

},{"../component/filter/Filter":"lel48","../core/util/Defaults":"a9M5s","./LFOEffect":"5THab","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5THab":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Base class for LFO-based effects.
 */ parcelHelpers.export(exports, "LFOEffect", ()=>LFOEffect);
var _effect = require("../effect/Effect");
var _lfo = require("../source/oscillator/LFO");
var _interface = require("../core/util/Interface");
class LFOEffect extends (0, _effect.Effect) {
    constructor(options){
        super(options);
        this.name = "LFOEffect";
        this._lfo = new (0, _lfo.LFO)({
            context: this.context,
            frequency: options.frequency,
            amplitude: options.depth
        });
        this.depth = this._lfo.amplitude;
        this.frequency = this._lfo.frequency;
        this.type = options.type;
        (0, _interface.readOnly)(this, [
            "frequency",
            "depth"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _effect.Effect).getDefaults(), {
            frequency: 1,
            type: "sine",
            depth: 1
        });
    }
    /**
     * Start the effect.
     */ start(time) {
        this._lfo.start(time);
        return this;
    }
    /**
     * Stop the lfo
     */ stop(time) {
        this._lfo.stop(time);
        return this;
    }
    /**
     * Sync the filter to the transport. See [[LFO.sync]]
     */ sync() {
        this._lfo.sync();
        return this;
    }
    /**
     * Unsync the filter from the transport.
     */ unsync() {
        this._lfo.unsync();
        return this;
    }
    /**
     * The type of the LFO's oscillator: See [[Oscillator.type]]
     * @example
     * const autoFilter = new Tone.AutoFilter().start().toDestination();
     * const noise = new Tone.Noise().start().connect(autoFilter);
     * autoFilter.type = "square";
     */ get type() {
        return this._lfo.type;
    }
    set type(type) {
        this._lfo.type = type;
    }
    dispose() {
        super.dispose();
        this._lfo.dispose();
        this.frequency.dispose();
        this.depth.dispose();
        return this;
    }
}

},{"../effect/Effect":"g3o0i","../source/oscillator/LFO":"jsBJT","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g3o0i":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Effect is the base class for effects. Connect the effect between
 * the effectSend and effectReturn GainNodes, then control the amount of
 * effect which goes to the output using the wet control.
 */ parcelHelpers.export(exports, "Effect", ()=>Effect);
var _crossFade = require("../component/channel/CrossFade");
var _gain = require("../core/context/Gain");
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _interface = require("../core/util/Interface");
class Effect extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(options){
        super(options);
        this.name = "Effect";
        /**
         * the drywet knob to control the amount of effect
         */ this._dryWet = new (0, _crossFade.CrossFade)({
            context: this.context
        });
        /**
         * The wet control is how much of the effected
         * will pass through to the output. 1 = 100% effected
         * signal, 0 = 100% dry signal.
         */ this.wet = this._dryWet.fade;
        /**
         * connect the effectSend to the input of hte effect
         */ this.effectSend = new (0, _gain.Gain)({
            context: this.context
        });
        /**
         * connect the output of the effect to the effectReturn
         */ this.effectReturn = new (0, _gain.Gain)({
            context: this.context
        });
        /**
         * The effect input node
         */ this.input = new (0, _gain.Gain)({
            context: this.context
        });
        /**
         * The effect output
         */ this.output = this._dryWet;
        // connections
        this.input.fan(this._dryWet.a, this.effectSend);
        this.effectReturn.connect(this._dryWet.b);
        this.wet.setValueAtTime(options.wet, 0);
        this._internalChannels = [
            this.effectReturn,
            this.effectSend
        ];
        (0, _interface.readOnly)(this, "wet");
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            wet: 1
        });
    }
    /**
     * chains the effect in between the effectSend and effectReturn
     */ connectEffect(effect) {
        // add it to the internal channels
        this._internalChannels.push(effect);
        this.effectSend.chain(effect, this.effectReturn);
        return this;
    }
    dispose() {
        super.dispose();
        this._dryWet.dispose();
        this.effectSend.dispose();
        this.effectReturn.dispose();
        this.wet.dispose();
        return this;
    }
}

},{"../component/channel/CrossFade":"cd1EQ","../core/context/Gain":"kj68Y","../core/context/ToneAudioNode":"kZ3Kj","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cd1EQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Tone.Crossfade provides equal power fading between two inputs.
 * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).
 * ```
 *                                             +---------+
 *                                            +> input a +>--+
 * +-----------+   +---------------------+     |         |   |
 * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |
 * +-----------+   |                     |     +---------+   |
 *               +-> pan               R +>-+                |   +--------+
 *               | +---------------------+  |                +---> output +>
 *  +------+     |                          |  +---------+   |   +--------+
 *  | fade +>----+                          | +> input b +>--+
 *  +------+                                |  |         |
 *                                          +--> gain    |
 *                                             +---------+
 * ```
 * @example
 * const crossFade = new Tone.CrossFade().toDestination();
 * // connect two inputs Tone.to a/b
 * const inputA = new Tone.Oscillator(440, "square").connect(crossFade.a).start();
 * const inputB = new Tone.Oscillator(440, "sine").connect(crossFade.b).start();
 * // use the fade to control the mix between the two
 * crossFade.fade.value = 0.5;
 * @category Component
 */ parcelHelpers.export(exports, "CrossFade", ()=>CrossFade);
var _gain = require("../../core/context/Gain");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _gainToAudio = require("../../signal/GainToAudio");
var _signal = require("../../signal/Signal");
class CrossFade extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(CrossFade.getDefaults(), arguments, [
            "fade"
        ])));
        this.name = "CrossFade";
        /**
         * The crossfading is done by a StereoPannerNode
         */ this._panner = this.context.createStereoPanner();
        /**
         * Split the output of the panner node into two values used to control the gains.
         */ this._split = this.context.createChannelSplitter(2);
        /**
         * Convert the fade value into an audio range value so it can be connected
         * to the panner.pan AudioParam
         */ this._g2a = new (0, _gainToAudio.GainToAudio)({
            context: this.context
        });
        /**
         * The input which is at full level when fade = 0
         */ this.a = new (0, _gain.Gain)({
            context: this.context,
            gain: 0
        });
        /**
         * The input which is at full level when fade = 1
         */ this.b = new (0, _gain.Gain)({
            context: this.context,
            gain: 0
        });
        /**
         * The output is a mix between `a` and `b` at the ratio of `fade`
         */ this.output = new (0, _gain.Gain)({
            context: this.context
        });
        this._internalChannels = [
            this.a,
            this.b
        ];
        const options = (0, _defaults.optionsFromArguments)(CrossFade.getDefaults(), arguments, [
            "fade"
        ]);
        this.fade = new (0, _signal.Signal)({
            context: this.context,
            units: "normalRange",
            value: options.fade
        });
        (0, _interface.readOnly)(this, "fade");
        this.context.getConstant(1).connect(this._panner);
        this._panner.connect(this._split);
        // this is necessary for standardized-audio-context
        // doesn't make any difference for the native AudioContext
        // https://github.com/chrisguttandin/standardized-audio-context/issues/647
        this._panner.channelCount = 1;
        this._panner.channelCountMode = "explicit";
        (0, _toneAudioNode.connect)(this._split, this.a.gain, 0);
        (0, _toneAudioNode.connect)(this._split, this.b.gain, 1);
        this.fade.chain(this._g2a, this._panner.pan);
        this.a.connect(this.output);
        this.b.connect(this.output);
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            fade: 0.5
        });
    }
    dispose() {
        super.dispose();
        this.a.dispose();
        this.b.dispose();
        this.output.dispose();
        this.fade.dispose();
        this._g2a.dispose();
        this._panner.disconnect();
        this._split.disconnect();
        return this;
    }
}

},{"../../core/context/Gain":"kj68Y","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../signal/GainToAudio":"g3Bng","../../signal/Signal":"980ri","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h1nsJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount.
 * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).
 *
 * @example
 * // create an autopanner and start it
 * const autoPanner = new Tone.AutoPanner("4n").toDestination().start();
 * // route an oscillator through the panner and start it
 * const oscillator = new Tone.Oscillator().connect(autoPanner).start();
 * @category Effect
 */ parcelHelpers.export(exports, "AutoPanner", ()=>AutoPanner);
var _panner = require("../component/channel/Panner");
var _defaults = require("../core/util/Defaults");
var _lfoeffect = require("./LFOEffect");
class AutoPanner extends (0, _lfoeffect.LFOEffect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(AutoPanner.getDefaults(), arguments, [
            "frequency"
        ]));
        this.name = "AutoPanner";
        const options = (0, _defaults.optionsFromArguments)(AutoPanner.getDefaults(), arguments, [
            "frequency"
        ]);
        this._panner = new (0, _panner.Panner)({
            context: this.context,
            channelCount: options.channelCount
        });
        // connections
        this.connectEffect(this._panner);
        this._lfo.connect(this._panner.pan);
        this._lfo.min = -1;
        this._lfo.max = 1;
    }
    static getDefaults() {
        return Object.assign((0, _lfoeffect.LFOEffect).getDefaults(), {
            channelCount: 1
        });
    }
    dispose() {
        super.dispose();
        this._panner.dispose();
        return this;
    }
}

},{"../component/channel/Panner":"hwo91","../core/util/Defaults":"a9M5s","./LFOEffect":"5THab","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hwo91":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.
 * @example
 * return Tone.Offline(() => {
 * // move the input signal from right to left
 * 	const panner = new Tone.Panner(1).toDestination();
 * 	panner.pan.rampTo(-1, 0.5);
 * 	const osc = new Tone.Oscillator(100).connect(panner).start();
 * }, 0.5, 2);
 * @category Component
 */ parcelHelpers.export(exports, "Panner", ()=>Panner);
var _param = require("../../core/context/Param");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
class Panner extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(Panner.getDefaults(), arguments, [
            "pan"
        ])));
        this.name = "Panner";
        /**
         * the panner node
         */ this._panner = this.context.createStereoPanner();
        this.input = this._panner;
        this.output = this._panner;
        const options = (0, _defaults.optionsFromArguments)(Panner.getDefaults(), arguments, [
            "pan"
        ]);
        this.pan = new (0, _param.Param)({
            context: this.context,
            param: this._panner.pan,
            value: options.pan,
            minValue: -1,
            maxValue: 1
        });
        // this is necessary for standardized-audio-context
        // doesn't make any difference for the native AudioContext
        // https://github.com/chrisguttandin/standardized-audio-context/issues/647
        this._panner.channelCount = options.channelCount;
        this._panner.channelCountMode = "explicit";
        // initial value
        (0, _interface.readOnly)(this, "pan");
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            pan: 0,
            channelCount: 1
        });
    }
    dispose() {
        super.dispose();
        this._panner.disconnect();
        this.pan.dispose();
        return this;
    }
}

},{"../../core/context/Param":"5PVlJ","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dd0sv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * AutoWah connects a [[Follower]] to a [[Filter]].
 * The frequency of the filter, follows the input amplitude curve.
 * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).
 *
 * @example
 * const autoWah = new Tone.AutoWah(50, 6, -30).toDestination();
 * // initialize the synth and connect to autowah
 * const synth = new Tone.Synth().connect(autoWah);
 * // Q value influences the effect of the wah - default is 2
 * autoWah.Q.value = 6;
 * // more audible on higher notes
 * synth.triggerAttackRelease("C4", "8n");
 * @category Effect
 */ parcelHelpers.export(exports, "AutoWah", ()=>AutoWah);
var _effect = require("./Effect");
var _filter = require("../component/filter/Filter");
var _follower = require("../component/analysis/Follower");
var _defaults = require("../core/util/Defaults");
var _gain = require("../core/context/Gain");
var _conversions = require("../core/type/Conversions");
var _scaleExp = require("../signal/ScaleExp");
var _interface = require("../core/util/Interface");
class AutoWah extends (0, _effect.Effect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(AutoWah.getDefaults(), arguments, [
            "baseFrequency",
            "octaves",
            "sensitivity"
        ]));
        this.name = "AutoWah";
        const options = (0, _defaults.optionsFromArguments)(AutoWah.getDefaults(), arguments, [
            "baseFrequency",
            "octaves",
            "sensitivity"
        ]);
        this._follower = new (0, _follower.Follower)({
            context: this.context,
            smoothing: options.follower
        });
        this._sweepRange = new (0, _scaleExp.ScaleExp)({
            context: this.context,
            min: 0,
            max: 1,
            exponent: 0.5
        });
        this._baseFrequency = this.toFrequency(options.baseFrequency);
        this._octaves = options.octaves;
        this._inputBoost = new (0, _gain.Gain)({
            context: this.context
        });
        this._bandpass = new (0, _filter.Filter)({
            context: this.context,
            rolloff: -48,
            frequency: 0,
            Q: options.Q
        });
        this._peaking = new (0, _filter.Filter)({
            context: this.context,
            type: "peaking"
        });
        this._peaking.gain.value = options.gain;
        this.gain = this._peaking.gain;
        this.Q = this._bandpass.Q;
        // the control signal path
        this.effectSend.chain(this._inputBoost, this._follower, this._sweepRange);
        this._sweepRange.connect(this._bandpass.frequency);
        this._sweepRange.connect(this._peaking.frequency);
        // the filtered path
        this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);
        // set the initial value
        this._setSweepRange();
        this.sensitivity = options.sensitivity;
        (0, _interface.readOnly)(this, [
            "gain",
            "Q"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _effect.Effect).getDefaults(), {
            baseFrequency: 100,
            octaves: 6,
            sensitivity: 0,
            Q: 2,
            gain: 2,
            follower: 0.2
        });
    }
    /**
     * The number of octaves that the filter will sweep above the baseFrequency.
     */ get octaves() {
        return this._octaves;
    }
    set octaves(octaves) {
        this._octaves = octaves;
        this._setSweepRange();
    }
    /**
     * The follower's smoothing time
     */ get follower() {
        return this._follower.smoothing;
    }
    set follower(follower) {
        this._follower.smoothing = follower;
    }
    /**
     * The base frequency from which the sweep will start from.
     */ get baseFrequency() {
        return this._baseFrequency;
    }
    set baseFrequency(baseFreq) {
        this._baseFrequency = this.toFrequency(baseFreq);
        this._setSweepRange();
    }
    /**
     * The sensitivity to control how responsive to the input signal the filter is.
     */ get sensitivity() {
        return (0, _conversions.gainToDb)(1 / this._inputBoost.gain.value);
    }
    set sensitivity(sensitivity) {
        this._inputBoost.gain.value = 1 / (0, _conversions.dbToGain)(sensitivity);
    }
    /**
     * sets the sweep range of the scaler
     */ _setSweepRange() {
        this._sweepRange.min = this._baseFrequency;
        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);
    }
    dispose() {
        super.dispose();
        this._follower.dispose();
        this._sweepRange.dispose();
        this._bandpass.dispose();
        this._peaking.dispose();
        this._inputBoost.dispose();
        return this;
    }
}

},{"./Effect":"g3o0i","../component/filter/Filter":"lel48","../component/analysis/Follower":"9fpr2","../core/util/Defaults":"a9M5s","../core/context/Gain":"kj68Y","../core/type/Conversions":"iww1u","../signal/ScaleExp":"aFAXE","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9fpr2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Follower is a simple envelope follower.
 * It's implemented by applying a lowpass filter to the absolute value of the incoming signal.
 * ```
 *          +-----+    +---------------+
 * Input +--> Abs +----> OnePoleFilter +--> Output
 *          +-----+    +---------------+
 * ```
 * @category Component
 */ parcelHelpers.export(exports, "Follower", ()=>Follower);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _onePoleFilter = require("../filter/OnePoleFilter");
var _abs = require("../../signal/Abs");
class Follower extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Follower.getDefaults(), arguments, [
            "smoothing"
        ]));
        this.name = "Follower";
        const options = (0, _defaults.optionsFromArguments)(Follower.getDefaults(), arguments, [
            "smoothing"
        ]);
        this._abs = this.input = new (0, _abs.Abs)({
            context: this.context
        });
        this._lowpass = this.output = new (0, _onePoleFilter.OnePoleFilter)({
            context: this.context,
            frequency: 1 / this.toSeconds(options.smoothing),
            type: "lowpass"
        });
        this._abs.connect(this._lowpass);
        this._smoothing = options.smoothing;
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            smoothing: 0.05
        });
    }
    /**
     * The amount of time it takes a value change to arrive at the updated value.
     */ get smoothing() {
        return this._smoothing;
    }
    set smoothing(smoothing) {
        this._smoothing = smoothing;
        this._lowpass.frequency = 1 / this.toSeconds(this.smoothing);
    }
    dispose() {
        super.dispose();
        this._abs.dispose();
        this._lowpass.dispose();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../filter/OnePoleFilter":"1CfWn","../../signal/Abs":"91cHq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jplDV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * BitCrusher down-samples the incoming signal to a different bit depth.
 * Lowering the bit depth of the signal creates distortion. Read more about BitCrushing
 * on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).
 * @example
 * // initialize crusher and route a synth through it
 * const crusher = new Tone.BitCrusher(4).toDestination();
 * const synth = new Tone.Synth().connect(crusher);
 * synth.triggerAttackRelease("C2", 2);
 *
 * @category Effect
 */ parcelHelpers.export(exports, "BitCrusher", ()=>BitCrusher);
var _toneAudioWorklet = require("../core/worklet/ToneAudioWorklet");
var _effect = require("./Effect");
var _gain = require("../core/context/Gain");
var _defaults = require("../core/util/Defaults");
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _param = require("../core/context/Param");
var _bitCrusherWorklet = require("./BitCrusher.worklet");
class BitCrusher extends (0, _effect.Effect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(BitCrusher.getDefaults(), arguments, [
            "bits"
        ]));
        this.name = "BitCrusher";
        const options = (0, _defaults.optionsFromArguments)(BitCrusher.getDefaults(), arguments, [
            "bits"
        ]);
        this._bitCrusherWorklet = new BitCrusherWorklet({
            context: this.context,
            bits: options.bits
        });
        // connect it up
        this.connectEffect(this._bitCrusherWorklet);
        this.bits = this._bitCrusherWorklet.bits;
    }
    static getDefaults() {
        return Object.assign((0, _effect.Effect).getDefaults(), {
            bits: 4
        });
    }
    dispose() {
        super.dispose();
        this._bitCrusherWorklet.dispose();
        return this;
    }
}
/**
 * Internal class which creates an AudioWorklet to do the bit crushing
 */ class BitCrusherWorklet extends (0, _toneAudioWorklet.ToneAudioWorklet) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(BitCrusherWorklet.getDefaults(), arguments));
        this.name = "BitCrusherWorklet";
        const options = (0, _defaults.optionsFromArguments)(BitCrusherWorklet.getDefaults(), arguments);
        this.input = new (0, _gain.Gain)({
            context: this.context
        });
        this.output = new (0, _gain.Gain)({
            context: this.context
        });
        this.bits = new (0, _param.Param)({
            context: this.context,
            value: options.bits,
            units: "positive",
            minValue: 1,
            maxValue: 16,
            param: this._dummyParam,
            swappable: true
        });
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioWorklet.ToneAudioWorklet).getDefaults(), {
            bits: 12
        });
    }
    _audioWorkletName() {
        return 0, _bitCrusherWorklet.workletName;
    }
    onReady(node) {
        (0, _toneAudioNode.connectSeries)(this.input, node, this.output);
        const bits = node.parameters.get("bits");
        this.bits.setParam(bits);
    }
    dispose() {
        super.dispose();
        this.input.dispose();
        this.output.dispose();
        this.bits.dispose();
        return this;
    }
}

},{"../core/worklet/ToneAudioWorklet":"gJKvW","./Effect":"g3o0i","../core/context/Gain":"kj68Y","../core/util/Defaults":"a9M5s","../core/context/ToneAudioNode":"kZ3Kj","../core/context/Param":"5PVlJ","./BitCrusher.worklet":"7dtyC","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7dtyC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "workletName", ()=>workletName);
parcelHelpers.export(exports, "bitCrusherWorklet", ()=>bitCrusherWorklet);
var _singleIOProcessorWorklet = require("../core/worklet/SingleIOProcessor.worklet");
var _workletGlobalScope = require("../core/worklet/WorkletGlobalScope");
const workletName = "bit-crusher";
const bitCrusherWorklet = /* javascript */ `
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;
(0, _workletGlobalScope.registerProcessor)(workletName, bitCrusherWorklet);

},{"../core/worklet/SingleIOProcessor.worklet":"c8hmn","../core/worklet/WorkletGlobalScope":"KZYDB","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cRQFX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Chebyshev is a waveshaper which is good
 * for making different types of distortion sounds.
 * Note that odd orders sound very different from even ones,
 * and order = 1 is no change.
 * Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).
 * @example
 * // create a new cheby
 * const cheby = new Tone.Chebyshev(50).toDestination();
 * // create a monosynth connected to our cheby
 * const synth = new Tone.MonoSynth().connect(cheby);
 * synth.triggerAttackRelease("C2", 0.4);
 * @category Effect
 */ parcelHelpers.export(exports, "Chebyshev", ()=>Chebyshev);
var _effect = require("./Effect");
var _defaults = require("../core/util/Defaults");
var _waveShaper = require("../signal/WaveShaper");
class Chebyshev extends (0, _effect.Effect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Chebyshev.getDefaults(), arguments, [
            "order"
        ]));
        this.name = "Chebyshev";
        const options = (0, _defaults.optionsFromArguments)(Chebyshev.getDefaults(), arguments, [
            "order"
        ]);
        this._shaper = new (0, _waveShaper.WaveShaper)({
            context: this.context,
            length: 4096
        });
        this._order = options.order;
        this.connectEffect(this._shaper);
        this.order = options.order;
        this.oversample = options.oversample;
    }
    static getDefaults() {
        return Object.assign((0, _effect.Effect).getDefaults(), {
            order: 1,
            oversample: "none"
        });
    }
    /**
     * get the coefficient for that degree
     * @param  x the x value
     * @param  degree
     * @param  memo memoize the computed value. this speeds up computation greatly.
     */ _getCoefficient(x, degree, memo) {
        if (memo.has(degree)) return memo.get(degree);
        else if (degree === 0) memo.set(degree, 0);
        else if (degree === 1) memo.set(degree, x);
        else memo.set(degree, 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo));
        return memo.get(degree);
    }
    /**
     * The order of the Chebyshev polynomial which creates the equation which is applied to the incoming
     * signal through a Tone.WaveShaper. The equations are in the form:
     * ```
     * order 2: 2x^2 + 1
     * order 3: 4x^3 + 3x
     * ```
     * @min 1
     * @max 100
     */ get order() {
        return this._order;
    }
    set order(order) {
        this._order = order;
        this._shaper.setMap((x)=>{
            return this._getCoefficient(x, order, new Map());
        });
    }
    /**
     * The oversampling of the effect. Can either be "none", "2x" or "4x".
     */ get oversample() {
        return this._shaper.oversample;
    }
    set oversample(oversampling) {
        this._shaper.oversample = oversampling;
    }
    dispose() {
        super.dispose();
        this._shaper.dispose();
        return this;
    }
}

},{"./Effect":"g3o0i","../core/util/Defaults":"a9M5s","../signal/WaveShaper":"k4nzV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5Fgrn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.
 * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects.
 * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).
 * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).
 *
 * @example
 * const chorus = new Tone.Chorus(4, 2.5, 0.5).toDestination().start();
 * const synth = new Tone.PolySynth().connect(chorus);
 * synth.triggerAttackRelease(["C3", "E3", "G3"], "8n");
 *
 * @category Effect
 */ parcelHelpers.export(exports, "Chorus", ()=>Chorus);
var _stereoFeedbackEffect = require("../effect/StereoFeedbackEffect");
var _defaults = require("../core/util/Defaults");
var _lfo = require("../source/oscillator/LFO");
var _delay = require("../core/context/Delay");
var _interface = require("../core/util/Interface");
class Chorus extends (0, _stereoFeedbackEffect.StereoFeedbackEffect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Chorus.getDefaults(), arguments, [
            "frequency",
            "delayTime",
            "depth"
        ]));
        this.name = "Chorus";
        const options = (0, _defaults.optionsFromArguments)(Chorus.getDefaults(), arguments, [
            "frequency",
            "delayTime",
            "depth"
        ]);
        this._depth = options.depth;
        this._delayTime = options.delayTime / 1000;
        this._lfoL = new (0, _lfo.LFO)({
            context: this.context,
            frequency: options.frequency,
            min: 0,
            max: 1
        });
        this._lfoR = new (0, _lfo.LFO)({
            context: this.context,
            frequency: options.frequency,
            min: 0,
            max: 1,
            phase: 180
        });
        this._delayNodeL = new (0, _delay.Delay)({
            context: this.context
        });
        this._delayNodeR = new (0, _delay.Delay)({
            context: this.context
        });
        this.frequency = this._lfoL.frequency;
        (0, _interface.readOnly)(this, [
            "frequency"
        ]);
        // have one LFO frequency control the other
        this._lfoL.frequency.connect(this._lfoR.frequency);
        // connections
        this.connectEffectLeft(this._delayNodeL);
        this.connectEffectRight(this._delayNodeR);
        // lfo setup
        this._lfoL.connect(this._delayNodeL.delayTime);
        this._lfoR.connect(this._delayNodeR.delayTime);
        // set the initial values
        this.depth = this._depth;
        this.type = options.type;
        this.spread = options.spread;
    }
    static getDefaults() {
        return Object.assign((0, _stereoFeedbackEffect.StereoFeedbackEffect).getDefaults(), {
            frequency: 1.5,
            delayTime: 3.5,
            depth: 0.7,
            type: "sine",
            spread: 180,
            feedback: 0,
            wet: 0.5
        });
    }
    /**
     * The depth of the effect. A depth of 1 makes the delayTime
     * modulate between 0 and 2*delayTime (centered around the delayTime).
     */ get depth() {
        return this._depth;
    }
    set depth(depth) {
        this._depth = depth;
        const deviation = this._delayTime * depth;
        this._lfoL.min = Math.max(this._delayTime - deviation, 0);
        this._lfoL.max = this._delayTime + deviation;
        this._lfoR.min = Math.max(this._delayTime - deviation, 0);
        this._lfoR.max = this._delayTime + deviation;
    }
    /**
     * The delayTime in milliseconds of the chorus. A larger delayTime
     * will give a more pronounced effect. Nominal range a delayTime
     * is between 2 and 20ms.
     */ get delayTime() {
        return this._delayTime * 1000;
    }
    set delayTime(delayTime) {
        this._delayTime = delayTime / 1000;
        this.depth = this._depth;
    }
    /**
     * The oscillator type of the LFO.
     */ get type() {
        return this._lfoL.type;
    }
    set type(type) {
        this._lfoL.type = type;
        this._lfoR.type = type;
    }
    /**
     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.
     * When set to 180, LFO's will be panned hard left and right respectively.
     */ get spread() {
        return this._lfoR.phase - this._lfoL.phase;
    }
    set spread(spread) {
        this._lfoL.phase = 90 - spread / 2;
        this._lfoR.phase = spread / 2 + 90;
    }
    /**
     * Start the effect.
     */ start(time) {
        this._lfoL.start(time);
        this._lfoR.start(time);
        return this;
    }
    /**
     * Stop the lfo
     */ stop(time) {
        this._lfoL.stop(time);
        this._lfoR.stop(time);
        return this;
    }
    /**
     * Sync the filter to the transport. See [[LFO.sync]]
     */ sync() {
        this._lfoL.sync();
        this._lfoR.sync();
        return this;
    }
    /**
     * Unsync the filter from the transport.
     */ unsync() {
        this._lfoL.unsync();
        this._lfoR.unsync();
        return this;
    }
    dispose() {
        super.dispose();
        this._lfoL.dispose();
        this._lfoR.dispose();
        this._delayNodeL.dispose();
        this._delayNodeR.dispose();
        this.frequency.dispose();
        return this;
    }
}

},{"../effect/StereoFeedbackEffect":"2txKj","../core/util/Defaults":"a9M5s","../source/oscillator/LFO":"jsBJT","../core/context/Delay":"1qHQA","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2txKj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Base class for stereo feedback effects where the effectReturn is fed back into the same channel.
 */ parcelHelpers.export(exports, "StereoFeedbackEffect", ()=>StereoFeedbackEffect);
var _stereoEffect = require("./StereoEffect");
var _signal = require("../signal/Signal");
var _gain = require("../core/context/Gain");
var _interface = require("../core/util/Interface");
var _split = require("../component/channel/Split");
var _merge = require("../component/channel/Merge");
class StereoFeedbackEffect extends (0, _stereoEffect.StereoEffect) {
    constructor(options){
        super(options);
        this.feedback = new (0, _signal.Signal)({
            context: this.context,
            value: options.feedback,
            units: "normalRange"
        });
        this._feedbackL = new (0, _gain.Gain)({
            context: this.context
        });
        this._feedbackR = new (0, _gain.Gain)({
            context: this.context
        });
        this._feedbackSplit = new (0, _split.Split)({
            context: this.context,
            channels: 2
        });
        this._feedbackMerge = new (0, _merge.Merge)({
            context: this.context,
            channels: 2
        });
        this._merge.connect(this._feedbackSplit);
        this._feedbackMerge.connect(this._split);
        // the left output connected to the left input
        this._feedbackSplit.connect(this._feedbackL, 0, 0);
        this._feedbackL.connect(this._feedbackMerge, 0, 0);
        // the right output connected to the right input
        this._feedbackSplit.connect(this._feedbackR, 1, 0);
        this._feedbackR.connect(this._feedbackMerge, 0, 1);
        // the feedback control
        this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);
        (0, _interface.readOnly)(this, [
            "feedback"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _stereoEffect.StereoEffect).getDefaults(), {
            feedback: 0.5
        });
    }
    dispose() {
        super.dispose();
        this.feedback.dispose();
        this._feedbackL.dispose();
        this._feedbackR.dispose();
        this._feedbackSplit.dispose();
        this._feedbackMerge.dispose();
        return this;
    }
}

},{"./StereoEffect":"3INxk","../signal/Signal":"980ri","../core/context/Gain":"kj68Y","../core/util/Interface":"hVOjA","../component/channel/Split":"hPRgj","../component/channel/Merge":"xBcDu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3INxk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Base class for Stereo effects.
 */ parcelHelpers.export(exports, "StereoEffect", ()=>StereoEffect);
var _toneAudioNode = require("../core/context/ToneAudioNode");
var _crossFade = require("../component/channel/CrossFade");
var _split = require("../component/channel/Split");
var _gain = require("../core/context/Gain");
var _merge = require("../component/channel/Merge");
var _interface = require("../core/util/Interface");
class StereoEffect extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(options){
        super(options);
        this.name = "StereoEffect";
        this.input = new (0, _gain.Gain)({
            context: this.context
        });
        // force mono sources to be stereo
        this.input.channelCount = 2;
        this.input.channelCountMode = "explicit";
        this._dryWet = this.output = new (0, _crossFade.CrossFade)({
            context: this.context,
            fade: options.wet
        });
        this.wet = this._dryWet.fade;
        this._split = new (0, _split.Split)({
            context: this.context,
            channels: 2
        });
        this._merge = new (0, _merge.Merge)({
            context: this.context,
            channels: 2
        });
        // connections
        this.input.connect(this._split);
        // dry wet connections
        this.input.connect(this._dryWet.a);
        this._merge.connect(this._dryWet.b);
        (0, _interface.readOnly)(this, [
            "wet"
        ]);
    }
    /**
     * Connect the left part of the effect
     */ connectEffectLeft(...nodes) {
        this._split.connect(nodes[0], 0, 0);
        (0, _toneAudioNode.connectSeries)(...nodes);
        (0, _toneAudioNode.connect)(nodes[nodes.length - 1], this._merge, 0, 0);
    }
    /**
     * Connect the right part of the effect
     */ connectEffectRight(...nodes) {
        this._split.connect(nodes[0], 1, 0);
        (0, _toneAudioNode.connectSeries)(...nodes);
        (0, _toneAudioNode.connect)(nodes[nodes.length - 1], this._merge, 0, 1);
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            wet: 1
        });
    }
    dispose() {
        super.dispose();
        this._dryWet.dispose();
        this._split.dispose();
        this._merge.dispose();
        return this;
    }
}

},{"../core/context/ToneAudioNode":"kZ3Kj","../component/channel/CrossFade":"cd1EQ","../component/channel/Split":"hPRgj","../core/context/Gain":"kj68Y","../component/channel/Merge":"xBcDu","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hPRgj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Split splits an incoming signal into the number of given channels.
 *
 * @example
 * const split = new Tone.Split();
 * // stereoSignal.connect(split);
 * @category Component
 */ parcelHelpers.export(exports, "Split", ()=>Split);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
class Split extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Split.getDefaults(), arguments, [
            "channels"
        ]));
        this.name = "Split";
        const options = (0, _defaults.optionsFromArguments)(Split.getDefaults(), arguments, [
            "channels"
        ]);
        this._splitter = this.input = this.output = this.context.createChannelSplitter(options.channels);
        this._internalChannels = [
            this._splitter
        ];
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            channels: 2
        });
    }
    dispose() {
        super.dispose();
        this._splitter.disconnect();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"xBcDu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Merge brings multiple mono input channels into a single multichannel output channel.
 *
 * @example
 * const merge = new Tone.Merge().toDestination();
 * // routing a sine tone in the left channel
 * const osc = new Tone.Oscillator().connect(merge, 0, 0).start();
 * // and noise in the right channel
 * const noise = new Tone.Noise().connect(merge, 0, 1).start();;
 * @category Component
 */ parcelHelpers.export(exports, "Merge", ()=>Merge);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
class Merge extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Merge.getDefaults(), arguments, [
            "channels"
        ]));
        this.name = "Merge";
        const options = (0, _defaults.optionsFromArguments)(Merge.getDefaults(), arguments, [
            "channels"
        ]);
        this._merger = this.output = this.input = this.context.createChannelMerger(options.channels);
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            channels: 2
        });
    }
    dispose() {
        super.dispose();
        this._merger.disconnect();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kWHiD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A simple distortion effect using Tone.WaveShaper.
 * Algorithm from [this stackoverflow answer](http://stackoverflow.com/a/22313408).
 *
 * @example
 * const dist = new Tone.Distortion(0.8).toDestination();
 * const fm = new Tone.FMSynth().connect(dist);
 * fm.triggerAttackRelease("A1", "8n");
 * @category Effect
 */ parcelHelpers.export(exports, "Distortion", ()=>Distortion);
var _defaults = require("../core/util/Defaults");
var _waveShaper = require("../signal/WaveShaper");
var _effect = require("./Effect");
class Distortion extends (0, _effect.Effect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Distortion.getDefaults(), arguments, [
            "distortion"
        ]));
        this.name = "Distortion";
        const options = (0, _defaults.optionsFromArguments)(Distortion.getDefaults(), arguments, [
            "distortion"
        ]);
        this._shaper = new (0, _waveShaper.WaveShaper)({
            context: this.context,
            length: 4096
        });
        this._distortion = options.distortion;
        this.connectEffect(this._shaper);
        this.distortion = options.distortion;
        this.oversample = options.oversample;
    }
    static getDefaults() {
        return Object.assign((0, _effect.Effect).getDefaults(), {
            distortion: 0.4,
            oversample: "none"
        });
    }
    /**
     * The amount of distortion. Nominal range is between 0 and 1.
     */ get distortion() {
        return this._distortion;
    }
    set distortion(amount) {
        this._distortion = amount;
        const k = amount * 100;
        const deg = Math.PI / 180;
        this._shaper.setMap((x)=>{
            if (Math.abs(x) < 0.001) // should output 0 when input is 0
            return 0;
            else return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));
        });
    }
    /**
     * The oversampling of the effect. Can either be "none", "2x" or "4x".
     */ get oversample() {
        return this._shaper.oversample;
    }
    set oversample(oversampling) {
        this._shaper.oversample = oversampling;
    }
    dispose() {
        super.dispose();
        this._shaper.dispose();
        return this;
    }
}

},{"../core/util/Defaults":"a9M5s","../signal/WaveShaper":"k4nzV","./Effect":"g3o0i","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5n2nf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.
 *
 * @param delayTime The delay applied to the incoming signal.
 * @param feedback The amount of the effected signal which is fed back through the delay.
 * @example
 * const feedbackDelay = new Tone.FeedbackDelay("8n", 0.5).toDestination();
 * const tom = new Tone.MembraneSynth({
 * 	octaves: 4,
 * 	pitchDecay: 0.1
 * }).connect(feedbackDelay);
 * tom.triggerAttackRelease("A2", "32n");
 * @category Effect
 */ parcelHelpers.export(exports, "FeedbackDelay", ()=>FeedbackDelay);
var _delay = require("../core/context/Delay");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
var _feedbackEffect = require("./FeedbackEffect");
class FeedbackDelay extends (0, _feedbackEffect.FeedbackEffect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(FeedbackDelay.getDefaults(), arguments, [
            "delayTime",
            "feedback"
        ]));
        this.name = "FeedbackDelay";
        const options = (0, _defaults.optionsFromArguments)(FeedbackDelay.getDefaults(), arguments, [
            "delayTime",
            "feedback"
        ]);
        this._delayNode = new (0, _delay.Delay)({
            context: this.context,
            delayTime: options.delayTime,
            maxDelay: options.maxDelay
        });
        this.delayTime = this._delayNode.delayTime;
        // connect it up
        this.connectEffect(this._delayNode);
        (0, _interface.readOnly)(this, "delayTime");
    }
    static getDefaults() {
        return Object.assign((0, _feedbackEffect.FeedbackEffect).getDefaults(), {
            delayTime: 0.25,
            maxDelay: 1
        });
    }
    dispose() {
        super.dispose();
        this._delayNode.dispose();
        this.delayTime.dispose();
        return this;
    }
}

},{"../core/context/Delay":"1qHQA","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","./FeedbackEffect":"kSZ9b","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kSZ9b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * FeedbackEffect provides a loop between an audio source and its own output.
 * This is a base-class for feedback effects.
 */ parcelHelpers.export(exports, "FeedbackEffect", ()=>FeedbackEffect);
var _gain = require("../core/context/Gain");
var _interface = require("../core/util/Interface");
var _effect = require("./Effect");
class FeedbackEffect extends (0, _effect.Effect) {
    constructor(options){
        super(options);
        this.name = "FeedbackEffect";
        this._feedbackGain = new (0, _gain.Gain)({
            context: this.context,
            gain: options.feedback,
            units: "normalRange"
        });
        this.feedback = this._feedbackGain.gain;
        (0, _interface.readOnly)(this, "feedback");
        // the feedback loop
        this.effectReturn.chain(this._feedbackGain, this.effectSend);
    }
    static getDefaults() {
        return Object.assign((0, _effect.Effect).getDefaults(), {
            feedback: 0.125
        });
    }
    dispose() {
        super.dispose();
        this._feedbackGain.dispose();
        this.feedback.dispose();
        return this;
    }
}

},{"../core/context/Gain":"kj68Y","../core/util/Interface":"hVOjA","./Effect":"g3o0i","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bB1gQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * FrequencyShifter can be used to shift all frequencies of a signal by a fixed amount.
 * The amount can be changed at audio rate and the effect is applied in real time.
 * The frequency shifting is implemented with a technique called single side band modulation using a ring modulator.
 * Note: Contrary to pitch shifting, all frequencies are shifted by the same amount,
 * destroying the harmonic relationship between them. This leads to the classic ring modulator timbre distortion.
 * The algorithm will produces some aliasing towards the high end, especially if your source material
 * contains a lot of high frequencies. Unfortunatelly the webaudio API does not support resampling
 * buffers in real time, so it is not possible to fix it properly. Depending on the use case it might
 * be an option to low pass filter your input before frequency shifting it to get ride of the aliasing.
 * You can find a very detailed description of the algorithm here: https://larzeitlin.github.io/RMFS/
 *
 * @example
 * const input = new Tone.Oscillator(230, "sawtooth").start();
 * const shift = new Tone.FrequencyShifter(42).toDestination();
 * input.connect(shift);
 * @category Effect
 */ parcelHelpers.export(exports, "FrequencyShifter", ()=>FrequencyShifter);
var _phaseShiftAllpass = require("../component/filter/PhaseShiftAllpass");
var _defaults = require("../core/util/Defaults");
var _effect = require("../effect/Effect");
var _add = require("../signal/Add");
var _multiply = require("../signal/Multiply");
var _negate = require("../signal/Negate");
var _signal = require("../signal/Signal");
var _oscillator = require("../source/oscillator/Oscillator");
var _toneOscillatorNode = require("../source/oscillator/ToneOscillatorNode");
class FrequencyShifter extends (0, _effect.Effect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(FrequencyShifter.getDefaults(), arguments, [
            "frequency"
        ]));
        this.name = "FrequencyShifter";
        const options = (0, _defaults.optionsFromArguments)(FrequencyShifter.getDefaults(), arguments, [
            "frequency"
        ]);
        this.frequency = new (0, _signal.Signal)({
            context: this.context,
            units: "frequency",
            value: options.frequency,
            minValue: -this.context.sampleRate / 2,
            maxValue: this.context.sampleRate / 2
        });
        this._sine = new (0, _toneOscillatorNode.ToneOscillatorNode)({
            context: this.context,
            type: "sine"
        });
        this._cosine = new (0, _oscillator.Oscillator)({
            context: this.context,
            phase: -90,
            type: "sine"
        });
        this._sineMultiply = new (0, _multiply.Multiply)({
            context: this.context
        });
        this._cosineMultiply = new (0, _multiply.Multiply)({
            context: this.context
        });
        this._negate = new (0, _negate.Negate)({
            context: this.context
        });
        this._add = new (0, _add.Add)({
            context: this.context
        });
        this._phaseShifter = new (0, _phaseShiftAllpass.PhaseShiftAllpass)({
            context: this.context
        });
        this.effectSend.connect(this._phaseShifter);
        // connect the carrier frequency signal to the two oscillators
        this.frequency.fan(this._sine.frequency, this._cosine.frequency);
        this._phaseShifter.offset90.connect(this._cosineMultiply);
        this._cosine.connect(this._cosineMultiply.factor);
        this._phaseShifter.connect(this._sineMultiply);
        this._sine.connect(this._sineMultiply.factor);
        this._sineMultiply.connect(this._negate);
        this._cosineMultiply.connect(this._add);
        this._negate.connect(this._add.addend);
        this._add.connect(this.effectReturn);
        // start the oscillators at the same time
        const now = this.immediate();
        this._sine.start(now);
        this._cosine.start(now);
    }
    static getDefaults() {
        return Object.assign((0, _effect.Effect).getDefaults(), {
            frequency: 0
        });
    }
    dispose() {
        super.dispose();
        this.frequency.dispose();
        this._add.dispose();
        this._cosine.dispose();
        this._cosineMultiply.dispose();
        this._negate.dispose();
        this._phaseShifter.dispose();
        this._sine.dispose();
        this._sineMultiply.dispose();
        return this;
    }
}

},{"../component/filter/PhaseShiftAllpass":"8SNb7","../core/util/Defaults":"a9M5s","../effect/Effect":"g3o0i","../signal/Add":"jeoK8","../signal/Multiply":"4C0VG","../signal/Negate":"9nMgn","../signal/Signal":"980ri","../source/oscillator/Oscillator":"204g3","../source/oscillator/ToneOscillatorNode":"gLw4W","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8SNb7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * PhaseShiftAllpass is an very efficient implementation of a Hilbert Transform
 * using two Allpass filter banks whose outputs have a phase difference of 90°.
 * Here the `offset90` phase is offset by +90° in relation to `output`.
 * Coefficients and structure was developed by Olli Niemitalo.
 * For more details see: http://yehar.com/blog/?p=368
 * @category Component
 */ parcelHelpers.export(exports, "PhaseShiftAllpass", ()=>PhaseShiftAllpass);
var _gain = require("../../core/context/Gain");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
class PhaseShiftAllpass extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(options){
        super(options);
        this.name = "PhaseShiftAllpass";
        this.input = new (0, _gain.Gain)({
            context: this.context
        });
        /**
         * The phase shifted output
         */ this.output = new (0, _gain.Gain)({
            context: this.context
        });
        /**
         * The PhaseShifted allpass output
         */ this.offset90 = new (0, _gain.Gain)({
            context: this.context
        });
        const allpassBank1Values = [
            0.6923878,
            0.9360654322959,
            0.9882295226860,
            0.9987488452737
        ];
        const allpassBank2Values = [
            0.4021921162426,
            0.8561710882420,
            0.9722909545651,
            0.9952884791278
        ];
        this._bank0 = this._createAllPassFilterBank(allpassBank1Values);
        this._bank1 = this._createAllPassFilterBank(allpassBank2Values);
        this._oneSampleDelay = this.context.createIIRFilter([
            0.0,
            1.0
        ], [
            1.0,
            0.0
        ]);
        // connect Allpass filter banks
        (0, _toneAudioNode.connectSeries)(this.input, ...this._bank0, this._oneSampleDelay, this.output);
        (0, _toneAudioNode.connectSeries)(this.input, ...this._bank1, this.offset90);
    }
    /**
     * Create all of the IIR filters from an array of values using the coefficient calculation.
     */ _createAllPassFilterBank(bankValues) {
        const nodes = bankValues.map((value)=>{
            const coefficients = [
                [
                    value * value,
                    0,
                    -1
                ],
                [
                    1,
                    0,
                    -(value * value)
                ]
            ];
            return this.context.createIIRFilter(coefficients[0], coefficients[1]);
        });
        return nodes;
    }
    dispose() {
        super.dispose();
        this.input.dispose();
        this.output.dispose();
        this.offset90.dispose();
        this._bank0.forEach((f)=>f.disconnect());
        this._bank1.forEach((f)=>f.disconnect());
        this._oneSampleDelay.disconnect();
        return this;
    }
}

},{"../../core/context/Gain":"kj68Y","../../core/context/ToneAudioNode":"kZ3Kj","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k7mdD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).
 * Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).
 * Freeverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using [[Reverb]].
 * @example
 * const freeverb = new Tone.Freeverb().toDestination();
 * freeverb.dampening = 1000;
 * // routing synth through the reverb
 * const synth = new Tone.NoiseSynth().connect(freeverb);
 * synth.triggerAttackRelease(0.05);
 * @category Effect
 */ parcelHelpers.export(exports, "Freeverb", ()=>Freeverb);
var _stereoEffect = require("./StereoEffect");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
var _signal = require("../signal/Signal");
var _lowpassCombFilter = require("../component/filter/LowpassCombFilter");
/**
 * An array of comb filter delay values from Freeverb implementation
 */ const combFilterTunings = [
    1557 / 44100,
    1617 / 44100,
    1491 / 44100,
    1422 / 44100,
    1277 / 44100,
    1356 / 44100,
    1188 / 44100,
    1116 / 44100
];
/**
 * An array of allpass filter frequency values from Freeverb implementation
 */ const allpassFilterFrequencies = [
    225,
    556,
    441,
    341
];
class Freeverb extends (0, _stereoEffect.StereoEffect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Freeverb.getDefaults(), arguments, [
            "roomSize",
            "dampening"
        ]));
        this.name = "Freeverb";
        /**
         * the comb filters
         */ this._combFilters = [];
        /**
         * the allpass filters on the left
         */ this._allpassFiltersL = [];
        /**
         * the allpass filters on the right
         */ this._allpassFiltersR = [];
        const options = (0, _defaults.optionsFromArguments)(Freeverb.getDefaults(), arguments, [
            "roomSize",
            "dampening"
        ]);
        this.roomSize = new (0, _signal.Signal)({
            context: this.context,
            value: options.roomSize,
            units: "normalRange"
        });
        // make the allpass filters on the right
        this._allpassFiltersL = allpassFilterFrequencies.map((freq)=>{
            const allpassL = this.context.createBiquadFilter();
            allpassL.type = "allpass";
            allpassL.frequency.value = freq;
            return allpassL;
        });
        // make the allpass filters on the left
        this._allpassFiltersR = allpassFilterFrequencies.map((freq)=>{
            const allpassR = this.context.createBiquadFilter();
            allpassR.type = "allpass";
            allpassR.frequency.value = freq;
            return allpassR;
        });
        // make the comb filters
        this._combFilters = combFilterTunings.map((delayTime, index)=>{
            const lfpf = new (0, _lowpassCombFilter.LowpassCombFilter)({
                context: this.context,
                dampening: options.dampening,
                delayTime
            });
            if (index < combFilterTunings.length / 2) this.connectEffectLeft(lfpf, ...this._allpassFiltersL);
            else this.connectEffectRight(lfpf, ...this._allpassFiltersR);
            this.roomSize.connect(lfpf.resonance);
            return lfpf;
        });
        (0, _interface.readOnly)(this, [
            "roomSize"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _stereoEffect.StereoEffect).getDefaults(), {
            roomSize: 0.7,
            dampening: 3000
        });
    }
    /**
     * The amount of dampening of the reverberant signal.
     */ get dampening() {
        return this._combFilters[0].dampening;
    }
    set dampening(d) {
        this._combFilters.forEach((c)=>c.dampening = d);
    }
    dispose() {
        super.dispose();
        this._allpassFiltersL.forEach((al)=>al.disconnect());
        this._allpassFiltersR.forEach((ar)=>ar.disconnect());
        this._combFilters.forEach((cf)=>cf.dispose());
        this.roomSize.dispose();
        return this;
    }
}

},{"./StereoEffect":"3INxk","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","../signal/Signal":"980ri","../component/filter/LowpassCombFilter":"01n6w","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gi3q6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)
 * tuned by John Chowning in 1970.
 * It is made up of three allpass filters and four [[FeedbackCombFilter]].
 * JCReverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using [[Reverb]].
 * @example
 * const reverb = new Tone.JCReverb(0.4).toDestination();
 * const delay = new Tone.FeedbackDelay(0.5);
 * // connecting the synth to reverb through delay
 * const synth = new Tone.DuoSynth().chain(delay, reverb);
 * synth.triggerAttackRelease("A4", "8n");
 *
 * @category Effect
 */ parcelHelpers.export(exports, "JCReverb", ()=>JCReverb);
var _stereoEffect = require("./StereoEffect");
var _defaults = require("../core/util/Defaults");
var _scale = require("../signal/Scale");
var _signal = require("../signal/Signal");
var _feedbackCombFilter = require("../component/filter/FeedbackCombFilter");
var _interface = require("../core/util/Interface");
/**
 * an array of the comb filter delay time values
 */ const combFilterDelayTimes = [
    0.06748,
    0.06404,
    0.08212,
    0.09004
];
/**
 * the resonances of each of the comb filters
 */ const combFilterResonances = [
    0.773,
    0.802,
    0.753,
    0.733
];
/**
 * the allpass filter frequencies
 */ const allpassFilterFreqs = [
    347,
    113,
    37
];
class JCReverb extends (0, _stereoEffect.StereoEffect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(JCReverb.getDefaults(), arguments, [
            "roomSize"
        ]));
        this.name = "JCReverb";
        /**
         * a series of allpass filters
         */ this._allpassFilters = [];
        /**
         * parallel feedback comb filters
         */ this._feedbackCombFilters = [];
        const options = (0, _defaults.optionsFromArguments)(JCReverb.getDefaults(), arguments, [
            "roomSize"
        ]);
        this.roomSize = new (0, _signal.Signal)({
            context: this.context,
            value: options.roomSize,
            units: "normalRange"
        });
        this._scaleRoomSize = new (0, _scale.Scale)({
            context: this.context,
            min: -0.733,
            max: 0.197
        });
        // make the allpass filters
        this._allpassFilters = allpassFilterFreqs.map((freq)=>{
            const allpass = this.context.createBiquadFilter();
            allpass.type = "allpass";
            allpass.frequency.value = freq;
            return allpass;
        });
        // and the comb filters
        this._feedbackCombFilters = combFilterDelayTimes.map((delayTime, index)=>{
            const fbcf = new (0, _feedbackCombFilter.FeedbackCombFilter)({
                context: this.context,
                delayTime
            });
            this._scaleRoomSize.connect(fbcf.resonance);
            fbcf.resonance.value = combFilterResonances[index];
            if (index < combFilterDelayTimes.length / 2) this.connectEffectLeft(...this._allpassFilters, fbcf);
            else this.connectEffectRight(...this._allpassFilters, fbcf);
            return fbcf;
        });
        // chain the allpass filters together
        this.roomSize.connect(this._scaleRoomSize);
        (0, _interface.readOnly)(this, [
            "roomSize"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _stereoEffect.StereoEffect).getDefaults(), {
            roomSize: 0.5
        });
    }
    dispose() {
        super.dispose();
        this._allpassFilters.forEach((apf)=>apf.disconnect());
        this._feedbackCombFilters.forEach((fbcf)=>fbcf.dispose());
        this.roomSize.dispose();
        this._scaleRoomSize.dispose();
        return this;
    }
}

},{"./StereoEffect":"3INxk","../core/util/Defaults":"a9M5s","../signal/Scale":"3qxrw","../signal/Signal":"980ri","../component/filter/FeedbackCombFilter":"iMAnY","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"avdgi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * PingPongDelay is a feedback delay effect where the echo is heard
 * first in one channel and next in the opposite channel. In a stereo
 * system these are the right and left channels.
 * PingPongDelay in more simplified terms is two Tone.FeedbackDelays
 * with independent delay values. Each delay is routed to one channel
 * (left or right), and the channel triggered second will always
 * trigger at the same interval after the first.
 * @example
 * const pingPong = new Tone.PingPongDelay("4n", 0.2).toDestination();
 * const drum = new Tone.MembraneSynth().connect(pingPong);
 * drum.triggerAttackRelease("C4", "32n");
 * @category Effect
 */ parcelHelpers.export(exports, "PingPongDelay", ()=>PingPongDelay);
var _stereoXFeedbackEffect = require("./StereoXFeedbackEffect");
var _defaults = require("../core/util/Defaults");
var _delay = require("../core/context/Delay");
var _signal = require("../signal/Signal");
var _interface = require("../core/util/Interface");
class PingPongDelay extends (0, _stereoXFeedbackEffect.StereoXFeedbackEffect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(PingPongDelay.getDefaults(), arguments, [
            "delayTime",
            "feedback"
        ]));
        this.name = "PingPongDelay";
        const options = (0, _defaults.optionsFromArguments)(PingPongDelay.getDefaults(), arguments, [
            "delayTime",
            "feedback"
        ]);
        this._leftDelay = new (0, _delay.Delay)({
            context: this.context,
            maxDelay: options.maxDelay
        });
        this._rightDelay = new (0, _delay.Delay)({
            context: this.context,
            maxDelay: options.maxDelay
        });
        this._rightPreDelay = new (0, _delay.Delay)({
            context: this.context,
            maxDelay: options.maxDelay
        });
        this.delayTime = new (0, _signal.Signal)({
            context: this.context,
            units: "time",
            value: options.delayTime
        });
        // connect it up
        this.connectEffectLeft(this._leftDelay);
        this.connectEffectRight(this._rightPreDelay, this._rightDelay);
        this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);
        // rearranged the feedback to be after the rightPreDelay
        this._feedbackL.disconnect();
        this._feedbackL.connect(this._rightDelay);
        (0, _interface.readOnly)(this, [
            "delayTime"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _stereoXFeedbackEffect.StereoXFeedbackEffect).getDefaults(), {
            delayTime: 0.25,
            maxDelay: 1
        });
    }
    dispose() {
        super.dispose();
        this._leftDelay.dispose();
        this._rightDelay.dispose();
        this._rightPreDelay.dispose();
        this.delayTime.dispose();
        return this;
    }
}

},{"./StereoXFeedbackEffect":"h6Kio","../core/util/Defaults":"a9M5s","../core/context/Delay":"1qHQA","../signal/Signal":"980ri","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h6Kio":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right
 * and right to left instead of on the same channel.
 * ```
 * +--------------------------------+ feedbackL <-----------------------------------+
 * |                                                                                |
 * +-->                          +----->        +---->                          +-----+
 *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |
 * +-->                          +----->        +---->                          +---+ |
 * |                                                                                  |
 * +--------------------------------+ feedbackR <-------------------------------------+
 * ```
 */ parcelHelpers.export(exports, "StereoXFeedbackEffect", ()=>StereoXFeedbackEffect);
var _stereoFeedbackEffect = require("./StereoFeedbackEffect");
var _interface = require("../core/util/Interface");
class StereoXFeedbackEffect extends (0, _stereoFeedbackEffect.StereoFeedbackEffect) {
    constructor(options){
        super(options);
        // the left output connected to the right input
        this._feedbackL.disconnect();
        this._feedbackL.connect(this._feedbackMerge, 0, 1);
        // the left output connected to the right input
        this._feedbackR.disconnect();
        this._feedbackR.connect(this._feedbackMerge, 0, 0);
        (0, _interface.readOnly)(this, [
            "feedback"
        ]);
    }
}

},{"./StereoFeedbackEffect":"2txKj","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8mlNP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * PitchShift does near-realtime pitch shifting to the incoming signal.
 * The effect is achieved by speeding up or slowing down the delayTime
 * of a DelayNode using a sawtooth wave.
 * Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).
 * Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).
 * @category Effect
 */ parcelHelpers.export(exports, "PitchShift", ()=>PitchShift);
var _feedbackEffect = require("./FeedbackEffect");
var _defaults = require("../core/util/Defaults");
var _lfo = require("../source/oscillator/LFO");
var _delay = require("../core/context/Delay");
var _crossFade = require("../component/channel/CrossFade");
var _signal = require("../signal/Signal");
var _interface = require("../core/util/Interface");
var _conversions = require("../core/type/Conversions");
class PitchShift extends (0, _feedbackEffect.FeedbackEffect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(PitchShift.getDefaults(), arguments, [
            "pitch"
        ]));
        this.name = "PitchShift";
        const options = (0, _defaults.optionsFromArguments)(PitchShift.getDefaults(), arguments, [
            "pitch"
        ]);
        this._frequency = new (0, _signal.Signal)({
            context: this.context
        });
        this._delayA = new (0, _delay.Delay)({
            maxDelay: 1,
            context: this.context
        });
        this._lfoA = new (0, _lfo.LFO)({
            context: this.context,
            min: 0,
            max: 0.1,
            type: "sawtooth"
        }).connect(this._delayA.delayTime);
        this._delayB = new (0, _delay.Delay)({
            maxDelay: 1,
            context: this.context
        });
        this._lfoB = new (0, _lfo.LFO)({
            context: this.context,
            min: 0,
            max: 0.1,
            type: "sawtooth",
            phase: 180
        }).connect(this._delayB.delayTime);
        this._crossFade = new (0, _crossFade.CrossFade)({
            context: this.context
        });
        this._crossFadeLFO = new (0, _lfo.LFO)({
            context: this.context,
            min: 0,
            max: 1,
            type: "triangle",
            phase: 90
        }).connect(this._crossFade.fade);
        this._feedbackDelay = new (0, _delay.Delay)({
            delayTime: options.delayTime,
            context: this.context
        });
        this.delayTime = this._feedbackDelay.delayTime;
        (0, _interface.readOnly)(this, "delayTime");
        this._pitch = options.pitch;
        this._windowSize = options.windowSize;
        // connect the two delay lines up
        this._delayA.connect(this._crossFade.a);
        this._delayB.connect(this._crossFade.b);
        // connect the frequency
        this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);
        // route the input
        this.effectSend.fan(this._delayA, this._delayB);
        this._crossFade.chain(this._feedbackDelay, this.effectReturn);
        // start the LFOs at the same time
        const now = this.now();
        this._lfoA.start(now);
        this._lfoB.start(now);
        this._crossFadeLFO.start(now);
        // set the initial value
        this.windowSize = this._windowSize;
    }
    static getDefaults() {
        return Object.assign((0, _feedbackEffect.FeedbackEffect).getDefaults(), {
            pitch: 0,
            windowSize: 0.1,
            delayTime: 0,
            feedback: 0
        });
    }
    /**
     * Repitch the incoming signal by some interval (measured in semi-tones).
     * @example
     * const pitchShift = new Tone.PitchShift().toDestination();
     * const osc = new Tone.Oscillator().connect(pitchShift).start().toDestination();
     * pitchShift.pitch = -12; // down one octave
     * pitchShift.pitch = 7; // up a fifth
     */ get pitch() {
        return this._pitch;
    }
    set pitch(interval) {
        this._pitch = interval;
        let factor = 0;
        if (interval < 0) {
            this._lfoA.min = 0;
            this._lfoA.max = this._windowSize;
            this._lfoB.min = 0;
            this._lfoB.max = this._windowSize;
            factor = (0, _conversions.intervalToFrequencyRatio)(interval - 1) + 1;
        } else {
            this._lfoA.min = this._windowSize;
            this._lfoA.max = 0;
            this._lfoB.min = this._windowSize;
            this._lfoB.max = 0;
            factor = (0, _conversions.intervalToFrequencyRatio)(interval) - 1;
        }
        this._frequency.value = factor * (1.2 / this._windowSize);
    }
    /**
     * The window size corresponds roughly to the sample length in a looping sampler.
     * Smaller values are desirable for a less noticeable delay time of the pitch shifted
     * signal, but larger values will result in smoother pitch shifting for larger intervals.
     * A nominal range of 0.03 to 0.1 is recommended.
     */ get windowSize() {
        return this._windowSize;
    }
    set windowSize(size) {
        this._windowSize = this.toSeconds(size);
        this.pitch = this._pitch;
    }
    dispose() {
        super.dispose();
        this._frequency.dispose();
        this._delayA.dispose();
        this._delayB.dispose();
        this._lfoA.dispose();
        this._lfoB.dispose();
        this._crossFade.dispose();
        this._crossFadeLFO.dispose();
        this._feedbackDelay.dispose();
        return this;
    }
}

},{"./FeedbackEffect":"kSZ9b","../core/util/Defaults":"a9M5s","../source/oscillator/LFO":"jsBJT","../core/context/Delay":"1qHQA","../component/channel/CrossFade":"cd1EQ","../signal/Signal":"980ri","../core/util/Interface":"hVOjA","../core/type/Conversions":"iww1u","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8FJ4l":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Phaser is a phaser effect. Phasers work by changing the phase
 * of different frequency components of an incoming signal. Read more on
 * [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).
 * Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).
 * @example
 * const phaser = new Tone.Phaser({
 * 	frequency: 15,
 * 	octaves: 5,
 * 	baseFrequency: 1000
 * }).toDestination();
 * const synth = new Tone.FMSynth().connect(phaser);
 * synth.triggerAttackRelease("E3", "2n");
 * @category Effect
 */ parcelHelpers.export(exports, "Phaser", ()=>Phaser);
var _stereoEffect = require("./StereoEffect");
var _defaults = require("../core/util/Defaults");
var _lfo = require("../source/oscillator/LFO");
var _signal = require("../signal/Signal");
var _interface = require("../core/util/Interface");
class Phaser extends (0, _stereoEffect.StereoEffect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Phaser.getDefaults(), arguments, [
            "frequency",
            "octaves",
            "baseFrequency"
        ]));
        this.name = "Phaser";
        const options = (0, _defaults.optionsFromArguments)(Phaser.getDefaults(), arguments, [
            "frequency",
            "octaves",
            "baseFrequency"
        ]);
        this._lfoL = new (0, _lfo.LFO)({
            context: this.context,
            frequency: options.frequency,
            min: 0,
            max: 1
        });
        this._lfoR = new (0, _lfo.LFO)({
            context: this.context,
            frequency: options.frequency,
            min: 0,
            max: 1,
            phase: 180
        });
        this._baseFrequency = this.toFrequency(options.baseFrequency);
        this._octaves = options.octaves;
        this.Q = new (0, _signal.Signal)({
            context: this.context,
            value: options.Q,
            units: "positive"
        });
        this._filtersL = this._makeFilters(options.stages, this._lfoL);
        this._filtersR = this._makeFilters(options.stages, this._lfoR);
        this.frequency = this._lfoL.frequency;
        this.frequency.value = options.frequency;
        // connect them up
        this.connectEffectLeft(...this._filtersL);
        this.connectEffectRight(...this._filtersR);
        // control the frequency with one LFO
        this._lfoL.frequency.connect(this._lfoR.frequency);
        // set the options
        this.baseFrequency = options.baseFrequency;
        this.octaves = options.octaves;
        // start the lfo
        this._lfoL.start();
        this._lfoR.start();
        (0, _interface.readOnly)(this, [
            "frequency",
            "Q"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _stereoEffect.StereoEffect).getDefaults(), {
            frequency: 0.5,
            octaves: 3,
            stages: 10,
            Q: 10,
            baseFrequency: 350
        });
    }
    _makeFilters(stages, connectToFreq) {
        const filters = [];
        // make all the filters
        for(let i = 0; i < stages; i++){
            const filter = this.context.createBiquadFilter();
            filter.type = "allpass";
            this.Q.connect(filter.Q);
            connectToFreq.connect(filter.frequency);
            filters.push(filter);
        }
        return filters;
    }
    /**
     * The number of octaves the phase goes above the baseFrequency
     */ get octaves() {
        return this._octaves;
    }
    set octaves(octaves) {
        this._octaves = octaves;
        const max = this._baseFrequency * Math.pow(2, octaves);
        this._lfoL.max = max;
        this._lfoR.max = max;
    }
    /**
     * The the base frequency of the filters.
     */ get baseFrequency() {
        return this._baseFrequency;
    }
    set baseFrequency(freq) {
        this._baseFrequency = this.toFrequency(freq);
        this._lfoL.min = this._baseFrequency;
        this._lfoR.min = this._baseFrequency;
        this.octaves = this._octaves;
    }
    dispose() {
        super.dispose();
        this.Q.dispose();
        this._lfoL.dispose();
        this._lfoR.dispose();
        this._filtersL.forEach((f)=>f.disconnect());
        this._filtersR.forEach((f)=>f.disconnect());
        this.frequency.dispose();
        return this;
    }
}

},{"./StereoEffect":"3INxk","../core/util/Defaults":"a9M5s","../source/oscillator/LFO":"jsBJT","../signal/Signal":"980ri","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j2JHY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Simple convolution created with decaying noise.
 * Generates an Impulse Response Buffer
 * with Tone.Offline then feeds the IR into ConvolverNode.
 * The impulse response generation is async, so you have
 * to wait until [[ready]] resolves before it will make a sound.
 *
 * Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).
 * Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.
 *
 * @category Effect
 */ parcelHelpers.export(exports, "Reverb", ()=>Reverb);
var _tslib = require("tslib");
var _merge = require("../component/channel/Merge");
var _gain = require("../core/context/Gain");
var _defaults = require("../core/util/Defaults");
var _noise = require("../source/Noise");
var _effect = require("./Effect");
var _offlineContext = require("../core/context/OfflineContext");
var _interface = require("../core/util/Interface");
var _debug = require("../core/util/Debug");
class Reverb extends (0, _effect.Effect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Reverb.getDefaults(), arguments, [
            "decay"
        ]));
        this.name = "Reverb";
        /**
         * Convolver node
         */ this._convolver = this.context.createConvolver();
        /**
         * Resolves when the reverb buffer is generated. Whenever either [[decay]]
         * or [[preDelay]] are set, you have to wait until [[ready]] resolves
         * before the IR is generated with the latest values.
         */ this.ready = Promise.resolve();
        const options = (0, _defaults.optionsFromArguments)(Reverb.getDefaults(), arguments, [
            "decay"
        ]);
        this._decay = options.decay;
        this._preDelay = options.preDelay;
        this.generate();
        this.connectEffect(this._convolver);
    }
    static getDefaults() {
        return Object.assign((0, _effect.Effect).getDefaults(), {
            decay: 1.5,
            preDelay: 0.01
        });
    }
    /**
     * The duration of the reverb.
     */ get decay() {
        return this._decay;
    }
    set decay(time) {
        time = this.toSeconds(time);
        (0, _debug.assertRange)(time, 0.001);
        this._decay = time;
        this.generate();
    }
    /**
     * The amount of time before the reverb is fully ramped in.
     */ get preDelay() {
        return this._preDelay;
    }
    set preDelay(time) {
        time = this.toSeconds(time);
        (0, _debug.assertRange)(time, 0);
        this._preDelay = time;
        this.generate();
    }
    /**
     * Generate the Impulse Response. Returns a promise while the IR is being generated.
     * @return Promise which returns this object.
     */ generate() {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            const previousReady = this.ready;
            // create a noise burst which decays over the duration in each channel
            const context = new (0, _offlineContext.OfflineContext)(2, this._decay + this._preDelay, this.context.sampleRate);
            const noiseL = new (0, _noise.Noise)({
                context
            });
            const noiseR = new (0, _noise.Noise)({
                context
            });
            const merge = new (0, _merge.Merge)({
                context
            });
            noiseL.connect(merge, 0, 0);
            noiseR.connect(merge, 0, 1);
            const gainNode = new (0, _gain.Gain)({
                context
            }).toDestination();
            merge.connect(gainNode);
            noiseL.start(0);
            noiseR.start(0);
            // predelay
            gainNode.gain.setValueAtTime(0, 0);
            gainNode.gain.setValueAtTime(1, this._preDelay);
            // decay
            gainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);
            // render the buffer
            const renderPromise = context.render();
            this.ready = renderPromise.then((0, _interface.noOp));
            // wait for the previous `ready` to resolve
            yield previousReady;
            // set the buffer
            this._convolver.buffer = (yield renderPromise).get();
            return this;
        });
    }
    dispose() {
        super.dispose();
        this._convolver.disconnect();
        return this;
    }
}

},{"tslib":"lRdW5","../component/channel/Merge":"xBcDu","../core/context/Gain":"kj68Y","../core/util/Defaults":"a9M5s","../source/Noise":"cOpzx","./Effect":"g3o0i","../core/context/OfflineContext":"8VnAL","../core/util/Interface":"hVOjA","../core/util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5qIOm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Applies a width factor to the mid/side seperation.
 * 0 is all mid and 1 is all side.
 * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).
 * ```
 * Mid *= 2*(1-width)<br>
 * Side *= 2*width
 * ```
 * @category Effect
 */ parcelHelpers.export(exports, "StereoWidener", ()=>StereoWidener);
var _midSideEffect = require("../effect/MidSideEffect");
var _signal = require("../signal/Signal");
var _multiply = require("../signal/Multiply");
var _subtract = require("../signal/Subtract");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
var _toneAudioNode = require("../core/context/ToneAudioNode");
class StereoWidener extends (0, _midSideEffect.MidSideEffect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(StereoWidener.getDefaults(), arguments, [
            "width"
        ]));
        this.name = "StereoWidener";
        const options = (0, _defaults.optionsFromArguments)(StereoWidener.getDefaults(), arguments, [
            "width"
        ]);
        this.width = new (0, _signal.Signal)({
            context: this.context,
            value: options.width,
            units: "normalRange"
        });
        (0, _interface.readOnly)(this, [
            "width"
        ]);
        this._twoTimesWidthMid = new (0, _multiply.Multiply)({
            context: this.context,
            value: 2
        });
        this._twoTimesWidthSide = new (0, _multiply.Multiply)({
            context: this.context,
            value: 2
        });
        this._midMult = new (0, _multiply.Multiply)({
            context: this.context
        });
        this._twoTimesWidthMid.connect(this._midMult.factor);
        this.connectEffectMid(this._midMult);
        this._oneMinusWidth = new (0, _subtract.Subtract)({
            context: this.context
        });
        this._oneMinusWidth.connect(this._twoTimesWidthMid);
        (0, _toneAudioNode.connect)(this.context.getConstant(1), this._oneMinusWidth);
        this.width.connect(this._oneMinusWidth.subtrahend);
        this._sideMult = new (0, _multiply.Multiply)({
            context: this.context
        });
        this.width.connect(this._twoTimesWidthSide);
        this._twoTimesWidthSide.connect(this._sideMult.factor);
        this.connectEffectSide(this._sideMult);
    }
    static getDefaults() {
        return Object.assign((0, _midSideEffect.MidSideEffect).getDefaults(), {
            width: 0.5
        });
    }
    dispose() {
        super.dispose();
        this.width.dispose();
        this._midMult.dispose();
        this._sideMult.dispose();
        this._twoTimesWidthMid.dispose();
        this._twoTimesWidthSide.dispose();
        this._oneMinusWidth.dispose();
        return this;
    }
}

},{"../effect/MidSideEffect":"gOGAT","../signal/Signal":"980ri","../signal/Multiply":"4C0VG","../signal/Subtract":"cVmeJ","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","../core/context/ToneAudioNode":"kZ3Kj","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gOGAT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Mid/Side processing separates the the 'mid' signal
 * (which comes out of both the left and the right channel)
 * and the 'side' (which only comes out of the the side channels)
 * and effects them separately before being recombined.
 * Applies a Mid/Side seperation and recombination.
 * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).
 * This is a base-class for Mid/Side Effects.
 * @category Effect
 */ parcelHelpers.export(exports, "MidSideEffect", ()=>MidSideEffect);
var _effect = require("./Effect");
var _midSideSplit = require("../component/channel/MidSideSplit");
var _midSideMerge = require("../component/channel/MidSideMerge");
class MidSideEffect extends (0, _effect.Effect) {
    constructor(options){
        super(options);
        this.name = "MidSideEffect";
        this._midSideMerge = new (0, _midSideMerge.MidSideMerge)({
            context: this.context
        });
        this._midSideSplit = new (0, _midSideSplit.MidSideSplit)({
            context: this.context
        });
        this._midSend = this._midSideSplit.mid;
        this._sideSend = this._midSideSplit.side;
        this._midReturn = this._midSideMerge.mid;
        this._sideReturn = this._midSideMerge.side;
        // the connections
        this.effectSend.connect(this._midSideSplit);
        this._midSideMerge.connect(this.effectReturn);
    }
    /**
     * Connect the mid chain of the effect
     */ connectEffectMid(...nodes) {
        this._midSend.chain(...nodes, this._midReturn);
    }
    /**
     * Connect the side chain of the effect
     */ connectEffectSide(...nodes) {
        this._sideSend.chain(...nodes, this._sideReturn);
    }
    dispose() {
        super.dispose();
        this._midSideSplit.dispose();
        this._midSideMerge.dispose();
        this._midSend.dispose();
        this._sideSend.dispose();
        this._midReturn.dispose();
        this._sideReturn.dispose();
        return this;
    }
}

},{"./Effect":"g3o0i","../component/channel/MidSideSplit":"3oEnx","../component/channel/MidSideMerge":"8osXs","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3oEnx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)
 * and the 'side' (which only comes out of the the side channels).
 * ```
 * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right
 * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right
 * ```
 * @category Component
 */ parcelHelpers.export(exports, "MidSideSplit", ()=>MidSideSplit);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _split = require("./Split");
var _add = require("../../signal/Add");
var _multiply = require("../../signal/Multiply");
var _subtract = require("../../signal/Subtract");
var _defaults = require("../../core/util/Defaults");
class MidSideSplit extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(MidSideSplit.getDefaults(), arguments));
        this.name = "MidSideSplit";
        this._split = this.input = new (0, _split.Split)({
            channels: 2,
            context: this.context
        });
        this._midAdd = new (0, _add.Add)({
            context: this.context
        });
        this.mid = new (0, _multiply.Multiply)({
            context: this.context,
            value: Math.SQRT1_2
        });
        this._sideSubtract = new (0, _subtract.Subtract)({
            context: this.context
        });
        this.side = new (0, _multiply.Multiply)({
            context: this.context,
            value: Math.SQRT1_2
        });
        this._split.connect(this._midAdd, 0);
        this._split.connect(this._midAdd.addend, 1);
        this._split.connect(this._sideSubtract, 0);
        this._split.connect(this._sideSubtract.subtrahend, 1);
        this._midAdd.connect(this.mid);
        this._sideSubtract.connect(this.side);
    }
    dispose() {
        super.dispose();
        this.mid.dispose();
        this.side.dispose();
        this._midAdd.dispose();
        this._sideSubtract.dispose();
        this._split.dispose();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","./Split":"hPRgj","../../signal/Add":"jeoK8","../../signal/Multiply":"4C0VG","../../signal/Subtract":"cVmeJ","../../core/util/Defaults":"a9M5s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8osXs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * MidSideMerge merges the mid and side signal after they've been separated by [[MidSideSplit]]
 * ```
 * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right
 * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right
 * ```
 * @category Component
 */ parcelHelpers.export(exports, "MidSideMerge", ()=>MidSideMerge);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _merge = require("./Merge");
var _add = require("../../signal/Add");
var _multiply = require("../../signal/Multiply");
var _subtract = require("../../signal/Subtract");
var _gain = require("../../core/context/Gain");
var _defaults = require("../../core/util/Defaults");
class MidSideMerge extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(MidSideMerge.getDefaults(), arguments));
        this.name = "MidSideMerge";
        this.mid = new (0, _gain.Gain)({
            context: this.context
        });
        this.side = new (0, _gain.Gain)({
            context: this.context
        });
        this._left = new (0, _add.Add)({
            context: this.context
        });
        this._leftMult = new (0, _multiply.Multiply)({
            context: this.context,
            value: Math.SQRT1_2
        });
        this._right = new (0, _subtract.Subtract)({
            context: this.context
        });
        this._rightMult = new (0, _multiply.Multiply)({
            context: this.context,
            value: Math.SQRT1_2
        });
        this._merge = this.output = new (0, _merge.Merge)({
            context: this.context
        });
        this.mid.fan(this._left);
        this.side.connect(this._left.addend);
        this.mid.connect(this._right);
        this.side.connect(this._right.subtrahend);
        this._left.connect(this._leftMult);
        this._right.connect(this._rightMult);
        this._leftMult.connect(this._merge, 0, 0);
        this._rightMult.connect(this._merge, 0, 1);
    }
    dispose() {
        super.dispose();
        this.mid.dispose();
        this.side.dispose();
        this._leftMult.dispose();
        this._rightMult.dispose();
        this._left.dispose();
        this._right.dispose();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","./Merge":"xBcDu","../../signal/Add":"jeoK8","../../signal/Multiply":"4C0VG","../../signal/Subtract":"cVmeJ","../../core/context/Gain":"kj68Y","../../core/util/Defaults":"a9M5s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3TUHb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Tremolo modulates the amplitude of an incoming signal using an [[LFO]].
 * The effect is a stereo effect where the modulation phase is inverted in each channel.
 *
 * @example
 * // create a tremolo and start it's LFO
 * const tremolo = new Tone.Tremolo(9, 0.75).toDestination().start();
 * // route an oscillator through the tremolo and start it
 * const oscillator = new Tone.Oscillator().connect(tremolo).start();
 *
 * @category Effect
 */ parcelHelpers.export(exports, "Tremolo", ()=>Tremolo);
var _stereoEffect = require("./StereoEffect");
var _lfo = require("../source/oscillator/LFO");
var _gain = require("../core/context/Gain");
var _signal = require("../signal/Signal");
var _defaults = require("../core/util/Defaults");
var _interface = require("../core/util/Interface");
class Tremolo extends (0, _stereoEffect.StereoEffect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Tremolo.getDefaults(), arguments, [
            "frequency",
            "depth"
        ]));
        this.name = "Tremolo";
        const options = (0, _defaults.optionsFromArguments)(Tremolo.getDefaults(), arguments, [
            "frequency",
            "depth"
        ]);
        this._lfoL = new (0, _lfo.LFO)({
            context: this.context,
            type: options.type,
            min: 1,
            max: 0
        });
        this._lfoR = new (0, _lfo.LFO)({
            context: this.context,
            type: options.type,
            min: 1,
            max: 0
        });
        this._amplitudeL = new (0, _gain.Gain)({
            context: this.context
        });
        this._amplitudeR = new (0, _gain.Gain)({
            context: this.context
        });
        this.frequency = new (0, _signal.Signal)({
            context: this.context,
            value: options.frequency,
            units: "frequency"
        });
        this.depth = new (0, _signal.Signal)({
            context: this.context,
            value: options.depth,
            units: "normalRange"
        });
        (0, _interface.readOnly)(this, [
            "frequency",
            "depth"
        ]);
        this.connectEffectLeft(this._amplitudeL);
        this.connectEffectRight(this._amplitudeR);
        this._lfoL.connect(this._amplitudeL.gain);
        this._lfoR.connect(this._amplitudeR.gain);
        this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);
        this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);
        this.spread = options.spread;
    }
    static getDefaults() {
        return Object.assign((0, _stereoEffect.StereoEffect).getDefaults(), {
            frequency: 10,
            type: "sine",
            depth: 0.5,
            spread: 180
        });
    }
    /**
     * Start the tremolo.
     */ start(time) {
        this._lfoL.start(time);
        this._lfoR.start(time);
        return this;
    }
    /**
     * Stop the tremolo.
     */ stop(time) {
        this._lfoL.stop(time);
        this._lfoR.stop(time);
        return this;
    }
    /**
     * Sync the effect to the transport.
     */ sync() {
        this._lfoL.sync();
        this._lfoR.sync();
        this.context.transport.syncSignal(this.frequency);
        return this;
    }
    /**
     * Unsync the filter from the transport
     */ unsync() {
        this._lfoL.unsync();
        this._lfoR.unsync();
        this.context.transport.unsyncSignal(this.frequency);
        return this;
    }
    /**
     * The oscillator type.
     */ get type() {
        return this._lfoL.type;
    }
    set type(type) {
        this._lfoL.type = type;
        this._lfoR.type = type;
    }
    /**
     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.
     * When set to 180, LFO's will be panned hard left and right respectively.
     */ get spread() {
        return this._lfoR.phase - this._lfoL.phase; // 180
    }
    set spread(spread) {
        this._lfoL.phase = 90 - spread / 2;
        this._lfoR.phase = spread / 2 + 90;
    }
    dispose() {
        super.dispose();
        this._lfoL.dispose();
        this._lfoR.dispose();
        this._amplitudeL.dispose();
        this._amplitudeR.dispose();
        this.frequency.dispose();
        this.depth.dispose();
        return this;
    }
}

},{"./StereoEffect":"3INxk","../source/oscillator/LFO":"jsBJT","../core/context/Gain":"kj68Y","../signal/Signal":"980ri","../core/util/Defaults":"a9M5s","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5uE99":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO
 * modulates the delayTime of the delay, causing the pitch to rise and fall.
 * @category Effect
 */ parcelHelpers.export(exports, "Vibrato", ()=>Vibrato);
var _effect = require("./Effect");
var _defaults = require("../core/util/Defaults");
var _lfo = require("../source/oscillator/LFO");
var _delay = require("../core/context/Delay");
var _interface = require("../core/util/Interface");
class Vibrato extends (0, _effect.Effect) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Vibrato.getDefaults(), arguments, [
            "frequency",
            "depth"
        ]));
        this.name = "Vibrato";
        const options = (0, _defaults.optionsFromArguments)(Vibrato.getDefaults(), arguments, [
            "frequency",
            "depth"
        ]);
        this._delayNode = new (0, _delay.Delay)({
            context: this.context,
            delayTime: 0,
            maxDelay: options.maxDelay
        });
        this._lfo = new (0, _lfo.LFO)({
            context: this.context,
            type: options.type,
            min: 0,
            max: options.maxDelay,
            frequency: options.frequency,
            phase: -90 // offse the phase so the resting position is in the center
        }).start().connect(this._delayNode.delayTime);
        this.frequency = this._lfo.frequency;
        this.depth = this._lfo.amplitude;
        this.depth.value = options.depth;
        (0, _interface.readOnly)(this, [
            "frequency",
            "depth"
        ]);
        this.effectSend.chain(this._delayNode, this.effectReturn);
    }
    static getDefaults() {
        return Object.assign((0, _effect.Effect).getDefaults(), {
            maxDelay: 0.005,
            frequency: 5,
            depth: 0.1,
            type: "sine"
        });
    }
    /**
     * Type of oscillator attached to the Vibrato.
     */ get type() {
        return this._lfo.type;
    }
    set type(type) {
        this._lfo.type = type;
    }
    dispose() {
        super.dispose();
        this._delayNode.dispose();
        this._lfo.dispose();
        this.frequency.dispose();
        this.depth.dispose();
        return this;
    }
}

},{"./Effect":"g3o0i","../core/util/Defaults":"a9M5s","../source/oscillator/LFO":"jsBJT","../core/context/Delay":"1qHQA","../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ab9jt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _analyser = require("./analysis/Analyser");
parcelHelpers.exportAll(_analyser, exports);
var _meter = require("./analysis/Meter");
parcelHelpers.exportAll(_meter, exports);
var _fft = require("./analysis/FFT");
parcelHelpers.exportAll(_fft, exports);
var _dcmeter = require("./analysis/DCMeter");
parcelHelpers.exportAll(_dcmeter, exports);
var _waveform = require("./analysis/Waveform");
parcelHelpers.exportAll(_waveform, exports);
var _follower = require("./analysis/Follower");
parcelHelpers.exportAll(_follower, exports);
var _channel = require("./channel/Channel");
parcelHelpers.exportAll(_channel, exports);
var _crossFade = require("./channel/CrossFade");
parcelHelpers.exportAll(_crossFade, exports);
var _merge = require("./channel/Merge");
parcelHelpers.exportAll(_merge, exports);
var _midSideMerge = require("./channel/MidSideMerge");
parcelHelpers.exportAll(_midSideMerge, exports);
var _midSideSplit = require("./channel/MidSideSplit");
parcelHelpers.exportAll(_midSideSplit, exports);
var _mono = require("./channel/Mono");
parcelHelpers.exportAll(_mono, exports);
var _multibandSplit = require("./channel/MultibandSplit");
parcelHelpers.exportAll(_multibandSplit, exports);
var _panner = require("./channel/Panner");
parcelHelpers.exportAll(_panner, exports);
var _panner3D = require("./channel/Panner3D");
parcelHelpers.exportAll(_panner3D, exports);
var _panVol = require("./channel/PanVol");
parcelHelpers.exportAll(_panVol, exports);
var _recorder = require("./channel/Recorder");
parcelHelpers.exportAll(_recorder, exports);
var _solo = require("./channel/Solo");
parcelHelpers.exportAll(_solo, exports);
var _split = require("./channel/Split");
parcelHelpers.exportAll(_split, exports);
var _volume = require("./channel/Volume");
parcelHelpers.exportAll(_volume, exports);
var _compressor = require("./dynamics/Compressor");
parcelHelpers.exportAll(_compressor, exports);
var _gate = require("./dynamics/Gate");
parcelHelpers.exportAll(_gate, exports);
var _limiter = require("./dynamics/Limiter");
parcelHelpers.exportAll(_limiter, exports);
var _midSideCompressor = require("./dynamics/MidSideCompressor");
parcelHelpers.exportAll(_midSideCompressor, exports);
var _multibandCompressor = require("./dynamics/MultibandCompressor");
parcelHelpers.exportAll(_multibandCompressor, exports);
var _amplitudeEnvelope = require("./envelope/AmplitudeEnvelope");
parcelHelpers.exportAll(_amplitudeEnvelope, exports);
var _envelope = require("./envelope/Envelope");
parcelHelpers.exportAll(_envelope, exports);
var _frequencyEnvelope = require("./envelope/FrequencyEnvelope");
parcelHelpers.exportAll(_frequencyEnvelope, exports);
var _eq3 = require("./filter/EQ3");
parcelHelpers.exportAll(_eq3, exports);
var _filter = require("./filter/Filter");
parcelHelpers.exportAll(_filter, exports);
var _onePoleFilter = require("./filter/OnePoleFilter");
parcelHelpers.exportAll(_onePoleFilter, exports);
var _feedbackCombFilter = require("./filter/FeedbackCombFilter");
parcelHelpers.exportAll(_feedbackCombFilter, exports);
var _lowpassCombFilter = require("./filter/LowpassCombFilter");
parcelHelpers.exportAll(_lowpassCombFilter, exports);
var _convolver = require("./filter/Convolver");
parcelHelpers.exportAll(_convolver, exports);
var _biquadFilter = require("./filter/BiquadFilter");
parcelHelpers.exportAll(_biquadFilter, exports);

},{"./analysis/Analyser":"8jdrD","./analysis/Meter":"cFFyu","./analysis/FFT":"gm2kK","./analysis/DCMeter":"iBePn","./analysis/Waveform":"9W1xG","./analysis/Follower":"9fpr2","./channel/Channel":"3fbfr","./channel/CrossFade":"cd1EQ","./channel/Merge":"xBcDu","./channel/MidSideMerge":"8osXs","./channel/MidSideSplit":"3oEnx","./channel/Mono":"8ZFOa","./channel/MultibandSplit":"6mTh7","./channel/Panner":"hwo91","./channel/Panner3D":"lKwbo","./channel/PanVol":"3rZ7o","./channel/Recorder":"8gzkS","./channel/Solo":"2cwbL","./channel/Split":"hPRgj","./channel/Volume":"7Ooeo","./dynamics/Compressor":"cHP1S","./dynamics/Gate":"hJSU2","./dynamics/Limiter":"jZwRO","./dynamics/MidSideCompressor":"aTPvB","./dynamics/MultibandCompressor":"dRDVG","./envelope/AmplitudeEnvelope":"l33WV","./envelope/Envelope":"cU1tT","./envelope/FrequencyEnvelope":"beAqg","./filter/EQ3":"gkvWP","./filter/Filter":"lel48","./filter/OnePoleFilter":"1CfWn","./filter/FeedbackCombFilter":"iMAnY","./filter/LowpassCombFilter":"01n6w","./filter/Convolver":"d2Ucy","./filter/BiquadFilter":"bJIpY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8jdrD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Wrapper around the native Web Audio's [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).
 * Extracts FFT or Waveform data from the incoming signal.
 * @category Component
 */ parcelHelpers.export(exports, "Analyser", ()=>Analyser);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _split = require("../channel/Split");
var _gain = require("../../core/context/Gain");
var _debug = require("../../core/util/Debug");
class Analyser extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Analyser.getDefaults(), arguments, [
            "type",
            "size"
        ]));
        this.name = "Analyser";
        /**
         * The analyser node.
         */ this._analysers = [];
        /**
         * The buffer that the FFT data is written to
         */ this._buffers = [];
        const options = (0, _defaults.optionsFromArguments)(Analyser.getDefaults(), arguments, [
            "type",
            "size"
        ]);
        this.input = this.output = this._gain = new (0, _gain.Gain)({
            context: this.context
        });
        this._split = new (0, _split.Split)({
            context: this.context,
            channels: options.channels
        });
        this.input.connect(this._split);
        (0, _debug.assertRange)(options.channels, 1);
        // create the analysers
        for(let channel = 0; channel < options.channels; channel++){
            this._analysers[channel] = this.context.createAnalyser();
            this._split.connect(this._analysers[channel], channel, 0);
        }
        // set the values initially
        this.size = options.size;
        this.type = options.type;
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            size: 1024,
            smoothing: 0.8,
            type: "fft",
            channels: 1
        });
    }
    /**
     * Run the analysis given the current settings. If [[channels]] = 1,
     * it will return a Float32Array. If [[channels]] > 1, it will
     * return an array of Float32Arrays where each index in the array
     * represents the analysis done on a channel.
     */ getValue() {
        this._analysers.forEach((analyser, index)=>{
            const buffer = this._buffers[index];
            if (this._type === "fft") analyser.getFloatFrequencyData(buffer);
            else if (this._type === "waveform") analyser.getFloatTimeDomainData(buffer);
        });
        if (this.channels === 1) return this._buffers[0];
        else return this._buffers;
    }
    /**
     * The size of analysis. This must be a power of two in the range 16 to 16384.
     */ get size() {
        return this._analysers[0].frequencyBinCount;
    }
    set size(size) {
        this._analysers.forEach((analyser, index)=>{
            analyser.fftSize = size * 2;
            this._buffers[index] = new Float32Array(size);
        });
    }
    /**
     * The number of channels the analyser does the analysis on. Channel
     * separation is done using [[Split]]
     */ get channels() {
        return this._analysers.length;
    }
    /**
     * The analysis function returned by analyser.getValue(), either "fft" or "waveform".
     */ get type() {
        return this._type;
    }
    set type(type) {
        (0, _debug.assert)(type === "waveform" || type === "fft", `Analyser: invalid type: ${type}`);
        this._type = type;
    }
    /**
     * 0 represents no time averaging with the last analysis frame.
     */ get smoothing() {
        return this._analysers[0].smoothingTimeConstant;
    }
    set smoothing(val) {
        this._analysers.forEach((a)=>a.smoothingTimeConstant = val);
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        this._analysers.forEach((a)=>a.disconnect());
        this._split.dispose();
        this._gain.dispose();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../channel/Split":"hPRgj","../../core/context/Gain":"kj68Y","../../core/util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cFFyu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)
 * of an input signal. It can also get the raw value of the input signal.
 *
 * @example
 * const meter = new Tone.Meter();
 * const mic = new Tone.UserMedia();
 * mic.open();
 * // connect mic to the meter
 * mic.connect(meter);
 * // the current level of the mic
 * setInterval(() => console.log(meter.getValue()), 100);
 * @category Component
 */ parcelHelpers.export(exports, "Meter", ()=>Meter);
var _conversions = require("../../core/type/Conversions");
var _defaults = require("../../core/util/Defaults");
var _meterBase = require("./MeterBase");
var _debug = require("../../core/util/Debug");
var _analyser = require("./Analyser");
class Meter extends (0, _meterBase.MeterBase) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Meter.getDefaults(), arguments, [
            "smoothing"
        ]));
        this.name = "Meter";
        /**
         * The previous frame's value
         */ this._rms = 0;
        const options = (0, _defaults.optionsFromArguments)(Meter.getDefaults(), arguments, [
            "smoothing"
        ]);
        this.input = this.output = this._analyser = new (0, _analyser.Analyser)({
            context: this.context,
            size: 256,
            type: "waveform",
            channels: options.channels
        });
        this.smoothing = options.smoothing, this.normalRange = options.normalRange;
    }
    static getDefaults() {
        return Object.assign((0, _meterBase.MeterBase).getDefaults(), {
            smoothing: 0.8,
            normalRange: false,
            channels: 1
        });
    }
    /**
     * Use [[getValue]] instead. For the previous getValue behavior, use DCMeter.
     * @deprecated
     */ getLevel() {
        (0, _debug.warn)("'getLevel' has been changed to 'getValue'");
        return this.getValue();
    }
    /**
     * Get the current value of the incoming signal.
     * Output is in decibels when [[normalRange]] is `false`.
     * If [[channels]] = 1, then the output is a single number
     * representing the value of the input signal. When [[channels]] > 1,
     * then each channel is returned as a value in a number array.
     */ getValue() {
        const aValues = this._analyser.getValue();
        const channelValues = this.channels === 1 ? [
            aValues
        ] : aValues;
        const vals = channelValues.map((values)=>{
            const totalSquared = values.reduce((total, current)=>total + current * current, 0);
            const rms = Math.sqrt(totalSquared / values.length);
            // the rms can only fall at the rate of the smoothing
            // but can jump up instantly
            this._rms = Math.max(rms, this._rms * this.smoothing);
            return this.normalRange ? this._rms : (0, _conversions.gainToDb)(this._rms);
        });
        if (this.channels === 1) return vals[0];
        else return vals;
    }
    /**
     * The number of channels of analysis.
     */ get channels() {
        return this._analyser.channels;
    }
    dispose() {
        super.dispose();
        this._analyser.dispose();
        return this;
    }
}

},{"../../core/type/Conversions":"iww1u","../../core/util/Defaults":"a9M5s","./MeterBase":"9bM4A","../../core/util/Debug":"2lOIQ","./Analyser":"8jdrD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9bM4A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * The base class for Metering classes.
 */ parcelHelpers.export(exports, "MeterBase", ()=>MeterBase);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _analyser = require("./Analyser");
class MeterBase extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(MeterBase.getDefaults(), arguments));
        this.name = "MeterBase";
        this.input = this.output = this._analyser = new (0, _analyser.Analyser)({
            context: this.context,
            size: 256,
            type: "waveform"
        });
    }
    dispose() {
        super.dispose();
        this._analyser.dispose();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","./Analyser":"8jdrD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gm2kK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Get the current frequency data of the connected audio source using a fast Fourier transform.
 * @category Component
 */ parcelHelpers.export(exports, "FFT", ()=>FFT);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _conversions = require("../../core/type/Conversions");
var _defaults = require("../../core/util/Defaults");
var _meterBase = require("./MeterBase");
var _debug = require("../../core/util/Debug");
class FFT extends (0, _meterBase.MeterBase) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(FFT.getDefaults(), arguments, [
            "size"
        ]));
        this.name = "FFT";
        const options = (0, _defaults.optionsFromArguments)(FFT.getDefaults(), arguments, [
            "size"
        ]);
        this.normalRange = options.normalRange;
        this._analyser.type = "fft";
        this.size = options.size;
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            normalRange: false,
            size: 1024,
            smoothing: 0.8
        });
    }
    /**
     * Gets the current frequency data from the connected audio source.
     * Returns the frequency data of length [[size]] as a Float32Array of decibel values.
     */ getValue() {
        const values = this._analyser.getValue();
        return values.map((v)=>this.normalRange ? (0, _conversions.dbToGain)(v) : v);
    }
    /**
     * The size of analysis. This must be a power of two in the range 16 to 16384.
     * Determines the size of the array returned by [[getValue]] (i.e. the number of
     * frequency bins). Large FFT sizes may be costly to compute.
     */ get size() {
        return this._analyser.size;
    }
    set size(size) {
        this._analyser.size = size;
    }
    /**
     * 0 represents no time averaging with the last analysis frame.
     */ get smoothing() {
        return this._analyser.smoothing;
    }
    set smoothing(val) {
        this._analyser.smoothing = val;
    }
    /**
     * Returns the frequency value in hertz of each of the indices of the FFT's [[getValue]] response.
     * @example
     * const fft = new Tone.FFT(32);
     * console.log([0, 1, 2, 3, 4].map(index => fft.getFrequencyOfIndex(index)));
     */ getFrequencyOfIndex(index) {
        (0, _debug.assert)(0 <= index && index < this.size, `index must be greater than or equal to 0 and less than ${this.size}`);
        return index * this.context.sampleRate / (this.size * 2);
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../core/type/Conversions":"iww1u","../../core/util/Defaults":"a9M5s","./MeterBase":"9bM4A","../../core/util/Debug":"2lOIQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iBePn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * DCMeter gets the raw value of the input signal at the current time.
 *
 * @example
 * const meter = new Tone.DCMeter();
 * const mic = new Tone.UserMedia();
 * mic.open();
 * // connect mic to the meter
 * mic.connect(meter);
 * // the current level of the mic
 * const level = meter.getValue();
 * @category Component
 */ parcelHelpers.export(exports, "DCMeter", ()=>DCMeter);
var _defaults = require("../../core/util/Defaults");
var _meterBase = require("./MeterBase");
class DCMeter extends (0, _meterBase.MeterBase) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(DCMeter.getDefaults(), arguments));
        this.name = "DCMeter";
        this._analyser.type = "waveform";
        this._analyser.size = 256;
    }
    /**
     * Get the signal value of the incoming signal
     */ getValue() {
        const value = this._analyser.getValue();
        return value[0];
    }
}

},{"../../core/util/Defaults":"a9M5s","./MeterBase":"9bM4A","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9W1xG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Get the current waveform data of the connected audio source.
 * @category Component
 */ parcelHelpers.export(exports, "Waveform", ()=>Waveform);
var _defaults = require("../../core/util/Defaults");
var _meterBase = require("./MeterBase");
class Waveform extends (0, _meterBase.MeterBase) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Waveform.getDefaults(), arguments, [
            "size"
        ]));
        this.name = "Waveform";
        const options = (0, _defaults.optionsFromArguments)(Waveform.getDefaults(), arguments, [
            "size"
        ]);
        this._analyser.type = "waveform";
        this.size = options.size;
    }
    static getDefaults() {
        return Object.assign((0, _meterBase.MeterBase).getDefaults(), {
            size: 1024
        });
    }
    /**
     * Return the waveform for the current time as a Float32Array where each value in the array
     * represents a sample in the waveform.
     */ getValue() {
        return this._analyser.getValue();
    }
    /**
     * The size of analysis. This must be a power of two in the range 16 to 16384.
     * Determines the size of the array returned by [[getValue]].
     */ get size() {
        return this._analyser.size;
    }
    set size(size) {
        this._analyser.size = size;
    }
}

},{"../../core/util/Defaults":"a9M5s","./MeterBase":"9bM4A","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3fbfr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Channel provides a channel strip interface with volume, pan, solo and mute controls.
 * See [[PanVol]] and [[Solo]]
 * @example
 * // pan the incoming signal left and drop the volume 12db
 * const channel = new Tone.Channel(-0.25, -12);
 * @category Component
 */ parcelHelpers.export(exports, "Channel", ()=>Channel);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _solo = require("./Solo");
var _panVol = require("./PanVol");
var _interface = require("../../core/util/Interface");
var _gain = require("../../core/context/Gain");
class Channel extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Channel.getDefaults(), arguments, [
            "volume",
            "pan"
        ]));
        this.name = "Channel";
        const options = (0, _defaults.optionsFromArguments)(Channel.getDefaults(), arguments, [
            "volume",
            "pan"
        ]);
        this._solo = this.input = new (0, _solo.Solo)({
            solo: options.solo,
            context: this.context
        });
        this._panVol = this.output = new (0, _panVol.PanVol)({
            context: this.context,
            pan: options.pan,
            volume: options.volume,
            mute: options.mute,
            channelCount: options.channelCount
        });
        this.pan = this._panVol.pan;
        this.volume = this._panVol.volume;
        this._solo.connect(this._panVol);
        (0, _interface.readOnly)(this, [
            "pan",
            "volume"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            pan: 0,
            volume: 0,
            mute: false,
            solo: false,
            channelCount: 1
        });
    }
    /**
     * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances
     */ get solo() {
        return this._solo.solo;
    }
    set solo(solo) {
        this._solo.solo = solo;
    }
    /**
     * If the current instance is muted, i.e. another instance is soloed,
     * or the channel is muted
     */ get muted() {
        return this._solo.muted || this.mute;
    }
    /**
     * Mute/unmute the volume
     */ get mute() {
        return this._panVol.mute;
    }
    set mute(mute) {
        this._panVol.mute = mute;
    }
    /**
     * Get the gain node belonging to the bus name. Create it if
     * it doesn't exist
     * @param name The bus name
     */ _getBus(name) {
        if (!Channel.buses.has(name)) Channel.buses.set(name, new (0, _gain.Gain)({
            context: this.context
        }));
        return Channel.buses.get(name);
    }
    /**
     * Send audio to another channel using a string. `send` is a lot like
     * [[connect]], except it uses a string instead of an object. This can
     * be useful in large applications to decouple sections since [[send]]
     * and [[receive]] can be invoked separately in order to connect an object
     * @param name The channel name to send the audio
     * @param volume The amount of the signal to send.
     * 	Defaults to 0db, i.e. send the entire signal
     * @returns Returns the gain node of this connection.
     */ send(name, volume = 0) {
        const bus = this._getBus(name);
        const sendKnob = new (0, _gain.Gain)({
            context: this.context,
            units: "decibels",
            gain: volume
        });
        this.connect(sendKnob);
        sendKnob.connect(bus);
        return sendKnob;
    }
    /**
     * Receive audio from a channel which was connected with [[send]].
     * @param name The channel name to receive audio from.
     */ receive(name) {
        const bus = this._getBus(name);
        bus.connect(this);
        return this;
    }
    dispose() {
        super.dispose();
        this._panVol.dispose();
        this.pan.dispose();
        this.volume.dispose();
        this._solo.dispose();
        return this;
    }
}
/**
 * Store the send/receive channels by name.
 */ Channel.buses = new Map();

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","./Solo":"2cwbL","./PanVol":"3rZ7o","../../core/util/Interface":"hVOjA","../../core/context/Gain":"kj68Y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2cwbL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,
 * it will mute all other instances of Solo.
 * @example
 * const soloA = new Tone.Solo().toDestination();
 * const oscA = new Tone.Oscillator("C4", "sawtooth").connect(soloA);
 * const soloB = new Tone.Solo().toDestination();
 * const oscB = new Tone.Oscillator("E4", "square").connect(soloB);
 * soloA.solo = true;
 * // no audio will pass through soloB
 * @category Component
 */ parcelHelpers.export(exports, "Solo", ()=>Solo);
var _gain = require("../../core/context/Gain");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
class Solo extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Solo.getDefaults(), arguments, [
            "solo"
        ]));
        this.name = "Solo";
        const options = (0, _defaults.optionsFromArguments)(Solo.getDefaults(), arguments, [
            "solo"
        ]);
        this.input = this.output = new (0, _gain.Gain)({
            context: this.context
        });
        if (!Solo._allSolos.has(this.context)) Solo._allSolos.set(this.context, new Set());
        Solo._allSolos.get(this.context).add(this);
        // set initially
        this.solo = options.solo;
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            solo: false
        });
    }
    /**
     * Isolates this instance and mutes all other instances of Solo.
     * Only one instance can be soloed at a time. A soloed
     * instance will report `solo=false` when another instance is soloed.
     */ get solo() {
        return this._isSoloed();
    }
    set solo(solo) {
        if (solo) this._addSolo();
        else this._removeSolo();
        Solo._allSolos.get(this.context).forEach((instance)=>instance._updateSolo());
    }
    /**
     * If the current instance is muted, i.e. another instance is soloed
     */ get muted() {
        return this.input.gain.value === 0;
    }
    /**
     * Add this to the soloed array
     */ _addSolo() {
        if (!Solo._soloed.has(this.context)) Solo._soloed.set(this.context, new Set());
        Solo._soloed.get(this.context).add(this);
    }
    /**
     * Remove this from the soloed array
     */ _removeSolo() {
        if (Solo._soloed.has(this.context)) Solo._soloed.get(this.context).delete(this);
    }
    /**
     * Is this on the soloed array
     */ _isSoloed() {
        return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);
    }
    /**
     * Returns true if no one is soloed
     */ _noSolos() {
        // either does not have any soloed added
        return !Solo._soloed.has(this.context) || // or has a solo set but doesn't include any items
        Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0;
    }
    /**
     * Solo the current instance and unsolo all other instances.
     */ _updateSolo() {
        if (this._isSoloed()) this.input.gain.value = 1;
        else if (this._noSolos()) // no one is soloed
        this.input.gain.value = 1;
        else this.input.gain.value = 0;
    }
    dispose() {
        super.dispose();
        Solo._allSolos.get(this.context).delete(this);
        this._removeSolo();
        return this;
    }
}
/**
 * Hold all of the solo'ed tracks belonging to a specific context
 */ Solo._allSolos = new Map();
/**
 * Hold the currently solo'ed instance(s)
 */ Solo._soloed = new Map();

},{"../../core/context/Gain":"kj68Y","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3rZ7o":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * PanVol is a Tone.Panner and Tone.Volume in one.
 * @example
 * // pan the incoming signal left and drop the volume
 * const panVol = new Tone.PanVol(-0.25, -12).toDestination();
 * const osc = new Tone.Oscillator().connect(panVol).start();
 * @category Component
 */ parcelHelpers.export(exports, "PanVol", ()=>PanVol);
var _interface = require("../../core/util/Interface");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _panner = require("./Panner");
var _volume = require("./Volume");
class PanVol extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(PanVol.getDefaults(), arguments, [
            "pan",
            "volume"
        ]));
        this.name = "PanVol";
        const options = (0, _defaults.optionsFromArguments)(PanVol.getDefaults(), arguments, [
            "pan",
            "volume"
        ]);
        this._panner = this.input = new (0, _panner.Panner)({
            context: this.context,
            pan: options.pan,
            channelCount: options.channelCount
        });
        this.pan = this._panner.pan;
        this._volume = this.output = new (0, _volume.Volume)({
            context: this.context,
            volume: options.volume
        });
        this.volume = this._volume.volume;
        // connections
        this._panner.connect(this._volume);
        this.mute = options.mute;
        (0, _interface.readOnly)(this, [
            "pan",
            "volume"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            mute: false,
            pan: 0,
            volume: 0,
            channelCount: 1
        });
    }
    /**
     * Mute/unmute the volume
     */ get mute() {
        return this._volume.mute;
    }
    set mute(mute) {
        this._volume.mute = mute;
    }
    dispose() {
        super.dispose();
        this._panner.dispose();
        this.pan.dispose();
        this._volume.dispose();
        this.volume.dispose();
        return this;
    }
}

},{"../../core/util/Interface":"hVOjA","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","./Panner":"hwo91","./Volume":"7Ooeo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8ZFOa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Mono coerces the incoming mono or stereo signal into a mono signal
 * where both left and right channels have the same value. This can be useful
 * for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).
 * @category Component
 */ parcelHelpers.export(exports, "Mono", ()=>Mono);
var _gain = require("../../core/context/Gain");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _merge = require("./Merge");
class Mono extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Mono.getDefaults(), arguments));
        this.name = "Mono";
        this.input = new (0, _gain.Gain)({
            context: this.context
        });
        this._merge = this.output = new (0, _merge.Merge)({
            channels: 2,
            context: this.context
        });
        this.input.connect(this._merge, 0, 0);
        this.input.connect(this._merge, 0, 1);
    }
    dispose() {
        super.dispose();
        this._merge.dispose();
        this.input.dispose();
        return this;
    }
}

},{"../../core/context/Gain":"kj68Y","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","./Merge":"xBcDu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6mTh7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Split the incoming signal into three bands (low, mid, high)
 * with two crossover frequency controls.
 * ```
 *            +----------------------+
 *          +-> input < lowFrequency +------------------> low
 *          | +----------------------+
 *          |
 *          | +--------------------------------------+
 * input ---+-> lowFrequency < input < highFrequency +--> mid
 *          | +--------------------------------------+
 *          |
 *          | +-----------------------+
 *          +-> highFrequency < input +-----------------> high
 *            +-----------------------+
 * ```
 * @category Component
 */ parcelHelpers.export(exports, "MultibandSplit", ()=>MultibandSplit);
var _gain = require("../../core/context/Gain");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _signal = require("../../signal/Signal");
var _filter = require("../filter/Filter");
class MultibandSplit extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(MultibandSplit.getDefaults(), arguments, [
            "lowFrequency",
            "highFrequency"
        ]));
        this.name = "MultibandSplit";
        /**
         * the input
         */ this.input = new (0, _gain.Gain)({
            context: this.context
        });
        /**
         * no output node, use either low, mid or high outputs
         */ this.output = undefined;
        /**
         * The low band.
         */ this.low = new (0, _filter.Filter)({
            context: this.context,
            frequency: 0,
            type: "lowpass"
        });
        /**
         * the lower filter of the mid band
         */ this._lowMidFilter = new (0, _filter.Filter)({
            context: this.context,
            frequency: 0,
            type: "highpass"
        });
        /**
         * The mid band output.
         */ this.mid = new (0, _filter.Filter)({
            context: this.context,
            frequency: 0,
            type: "lowpass"
        });
        /**
         * The high band output.
         */ this.high = new (0, _filter.Filter)({
            context: this.context,
            frequency: 0,
            type: "highpass"
        });
        this._internalChannels = [
            this.low,
            this.mid,
            this.high
        ];
        const options = (0, _defaults.optionsFromArguments)(MultibandSplit.getDefaults(), arguments, [
            "lowFrequency",
            "highFrequency"
        ]);
        this.lowFrequency = new (0, _signal.Signal)({
            context: this.context,
            units: "frequency",
            value: options.lowFrequency
        });
        this.highFrequency = new (0, _signal.Signal)({
            context: this.context,
            units: "frequency",
            value: options.highFrequency
        });
        this.Q = new (0, _signal.Signal)({
            context: this.context,
            units: "positive",
            value: options.Q
        });
        this.input.fan(this.low, this.high);
        this.input.chain(this._lowMidFilter, this.mid);
        // the frequency control signal
        this.lowFrequency.fan(this.low.frequency, this._lowMidFilter.frequency);
        this.highFrequency.fan(this.mid.frequency, this.high.frequency);
        // the Q value
        this.Q.connect(this.low.Q);
        this.Q.connect(this._lowMidFilter.Q);
        this.Q.connect(this.mid.Q);
        this.Q.connect(this.high.Q);
        (0, _interface.readOnly)(this, [
            "high",
            "mid",
            "low",
            "highFrequency",
            "lowFrequency"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            Q: 1,
            highFrequency: 2500,
            lowFrequency: 400
        });
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        (0, _interface.writable)(this, [
            "high",
            "mid",
            "low",
            "highFrequency",
            "lowFrequency"
        ]);
        this.low.dispose();
        this._lowMidFilter.dispose();
        this.mid.dispose();
        this.high.dispose();
        this.lowFrequency.dispose();
        this.highFrequency.dispose();
        this.Q.dispose();
        return this;
    }
}

},{"../../core/context/Gain":"kj68Y","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../../signal/Signal":"980ri","../filter/Filter":"lel48","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lKwbo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A spatialized panner node which supports equalpower or HRTF panning.
 * @category Component
 */ parcelHelpers.export(exports, "Panner3D", ()=>Panner3D);
var _param = require("../../core/context/Param");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _listener = require("../../core/context/Listener");
class Panner3D extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Panner3D.getDefaults(), arguments, [
            "positionX",
            "positionY",
            "positionZ"
        ]));
        this.name = "Panner3D";
        const options = (0, _defaults.optionsFromArguments)(Panner3D.getDefaults(), arguments, [
            "positionX",
            "positionY",
            "positionZ"
        ]);
        this._panner = this.input = this.output = this.context.createPanner();
        // set some values
        this.panningModel = options.panningModel;
        this.maxDistance = options.maxDistance;
        this.distanceModel = options.distanceModel;
        this.coneOuterGain = options.coneOuterGain;
        this.coneOuterAngle = options.coneOuterAngle;
        this.coneInnerAngle = options.coneInnerAngle;
        this.refDistance = options.refDistance;
        this.rolloffFactor = options.rolloffFactor;
        this.positionX = new (0, _param.Param)({
            context: this.context,
            param: this._panner.positionX,
            value: options.positionX
        });
        this.positionY = new (0, _param.Param)({
            context: this.context,
            param: this._panner.positionY,
            value: options.positionY
        });
        this.positionZ = new (0, _param.Param)({
            context: this.context,
            param: this._panner.positionZ,
            value: options.positionZ
        });
        this.orientationX = new (0, _param.Param)({
            context: this.context,
            param: this._panner.orientationX,
            value: options.orientationX
        });
        this.orientationY = new (0, _param.Param)({
            context: this.context,
            param: this._panner.orientationY,
            value: options.orientationY
        });
        this.orientationZ = new (0, _param.Param)({
            context: this.context,
            param: this._panner.orientationZ,
            value: options.orientationZ
        });
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            coneInnerAngle: 360,
            coneOuterAngle: 360,
            coneOuterGain: 0,
            distanceModel: "inverse",
            maxDistance: 10000,
            orientationX: 0,
            orientationY: 0,
            orientationZ: 0,
            panningModel: "equalpower",
            positionX: 0,
            positionY: 0,
            positionZ: 0,
            refDistance: 1,
            rolloffFactor: 1
        });
    }
    /**
     * Sets the position of the source in 3d space.
     */ setPosition(x, y, z) {
        this.positionX.value = x;
        this.positionY.value = y;
        this.positionZ.value = z;
        return this;
    }
    /**
     * Sets the orientation of the source in 3d space.
     */ setOrientation(x, y, z) {
        this.orientationX.value = x;
        this.orientationY.value = y;
        this.orientationZ.value = z;
        return this;
    }
    /**
     * The panning model. Either "equalpower" or "HRTF".
     */ get panningModel() {
        return this._panner.panningModel;
    }
    set panningModel(val) {
        this._panner.panningModel = val;
    }
    /**
     * A reference distance for reducing volume as source move further from the listener
     */ get refDistance() {
        return this._panner.refDistance;
    }
    set refDistance(val) {
        this._panner.refDistance = val;
    }
    /**
     * Describes how quickly the volume is reduced as source moves away from listener.
     */ get rolloffFactor() {
        return this._panner.rolloffFactor;
    }
    set rolloffFactor(val) {
        this._panner.rolloffFactor = val;
    }
    /**
     * The distance model used by,  "linear", "inverse", or "exponential".
     */ get distanceModel() {
        return this._panner.distanceModel;
    }
    set distanceModel(val) {
        this._panner.distanceModel = val;
    }
    /**
     * The angle, in degrees, inside of which there will be no volume reduction
     */ get coneInnerAngle() {
        return this._panner.coneInnerAngle;
    }
    set coneInnerAngle(val) {
        this._panner.coneInnerAngle = val;
    }
    /**
     * The angle, in degrees, outside of which the volume will be reduced
     * to a constant value of coneOuterGain
     */ get coneOuterAngle() {
        return this._panner.coneOuterAngle;
    }
    set coneOuterAngle(val) {
        this._panner.coneOuterAngle = val;
    }
    /**
     * The gain outside of the coneOuterAngle
     */ get coneOuterGain() {
        return this._panner.coneOuterGain;
    }
    set coneOuterGain(val) {
        this._panner.coneOuterGain = val;
    }
    /**
     * The maximum distance between source and listener,
     * after which the volume will not be reduced any further.
     */ get maxDistance() {
        return this._panner.maxDistance;
    }
    set maxDistance(val) {
        this._panner.maxDistance = val;
    }
    dispose() {
        super.dispose();
        this._panner.disconnect();
        this.orientationX.dispose();
        this.orientationY.dispose();
        this.orientationZ.dispose();
        this.positionX.dispose();
        this.positionY.dispose();
        this.positionZ.dispose();
        return this;
    }
}

},{"../../core/context/Param":"5PVlJ","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/context/Listener":"beTyX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"beTyX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Tone.Listener is a thin wrapper around the AudioListener. Listener combined
 * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you
 * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from
 * a first-person perspective. There is only one listener per audio context.
 */ parcelHelpers.export(exports, "Listener", ()=>Listener);
var _toneAudioNode = require("./ToneAudioNode");
var _param = require("./Param");
var _contextInitialization = require("./ContextInitialization");
class Listener extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super(...arguments);
        this.name = "Listener";
        this.positionX = new (0, _param.Param)({
            context: this.context,
            param: this.context.rawContext.listener.positionX
        });
        this.positionY = new (0, _param.Param)({
            context: this.context,
            param: this.context.rawContext.listener.positionY
        });
        this.positionZ = new (0, _param.Param)({
            context: this.context,
            param: this.context.rawContext.listener.positionZ
        });
        this.forwardX = new (0, _param.Param)({
            context: this.context,
            param: this.context.rawContext.listener.forwardX
        });
        this.forwardY = new (0, _param.Param)({
            context: this.context,
            param: this.context.rawContext.listener.forwardY
        });
        this.forwardZ = new (0, _param.Param)({
            context: this.context,
            param: this.context.rawContext.listener.forwardZ
        });
        this.upX = new (0, _param.Param)({
            context: this.context,
            param: this.context.rawContext.listener.upX
        });
        this.upY = new (0, _param.Param)({
            context: this.context,
            param: this.context.rawContext.listener.upY
        });
        this.upZ = new (0, _param.Param)({
            context: this.context,
            param: this.context.rawContext.listener.upZ
        });
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            positionX: 0,
            positionY: 0,
            positionZ: 0,
            forwardX: 0,
            forwardY: 0,
            forwardZ: -1,
            upX: 0,
            upY: 1,
            upZ: 0
        });
    }
    dispose() {
        super.dispose();
        this.positionX.dispose();
        this.positionY.dispose();
        this.positionZ.dispose();
        this.forwardX.dispose();
        this.forwardY.dispose();
        this.forwardZ.dispose();
        this.upX.dispose();
        this.upY.dispose();
        this.upZ.dispose();
        return this;
    }
}
//-------------------------------------
// 	INITIALIZATION
//-------------------------------------
(0, _contextInitialization.onContextInit)((context)=>{
    context.listener = new Listener({
        context
    });
});
(0, _contextInitialization.onContextClose)((context)=>{
    context.listener.dispose();
});

},{"./ToneAudioNode":"kZ3Kj","./Param":"5PVlJ","./ContextInitialization":"iapnw","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8gzkS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A wrapper around the MediaRecorder API. Unlike the rest of Tone.js, this module does not offer
 * any sample-accurate scheduling because it is not a feature of the MediaRecorder API.
 * This is only natively supported in Chrome and Firefox.
 * For a cross-browser shim, install (audio-recorder-polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].
 * @example
 * const recorder = new Tone.Recorder();
 * const synth = new Tone.Synth().connect(recorder);
 * // start recording
 * recorder.start();
 * // generate a few notes
 * synth.triggerAttackRelease("C3", 0.5);
 * synth.triggerAttackRelease("C4", 0.5, "+1");
 * synth.triggerAttackRelease("C5", 0.5, "+2");
 * // wait for the notes to end and stop the recording
 * setTimeout(async () => {
 * 	// the recorded audio is returned as a blob
 * 	const recording = await recorder.stop();
 * 	// download the recording by creating an anchor element and blob url
 * 	const url = URL.createObjectURL(recording);
 * 	const anchor = document.createElement("a");
 * 	anchor.download = "recording.webm";
 * 	anchor.href = url;
 * 	anchor.click();
 * }, 4000);
 * @category Component
 */ parcelHelpers.export(exports, "Recorder", ()=>Recorder);
var _tslib = require("tslib");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _gain = require("../../core/context/Gain");
var _debug = require("../../core/util/Debug");
var _audioContext = require("../../core/context/AudioContext");
var _defaults = require("../../core/util/Defaults");
class Recorder extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Recorder.getDefaults(), arguments));
        this.name = "Recorder";
        const options = (0, _defaults.optionsFromArguments)(Recorder.getDefaults(), arguments);
        this.input = new (0, _gain.Gain)({
            context: this.context
        });
        (0, _debug.assert)(Recorder.supported, "Media Recorder API is not available");
        this._stream = this.context.createMediaStreamDestination();
        this.input.connect(this._stream);
        this._recorder = new MediaRecorder(this._stream.stream, {
            mimeType: options.mimeType
        });
    }
    static getDefaults() {
        return (0, _toneAudioNode.ToneAudioNode).getDefaults();
    }
    /**
     * The mime type is the format that the audio is encoded in. For Chrome
     * that is typically webm encoded as "vorbis".
     */ get mimeType() {
        return this._recorder.mimeType;
    }
    /**
     * Test if your platform supports the Media Recorder API. If it's not available,
     * try installing this (polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].
     */ static get supported() {
        return (0, _audioContext.theWindow) !== null && Reflect.has((0, _audioContext.theWindow), "MediaRecorder");
    }
    /**
     * Get the playback state of the Recorder, either "started", "stopped" or "paused"
     */ get state() {
        if (this._recorder.state === "inactive") return "stopped";
        else if (this._recorder.state === "paused") return "paused";
        else return "started";
    }
    /**
     * Start the Recorder. Returns a promise which resolves
     * when the recorder has started.
     */ start() {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            (0, _debug.assert)(this.state !== "started", "Recorder is already started");
            const startPromise = new Promise((done)=>{
                const handleStart = ()=>{
                    this._recorder.removeEventListener("start", handleStart, false);
                    done();
                };
                this._recorder.addEventListener("start", handleStart, false);
            });
            this._recorder.start();
            return yield startPromise;
        });
    }
    /**
     * Stop the recorder. Returns a promise with the recorded content until this point
     * encoded as [[mimeType]]
     */ stop() {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            (0, _debug.assert)(this.state !== "stopped", "Recorder is not started");
            const dataPromise = new Promise((done)=>{
                const handleData = (e)=>{
                    this._recorder.removeEventListener("dataavailable", handleData, false);
                    done(e.data);
                };
                this._recorder.addEventListener("dataavailable", handleData, false);
            });
            this._recorder.stop();
            return yield dataPromise;
        });
    }
    /**
     * Pause the recorder
     */ pause() {
        (0, _debug.assert)(this.state === "started", "Recorder must be started");
        this._recorder.pause();
        return this;
    }
    dispose() {
        super.dispose();
        this.input.dispose();
        this._stream.disconnect();
        return this;
    }
}

},{"tslib":"lRdW5","../../core/context/ToneAudioNode":"kZ3Kj","../../core/context/Gain":"kj68Y","../../core/util/Debug":"2lOIQ","../../core/context/AudioContext":"1NjF0","../../core/util/Defaults":"a9M5s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cHP1S":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Compressor is a thin wrapper around the Web Audio
 * [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).
 * Compression reduces the volume of loud sounds or amplifies quiet sounds
 * by narrowing or "compressing" an audio signal's dynamic range.
 * Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).
 * @example
 * const comp = new Tone.Compressor(-30, 3);
 * @category Component
 */ parcelHelpers.export(exports, "Compressor", ()=>Compressor);
var _param = require("../../core/context/Param");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
class Compressor extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Compressor.getDefaults(), arguments, [
            "threshold",
            "ratio"
        ]));
        this.name = "Compressor";
        /**
         * the compressor node
         */ this._compressor = this.context.createDynamicsCompressor();
        this.input = this._compressor;
        this.output = this._compressor;
        const options = (0, _defaults.optionsFromArguments)(Compressor.getDefaults(), arguments, [
            "threshold",
            "ratio"
        ]);
        this.threshold = new (0, _param.Param)({
            minValue: this._compressor.threshold.minValue,
            maxValue: this._compressor.threshold.maxValue,
            context: this.context,
            convert: false,
            param: this._compressor.threshold,
            units: "decibels",
            value: options.threshold
        });
        this.attack = new (0, _param.Param)({
            minValue: this._compressor.attack.minValue,
            maxValue: this._compressor.attack.maxValue,
            context: this.context,
            param: this._compressor.attack,
            units: "time",
            value: options.attack
        });
        this.release = new (0, _param.Param)({
            minValue: this._compressor.release.minValue,
            maxValue: this._compressor.release.maxValue,
            context: this.context,
            param: this._compressor.release,
            units: "time",
            value: options.release
        });
        this.knee = new (0, _param.Param)({
            minValue: this._compressor.knee.minValue,
            maxValue: this._compressor.knee.maxValue,
            context: this.context,
            convert: false,
            param: this._compressor.knee,
            units: "decibels",
            value: options.knee
        });
        this.ratio = new (0, _param.Param)({
            minValue: this._compressor.ratio.minValue,
            maxValue: this._compressor.ratio.maxValue,
            context: this.context,
            convert: false,
            param: this._compressor.ratio,
            units: "positive",
            value: options.ratio
        });
        // set the defaults
        (0, _interface.readOnly)(this, [
            "knee",
            "release",
            "attack",
            "ratio",
            "threshold"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            attack: 0.003,
            knee: 30,
            ratio: 12,
            release: 0.25,
            threshold: -24
        });
    }
    /**
     * A read-only decibel value for metering purposes, representing the current amount of gain
     * reduction that the compressor is applying to the signal. If fed no signal the value will be 0 (no gain reduction).
     */ get reduction() {
        return this._compressor.reduction;
    }
    dispose() {
        super.dispose();
        this._compressor.disconnect();
        this.attack.dispose();
        this.release.dispose();
        this.threshold.dispose();
        this.ratio.dispose();
        this.knee.dispose();
        return this;
    }
}

},{"../../core/context/Param":"5PVlJ","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hJSU2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Gate only passes a signal through when the incoming
 * signal exceeds a specified threshold. It uses [[Follower]] to follow the ampltiude
 * of the incoming signal and compares it to the [[threshold]] value using [[GreaterThan]].
 *
 * @example
 * const gate = new Tone.Gate(-30, 0.2).toDestination();
 * const mic = new Tone.UserMedia().connect(gate);
 * // the gate will only pass through the incoming
 * // signal when it's louder than -30db
 * @category Component
 */ parcelHelpers.export(exports, "Gate", ()=>Gate);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _greaterThan = require("../../signal/GreaterThan");
var _gain = require("../../core/context/Gain");
var _follower = require("../analysis/Follower");
var _defaults = require("../../core/util/Defaults");
var _conversions = require("../../core/type/Conversions");
class Gate extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(Gate.getDefaults(), arguments, [
            "threshold",
            "smoothing"
        ])));
        this.name = "Gate";
        const options = (0, _defaults.optionsFromArguments)(Gate.getDefaults(), arguments, [
            "threshold",
            "smoothing"
        ]);
        this._follower = new (0, _follower.Follower)({
            context: this.context,
            smoothing: options.smoothing
        });
        this._gt = new (0, _greaterThan.GreaterThan)({
            context: this.context,
            value: (0, _conversions.dbToGain)(options.threshold)
        });
        this.input = new (0, _gain.Gain)({
            context: this.context
        });
        this._gate = this.output = new (0, _gain.Gain)({
            context: this.context
        });
        // connections
        this.input.connect(this._gate);
        // the control signal
        this.input.chain(this._follower, this._gt, this._gate.gain);
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            smoothing: 0.1,
            threshold: -40
        });
    }
    /**
     * The threshold of the gate in decibels
     */ get threshold() {
        return (0, _conversions.gainToDb)(this._gt.value);
    }
    set threshold(thresh) {
        this._gt.value = (0, _conversions.dbToGain)(thresh);
    }
    /**
     * The attack/decay speed of the gate. See [[Follower.smoothing]]
     */ get smoothing() {
        return this._follower.smoothing;
    }
    set smoothing(smoothingTime) {
        this._follower.smoothing = smoothingTime;
    }
    dispose() {
        super.dispose();
        this.input.dispose();
        this._follower.dispose();
        this._gt.dispose();
        this._gate.dispose();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../signal/GreaterThan":"gPdXT","../../core/context/Gain":"kj68Y","../analysis/Follower":"9fpr2","../../core/util/Defaults":"a9M5s","../../core/type/Conversions":"iww1u","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jZwRO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Limiter will limit the loudness of an incoming signal.
 * Under the hood it's composed of a [[Compressor]] with a fast attack
 * and release and max compression ratio.
 *
 * @example
 * const limiter = new Tone.Limiter(-20).toDestination();
 * const oscillator = new Tone.Oscillator().connect(limiter);
 * oscillator.start();
 * @category Component
 */ parcelHelpers.export(exports, "Limiter", ()=>Limiter);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _compressor = require("./Compressor");
var _interface = require("../../core/util/Interface");
class Limiter extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(Limiter.getDefaults(), arguments, [
            "threshold"
        ])));
        this.name = "Limiter";
        const options = (0, _defaults.optionsFromArguments)(Limiter.getDefaults(), arguments, [
            "threshold"
        ]);
        this._compressor = this.input = this.output = new (0, _compressor.Compressor)({
            context: this.context,
            ratio: 20,
            attack: 0.003,
            release: 0.01,
            threshold: options.threshold
        });
        this.threshold = this._compressor.threshold;
        (0, _interface.readOnly)(this, "threshold");
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            threshold: -12
        });
    }
    /**
     * A read-only decibel value for metering purposes, representing the current amount of gain
     * reduction that the compressor is applying to the signal.
     */ get reduction() {
        return this._compressor.reduction;
    }
    dispose() {
        super.dispose();
        this._compressor.dispose();
        this.threshold.dispose();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","./Compressor":"cHP1S","../../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aTPvB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * MidSideCompressor applies two different compressors to the [[mid]]
 * and [[side]] signal components of the input. See [[MidSideSplit]] and [[MidSideMerge]].
 * @category Component
 */ parcelHelpers.export(exports, "MidSideCompressor", ()=>MidSideCompressor);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _compressor = require("./Compressor");
var _defaults = require("../../core/util/Defaults");
var _midSideSplit = require("../channel/MidSideSplit");
var _midSideMerge = require("../channel/MidSideMerge");
var _interface = require("../../core/util/Interface");
class MidSideCompressor extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(MidSideCompressor.getDefaults(), arguments)));
        this.name = "MidSideCompressor";
        const options = (0, _defaults.optionsFromArguments)(MidSideCompressor.getDefaults(), arguments);
        this._midSideSplit = this.input = new (0, _midSideSplit.MidSideSplit)({
            context: this.context
        });
        this._midSideMerge = this.output = new (0, _midSideMerge.MidSideMerge)({
            context: this.context
        });
        this.mid = new (0, _compressor.Compressor)(Object.assign(options.mid, {
            context: this.context
        }));
        this.side = new (0, _compressor.Compressor)(Object.assign(options.side, {
            context: this.context
        }));
        this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);
        this._midSideSplit.side.chain(this.side, this._midSideMerge.side);
        (0, _interface.readOnly)(this, [
            "mid",
            "side"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            mid: {
                ratio: 3,
                threshold: -24,
                release: 0.03,
                attack: 0.02,
                knee: 16
            },
            side: {
                ratio: 6,
                threshold: -30,
                release: 0.25,
                attack: 0.03,
                knee: 10
            }
        });
    }
    dispose() {
        super.dispose();
        this.mid.dispose();
        this.side.dispose();
        this._midSideSplit.dispose();
        this._midSideMerge.dispose();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","./Compressor":"cHP1S","../../core/util/Defaults":"a9M5s","../channel/MidSideSplit":"3oEnx","../channel/MidSideMerge":"8osXs","../../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dRDVG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A compressor with separate controls over low/mid/high dynamics. See [[Compressor]] and [[MultibandSplit]]
 *
 * @example
 * const multiband = new Tone.MultibandCompressor({
 * 	lowFrequency: 200,
 * 	highFrequency: 1300,
 * 	low: {
 * 		threshold: -12
 * 	}
 * });
 * @category Component
 */ parcelHelpers.export(exports, "MultibandCompressor", ()=>MultibandCompressor);
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _compressor = require("./Compressor");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _multibandSplit = require("../channel/MultibandSplit");
var _gain = require("../../core/context/Gain");
class MultibandCompressor extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super(Object.assign((0, _defaults.optionsFromArguments)(MultibandCompressor.getDefaults(), arguments)));
        this.name = "MultibandCompressor";
        const options = (0, _defaults.optionsFromArguments)(MultibandCompressor.getDefaults(), arguments);
        this._splitter = this.input = new (0, _multibandSplit.MultibandSplit)({
            context: this.context,
            lowFrequency: options.lowFrequency,
            highFrequency: options.highFrequency
        });
        this.lowFrequency = this._splitter.lowFrequency;
        this.highFrequency = this._splitter.highFrequency;
        this.output = new (0, _gain.Gain)({
            context: this.context
        });
        this.low = new (0, _compressor.Compressor)(Object.assign(options.low, {
            context: this.context
        }));
        this.mid = new (0, _compressor.Compressor)(Object.assign(options.mid, {
            context: this.context
        }));
        this.high = new (0, _compressor.Compressor)(Object.assign(options.high, {
            context: this.context
        }));
        // connect the compressor
        this._splitter.low.chain(this.low, this.output);
        this._splitter.mid.chain(this.mid, this.output);
        this._splitter.high.chain(this.high, this.output);
        (0, _interface.readOnly)(this, [
            "high",
            "mid",
            "low",
            "highFrequency",
            "lowFrequency"
        ]);
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            lowFrequency: 250,
            highFrequency: 2000,
            low: {
                ratio: 6,
                threshold: -30,
                release: 0.25,
                attack: 0.03,
                knee: 10
            },
            mid: {
                ratio: 3,
                threshold: -24,
                release: 0.03,
                attack: 0.02,
                knee: 16
            },
            high: {
                ratio: 3,
                threshold: -24,
                release: 0.03,
                attack: 0.02,
                knee: 16
            }
        });
    }
    dispose() {
        super.dispose();
        this._splitter.dispose();
        this.low.dispose();
        this.mid.dispose();
        this.high.dispose();
        this.output.dispose();
        return this;
    }
}

},{"../../core/context/ToneAudioNode":"kZ3Kj","./Compressor":"cHP1S","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../channel/MultibandSplit":"6mTh7","../../core/context/Gain":"kj68Y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gkvWP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * EQ3 provides 3 equalizer bins: Low/Mid/High.
 * @category Component
 */ parcelHelpers.export(exports, "EQ3", ()=>EQ3);
var _gain = require("../../core/context/Gain");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _defaults = require("../../core/util/Defaults");
var _interface = require("../../core/util/Interface");
var _multibandSplit = require("../channel/MultibandSplit");
class EQ3 extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(EQ3.getDefaults(), arguments, [
            "low",
            "mid",
            "high"
        ]));
        this.name = "EQ3";
        /**
         * the output
         */ this.output = new (0, _gain.Gain)({
            context: this.context
        });
        this._internalChannels = [];
        const options = (0, _defaults.optionsFromArguments)(EQ3.getDefaults(), arguments, [
            "low",
            "mid",
            "high"
        ]);
        this.input = this._multibandSplit = new (0, _multibandSplit.MultibandSplit)({
            context: this.context,
            highFrequency: options.highFrequency,
            lowFrequency: options.lowFrequency
        });
        this._lowGain = new (0, _gain.Gain)({
            context: this.context,
            gain: options.low,
            units: "decibels"
        });
        this._midGain = new (0, _gain.Gain)({
            context: this.context,
            gain: options.mid,
            units: "decibels"
        });
        this._highGain = new (0, _gain.Gain)({
            context: this.context,
            gain: options.high,
            units: "decibels"
        });
        this.low = this._lowGain.gain;
        this.mid = this._midGain.gain;
        this.high = this._highGain.gain;
        this.Q = this._multibandSplit.Q;
        this.lowFrequency = this._multibandSplit.lowFrequency;
        this.highFrequency = this._multibandSplit.highFrequency;
        // the frequency bands
        this._multibandSplit.low.chain(this._lowGain, this.output);
        this._multibandSplit.mid.chain(this._midGain, this.output);
        this._multibandSplit.high.chain(this._highGain, this.output);
        (0, _interface.readOnly)(this, [
            "low",
            "mid",
            "high",
            "lowFrequency",
            "highFrequency"
        ]);
        this._internalChannels = [
            this._multibandSplit
        ];
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            high: 0,
            highFrequency: 2500,
            low: 0,
            lowFrequency: 400,
            mid: 0
        });
    }
    /**
     * Clean up.
     */ dispose() {
        super.dispose();
        (0, _interface.writable)(this, [
            "low",
            "mid",
            "high",
            "lowFrequency",
            "highFrequency"
        ]);
        this._multibandSplit.dispose();
        this.lowFrequency.dispose();
        this.highFrequency.dispose();
        this._lowGain.dispose();
        this._midGain.dispose();
        this._highGain.dispose();
        this.low.dispose();
        this.mid.dispose();
        this.high.dispose();
        this.Q.dispose();
        return this;
    }
}

},{"../../core/context/Gain":"kj68Y","../../core/context/ToneAudioNode":"kZ3Kj","../../core/util/Defaults":"a9M5s","../../core/util/Interface":"hVOjA","../channel/MultibandSplit":"6mTh7","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d2Ucy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Convolver is a wrapper around the Native Web Audio
 * [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).
 * Convolution is useful for reverb and filter emulation. Read more about convolution reverb on
 * [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).
 *
 * @example
 * // initializing the convolver with an impulse response
 * const convolver = new Tone.Convolver("./path/to/ir.wav").toDestination();
 * @category Component
 */ parcelHelpers.export(exports, "Convolver", ()=>Convolver);
var _tslib = require("tslib");
var _toneAudioNode = require("../../core/context/ToneAudioNode");
var _toneAudioBuffer = require("../../core/context/ToneAudioBuffer");
var _defaults = require("../../core/util/Defaults");
var _gain = require("../../core/context/Gain");
var _interface = require("../../core/util/Interface");
class Convolver extends (0, _toneAudioNode.ToneAudioNode) {
    constructor(){
        super((0, _defaults.optionsFromArguments)(Convolver.getDefaults(), arguments, [
            "url",
            "onload"
        ]));
        this.name = "Convolver";
        /**
         * The native ConvolverNode
         */ this._convolver = this.context.createConvolver();
        const options = (0, _defaults.optionsFromArguments)(Convolver.getDefaults(), arguments, [
            "url",
            "onload"
        ]);
        this._buffer = new (0, _toneAudioBuffer.ToneAudioBuffer)(options.url, (buffer)=>{
            this.buffer = buffer;
            options.onload();
        });
        this.input = new (0, _gain.Gain)({
            context: this.context
        });
        this.output = new (0, _gain.Gain)({
            context: this.context
        });
        // set if it's already loaded, set it immediately
        if (this._buffer.loaded) this.buffer = this._buffer;
        // initially set normalization
        this.normalize = options.normalize;
        // connect it up
        this.input.chain(this._convolver, this.output);
    }
    static getDefaults() {
        return Object.assign((0, _toneAudioNode.ToneAudioNode).getDefaults(), {
            normalize: true,
            onload: (0, _interface.noOp)
        });
    }
    /**
     * Load an impulse response url as an audio buffer.
     * Decodes the audio asynchronously and invokes
     * the callback once the audio buffer loads.
     * @param url The url of the buffer to load. filetype support depends on the browser.
     */ load(url) {
        return (0, _tslib.__awaiter)(this, void 0, void 0, function*() {
            this.buffer = yield this._buffer.load(url);
        });
    }
    /**
     * The convolver's buffer
     */ get buffer() {
        if (this._buffer.length) return this._buffer;
        else return null;
    }
    set buffer(buffer) {
        if (buffer) this._buffer.set(buffer);
        // if it's already got a buffer, create a new one
        if (this._convolver.buffer) {
            // disconnect the old one
            this.input.disconnect();
            this._convolver.disconnect();
            // create and connect a new one
            this._convolver = this.context.createConvolver();
            this.input.chain(this._convolver, this.output);
        }
        const buff = this._buffer.get();
        this._convolver.buffer = buff ? buff : null;
    }
    /**
     * The normalize property of the ConvolverNode interface is a boolean that
     * controls whether the impulse response from the buffer will be scaled by
     * an equal-power normalization when the buffer attribute is set, or not.
     */ get normalize() {
        return this._convolver.normalize;
    }
    set normalize(norm) {
        this._convolver.normalize = norm;
    }
    dispose() {
        super.dispose();
        this._buffer.dispose();
        this._convolver.disconnect();
        return this;
    }
}

},{"tslib":"lRdW5","../../core/context/ToneAudioNode":"kZ3Kj","../../core/context/ToneAudioBuffer":"8aSPC","../../core/util/Defaults":"a9M5s","../../core/context/Gain":"kj68Y","../../core/util/Interface":"hVOjA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"50Rdi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "samples", ()=>samples);
const samples = {
    "closed-hihat": [
        require("93d17bc514449124"),
        require("3c9cef09adbcb0d5"),
        require("9391601abc964ed0"),
        require("71e50b243f0f7525"),
        require("66d50ec54fb31134"),
        require("7277e938e9615d4"),
        require("c7c9754b1cf79dc2"),
        require("9160b5d7827d948a"),
        require("7fc8abc8da6ab1fe"),
        require("c8f4976206fe6eda"),
        require("a45f7aa0857a8933"),
        require("2a86a4d1bb2652d")
    ],
    "open-hihat": [
        require("7c88c2bd29a37ad3"),
        require("1a954c9171cffc83"),
        require("c2639f988fba83ae"),
        require("5102ce6807af873"),
        require("3b75726a57d3d11e"),
        require("780cd96f9f1b08b9"),
        require("45c77d159053dbc1"),
        require("7bec3a466f254985"),
        require("a573ea867e27c54"),
        require("23f5e354bdc61968"),
        require("b67d358f1d172f54"),
        require("5c17e0b7de41b7a5")
    ],
    "crash": [
        require("62317178cc6f9f45"),
        require("f2694034ff22a00a"),
        require("ca943ecba89ccd00"),
        require("39ead73641e3904e"),
        require("c99008f3faea9f14"),
        require("f345f7af4b2d56f5"),
        require("e6f3764e4c4fbfb9"),
        require("d6c67af77e62c6eb"),
        require("95f53a765fbdbbf6"),
        require("3cb664734a24daa0"),
        require("1ca123b29cce0980"),
        require("a8568c4cfebfa945")
    ],
    "ride": [
        require("b2eb9434d0e4b362"),
        require("9ec95e731d583ac1"),
        require("29964d06a3e235d0"),
        require("4b8a31b546b9c027"),
        require("a6fee2e8f28a5232"),
        require("957f9d237ac3e0f9"),
        require("c3aaab23c03a209b"),
        require("cc872d6c0f20e42f"),
        require("f807ad6c9fc37970"),
        require("f6ca6e4bd70e7c89"),
        require("ddd31955ff823005"),
        require("7b6e928d7283462")
    ],
    "kick": [
        require("e2aeb812ab6e7d27"),
        require("da37945b0b2a9e1"),
        require("3a7f966da81de6f3"),
        require("f7666e783644193e"),
        require("6f097cd216a82a40"),
        require("24a2bcf28bd7d476"),
        require("20e51fb30acfde9e"),
        require("54500e9a569d1c96"),
        require("1f8fc8cf58e94f0d"),
        require("c4e2bff2d78d4a16"),
        require("236c0d9ee709ad8"),
        require("de60ef9799769c75")
    ],
    "snare": [
        require("1d4b7fd9d131e9d1"),
        require("9dc06ff40f0dcea1"),
        require("47dab6da50fe1b3d"),
        require("d5b35b63f39dc169"),
        require("c1159f4433d2ac4a"),
        require("72ef810db02cbcd3"),
        require("5231506f560d01"),
        require("589739d84477948f"),
        require("a014f57e3e11ecd4"),
        require("b67597323668203"),
        require("277f435b1ec924db"),
        require("45a70aa25b2f6e77")
    ],
    "hi-tom": [
        require("cc6cfeac5e081fb5"),
        require("23c4cb32968cec1f"),
        require("ec99fa505c8b2498"),
        require("86d0f31d9ce8b633"),
        require("7986fe0511774d9c"),
        require("1406f169d5d1ce67"),
        require("f27bd2842d1d2adb"),
        require("24dcfabcce9a19fb"),
        require("12d4aeb32c8f2128"),
        require("c7b0b4025452fe27"),
        require("c32e4696d3f720ea"),
        require("e29cc32355717bc6")
    ],
    "mid-tom": [
        require("cc620ac435e0b555"),
        require("d8e086f87e371cf9"),
        require("91cfa1c4a5bcbd4c"),
        require("250a966ced697a63"),
        require("b37ee4912e33b0f7"),
        require("eac13c7c85d18564"),
        require("fe59edf625401e4f"),
        require("3c25603e4d96a19a"),
        require("bd6238e3f0de5130"),
        require("c182a56e49f20309"),
        require("eac470240934dfe6"),
        require("a691185a103d2508")
    ],
    "floor-tom": [
        require("6cfd64a59c6beaec"),
        require("2702b1fe86ea322a"),
        require("ad6e1a17485269aa"),
        require("1f866dae63148b0c"),
        require("b925162b19ae81f1"),
        require("97b5344aaaff4d0e"),
        require("c53e04a7bb51b2bc"),
        require("49691197d98ad3b"),
        require("ab52b0d8aaf17de2"),
        require("1c64c4e03fd5fa88"),
        require("cafbdd22c90f8eec"),
        require("7b5ac30c3f4826fc")
    ]
};

},{"93d17bc514449124":"lhF7Y","3c9cef09adbcb0d5":"4aMxY","9391601abc964ed0":"g154W","71e50b243f0f7525":"llvN2","66d50ec54fb31134":"606YA","7277e938e9615d4":"fqZUJ","c7c9754b1cf79dc2":"5qqvZ","9160b5d7827d948a":"jEUUa","7fc8abc8da6ab1fe":"amiMQ","c8f4976206fe6eda":"2JnUb","a45f7aa0857a8933":"7QmlL","2a86a4d1bb2652d":"jb1rz","7c88c2bd29a37ad3":"eaIuG","1a954c9171cffc83":"cVvae","c2639f988fba83ae":"eNzNn","5102ce6807af873":"iV4DA","3b75726a57d3d11e":"1MrBi","780cd96f9f1b08b9":"f5Xhf","45c77d159053dbc1":"iU50K","7bec3a466f254985":"ehw2d","a573ea867e27c54":"9FwfH","23f5e354bdc61968":"hHni6","b67d358f1d172f54":"YZ24s","5c17e0b7de41b7a5":"9ZG70","62317178cc6f9f45":"c8fIE","f2694034ff22a00a":"cLDIP","ca943ecba89ccd00":"69N8B","39ead73641e3904e":"bSKyY","c99008f3faea9f14":"eJV58","f345f7af4b2d56f5":"hLMGs","e6f3764e4c4fbfb9":"gITyS","d6c67af77e62c6eb":"eyzkf","95f53a765fbdbbf6":"htRm9","3cb664734a24daa0":"5AVur","1ca123b29cce0980":"2oNAn","a8568c4cfebfa945":"8bc0b","b2eb9434d0e4b362":"eXtyA","9ec95e731d583ac1":"efOdr","29964d06a3e235d0":"6TgNu","4b8a31b546b9c027":"l8egf","a6fee2e8f28a5232":"iuYgm","957f9d237ac3e0f9":"5Uvjx","c3aaab23c03a209b":"joYvh","cc872d6c0f20e42f":"4YkGP","f807ad6c9fc37970":"72lSZ","f6ca6e4bd70e7c89":"iHwQV","ddd31955ff823005":"lXV9B","7b6e928d7283462":"hhDlM","e2aeb812ab6e7d27":"aSnqg","da37945b0b2a9e1":"9dNBC","3a7f966da81de6f3":"joKOC","f7666e783644193e":"9zDLp","6f097cd216a82a40":"cd4CS","24a2bcf28bd7d476":"hrwab","20e51fb30acfde9e":"jXvoJ","54500e9a569d1c96":"bdQYI","1f8fc8cf58e94f0d":"ldbhD","c4e2bff2d78d4a16":"4IdjW","236c0d9ee709ad8":"3LyWC","de60ef9799769c75":"5HuUJ","1d4b7fd9d131e9d1":"cXWA7","9dc06ff40f0dcea1":"3yHuU","47dab6da50fe1b3d":"aJVBH","d5b35b63f39dc169":"20u7L","c1159f4433d2ac4a":"lDbuI","72ef810db02cbcd3":"ebvbp","5231506f560d01":"brDGD","589739d84477948f":"gjgX3","a014f57e3e11ecd4":"iRi54","b67597323668203":"7Odyl","277f435b1ec924db":"joMN9","45a70aa25b2f6e77":"7se5F","cc6cfeac5e081fb5":"gjYD9","23c4cb32968cec1f":"5a41w","ec99fa505c8b2498":"1f1Ct","86d0f31d9ce8b633":"igD27","7986fe0511774d9c":"dYzt8","1406f169d5d1ce67":"7hNqw","f27bd2842d1d2adb":"5oYOd","24dcfabcce9a19fb":"c5PcI","12d4aeb32c8f2128":"fmniD","c7b0b4025452fe27":"dq70w","c32e4696d3f720ea":"3I0gP","e29cc32355717bc6":"4bJrW","cc620ac435e0b555":"5OoNv","d8e086f87e371cf9":"1CyRM","91cfa1c4a5bcbd4c":"6a5Wx","250a966ced697a63":"et6De","b37ee4912e33b0f7":"cV7at","eac13c7c85d18564":"83iye","fe59edf625401e4f":"2Ynye","3c25603e4d96a19a":"4qLat","bd6238e3f0de5130":"5FNSV","c182a56e49f20309":"bbU0I","eac470240934dfe6":"ir7K7","a691185a103d2508":"7gw47","6cfd64a59c6beaec":"eE9kv","2702b1fe86ea322a":"bCVxb","ad6e1a17485269aa":"fRdRo","1f866dae63148b0c":"aEWgI","b925162b19ae81f1":"9aEbd","97b5344aaaff4d0e":"jWWtx","c53e04a7bb51b2bc":"cBTuf","49691197d98ad3b":"aVgDR","ab52b0d8aaf17de2":"hu5TX","1c64c4e03fd5fa88":"cc50O","cafbdd22c90f8eec":"g7gYW","7b5ac30c3f4826fc":"aNetK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lhF7Y":[function(require,module,exports) {
module.exports = require("f0dff4bf00629218").getBundleURL("10Mjw") + "closed-hihat_1.3325fcac.mp3" + "?" + Date.now();

},{"f0dff4bf00629218":"lgJ39"}],"lgJ39":[function(require,module,exports) {
"use strict";
var bundleURL = {};
function getBundleURLCached(id) {
    var value = bundleURL[id];
    if (!value) {
        value = getBundleURL();
        bundleURL[id] = value;
    }
    return value;
}
function getBundleURL() {
    try {
        throw new Error();
    } catch (err) {
        var matches = ("" + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/[^)\n]+/g);
        if (matches) // The first two stack frames will be this function and getBundleURLCached.
        // Use the 3rd one, which will be a runtime in the original bundle.
        return getBaseURL(matches[2]);
    }
    return "/";
}
function getBaseURL(url) {
    return ("" + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/.+)\/[^/]+$/, "$1") + "/";
}
// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.
function getOrigin(url) {
    var matches = ("" + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/[^/]+/);
    if (!matches) throw new Error("Origin not found");
    return matches[0];
}
exports.getBundleURL = getBundleURLCached;
exports.getBaseURL = getBaseURL;
exports.getOrigin = getOrigin;

},{}],"4aMxY":[function(require,module,exports) {
module.exports = require("2333ee00b35c27b6").getBundleURL("10Mjw") + "closed-hihat_2.0950edc4.mp3" + "?" + Date.now();

},{"2333ee00b35c27b6":"lgJ39"}],"g154W":[function(require,module,exports) {
module.exports = require("d2014b841916a95c").getBundleURL("10Mjw") + "closed-hihat_3.1bc343ae.mp3" + "?" + Date.now();

},{"d2014b841916a95c":"lgJ39"}],"llvN2":[function(require,module,exports) {
module.exports = require("cf5eb37d38d47c94").getBundleURL("10Mjw") + "closed-hihat_4.7ebc4934.mp3" + "?" + Date.now();

},{"cf5eb37d38d47c94":"lgJ39"}],"606YA":[function(require,module,exports) {
module.exports = require("b748e50bf011f986").getBundleURL("10Mjw") + "closed-hihat_5.09ab78b4.mp3" + "?" + Date.now();

},{"b748e50bf011f986":"lgJ39"}],"fqZUJ":[function(require,module,exports) {
module.exports = require("7ce494b398b8ef36").getBundleURL("10Mjw") + "closed-hihat_6.b88efbdd.mp3" + "?" + Date.now();

},{"7ce494b398b8ef36":"lgJ39"}],"5qqvZ":[function(require,module,exports) {
module.exports = require("855cbb766cf6a825").getBundleURL("10Mjw") + "closed-hihat_7.bc28a15f.mp3" + "?" + Date.now();

},{"855cbb766cf6a825":"lgJ39"}],"jEUUa":[function(require,module,exports) {
module.exports = require("bc37f0c99f86643e").getBundleURL("10Mjw") + "closed-hihat_8.16b4022e.mp3" + "?" + Date.now();

},{"bc37f0c99f86643e":"lgJ39"}],"amiMQ":[function(require,module,exports) {
module.exports = require("bbd1c695060d4a35").getBundleURL("10Mjw") + "closed-hihat_9.388523c0.mp3" + "?" + Date.now();

},{"bbd1c695060d4a35":"lgJ39"}],"2JnUb":[function(require,module,exports) {
module.exports = require("943a80ce76dbb0fd").getBundleURL("10Mjw") + "closed-hihat_10.4100c43c.mp3" + "?" + Date.now();

},{"943a80ce76dbb0fd":"lgJ39"}],"7QmlL":[function(require,module,exports) {
module.exports = require("54cef1569a21fa4c").getBundleURL("10Mjw") + "closed-hihat_11.1f62b250.mp3" + "?" + Date.now();

},{"54cef1569a21fa4c":"lgJ39"}],"jb1rz":[function(require,module,exports) {
module.exports = require("58aea88d7fe80aa8").getBundleURL("10Mjw") + "closed-hihat_12.0c049867.mp3" + "?" + Date.now();

},{"58aea88d7fe80aa8":"lgJ39"}],"eaIuG":[function(require,module,exports) {
module.exports = require("2eb47435fa845957").getBundleURL("10Mjw") + "open-hihat_1.19c2f8f1.mp3" + "?" + Date.now();

},{"2eb47435fa845957":"lgJ39"}],"cVvae":[function(require,module,exports) {
module.exports = require("e54518f3013d8ea2").getBundleURL("10Mjw") + "open-hihat_2.ce9138d9.mp3" + "?" + Date.now();

},{"e54518f3013d8ea2":"lgJ39"}],"eNzNn":[function(require,module,exports) {
module.exports = require("6d787bfcb9584d99").getBundleURL("10Mjw") + "open-hihat_3.e09893e5.mp3" + "?" + Date.now();

},{"6d787bfcb9584d99":"lgJ39"}],"iV4DA":[function(require,module,exports) {
module.exports = require("422921567de57c8e").getBundleURL("10Mjw") + "open-hihat_4.33c9e376.mp3" + "?" + Date.now();

},{"422921567de57c8e":"lgJ39"}],"1MrBi":[function(require,module,exports) {
module.exports = require("badf3a3140736fef").getBundleURL("10Mjw") + "open-hihat_5.efcf37b5.mp3" + "?" + Date.now();

},{"badf3a3140736fef":"lgJ39"}],"f5Xhf":[function(require,module,exports) {
module.exports = require("a3bb193b26975e73").getBundleURL("10Mjw") + "open-hihat_6.5acb3d32.mp3" + "?" + Date.now();

},{"a3bb193b26975e73":"lgJ39"}],"iU50K":[function(require,module,exports) {
module.exports = require("b9ca4d9c27c98c33").getBundleURL("10Mjw") + "open-hihat_7.eb02cdac.mp3" + "?" + Date.now();

},{"b9ca4d9c27c98c33":"lgJ39"}],"ehw2d":[function(require,module,exports) {
module.exports = require("35dfd5e1f64c0ace").getBundleURL("10Mjw") + "open-hihat_8.5e78d68d.mp3" + "?" + Date.now();

},{"35dfd5e1f64c0ace":"lgJ39"}],"9FwfH":[function(require,module,exports) {
module.exports = require("4015ec9cbebcdd70").getBundleURL("10Mjw") + "open-hihat_9.60322e24.mp3" + "?" + Date.now();

},{"4015ec9cbebcdd70":"lgJ39"}],"hHni6":[function(require,module,exports) {
module.exports = require("7e24194e870bb3fb").getBundleURL("10Mjw") + "open-hihat_10.47c7f7f7.mp3" + "?" + Date.now();

},{"7e24194e870bb3fb":"lgJ39"}],"YZ24s":[function(require,module,exports) {
module.exports = require("6534b35e340bc48c").getBundleURL("10Mjw") + "open-hihat_11.828cdac1.mp3" + "?" + Date.now();

},{"6534b35e340bc48c":"lgJ39"}],"9ZG70":[function(require,module,exports) {
module.exports = require("347205d8ddaf932e").getBundleURL("10Mjw") + "open-hihat_12.a3d97e07.mp3" + "?" + Date.now();

},{"347205d8ddaf932e":"lgJ39"}],"c8fIE":[function(require,module,exports) {
module.exports = require("13aed5284c49e6bd").getBundleURL("10Mjw") + "crash_1.d03ffc5f.mp3" + "?" + Date.now();

},{"13aed5284c49e6bd":"lgJ39"}],"cLDIP":[function(require,module,exports) {
module.exports = require("c7d51a7893f5ef0").getBundleURL("10Mjw") + "crash_2.e0c6cd8a.mp3" + "?" + Date.now();

},{"c7d51a7893f5ef0":"lgJ39"}],"69N8B":[function(require,module,exports) {
module.exports = require("8538f562a8eaff7e").getBundleURL("10Mjw") + "crash_3.2250ec60.mp3" + "?" + Date.now();

},{"8538f562a8eaff7e":"lgJ39"}],"bSKyY":[function(require,module,exports) {
module.exports = require("8424a852e62ea0c").getBundleURL("10Mjw") + "crash_4.c34a212e.mp3" + "?" + Date.now();

},{"8424a852e62ea0c":"lgJ39"}],"eJV58":[function(require,module,exports) {
module.exports = require("2010aa321d5367c0").getBundleURL("10Mjw") + "crash_5.1ab23524.mp3" + "?" + Date.now();

},{"2010aa321d5367c0":"lgJ39"}],"hLMGs":[function(require,module,exports) {
module.exports = require("1d8bf78b85c0aad7").getBundleURL("10Mjw") + "crash_6.fcfce575.mp3" + "?" + Date.now();

},{"1d8bf78b85c0aad7":"lgJ39"}],"gITyS":[function(require,module,exports) {
module.exports = require("c3b4061518fbbb94").getBundleURL("10Mjw") + "crash_7.1cf33ea8.mp3" + "?" + Date.now();

},{"c3b4061518fbbb94":"lgJ39"}],"eyzkf":[function(require,module,exports) {
module.exports = require("6557ee2b0117be4f").getBundleURL("10Mjw") + "crash_8.2d9c83a7.mp3" + "?" + Date.now();

},{"6557ee2b0117be4f":"lgJ39"}],"htRm9":[function(require,module,exports) {
module.exports = require("8c8851035e91732b").getBundleURL("10Mjw") + "crash_9.c78a7fe7.mp3" + "?" + Date.now();

},{"8c8851035e91732b":"lgJ39"}],"5AVur":[function(require,module,exports) {
module.exports = require("85ca2df683f7cff0").getBundleURL("10Mjw") + "crash_10.04bd8544.mp3" + "?" + Date.now();

},{"85ca2df683f7cff0":"lgJ39"}],"2oNAn":[function(require,module,exports) {
module.exports = require("eef5a193661bb21a").getBundleURL("10Mjw") + "crash_11.41320129.mp3" + "?" + Date.now();

},{"eef5a193661bb21a":"lgJ39"}],"8bc0b":[function(require,module,exports) {
module.exports = require("8690f7c3e339fe1f").getBundleURL("10Mjw") + "crash_12.b971e555.mp3" + "?" + Date.now();

},{"8690f7c3e339fe1f":"lgJ39"}],"eXtyA":[function(require,module,exports) {
module.exports = require("bc3384d9461981bc").getBundleURL("10Mjw") + "ride_1.84e83ca5.mp3" + "?" + Date.now();

},{"bc3384d9461981bc":"lgJ39"}],"efOdr":[function(require,module,exports) {
module.exports = require("e726aa7170acd25d").getBundleURL("10Mjw") + "ride_2.c770ce28.mp3" + "?" + Date.now();

},{"e726aa7170acd25d":"lgJ39"}],"6TgNu":[function(require,module,exports) {
module.exports = require("732946e8278f7f15").getBundleURL("10Mjw") + "ride_3.f567f836.mp3" + "?" + Date.now();

},{"732946e8278f7f15":"lgJ39"}],"l8egf":[function(require,module,exports) {
module.exports = require("8f985aecc14c5234").getBundleURL("10Mjw") + "ride_4.f0bd9f11.mp3" + "?" + Date.now();

},{"8f985aecc14c5234":"lgJ39"}],"iuYgm":[function(require,module,exports) {
module.exports = require("2cdba7f4206d1947").getBundleURL("10Mjw") + "ride_5.f5a5cebd.mp3" + "?" + Date.now();

},{"2cdba7f4206d1947":"lgJ39"}],"5Uvjx":[function(require,module,exports) {
module.exports = require("770d74eb2b94f252").getBundleURL("10Mjw") + "ride_6.a44f722c.mp3" + "?" + Date.now();

},{"770d74eb2b94f252":"lgJ39"}],"joYvh":[function(require,module,exports) {
module.exports = require("c3cba29255389310").getBundleURL("10Mjw") + "ride_7.6676786c.mp3" + "?" + Date.now();

},{"c3cba29255389310":"lgJ39"}],"4YkGP":[function(require,module,exports) {
module.exports = require("df4614f4265d7abb").getBundleURL("10Mjw") + "ride_8.89db1737.mp3" + "?" + Date.now();

},{"df4614f4265d7abb":"lgJ39"}],"72lSZ":[function(require,module,exports) {
module.exports = require("d6c6e499df92c3bc").getBundleURL("10Mjw") + "ride_9.6a0589c9.mp3" + "?" + Date.now();

},{"d6c6e499df92c3bc":"lgJ39"}],"iHwQV":[function(require,module,exports) {
module.exports = require("cbf4584bdc391b95").getBundleURL("10Mjw") + "ride_10.cd05ead4.mp3" + "?" + Date.now();

},{"cbf4584bdc391b95":"lgJ39"}],"lXV9B":[function(require,module,exports) {
module.exports = require("d8cd11e00e70c61a").getBundleURL("10Mjw") + "ride_11.ba145788.mp3" + "?" + Date.now();

},{"d8cd11e00e70c61a":"lgJ39"}],"hhDlM":[function(require,module,exports) {
module.exports = require("2e6b18a737b0cb5f").getBundleURL("10Mjw") + "ride_12.692960b4.mp3" + "?" + Date.now();

},{"2e6b18a737b0cb5f":"lgJ39"}],"aSnqg":[function(require,module,exports) {
module.exports = require("5ce2e14dc5cbf676").getBundleURL("10Mjw") + "kick_1.e7748bcd.mp3" + "?" + Date.now();

},{"5ce2e14dc5cbf676":"lgJ39"}],"9dNBC":[function(require,module,exports) {
module.exports = require("4de6da54c4782311").getBundleURL("10Mjw") + "kick_2.1e2c0f5b.mp3" + "?" + Date.now();

},{"4de6da54c4782311":"lgJ39"}],"joKOC":[function(require,module,exports) {
module.exports = require("d30955cc62c28525").getBundleURL("10Mjw") + "kick_3.f1fbe2cd.mp3" + "?" + Date.now();

},{"d30955cc62c28525":"lgJ39"}],"9zDLp":[function(require,module,exports) {
module.exports = require("3f65c005b3e767ed").getBundleURL("10Mjw") + "kick_4.468e8fb3.mp3" + "?" + Date.now();

},{"3f65c005b3e767ed":"lgJ39"}],"cd4CS":[function(require,module,exports) {
module.exports = require("8552ccc9f0ae50b1").getBundleURL("10Mjw") + "kick_5.c258cbeb.mp3" + "?" + Date.now();

},{"8552ccc9f0ae50b1":"lgJ39"}],"hrwab":[function(require,module,exports) {
module.exports = require("b9e63da9038121ce").getBundleURL("10Mjw") + "kick_6.12942b92.mp3" + "?" + Date.now();

},{"b9e63da9038121ce":"lgJ39"}],"jXvoJ":[function(require,module,exports) {
module.exports = require("97579d5ffd249302").getBundleURL("10Mjw") + "kick_7.1366ee05.mp3" + "?" + Date.now();

},{"97579d5ffd249302":"lgJ39"}],"bdQYI":[function(require,module,exports) {
module.exports = require("ca9c534f9d7598d0").getBundleURL("10Mjw") + "kick_8.0bb1d125.mp3" + "?" + Date.now();

},{"ca9c534f9d7598d0":"lgJ39"}],"ldbhD":[function(require,module,exports) {
module.exports = require("7fe8803b159beb1b").getBundleURL("10Mjw") + "kick_9.a9c4a9f0.mp3" + "?" + Date.now();

},{"7fe8803b159beb1b":"lgJ39"}],"4IdjW":[function(require,module,exports) {
module.exports = require("c6773114d0a885b4").getBundleURL("10Mjw") + "kick_10.6607a761.mp3" + "?" + Date.now();

},{"c6773114d0a885b4":"lgJ39"}],"3LyWC":[function(require,module,exports) {
module.exports = require("4be2a91344db8506").getBundleURL("10Mjw") + "kick_11.a3507be5.mp3" + "?" + Date.now();

},{"4be2a91344db8506":"lgJ39"}],"5HuUJ":[function(require,module,exports) {
module.exports = require("7d88bd38c628246f").getBundleURL("10Mjw") + "kick_12.aa972b5d.mp3" + "?" + Date.now();

},{"7d88bd38c628246f":"lgJ39"}],"cXWA7":[function(require,module,exports) {
module.exports = require("29f27adc38768924").getBundleURL("10Mjw") + "snare_1.27cb0e8f.mp3" + "?" + Date.now();

},{"29f27adc38768924":"lgJ39"}],"3yHuU":[function(require,module,exports) {
module.exports = require("94839b069b2929f9").getBundleURL("10Mjw") + "snare_2.74000c7d.mp3" + "?" + Date.now();

},{"94839b069b2929f9":"lgJ39"}],"aJVBH":[function(require,module,exports) {
module.exports = require("17070419d17e0ff0").getBundleURL("10Mjw") + "snare_3.c7a27325.mp3" + "?" + Date.now();

},{"17070419d17e0ff0":"lgJ39"}],"20u7L":[function(require,module,exports) {
module.exports = require("e23e3a0b430a9da2").getBundleURL("10Mjw") + "snare_4.be48714d.mp3" + "?" + Date.now();

},{"e23e3a0b430a9da2":"lgJ39"}],"lDbuI":[function(require,module,exports) {
module.exports = require("22179a78c76f627e").getBundleURL("10Mjw") + "snare_5.df257ff7.mp3" + "?" + Date.now();

},{"22179a78c76f627e":"lgJ39"}],"ebvbp":[function(require,module,exports) {
module.exports = require("8f5af752b9c99632").getBundleURL("10Mjw") + "snare_6.7de2fc54.mp3" + "?" + Date.now();

},{"8f5af752b9c99632":"lgJ39"}],"brDGD":[function(require,module,exports) {
module.exports = require("4ce8669b159ac402").getBundleURL("10Mjw") + "snare_7.9f1e7cf2.mp3" + "?" + Date.now();

},{"4ce8669b159ac402":"lgJ39"}],"gjgX3":[function(require,module,exports) {
module.exports = require("b9184828b0ca5bbd").getBundleURL("10Mjw") + "snare_8.c7c5e018.mp3" + "?" + Date.now();

},{"b9184828b0ca5bbd":"lgJ39"}],"iRi54":[function(require,module,exports) {
module.exports = require("374d25a76f2170ed").getBundleURL("10Mjw") + "snare_9.1f2d27a3.mp3" + "?" + Date.now();

},{"374d25a76f2170ed":"lgJ39"}],"7Odyl":[function(require,module,exports) {
module.exports = require("b97ccd85513ddf23").getBundleURL("10Mjw") + "snare_10.9804fbf5.mp3" + "?" + Date.now();

},{"b97ccd85513ddf23":"lgJ39"}],"joMN9":[function(require,module,exports) {
module.exports = require("dce53db29d912865").getBundleURL("10Mjw") + "snare_11.9515346f.mp3" + "?" + Date.now();

},{"dce53db29d912865":"lgJ39"}],"7se5F":[function(require,module,exports) {
module.exports = require("7f3dc679075553ed").getBundleURL("10Mjw") + "snare_12.3aac1f52.mp3" + "?" + Date.now();

},{"7f3dc679075553ed":"lgJ39"}],"gjYD9":[function(require,module,exports) {
module.exports = require("d2edc49346163a52").getBundleURL("10Mjw") + "hi-tom_1.64f2c2c3.mp3" + "?" + Date.now();

},{"d2edc49346163a52":"lgJ39"}],"5a41w":[function(require,module,exports) {
module.exports = require("cb59eb1b79ccf938").getBundleURL("10Mjw") + "hi-tom_2.18a79e84.mp3" + "?" + Date.now();

},{"cb59eb1b79ccf938":"lgJ39"}],"1f1Ct":[function(require,module,exports) {
module.exports = require("7b7deb8c86a32f6f").getBundleURL("10Mjw") + "hi-tom_3.7c40bcf4.mp3" + "?" + Date.now();

},{"7b7deb8c86a32f6f":"lgJ39"}],"igD27":[function(require,module,exports) {
module.exports = require("e52920bcbaeabdd6").getBundleURL("10Mjw") + "hi-tom_4.1f40c5b1.mp3" + "?" + Date.now();

},{"e52920bcbaeabdd6":"lgJ39"}],"dYzt8":[function(require,module,exports) {
module.exports = require("3d54524ad70597ff").getBundleURL("10Mjw") + "hi-tom_5.a2f3e8b7.mp3" + "?" + Date.now();

},{"3d54524ad70597ff":"lgJ39"}],"7hNqw":[function(require,module,exports) {
module.exports = require("6fa4668f1e9d620c").getBundleURL("10Mjw") + "hi-tom_6.b01dfd42.mp3" + "?" + Date.now();

},{"6fa4668f1e9d620c":"lgJ39"}],"5oYOd":[function(require,module,exports) {
module.exports = require("5519cc44ba174e46").getBundleURL("10Mjw") + "hi-tom_7.b6c35834.mp3" + "?" + Date.now();

},{"5519cc44ba174e46":"lgJ39"}],"c5PcI":[function(require,module,exports) {
module.exports = require("1c2d58d2887d43e6").getBundleURL("10Mjw") + "hi-tom_8.f6add780.mp3" + "?" + Date.now();

},{"1c2d58d2887d43e6":"lgJ39"}],"fmniD":[function(require,module,exports) {
module.exports = require("1617a927754f14dc").getBundleURL("10Mjw") + "hi-tom_9.1498bd07.mp3" + "?" + Date.now();

},{"1617a927754f14dc":"lgJ39"}],"dq70w":[function(require,module,exports) {
module.exports = require("f82ebe39c6bccc69").getBundleURL("10Mjw") + "hi-tom_10.d771675e.mp3" + "?" + Date.now();

},{"f82ebe39c6bccc69":"lgJ39"}],"3I0gP":[function(require,module,exports) {
module.exports = require("c9f5101b407ffff7").getBundleURL("10Mjw") + "hi-tom_11.78c63a92.mp3" + "?" + Date.now();

},{"c9f5101b407ffff7":"lgJ39"}],"4bJrW":[function(require,module,exports) {
module.exports = require("a2025ca1475f8ab").getBundleURL("10Mjw") + "hi-tom_12.6d2fbc00.mp3" + "?" + Date.now();

},{"a2025ca1475f8ab":"lgJ39"}],"5OoNv":[function(require,module,exports) {
module.exports = require("59c4c2156501163c").getBundleURL("10Mjw") + "mid-tom_1.a4035713.mp3" + "?" + Date.now();

},{"59c4c2156501163c":"lgJ39"}],"1CyRM":[function(require,module,exports) {
module.exports = require("6b129bf205fd9ba2").getBundleURL("10Mjw") + "mid-tom_2.705df588.mp3" + "?" + Date.now();

},{"6b129bf205fd9ba2":"lgJ39"}],"6a5Wx":[function(require,module,exports) {
module.exports = require("3d939fc6af27b747").getBundleURL("10Mjw") + "mid-tom_3.1ac6a834.mp3" + "?" + Date.now();

},{"3d939fc6af27b747":"lgJ39"}],"et6De":[function(require,module,exports) {
module.exports = require("b0a81160fe1f8f5e").getBundleURL("10Mjw") + "mid-tom_4.403250eb.mp3" + "?" + Date.now();

},{"b0a81160fe1f8f5e":"lgJ39"}],"cV7at":[function(require,module,exports) {
module.exports = require("5354651c91b6d08d").getBundleURL("10Mjw") + "mid-tom_5.3e0f8cd6.mp3" + "?" + Date.now();

},{"5354651c91b6d08d":"lgJ39"}],"83iye":[function(require,module,exports) {
module.exports = require("5bcdc6d398615881").getBundleURL("10Mjw") + "mid-tom_6.d2b16e2d.mp3" + "?" + Date.now();

},{"5bcdc6d398615881":"lgJ39"}],"2Ynye":[function(require,module,exports) {
module.exports = require("1410a1ee72b1168f").getBundleURL("10Mjw") + "mid-tom_7.02f50834.mp3" + "?" + Date.now();

},{"1410a1ee72b1168f":"lgJ39"}],"4qLat":[function(require,module,exports) {
module.exports = require("fb1155b671c55bec").getBundleURL("10Mjw") + "mid-tom_8.9b863448.mp3" + "?" + Date.now();

},{"fb1155b671c55bec":"lgJ39"}],"5FNSV":[function(require,module,exports) {
module.exports = require("b3e62163eef25670").getBundleURL("10Mjw") + "mid-tom_9.0c54135f.mp3" + "?" + Date.now();

},{"b3e62163eef25670":"lgJ39"}],"bbU0I":[function(require,module,exports) {
module.exports = require("cc531c7c2625adc0").getBundleURL("10Mjw") + "mid-tom_10.53fb7fcc.mp3" + "?" + Date.now();

},{"cc531c7c2625adc0":"lgJ39"}],"ir7K7":[function(require,module,exports) {
module.exports = require("ede1867e8872138d").getBundleURL("10Mjw") + "mid-tom_11.b7c929e6.mp3" + "?" + Date.now();

},{"ede1867e8872138d":"lgJ39"}],"7gw47":[function(require,module,exports) {
module.exports = require("84135a985e1250dc").getBundleURL("10Mjw") + "mid-tom_12.6e3662c0.mp3" + "?" + Date.now();

},{"84135a985e1250dc":"lgJ39"}],"eE9kv":[function(require,module,exports) {
module.exports = require("c63b4c8a260f03a6").getBundleURL("10Mjw") + "floor-tom_1.27d6cac0.mp3" + "?" + Date.now();

},{"c63b4c8a260f03a6":"lgJ39"}],"bCVxb":[function(require,module,exports) {
module.exports = require("4ba50ce31a136709").getBundleURL("10Mjw") + "floor-tom_2.2b2d111f.mp3" + "?" + Date.now();

},{"4ba50ce31a136709":"lgJ39"}],"fRdRo":[function(require,module,exports) {
module.exports = require("68f162b962fa8f27").getBundleURL("10Mjw") + "floor-tom_3.82c88959.mp3" + "?" + Date.now();

},{"68f162b962fa8f27":"lgJ39"}],"aEWgI":[function(require,module,exports) {
module.exports = require("884bce2f667e38ea").getBundleURL("10Mjw") + "floor-tom_4.c5984df0.mp3" + "?" + Date.now();

},{"884bce2f667e38ea":"lgJ39"}],"9aEbd":[function(require,module,exports) {
module.exports = require("388deb4e59761eb8").getBundleURL("10Mjw") + "floor-tom_5.014b9257.mp3" + "?" + Date.now();

},{"388deb4e59761eb8":"lgJ39"}],"jWWtx":[function(require,module,exports) {
module.exports = require("5e12dc260cfcac19").getBundleURL("10Mjw") + "floor-tom_6.1c268067.mp3" + "?" + Date.now();

},{"5e12dc260cfcac19":"lgJ39"}],"cBTuf":[function(require,module,exports) {
module.exports = require("5c14235255a616fb").getBundleURL("10Mjw") + "floor-tom_7.b6418cea.mp3" + "?" + Date.now();

},{"5c14235255a616fb":"lgJ39"}],"aVgDR":[function(require,module,exports) {
module.exports = require("c67425c19ecb8562").getBundleURL("10Mjw") + "floor-tom_8.30744184.mp3" + "?" + Date.now();

},{"c67425c19ecb8562":"lgJ39"}],"hu5TX":[function(require,module,exports) {
module.exports = require("a01be148f872c7c0").getBundleURL("10Mjw") + "floor-tom_9.96f9552e.mp3" + "?" + Date.now();

},{"a01be148f872c7c0":"lgJ39"}],"cc50O":[function(require,module,exports) {
module.exports = require("6616ec0c7643e3a1").getBundleURL("10Mjw") + "floor-tom_10.d8d949f1.mp3" + "?" + Date.now();

},{"6616ec0c7643e3a1":"lgJ39"}],"g7gYW":[function(require,module,exports) {
module.exports = require("2f7cc7966f27c1eb").getBundleURL("10Mjw") + "floor-tom_11.56e7c6e7.mp3" + "?" + Date.now();

},{"2f7cc7966f27c1eb":"lgJ39"}],"aNetK":[function(require,module,exports) {
module.exports = require("3b8e6618b399c97d").getBundleURL("10Mjw") + "floor-tom_12.3dfc8e03.mp3" + "?" + Date.now();

},{"3b8e6618b399c97d":"lgJ39"}],"hwnEt":[function(require,module,exports) {
// Author: Çağrı Erdem, 2023
// Description: Defining a global state module to fetch MIDI (bytes) 
// data from the server and make it available to all modules of the 2groove web app.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "globalFetch", ()=>globalFetch);
const globalFetch = {
    midiData: null,
    midiReadyForProcessing: false,
    setMidiData (data) {
        console.log("MIDI data received in bytes!", data);
        this.midiData = data;
        this.midiReadyForProcessing = true; // Open the gate
    },
    getMidiData () {
        return this.midiData;
    },
    isMidiReadyForProcessing () {
        return this.midiReadyForProcessing;
    },
    midiProcessed () {
        this.midiReadyForProcessing = false; // Close the gate
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kBoq1":[function(require,module,exports) {
// Author: Çağrı Erdem, 2023
// Description: User interface for 2groove web app.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "toggleMetronome", ()=>toggleMetronome);
parcelHelpers.export(exports, "startMetronome", ()=>startMetronome);
parcelHelpers.export(exports, "setBPM", ()=>setBPM);
parcelHelpers.export(exports, "getCurrentBPM", ()=>getCurrentBPM);
parcelHelpers.export(exports, "isMetronomeRunning", ()=>isMetronomeRunning);
// Export the tapped array for other modules to use
parcelHelpers.export(exports, "getTappedRhythms", ()=>getTappedRhythms);
var _tone = require("tone");
var _globalFetchJs = require("./globalFetch.js");
// Initialize Web Audio API
const audioContext = new AudioContext();
// UI Elements
const tempoSlider = document.getElementById("tempo");
const metronomeVolumeSlider = document.getElementById("metronomeVolume");
const toggleMetronomeCheckbox = document.querySelector('#toggleMetronome input[type="checkbox"]');
const recIndicator = document.getElementById("recIndicator");
const arrayList = document.getElementById("arrayList");
const intervals = []; // for tap tempo
// const startButton = document.getElementById('startButton'); 
// const portInput = document.getElementById('serverPort')
// const httpIp = document.getElementById('httpIpAddress')
// const beatsInput = document.getElementById('beats');
// const quantizeSelect = document.getElementById('quantize');
// Variables
let beatsInput = 8; // 8 beats (2 bars)
let quantizeSelect = 4; // 1/16
let gateKeyActive = false;
let currentArray = [];
let recording = false;
let recordingStartedAt = 0;
let httpIp = [
    `158.39.200.82`,
    `127.0.0.1`
];
let httpPort = [
    `5002`,
    `5003`
];
let isHttpConnected = true; // we keep it true with the new UI
let lastTapTime = 0; // for tap tempo
let tappedRhythms = [];
let metronomeLoop;
let metronomeRunning = true; // The metronome loop and transport is always running
let metronomeSoundOn = false; // The metronome sound is off by default
let tempVal = 0.2;
let threshVal = 0.3;
let currentTick = 1;
let clickTone = 1000;
let samplingStrategy = {
    "strategy": [
        "epsilon",
        "softmax_temp"
    ],
    "tempRange": [
        [
            0.01,
            10.0
        ],
        [
            0.1,
            2.0
        ]
    ],
    "threshRange": [
        [
            0.15,
            0.35
        ],
        [
            0.1,
            0.2
        ]
    ]
};
let samplingStrategyIndex = 0;
//-------------------------------------
// Functions
//-------------------------------------
// startButton.addEventListener('click', function() {
//     initializeApp();
//     startButton.style.display = 'none'; // Hide the button after initialization
// });
async function initializeApp() {
    // Set default BPM or retrieve it from a saved setting or slider
    const defaultBPM = tempoSlider.value;
    // Indicate that the metronome is running
    metronomeRunning = true;
    console.log("App initialized!");
    console.log("Default BPM:", defaultBPM);
    console.log("Temperature value:", tempVal);
    console.log("Hit tolerance:", threshVal);
    console.log("Sampling strategy:", samplingStrategy["strategy"][samplingStrategyIndex]);
}
initializeApp();
//////////////////////
// GLOBAL METRONOME //
//////////////////////
// Play click sound
function playClick(volume, frequency = 1000) {
    const osc = audioContext.createOscillator();
    const gainNode = audioContext.createGain();
    gainNode.gain.value = volume;
    osc.frequency.value = frequency;
    osc.connect(gainNode);
    gainNode.connect(audioContext.destination);
    osc.start();
    osc.stop(audioContext.currentTime + 0.05);
}
async function toggleMetronome() {
    if (audioContext.state === "suspended") await audioContext.resume();
    if (_tone.context.state !== "running") {
        await _tone.start();
        console.log("Tone.js has started");
    }
    metronomeSoundOn = !metronomeSoundOn;
    if (metronomeSoundOn) // start the metronome sound here if it's not already running
    startMetronome(tempoSlider.value); // Assuming you want to use the current value of the tempo slider
}
async function startMetronome(bpm) {
    if (_tone.context.state !== "running") await _tone.start();
    _tone.Transport.bpm.value = bpm; // Set the transport's BPM
    if (!metronomeLoop) {
        metronomeLoop = new _tone.Loop((time)=>{
            // Only play the click if the audibleClick flag is true
            if (metronomeSoundOn) playClick(metronomeVolumeSlider.value, clickTone);
            emitTickEvent(); // Emit a tick event to be used by other modules
        }, "4n"); // "4n" stands for a quarter note
        metronomeLoop.start(0); // Start the loop immediately
    }
    _tone.Transport.start(); // Start the transport
}
// Func to count between 1-4
function count4() {
    console.log(`${currentTick}/4`);
    currentTick = currentTick % 4 + 1;
    if (currentTick == 1) clickTone = 1500;
    else clickTone = 1000;
}
function emitTickEvent() {
    count4();
    // const event = new Event('metronomeTick');
    // window.dispatchEvent(event);
    const event = new CustomEvent("metronomeTick", {
        detail: {
            tick: currentTick
        }
    });
    window.dispatchEvent(event);
}
function setBPM(bpm) {
    _tone.Transport.bpm.value = bpm;
}
function getCurrentBPM() {
    return _tone.Transport.bpm.value;
}
function isMetronomeRunning() {
    return metronomeRunning;
}
function arrayToBinaryString(array) {
    return array.map((value)=>value !== 0 ? "1" : "0").join("");
}
function storeAndDisplayArray(array) {
    const li = document.createElement("li");
    li.textContent = arrayToBinaryString(array);
    // If the list has any items
    if (arrayList.firstChild) // Insert 'li' before the first item, to the top of the list
    arrayList.insertBefore(li, arrayList.firstChild);
    else // If the list is empty, just append the 'li' as usual
    arrayList.appendChild(li);
}
// Variety knob
// TODO: WOrk on it more!
document.getElementById("temp").addEventListener("input", function() {
    const value = this.value;
    tempVal = scaleValue(value, [
        0,
        1
    ], samplingStrategy["tempRange"][samplingStrategyIndex]); //Exponential curve?
    document.getElementById("knob3Value").textContent = value;
    // TODO: Check if it's a good idea to combine the two values. If yes, check better ways of combining.
    console.log("tempVal:", tempVal);
});
// Thresh knob
// TODO: WOrk on it more!
document.getElementById("tolerance").addEventListener("input", function() {
    const value = this.value;
    // tempVal = scaleValue(value, [0, 1], [0.01, 100]);
    threshVal = scaleValue(value, [
        0,
        1
    ], samplingStrategy["threshRange"][samplingStrategyIndex]);
    document.getElementById("knob4Value").textContent = value;
    // TODO: Check if it's a good idea to combine the two values. If yes, check better ways of combining.
    console.log("threshVal:", threshVal);
});
// New Web Worker setup for client-server communication
const ajaxWorker = new Worker(require("4ee0c0dfd0087202"));
// Listen to messages from the worker:
ajaxWorker.addEventListener("message", function(event) {
    const data = event.data;
    console.log("Setting MIDI data, length:", data.length);
    switch(data.type){
        case "arrayProcessed":
            // process the MIDI data as needed
            console.log("MIDI data received in bytes!", data.data);
            (0, _globalFetchJs.globalFetch).setMidiData(data.data);
            resetTappedRhythms();
            break;
        case "error":
            console.error("Error from worker:", data.error);
            break;
    }
});
// Modify `sendArrayToServer` to post data to the worker:
function sendArrayToServer(array) {
    ajaxWorker.postMessage({
        cmd: "sendArray",
        array: array,
        bpm: parseFloat(document.getElementById("tempo").value),
        temperatureValue: tempVal,
        hitTolerance: threshVal,
        isHttpConnected: isHttpConnected,
        httpIp: httpIp[0],
        portInput: httpPort[0],
        samplingStrategy: samplingStrategy["strategy"][samplingStrategyIndex]
    });
}
// TODO: Connect this to `midiBroadcast.js`
// function sendBroadcastParameters(){
//     const loop_amount = parseInt(loopsInput.value);
// }
function resetTappedRhythms() {
    // tappedRhythms = [];
    tappedRhythms.length = 0; // This empties the array without re-declaring it
// ... any other necessary resets or UI updates ...
}
function toggleValues(arr, numIndices1 = 1) {
    // TODO: Implement this function to `change` action
    /**
     * Toggle values in the input array at random indices.
     *
     * Parameters:
     * - arr (array-like): The input array containing only 0s and 1s.
     * - numIndices (int): The number of random indices to toggle (default is 1).
     *
     * Returns:
     * - Edited array with toggled values.
     */ // Check if the input array is valid (contains only 0s and 1s)
    if (!arr.every((val)=>val === 0 || val === 1)) throw new Error("Input array must consist of only 0s and 1s.");
    // Create a copy of the input array to avoid modifying the original
    const editedArr = [
        ...arr
    ];
    // Generate random indices to toggle
    const toggleIndices = [];
    for(let i = 0; i < numIndices1; i++){
        const randomIndex = Math.floor(Math.random() * arr.length);
        toggleIndices.push(randomIndex);
    }
    // Toggle the values at the selected indices
    toggleIndices.forEach((index)=>{
        editedArr[index] = 1 - editedArr[index];
    });
    return editedArr;
}
//-------------------------------------
// Event Listeners
//-------------------------------------
// WITH THE OLD UI:
// Event listeners for the metronome
// toggleMetronomeButton.addEventListener('click', () => {
//     toggleMetronomeButton.classList.toggle('toggled');
//     toggleMetronome();
// });
// WITH THE NEW UI
// TODO: Fix it because it doesn't work properly while generating 
toggleMetronomeCheckbox.addEventListener("change", toggleMetronome);
// Function to turn off the switch
function turnOffSwitch() {
    toggleMetronomeCheckbox.checked = false;
}
// Event listener for the tempo and vol sliders
tempoSlider.addEventListener("input", function() {
    const bpm = this.value;
    document.getElementById("knob1Value").textContent = bpm; // Update the knob value
    if (metronomeRunning) startMetronome(bpm);
});
metronomeVolumeSlider.addEventListener("input", function() {
    const vol = this.value;
    document.getElementById("knob2Value").textContent = vol; // Update the knob value
});
// Record tapped rhythm -- event listener for when the key "A" is pressed to start recording
window.addEventListener("keydown", (e)=>{
    if (e.key === "a" && !recording) {
        e.preventDefault();
        gateKeyActive = true;
        recordingStartedAt = Date.now();
        recIndicator.innerText = "REC ON!";
        recIndicator.classList.add("recording");
        const totalSteps = parseInt(beatsInput) * parseInt(quantizeSelect); //.value methods removed for new UI
        currentArray = new Array(totalSteps).fill(0); // Initialize array with zeros
        recording = true;
    }
    if (e.key === " " && gateKeyActive) {
        //   playClick(tapVolumeSlider.value, 300);
        playClick(metronomeVolumeSlider.value, 300) // If same knob is used for both metronome and tap volume
        ;
        const elapsedMs = Date.now() - recordingStartedAt;
        const bpm = parseInt(tempoSlider.value);
        const quantizeValue = parseInt(quantizeSelect);
        const singleSubdivisionDuration = 60000 / (bpm * quantizeValue);
        const tappedSubdivision = Math.round(elapsedMs / singleSubdivisionDuration);
        if (tappedSubdivision < currentArray.length) currentArray[tappedSubdivision] = 1;
        lastTapTimestamp = Date.now();
    }
    if (e.key === " ") {
        e.preventDefault(); //To prevent the browser from scrolling when the spacebar is pressed
        const light = document.getElementById("tapLight");
        light.classList.remove("light-off");
        light.classList.add("light-on");
    }
    if (e.key.toUpperCase() === "T") {
        const currentTime = new Date().getTime();
        const interval = currentTime - lastTapTime; // in milliseconds
        const tapTempoLight = document.getElementById("tapTempoLight"); // Visual feedback for tap
        tapTempoLight.classList.remove("light-off");
        tapTempoLight.classList.add("light-on");
        // tapTempoLight.style.backgroundColor = 'red';
        playClick(metronomeVolumeSlider.value, 1500);
        setTimeout(()=>{
            // tapLight.style.backgroundColor = '';
            tapTempoLight.classList.remove("light-on");
            tapTempoLight.classList.add("light-off");
        }, 100); // light stays red for 100 milliseconds
        if (lastTapTime !== 0) {
            intervals.push(interval);
            // Consider only the last few taps to get a more accurate/current BPM
            if (intervals.length > 4) intervals.shift();
            const averageInterval = intervals.reduce((acc, val)=>acc + val, 0) / intervals.length;
            const bpm = parseInt(60000 / averageInterval); // 60,000 ms in a minute
            // Update the tempo UI elements
            const tempoElement = document.getElementById("tempo");
            const bpmDisplayElement = document.getElementById("knob1Value");
            const tempoSlider = document.getElementById("tempoSlider");
            if (tempoElement) tempoElement.value = bpm.toFixed(2); // toFixed(2) to limit to 2 decimal points
            if (bpmDisplayElement) bpmDisplayElement.innerText = bpm.toFixed(0);
            if (tempoSlider) tempoSlider.value = bpm.toFixed(0);
        }
        lastTapTime = currentTime;
    }
});
function getTappedRhythms() {
    return currentArray;
}
// evet listener for when key "A" is released
window.addEventListener("keyup", (e)=>{
    if (e.key === "a") {
        gateKeyActive = false;
        recIndicator.innerText = "REC OFF";
        recIndicator.classList.remove("recording");
        storeAndDisplayArray(currentArray); // To display the array
        sendArrayToServer(currentArray); // To send the array via fetch (to server
        // Check if the metronome is currently active/on
        if (metronomeRunning) {
            // Toggle the metronome off
            // toggleMetronome();
            metronomeSoundOn = false;
            toggleMetronomeCheckbox.checked = false; // TODO: fix this!
        }
        recording = false;
    }
    if (e.key === " ") {
        const light = document.getElementById("tapLight");
        light.classList.remove("light-on");
        light.classList.add("light-off");
    }
});
// Incorporate the `change` action
// TODO: Make sure it works properly
document.getElementById("changeButton").addEventListener("click", function() {
    editedArray = toggleValues(currentArray, numIndices = 1);
    sendArrayToServer(editedArray);
});
/// UTILS ///
// Scale a value from one range to another
function scaleValue(value, from, to) {
    let scale = (to[1] - to[0]) / (from[1] - from[0]);
    let capped = Math.min(from[1], Math.max(from[0], value)) - from[0];
    return capped * scale + to[0];
}
function limitDecimalPoints(number, n) {
    // Check if the input is a valid number
    if (typeof number !== "number" || isNaN(number)) throw new Error("Input must be a valid number.");
    // Use toFixed() to limit to n decimal points and convert back to a number
    return parseFloat(number.toFixed(n));
}
resetButton.addEventListener("click", ()=>{
    arrayList.innerHTML = "";
});
const imageA = require("d5245f5563a4ab81");
const imageB = require("c541ff8c9efc2c8b");
document.addEventListener("DOMContentLoaded", function() {
    const modelChangeButton = document.getElementById("modelChangeButton");
    modelChangeButton.addEventListener("click", function() {
        const imgElement = this.querySelector("img");
        if (imgElement.src.includes(imageA)) {
            imgElement.src = imageB;
            samplingStrategyIndex = 1;
            console.log("Sampling changed to (B) Softmax!");
        } else {
            imgElement.src = imageA;
            samplingStrategyIndex = 0;
            console.log("Model changed to (A) Epsilon!");
        }
    });
});
// Open the MIDI I/O popup
function openMidiPopup() {
    window.open(src = "", "popup", "width=450,height=450", sandbox = "allow-popups");
} //./../html/midi-io.html
const midiButton = document.getElementById("midi-btn");
midiButton.addEventListener("click", openMidiPopup);

},{"tone":"2tCfN","./globalFetch.js":"hwnEt","4ee0c0dfd0087202":"5T2Et","d5245f5563a4ab81":"8pYep","c541ff8c9efc2c8b":"4aLCX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5T2Et":[function(require,module,exports) {
let workerURL = require("fa3f1f25b6eb5707");
let bundleURL = require("3fac61c56212a279");
let url = bundleURL.getBundleURL("10Mjw") + "workerAjax.3650bb5b.js" + "?" + Date.now();
module.exports = workerURL(url, bundleURL.getOrigin(url), false);

},{"fa3f1f25b6eb5707":"cn2gM","3fac61c56212a279":"lgJ39"}],"cn2gM":[function(require,module,exports) {
"use strict";
module.exports = function(workerUrl, origin, isESM) {
    if (origin === self.location.origin) // If the worker bundle's url is on the same origin as the document,
    // use the worker bundle's own url.
    return workerUrl;
    else {
        // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.
        var source = isESM ? "import " + JSON.stringify(workerUrl) + ";" : "importScripts(" + JSON.stringify(workerUrl) + ");";
        return URL.createObjectURL(new Blob([
            source
        ], {
            type: "application/javascript"
        }));
    }
};

},{}],"8pYep":[function(require,module,exports) {
module.exports = require("8e1308bed9aa950e").getBundleURL("10Mjw") + "A.cbe0a399.png" + "?" + Date.now();

},{"8e1308bed9aa950e":"lgJ39"}],"4aLCX":[function(require,module,exports) {
module.exports = require("f367eeab639e14b6").getBundleURL("10Mjw") + "B.924196a3.png" + "?" + Date.now();

},{"f367eeab639e14b6":"lgJ39"}],"lFIIu":[function(require,module,exports) {
// Author: Çağrı Erdem, 2023
// Description: MIDI broadcasting script for 2groove web app.
// TODO: Perhaps combine with drumApp.js ???
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getCurrentMidiForVisuals", ()=>getCurrentMidiForVisuals);
var _tone = require("tone");
var _globalFetchJs = require("./globalFetch.js");
const audioContext = new (window.AudioContext || window.webkitAudioContext)();
let midiOutput; // MIDI output device
let startTime = null; // Start time for the MIDI playback
let timeouts = []; // Store timeout IDs for scheduled notes
const midiQueue = [];
let currentMidiForVisuals = null;
let isPlaying = false; // to track the playback status
// let currentTick = 0;  // to track the current tick for the metronome
let processedMidiData; // Global variable to store the processed MIDI data for download
// TODO: play/pause button
// isPaused = false;
// const playPauseButton = document.getElementById('play-pause-btn');
// playPauseButton.addEventListener('click', () => {
//     isPaused = !isPaused;
//     if (isPaused) {
//         // If paused, clear all timeouts (stop all scheduled notes)
//         // timeouts.forEach(timeout => clearTimeout(timeout));
//     } else {
//         // When resumed, restart the MIDI playback from where we paused
//         // loadMidiData(currentMidiForVisuals);
//     }
// });
// TODO: Set up the main clock
// Set up an event listener for the tick event
window.addEventListener("metronomeTick", handleMidiForTick);
function handleMidiForTick(event) {
// currentTick++;
// console.log(`\rClick ${(currentTick%4)+1}/4`);
}
// const tickToMidiEventsMap = {};
// function handleMidiForTick(event) {
//     if (event && event.detail && typeof event.detail.tick !== 'undefined') {
//         const currentTick = event.detail.tick;
//         if (tickToMidiEventsMap[currentTick]) {
//             tickToMidiEventsMap[currentTick].forEach((note) => {
//                 scheduleNote(note, Tone.Time(Tone.Transport.position).toMilliseconds());
//             });
//         }
//     } else {
//         console.warn('Received an unexpected event structure:', event);
//     }
//     currentTick++;
//     console.log(`\rClick ${(currentTick%4)+1}/4`);
// }
// Convert ticks to time in seconds
function ticksToTime(ticks, ticksPerBeat, bpm) {
    const secondsPerTick = 60 / (bpm * ticksPerBeat);
    return ticks * secondsPerTick;
}
// Check for new MIDI data and enqueue it
function checkAndEnqueueMidi() {
    if ((0, _globalFetchJs.globalFetch).isMidiReadyForProcessing()) {
        const midi = (0, _globalFetchJs.globalFetch).getMidiData().buffer; // convert to ArrayBuffer when fetching JSON
        midiQueue.push(midi);
        (0, _globalFetchJs.globalFetch).midiProcessed();
        // If nothing is currently playing, start the next MIDI
        if (!isPlaying) playNextMidi();
    }
}
// Play next MIDI in the queue and set it for visualization
function playNextMidi() {
    // Only start playing the next MIDI if the current one has finished
    if (!isPlaying && midiQueue.length > 0) {
        currentMidiForVisuals = midiQueue.shift();
        _tone.Transport.start("@1m"); // Ensure playback starts at the beginning of a measure //TODO: Check if this is necessary or useful
        loadMidiData(currentMidiForVisuals);
    }
}
function getCurrentMidiForVisuals() {
    return currentMidiForVisuals;
}
// Initialize the audio context
function startAudioContext() {
    if (audioContext.state === "suspended") audioContext.resume();
}
// Scale a value from one range to another
function scaleValue(value, from, to) {
    let scale = (to[1] - to[0]) / (from[1] - from[0]);
    let capped = Math.min(from[1], Math.max(from[0], value)) - from[0];
    return capped * scale + to[0];
}
// MIDI initialization
navigator.requestMIDIAccess().then(onMIDISuccess, onMIDIFailure);
function onMIDISuccess(midiAccess) {
    const outputs = Array.from(midiAccess.outputs.values());
    if (outputs.length === 0) {
        console.warn("No MIDI outputs found");
        return;
    }
    populateMidiOutputs(outputs);
}
function onMIDIFailure() {
    console.error("Could not access your MIDI devices.");
}
function populateMidiOutputs(outputs) {
    const select = document.getElementById("midiOutputs");
    outputs.forEach((output, index)=>{
        const option = document.createElement("option");
        option.value = index;
        option.text = output.name;
        select.appendChild(option);
    });
    select.addEventListener("change", (event)=>{
        midiOutput = outputs[event.target.value];
    });
    midiOutput = outputs[0]; // Default to the first output
}
// TODO: check if this working properly
// function populateMidiOutputs(outputs) {
//     const select = document.getElementById('midiOutputs');
//     if (!select) return;  // Exit if the element doesn't exist
//     outputs.forEach((output, index) => {
//         const option = document.createElement('option');
//         option.value = index;
//         option.text = output.name;
//         select.appendChild(option);
//     });
//     select.addEventListener('change', (event) => {
//         midiOutput = outputs[event.target.value];
//     });
//     midiOutput = outputs[0]; // Default to the first output
// }
/////////////////////////////////////////
/// TESTS FOR METRO-LOCKED SCHEDULING ///
/////////////////////////////////////////
// function scheduleNote(note, timeMs) {
//     const vel = scaleValue(note.velocity, [0, 1], [0, 127]);
//     const delay = timeMs - Tone.Time(Tone.Transport.position).toMilliseconds();
//     const timeoutId = setTimeout(() => {
//         midiOutput.send([0x90, note.midi, vel]);
//     }, delay);
//     timeouts.push(timeoutId);
// }
// async function loadMidiData(midiData) {
//     isPlaying = true;  // Set the flag indicating that a MIDI is currently playing
//     resetPlayback(); // Reset playback when a new file is chosen
//     const midi = new Midi(midiData); // Convert the raw data into a Midi object
//     console.log("Parsed MIDI:", midi);
//     const track = midi.tracks[0];
//     Tone.Transport.start(); // Start the transport
//     if (!midiOutput) {
//         console.warn("MIDI output not available");
//         return;
//     }
//     const tempo = (midi.header.tempos && midi.header.tempos[0]) ? midi.header.tempos[0].bpm : 120; // Fallback to a default tempo if not defined ???
//     const ticksPerBeat = midi.header.ppq;
//     const msPerTick = (60 * 1000 / tempo) / ticksPerBeat;
//     track.notes.forEach((note) => {
//         if (!tickToMidiEventsMap[note.ticks]) {
//             tickToMidiEventsMap[note.ticks] = [];
//         }
//         tickToMidiEventsMap[note.ticks].push(note);
//     });
//     const totalTimeMs = track.durationTicks * msPerTick;
//     console.log(`Total time: ${totalTimeMs} ms`);
//     console.log(`Total transport time: ${track.durationTicks * msPerTick / 1000} s`);
//     setTimeout(() => {
//         loopPlayback();
//     }, totalTimeMs);
// }
/////////////////////////
// Working stuff below //
/////////////////////////
// Reset playback
function resetPlayback() {
    timeouts.forEach(clearTimeout); // Clear all scheduled notes
    timeouts = [];
    currentNoteIndex = 0;
    startTime = audioContext.currentTime;
    currentTick = 0; // Reset to the first tick
}
// // Schedule a note to be played
// // without Transport
function scheduleNote(note, timeMs, index) {
    const vel = scaleValue(note.velocity, [
        0,
        1
    ], [
        0,
        127
    ]);
    const scheduledTime = startTime + timeMs / 1000;
    const timeoutId = setTimeout(()=>{
        midiOutput.send([
            0x90,
            note.midi,
            vel
        ]);
        // console.log(`Note Number: ${note.midi}, Velocity: ${vel}, Scheduled Time: ${scheduledTime}`);
        currentNoteIndex = index + 1;
    // console.log(`${currentNoteIndex}: ${note.midi}, ${vel}`);
    }, (scheduledTime - audioContext.currentTime) * 1000);
    timeouts.push(timeoutId);
}
// //Main function that is responsible of retrieving the MIDI bytes, converting them into a MIDI object, parsing it, and scheduling the notes
// //without Transport
async function loadMidiData(midiData) {
    isPlaying = true; // Set the flag indicating that a MIDI is currently playing
    resetPlayback(); // Reset playback when a new file is chosen
    try {
        const midi = new (0, _tone.Midi)(midiData); // Convert the raw data into a Midi object
        processedMidiData = midiData; // Store the processed data in the global variable
        // Adjust negative delta values
        midi.tracks.forEach((track)=>{
            let accumulatedDelta = 0;
            track.notes.forEach((note)=>{
                if (note.ticks < 0) {
                    accumulatedDelta += note.ticks; // Accumulate the negative delta
                    note.ticks = 0; // Reset the current note's ticks to 0
                } else if (accumulatedDelta < 0) {
                    const adjustment = Math.min(note.ticks, -accumulatedDelta); // Calculate the possible adjustment
                    note.ticks -= adjustment; // Deduct the adjustment from the current note's ticks
                    accumulatedDelta += adjustment; // Adjust the accumulated delta
                }
            });
        });
        console.log("Parsed MIDI:", midi);
        const track = midi.tracks[0];
        _tone.Transport.start(); // Start the transport
        if (!midiOutput) {
            console.warn("MIDI output not available");
            return;
        }
        const tempo = midi.header.tempos && midi.header.tempos[0] ? midi.header.tempos[0].bpm : 120; // Fallback to a default tempo if not defined ???
        const ticksPerBeat = midi.header.ppq;
        const msPerTick = 60000 / tempo / ticksPerBeat;
        track.notes.forEach((note, index)=>{
            const timeMs = note.ticks * msPerTick;
            const timeInTicks = note.ticks; // TODO: for transport
            scheduleNote(note, timeMs, index);
        });
        const totalTimeMs = track.durationTicks * msPerTick;
        const totalTransportTime = track.durationTicks * msPerTick / 1000;
        console.log(`Total time: ${totalTimeMs} ms`);
        console.log(`Total transport time: ${track.durationTicks * msPerTick / 1000} s`);
        setTimeout(()=>{
            loopPlayback();
        }, totalTimeMs);
    } catch (error) {
        console.error("Error processing MIDI data:", error.message);
    }
}
// async function loadMidiData(midiData) {
//     isPlaying = true;  // Set the flag indicating that a MIDI is currently playing
//     resetPlayback(); // Reset playback when a new file is chosen
//     const midi = new Midi(midiData); // Convert the raw data into a Midi object
//     console.log("Parsed MIDI:", midi);
//     const track = midi.tracks[0];
//     Tone.Transport.start(); // Start the transport
//     if (!midiOutput) {
//         console.warn("MIDI output not available");
//         return;
//     }
//     const tempo = (midi.header.tempos && midi.header.tempos[0]) ? midi.header.tempos[0].bpm : 120; // Fallback to a default tempo if not defined ???
//     const ticksPerBeat = midi.header.ppq;
//     const msPerTick = (60 * 1000 / tempo) / ticksPerBeat;
//     track.notes.forEach((note, index) => {
//         const timeMs = note.ticks * msPerTick;
//         const timeInTicks = note.ticks; // TODO: for transport
//         scheduleNote(note, timeMs, index);
//     });
//     const totalTimeMs = track.durationTicks * msPerTick;
//     console.log(`Total time: ${totalTimeMs} ms`);
//     console.log(`Total transport time: ${track.durationTicks * msPerTick / 1000} s`);
//     setTimeout(() => {
//         loopPlayback();
//     }, totalTimeMs);
// }
// Loop the MIDI playback
function loopPlayback() {
    // Tone.Transport.stop();
    isPlaying = false; // Reset the flag once the playback finishes
    // Check if there's another MIDI in the queue and play it
    if (midiQueue.length > 0) playNextMidi();
    else // If there's no new MIDI in the queue, replay the current one
    loadMidiData(currentMidiForVisuals);
}
// Initialize the audio context on page load
startAudioContext();
// polling mechanism to regularly check globalFetch for new MIDI data:
setInterval(()=>{
    checkAndEnqueueMidi();
    playNextMidi();
}, 500);
// Check every 500 milliseconds. Adjust this value as necessary
//  document.getElementById('play-pause-btn').addEventListener('click', function() {
//     /// play pause button
//     console.log("Play/pause button clicked but not working yet :))");
// });
// Download the processed MIDI data
function downloadMidi() {
    if (!processedMidiData) {
        console.error("No MIDI data available for download.");
        return;
    }
    const midiBlob = new Blob([
        processedMidiData
    ], {
        type: "audio/midi"
    });
    const url = URL.createObjectURL(midiBlob);
    const downloadLink = document.createElement("a");
    downloadLink.href = url;
    downloadLink.download = "2groove_gen.mid";
    document.body.appendChild(downloadLink);
    downloadLink.click();
    document.body.removeChild(downloadLink);
    URL.revokeObjectURL(url);
}
const downloadButton = document.getElementById("download-btn");
downloadButton.addEventListener("click", downloadMidi); ////////////////////////////
 ////////////////////////////
 ////////////////////////////
 // // w Transport
 // function scheduleNote(note, ticks, ticksPerBeat, bpm) {
 //     const vel = scaleValue(note.velocity, [0, 1], [0, 127]);
 //     const timeInSeconds = ticksToTime(ticks, ticksPerBeat, bpm);
 //     Tone.Transport.schedule(time => {
 //         midiOutput.send([0x90, note.midi, vel]);
 //         console.log(`Note Number: ${note.midi}, Velocity: ${vel}, Scheduled Time: ${time}`);
 //     }, timeInSeconds);
 // }
 // function scheduleNoteWithTone(note, timeInTicks, index, msPerTick) {
 //     const timeInSeconds = timeInTicks * msPerTick / 1000;
 //     const vel = scaleValue(note.velocity, [0, 1], [0, 127]);
 //     Tone.Transport.schedule(time => {
 //         midiOutput.send([0x90, note.midi, vel]);
 //         console.log(`Note Number: ${note.midi}, Velocity: ${vel}`);
 //     }, `+${timeInSeconds}`);
 // }
 // // w Transport
 // async function loadMidiData(midiData) {
 //     isPlaying = true;
 //     const midi = new Midi(midiData);
 //     const track = midi.tracks[0];
 //     if (!midiOutput) {
 //         console.warn("MIDI output not available");
 //         return;
 //     }
 //     const tempo = (midi.header.tempos && midi.header.tempos[0]) ? midi.header.tempos[0].bpm : 120;
 //     const ticksPerBeat = midi.header.ppq;
 //     const msPerTick = (60 * 1000 / tempo) / ticksPerBeat;
 //     // Reset any previous schedules on Tone.Transport
 //     Tone.Transport.cancel();
 //     track.notes.forEach((note, index) => {
 //         const timeInTicks = note.ticks;
 //         scheduleNoteWithTone(note, timeInTicks, index, msPerTick);
 //     });
 //     // Since you want it to loop indefinitely, let's schedule the re-loading of the MIDI data 
 //     // at the end of its duration.
 //     const totalTimeInTicks = track.durationTicks;
 //     Tone.Transport.scheduleOnce(() => {
 //         loopPlayback();
 //     }, `+${totalTimeInTicks * msPerTick / 1000}`);
 // }

},{"tone":"2tCfN","./globalFetch.js":"hwnEt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6uEKS":[function(require,module,exports) {
// Author: Çağrı Erdem, 2023
// Description: Interactive "piano roll" visualization for 2groove web app.
// import { Midi } from '@tonejs/midi';
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _p5 = require("p5");
var _p5Default = parcelHelpers.interopDefault(_p5);
var _tone = require("tone");
var _interfaceJs = require("./interface.js");
var _midiBroadcastJs = require("./midiBroadcast.js"); // import from broadcasting script instead of globalFetch.js
// Wrap entire sketch inside a function and use p5 instance mode to adapt it for module-based bundling 
// (functions become methods of the instance)
const sketch = (s)=>{
    // MIDI Handling
    s.loadMidiFile = function(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader(); // Removed s. prefix
            reader.onload = function(e) {
                const arrayBuffer = e.target.result;
                s.parseMidi(arrayBuffer); // Removed s. prefix from arrayBuffer
            };
            reader.readAsArrayBuffer(file);
        }
    };
    // MIDI parse function without quantization
    s.parseMidi = function(arrayBuffer, verbose = false) {
        // Preliminary check for unexpected data format
        if (typeof arrayBuffer === "string" && arrayBuffer.startsWith("<!do")) {
            console.error("Received unexpected HTML data instead of MIDI");
            return; // exit function early
        }
        try {
            const midi = new (0, _tone.Midi)(arrayBuffer); // Assuming that `new Midi` can handle the raw arrayBuffer
            // Adjust negative delta values
            midi.tracks.forEach((track)=>{
                let accumulatedDelta = 0;
                track.notes.forEach((note)=>{
                    if (note.ticks < 0) {
                        accumulatedDelta += note.ticks; // Accumulate the negative delta
                        note.ticks = 0; // Reset the current note's ticks to 0
                    } else if (accumulatedDelta < 0) {
                        const adjustment = Math.min(note.ticks, -accumulatedDelta); // Calculate the possible adjustment
                        note.ticks -= adjustment; // Deduct the adjustment from the current note's ticks
                        accumulatedDelta += adjustment; // Adjust the accumulated delta
                    }
                });
            });
            s.noteSequences = midi.tracks.map((track)=>{
                if (verbose) track.notes.forEach((note)=>{
                    console.log(note);
                });
                return {
                    notes: track.notes.map((note)=>{
                        return {
                            pitch: note.midi,
                            startTime: note.time,
                            endTime: note.time + note.duration,
                            velocity: note.velocity // Include velocity in the note object
                        };
                    })
                };
            });
        } catch (error) {
            console.error("Error processing MIDI data in pRoll.js:", error.message);
        }
    };
    // s.parseMidi = function(arrayBuffer, verbose = false) { 
    //     const midi = new Midi(arrayBuffer);  // Removed s. prefix
    //     s.noteSequences = midi.tracks.map(track => {
    //         return { notes: track.notes.map(note => {
    //             if (verbose){
    //                 track.notes.forEach(note => {
    //                     console.log(note);
    //                 })}; 
    //             return {
    //                 pitch: note.midi,
    //                 startTime: note.time,
    //                 endTime: note.time + note.duration,
    //                 velocity: note.velocity // Include velocity in the note object
    //             };
    //         })};
    //     });
    // }
    // Constants and global variables
    s.NUM_STEPS = 32; // Number of quantized steps; this must be equal to the length of the array
    s.SUBDIVISIONS = 4; // quarter note = 1, eighth note = 2, etc.
    s.NUM_NOTES = 20; // total number of notes of the piano roll
    s.LOWEST_MIDI_NOTE = 34; // -1 worked better on the canvas
    s.noteSequences;
    s.resizingWidth = false;
    s.resizingHeight = false;
    s.WIDTH = 550;
    s.HEIGHT = 250;
    s.EDGE_THRESHOLD = 10; // Distance from edge to enable resizing
    s.offset_x = 1.3; // offset for the vertical lines and/or notes (if necessary)
    s.offset_y = 1.5;
    s.drumMappings = {
        35: "acoustic bass drum",
        36: "kick",
        37: "side-stick",
        38: "snare",
        39: "clap",
        40: "electric snare",
        41: "floor-tom",
        42: "closed-hihat",
        43: "high-tom",
        44: "pedal-hihat",
        45: "low-tom",
        46: "open-hihat",
        47: "mid-tom",
        48: "hi-tom",
        49: "crash",
        50: "high-tom",
        51: "ride",
        52: "chinese cymbal"
    };
    // Functions
    s.setup = function() {
        s.createCanvas(s.WIDTH, s.HEIGHT).parent("pianoRollContainer");
    // pRollCanvas.parent('pianoRollContainer'); // attach to the specific div
    // file input //no file input with the new UI
    // const midiInput = document.getElementById('fileInput'); // Get the input element by its ID
    // midiInput.addEventListener('change', s.loadMidiFile); // Add an event listener for when a user selects a file
    // // fetch button
    // let fetchButton = s.createButton('Fetch MIDI Data');
    // fetchButton.mousePressed(s.triggerMidiFetch); 
    };
    s.draw = function() {
        s.background("#fae"); // Set the background color of the entire canvas
        s.tappedRhythm = (0, _interfaceJs.getTappedRhythms)(); // Get the tapped rhythms from the interface module
        // Fetch MIDI data from the server
        const midi = (0, _midiBroadcastJs.getCurrentMidiForVisuals)();
        if (midi) s.parseMidi(midi);
        var x = 0 + s.offset_x;
        var y = 0 + s.offset_y;
        // var y = s.HEIGHT - s.WIDTH;
        s.drawTappedRhythm(s.tappedRhythm, x, y, s.WIDTH, s.WIDTH);
        if (s.noteSequences) s.drawNotes(s.noteSequences[0].notes, x, y, s.WIDTH, s.WIDTH);
        s.fill(255, 64);
        // Draw vertical lines for subdivisions
        s.stroke("white"); // Set line color to black
        const lineInterval = s.WIDTH / (s.NUM_STEPS / 4 * s.SUBDIVISIONS);
        for(let i = 0; i < s.WIDTH; i += lineInterval)s.line(i + s.offset_x, 0, i + s.offset_x, s.HEIGHT);
        // Draw vertical lines for beats
        s.stroke("rgba(0,255,0,0.25)");
        s.strokeWeight(1.2);
        const beatInterval = s.WIDTH / (s.NUM_STEPS / 4);
        for(let i = 0; i < s.WIDTH; i += beatInterval)s.line(i + s.offset_x, 0, i + s.offset_x, s.HEIGHT);
        // Draw vertical lines for bars
        s.stroke("rgb(0,255,0)");
        s.strokeWeight(0.8);
        const barInterval = s.WIDTH / (s.NUM_STEPS / 16);
        for(let i = 0; i < s.WIDTH; i += barInterval)s.line(i + s.offset_x, 0, i + s.offset_x, s.HEIGHT);
        s.showPopup(); // Show popup when mouse is near the edge of the note cell-sections
    };
    // Draw function for quantized tapped rhythm 
    s.drawTappedRhythm = function(tappedRhythm, x, y, width, height) {
        const totalDuration = tappedRhythm.length;
        s.push();
        s.translate(x, y);
        var cellWidth = width / totalDuration;
        var cellHeight = height / s.NUM_NOTES; // Assuming each tap corresponds to a note
        tappedRhythm.forEach(function(tap, index) {
            if (tap === 1) {
                var noteColor = s.color(219, 247, 19, 120); // Less opaque
                s.fill(noteColor);
                s.rect(cellWidth * index, 0, cellWidth, cellHeight);
            }
        });
        s.pop();
    };
    // Draw function without quantization
    s.drawNotes = function(notes, x, y, width, height) {
        const totalDuration = s.noteSequences.reduce((max, seq)=>{
            const endTimes = seq.notes.map((note)=>note.endTime);
            return Math.max(max, ...endTimes);
        }, 0);
        s.push();
        s.translate(x, y);
        var cellWidth = s.WIDTH / totalDuration; // Update cellWidth based on the new width
        var cellHeight = s.HEIGHT / s.NUM_NOTES; // Update cellHeight based on the new height
        notes.forEach(function(note) {
            var emptyNoteSpacer = 10;
            var noteColor = s.color(255, 0, 191, note.velocity * 255);
            s.stroke("black"); // strokes for the notes
            s.strokeWeight(0.6);
            s.fill(noteColor);
            s.rect(emptyNoteSpacer + cellWidth * note.startTime, s.HEIGHT - cellHeight * (note.pitch - s.LOWEST_MIDI_NOTE), cellWidth * (note.endTime - note.startTime) - emptyNoteSpacer, cellHeight);
        });
        s.pop();
    };
    // For example:
    s.mousePressed = function() {
        // Check if mouse is near the right edge of the canvas
        if (s.abs(s.mouseX - s.WIDTH) < s.EDGE_THRESHOLD) s.resizingWidth = true;
        // Check if mouse is near the bottom edge of the canvas
        if (s.abs(s.mouseY - s.HEIGHT) < s.EDGE_THRESHOLD) s.resizingHeight = true;
    };
    s.mouseDragged = function() {
        // If resizing width, update WIDTH based on mouseX
        if (s.resizingWidth) s.WIDTH = s.mouseX;
        // If resizing height, update HEIGHT based on mouseY
        if (s.resizingHeight) s.HEIGHT = s.mouseY;
        // Apply the new width and height to the canvas
        s.resizeCanvas(s.WIDTH, s.HEIGHT);
    };
    s.mouseReleased = function() {
        // Reset resizing flags
        s.resizingWidth = false;
        s.resizingHeight = false;
    };
    s.showPopup = function() {
        if (s.mouseX > s.offset_x && s.mouseX < s.WIDTH + s.offset_x && s.mouseY > 0 && s.mouseY < s.HEIGHT) {
            const cellHeight = s.HEIGHT / s.NUM_NOTES;
            const section = Math.floor((s.HEIGHT - s.mouseY) / cellHeight);
            const midiNote = parseInt(Object.keys(s.drumMappings)[section]);
            if (midiNote >= s.LOWEST_MIDI_NOTE && midiNote != 35) {
                const drumPart = s.drumMappings[midiNote];
                const popupWidth = s.textWidth(drumPart) + 10;
                // Decide the x position of the popup based on mouseX
                let popupX = s.mouseX + 5;
                if (s.mouseX > (s.WIDTH + s.offset_x) / 2) popupX = s.mouseX - popupWidth - 5;
                s.fill(255);
                s.rect(popupX, s.mouseY, popupWidth, 20);
                s.fill(0);
                s.text(drumPart, popupX + 5, s.mouseY + 15);
            }
        }
    };
};
// Run the sketch:
new (0, _p5Default.default)(sketch);

},{"p5":"7Uk5U","tone":"2tCfN","./interface.js":"kBoq1","./midiBroadcast.js":"lFIIu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7Uk5U":[function(require,module,exports) {
/*! p5.js v1.7.0 July 10, 2023 */ var global = arguments[3];
!function(e1) {
    module.exports = e1();
}(function() {
    var s, t, r;
    return (function o(n, s, i) {
        function a(t, e1) {
            if (!s[t]) {
                if (!n[t]) {
                    var r = undefined;
                    if (!e1 && r) return r(t, !0);
                    if (l) return l(t, !0);
                    throw (e1 = new Error("Cannot find module '" + t + "'")).code = "MODULE_NOT_FOUND", e1;
                }
                r = s[t] = {
                    exports: {}
                }, n[t][0].call(r.exports, function(e1) {
                    return a(n[t][1][e1] || e1);
                }, r, r.exports, o, n, s, i);
            }
            return s[t].exports;
        }
        for(var l = undefined, e1 = 0; e1 < i.length; e1++)a(i[e1]);
        return a;
    })({
        1: [
            function(e1, t, r) {
                "use strict";
                r.byteLength = function(e1) {
                    var e1 = c(e1), t = e1[0], e1 = e1[1];
                    return 3 * (t + e1) / 4 - e1;
                }, r.toByteArray = function(e1) {
                    var t, r, o = c(e1), n = o[0], o = o[1], s = new u(function(e1, t) {
                        return 3 * (e1 + t) / 4 - t;
                    }(n, o)), i = 0, a = 0 < o ? n - 4 : n;
                    for(r = 0; r < a; r += 4)t = l[e1.charCodeAt(r)] << 18 | l[e1.charCodeAt(r + 1)] << 12 | l[e1.charCodeAt(r + 2)] << 6 | l[e1.charCodeAt(r + 3)], s[i++] = t >> 16 & 255, s[i++] = t >> 8 & 255, s[i++] = 255 & t;
                    2 === o && (t = l[e1.charCodeAt(r)] << 2 | l[e1.charCodeAt(r + 1)] >> 4, s[i++] = 255 & t);
                    1 === o && (t = l[e1.charCodeAt(r)] << 10 | l[e1.charCodeAt(r + 1)] << 4 | l[e1.charCodeAt(r + 2)] >> 2, s[i++] = t >> 8 & 255, s[i++] = 255 & t);
                    return s;
                }, r.fromByteArray = function(e1) {
                    for(var t, r = e1.length, o = r % 3, n = [], s = 0, i = r - o; s < i; s += 16383)n.push(function(e1, t, r) {
                        for(var o, n = [], s = t; s < r; s += 3)o = (e1[s] << 16 & 16711680) + (e1[s + 1] << 8 & 65280) + (255 & e1[s + 2]), n.push(function(e1) {
                            return a[e1 >> 18 & 63] + a[e1 >> 12 & 63] + a[e1 >> 6 & 63] + a[63 & e1];
                        }(o));
                        return n.join("");
                    }(e1, s, i < s + 16383 ? i : s + 16383));
                    1 == o ? (t = e1[r - 1], n.push(a[t >> 2] + a[t << 4 & 63] + "==")) : 2 == o && (t = (e1[r - 2] << 8) + e1[r - 1], n.push(a[t >> 10] + a[t >> 4 & 63] + a[t << 2 & 63] + "="));
                    return n.join("");
                };
                for(var a = [], l = [], u = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = 0, s = o.length; n < s; ++n)a[n] = o[n], l[o.charCodeAt(n)] = n;
                function c(e1) {
                    var t = e1.length;
                    if (0 < t % 4) throw new Error("Invalid string. Length must be a multiple of 4");
                    e1 = e1.indexOf("="), t = (e1 = -1 === e1 ? t : e1) === t ? 0 : 4 - e1 % 4;
                    return [
                        e1,
                        t
                    ];
                }
                l["-".charCodeAt(0)] = 62, l["_".charCodeAt(0)] = 63;
            },
            {}
        ],
        2: [
            function(e1, t, r) {},
            {}
        ],
        3: [
            function(e1, t, r) {
                arguments[4][2][0].apply(r, arguments);
            },
            {
                dup: 2
            }
        ],
        4: [
            function(P, e1, L) {
                (function(d) {
                    "use strict";
                    var S = P("base64-js"), s = P("ieee754"), e1 = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null, t = (L.Buffer = d, L.SlowBuffer = function(e1) {
                        +e1 != e1 && (e1 = 0);
                        return d.alloc(+e1);
                    }, L.INSPECT_MAX_BYTES = 50, 2147483647);
                    function l(e1) {
                        if (t < e1) throw new RangeError('The value "' + e1 + '" is invalid for option "size"');
                        e1 = new Uint8Array(e1);
                        return Object.setPrototypeOf(e1, d.prototype), e1;
                    }
                    function d(e1, t, r) {
                        if ("number" != typeof e1) return o(e1, t, r);
                        if ("string" == typeof t) throw new TypeError('The "string" argument must be of type string. Received type number');
                        return i(e1);
                    }
                    function o(e1, t, r) {
                        if ("string" == typeof e1) {
                            var o = e1, n = t;
                            if (d.isEncoding(n = "string" == typeof n && "" !== n ? n : "utf8")) return s = 0 | f(o, n), i = l(s), i = (o = i.write(o, n)) !== s ? i.slice(0, o) : i;
                            throw new TypeError("Unknown encoding: " + n);
                        }
                        if (ArrayBuffer.isView(e1)) return u(e1);
                        if (null != e1) {
                            if (O(e1, ArrayBuffer) || e1 && O(e1.buffer, ArrayBuffer)) {
                                var s = e1, o = t, i = r;
                                if (o < 0 || s.byteLength < o) throw new RangeError('"offset" is outside of buffer bounds');
                                if (s.byteLength < o + (i || 0)) throw new RangeError('"length" is outside of buffer bounds');
                                return s = void 0 === o && void 0 === i ? new Uint8Array(s) : void 0 === i ? new Uint8Array(s, o) : new Uint8Array(s, o, i), Object.setPrototypeOf(s, d.prototype), s;
                            }
                            if ("number" == typeof e1) throw new TypeError('The "value" argument must not be of type number. Received type number');
                            n = e1.valueOf && e1.valueOf();
                            if (null != n && n !== e1) return d.from(n, t, r);
                            var a = function(e1) {
                                var t, r;
                                if (d.isBuffer(e1)) return t = 0 | c(e1.length), 0 !== (r = l(t)).length && e1.copy(r, 0, 0, t), r;
                                if (void 0 !== e1.length) return "number" != typeof e1.length || C(e1.length) ? l(0) : u(e1);
                                if ("Buffer" === e1.type && Array.isArray(e1.data)) return u(e1.data);
                            }(e1);
                            if (a) return a;
                            if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e1[Symbol.toPrimitive]) return d.from(e1[Symbol.toPrimitive]("string"), t, r);
                        }
                        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e1);
                    }
                    function n(e1) {
                        if ("number" != typeof e1) throw new TypeError('"size" argument must be of type number');
                        if (e1 < 0) throw new RangeError('The value "' + e1 + '" is invalid for option "size"');
                    }
                    function i(e1) {
                        return n(e1), l(e1 < 0 ? 0 : 0 | c(e1));
                    }
                    function u(e1) {
                        for(var t = e1.length < 0 ? 0 : 0 | c(e1.length), r = l(t), o = 0; o < t; o += 1)r[o] = 255 & e1[o];
                        return r;
                    }
                    function c(e1) {
                        if (t <= e1) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + t.toString(16) + " bytes");
                        return 0 | e1;
                    }
                    function f(e1, t) {
                        if (d.isBuffer(e1)) return e1.length;
                        if (ArrayBuffer.isView(e1) || O(e1, ArrayBuffer)) return e1.byteLength;
                        if ("string" != typeof e1) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e1);
                        var r = e1.length, o = 2 < arguments.length && !0 === arguments[2];
                        if (!o && 0 === r) return 0;
                        for(var n = !1;;)switch(t){
                            case "ascii":
                            case "latin1":
                            case "binary":
                                return r;
                            case "utf8":
                            case "utf-8":
                                return M(e1).length;
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return 2 * r;
                            case "hex":
                                return r >>> 1;
                            case "base64":
                                return T(e1).length;
                            default:
                                if (n) return o ? -1 : M(e1).length;
                                t = ("" + t).toLowerCase(), n = !0;
                        }
                    }
                    function r(e1, t, r) {
                        var o, n = !1;
                        if ((t = void 0 === t || t < 0 ? 0 : t) > this.length) return "";
                        if ((r = void 0 === r || r > this.length ? this.length : r) <= 0) return "";
                        if ((r >>>= 0) <= (t >>>= 0)) return "";
                        for(e1 = e1 || "utf8";;)switch(e1){
                            case "hex":
                                var s = this, i = t, a = r, l = s.length;
                                (!a || a < 0 || l < a) && (a = l);
                                for(var u = "", c = i = !i || i < 0 ? 0 : i; c < a; ++c)u += A[s[c]];
                                return u;
                            case "utf8":
                            case "utf-8":
                                return E(this, t, r);
                            case "ascii":
                                var d = this, l = t, f = r, h = "";
                                f = Math.min(d.length, f);
                                for(var p = l; p < f; ++p)h += String.fromCharCode(127 & d[p]);
                                return h;
                            case "latin1":
                            case "binary":
                                var m = this, i = t, y = r, g = "";
                                y = Math.min(m.length, y);
                                for(var v = i; v < y; ++v)g += String.fromCharCode(m[v]);
                                return g;
                            case "base64":
                                return b = this, o = r, 0 === (j = t) && o === b.length ? S.fromByteArray(b) : S.fromByteArray(b.slice(j, o));
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                for(var b = t, j = r, _ = this.slice(b, j), x = "", w = 0; w < _.length; w += 2)x += String.fromCharCode(_[w] + 256 * _[w + 1]);
                                return x;
                            default:
                                if (n) throw new TypeError("Unknown encoding: " + e1);
                                e1 = (e1 + "").toLowerCase(), n = !0;
                        }
                    }
                    function a(e1, t, r) {
                        var o = e1[t];
                        e1[t] = e1[r], e1[r] = o;
                    }
                    function h(e1, t, r, o, n) {
                        if (0 === e1.length) return -1;
                        if ("string" == typeof r ? (o = r, r = 0) : 2147483647 < r ? r = 2147483647 : r < -2147483648 && (r = -2147483648), (r = (r = C(r = +r) ? n ? 0 : e1.length - 1 : r) < 0 ? e1.length + r : r) >= e1.length) {
                            if (n) return -1;
                            r = e1.length - 1;
                        } else if (r < 0) {
                            if (!n) return -1;
                            r = 0;
                        }
                        if ("string" == typeof t && (t = d.from(t, o)), d.isBuffer(t)) return 0 === t.length ? -1 : p(e1, t, r, o, n);
                        if ("number" == typeof t) return t &= 255, "function" == typeof Uint8Array.prototype.indexOf ? (n ? Uint8Array.prototype.indexOf : Uint8Array.prototype.lastIndexOf).call(e1, t, r) : p(e1, [
                            t
                        ], r, o, n);
                        throw new TypeError("val must be string, number or Buffer");
                    }
                    function p(e1, t, r, o, n) {
                        var s = 1, i = e1.length, a = t.length;
                        if (void 0 !== o && ("ucs2" === (o = String(o).toLowerCase()) || "ucs-2" === o || "utf16le" === o || "utf-16le" === o)) {
                            if (e1.length < 2 || t.length < 2) return -1;
                            i /= s = 2, a /= 2, r /= 2;
                        }
                        function l(e1, t) {
                            return 1 === s ? e1[t] : e1.readUInt16BE(t * s);
                        }
                        if (n) for(var u = -1, c = r; c < i; c++)if (l(e1, c) === l(t, -1 === u ? 0 : c - u)) {
                            if (c - (u = -1 === u ? c : u) + 1 === a) return u * s;
                        } else -1 !== u && (c -= c - u), u = -1;
                        else for(c = r = i < r + a ? i - a : r; 0 <= c; c--){
                            for(var d = !0, f = 0; f < a; f++)if (l(e1, c + f) !== l(t, f)) {
                                d = !1;
                                break;
                            }
                            if (d) return c;
                        }
                        return -1;
                    }
                    function y(e1, t, r, o) {
                        return k(function(e1) {
                            for(var t = [], r = 0; r < e1.length; ++r)t.push(255 & e1.charCodeAt(r));
                            return t;
                        }(t), e1, r, o);
                    }
                    function g(e1, t, r, o) {
                        return k(function(e1, t) {
                            for(var r, o, n = [], s = 0; s < e1.length && !((t -= 2) < 0); ++s)o = e1.charCodeAt(s), r = o >> 8, o = o % 256, n.push(o), n.push(r);
                            return n;
                        }(t, e1.length - r), e1, r, o);
                    }
                    function E(e1, t, r) {
                        r = Math.min(e1.length, r);
                        for(var o = [], n = t; n < r;){
                            var s, i, a, l, u = e1[n], c = null, d = 239 < u ? 4 : 223 < u ? 3 : 191 < u ? 2 : 1;
                            if (n + d <= r) switch(d){
                                case 1:
                                    u < 128 && (c = u);
                                    break;
                                case 2:
                                    128 == (192 & (s = e1[n + 1])) && 127 < (l = (31 & u) << 6 | 63 & s) && (c = l);
                                    break;
                                case 3:
                                    s = e1[n + 1], i = e1[n + 2], 128 == (192 & s) && 128 == (192 & i) && 2047 < (l = (15 & u) << 12 | (63 & s) << 6 | 63 & i) && (l < 55296 || 57343 < l) && (c = l);
                                    break;
                                case 4:
                                    s = e1[n + 1], i = e1[n + 2], a = e1[n + 3], 128 == (192 & s) && 128 == (192 & i) && 128 == (192 & a) && 65535 < (l = (15 & u) << 18 | (63 & s) << 12 | (63 & i) << 6 | 63 & a) && l < 1114112 && (c = l);
                            }
                            null === c ? (c = 65533, d = 1) : 65535 < c && (c -= 65536, o.push(c >>> 10 & 1023 | 55296), c = 56320 | 1023 & c), o.push(c), n += d;
                        }
                        var f = o, h = f.length;
                        if (h <= v) return String.fromCharCode.apply(String, f);
                        for(var p = "", m = 0; m < h;)p += String.fromCharCode.apply(String, f.slice(m, m += v));
                        return p;
                    }
                    L.kMaxLength = t, (d.TYPED_ARRAY_SUPPORT = function() {
                        try {
                            var e1 = new Uint8Array(1), t = {
                                foo: function() {
                                    return 42;
                                }
                            };
                            return Object.setPrototypeOf(t, Uint8Array.prototype), Object.setPrototypeOf(e1, t), 42 === e1.foo();
                        } catch (e1) {
                            return !1;
                        }
                    }()) || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(d.prototype, "parent", {
                        enumerable: !0,
                        get: function() {
                            if (d.isBuffer(this)) return this.buffer;
                        }
                    }), Object.defineProperty(d.prototype, "offset", {
                        enumerable: !0,
                        get: function() {
                            if (d.isBuffer(this)) return this.byteOffset;
                        }
                    }), "undefined" != typeof Symbol && null != Symbol.species && d[Symbol.species] === d && Object.defineProperty(d, Symbol.species, {
                        value: null,
                        configurable: !0,
                        enumerable: !1,
                        writable: !1
                    }), d.poolSize = 8192, d.from = o, Object.setPrototypeOf(d.prototype, Uint8Array.prototype), Object.setPrototypeOf(d, Uint8Array), d.alloc = function(e1, t, r) {
                        return t, r, n(e1), !(e1 <= 0) && void 0 !== t ? "string" == typeof r ? l(e1).fill(t, r) : l(e1).fill(t) : l(e1);
                    }, d.allocUnsafe = i, d.allocUnsafeSlow = i, d.isBuffer = function(e1) {
                        return null != e1 && !0 === e1._isBuffer && e1 !== d.prototype;
                    }, d.compare = function(e1, t) {
                        if (O(e1, Uint8Array) && (e1 = d.from(e1, e1.offset, e1.byteLength)), O(t, Uint8Array) && (t = d.from(t, t.offset, t.byteLength)), !d.isBuffer(e1) || !d.isBuffer(t)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                        if (e1 === t) return 0;
                        for(var r = e1.length, o = t.length, n = 0, s = Math.min(r, o); n < s; ++n)if (e1[n] !== t[n]) {
                            r = e1[n], o = t[n];
                            break;
                        }
                        return r < o ? -1 : o < r ? 1 : 0;
                    }, d.isEncoding = function(e1) {
                        switch(String(e1).toLowerCase()){
                            case "hex":
                            case "utf8":
                            case "utf-8":
                            case "ascii":
                            case "latin1":
                            case "binary":
                            case "base64":
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return !0;
                            default:
                                return !1;
                        }
                    }, d.concat = function(e1, t) {
                        if (!Array.isArray(e1)) throw new TypeError('"list" argument must be an Array of Buffers');
                        if (0 === e1.length) return d.alloc(0);
                        if (void 0 === t) for(n = t = 0; n < e1.length; ++n)t += e1[n].length;
                        for(var r = d.allocUnsafe(t), o = 0, n = 0; n < e1.length; ++n){
                            var s = e1[n];
                            if (O(s, Uint8Array) && (s = d.from(s)), !d.isBuffer(s)) throw new TypeError('"list" argument must be an Array of Buffers');
                            s.copy(r, o), o += s.length;
                        }
                        return r;
                    }, d.byteLength = f, d.prototype._isBuffer = !0, d.prototype.swap16 = function() {
                        var e1 = this.length;
                        if (e1 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                        for(var t = 0; t < e1; t += 2)a(this, t, t + 1);
                        return this;
                    }, d.prototype.swap32 = function() {
                        var e1 = this.length;
                        if (e1 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                        for(var t = 0; t < e1; t += 4)a(this, t, t + 3), a(this, t + 1, t + 2);
                        return this;
                    }, d.prototype.swap64 = function() {
                        var e1 = this.length;
                        if (e1 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                        for(var t = 0; t < e1; t += 8)a(this, t, t + 7), a(this, t + 1, t + 6), a(this, t + 2, t + 5), a(this, t + 3, t + 4);
                        return this;
                    }, d.prototype.toLocaleString = d.prototype.toString = function() {
                        var e1 = this.length;
                        return 0 === e1 ? "" : 0 === arguments.length ? E(this, 0, e1) : r.apply(this, arguments);
                    }, d.prototype.equals = function(e1) {
                        if (d.isBuffer(e1)) return this === e1 || 0 === d.compare(this, e1);
                        throw new TypeError("Argument must be a Buffer");
                    }, d.prototype.inspect = function() {
                        var e1 = "", t = L.INSPECT_MAX_BYTES, e1 = this.toString("hex", 0, t).replace(/(.{2})/g, "$1 ").trim();
                        return this.length > t && (e1 += " ... "), "<Buffer " + e1 + ">";
                    }, e1 && (d.prototype[e1] = d.prototype.inspect), d.prototype.compare = function(e1, t, r, o, n) {
                        if (O(e1, Uint8Array) && (e1 = d.from(e1, e1.offset, e1.byteLength)), !d.isBuffer(e1)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e1);
                        if (void 0 === r && (r = e1 ? e1.length : 0), void 0 === o && (o = 0), void 0 === n && (n = this.length), (t = void 0 === t ? 0 : t) < 0 || r > e1.length || o < 0 || n > this.length) throw new RangeError("out of range index");
                        if (n <= o && r <= t) return 0;
                        if (n <= o) return -1;
                        if (r <= t) return 1;
                        if (this === e1) return 0;
                        for(var s = (n >>>= 0) - (o >>>= 0), i = (r >>>= 0) - (t >>>= 0), a = Math.min(s, i), l = this.slice(o, n), u = e1.slice(t, r), c = 0; c < a; ++c)if (l[c] !== u[c]) {
                            s = l[c], i = u[c];
                            break;
                        }
                        return s < i ? -1 : i < s ? 1 : 0;
                    }, d.prototype.includes = function(e1, t, r) {
                        return -1 !== this.indexOf(e1, t, r);
                    }, d.prototype.indexOf = function(e1, t, r) {
                        return h(this, e1, t, r, !0);
                    }, d.prototype.lastIndexOf = function(e1, t, r) {
                        return h(this, e1, t, r, !1);
                    }, d.prototype.write = function(e1, t, r, o) {
                        if (void 0 === t) o = "utf8", r = this.length, t = 0;
                        else if (void 0 === r && "string" == typeof t) o = t, r = this.length, t = 0;
                        else {
                            if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                            t >>>= 0, isFinite(r) ? (r >>>= 0, void 0 === o && (o = "utf8")) : (o = r, r = void 0);
                        }
                        var n = this.length - t;
                        if ((void 0 === r || n < r) && (r = n), 0 < e1.length && (r < 0 || t < 0) || t > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                        o = o || "utf8";
                        for(var s, i, a, l = !1;;)switch(o){
                            case "hex":
                                var u = this, c = e1, d = t, f = r, h = (d = Number(d) || 0, u.length - d);
                                (!f || h < (f = Number(f))) && (f = h), (h = c.length) / 2 < f && (f = h / 2);
                                for(var p = 0; p < f; ++p){
                                    var m = parseInt(c.substr(2 * p, 2), 16);
                                    if (C(m)) return p;
                                    u[d + p] = m;
                                }
                                return p;
                            case "utf8":
                            case "utf-8":
                                return h = t, a = r, k(M(e1, (i = this).length - h), i, h, a);
                            case "ascii":
                                return y(this, e1, t, r);
                            case "latin1":
                            case "binary":
                                return y(this, e1, t, r);
                            case "base64":
                                return i = this, a = t, s = r, k(T(e1), i, a, s);
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return g(this, e1, t, r);
                            default:
                                if (l) throw new TypeError("Unknown encoding: " + o);
                                o = ("" + o).toLowerCase(), l = !0;
                        }
                    }, d.prototype.toJSON = function() {
                        return {
                            type: "Buffer",
                            data: Array.prototype.slice.call(this._arr || this, 0)
                        };
                    };
                    var v = 4096;
                    function m(e1, t, r) {
                        if (e1 % 1 != 0 || e1 < 0) throw new RangeError("offset is not uint");
                        if (r < e1 + t) throw new RangeError("Trying to access beyond buffer length");
                    }
                    function b(e1, t, r, o, n, s) {
                        if (!d.isBuffer(e1)) throw new TypeError('"buffer" argument must be a Buffer instance');
                        if (n < t || t < s) throw new RangeError('"value" argument is out of bounds');
                        if (r + o > e1.length) throw new RangeError("Index out of range");
                    }
                    function j(e1, t, r, o) {
                        if (r + o > e1.length) throw new RangeError("Index out of range");
                        if (r < 0) throw new RangeError("Index out of range");
                    }
                    function _(e1, t, r, o, n) {
                        return t = +t, r >>>= 0, n || j(e1, 0, r, 4), s.write(e1, t, r, o, 23, 4), r + 4;
                    }
                    function x(e1, t, r, o, n) {
                        return t = +t, r >>>= 0, n || j(e1, 0, r, 8), s.write(e1, t, r, o, 52, 8), r + 8;
                    }
                    d.prototype.slice = function(e1, t) {
                        var r = this.length, r = ((e1 = ~~e1) < 0 ? (e1 += r) < 0 && (e1 = 0) : r < e1 && (e1 = r), (t = void 0 === t ? r : ~~t) < 0 ? (t += r) < 0 && (t = 0) : r < t && (t = r), t < e1 && (t = e1), this.subarray(e1, t));
                        return Object.setPrototypeOf(r, d.prototype), r;
                    }, d.prototype.readUIntLE = function(e1, t, r) {
                        e1 >>>= 0, t >>>= 0, r || m(e1, t, this.length);
                        for(var o = this[e1], n = 1, s = 0; ++s < t && (n *= 256);)o += this[e1 + s] * n;
                        return o;
                    }, d.prototype.readUIntBE = function(e1, t, r) {
                        e1 >>>= 0, t >>>= 0, r || m(e1, t, this.length);
                        for(var o = this[e1 + --t], n = 1; 0 < t && (n *= 256);)o += this[e1 + --t] * n;
                        return o;
                    }, d.prototype.readUInt8 = function(e1, t) {
                        return e1 >>>= 0, t || m(e1, 1, this.length), this[e1];
                    }, d.prototype.readUInt16LE = function(e1, t) {
                        return e1 >>>= 0, t || m(e1, 2, this.length), this[e1] | this[e1 + 1] << 8;
                    }, d.prototype.readUInt16BE = function(e1, t) {
                        return e1 >>>= 0, t || m(e1, 2, this.length), this[e1] << 8 | this[e1 + 1];
                    }, d.prototype.readUInt32LE = function(e1, t) {
                        return e1 >>>= 0, t || m(e1, 4, this.length), (this[e1] | this[e1 + 1] << 8 | this[e1 + 2] << 16) + 16777216 * this[e1 + 3];
                    }, d.prototype.readUInt32BE = function(e1, t) {
                        return e1 >>>= 0, t || m(e1, 4, this.length), 16777216 * this[e1] + (this[e1 + 1] << 16 | this[e1 + 2] << 8 | this[e1 + 3]);
                    }, d.prototype.readIntLE = function(e1, t, r) {
                        e1 >>>= 0, t >>>= 0, r || m(e1, t, this.length);
                        for(var o = this[e1], n = 1, s = 0; ++s < t && (n *= 256);)o += this[e1 + s] * n;
                        return (n *= 128) <= o && (o -= Math.pow(2, 8 * t)), o;
                    }, d.prototype.readIntBE = function(e1, t, r) {
                        e1 >>>= 0, t >>>= 0, r || m(e1, t, this.length);
                        for(var o = t, n = 1, s = this[e1 + --o]; 0 < o && (n *= 256);)s += this[e1 + --o] * n;
                        return (n *= 128) <= s && (s -= Math.pow(2, 8 * t)), s;
                    }, d.prototype.readInt8 = function(e1, t) {
                        return e1 >>>= 0, t || m(e1, 1, this.length), 128 & this[e1] ? -1 * (255 - this[e1] + 1) : this[e1];
                    }, d.prototype.readInt16LE = function(e1, t) {
                        e1 >>>= 0, t || m(e1, 2, this.length);
                        t = this[e1] | this[e1 + 1] << 8;
                        return 32768 & t ? 4294901760 | t : t;
                    }, d.prototype.readInt16BE = function(e1, t) {
                        e1 >>>= 0, t || m(e1, 2, this.length);
                        t = this[e1 + 1] | this[e1] << 8;
                        return 32768 & t ? 4294901760 | t : t;
                    }, d.prototype.readInt32LE = function(e1, t) {
                        return e1 >>>= 0, t || m(e1, 4, this.length), this[e1] | this[e1 + 1] << 8 | this[e1 + 2] << 16 | this[e1 + 3] << 24;
                    }, d.prototype.readInt32BE = function(e1, t) {
                        return e1 >>>= 0, t || m(e1, 4, this.length), this[e1] << 24 | this[e1 + 1] << 16 | this[e1 + 2] << 8 | this[e1 + 3];
                    }, d.prototype.readFloatLE = function(e1, t) {
                        return e1 >>>= 0, t || m(e1, 4, this.length), s.read(this, e1, !0, 23, 4);
                    }, d.prototype.readFloatBE = function(e1, t) {
                        return e1 >>>= 0, t || m(e1, 4, this.length), s.read(this, e1, !1, 23, 4);
                    }, d.prototype.readDoubleLE = function(e1, t) {
                        return e1 >>>= 0, t || m(e1, 8, this.length), s.read(this, e1, !0, 52, 8);
                    }, d.prototype.readDoubleBE = function(e1, t) {
                        return e1 >>>= 0, t || m(e1, 8, this.length), s.read(this, e1, !1, 52, 8);
                    }, d.prototype.writeUIntLE = function(e1, t, r, o) {
                        e1 = +e1, t >>>= 0, r >>>= 0, o || b(this, e1, t, r, Math.pow(2, 8 * r) - 1, 0);
                        var n = 1, s = 0;
                        for(this[t] = 255 & e1; ++s < r && (n *= 256);)this[t + s] = e1 / n & 255;
                        return t + r;
                    }, d.prototype.writeUIntBE = function(e1, t, r, o) {
                        e1 = +e1, t >>>= 0, r >>>= 0, o || b(this, e1, t, r, Math.pow(2, 8 * r) - 1, 0);
                        var n = r - 1, s = 1;
                        for(this[t + n] = 255 & e1; 0 <= --n && (s *= 256);)this[t + n] = e1 / s & 255;
                        return t + r;
                    }, d.prototype.writeUInt8 = function(e1, t, r) {
                        return e1 = +e1, t >>>= 0, r || b(this, e1, t, 1, 255, 0), this[t] = 255 & e1, t + 1;
                    }, d.prototype.writeUInt16LE = function(e1, t, r) {
                        return e1 = +e1, t >>>= 0, r || b(this, e1, t, 2, 65535, 0), this[t] = 255 & e1, this[t + 1] = e1 >>> 8, t + 2;
                    }, d.prototype.writeUInt16BE = function(e1, t, r) {
                        return e1 = +e1, t >>>= 0, r || b(this, e1, t, 2, 65535, 0), this[t] = e1 >>> 8, this[t + 1] = 255 & e1, t + 2;
                    }, d.prototype.writeUInt32LE = function(e1, t, r) {
                        return e1 = +e1, t >>>= 0, r || b(this, e1, t, 4, 4294967295, 0), this[t + 3] = e1 >>> 24, this[t + 2] = e1 >>> 16, this[t + 1] = e1 >>> 8, this[t] = 255 & e1, t + 4;
                    }, d.prototype.writeUInt32BE = function(e1, t, r) {
                        return e1 = +e1, t >>>= 0, r || b(this, e1, t, 4, 4294967295, 0), this[t] = e1 >>> 24, this[t + 1] = e1 >>> 16, this[t + 2] = e1 >>> 8, this[t + 3] = 255 & e1, t + 4;
                    }, d.prototype.writeIntLE = function(e1, t, r, o) {
                        e1 = +e1, t >>>= 0, o || b(this, e1, t, r, (o = Math.pow(2, 8 * r - 1)) - 1, -o);
                        var n = 0, s = 1, i = 0;
                        for(this[t] = 255 & e1; ++n < r && (s *= 256);)e1 < 0 && 0 === i && 0 !== this[t + n - 1] && (i = 1), this[t + n] = (e1 / s >> 0) - i & 255;
                        return t + r;
                    }, d.prototype.writeIntBE = function(e1, t, r, o) {
                        e1 = +e1, t >>>= 0, o || b(this, e1, t, r, (o = Math.pow(2, 8 * r - 1)) - 1, -o);
                        var n = r - 1, s = 1, i = 0;
                        for(this[t + n] = 255 & e1; 0 <= --n && (s *= 256);)e1 < 0 && 0 === i && 0 !== this[t + n + 1] && (i = 1), this[t + n] = (e1 / s >> 0) - i & 255;
                        return t + r;
                    }, d.prototype.writeInt8 = function(e1, t, r) {
                        return e1 = +e1, t >>>= 0, r || b(this, e1, t, 1, 127, -128), this[t] = 255 & (e1 = e1 < 0 ? 255 + e1 + 1 : e1), t + 1;
                    }, d.prototype.writeInt16LE = function(e1, t, r) {
                        return e1 = +e1, t >>>= 0, r || b(this, e1, t, 2, 32767, -32768), this[t] = 255 & e1, this[t + 1] = e1 >>> 8, t + 2;
                    }, d.prototype.writeInt16BE = function(e1, t, r) {
                        return e1 = +e1, t >>>= 0, r || b(this, e1, t, 2, 32767, -32768), this[t] = e1 >>> 8, this[t + 1] = 255 & e1, t + 2;
                    }, d.prototype.writeInt32LE = function(e1, t, r) {
                        return e1 = +e1, t >>>= 0, r || b(this, e1, t, 4, 2147483647, -2147483648), this[t] = 255 & e1, this[t + 1] = e1 >>> 8, this[t + 2] = e1 >>> 16, this[t + 3] = e1 >>> 24, t + 4;
                    }, d.prototype.writeInt32BE = function(e1, t, r) {
                        return e1 = +e1, t >>>= 0, r || b(this, e1, t, 4, 2147483647, -2147483648), this[t] = (e1 = e1 < 0 ? 4294967295 + e1 + 1 : e1) >>> 24, this[t + 1] = e1 >>> 16, this[t + 2] = e1 >>> 8, this[t + 3] = 255 & e1, t + 4;
                    }, d.prototype.writeFloatLE = function(e1, t, r) {
                        return _(this, e1, t, !0, r);
                    }, d.prototype.writeFloatBE = function(e1, t, r) {
                        return _(this, e1, t, !1, r);
                    }, d.prototype.writeDoubleLE = function(e1, t, r) {
                        return x(this, e1, t, !0, r);
                    }, d.prototype.writeDoubleBE = function(e1, t, r) {
                        return x(this, e1, t, !1, r);
                    }, d.prototype.copy = function(e1, t, r, o) {
                        if (!d.isBuffer(e1)) throw new TypeError("argument should be a Buffer");
                        if (r = r || 0, o || 0 === o || (o = this.length), t >= e1.length && (t = e1.length), (o = 0 < o && o < r ? r : o) === r) return 0;
                        if (0 === e1.length || 0 === this.length) return 0;
                        if ((t = t || 0) < 0) throw new RangeError("targetStart out of bounds");
                        if (r < 0 || r >= this.length) throw new RangeError("Index out of range");
                        if (o < 0) throw new RangeError("sourceEnd out of bounds");
                        o > this.length && (o = this.length);
                        var n = (o = e1.length - t < o - r ? e1.length - t + r : o) - r;
                        if (this === e1 && "function" == typeof Uint8Array.prototype.copyWithin) this.copyWithin(t, r, o);
                        else if (this === e1 && r < t && t < o) for(var s = n - 1; 0 <= s; --s)e1[s + t] = this[s + r];
                        else Uint8Array.prototype.set.call(e1, this.subarray(r, o), t);
                        return n;
                    }, d.prototype.fill = function(e1, t, r, o) {
                        if ("string" == typeof e1) {
                            if ("string" == typeof t ? (o = t, t = 0, r = this.length) : "string" == typeof r && (o = r, r = this.length), void 0 !== o && "string" != typeof o) throw new TypeError("encoding must be a string");
                            if ("string" == typeof o && !d.isEncoding(o)) throw new TypeError("Unknown encoding: " + o);
                            var n;
                            1 === e1.length && (n = e1.charCodeAt(0), ("utf8" === o && n < 128 || "latin1" === o) && (e1 = n));
                        } else "number" == typeof e1 ? e1 &= 255 : "boolean" == typeof e1 && (e1 = Number(e1));
                        if (t < 0 || this.length < t || this.length < r) throw new RangeError("Out of range index");
                        var s;
                        if (!(r <= t)) {
                            if (t >>>= 0, r = void 0 === r ? this.length : r >>> 0, "number" == typeof (e1 = e1 || 0)) for(s = t; s < r; ++s)this[s] = e1;
                            else {
                                var i = d.isBuffer(e1) ? e1 : d.from(e1, o), a = i.length;
                                if (0 === a) throw new TypeError('The value "' + e1 + '" is invalid for argument "value"');
                                for(s = 0; s < r - t; ++s)this[s + t] = i[s % a];
                            }
                        }
                        return this;
                    };
                    var w = /[^+/0-9A-Za-z-_]/g;
                    function M(e1, t) {
                        t = t || 1 / 0;
                        for(var r, o = e1.length, n = null, s = [], i = 0; i < o; ++i){
                            if (55295 < (r = e1.charCodeAt(i)) && r < 57344) {
                                if (!n) {
                                    if (56319 < r) {
                                        -1 < (t -= 3) && s.push(239, 191, 189);
                                        continue;
                                    }
                                    if (i + 1 === o) {
                                        -1 < (t -= 3) && s.push(239, 191, 189);
                                        continue;
                                    }
                                    n = r;
                                    continue;
                                }
                                if (r < 56320) {
                                    -1 < (t -= 3) && s.push(239, 191, 189), n = r;
                                    continue;
                                }
                                r = 65536 + (n - 55296 << 10 | r - 56320);
                            } else n && -1 < (t -= 3) && s.push(239, 191, 189);
                            if (n = null, r < 128) {
                                if (--t < 0) break;
                                s.push(r);
                            } else if (r < 2048) {
                                if ((t -= 2) < 0) break;
                                s.push(r >> 6 | 192, 63 & r | 128);
                            } else if (r < 65536) {
                                if ((t -= 3) < 0) break;
                                s.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128);
                            } else {
                                if (!(r < 1114112)) throw new Error("Invalid code point");
                                if ((t -= 4) < 0) break;
                                s.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128);
                            }
                        }
                        return s;
                    }
                    function T(e1) {
                        return S.toByteArray(function(e1) {
                            if ((e1 = (e1 = e1.split("=")[0]).trim().replace(w, "")).length < 2) return "";
                            for(; e1.length % 4 != 0;)e1 += "=";
                            return e1;
                        }(e1));
                    }
                    function k(e1, t, r, o) {
                        for(var n = 0; n < o && !(n + r >= t.length || n >= e1.length); ++n)t[n + r] = e1[n];
                        return n;
                    }
                    function O(e1, t) {
                        return e1 instanceof t || null != e1 && null != e1.constructor && null != e1.constructor.name && e1.constructor.name === t.name;
                    }
                    function C(e1) {
                        return e1 != e1;
                    }
                    var A = function() {
                        for(var e1 = "0123456789abcdef", t = new Array(256), r = 0; r < 16; ++r)for(var o = 16 * r, n = 0; n < 16; ++n)t[o + n] = e1[r] + e1[n];
                        return t;
                    }();
                }).call(this, P("buffer").Buffer);
            },
            {
                "base64-js": 1,
                buffer: 4,
                ieee754: 244
            }
        ],
        5: [
            function(e1, t, r) {
                t.exports = function(e1) {
                    if ("function" != typeof e1) throw TypeError(String(e1) + " is not a function");
                    return e1;
                };
            },
            {}
        ],
        6: [
            function(e1, t, r) {
                var o = e1("../internals/is-object");
                t.exports = function(e1) {
                    if (o(e1) || null === e1) return e1;
                    throw TypeError("Can't set " + String(e1) + " as a prototype");
                };
            },
            {
                "../internals/is-object": 74
            }
        ],
        7: [
            function(e1, t, r) {
                var o = e1("../internals/well-known-symbol"), n = e1("../internals/object-create"), e1 = e1("../internals/object-define-property"), s = o("unscopables"), i = Array.prototype;
                null == i[s] && e1.f(i, s, {
                    configurable: !0,
                    value: n(null)
                }), t.exports = function(e1) {
                    i[s][e1] = !0;
                };
            },
            {
                "../internals/object-create": 90,
                "../internals/object-define-property": 92,
                "../internals/well-known-symbol": 148
            }
        ],
        8: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/string-multibyte").charAt;
                t.exports = function(e1, t, r) {
                    return t + (r ? o(e1, t).length : 1);
                };
            },
            {
                "../internals/string-multibyte": 123
            }
        ],
        9: [
            function(e1, t, r) {
                t.exports = function(e1, t, r) {
                    if (e1 instanceof t) return e1;
                    throw TypeError("Incorrect " + (r ? r + " " : "") + "invocation");
                };
            },
            {}
        ],
        10: [
            function(e1, t, r) {
                var o = e1("../internals/is-object");
                t.exports = function(e1) {
                    if (o(e1)) return e1;
                    throw TypeError(String(e1) + " is not an object");
                };
            },
            {
                "../internals/is-object": 74
            }
        ],
        11: [
            function(e1, t, r) {
                t.exports = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView;
            },
            {}
        ],
        12: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return l(e1) && u(M, c(e1));
                }
                var n, s = e1("../internals/array-buffer-native"), i = e1("../internals/descriptors"), a = e1("../internals/global"), l = e1("../internals/is-object"), u = e1("../internals/has"), c = e1("../internals/classof"), d = e1("../internals/create-non-enumerable-property"), f = e1("../internals/redefine"), h = e1("../internals/object-define-property").f, p = e1("../internals/object-get-prototype-of"), m = e1("../internals/object-set-prototype-of"), y = e1("../internals/well-known-symbol"), e1 = e1("../internals/uid"), g = a.Int8Array, v = g && g.prototype, b = a.Uint8ClampedArray, b = b && b.prototype, j = g && p(g), _ = v && p(v), x = Object.prototype, w = x.isPrototypeOf, y = y("toStringTag"), S = e1("TYPED_ARRAY_TAG"), E = s && !!m && "Opera" !== c(a.opera), e1 = !1, M = {
                    Int8Array: 1,
                    Uint8Array: 1,
                    Uint8ClampedArray: 1,
                    Int16Array: 2,
                    Uint16Array: 2,
                    Int32Array: 4,
                    Uint32Array: 4,
                    Float32Array: 4,
                    Float64Array: 8
                };
                for(n in M)a[n] || (E = !1);
                if ((!E || "function" != typeof j || j === Function.prototype) && (j = function() {
                    throw TypeError("Incorrect invocation");
                }, E)) for(n in M)a[n] && m(a[n], j);
                if ((!E || !_ || _ === x) && (_ = j.prototype, E)) for(n in M)a[n] && m(a[n].prototype, _);
                if (E && p(b) !== _ && m(b, _), i && !u(_, y)) for(n in e1 = !0, h(_, y, {
                    get: function() {
                        return l(this) ? this[S] : void 0;
                    }
                }), M)a[n] && d(a[n], S, n);
                t.exports = {
                    NATIVE_ARRAY_BUFFER_VIEWS: E,
                    TYPED_ARRAY_TAG: e1 && S,
                    aTypedArray: function(e1) {
                        if (o(e1)) return e1;
                        throw TypeError("Target is not a typed array");
                    },
                    aTypedArrayConstructor: function(e1) {
                        if (m) {
                            if (w.call(j, e1)) return e1;
                        } else for(var t in M)if (u(M, n)) {
                            t = a[t];
                            if (t && (e1 === t || w.call(t, e1))) return e1;
                        }
                        throw TypeError("Target is not a typed array constructor");
                    },
                    exportTypedArrayMethod: function(e1, t, r) {
                        if (i) {
                            if (r) for(var o in M){
                                o = a[o];
                                o && u(o.prototype, e1) && delete o.prototype[e1];
                            }
                            _[e1] && !r || f(_, e1, !r && E && v[e1] || t);
                        }
                    },
                    exportTypedArrayStaticMethod: function(e1, t, r) {
                        var o, n;
                        if (i) {
                            if (m) {
                                if (r) for(o in M)(n = a[o]) && u(n, e1) && delete n[e1];
                                if (j[e1] && !r) return;
                                try {
                                    return f(j, e1, !r && E && g[e1] || t);
                                } catch (e1) {}
                            }
                            for(o in M)!(n = a[o]) || n[e1] && !r || f(n, e1, t);
                        }
                    },
                    isView: function(e1) {
                        e1 = c(e1);
                        return "DataView" === e1 || u(M, e1);
                    },
                    isTypedArray: o,
                    TypedArray: j,
                    TypedArrayPrototype: _
                };
            },
            {
                "../internals/array-buffer-native": 11,
                "../internals/classof": 29,
                "../internals/create-non-enumerable-property": 38,
                "../internals/descriptors": 43,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/is-object": 74,
                "../internals/object-define-property": 92,
                "../internals/object-get-prototype-of": 97,
                "../internals/object-set-prototype-of": 101,
                "../internals/redefine": 108,
                "../internals/uid": 145,
                "../internals/well-known-symbol": 148
            }
        ],
        13: [
            function(e1, t, D) {
                "use strict";
                function r(e1) {
                    return [
                        255 & e1
                    ];
                }
                function o(e1) {
                    return [
                        255 & e1,
                        e1 >> 8 & 255
                    ];
                }
                function n(e1) {
                    return [
                        255 & e1,
                        e1 >> 8 & 255,
                        e1 >> 16 & 255,
                        e1 >> 24 & 255
                    ];
                }
                function s(e1) {
                    return e1[3] << 24 | e1[2] << 16 | e1[1] << 8 | e1[0];
                }
                function i(e1) {
                    return C(e1, 23, 4);
                }
                function F(e1) {
                    return C(e1, 52, 8);
                }
                function a(e1, t) {
                    H(e1[w], t, {
                        get: function() {
                            return b(this)[t];
                        }
                    });
                }
                function l(e1, t, r, o) {
                    if (r = m(r), e1 = b(e1), r + t > e1.byteLength) throw O(S);
                    var n = b(e1.buffer).bytes, r = r + e1.byteOffset, e1 = n.slice(r, r + t);
                    return o ? e1 : e1.reverse();
                }
                function u(e1, t, r, o, n, s) {
                    if (r = m(r), e1 = b(e1), r + t > e1.byteLength) throw O(S);
                    for(var i = b(e1.buffer).bytes, a = r + e1.byteOffset, l = o(+n), u = 0; u < t; u++)i[a + u] = l[s ? u : t - u - 1];
                }
                var c = e1("../internals/global"), d = e1("../internals/descriptors"), U = e1("../internals/array-buffer-native"), N = e1("../internals/create-non-enumerable-property"), f = e1("../internals/redefine-all"), h = e1("../internals/fails"), p = e1("../internals/an-instance"), B = e1("../internals/to-integer"), G = e1("../internals/to-length"), m = e1("../internals/to-index"), y = e1("../internals/ieee754"), V = e1("../internals/object-get-prototype-of"), g = e1("../internals/object-set-prototype-of"), z = e1("../internals/object-get-own-property-names").f, H = e1("../internals/object-define-property").f, W = e1("../internals/array-fill"), v = e1("../internals/set-to-string-tag"), e1 = e1("../internals/internal-state"), b = e1.get, j = e1.set, _ = "ArrayBuffer", x = "DataView", w = "prototype", S = "Wrong index", E = c[_], M = E, T = c[x], e1 = T && T[w], k = Object.prototype, O = c.RangeError, C = y.pack, A = y.unpack;
                if (U) {
                    if (!h(function() {
                        E(1);
                    }) || !h(function() {
                        new E(-1);
                    }) || h(function() {
                        return new E, new E(1.5), new E(NaN), E.name != _;
                    })) {
                        for(var P, c = (M = function(e1) {
                            return p(this, M), new E(m(e1));
                        })[w] = E[w], L = z(E), R = 0; L.length > R;)(P = L[R++]) in M || N(M, P, E[P]);
                        c.constructor = M;
                    }
                    g && V(e1) !== k && g(e1, k);
                    var y = new T(new M(2)), I = e1.setInt8;
                    y.setInt8(0, 2147483648), y.setInt8(1, 2147483649), !y.getInt8(0) && y.getInt8(1) || f(e1, {
                        setInt8: function(e1, t) {
                            I.call(this, e1, t << 24 >> 24);
                        },
                        setUint8: function(e1, t) {
                            I.call(this, e1, t << 24 >> 24);
                        }
                    }, {
                        unsafe: !0
                    });
                } else M = function(e1) {
                    p(this, M, _);
                    e1 = m(e1);
                    j(this, {
                        bytes: W.call(new Array(e1), 0),
                        byteLength: e1
                    }), d || (this.byteLength = e1);
                }, T = function(e1, t, r) {
                    p(this, T, x), p(e1, M, x);
                    var o = b(e1).byteLength, t = B(t);
                    if (t < 0 || o < t) throw O("Wrong offset");
                    if (o < t + (r = void 0 === r ? o - t : G(r))) throw O("Wrong length");
                    j(this, {
                        buffer: e1,
                        byteLength: r,
                        byteOffset: t
                    }), d || (this.buffer = e1, this.byteLength = r, this.byteOffset = t);
                }, d && (a(M, "byteLength"), a(T, "buffer"), a(T, "byteLength"), a(T, "byteOffset")), f(T[w], {
                    getInt8: function(e1) {
                        return l(this, 1, e1)[0] << 24 >> 24;
                    },
                    getUint8: function(e1) {
                        return l(this, 1, e1)[0];
                    },
                    getInt16: function(e1) {
                        e1 = l(this, 2, e1, 1 < arguments.length ? arguments[1] : void 0);
                        return (e1[1] << 8 | e1[0]) << 16 >> 16;
                    },
                    getUint16: function(e1) {
                        e1 = l(this, 2, e1, 1 < arguments.length ? arguments[1] : void 0);
                        return e1[1] << 8 | e1[0];
                    },
                    getInt32: function(e1) {
                        return s(l(this, 4, e1, 1 < arguments.length ? arguments[1] : void 0));
                    },
                    getUint32: function(e1) {
                        return s(l(this, 4, e1, 1 < arguments.length ? arguments[1] : void 0)) >>> 0;
                    },
                    getFloat32: function(e1) {
                        return A(l(this, 4, e1, 1 < arguments.length ? arguments[1] : void 0), 23);
                    },
                    getFloat64: function(e1) {
                        return A(l(this, 8, e1, 1 < arguments.length ? arguments[1] : void 0), 52);
                    },
                    setInt8: function(e1, t) {
                        u(this, 1, e1, r, t);
                    },
                    setUint8: function(e1, t) {
                        u(this, 1, e1, r, t);
                    },
                    setInt16: function(e1, t) {
                        u(this, 2, e1, o, t, 2 < arguments.length ? arguments[2] : void 0);
                    },
                    setUint16: function(e1, t) {
                        u(this, 2, e1, o, t, 2 < arguments.length ? arguments[2] : void 0);
                    },
                    setInt32: function(e1, t) {
                        u(this, 4, e1, n, t, 2 < arguments.length ? arguments[2] : void 0);
                    },
                    setUint32: function(e1, t) {
                        u(this, 4, e1, n, t, 2 < arguments.length ? arguments[2] : void 0);
                    },
                    setFloat32: function(e1, t) {
                        u(this, 4, e1, i, t, 2 < arguments.length ? arguments[2] : void 0);
                    },
                    setFloat64: function(e1, t) {
                        u(this, 8, e1, F, t, 2 < arguments.length ? arguments[2] : void 0);
                    }
                });
                v(M, _), v(T, x), t.exports = {
                    ArrayBuffer: M,
                    DataView: T
                };
            },
            {
                "../internals/an-instance": 9,
                "../internals/array-buffer-native": 11,
                "../internals/array-fill": 15,
                "../internals/create-non-enumerable-property": 38,
                "../internals/descriptors": 43,
                "../internals/fails": 51,
                "../internals/global": 59,
                "../internals/ieee754": 65,
                "../internals/internal-state": 70,
                "../internals/object-define-property": 92,
                "../internals/object-get-own-property-names": 95,
                "../internals/object-get-prototype-of": 97,
                "../internals/object-set-prototype-of": 101,
                "../internals/redefine-all": 107,
                "../internals/set-to-string-tag": 117,
                "../internals/to-index": 133,
                "../internals/to-integer": 135,
                "../internals/to-length": 136
            }
        ],
        14: [
            function(e1, t, r) {
                "use strict";
                var l = e1("../internals/to-object"), u = e1("../internals/to-absolute-index"), c = e1("../internals/to-length"), d = Math.min;
                t.exports = [].copyWithin || function(e1, t) {
                    var r = l(this), o = c(r.length), n = u(e1, o), s = u(t, o), e1 = 2 < arguments.length ? arguments[2] : void 0, i = d((void 0 === e1 ? o : u(e1, o)) - s, o - n), a = 1;
                    for(s < n && n < s + i && (a = -1, s += i - 1, n += i - 1); 0 < i--;)s in r ? r[n] = r[s] : delete r[n], n += a, s += a;
                    return r;
                };
            },
            {
                "../internals/to-absolute-index": 132,
                "../internals/to-length": 136,
                "../internals/to-object": 137
            }
        ],
        15: [
            function(e1, t, r) {
                "use strict";
                var i = e1("../internals/to-object"), a = e1("../internals/to-absolute-index"), l = e1("../internals/to-length");
                t.exports = function(e1) {
                    for(var t = i(this), r = l(t.length), o = arguments.length, n = a(1 < o ? arguments[1] : void 0, r), o = 2 < o ? arguments[2] : void 0, s = void 0 === o ? r : a(o, r); n < s;)t[n++] = e1;
                    return t;
                };
            },
            {
                "../internals/to-absolute-index": 132,
                "../internals/to-length": 136,
                "../internals/to-object": 137
            }
        ],
        16: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-iteration").forEach, n = e1("../internals/array-method-is-strict"), e1 = e1("../internals/array-method-uses-to-length"), n = n("forEach"), e1 = e1("forEach");
                t.exports = n && e1 ? [].forEach : function(e1) {
                    return o(this, e1, 1 < arguments.length ? arguments[1] : void 0);
                };
            },
            {
                "../internals/array-iteration": 19,
                "../internals/array-method-is-strict": 22,
                "../internals/array-method-uses-to-length": 23
            }
        ],
        17: [
            function(e1, t, r) {
                "use strict";
                var h = e1("../internals/function-bind-context"), p = e1("../internals/to-object"), m = e1("../internals/call-with-safe-iteration-closing"), y = e1("../internals/is-array-iterator-method"), g = e1("../internals/to-length"), v = e1("../internals/create-property"), b = e1("../internals/get-iterator-method");
                t.exports = function(e1) {
                    var t, r, o, n, s, i, a = p(e1), e1 = "function" == typeof this ? this : Array, l = arguments.length, u = 1 < l ? arguments[1] : void 0, c = void 0 !== u, d = b(a), f = 0;
                    if (c && (u = h(u, 2 < l ? arguments[2] : void 0, 2)), null == d || e1 == Array && y(d)) for(r = new e1(t = g(a.length)); f < t; f++)i = c ? u(a[f], f) : a[f], v(r, f, i);
                    else for(s = (n = d.call(a)).next, r = new e1; !(o = s.call(n)).done; f++)i = c ? m(n, u, [
                        o.value,
                        f
                    ], !0) : o.value, v(r, f, i);
                    return r.length = f, r;
                };
            },
            {
                "../internals/call-with-safe-iteration-closing": 26,
                "../internals/create-property": 40,
                "../internals/function-bind-context": 54,
                "../internals/get-iterator-method": 57,
                "../internals/is-array-iterator-method": 71,
                "../internals/to-length": 136,
                "../internals/to-object": 137
            }
        ],
        18: [
            function(e1, t, r) {
                function o(a) {
                    return function(e1, t, r) {
                        var o, n = l(e1), s = u(n.length), i = c(r, s);
                        if (a && t != t) {
                            for(; i < s;)if ((o = n[i++]) != o) return !0;
                        } else for(; i < s; i++)if ((a || i in n) && n[i] === t) return a || i || 0;
                        return !a && -1;
                    };
                }
                var l = e1("../internals/to-indexed-object"), u = e1("../internals/to-length"), c = e1("../internals/to-absolute-index");
                t.exports = {
                    includes: o(!0),
                    indexOf: o(!1)
                };
            },
            {
                "../internals/to-absolute-index": 132,
                "../internals/to-indexed-object": 134,
                "../internals/to-length": 136
            }
        ],
        19: [
            function(e1, t, r) {
                function o(f) {
                    var h = 1 == f, p = 2 == f, m = 3 == f, y = 4 == f, g = 6 == f, v = 5 == f || g;
                    return function(e1, t, r, o) {
                        for(var n, s, i = _(e1), a = j(i), l = b(t, r, 3), u = x(a.length), c = 0, t = o || w, d = h ? t(e1, u) : p ? t(e1, 0) : void 0; c < u; c++)if ((v || c in a) && (s = l(n = a[c], c, i), f)) {
                            if (h) d[c] = s;
                            else if (s) switch(f){
                                case 3:
                                    return !0;
                                case 5:
                                    return n;
                                case 6:
                                    return c;
                                case 2:
                                    S.call(d, n);
                            }
                            else if (y) return !1;
                        }
                        return g ? -1 : m || y ? y : d;
                    };
                }
                var b = e1("../internals/function-bind-context"), j = e1("../internals/indexed-object"), _ = e1("../internals/to-object"), x = e1("../internals/to-length"), w = e1("../internals/array-species-create"), S = [].push;
                t.exports = {
                    forEach: o(0),
                    map: o(1),
                    filter: o(2),
                    some: o(3),
                    every: o(4),
                    find: o(5),
                    findIndex: o(6)
                };
            },
            {
                "../internals/array-species-create": 25,
                "../internals/function-bind-context": 54,
                "../internals/indexed-object": 66,
                "../internals/to-length": 136,
                "../internals/to-object": 137
            }
        ],
        20: [
            function(e1, t, r) {
                "use strict";
                var n = e1("../internals/to-indexed-object"), s = e1("../internals/to-integer"), i = e1("../internals/to-length"), o = e1("../internals/array-method-is-strict"), e1 = e1("../internals/array-method-uses-to-length"), a = Math.min, l = [].lastIndexOf, u = !!l && 1 / [
                    1
                ].lastIndexOf(1, -0) < 0, o = o("lastIndexOf"), e1 = e1("indexOf", {
                    ACCESSORS: !0,
                    1: 0
                });
                t.exports = u || !o || !e1 ? function(e1) {
                    if (u) return l.apply(this, arguments) || 0;
                    var t = n(this), r = i(t.length), o = r - 1;
                    for((o = 1 < arguments.length ? a(o, s(arguments[1])) : o) < 0 && (o = r + o); 0 <= o; o--)if (o in t && t[o] === e1) return o || 0;
                    return -1;
                } : l;
            },
            {
                "../internals/array-method-is-strict": 22,
                "../internals/array-method-uses-to-length": 23,
                "../internals/to-indexed-object": 134,
                "../internals/to-integer": 135,
                "../internals/to-length": 136
            }
        ],
        21: [
            function(e1, t, r) {
                var o = e1("../internals/fails"), n = e1("../internals/well-known-symbol"), s = e1("../internals/engine-v8-version"), i = n("species");
                t.exports = function(t) {
                    return 51 <= s || !o(function() {
                        var e1 = [];
                        return (e1.constructor = {})[i] = function() {
                            return {
                                foo: 1
                            };
                        }, 1 !== e1[t](Boolean).foo;
                    });
                };
            },
            {
                "../internals/engine-v8-version": 48,
                "../internals/fails": 51,
                "../internals/well-known-symbol": 148
            }
        ],
        22: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/fails");
                t.exports = function(e1, t) {
                    var r = [][e1];
                    return !!r && o(function() {
                        r.call(null, t || function() {
                            throw 1;
                        }, 1);
                    });
                };
            },
            {
                "../internals/fails": 51
            }
        ],
        23: [
            function(e1, t, r) {
                function i(e1) {
                    throw e1;
                }
                var a = e1("../internals/descriptors"), l = e1("../internals/fails"), u = e1("../internals/has"), c = Object.defineProperty, d = {};
                t.exports = function(e1, t) {
                    var r, o, n, s;
                    return u(d, e1) ? d[e1] : (r = [][e1], o = !!u(t = t || {}, "ACCESSORS") && t.ACCESSORS, n = u(t, 0) ? t[0] : i, s = u(t, 1) ? t[1] : void 0, d[e1] = !!r && !l(function() {
                        if (o && !a) return !0;
                        var e1 = {
                            length: -1
                        };
                        o ? c(e1, 1, {
                            enumerable: !0,
                            get: i
                        }) : e1[1] = 1, r.call(e1, n, s);
                    }));
                };
            },
            {
                "../internals/descriptors": 43,
                "../internals/fails": 51,
                "../internals/has": 60
            }
        ],
        24: [
            function(e1, t, r) {
                function o(u) {
                    return function(e1, t, r, o) {
                        c(t);
                        var n = d(e1), s = f(n), i = h(n.length), a = u ? i - 1 : 0, l = u ? -1 : 1;
                        if (r < 2) for(;;){
                            if (a in s) {
                                o = s[a], a += l;
                                break;
                            }
                            if (a += l, u ? a < 0 : i <= a) throw TypeError("Reduce of empty array with no initial value");
                        }
                        for(; u ? 0 <= a : a < i; a += l)a in s && (o = t(o, s[a], a, n));
                        return o;
                    };
                }
                var c = e1("../internals/a-function"), d = e1("../internals/to-object"), f = e1("../internals/indexed-object"), h = e1("../internals/to-length");
                t.exports = {
                    left: o(!1),
                    right: o(!0)
                };
            },
            {
                "../internals/a-function": 5,
                "../internals/indexed-object": 66,
                "../internals/to-length": 136,
                "../internals/to-object": 137
            }
        ],
        25: [
            function(e1, t, r) {
                var o = e1("../internals/is-object"), n = e1("../internals/is-array"), s = e1("../internals/well-known-symbol")("species");
                t.exports = function(e1, t) {
                    var r;
                    return new (void 0 === (r = n(e1) && ("function" == typeof (r = e1.constructor) && (r === Array || n(r.prototype)) || o(r) && null === (r = r[s])) ? void 0 : r) ? Array : r)(0 === t ? 0 : t);
                };
            },
            {
                "../internals/is-array": 72,
                "../internals/is-object": 74,
                "../internals/well-known-symbol": 148
            }
        ],
        26: [
            function(e1, t, r) {
                var n = e1("../internals/an-object");
                t.exports = function(t, e1, r, o) {
                    try {
                        return o ? e1(n(r)[0], r[1]) : e1(r);
                    } catch (e1) {
                        o = t.return;
                        throw void 0 !== o && n(o.call(t)), e1;
                    }
                };
            },
            {
                "../internals/an-object": 10
            }
        ],
        27: [
            function(e1, t, r) {
                var n = e1("../internals/well-known-symbol")("iterator"), s = !1;
                try {
                    var o = 0, i = {
                        next: function() {
                            return {
                                done: !!o++
                            };
                        },
                        return: function() {
                            s = !0;
                        }
                    };
                    i[n] = function() {
                        return this;
                    }, Array.from(i, function() {
                        throw 2;
                    });
                } catch (e1) {}
                t.exports = function(e1, t) {
                    if (!t && !s) return !1;
                    var r = !1;
                    try {
                        var o = {};
                        o[n] = function() {
                            return {
                                next: function() {
                                    return {
                                        done: r = !0
                                    };
                                }
                            };
                        }, e1(o);
                    } catch (e1) {}
                    return r;
                };
            },
            {
                "../internals/well-known-symbol": 148
            }
        ],
        28: [
            function(e1, t, r) {
                var o = {}.toString;
                t.exports = function(e1) {
                    return o.call(e1).slice(8, -1);
                };
            },
            {}
        ],
        29: [
            function(e1, t, r) {
                var o = e1("../internals/to-string-tag-support"), n = e1("../internals/classof-raw"), s = e1("../internals/well-known-symbol")("toStringTag"), i = "Arguments" == n(function() {
                    return arguments;
                }());
                t.exports = o ? n : function(e1) {
                    var t;
                    return void 0 === e1 ? "Undefined" : null === e1 ? "Null" : "string" == typeof (t = function(e1, t) {
                        try {
                            return e1[t];
                        } catch (e1) {}
                    }(e1 = Object(e1), s)) ? t : i ? n(e1) : "Object" == (t = n(e1)) && "function" == typeof e1.callee ? "Arguments" : t;
                };
            },
            {
                "../internals/classof-raw": 28,
                "../internals/to-string-tag-support": 141,
                "../internals/well-known-symbol": 148
            }
        ],
        30: [
            function(e1, t, r) {
                "use strict";
                var u = e1("../internals/object-define-property").f, c = e1("../internals/object-create"), d = e1("../internals/redefine-all"), f = e1("../internals/function-bind-context"), h = e1("../internals/an-instance"), p = e1("../internals/iterate"), i = e1("../internals/define-iterator"), a = e1("../internals/set-species"), m = e1("../internals/descriptors"), y = e1("../internals/internal-metadata").fastKey, e1 = e1("../internals/internal-state"), g = e1.set, v = e1.getterFor;
                t.exports = {
                    getConstructor: function(e1, r, o, n) {
                        function s(e1, t, r) {
                            var o, n = l(e1), s = i(e1, t);
                            return s ? s.value = r : (n.last = s = {
                                index: o = y(t, !0),
                                key: t,
                                value: r,
                                previous: t = n.last,
                                next: void 0,
                                removed: !1
                            }, n.first || (n.first = s), t && (t.next = s), m ? n.size++ : e1.size++, "F" !== o && (n.index[o] = s)), e1;
                        }
                        function i(e1, t) {
                            var r, e1 = l(e1), o = y(t);
                            if ("F" !== o) return e1.index[o];
                            for(r = e1.first; r; r = r.next)if (r.key == t) return r;
                        }
                        var a = e1(function(e1, t) {
                            h(e1, a, r), g(e1, {
                                type: r,
                                index: c(null),
                                first: void 0,
                                last: void 0,
                                size: 0
                            }), m || (e1.size = 0), null != t && p(t, e1[n], e1, o);
                        }), l = v(r);
                        return d(a.prototype, {
                            clear: function() {
                                for(var e1 = l(this), t = e1.index, r = e1.first; r;)r.removed = !0, r.previous && (r.previous = r.previous.next = void 0), delete t[r.index], r = r.next;
                                e1.first = e1.last = void 0, m ? e1.size = 0 : this.size = 0;
                            },
                            delete: function(e1) {
                                var t, r, o = l(this), e1 = i(this, e1);
                                return e1 && (t = e1.next, r = e1.previous, delete o.index[e1.index], e1.removed = !0, r && (r.next = t), t && (t.previous = r), o.first == e1 && (o.first = t), o.last == e1 && (o.last = r), m ? o.size-- : this.size--), !!e1;
                            },
                            forEach: function(e1) {
                                for(var t, r = l(this), o = f(e1, 1 < arguments.length ? arguments[1] : void 0, 3); t = t ? t.next : r.first;)for(o(t.value, t.key, this); t && t.removed;)t = t.previous;
                            },
                            has: function(e1) {
                                return !!i(this, e1);
                            }
                        }), d(a.prototype, o ? {
                            get: function(e1) {
                                e1 = i(this, e1);
                                return e1 && e1.value;
                            },
                            set: function(e1, t) {
                                return s(this, 0 === e1 ? 0 : e1, t);
                            }
                        } : {
                            add: function(e1) {
                                return s(this, e1 = 0 === e1 ? 0 : e1, e1);
                            }
                        }), m && u(a.prototype, "size", {
                            get: function() {
                                return l(this).size;
                            }
                        }), a;
                    },
                    setStrong: function(e1, t, r) {
                        var o = t + " Iterator", n = v(t), s = v(o);
                        i(e1, t, function(e1, t) {
                            g(this, {
                                type: o,
                                target: e1,
                                state: n(e1),
                                kind: t,
                                last: void 0
                            });
                        }, function() {
                            for(var e1 = s(this), t = e1.kind, r = e1.last; r && r.removed;)r = r.previous;
                            return e1.target && (e1.last = r = r ? r.next : e1.state.first) ? "keys" == t ? {
                                value: r.key,
                                done: !1
                            } : "values" == t ? {
                                value: r.value,
                                done: !1
                            } : {
                                value: [
                                    r.key,
                                    r.value
                                ],
                                done: !1
                            } : {
                                value: e1.target = void 0,
                                done: !0
                            };
                        }, r ? "entries" : "values", !r, !0), a(t);
                    }
                };
            },
            {
                "../internals/an-instance": 9,
                "../internals/define-iterator": 41,
                "../internals/descriptors": 43,
                "../internals/function-bind-context": 54,
                "../internals/internal-metadata": 69,
                "../internals/internal-state": 70,
                "../internals/iterate": 77,
                "../internals/object-create": 90,
                "../internals/object-define-property": 92,
                "../internals/redefine-all": 107,
                "../internals/set-species": 116
            }
        ],
        31: [
            function(e1, t, r) {
                "use strict";
                function l(e1) {
                    return e1.frozen || (e1.frozen = new o);
                }
                function o() {
                    this.entries = [];
                }
                function n(e1, t) {
                    return i(e1.entries, function(e1) {
                        return e1[0] === t;
                    });
                }
                var u = e1("../internals/redefine-all"), c = e1("../internals/internal-metadata").getWeakData, d = e1("../internals/an-object"), f = e1("../internals/is-object"), h = e1("../internals/an-instance"), p = e1("../internals/iterate"), s = e1("../internals/array-iteration"), m = e1("../internals/has"), e1 = e1("../internals/internal-state"), y = e1.set, g = e1.getterFor, i = s.find, a = s.findIndex, v = 0;
                o.prototype = {
                    get: function(e1) {
                        e1 = n(this, e1);
                        if (e1) return e1[1];
                    },
                    has: function(e1) {
                        return !!n(this, e1);
                    },
                    set: function(e1, t) {
                        var r = n(this, e1);
                        r ? r[1] = t : this.entries.push([
                            e1,
                            t
                        ]);
                    },
                    delete: function(t) {
                        var e1 = a(this.entries, function(e1) {
                            return e1[0] === t;
                        });
                        return ~e1 && this.entries.splice(e1, 1), !!~e1;
                    }
                }, t.exports = {
                    getConstructor: function(e1, r, o, n) {
                        function s(e1, t, r) {
                            var o = a(e1), n = c(d(t), !0);
                            return !0 === n ? l(o).set(t, r) : n[o.id] = r, e1;
                        }
                        var i = e1(function(e1, t) {
                            h(e1, i, r), y(e1, {
                                type: r,
                                id: v++,
                                frozen: void 0
                            }), null != t && p(t, e1[n], e1, o);
                        }), a = g(r);
                        return u(i.prototype, {
                            delete: function(e1) {
                                var t, r = a(this);
                                return !!f(e1) && (!0 === (t = c(e1)) ? l(r).delete(e1) : t && m(t, r.id) && delete t[r.id]);
                            },
                            has: function(e1) {
                                var t, r = a(this);
                                return !!f(e1) && (!0 === (t = c(e1)) ? l(r).has(e1) : t && m(t, r.id));
                            }
                        }), u(i.prototype, o ? {
                            get: function(e1) {
                                var t, r = a(this);
                                if (f(e1)) return !0 === (t = c(e1)) ? l(r).get(e1) : t ? t[r.id] : void 0;
                            },
                            set: function(e1, t) {
                                return s(this, e1, t);
                            }
                        } : {
                            add: function(e1) {
                                return s(this, e1, !0);
                            }
                        }), i;
                    }
                };
            },
            {
                "../internals/an-instance": 9,
                "../internals/an-object": 10,
                "../internals/array-iteration": 19,
                "../internals/has": 60,
                "../internals/internal-metadata": 69,
                "../internals/internal-state": 70,
                "../internals/is-object": 74,
                "../internals/iterate": 77,
                "../internals/redefine-all": 107
            }
        ],
        32: [
            function(e1, t, r) {
                "use strict";
                var y = e1("../internals/export"), g = e1("../internals/global"), v = e1("../internals/is-forced"), b = e1("../internals/redefine"), j = e1("../internals/internal-metadata"), _ = e1("../internals/iterate"), x = e1("../internals/an-instance"), w = e1("../internals/is-object"), S = e1("../internals/fails"), E = e1("../internals/check-correctness-of-iteration"), M = e1("../internals/set-to-string-tag"), T = e1("../internals/inherit-if-required");
                t.exports = function(r, e1, t) {
                    function o(e1) {
                        var r = h[e1];
                        b(h, e1, "add" == e1 ? function(e1) {
                            return r.call(this, 0 === e1 ? 0 : e1), this;
                        } : "delete" == e1 ? function(e1) {
                            return !(c && !w(e1)) && r.call(this, 0 === e1 ? 0 : e1);
                        } : "get" == e1 ? function(e1) {
                            return c && !w(e1) ? void 0 : r.call(this, 0 === e1 ? 0 : e1);
                        } : "has" == e1 ? function(e1) {
                            return !(c && !w(e1)) && r.call(this, 0 === e1 ? 0 : e1);
                        } : function(e1, t) {
                            return r.call(this, 0 === e1 ? 0 : e1, t), this;
                        });
                    }
                    var n, s, i, a, l, u = -1 !== r.indexOf("Map"), c = -1 !== r.indexOf("Weak"), d = u ? "set" : "add", f = g[r], h = f && f.prototype, p = f, m = {};
                    return v(r, "function" != typeof f || !(c || h.forEach && !S(function() {
                        (new f).entries().next();
                    }))) ? (p = t.getConstructor(e1, r, u, d), j.REQUIRED = !0) : v(r, !0) && (s = (n = new p)[d](c ? {} : -0, 1) != n, i = S(function() {
                        n.has(1);
                    }), a = E(function(e1) {
                        new f(e1);
                    }), l = !c && S(function() {
                        for(var e1 = new f, t = 5; t--;)e1[d](t, t);
                        return !e1.has(-0);
                    }), a || (((p = e1(function(e1, t) {
                        x(e1, p, r);
                        e1 = T(new f, e1, p);
                        return null != t && _(t, e1[d], e1, u), e1;
                    })).prototype = h).constructor = p), (i || l) && (o("delete"), o("has"), u && o("get")), (l || s) && o(d), c && h.clear && delete h.clear), m[r] = p, y({
                        global: !0,
                        forced: p != f
                    }, m), M(p, r), c || t.setStrong(p, r, u), p;
                };
            },
            {
                "../internals/an-instance": 9,
                "../internals/check-correctness-of-iteration": 27,
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/global": 59,
                "../internals/inherit-if-required": 67,
                "../internals/internal-metadata": 69,
                "../internals/is-forced": 73,
                "../internals/is-object": 74,
                "../internals/iterate": 77,
                "../internals/redefine": 108,
                "../internals/set-to-string-tag": 117
            }
        ],
        33: [
            function(e1, t, r) {
                var a = e1("../internals/has"), l = e1("../internals/own-keys"), u = e1("../internals/object-get-own-property-descriptor"), c = e1("../internals/object-define-property");
                t.exports = function(e1, t) {
                    for(var r = l(t), o = c.f, n = u.f, s = 0; s < r.length; s++){
                        var i = r[s];
                        a(e1, i) || o(e1, i, n(t, i));
                    }
                };
            },
            {
                "../internals/has": 60,
                "../internals/object-define-property": 92,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/own-keys": 103
            }
        ],
        34: [
            function(e1, t, r) {
                var o = e1("../internals/well-known-symbol")("match");
                t.exports = function(t) {
                    var r = /./;
                    try {
                        "/./"[t](r);
                    } catch (e1) {
                        try {
                            return r[o] = !1, "/./"[t](r);
                        } catch (e1) {}
                    }
                    return !1;
                };
            },
            {
                "../internals/well-known-symbol": 148
            }
        ],
        35: [
            function(e1, t, r) {
                e1 = e1("../internals/fails");
                t.exports = !e1(function() {
                    function e1() {}
                    return e1.prototype.constructor = null, Object.getPrototypeOf(new e1) !== e1.prototype;
                });
            },
            {
                "../internals/fails": 51
            }
        ],
        36: [
            function(e1, t, r) {
                var s = e1("../internals/require-object-coercible"), i = /"/g;
                t.exports = function(e1, t, r, o) {
                    var e1 = String(s(e1)), n = "<" + t;
                    return "" !== r && (n += " " + r + '="' + String(o).replace(i, "&quot;") + '"'), n + ">" + e1 + "</" + t + ">";
                };
            },
            {
                "../internals/require-object-coercible": 113
            }
        ],
        37: [
            function(e1, t, r) {
                "use strict";
                function o() {
                    return this;
                }
                var n = e1("../internals/iterators-core").IteratorPrototype, s = e1("../internals/object-create"), i = e1("../internals/create-property-descriptor"), a = e1("../internals/set-to-string-tag"), l = e1("../internals/iterators");
                t.exports = function(e1, t, r) {
                    t += " Iterator";
                    return e1.prototype = s(n, {
                        next: i(1, r)
                    }), a(e1, t, !1, !0), l[t] = o, e1;
                };
            },
            {
                "../internals/create-property-descriptor": 39,
                "../internals/iterators": 79,
                "../internals/iterators-core": 78,
                "../internals/object-create": 90,
                "../internals/set-to-string-tag": 117
            }
        ],
        38: [
            function(e1, t, r) {
                var o = e1("../internals/descriptors"), n = e1("../internals/object-define-property"), s = e1("../internals/create-property-descriptor");
                t.exports = o ? function(e1, t, r) {
                    return n.f(e1, t, s(1, r));
                } : function(e1, t, r) {
                    return e1[t] = r, e1;
                };
            },
            {
                "../internals/create-property-descriptor": 39,
                "../internals/descriptors": 43,
                "../internals/object-define-property": 92
            }
        ],
        39: [
            function(e1, t, r) {
                t.exports = function(e1, t) {
                    return {
                        enumerable: !(1 & e1),
                        configurable: !(2 & e1),
                        writable: !(4 & e1),
                        value: t
                    };
                };
            },
            {}
        ],
        40: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/to-primitive"), n = e1("../internals/object-define-property"), s = e1("../internals/create-property-descriptor");
                t.exports = function(e1, t, r) {
                    t = o(t);
                    t in e1 ? n.f(e1, t, s(0, r)) : e1[t] = r;
                };
            },
            {
                "../internals/create-property-descriptor": 39,
                "../internals/object-define-property": 92,
                "../internals/to-primitive": 140
            }
        ],
        41: [
            function(e1, t, r) {
                "use strict";
                function m() {
                    return this;
                }
                var y = e1("../internals/export"), g = e1("../internals/create-iterator-constructor"), v = e1("../internals/object-get-prototype-of"), b = e1("../internals/object-set-prototype-of"), j = e1("../internals/set-to-string-tag"), _ = e1("../internals/create-non-enumerable-property"), x = e1("../internals/redefine"), o = e1("../internals/well-known-symbol"), w = e1("../internals/is-pure"), S = e1("../internals/iterators"), e1 = e1("../internals/iterators-core"), E = e1.IteratorPrototype, M = e1.BUGGY_SAFARI_ITERATORS, T = o("iterator"), k = "values", O = "entries";
                t.exports = function(e1, t, r, o, n, s, i) {
                    g(r, t, o);
                    function a(e1) {
                        if (e1 === n && h) return h;
                        if (!M && e1 in d) return d[e1];
                        switch(e1){
                            case "keys":
                            case k:
                            case O:
                                return function() {
                                    return new r(this, e1);
                                };
                        }
                        return function() {
                            return new r(this);
                        };
                    }
                    var l, u, o = t + " Iterator", c = !1, d = e1.prototype, f = d[T] || d["@@iterator"] || n && d[n], h = !M && f || a(n), p = "Array" == t && d.entries || f;
                    if (p && (p = v(p.call(new e1)), E !== Object.prototype && p.next && (w || v(p) === E || (b ? b(p, E) : "function" != typeof p[T] && _(p, T, m)), j(p, o, !0, !0), w && (S[o] = m))), n == k && f && f.name !== k && (c = !0, h = function() {
                        return f.call(this);
                    }), w && !i || d[T] === h || _(d, T, h), S[t] = h, n) {
                        if (l = {
                            values: a(k),
                            keys: s ? h : a("keys"),
                            entries: a(O)
                        }, i) for(u in l)!M && !c && u in d || x(d, u, l[u]);
                        else y({
                            target: t,
                            proto: !0,
                            forced: M || c
                        }, l);
                    }
                    return l;
                };
            },
            {
                "../internals/create-iterator-constructor": 37,
                "../internals/create-non-enumerable-property": 38,
                "../internals/export": 50,
                "../internals/is-pure": 75,
                "../internals/iterators": 79,
                "../internals/iterators-core": 78,
                "../internals/object-get-prototype-of": 97,
                "../internals/object-set-prototype-of": 101,
                "../internals/redefine": 108,
                "../internals/set-to-string-tag": 117,
                "../internals/well-known-symbol": 148
            }
        ],
        42: [
            function(e1, t, r) {
                var o = e1("../internals/path"), n = e1("../internals/has"), s = e1("../internals/well-known-symbol-wrapped"), i = e1("../internals/object-define-property").f;
                t.exports = function(e1) {
                    var t = o.Symbol || (o.Symbol = {});
                    n(t, e1) || i(t, e1, {
                        value: s.f(e1)
                    });
                };
            },
            {
                "../internals/has": 60,
                "../internals/object-define-property": 92,
                "../internals/path": 104,
                "../internals/well-known-symbol-wrapped": 147
            }
        ],
        43: [
            function(e1, t, r) {
                e1 = e1("../internals/fails");
                t.exports = !e1(function() {
                    return 7 != Object.defineProperty({}, 1, {
                        get: function() {
                            return 7;
                        }
                    })[1];
                });
            },
            {
                "../internals/fails": 51
            }
        ],
        44: [
            function(e1, t, r) {
                var o = e1("../internals/global"), e1 = e1("../internals/is-object"), n = o.document, s = e1(n) && e1(n.createElement);
                t.exports = function(e1) {
                    return s ? n.createElement(e1) : {};
                };
            },
            {
                "../internals/global": 59,
                "../internals/is-object": 74
            }
        ],
        45: [
            function(e1, t, r) {
                t.exports = {
                    CSSRuleList: 0,
                    CSSStyleDeclaration: 0,
                    CSSValueList: 0,
                    ClientRectList: 0,
                    DOMRectList: 0,
                    DOMStringList: 0,
                    DOMTokenList: 1,
                    DataTransferItemList: 0,
                    FileList: 0,
                    HTMLAllCollection: 0,
                    HTMLCollection: 0,
                    HTMLFormElement: 0,
                    HTMLSelectElement: 0,
                    MediaList: 0,
                    MimeTypeArray: 0,
                    NamedNodeMap: 0,
                    NodeList: 1,
                    PaintRequestList: 0,
                    Plugin: 0,
                    PluginArray: 0,
                    SVGLengthList: 0,
                    SVGNumberList: 0,
                    SVGPathSegList: 0,
                    SVGPointList: 0,
                    SVGStringList: 0,
                    SVGTransformList: 0,
                    SourceBufferList: 0,
                    StyleSheetList: 0,
                    TextTrackCueList: 0,
                    TextTrackList: 0,
                    TouchList: 0
                };
            },
            {}
        ],
        46: [
            function(e1, t, r) {
                e1 = e1("../internals/engine-user-agent");
                t.exports = /(iphone|ipod|ipad).*applewebkit/i.test(e1);
            },
            {
                "../internals/engine-user-agent": 47
            }
        ],
        47: [
            function(e1, t, r) {
                e1 = e1("../internals/get-built-in");
                t.exports = e1("navigator", "userAgent") || "";
            },
            {
                "../internals/get-built-in": 56
            }
        ],
        48: [
            function(e1, t, r) {
                var o, n, s = e1("../internals/global"), e1 = e1("../internals/engine-user-agent"), s = s.process, s = s && s.versions, s = s && s.v8;
                s ? n = (o = s.split("."))[0] + o[1] : e1 && (!(o = e1.match(/Edge\/(\d+)/)) || 74 <= o[1]) && (o = e1.match(/Chrome\/(\d+)/)) && (n = o[1]), t.exports = n && +n;
            },
            {
                "../internals/engine-user-agent": 47,
                "../internals/global": 59
            }
        ],
        49: [
            function(e1, t, r) {
                t.exports = [
                    "constructor",
                    "hasOwnProperty",
                    "isPrototypeOf",
                    "propertyIsEnumerable",
                    "toLocaleString",
                    "toString",
                    "valueOf"
                ];
            },
            {}
        ],
        50: [
            function(e1, t, r) {
                var u = e1("../internals/global"), c = e1("../internals/object-get-own-property-descriptor").f, d = e1("../internals/create-non-enumerable-property"), f = e1("../internals/redefine"), h = e1("../internals/set-global"), p = e1("../internals/copy-constructor-properties"), m = e1("../internals/is-forced");
                t.exports = function(e1, t) {
                    var r, o, n, s = e1.target, i = e1.global, a = e1.stat, l = i ? u : a ? u[s] || h(s, {}) : (u[s] || {}).prototype;
                    if (l) for(r in t){
                        if (o = t[r], n = e1.noTargetGet ? (n = c(l, r)) && n.value : l[r], !m(i ? r : s + (a ? "." : "#") + r, e1.forced) && void 0 !== n) {
                            if (typeof o == typeof n) continue;
                            p(o, n);
                        }
                        (e1.sham || n && n.sham) && d(o, "sham", !0), f(l, r, o, e1);
                    }
                };
            },
            {
                "../internals/copy-constructor-properties": 33,
                "../internals/create-non-enumerable-property": 38,
                "../internals/global": 59,
                "../internals/is-forced": 73,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/redefine": 108,
                "../internals/set-global": 115
            }
        ],
        51: [
            function(e1, t, r) {
                t.exports = function(e1) {
                    try {
                        return !!e1();
                    } catch (e1) {
                        return !0;
                    }
                };
            },
            {}
        ],
        52: [
            function(e1, t, r) {
                "use strict";
                e1("../modules/es.regexp.exec");
                var u = e1("../internals/redefine"), c = e1("../internals/fails"), d = e1("../internals/well-known-symbol"), f = e1("../internals/regexp-exec"), h = e1("../internals/create-non-enumerable-property"), p = d("species"), m = !c(function() {
                    var e1 = /./;
                    return e1.exec = function() {
                        var e1 = [];
                        return e1.groups = {
                            a: "7"
                        }, e1;
                    }, "7" !== "".replace(e1, "$<a>");
                }), y = "$0" === "a".replace(/./, "$0"), e1 = d("replace"), g = !!/./[e1] && "" === /./[e1]("a", "$0"), v = !c(function() {
                    var e1 = /(?:)/, t = e1.exec, e1 = (e1.exec = function() {
                        return t.apply(this, arguments);
                    }, "ab".split(e1));
                    return 2 !== e1.length || "a" !== e1[0] || "b" !== e1[1];
                });
                t.exports = function(r, e1, t, o) {
                    var s, n, i = d(r), a = !c(function() {
                        var e1 = {};
                        return e1[i] = function() {
                            return 7;
                        }, 7 != ""[r](e1);
                    }), l = a && !c(function() {
                        var e1 = !1, t = /a/;
                        return "split" === r && ((t = {
                            constructor: {}
                        }).constructor[p] = function() {
                            return t;
                        }, t.flags = "", t[i] = /./[i]), t.exec = function() {
                            return e1 = !0, null;
                        }, t[i](""), !e1;
                    });
                    a && l && ("replace" !== r || m && y && !g) && ("split" !== r || v) || (s = /./[i], t = (l = t(i, ""[r], function(e1, t, r, o, n) {
                        return t.exec === f ? a && !n ? {
                            done: !0,
                            value: s.call(t, r, o)
                        } : {
                            done: !0,
                            value: e1.call(r, t, o)
                        } : {
                            done: !1
                        };
                    }, {
                        REPLACE_KEEPS_$0: y,
                        REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: g
                    }))[0], n = l[1], u(String.prototype, r, t), u(RegExp.prototype, i, 2 == e1 ? function(e1, t) {
                        return n.call(e1, this, t);
                    } : function(e1) {
                        return n.call(e1, this);
                    })), o && h(RegExp.prototype[i], "sham", !0);
                };
            },
            {
                "../internals/create-non-enumerable-property": 38,
                "../internals/fails": 51,
                "../internals/redefine": 108,
                "../internals/regexp-exec": 110,
                "../internals/well-known-symbol": 148,
                "../modules/es.regexp.exec": 185
            }
        ],
        53: [
            function(e1, t, r) {
                e1 = e1("../internals/fails");
                t.exports = !e1(function() {
                    return Object.isExtensible(Object.preventExtensions({}));
                });
            },
            {
                "../internals/fails": 51
            }
        ],
        54: [
            function(e1, t, r) {
                var s = e1("../internals/a-function");
                t.exports = function(o, n, e1) {
                    if (s(o), void 0 === n) return o;
                    switch(e1){
                        case 0:
                            return function() {
                                return o.call(n);
                            };
                        case 1:
                            return function(e1) {
                                return o.call(n, e1);
                            };
                        case 2:
                            return function(e1, t) {
                                return o.call(n, e1, t);
                            };
                        case 3:
                            return function(e1, t, r) {
                                return o.call(n, e1, t, r);
                            };
                    }
                    return function() {
                        return o.apply(n, arguments);
                    };
                };
            },
            {
                "../internals/a-function": 5
            }
        ],
        55: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/a-function"), n = e1("../internals/is-object"), c = [].slice, d = {};
                t.exports = Function.bind || function(i) {
                    var a = o(this), l = c.call(arguments, 1), u = function() {
                        var e1 = l.concat(c.call(arguments));
                        if (this instanceof u) {
                            var t = a, r = e1.length, o = e1;
                            if (!(r in d)) {
                                for(var n = [], s = 0; s < r; s++)n[s] = "a[" + s + "]";
                                d[r] = Function("C,a", "return new C(" + n.join(",") + ")");
                            }
                            return d[r](t, o);
                        }
                        return a.apply(i, e1);
                    };
                    return n(a.prototype) && (u.prototype = a.prototype), u;
                };
            },
            {
                "../internals/a-function": 5,
                "../internals/is-object": 74
            }
        ],
        56: [
            function(e1, t, r) {
                function o(e1) {
                    return "function" == typeof e1 ? e1 : void 0;
                }
                var n = e1("../internals/path"), s = e1("../internals/global");
                t.exports = function(e1, t) {
                    return arguments.length < 2 ? o(n[e1]) || o(s[e1]) : n[e1] && n[e1][t] || s[e1] && s[e1][t];
                };
            },
            {
                "../internals/global": 59,
                "../internals/path": 104
            }
        ],
        57: [
            function(e1, t, r) {
                var o = e1("../internals/classof"), n = e1("../internals/iterators"), s = e1("../internals/well-known-symbol")("iterator");
                t.exports = function(e1) {
                    if (null != e1) return e1[s] || e1["@@iterator"] || n[o(e1)];
                };
            },
            {
                "../internals/classof": 29,
                "../internals/iterators": 79,
                "../internals/well-known-symbol": 148
            }
        ],
        58: [
            function(e1, t, r) {
                var o = e1("../internals/an-object"), n = e1("../internals/get-iterator-method");
                t.exports = function(e1) {
                    var t = n(e1);
                    if ("function" != typeof t) throw TypeError(String(e1) + " is not iterable");
                    return o(t.call(e1));
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/get-iterator-method": 57
            }
        ],
        59: [
            function(e1, r, t) {
                (function(e1) {
                    function t(e1) {
                        return e1 && e1.Math == Math && e1;
                    }
                    r.exports = t("object" == typeof globalThis && globalThis) || t("object" == typeof window && window) || t("object" == typeof self && self) || t("object" == typeof e1 && e1) || Function("return this")();
                }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
            },
            {}
        ],
        60: [
            function(e1, t, r) {
                var o = {}.hasOwnProperty;
                t.exports = function(e1, t) {
                    return o.call(e1, t);
                };
            },
            {}
        ],
        61: [
            function(e1, t, r) {
                t.exports = {};
            },
            {}
        ],
        62: [
            function(e1, t, r) {
                var o = e1("../internals/global");
                t.exports = function(e1, t) {
                    var r = o.console;
                    r && r.error && (1 === arguments.length ? r.error(e1) : r.error(e1, t));
                };
            },
            {
                "../internals/global": 59
            }
        ],
        63: [
            function(e1, t, r) {
                e1 = e1("../internals/get-built-in");
                t.exports = e1("document", "documentElement");
            },
            {
                "../internals/get-built-in": 56
            }
        ],
        64: [
            function(e1, t, r) {
                var o = e1("../internals/descriptors"), n = e1("../internals/fails"), s = e1("../internals/document-create-element");
                t.exports = !o && !n(function() {
                    return 7 != Object.defineProperty(s("div"), "a", {
                        get: function() {
                            return 7;
                        }
                    }).a;
                });
            },
            {
                "../internals/descriptors": 43,
                "../internals/document-create-element": 44,
                "../internals/fails": 51
            }
        ],
        65: [
            function(e1, t, r) {
                var f = Math.abs, h = Math.pow, p = Math.floor, m = Math.log, y = Math.LN2;
                t.exports = {
                    pack: function(e1, t, r) {
                        var o, n, s, i = new Array(r), a = 8 * r - t - 1, r = (1 << a) - 1, l = r >> 1, u = 23 === t ? h(2, -24) - h(2, -77) : 0, c = e1 < 0 || 0 === e1 && 1 / e1 < 0 ? 1 : 0, d = 0;
                        for((e1 = f(e1)) != e1 || e1 === 1 / 0 ? (n = e1 != e1 ? 1 : 0, o = r) : (o = p(m(e1) / y), e1 * (s = h(2, -o)) < 1 && (o--, s *= 2), 2 <= (e1 += 1 <= o + l ? u / s : u * h(2, 1 - l)) * s && (o++, s /= 2), r <= o + l ? (n = 0, o = r) : 1 <= o + l ? (n = (e1 * s - 1) * h(2, t), o += l) : (n = e1 * h(2, l - 1) * h(2, t), o = 0)); 8 <= t; i[d++] = 255 & n, n /= 256, t -= 8);
                        for(o = o << t | n, a += t; 0 < a; i[d++] = 255 & o, o /= 256, a -= 8);
                        return i[--d] |= 128 * c, i;
                    },
                    unpack: function(e1, t) {
                        var r, o = e1.length, n = 8 * o - t - 1, s = (1 << n) - 1, i = s >> 1, a = n - 7, l = o - 1, n = e1[l--], u = 127 & n;
                        for(n >>= 7; 0 < a; u = 256 * u + e1[l], l--, a -= 8);
                        for(r = u & (1 << -a) - 1, u >>= -a, a += t; 0 < a; r = 256 * r + e1[l], l--, a -= 8);
                        if (0 === u) u = 1 - i;
                        else {
                            if (u === s) return r ? NaN : n ? -1 / 0 : 1 / 0;
                            r += h(2, t), u -= i;
                        }
                        return (n ? -1 : 1) * r * h(2, u - t);
                    }
                };
            },
            {}
        ],
        66: [
            function(e1, t, r) {
                var o = e1("../internals/fails"), n = e1("../internals/classof-raw"), s = "".split;
                t.exports = o(function() {
                    return !Object("z").propertyIsEnumerable(0);
                }) ? function(e1) {
                    return "String" == n(e1) ? s.call(e1, "") : Object(e1);
                } : Object;
            },
            {
                "../internals/classof-raw": 28,
                "../internals/fails": 51
            }
        ],
        67: [
            function(e1, t, r) {
                var o = e1("../internals/is-object"), n = e1("../internals/object-set-prototype-of");
                t.exports = function(e1, t, r) {
                    return n && "function" == typeof (t = t.constructor) && t !== r && o(t = t.prototype) && t !== r.prototype && n(e1, t), e1;
                };
            },
            {
                "../internals/is-object": 74,
                "../internals/object-set-prototype-of": 101
            }
        ],
        68: [
            function(e1, t, r) {
                var e1 = e1("../internals/shared-store"), o = Function.toString;
                "function" != typeof e1.inspectSource && (e1.inspectSource = function(e1) {
                    return o.call(e1);
                }), t.exports = e1.inspectSource;
            },
            {
                "../internals/shared-store": 119
            }
        ],
        69: [
            function(e1, t, r) {
                function o(e1) {
                    a(e1, c, {
                        value: {
                            objectID: "O" + ++d,
                            weakData: {}
                        }
                    });
                }
                var n = e1("../internals/hidden-keys"), s = e1("../internals/is-object"), i = e1("../internals/has"), a = e1("../internals/object-define-property").f, l = e1("../internals/uid"), u = e1("../internals/freezing"), c = l("meta"), d = 0, f = Object.isExtensible || function() {
                    return !0;
                }, h = t.exports = {
                    REQUIRED: !1,
                    fastKey: function(e1, t) {
                        if (!s(e1)) return "symbol" == typeof e1 ? e1 : ("string" == typeof e1 ? "S" : "P") + e1;
                        if (!i(e1, c)) {
                            if (!f(e1)) return "F";
                            if (!t) return "E";
                            o(e1);
                        }
                        return e1[c].objectID;
                    },
                    getWeakData: function(e1, t) {
                        if (!i(e1, c)) {
                            if (!f(e1)) return !0;
                            if (!t) return !1;
                            o(e1);
                        }
                        return e1[c].weakData;
                    },
                    onFreeze: function(e1) {
                        return u && h.REQUIRED && f(e1) && !i(e1, c) && o(e1), e1;
                    }
                };
                n[c] = !0;
            },
            {
                "../internals/freezing": 53,
                "../internals/has": 60,
                "../internals/hidden-keys": 61,
                "../internals/is-object": 74,
                "../internals/object-define-property": 92,
                "../internals/uid": 145
            }
        ],
        70: [
            function(e1, t, r) {
                var o, n, s, i, a, l, u, c, d = e1("../internals/native-weak-map"), f = e1("../internals/global"), h = e1("../internals/is-object"), p = e1("../internals/create-non-enumerable-property"), m = e1("../internals/has"), y = e1("../internals/shared-key"), e1 = e1("../internals/hidden-keys"), f = f.WeakMap;
                u = d ? (o = new f, n = o.get, s = o.has, i = o.set, a = function(e1, t) {
                    return i.call(o, e1, t), t;
                }, l = function(e1) {
                    return n.call(o, e1) || {};
                }, function(e1) {
                    return s.call(o, e1);
                }) : (e1[c = y("state")] = !0, a = function(e1, t) {
                    return p(e1, c, t), t;
                }, l = function(e1) {
                    return m(e1, c) ? e1[c] : {};
                }, function(e1) {
                    return m(e1, c);
                }), t.exports = {
                    set: a,
                    get: l,
                    has: u,
                    enforce: function(e1) {
                        return u(e1) ? l(e1) : a(e1, {});
                    },
                    getterFor: function(t) {
                        return function(e1) {
                            if (h(e1) && (e1 = l(e1)).type === t) return e1;
                            throw TypeError("Incompatible receiver, " + t + " required");
                        };
                    }
                };
            },
            {
                "../internals/create-non-enumerable-property": 38,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/hidden-keys": 61,
                "../internals/is-object": 74,
                "../internals/native-weak-map": 85,
                "../internals/shared-key": 118
            }
        ],
        71: [
            function(e1, t, r) {
                var o = e1("../internals/well-known-symbol"), n = e1("../internals/iterators"), s = o("iterator"), i = Array.prototype;
                t.exports = function(e1) {
                    return void 0 !== e1 && (n.Array === e1 || i[s] === e1);
                };
            },
            {
                "../internals/iterators": 79,
                "../internals/well-known-symbol": 148
            }
        ],
        72: [
            function(e1, t, r) {
                var o = e1("../internals/classof-raw");
                t.exports = Array.isArray || function(e1) {
                    return "Array" == o(e1);
                };
            },
            {
                "../internals/classof-raw": 28
            }
        ],
        73: [
            function(e1, t, r) {
                function o(e1, t) {
                    return (e1 = a[i(e1)]) == u || e1 != l && ("function" == typeof t ? n(t) : !!t);
                }
                var n = e1("../internals/fails"), s = /#|\.prototype\./, i = o.normalize = function(e1) {
                    return String(e1).replace(s, ".").toLowerCase();
                }, a = o.data = {}, l = o.NATIVE = "N", u = o.POLYFILL = "P";
                t.exports = o;
            },
            {
                "../internals/fails": 51
            }
        ],
        74: [
            function(e1, t, r) {
                t.exports = function(e1) {
                    return "object" == typeof e1 ? null !== e1 : "function" == typeof e1;
                };
            },
            {}
        ],
        75: [
            function(e1, t, r) {
                t.exports = !1;
            },
            {}
        ],
        76: [
            function(e1, t, r) {
                var o = e1("../internals/is-object"), n = e1("../internals/classof-raw"), s = e1("../internals/well-known-symbol")("match");
                t.exports = function(e1) {
                    var t;
                    return o(e1) && (void 0 !== (t = e1[s]) ? !!t : "RegExp" == n(e1));
                };
            },
            {
                "../internals/classof-raw": 28,
                "../internals/is-object": 74,
                "../internals/well-known-symbol": 148
            }
        ],
        77: [
            function(e1, t, r) {
                function f(e1, t) {
                    this.stopped = e1, this.result = t;
                }
                var h = e1("../internals/an-object"), p = e1("../internals/is-array-iterator-method"), m = e1("../internals/to-length"), y = e1("../internals/function-bind-context"), g = e1("../internals/get-iterator-method"), v = e1("../internals/call-with-safe-iteration-closing");
                (t.exports = function(e1, t, r, o, n) {
                    var s, i, a, l, u, c, d = y(t, r, o ? 2 : 1);
                    if (n) s = e1;
                    else {
                        if ("function" != typeof (t = g(e1))) throw TypeError("Target is not iterable");
                        if (p(t)) {
                            for(i = 0, a = m(e1.length); i < a; i++)if ((l = o ? d(h(c = e1[i])[0], c[1]) : d(e1[i])) && l instanceof f) return l;
                            return new f(!1);
                        }
                        s = t.call(e1);
                    }
                    for(u = s.next; !(c = u.call(s)).done;)if ("object" == typeof (l = v(s, d, c.value, o)) && l && l instanceof f) return l;
                    return new f(!1);
                }).stop = function(e1) {
                    return new f(!0, e1);
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/call-with-safe-iteration-closing": 26,
                "../internals/function-bind-context": 54,
                "../internals/get-iterator-method": 57,
                "../internals/is-array-iterator-method": 71,
                "../internals/to-length": 136
            }
        ],
        78: [
            function(e1, t, r) {
                "use strict";
                var o, n, s = e1("../internals/object-get-prototype-of"), i = e1("../internals/create-non-enumerable-property"), a = e1("../internals/has"), l = e1("../internals/well-known-symbol"), e1 = e1("../internals/is-pure"), l = l("iterator"), u = !1;
                [].keys && ("next" in (n = [].keys()) ? (s = s(s(n))) !== Object.prototype && (o = s) : u = !0), null == o && (o = {}), e1 || a(o, l) || i(o, l, function() {
                    return this;
                }), t.exports = {
                    IteratorPrototype: o,
                    BUGGY_SAFARI_ITERATORS: u
                };
            },
            {
                "../internals/create-non-enumerable-property": 38,
                "../internals/has": 60,
                "../internals/is-pure": 75,
                "../internals/object-get-prototype-of": 97,
                "../internals/well-known-symbol": 148
            }
        ],
        79: [
            function(e1, t, r) {
                t.exports = {};
            },
            {}
        ],
        80: [
            function(e1, t, r) {
                t.exports = Math.sign || function(e1) {
                    return 0 == (e1 = +e1) || e1 != e1 ? e1 : e1 < 0 ? -1 : 1;
                };
            },
            {}
        ],
        81: [
            function(e1, t, r) {
                var o, n, s, i, a, l, u, c, d = e1("../internals/global"), f = e1("../internals/object-get-own-property-descriptor").f, h = e1("../internals/classof-raw"), p = e1("../internals/task").set, e1 = e1("../internals/engine-is-ios"), m = d.MutationObserver || d.WebKitMutationObserver, y = d.process, g = d.Promise, v = "process" == h(y), h = f(d, "queueMicrotask"), f = h && h.value;
                f || (o = function() {
                    var e1, t;
                    for(v && (e1 = y.domain) && e1.exit(); n;){
                        t = n.fn, n = n.next;
                        try {
                            t();
                        } catch (e1) {
                            throw n ? i() : s = void 0, e1;
                        }
                    }
                    s = void 0, e1 && e1.enter();
                }, i = v ? function() {
                    y.nextTick(o);
                } : m && !e1 ? (a = !0, l = document.createTextNode(""), new m(o).observe(l, {
                    characterData: !0
                }), function() {
                    l.data = a = !a;
                }) : g && g.resolve ? (u = g.resolve(void 0), c = u.then, function() {
                    c.call(u, o);
                }) : function() {
                    p.call(d, o);
                }), t.exports = f || function(e1) {
                    e1 = {
                        fn: e1,
                        next: void 0
                    };
                    s && (s.next = e1), n || (n = e1, i()), s = e1;
                };
            },
            {
                "../internals/classof-raw": 28,
                "../internals/engine-is-ios": 46,
                "../internals/global": 59,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/task": 130
            }
        ],
        82: [
            function(e1, t, r) {
                e1 = e1("../internals/global");
                t.exports = e1.Promise;
            },
            {
                "../internals/global": 59
            }
        ],
        83: [
            function(e1, t, r) {
                e1 = e1("../internals/fails");
                t.exports = !!Object.getOwnPropertySymbols && !e1(function() {
                    return !String(Symbol());
                });
            },
            {
                "../internals/fails": 51
            }
        ],
        84: [
            function(e1, t, r) {
                var o = e1("../internals/fails"), n = e1("../internals/well-known-symbol"), s = e1("../internals/is-pure"), i = n("iterator");
                t.exports = !o(function() {
                    var e1 = new URL("b?a=1&b=2&c=3", "http://a"), r = e1.searchParams, o = "";
                    return e1.pathname = "c%20d", r.forEach(function(e1, t) {
                        r.delete("b"), o += t + e1;
                    }), s && !e1.toJSON || !r.sort || "http://a/c%20d?a=1&c=3" !== e1.href || "3" !== r.get("c") || "a=1" !== String(new URLSearchParams("?a=1")) || !r[i] || "a" !== new URL("https://a@b").username || "b" !== new URLSearchParams(new URLSearchParams("a=b")).get("a") || "xn--e1aybc" !== new URL("http://\u0442\u0435\u0441\u0442").host || "#%D0%B1" !== new URL("http://a#\u0431").hash || "a1c3" !== o || "x" !== new URL("http://x", void 0).host;
                });
            },
            {
                "../internals/fails": 51,
                "../internals/is-pure": 75,
                "../internals/well-known-symbol": 148
            }
        ],
        85: [
            function(e1, t, r) {
                var o = e1("../internals/global"), e1 = e1("../internals/inspect-source"), o = o.WeakMap;
                t.exports = "function" == typeof o && /native code/.test(e1(o));
            },
            {
                "../internals/global": 59,
                "../internals/inspect-source": 68
            }
        ],
        86: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    var r, o;
                    this.promise = new e1(function(e1, t) {
                        if (void 0 !== r || void 0 !== o) throw TypeError("Bad Promise constructor");
                        r = e1, o = t;
                    }), this.resolve = n(r), this.reject = n(o);
                }
                var n = e1("../internals/a-function");
                t.exports.f = function(e1) {
                    return new o(e1);
                };
            },
            {
                "../internals/a-function": 5
            }
        ],
        87: [
            function(e1, t, r) {
                var o = e1("../internals/is-regexp");
                t.exports = function(e1) {
                    if (o(e1)) throw TypeError("The method doesn't accept regular expressions");
                    return e1;
                };
            },
            {
                "../internals/is-regexp": 76
            }
        ],
        88: [
            function(e1, t, r) {
                var o = e1("../internals/global").isFinite;
                t.exports = Number.isFinite || function(e1) {
                    return "number" == typeof e1 && o(e1);
                };
            },
            {
                "../internals/global": 59
            }
        ],
        89: [
            function(e1, t, r) {
                "use strict";
                var f = e1("../internals/descriptors"), o = e1("../internals/fails"), h = e1("../internals/object-keys"), p = e1("../internals/object-get-own-property-symbols"), m = e1("../internals/object-property-is-enumerable"), y = e1("../internals/to-object"), g = e1("../internals/indexed-object"), n = Object.assign, s = Object.defineProperty;
                t.exports = !n || o(function() {
                    var e1, t, r, o;
                    return !(!f || 1 === n({
                        b: 1
                    }, n(s({}, "a", {
                        enumerable: !0,
                        get: function() {
                            s(this, "b", {
                                value: 3,
                                enumerable: !1
                            });
                        }
                    }), {
                        b: 2
                    })).b) || (t = {}, o = "abcdefghijklmnopqrst", (e1 = {})[r = Symbol()] = 7, o.split("").forEach(function(e1) {
                        t[e1] = e1;
                    }), 7 != n({}, e1)[r] || h(n({}, t)).join("") != o);
                }) ? function(e1, t) {
                    for(var r = y(e1), o = arguments.length, n = 1, s = p.f, i = m.f; n < o;)for(var a, l = g(arguments[n++]), u = s ? h(l).concat(s(l)) : h(l), c = u.length, d = 0; d < c;)a = u[d++], f && !i.call(l, a) || (r[a] = l[a]);
                    return r;
                } : n;
            },
            {
                "../internals/descriptors": 43,
                "../internals/fails": 51,
                "../internals/indexed-object": 66,
                "../internals/object-get-own-property-symbols": 96,
                "../internals/object-keys": 99,
                "../internals/object-property-is-enumerable": 100,
                "../internals/to-object": 137
            }
        ],
        90: [
            function(e1, t, r) {
                function o() {}
                var n, s = e1("../internals/an-object"), i = e1("../internals/object-define-properties"), a = e1("../internals/enum-bug-keys"), l = e1("../internals/hidden-keys"), u = e1("../internals/html"), c = e1("../internals/document-create-element"), e1 = e1("../internals/shared-key"), d = "prototype", f = "script", h = e1("IE_PROTO"), p = function(e1) {
                    return "<" + f + ">" + e1 + "</" + f + ">";
                }, m = function() {
                    try {
                        n = document.domain && new ActiveXObject("htmlfile");
                    } catch (e1) {}
                    m = n ? ((e1 = n).write(p("")), e1.close(), t = e1.parentWindow.Object, e1 = null, t) : (e1 = c("iframe"), t = "java" + f + ":", e1.style.display = "none", u.appendChild(e1), e1.src = String(t), (t = e1.contentWindow.document).open(), t.write(p("document.F=Object")), t.close(), t.F);
                    for(var e2, t, r = a.length; r--;)delete m[d][a[r]];
                    return m();
                };
                l[h] = !0, t.exports = Object.create || function(e1, t) {
                    var r;
                    return null !== e1 ? (o[d] = s(e1), r = new o, o[d] = null, r[h] = e1) : r = m(), void 0 === t ? r : i(r, t);
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/document-create-element": 44,
                "../internals/enum-bug-keys": 49,
                "../internals/hidden-keys": 61,
                "../internals/html": 63,
                "../internals/object-define-properties": 91,
                "../internals/shared-key": 118
            }
        ],
        91: [
            function(e1, t, r) {
                var o = e1("../internals/descriptors"), i = e1("../internals/object-define-property"), a = e1("../internals/an-object"), l = e1("../internals/object-keys");
                t.exports = o ? Object.defineProperties : function(e1, t) {
                    a(e1);
                    for(var r, o = l(t), n = o.length, s = 0; s < n;)i.f(e1, r = o[s++], t[r]);
                    return e1;
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/descriptors": 43,
                "../internals/object-define-property": 92,
                "../internals/object-keys": 99
            }
        ],
        92: [
            function(e1, t, r) {
                var o = e1("../internals/descriptors"), n = e1("../internals/ie8-dom-define"), s = e1("../internals/an-object"), i = e1("../internals/to-primitive"), a = Object.defineProperty;
                r.f = o ? a : function(e1, t, r) {
                    if (s(e1), t = i(t, !0), s(r), n) try {
                        return a(e1, t, r);
                    } catch (e1) {}
                    if ("get" in r || "set" in r) throw TypeError("Accessors not supported");
                    return "value" in r && (e1[t] = r.value), e1;
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/descriptors": 43,
                "../internals/ie8-dom-define": 64,
                "../internals/to-primitive": 140
            }
        ],
        93: [
            function(e1, t, r) {
                var o = e1("../internals/descriptors"), n = e1("../internals/object-property-is-enumerable"), s = e1("../internals/create-property-descriptor"), i = e1("../internals/to-indexed-object"), a = e1("../internals/to-primitive"), l = e1("../internals/has"), u = e1("../internals/ie8-dom-define"), c = Object.getOwnPropertyDescriptor;
                r.f = o ? c : function(e1, t) {
                    if (e1 = i(e1), t = a(t, !0), u) try {
                        return c(e1, t);
                    } catch (e1) {}
                    if (l(e1, t)) return s(!n.f.call(e1, t), e1[t]);
                };
            },
            {
                "../internals/create-property-descriptor": 39,
                "../internals/descriptors": 43,
                "../internals/has": 60,
                "../internals/ie8-dom-define": 64,
                "../internals/object-property-is-enumerable": 100,
                "../internals/to-indexed-object": 134,
                "../internals/to-primitive": 140
            }
        ],
        94: [
            function(e1, t, r) {
                var o = e1("../internals/to-indexed-object"), n = e1("../internals/object-get-own-property-names").f, s = {}.toString, i = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
                t.exports.f = function(e1) {
                    if (!i || "[object Window]" != s.call(e1)) return n(o(e1));
                    try {
                        return n(e1);
                    } catch (e1) {
                        return i.slice();
                    }
                };
            },
            {
                "../internals/object-get-own-property-names": 95,
                "../internals/to-indexed-object": 134
            }
        ],
        95: [
            function(e1, t, r) {
                var o = e1("../internals/object-keys-internal"), n = e1("../internals/enum-bug-keys").concat("length", "prototype");
                r.f = Object.getOwnPropertyNames || function(e1) {
                    return o(e1, n);
                };
            },
            {
                "../internals/enum-bug-keys": 49,
                "../internals/object-keys-internal": 98
            }
        ],
        96: [
            function(e1, t, r) {
                r.f = Object.getOwnPropertySymbols;
            },
            {}
        ],
        97: [
            function(e1, t, r) {
                var o = e1("../internals/has"), n = e1("../internals/to-object"), s = e1("../internals/shared-key"), e1 = e1("../internals/correct-prototype-getter"), i = s("IE_PROTO"), a = Object.prototype;
                t.exports = e1 ? Object.getPrototypeOf : function(e1) {
                    return e1 = n(e1), o(e1, i) ? e1[i] : "function" == typeof e1.constructor && e1 instanceof e1.constructor ? e1.constructor.prototype : e1 instanceof Object ? a : null;
                };
            },
            {
                "../internals/correct-prototype-getter": 35,
                "../internals/has": 60,
                "../internals/shared-key": 118,
                "../internals/to-object": 137
            }
        ],
        98: [
            function(e1, t, r) {
                var i = e1("../internals/has"), a = e1("../internals/to-indexed-object"), l = e1("../internals/array-includes").indexOf, u = e1("../internals/hidden-keys");
                t.exports = function(e1, t) {
                    var r, o = a(e1), n = 0, s = [];
                    for(r in o)!i(u, r) && i(o, r) && s.push(r);
                    for(; t.length > n;)!i(o, r = t[n++]) || ~l(s, r) || s.push(r);
                    return s;
                };
            },
            {
                "../internals/array-includes": 18,
                "../internals/has": 60,
                "../internals/hidden-keys": 61,
                "../internals/to-indexed-object": 134
            }
        ],
        99: [
            function(e1, t, r) {
                var o = e1("../internals/object-keys-internal"), n = e1("../internals/enum-bug-keys");
                t.exports = Object.keys || function(e1) {
                    return o(e1, n);
                };
            },
            {
                "../internals/enum-bug-keys": 49,
                "../internals/object-keys-internal": 98
            }
        ],
        100: [
            function(e1, t, r) {
                "use strict";
                var o = {}.propertyIsEnumerable, n = Object.getOwnPropertyDescriptor, s = n && !o.call({
                    1: 2
                }, 1);
                r.f = s ? function(e1) {
                    e1 = n(this, e1);
                    return !!e1 && e1.enumerable;
                } : o;
            },
            {}
        ],
        101: [
            function(e1, t, r) {
                var n = e1("../internals/an-object"), s = e1("../internals/a-possible-prototype");
                t.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
                    var r, o = !1, e1 = {};
                    try {
                        (r = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(e1, []), o = e1 instanceof Array;
                    } catch (e1) {}
                    return function(e1, t) {
                        return n(e1), s(t), o ? r.call(e1, t) : e1.__proto__ = t, e1;
                    };
                }() : void 0);
            },
            {
                "../internals/a-possible-prototype": 6,
                "../internals/an-object": 10
            }
        ],
        102: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/to-string-tag-support"), n = e1("../internals/classof");
                t.exports = o ? ({}).toString : function() {
                    return "[object " + n(this) + "]";
                };
            },
            {
                "../internals/classof": 29,
                "../internals/to-string-tag-support": 141
            }
        ],
        103: [
            function(e1, t, r) {
                var o = e1("../internals/get-built-in"), n = e1("../internals/object-get-own-property-names"), s = e1("../internals/object-get-own-property-symbols"), i = e1("../internals/an-object");
                t.exports = o("Reflect", "ownKeys") || function(e1) {
                    var t = n.f(i(e1)), r = s.f;
                    return r ? t.concat(r(e1)) : t;
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/get-built-in": 56,
                "../internals/object-get-own-property-names": 95,
                "../internals/object-get-own-property-symbols": 96
            }
        ],
        104: [
            function(e1, t, r) {
                e1 = e1("../internals/global");
                t.exports = e1;
            },
            {
                "../internals/global": 59
            }
        ],
        105: [
            function(e1, t, r) {
                t.exports = function(e1) {
                    try {
                        return {
                            error: !1,
                            value: e1()
                        };
                    } catch (e1) {
                        return {
                            error: !0,
                            value: e1
                        };
                    }
                };
            },
            {}
        ],
        106: [
            function(e1, t, r) {
                var o = e1("../internals/an-object"), n = e1("../internals/is-object"), s = e1("../internals/new-promise-capability");
                t.exports = function(e1, t) {
                    return o(e1), n(t) && t.constructor === e1 ? t : ((0, (e1 = s.f(e1)).resolve)(t), e1.promise);
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/is-object": 74,
                "../internals/new-promise-capability": 86
            }
        ],
        107: [
            function(e1, t, r) {
                var n = e1("../internals/redefine");
                t.exports = function(e1, t, r) {
                    for(var o in t)n(e1, o, t[o], r);
                    return e1;
                };
            },
            {
                "../internals/redefine": 108
            }
        ],
        108: [
            function(e1, t, r) {
                var i = e1("../internals/global"), a = e1("../internals/create-non-enumerable-property"), l = e1("../internals/has"), u = e1("../internals/set-global"), o = e1("../internals/inspect-source"), e1 = e1("../internals/internal-state"), n = e1.get, c = e1.enforce, d = String(String).split("String");
                (t.exports = function(e1, t, r, o) {
                    var n = !!o && !!o.unsafe, s = !!o && !!o.enumerable, o = !!o && !!o.noTargetGet;
                    "function" == typeof r && ("string" != typeof t || l(r, "name") || a(r, "name", t), c(r).source = d.join("string" == typeof t ? t : "")), e1 === i ? s ? e1[t] = r : u(t, r) : (n ? !o && e1[t] && (s = !0) : delete e1[t], s ? e1[t] = r : a(e1, t, r));
                })(Function.prototype, "toString", function() {
                    return "function" == typeof this && n(this).source || o(this);
                });
            },
            {
                "../internals/create-non-enumerable-property": 38,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/inspect-source": 68,
                "../internals/internal-state": 70,
                "../internals/set-global": 115
            }
        ],
        109: [
            function(e1, t, r) {
                var o = e1("./classof-raw"), n = e1("./regexp-exec");
                t.exports = function(e1, t) {
                    var r = e1.exec;
                    if ("function" == typeof r) {
                        r = r.call(e1, t);
                        if ("object" != typeof r) throw TypeError("RegExp exec method returned something other than an Object or null");
                        return r;
                    }
                    if ("RegExp" !== o(e1)) throw TypeError("RegExp#exec called on incompatible receiver");
                    return n.call(e1, t);
                };
            },
            {
                "./classof-raw": 28,
                "./regexp-exec": 110
            }
        ],
        110: [
            function(e1, t, r) {
                "use strict";
                var o, n, d = e1("./regexp-flags"), e1 = e1("./regexp-sticky-helpers"), f = RegExp.prototype.exec, h = String.prototype.replace, s = f, p = (o = /a/, n = /b*/g, f.call(o, "a"), f.call(n, "a"), 0 !== o.lastIndex || 0 !== n.lastIndex), m = e1.UNSUPPORTED_Y || e1.BROKEN_CARET, y = void 0 !== /()??/.exec("")[1];
                t.exports = s = p || y || m ? function(e1) {
                    var t, r, o, n, s = this, i = m && s.sticky, a = d.call(s), l = s.source, u = 0, c = e1;
                    return i && (-1 === (a = a.replace("y", "")).indexOf("g") && (a += "g"), c = String(e1).slice(s.lastIndex), 0 < s.lastIndex && (!s.multiline || s.multiline && "\n" !== e1[s.lastIndex - 1]) && (l = "(?: " + l + ")", c = " " + c, u++), r = new RegExp("^(?:" + l + ")", a)), y && (r = new RegExp("^" + l + "$(?!\\s)", a)), p && (t = s.lastIndex), o = f.call(i ? r : s, c), i ? o ? (o.input = o.input.slice(u), o[0] = o[0].slice(u), o.index = s.lastIndex, s.lastIndex += o[0].length) : s.lastIndex = 0 : p && o && (s.lastIndex = s.global ? o.index + o[0].length : t), y && o && 1 < o.length && h.call(o[0], r, function() {
                        for(n = 1; n < arguments.length - 2; n++)void 0 === arguments[n] && (o[n] = void 0);
                    }), o;
                } : s;
            },
            {
                "./regexp-flags": 111,
                "./regexp-sticky-helpers": 112
            }
        ],
        111: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/an-object");
                t.exports = function() {
                    var e1 = o(this), t = "";
                    return e1.global && (t += "g"), e1.ignoreCase && (t += "i"), e1.multiline && (t += "m"), e1.dotAll && (t += "s"), e1.unicode && (t += "u"), e1.sticky && (t += "y"), t;
                };
            },
            {
                "../internals/an-object": 10
            }
        ],
        112: [
            function(e1, t, r) {
                "use strict";
                e1 = e1("./fails");
                function o(e1, t) {
                    return RegExp(e1, t);
                }
                r.UNSUPPORTED_Y = e1(function() {
                    var e1 = o("a", "y");
                    return e1.lastIndex = 2, null != e1.exec("abcd");
                }), r.BROKEN_CARET = e1(function() {
                    var e1 = o("^r", "gy");
                    return e1.lastIndex = 2, null != e1.exec("str");
                });
            },
            {
                "./fails": 51
            }
        ],
        113: [
            function(e1, t, r) {
                t.exports = function(e1) {
                    if (null == e1) throw TypeError("Can't call method on " + e1);
                    return e1;
                };
            },
            {}
        ],
        114: [
            function(e1, t, r) {
                t.exports = Object.is || function(e1, t) {
                    return e1 === t ? 0 !== e1 || 1 / e1 == 1 / t : e1 != e1 && t != t;
                };
            },
            {}
        ],
        115: [
            function(e1, t, r) {
                var o = e1("../internals/global"), n = e1("../internals/create-non-enumerable-property");
                t.exports = function(t, r) {
                    try {
                        n(o, t, r);
                    } catch (e1) {
                        o[t] = r;
                    }
                    return r;
                };
            },
            {
                "../internals/create-non-enumerable-property": 38,
                "../internals/global": 59
            }
        ],
        116: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/get-built-in"), n = e1("../internals/object-define-property"), s = e1("../internals/well-known-symbol"), i = e1("../internals/descriptors"), a = s("species");
                t.exports = function(e1) {
                    var e1 = o(e1), t = n.f;
                    i && e1 && !e1[a] && t(e1, a, {
                        configurable: !0,
                        get: function() {
                            return this;
                        }
                    });
                };
            },
            {
                "../internals/descriptors": 43,
                "../internals/get-built-in": 56,
                "../internals/object-define-property": 92,
                "../internals/well-known-symbol": 148
            }
        ],
        117: [
            function(e1, t, r) {
                var o = e1("../internals/object-define-property").f, n = e1("../internals/has"), s = e1("../internals/well-known-symbol")("toStringTag");
                t.exports = function(e1, t, r) {
                    e1 && !n(e1 = r ? e1 : e1.prototype, s) && o(e1, s, {
                        configurable: !0,
                        value: t
                    });
                };
            },
            {
                "../internals/has": 60,
                "../internals/object-define-property": 92,
                "../internals/well-known-symbol": 148
            }
        ],
        118: [
            function(e1, t, r) {
                var o = e1("../internals/shared"), n = e1("../internals/uid"), s = o("keys");
                t.exports = function(e1) {
                    return s[e1] || (s[e1] = n(e1));
                };
            },
            {
                "../internals/shared": 120,
                "../internals/uid": 145
            }
        ],
        119: [
            function(e1, t, r) {
                var o = e1("../internals/global"), e1 = e1("../internals/set-global"), n = "__core-js_shared__", o = o[n] || e1(n, {});
                t.exports = o;
            },
            {
                "../internals/global": 59,
                "../internals/set-global": 115
            }
        ],
        120: [
            function(e1, t, r) {
                var o = e1("../internals/is-pure"), n = e1("../internals/shared-store");
                (t.exports = function(e1, t) {
                    return n[e1] || (n[e1] = void 0 !== t ? t : {});
                })("versions", []).push({
                    version: "3.6.5",
                    mode: o ? "pure" : "global",
                    copyright: "\xa9 2020 Denis Pushkarev (zloirock.ru)"
                });
            },
            {
                "../internals/is-pure": 75,
                "../internals/shared-store": 119
            }
        ],
        121: [
            function(e1, t, r) {
                var o = e1("../internals/an-object"), n = e1("../internals/a-function"), s = e1("../internals/well-known-symbol")("species");
                t.exports = function(e1, t) {
                    var e1 = o(e1).constructor;
                    return void 0 === e1 || null == (e1 = o(e1)[s]) ? t : n(e1);
                };
            },
            {
                "../internals/a-function": 5,
                "../internals/an-object": 10,
                "../internals/well-known-symbol": 148
            }
        ],
        122: [
            function(e1, t, r) {
                var o = e1("../internals/fails");
                t.exports = function(t) {
                    return o(function() {
                        var e1 = ""[t]('"');
                        return e1 !== e1.toLowerCase() || 3 < e1.split('"').length;
                    });
                };
            },
            {
                "../internals/fails": 51
            }
        ],
        123: [
            function(e1, t, r) {
                function o(n) {
                    return function(e1, t) {
                        var r, e1 = String(i(e1)), t = s(t), o = e1.length;
                        return t < 0 || o <= t ? n ? "" : void 0 : (r = e1.charCodeAt(t)) < 55296 || 56319 < r || t + 1 === o || (o = e1.charCodeAt(t + 1)) < 56320 || 57343 < o ? n ? e1.charAt(t) : r : n ? e1.slice(t, t + 2) : o - 56320 + (r - 55296 << 10) + 65536;
                    };
                }
                var s = e1("../internals/to-integer"), i = e1("../internals/require-object-coercible");
                t.exports = {
                    codeAt: o(!1),
                    charAt: o(!0)
                };
            },
            {
                "../internals/require-object-coercible": 113,
                "../internals/to-integer": 135
            }
        ],
        124: [
            function(e1, t, r) {
                e1 = e1("../internals/engine-user-agent");
                t.exports = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(e1);
            },
            {
                "../internals/engine-user-agent": 47
            }
        ],
        125: [
            function(e1, t, r) {
                function o(n) {
                    return function(e1, t, r) {
                        var e1 = String(a(e1)), o = e1.length, r = void 0 === r ? " " : String(r), t = s(t);
                        return t <= o || "" == r ? e1 : ((o = i.call(r, l((t = t - o) / r.length))).length > t && (o = o.slice(0, t)), n ? e1 + o : o + e1);
                    };
                }
                var s = e1("../internals/to-length"), i = e1("../internals/string-repeat"), a = e1("../internals/require-object-coercible"), l = Math.ceil;
                t.exports = {
                    start: o(!1),
                    end: o(!0)
                };
            },
            {
                "../internals/require-object-coercible": 113,
                "../internals/string-repeat": 127,
                "../internals/to-length": 136
            }
        ],
        126: [
            function(e1, t, r) {
                "use strict";
                function g(e1) {
                    return e1 + 22 + 75 * (e1 < 26);
                }
                function s(e1) {
                    var t, r = [], o = (e1 = function(e1) {
                        for(var t = [], r = 0, o = e1.length; r < o;){
                            var n, s = e1.charCodeAt(r++);
                            55296 <= s && s <= 56319 && r < o ? 56320 == (64512 & (n = e1.charCodeAt(r++))) ? t.push(((1023 & s) << 10) + (1023 & n) + 65536) : (t.push(s), r--) : t.push(s);
                        }
                        return t;
                    }(e1)).length, n = 128, s = 0, i = 72;
                    for(c = 0; c < e1.length; c++)(t = e1[c]) < 128 && r.push(M(t));
                    var a = r.length, l = a;
                    for(a && r.push("-"); l < o;){
                        for(var u = v, c = 0; c < e1.length; c++)n <= (t = e1[c]) && t < u && (u = t);
                        var d = l + 1;
                        if (u - n > E((v - s) / d)) throw RangeError(w);
                        for(s += (u - n) * d, n = u, c = 0; c < e1.length; c++){
                            if ((t = e1[c]) < n && ++s > v) throw RangeError(w);
                            if (t == n) {
                                for(var f = s, h = b;; h += b){
                                    var p = h <= i ? 1 : i + j <= h ? j : h - i;
                                    if (f < p) break;
                                    var m = f - p, y = b - p;
                                    r.push(M(g(p + m % y))), f = E(m / y);
                                }
                                r.push(M(g(f))), i = function(e1, t, r) {
                                    var o = 0;
                                    for(e1 = r ? E(e1 / x) : e1 >> 1, e1 += E(e1 / t); S * j >> 1 < e1; o += b)e1 = E(e1 / S);
                                    return E(o + (S + 1) * e1 / (e1 + _));
                                }(s, d, l == a), s = 0, ++l;
                            }
                        }
                        ++s, ++n;
                    }
                    return r.join("");
                }
                var v = 2147483647, b = 36, j = 26, _ = 38, x = 700, i = /[^\0-\u007E]/, a = /[.\u3002\uFF0E\uFF61]/g, w = "Overflow: input needs wider integers to process", S = b - 1, E = Math.floor, M = String.fromCharCode;
                t.exports = function(e1) {
                    for(var t, r = [], o = e1.toLowerCase().replace(a, ".").split("."), n = 0; n < o.length; n++)t = o[n], r.push(i.test(t) ? "xn--" + s(t) : t);
                    return r.join(".");
                };
            },
            {}
        ],
        127: [
            function(e1, t, r) {
                "use strict";
                var n = e1("../internals/to-integer"), s = e1("../internals/require-object-coercible");
                t.exports = "".repeat || function(e1) {
                    var t = String(s(this)), r = "", o = n(e1);
                    if (o < 0 || o == 1 / 0) throw RangeError("Wrong number of repetitions");
                    for(; 0 < o; (o >>>= 1) && (t += t))1 & o && (r += t);
                    return r;
                };
            },
            {
                "../internals/require-object-coercible": 113,
                "../internals/to-integer": 135
            }
        ],
        128: [
            function(e1, t, r) {
                var o = e1("../internals/fails"), n = e1("../internals/whitespaces");
                t.exports = function(e1) {
                    return o(function() {
                        return !!n[e1]() || "\u200B\x85\u180E" != "\u200B\x85\u180E"[e1]() || n[e1].name !== e1;
                    });
                };
            },
            {
                "../internals/fails": 51,
                "../internals/whitespaces": 149
            }
        ],
        129: [
            function(e1, t, r) {
                function o(t) {
                    return function(e1) {
                        e1 = String(n(e1));
                        return 1 & t && (e1 = e1.replace(s, "")), e1 = 2 & t ? e1.replace(i, "") : e1;
                    };
                }
                var n = e1("../internals/require-object-coercible"), e1 = "[" + e1("../internals/whitespaces") + "]", s = RegExp("^" + e1 + e1 + "*"), i = RegExp(e1 + e1 + "*$");
                t.exports = {
                    start: o(1),
                    end: o(2),
                    trim: o(3)
                };
            },
            {
                "../internals/require-object-coercible": 113,
                "../internals/whitespaces": 149
            }
        ],
        130: [
            function(e1, t, r) {
                function o(e1) {
                    return function() {
                        x(e1);
                    };
                }
                function n(e1) {
                    x(e1.data);
                }
                function s(e1) {
                    a.postMessage(e1 + "", h.protocol + "//" + h.host);
                }
                var i, a = e1("../internals/global"), l = e1("../internals/fails"), u = e1("../internals/classof-raw"), c = e1("../internals/function-bind-context"), d = e1("../internals/html"), f = e1("../internals/document-create-element"), e1 = e1("../internals/engine-is-ios"), h = a.location, p = a.setImmediate, m = a.clearImmediate, y = a.process, g = a.MessageChannel, v = a.Dispatch, b = 0, j = {}, _ = "onreadystatechange", x = function(e1) {
                    var t;
                    j.hasOwnProperty(e1) && (t = j[e1], delete j[e1], t());
                };
                p && m || (p = function(e1) {
                    for(var t = [], r = 1; r < arguments.length;)t.push(arguments[r++]);
                    return j[++b] = function() {
                        ("function" == typeof e1 ? e1 : Function(e1)).apply(void 0, t);
                    }, i(b), b;
                }, m = function(e1) {
                    delete j[e1];
                }, "process" == u(y) ? i = function(e1) {
                    y.nextTick(o(e1));
                } : v && v.now ? i = function(e1) {
                    v.now(o(e1));
                } : g && !e1 ? (e1 = (u = new g).port2, u.port1.onmessage = n, i = c(e1.postMessage, e1, 1)) : !a.addEventListener || "function" != typeof postMessage || a.importScripts || l(s) || "file:" === h.protocol ? i = _ in f("script") ? function(e1) {
                    d.appendChild(f("script"))[_] = function() {
                        d.removeChild(this), x(e1);
                    };
                } : function(e1) {
                    setTimeout(o(e1), 0);
                } : (i = s, a.addEventListener("message", n, !1))), t.exports = {
                    set: p,
                    clear: m
                };
            },
            {
                "../internals/classof-raw": 28,
                "../internals/document-create-element": 44,
                "../internals/engine-is-ios": 46,
                "../internals/fails": 51,
                "../internals/function-bind-context": 54,
                "../internals/global": 59,
                "../internals/html": 63
            }
        ],
        131: [
            function(e1, t, r) {
                var o = e1("../internals/classof-raw");
                t.exports = function(e1) {
                    if ("number" != typeof e1 && "Number" != o(e1)) throw TypeError("Incorrect invocation");
                    return +e1;
                };
            },
            {
                "../internals/classof-raw": 28
            }
        ],
        132: [
            function(e1, t, r) {
                var o = e1("../internals/to-integer"), n = Math.max, s = Math.min;
                t.exports = function(e1, t) {
                    e1 = o(e1);
                    return e1 < 0 ? n(e1 + t, 0) : s(e1, t);
                };
            },
            {
                "../internals/to-integer": 135
            }
        ],
        133: [
            function(e1, t, r) {
                var o = e1("../internals/to-integer"), n = e1("../internals/to-length");
                t.exports = function(e1) {
                    if (void 0 === e1) return 0;
                    var e1 = o(e1), t = n(e1);
                    if (e1 !== t) throw RangeError("Wrong length or index");
                    return t;
                };
            },
            {
                "../internals/to-integer": 135,
                "../internals/to-length": 136
            }
        ],
        134: [
            function(e1, t, r) {
                var o = e1("../internals/indexed-object"), n = e1("../internals/require-object-coercible");
                t.exports = function(e1) {
                    return o(n(e1));
                };
            },
            {
                "../internals/indexed-object": 66,
                "../internals/require-object-coercible": 113
            }
        ],
        135: [
            function(e1, t, r) {
                var o = Math.ceil, n = Math.floor;
                t.exports = function(e1) {
                    return isNaN(e1 = +e1) ? 0 : (0 < e1 ? n : o)(e1);
                };
            },
            {}
        ],
        136: [
            function(e1, t, r) {
                var o = e1("../internals/to-integer"), n = Math.min;
                t.exports = function(e1) {
                    return 0 < e1 ? n(o(e1), 9007199254740991) : 0;
                };
            },
            {
                "../internals/to-integer": 135
            }
        ],
        137: [
            function(e1, t, r) {
                var o = e1("../internals/require-object-coercible");
                t.exports = function(e1) {
                    return Object(o(e1));
                };
            },
            {
                "../internals/require-object-coercible": 113
            }
        ],
        138: [
            function(e1, t, r) {
                var o = e1("../internals/to-positive-integer");
                t.exports = function(e1, t) {
                    e1 = o(e1);
                    if (e1 % t) throw RangeError("Wrong offset");
                    return e1;
                };
            },
            {
                "../internals/to-positive-integer": 139
            }
        ],
        139: [
            function(e1, t, r) {
                var o = e1("../internals/to-integer");
                t.exports = function(e1) {
                    e1 = o(e1);
                    if (e1 < 0) throw RangeError("The argument can't be less than 0");
                    return e1;
                };
            },
            {
                "../internals/to-integer": 135
            }
        ],
        140: [
            function(e1, t, r) {
                var n = e1("../internals/is-object");
                t.exports = function(e1, t) {
                    if (!n(e1)) return e1;
                    var r, o;
                    if (t && "function" == typeof (r = e1.toString) && !n(o = r.call(e1)) || "function" == typeof (r = e1.valueOf) && !n(o = r.call(e1)) || !t && "function" == typeof (r = e1.toString) && !n(o = r.call(e1))) return o;
                    throw TypeError("Can't convert object to primitive value");
                };
            },
            {
                "../internals/is-object": 74
            }
        ],
        141: [
            function(e1, t, r) {
                var o = {};
                o[e1("../internals/well-known-symbol")("toStringTag")] = "z", t.exports = "[object z]" === String(o);
            },
            {
                "../internals/well-known-symbol": 148
            }
        ],
        142: [
            function(e1, t, D) {
                "use strict";
                function h(e1, t) {
                    for(var r = 0, o = t.length, n = new (Q(e1))(o); r < o;)n[r] = t[r++];
                    return n;
                }
                function r(e1, t) {
                    M(e1, t, {
                        get: function() {
                            return E(this)[t];
                        }
                    });
                }
                function p(e1) {
                    return e1 instanceof k || "ArrayBuffer" == (e1 = B(e1)) || "SharedArrayBuffer" == e1;
                }
                function o(e1, t) {
                    return L(e1) && "symbol" != typeof t && t in e1 && String(+t) == String(t);
                }
                function n(e1, t) {
                    return o(e1, t = d(t, !0)) ? U(2, e1[t]) : X(e1, t);
                }
                function s(e1, t, r) {
                    return !(o(e1, t = d(t, !0)) && b(r) && f(r, "value")) || f(r, "get") || f(r, "set") || r.configurable || f(r, "writable") && !r.writable || f(r, "enumerable") && !r.enumerable ? M(e1, t, r) : (e1[t] = r.value, e1);
                }
                var a = e1("../internals/export"), l = e1("../internals/global"), i = e1("../internals/descriptors"), F = e1("../internals/typed-array-constructors-require-wrappers"), u = e1("../internals/array-buffer-view-core"), c = e1("../internals/array-buffer"), m = e1("../internals/an-instance"), U = e1("../internals/create-property-descriptor"), y = e1("../internals/create-non-enumerable-property"), N = e1("../internals/to-length"), g = e1("../internals/to-index"), v = e1("../internals/to-offset"), d = e1("../internals/to-primitive"), f = e1("../internals/has"), B = e1("../internals/classof"), b = e1("../internals/is-object"), G = e1("../internals/object-create"), j = e1("../internals/object-set-prototype-of"), V = e1("../internals/object-get-own-property-names").f, _ = e1("../internals/typed-array-from"), z = e1("../internals/array-iteration").forEach, H = e1("../internals/set-species"), x = e1("../internals/object-define-property"), w = e1("../internals/object-get-own-property-descriptor"), S = e1("../internals/internal-state"), W = e1("../internals/inherit-if-required"), E = S.get, q = S.set, M = x.f, X = w.f, Y = Math.round, T = l.RangeError, k = c.ArrayBuffer, Z = c.DataView, O = u.NATIVE_ARRAY_BUFFER_VIEWS, C = u.TYPED_ARRAY_TAG, A = u.TypedArray, P = u.TypedArrayPrototype, Q = u.aTypedArrayConstructor, L = u.isTypedArray, R = "BYTES_PER_ELEMENT", I = "Wrong length";
                i ? (O || (w.f = n, x.f = s, r(P, "buffer"), r(P, "byteOffset"), r(P, "byteLength"), r(P, "length")), a({
                    target: "Object",
                    stat: !0,
                    forced: !O
                }, {
                    getOwnPropertyDescriptor: n,
                    defineProperty: s
                }), t.exports = function(e1, t, n) {
                    function u(e1, o) {
                        M(e1, o, {
                            get: function() {
                                var e1 = this, t = o;
                                return (e1 = E(e1)).view[r](t * c + e1.byteOffset, !0);
                            },
                            set: function(e1) {
                                var t = this, r = o;
                                t = E(t), n && (e1 = (e1 = Y(e1)) < 0 ? 0 : 255 < e1 ? 255 : 255 & e1), t.view[s](r * c + t.byteOffset, e1, !0);
                            },
                            enumerable: !0
                        });
                    }
                    var c = e1.match(/\d+$/)[0] / 8, d = e1 + (n ? "Clamped" : "") + "Array", r = "get" + e1, s = "set" + e1, i = l[d], f = i, e1 = f && f.prototype, o = {};
                    O ? F && (f = t(function(e1, t, r, o) {
                        return m(e1, f, d), W(b(t) ? p(t) ? void 0 !== o ? new i(t, v(r, c), o) : void 0 !== r ? new i(t, v(r, c)) : new i(t) : L(t) ? h(f, t) : _.call(f, t) : new i(g(t)), e1, f);
                    }), j && j(f, A), z(V(i), function(e1) {
                        e1 in f || y(f, e1, i[e1]);
                    }), f.prototype = e1) : (f = t(function(e1, t, r, o) {
                        m(e1, f, d);
                        var n, s, i = 0, a = 0;
                        if (b(t)) {
                            if (!p(t)) return L(t) ? h(f, t) : _.call(f, t);
                            var l = t, a = v(r, c), r = t.byteLength;
                            if (void 0 === o) {
                                if (r % c) throw T(I);
                                if ((n = r - a) < 0) throw T(I);
                            } else if (r < (n = N(o) * c) + a) throw T(I);
                            s = n / c;
                        } else s = g(t), l = new k(n = s * c);
                        for(q(e1, {
                            buffer: l,
                            byteOffset: a,
                            byteLength: n,
                            length: s,
                            view: new Z(l)
                        }); i < s;)u(e1, i++);
                    }), j && j(f, A), e1 = f.prototype = G(P)), e1.constructor !== f && y(e1, "constructor", f), C && y(e1, C, d), o[d] = f, a({
                        global: !0,
                        forced: f != i,
                        sham: !O
                    }, o), R in f || y(f, R, c), R in e1 || y(e1, R, c), H(d);
                }) : t.exports = function() {};
            },
            {
                "../internals/an-instance": 9,
                "../internals/array-buffer": 13,
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19,
                "../internals/classof": 29,
                "../internals/create-non-enumerable-property": 38,
                "../internals/create-property-descriptor": 39,
                "../internals/descriptors": 43,
                "../internals/export": 50,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/inherit-if-required": 67,
                "../internals/internal-state": 70,
                "../internals/is-object": 74,
                "../internals/object-create": 90,
                "../internals/object-define-property": 92,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/object-get-own-property-names": 95,
                "../internals/object-set-prototype-of": 101,
                "../internals/set-species": 116,
                "../internals/to-index": 133,
                "../internals/to-length": 136,
                "../internals/to-offset": 138,
                "../internals/to-primitive": 140,
                "../internals/typed-array-constructors-require-wrappers": 143,
                "../internals/typed-array-from": 144
            }
        ],
        143: [
            function(e1, t, r) {
                var o = e1("../internals/global"), n = e1("../internals/fails"), s = e1("../internals/check-correctness-of-iteration"), e1 = e1("../internals/array-buffer-view-core").NATIVE_ARRAY_BUFFER_VIEWS, i = o.ArrayBuffer, a = o.Int8Array;
                t.exports = !e1 || !n(function() {
                    a(1);
                }) || !n(function() {
                    new a(-1);
                }) || !s(function(e1) {
                    new a, new a(null), new a(1.5), new a(e1);
                }, !0) || n(function() {
                    return 1 !== new a(new i(2), 1, void 0).length;
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/check-correctness-of-iteration": 27,
                "../internals/fails": 51,
                "../internals/global": 59
            }
        ],
        144: [
            function(e1, t, r) {
                var f = e1("../internals/to-object"), h = e1("../internals/to-length"), p = e1("../internals/get-iterator-method"), m = e1("../internals/is-array-iterator-method"), y = e1("../internals/function-bind-context"), g = e1("../internals/array-buffer-view-core").aTypedArrayConstructor;
                t.exports = function(e1) {
                    var t, r, o, n, s, i, a = f(e1), l = arguments.length, u = 1 < l ? arguments[1] : void 0, c = void 0 !== u, d = p(a);
                    if (null != d && !m(d)) for(i = (s = d.call(a)).next, a = []; !(n = i.call(s)).done;)a.push(n.value);
                    for(c && 2 < l && (u = y(u, arguments[2], 2)), r = h(a.length), o = new (g(this))(r), t = 0; t < r; t++)o[t] = c ? u(a[t], t) : a[t];
                    return o;
                };
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/function-bind-context": 54,
                "../internals/get-iterator-method": 57,
                "../internals/is-array-iterator-method": 71,
                "../internals/to-length": 136,
                "../internals/to-object": 137
            }
        ],
        145: [
            function(e1, t, r) {
                var o = 0, n = Math.random();
                t.exports = function(e1) {
                    return "Symbol(" + String(void 0 === e1 ? "" : e1) + ")_" + (++o + n).toString(36);
                };
            },
            {}
        ],
        146: [
            function(e1, t, r) {
                e1 = e1("../internals/native-symbol");
                t.exports = e1 && !Symbol.sham && "symbol" == typeof Symbol.iterator;
            },
            {
                "../internals/native-symbol": 83
            }
        ],
        147: [
            function(e1, t, r) {
                e1 = e1("../internals/well-known-symbol");
                r.f = e1;
            },
            {
                "../internals/well-known-symbol": 148
            }
        ],
        148: [
            function(e1, t, r) {
                var o = e1("../internals/global"), n = e1("../internals/shared"), s = e1("../internals/has"), i = e1("../internals/uid"), a = e1("../internals/native-symbol"), e1 = e1("../internals/use-symbol-as-uid"), l = n("wks"), u = o.Symbol, c = e1 ? u : u && u.withoutSetter || i;
                t.exports = function(e1) {
                    return s(l, e1) || (a && s(u, e1) ? l[e1] = u[e1] : l[e1] = c("Symbol." + e1)), l[e1];
                };
            },
            {
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/native-symbol": 83,
                "../internals/shared": 120,
                "../internals/uid": 145,
                "../internals/use-symbol-as-uid": 146
            }
        ],
        149: [
            function(e1, t, r) {
                t.exports = "	\n\v\f\r \xa0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
            },
            {}
        ],
        150: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/global"), s = e1("../internals/array-buffer"), e1 = e1("../internals/set-species"), i = "ArrayBuffer", s = s[i];
                o({
                    global: !0,
                    forced: n[i] !== s
                }, {
                    ArrayBuffer: s
                }), e1(i);
            },
            {
                "../internals/array-buffer": 13,
                "../internals/export": 50,
                "../internals/global": 59,
                "../internals/set-species": 116
            }
        ],
        151: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/fails"), d = e1("../internals/is-array"), f = e1("../internals/is-object"), h = e1("../internals/to-object"), p = e1("../internals/to-length"), m = e1("../internals/create-property"), y = e1("../internals/array-species-create"), s = e1("../internals/array-method-has-species-support"), i = e1("../internals/well-known-symbol"), e1 = e1("../internals/engine-v8-version"), g = i("isConcatSpreadable"), v = 9007199254740991, b = "Maximum allowed index exceeded", i = 51 <= e1 || !n(function() {
                    var e1 = [];
                    return e1[g] = !1, e1.concat()[0] !== e1;
                }), e1 = s("concat");
                o({
                    target: "Array",
                    proto: !0,
                    forced: !i || !e1
                }, {
                    concat: function(e1) {
                        for(var t, r, o, n, s, i = h(this), a = y(i, 0), l = 0, u = -1, c = arguments.length; u < c; u++)if (s = void 0, !f(n = o = -1 === u ? i : arguments[u]) || (void 0 !== (s = n[g]) ? !s : !d(n))) {
                            if (v <= l) throw TypeError(b);
                            m(a, l++, o);
                        } else {
                            if (r = p(o.length), v < l + r) throw TypeError(b);
                            for(t = 0; t < r; t++, l++)t in o && m(a, l, o[t]);
                        }
                        return a.length = l, a;
                    }
                });
            },
            {
                "../internals/array-method-has-species-support": 21,
                "../internals/array-species-create": 25,
                "../internals/create-property": 40,
                "../internals/engine-v8-version": 48,
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/is-array": 72,
                "../internals/is-object": 74,
                "../internals/to-length": 136,
                "../internals/to-object": 137,
                "../internals/well-known-symbol": 148
            }
        ],
        152: [
            function(e1, t, r) {
                var o = e1("../internals/export"), n = e1("../internals/array-copy-within"), e1 = e1("../internals/add-to-unscopables");
                o({
                    target: "Array",
                    proto: !0
                }, {
                    copyWithin: n
                }), e1("copyWithin");
            },
            {
                "../internals/add-to-unscopables": 7,
                "../internals/array-copy-within": 14,
                "../internals/export": 50
            }
        ],
        153: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/array-iteration").every, s = e1("../internals/array-method-is-strict"), e1 = e1("../internals/array-method-uses-to-length"), s = s("every"), e1 = e1("every");
                o({
                    target: "Array",
                    proto: !0,
                    forced: !s || !e1
                }, {
                    every: function(e1) {
                        return n(this, e1, 1 < arguments.length ? arguments[1] : void 0);
                    }
                });
            },
            {
                "../internals/array-iteration": 19,
                "../internals/array-method-is-strict": 22,
                "../internals/array-method-uses-to-length": 23,
                "../internals/export": 50
            }
        ],
        154: [
            function(e1, t, r) {
                var o = e1("../internals/export"), n = e1("../internals/array-fill"), e1 = e1("../internals/add-to-unscopables");
                o({
                    target: "Array",
                    proto: !0
                }, {
                    fill: n
                }), e1("fill");
            },
            {
                "../internals/add-to-unscopables": 7,
                "../internals/array-fill": 15,
                "../internals/export": 50
            }
        ],
        155: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/array-iteration").filter, s = e1("../internals/array-method-has-species-support"), e1 = e1("../internals/array-method-uses-to-length"), s = s("filter"), e1 = e1("filter");
                o({
                    target: "Array",
                    proto: !0,
                    forced: !s || !e1
                }, {
                    filter: function(e1) {
                        return n(this, e1, 1 < arguments.length ? arguments[1] : void 0);
                    }
                });
            },
            {
                "../internals/array-iteration": 19,
                "../internals/array-method-has-species-support": 21,
                "../internals/array-method-uses-to-length": 23,
                "../internals/export": 50
            }
        ],
        156: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), e1 = e1("../internals/array-for-each");
                o({
                    target: "Array",
                    proto: !0,
                    forced: [].forEach != e1
                }, {
                    forEach: e1
                });
            },
            {
                "../internals/array-for-each": 16,
                "../internals/export": 50
            }
        ],
        157: [
            function(e1, t, r) {
                var o = e1("../internals/export"), n = e1("../internals/array-from");
                o({
                    target: "Array",
                    stat: !0,
                    forced: !e1("../internals/check-correctness-of-iteration")(function(e1) {
                        Array.from(e1);
                    })
                }, {
                    from: n
                });
            },
            {
                "../internals/array-from": 17,
                "../internals/check-correctness-of-iteration": 27,
                "../internals/export": 50
            }
        ],
        158: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/array-includes").includes, s = e1("../internals/add-to-unscopables");
                o({
                    target: "Array",
                    proto: !0,
                    forced: !e1("../internals/array-method-uses-to-length")("indexOf", {
                        ACCESSORS: !0,
                        1: 0
                    })
                }, {
                    includes: function(e1) {
                        return n(this, e1, 1 < arguments.length ? arguments[1] : void 0);
                    }
                }), s("includes");
            },
            {
                "../internals/add-to-unscopables": 7,
                "../internals/array-includes": 18,
                "../internals/array-method-uses-to-length": 23,
                "../internals/export": 50
            }
        ],
        159: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/array-includes").indexOf, s = e1("../internals/array-method-is-strict"), e1 = e1("../internals/array-method-uses-to-length"), i = [].indexOf, a = !!i && 1 / [
                    1
                ].indexOf(1, -0) < 0, s = s("indexOf"), e1 = e1("indexOf", {
                    ACCESSORS: !0,
                    1: 0
                });
                o({
                    target: "Array",
                    proto: !0,
                    forced: a || !s || !e1
                }, {
                    indexOf: function(e1) {
                        return a ? i.apply(this, arguments) || 0 : n(this, e1, 1 < arguments.length ? arguments[1] : void 0);
                    }
                });
            },
            {
                "../internals/array-includes": 18,
                "../internals/array-method-is-strict": 22,
                "../internals/array-method-uses-to-length": 23,
                "../internals/export": 50
            }
        ],
        160: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/to-indexed-object"), n = e1("../internals/add-to-unscopables"), s = e1("../internals/iterators"), i = e1("../internals/internal-state"), e1 = e1("../internals/define-iterator"), a = "Array Iterator", l = i.set, u = i.getterFor(a);
                t.exports = e1(Array, "Array", function(e1, t) {
                    l(this, {
                        type: a,
                        target: o(e1),
                        index: 0,
                        kind: t
                    });
                }, function() {
                    var e1 = u(this), t = e1.target, r = e1.kind, o = e1.index++;
                    return !t || o >= t.length ? {
                        value: e1.target = void 0,
                        done: !0
                    } : "keys" == r ? {
                        value: o,
                        done: !1
                    } : "values" == r ? {
                        value: t[o],
                        done: !1
                    } : {
                        value: [
                            o,
                            t[o]
                        ],
                        done: !1
                    };
                }, "values"), s.Arguments = s.Array, n("keys"), n("values"), n("entries");
            },
            {
                "../internals/add-to-unscopables": 7,
                "../internals/define-iterator": 41,
                "../internals/internal-state": 70,
                "../internals/iterators": 79,
                "../internals/to-indexed-object": 134
            }
        ],
        161: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/indexed-object"), s = e1("../internals/to-indexed-object"), e1 = e1("../internals/array-method-is-strict"), i = [].join, n = n != Object, e1 = e1("join", ",");
                o({
                    target: "Array",
                    proto: !0,
                    forced: n || !e1
                }, {
                    join: function(e1) {
                        return i.call(s(this), void 0 === e1 ? "," : e1);
                    }
                });
            },
            {
                "../internals/array-method-is-strict": 22,
                "../internals/export": 50,
                "../internals/indexed-object": 66,
                "../internals/to-indexed-object": 134
            }
        ],
        162: [
            function(e1, t, r) {
                var o = e1("../internals/export"), e1 = e1("../internals/array-last-index-of");
                o({
                    target: "Array",
                    proto: !0,
                    forced: e1 !== [].lastIndexOf
                }, {
                    lastIndexOf: e1
                });
            },
            {
                "../internals/array-last-index-of": 20,
                "../internals/export": 50
            }
        ],
        163: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/array-iteration").map, s = e1("../internals/array-method-has-species-support"), e1 = e1("../internals/array-method-uses-to-length"), s = s("map"), e1 = e1("map");
                o({
                    target: "Array",
                    proto: !0,
                    forced: !s || !e1
                }, {
                    map: function(e1) {
                        return n(this, e1, 1 < arguments.length ? arguments[1] : void 0);
                    }
                });
            },
            {
                "../internals/array-iteration": 19,
                "../internals/array-method-has-species-support": 21,
                "../internals/array-method-uses-to-length": 23,
                "../internals/export": 50
            }
        ],
        164: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), u = e1("../internals/is-object"), c = e1("../internals/is-array"), d = e1("../internals/to-absolute-index"), f = e1("../internals/to-length"), h = e1("../internals/to-indexed-object"), p = e1("../internals/create-property"), n = e1("../internals/well-known-symbol"), s = e1("../internals/array-method-has-species-support"), e1 = e1("../internals/array-method-uses-to-length"), s = s("slice"), e1 = e1("slice", {
                    ACCESSORS: !0,
                    0: 0,
                    1: 2
                }), m = n("species"), y = [].slice, g = Math.max;
                o({
                    target: "Array",
                    proto: !0,
                    forced: !s || !e1
                }, {
                    slice: function(e1, t) {
                        var r, o, n, s = h(this), i = f(s.length), a = d(e1, i), l = d(void 0 === t ? i : t, i);
                        if (c(s) && ((r = "function" == typeof (r = s.constructor) && (r === Array || c(r.prototype)) || u(r) && null === (r = r[m]) ? void 0 : r) === Array || void 0 === r)) return y.call(s, a, l);
                        for(o = new (void 0 === r ? Array : r)(g(l - a, 0)), n = 0; a < l; a++, n++)a in s && p(o, n, s[a]);
                        return o.length = n, o;
                    }
                });
            },
            {
                "../internals/array-method-has-species-support": 21,
                "../internals/array-method-uses-to-length": 23,
                "../internals/create-property": 40,
                "../internals/export": 50,
                "../internals/is-array": 72,
                "../internals/is-object": 74,
                "../internals/to-absolute-index": 132,
                "../internals/to-indexed-object": 134,
                "../internals/to-length": 136,
                "../internals/well-known-symbol": 148
            }
        ],
        165: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/array-iteration").some, s = e1("../internals/array-method-is-strict"), e1 = e1("../internals/array-method-uses-to-length"), s = s("some"), e1 = e1("some");
                o({
                    target: "Array",
                    proto: !0,
                    forced: !s || !e1
                }, {
                    some: function(e1) {
                        return n(this, e1, 1 < arguments.length ? arguments[1] : void 0);
                    }
                });
            },
            {
                "../internals/array-iteration": 19,
                "../internals/array-method-is-strict": 22,
                "../internals/array-method-uses-to-length": 23,
                "../internals/export": 50
            }
        ],
        166: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), d = e1("../internals/to-absolute-index"), f = e1("../internals/to-integer"), h = e1("../internals/to-length"), p = e1("../internals/to-object"), m = e1("../internals/array-species-create"), y = e1("../internals/create-property"), n = e1("../internals/array-method-has-species-support"), e1 = e1("../internals/array-method-uses-to-length"), n = n("splice"), e1 = e1("splice", {
                    ACCESSORS: !0,
                    0: 0,
                    1: 2
                }), g = Math.max, v = Math.min;
                o({
                    target: "Array",
                    proto: !0,
                    forced: !n || !e1
                }, {
                    splice: function(e1, t) {
                        var r, o, n, s, i, a, l = p(this), u = h(l.length), c = d(e1, u), e1 = arguments.length;
                        if (0 === e1 ? r = o = 0 : o = 1 === e1 ? (r = 0, u - c) : (r = e1 - 2, v(g(f(t), 0), u - c)), 9007199254740991 < u + r - o) throw TypeError("Maximum allowed length exceeded");
                        for(n = m(l, o), s = 0; s < o; s++)(i = c + s) in l && y(n, s, l[i]);
                        if (r < (n.length = o)) {
                            for(s = c; s < u - o; s++)a = s + r, (i = s + o) in l ? l[a] = l[i] : delete l[a];
                            for(s = u; u - o + r < s; s--)delete l[s - 1];
                        } else if (o < r) for(s = u - o; c < s; s--)a = s + r - 1, (i = s + o - 1) in l ? l[a] = l[i] : delete l[a];
                        for(s = 0; s < r; s++)l[s + c] = arguments[s + 2];
                        return l.length = u - o + r, n;
                    }
                });
            },
            {
                "../internals/array-method-has-species-support": 21,
                "../internals/array-method-uses-to-length": 23,
                "../internals/array-species-create": 25,
                "../internals/create-property": 40,
                "../internals/export": 50,
                "../internals/to-absolute-index": 132,
                "../internals/to-integer": 135,
                "../internals/to-length": 136,
                "../internals/to-object": 137
            }
        ],
        167: [
            function(e1, t, r) {
                var o = e1("../internals/descriptors"), e1 = e1("../internals/object-define-property").f, n = Function.prototype, s = n.toString, i = /^\s*function ([^ (]*)/;
                !o || "name" in n || e1(n, "name", {
                    configurable: !0,
                    get: function() {
                        try {
                            return s.call(this).match(i)[1];
                        } catch (e1) {
                            return "";
                        }
                    }
                });
            },
            {
                "../internals/descriptors": 43,
                "../internals/object-define-property": 92
            }
        ],
        168: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/collection"), e1 = e1("../internals/collection-strong");
                t.exports = o("Map", function(e1) {
                    return function() {
                        return e1(this, arguments.length ? arguments[0] : void 0);
                    };
                }, e1);
            },
            {
                "../internals/collection": 32,
                "../internals/collection-strong": 30
            }
        ],
        169: [
            function(e1, t, r) {
                var e1 = e1("../internals/export"), o = Math.hypot, l = Math.abs, u = Math.sqrt;
                e1({
                    target: "Math",
                    stat: !0,
                    forced: !!o && o(1 / 0, NaN) !== 1 / 0
                }, {
                    hypot: function(e1, t) {
                        for(var r, o, n = 0, s = 0, i = arguments.length, a = 0; s < i;)a < (r = l(arguments[s++])) ? (n = n * (o = a / r) * o + 1, a = r) : n += 0 < r ? (o = r / a) * o : r;
                        return a === 1 / 0 ? 1 / 0 : a * u(n);
                    }
                });
            },
            {
                "../internals/export": 50
            }
        ],
        170: [
            function(e1, t, r) {
                e1("../internals/export")({
                    target: "Math",
                    stat: !0
                }, {
                    sign: e1("../internals/math-sign")
                });
            },
            {
                "../internals/export": 50,
                "../internals/math-sign": 80
            }
        ],
        171: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    var t, r, o, n, s, i, a, l = d(e1, !1);
                    if ("string" == typeof l && 2 < l.length) {
                        if (43 === (e1 = (l = g(l)).charCodeAt(0)) || 45 === e1) {
                            if (88 === (t = l.charCodeAt(2)) || 120 === t) return NaN;
                        } else if (48 === e1) {
                            switch(l.charCodeAt(1)){
                                case 66:
                                case 98:
                                    r = 2, o = 49;
                                    break;
                                case 79:
                                case 111:
                                    r = 8, o = 55;
                                    break;
                                default:
                                    return +l;
                            }
                            for(s = (n = l.slice(2)).length, i = 0; i < s; i++)if ((a = n.charCodeAt(i)) < 48 || o < a) return NaN;
                            return parseInt(n, r);
                        }
                    }
                    return +l;
                }
                var n = e1("../internals/descriptors"), s = e1("../internals/global"), i = e1("../internals/is-forced"), a = e1("../internals/redefine"), l = e1("../internals/has"), u = e1("../internals/classof-raw"), c = e1("../internals/inherit-if-required"), d = e1("../internals/to-primitive"), f = e1("../internals/fails"), h = e1("../internals/object-create"), p = e1("../internals/object-get-own-property-names").f, m = e1("../internals/object-get-own-property-descriptor").f, y = e1("../internals/object-define-property").f, g = e1("../internals/string-trim").trim, v = "Number", b = s[v], j = b.prototype, _ = u(h(j)) == v;
                if (i(v, !b(" 0o1") || !b("0b1") || b("+0x1"))) {
                    for(var x, w = function(e1) {
                        var e1 = arguments.length < 1 ? 0 : e1, t = this;
                        return t instanceof w && (_ ? f(function() {
                            j.valueOf.call(t);
                        }) : u(t) != v) ? c(new b(o(e1)), t, w) : o(e1);
                    }, S = n ? p(b) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), E = 0; S.length > E; E++)l(b, x = S[E]) && !l(w, x) && y(w, x, m(b, x));
                    (w.prototype = j).constructor = w, a(s, v, w);
                }
            },
            {
                "../internals/classof-raw": 28,
                "../internals/descriptors": 43,
                "../internals/fails": 51,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/inherit-if-required": 67,
                "../internals/is-forced": 73,
                "../internals/object-create": 90,
                "../internals/object-define-property": 92,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/object-get-own-property-names": 95,
                "../internals/redefine": 108,
                "../internals/string-trim": 129,
                "../internals/to-primitive": 140
            }
        ],
        172: [
            function(e1, t, r) {
                e1("../internals/export")({
                    target: "Number",
                    stat: !0
                }, {
                    isFinite: e1("../internals/number-is-finite")
                });
            },
            {
                "../internals/export": 50,
                "../internals/number-is-finite": 88
            }
        ],
        173: [
            function(e1, t, r) {
                "use strict";
                function c(e1, t, r) {
                    return 0 === t ? r : t % 2 == 1 ? c(e1, t - 1, r * e1) : c(e1 * e1, t / 2, r);
                }
                var o = e1("../internals/export"), d = e1("../internals/to-integer"), f = e1("../internals/this-number-value"), h = e1("../internals/string-repeat"), e1 = e1("../internals/fails"), n = 1..toFixed, p = Math.floor;
                o({
                    target: "Number",
                    proto: !0,
                    forced: n && ("0.000" !== 8e-5.toFixed(3) || "1" !== .9.toFixed(0) || "1.25" !== 1.255.toFixed(2) || "1000000000000000128" !== 0xde0b6b3a7640080.toFixed(0)) || !e1(function() {
                        n.call({});
                    })
                }, {
                    toFixed: function(e1) {
                        function t(e1, t) {
                            for(var r = -1, o = t; ++r < 6;)o += e1 * a[r], a[r] = o % 1e7, o = p(o / 1e7);
                        }
                        function r(e1) {
                            for(var t = 6, r = 0; 0 <= --t;)r += a[t], a[t] = p(r / e1), r = r % e1 * 1e7;
                        }
                        function o() {
                            for(var e1, t = 6, r = ""; 0 <= --t;)"" === r && 0 !== t && 0 === a[t] || (e1 = String(a[t]), r = "" === r ? e1 : r + h.call("0", 7 - e1.length) + e1);
                            return r;
                        }
                        var n, s, i = f(this), e1 = d(e1), a = [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ], l = "", u = "0";
                        if (e1 < 0 || 20 < e1) throw RangeError("Incorrect fraction digits");
                        if (i != i) return "NaN";
                        if (i <= -1000000000000000000000 || 1e21 <= i) return String(i);
                        if (i < 0 && (l = "-", i = -i), 1e-21 < i) {
                            if (i = (n = function(e1) {
                                for(var t = 0, r = e1; 4096 <= r;)t += 12, r /= 4096;
                                for(; 2 <= r;)t += 1, r /= 2;
                                return t;
                            }(i * c(2, 69, 1)) - 69) < 0 ? i * c(2, -n, 1) : i / c(2, n, 1), i *= 4503599627370496, 0 < (n = 52 - n)) {
                                for(t(0, i), s = e1; 7 <= s;)t(1e7, 0), s -= 7;
                                for(t(c(10, s, 1), 0), s = n - 1; 23 <= s;)r(8388608), s -= 23;
                                r(1 << s), t(1, 1), r(2), u = o();
                            } else t(0, i), t(1 << -n, 0), u = o() + h.call("0", e1);
                        }
                        return u = 0 < e1 ? l + ((i = u.length) <= e1 ? "0." + h.call("0", e1 - i) + u : u.slice(0, i - e1) + "." + u.slice(i - e1)) : l + u;
                    }
                });
            },
            {
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/string-repeat": 127,
                "../internals/this-number-value": 131,
                "../internals/to-integer": 135
            }
        ],
        174: [
            function(e1, t, r) {
                var o = e1("../internals/export"), e1 = e1("../internals/object-assign");
                o({
                    target: "Object",
                    stat: !0,
                    forced: Object.assign !== e1
                }, {
                    assign: e1
                });
            },
            {
                "../internals/export": 50,
                "../internals/object-assign": 89
            }
        ],
        175: [
            function(e1, t, r) {
                var o = e1("../internals/export"), n = e1("../internals/iterate"), s = e1("../internals/create-property");
                o({
                    target: "Object",
                    stat: !0
                }, {
                    fromEntries: function(e1) {
                        var r = {};
                        return n(e1, function(e1, t) {
                            s(r, e1, t);
                        }, void 0, !0), r;
                    }
                });
            },
            {
                "../internals/create-property": 40,
                "../internals/export": 50,
                "../internals/iterate": 77
            }
        ],
        176: [
            function(e1, t, r) {
                var o = e1("../internals/export"), n = e1("../internals/fails"), s = e1("../internals/to-indexed-object"), i = e1("../internals/object-get-own-property-descriptor").f, e1 = e1("../internals/descriptors"), n = n(function() {
                    i(1);
                });
                o({
                    target: "Object",
                    stat: !0,
                    forced: !e1 || n,
                    sham: !e1
                }, {
                    getOwnPropertyDescriptor: function(e1, t) {
                        return i(s(e1), t);
                    }
                });
            },
            {
                "../internals/descriptors": 43,
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/to-indexed-object": 134
            }
        ],
        177: [
            function(e1, t, r) {
                var o = e1("../internals/export"), n = e1("../internals/fails"), e1 = e1("../internals/object-get-own-property-names-external").f;
                o({
                    target: "Object",
                    stat: !0,
                    forced: n(function() {
                        return !Object.getOwnPropertyNames(1);
                    })
                }, {
                    getOwnPropertyNames: e1
                });
            },
            {
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/object-get-own-property-names-external": 94
            }
        ],
        178: [
            function(e1, t, r) {
                var o = e1("../internals/export"), n = e1("../internals/fails"), s = e1("../internals/to-object"), i = e1("../internals/object-get-prototype-of"), e1 = e1("../internals/correct-prototype-getter");
                o({
                    target: "Object",
                    stat: !0,
                    forced: n(function() {
                        i(1);
                    }),
                    sham: !e1
                }, {
                    getPrototypeOf: function(e1) {
                        return i(s(e1));
                    }
                });
            },
            {
                "../internals/correct-prototype-getter": 35,
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/object-get-prototype-of": 97,
                "../internals/to-object": 137
            }
        ],
        179: [
            function(e1, t, r) {
                var o = e1("../internals/export"), n = e1("../internals/to-object"), s = e1("../internals/object-keys");
                o({
                    target: "Object",
                    stat: !0,
                    forced: e1("../internals/fails")(function() {
                        s(1);
                    })
                }, {
                    keys: function(e1) {
                        return s(n(e1));
                    }
                });
            },
            {
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/object-keys": 99,
                "../internals/to-object": 137
            }
        ],
        180: [
            function(e1, t, r) {
                var o = e1("../internals/to-string-tag-support"), n = e1("../internals/redefine"), e1 = e1("../internals/object-to-string");
                o || n(Object.prototype, "toString", e1, {
                    unsafe: !0
                });
            },
            {
                "../internals/object-to-string": 102,
                "../internals/redefine": 108,
                "../internals/to-string-tag-support": 141
            }
        ],
        181: [
            function(e1, D, F) {
                "use strict";
                var r, t, o, n, s = e1("../internals/export"), i = e1("../internals/is-pure"), g = e1("../internals/global"), a = e1("../internals/get-built-in"), l = e1("../internals/native-promise-constructor"), U = e1("../internals/redefine"), N = e1("../internals/redefine-all"), B = e1("../internals/set-to-string-tag"), G = e1("../internals/set-species"), V = e1("../internals/is-object"), c = e1("../internals/a-function"), z = e1("../internals/an-instance"), H = e1("../internals/classof-raw"), W = e1("../internals/inspect-source"), d = e1("../internals/iterate"), q = e1("../internals/check-correctness-of-iteration"), X = e1("../internals/species-constructor"), v = e1("../internals/task").set, u = e1("../internals/microtask"), f = e1("../internals/promise-resolve"), Y = e1("../internals/host-report-errors"), h = e1("../internals/new-promise-capability"), b = e1("../internals/perform"), p = e1("../internals/internal-state"), Z = e1("../internals/is-forced"), m = e1("../internals/well-known-symbol"), y = e1("../internals/engine-v8-version"), Q = m("species"), j = "Promise", _ = p.get, J = p.set, K = p.getterFor(j), x = l, w = g.TypeError, S = g.document, E = g.process, M = a("fetch"), T = h.f, $ = T, k = "process" == H(E), ee = !!(S && S.createEvent && g.dispatchEvent), O = "unhandledrejection", te = "rejectionhandled", C = 1, re = 2, A = 1, oe = 2, e1 = Z(j, function() {
                    var e1, t;
                    if (!(W(x) !== String(x))) {
                        if (66 === y) return !0;
                        if (!k && "function" != typeof PromiseRejectionEvent) return !0;
                    }
                    return !(!i || x.prototype.finally) || !(51 <= y && /native code/.test(x)) && (t = function(e1) {
                        e1(function() {}, function() {});
                    }, ((e1 = x.resolve(1)).constructor = {})[Q] = t, !(e1.then(function() {}) instanceof t));
                }), m = e1 || !q(function(e1) {
                    x.all(e1).catch(function() {});
                }), ne = function(e1) {
                    var t;
                    return !(!V(e1) || "function" != typeof (t = e1.then)) && t;
                }, P = function(h, p, m) {
                    var y;
                    p.notified || (p.notified = !0, y = p.reactions, u(function() {
                        for(var r, o, e1 = p.value, t = p.state == C, n = 0; y.length > n;){
                            var s, i, a, l = y[n++], u = t ? l.ok : l.fail, c = l.resolve, d = l.reject, f = l.domain;
                            try {
                                u ? (t || (p.rejection === oe && function(e1, t) {
                                    v.call(g, function() {
                                        if (k) E.emit("rejectionHandled", e1);
                                        else se(te, e1, t.value);
                                    });
                                }(h, p), p.rejection = A), !0 === u ? s = e1 : (f && f.enter(), s = u(e1), f && (f.exit(), a = !0)), s === l.promise ? d(w("Promise-chain cycle")) : (i = ne(s)) ? i.call(s, c, d) : c(s)) : d(e1);
                            } catch (e1) {
                                f && !a && f.exit(), d(e1);
                            }
                        }
                        p.reactions = [], p.notified = !1, m && !p.rejection && (r = h, o = p, v.call(g, function() {
                            var e1 = o.value, t = ie(o);
                            if (t && (t = b(function() {
                                k ? E.emit("unhandledRejection", e1, r) : se(O, r, e1);
                            }), o.rejection = k || ie(o) ? oe : A, t.error)) throw t.value;
                        }));
                    }));
                }, se = function(e1, t, r) {
                    var o;
                    ee ? ((o = S.createEvent("Event")).promise = t, o.reason = r, o.initEvent(e1, !1, !0), g.dispatchEvent(o)) : o = {
                        promise: t,
                        reason: r
                    }, (t = g["on" + e1]) ? t(o) : e1 === O && Y("Unhandled promise rejection", r);
                }, ie = function(e1) {
                    return e1.rejection !== A && !e1.parent;
                }, L = function(t, r, o, n) {
                    return function(e1) {
                        t(r, o, e1, n);
                    };
                }, R = function(e1, t, r, o) {
                    t.done || (t.done = !0, (t = o ? o : t).value = r, t.state = re, P(e1, t, !0));
                }, I = function(r, o, e1, t) {
                    if (!o.done) {
                        o.done = !0, t && (o = t);
                        try {
                            if (r === e1) throw w("Promise can't be resolved itself");
                            var n = ne(e1);
                            n ? u(function() {
                                var t = {
                                    done: !1
                                };
                                try {
                                    n.call(e1, L(I, r, t, o), L(R, r, t, o));
                                } catch (e1) {
                                    R(r, t, e1, o);
                                }
                            }) : (o.value = e1, o.state = C, P(r, o, !1));
                        } catch (e1) {
                            R(r, {
                                done: !1
                            }, e1, o);
                        }
                    }
                };
                e1 && (x = function(e1) {
                    z(this, x, j), c(e1), r.call(this);
                    var t = _(this);
                    try {
                        e1(L(I, this, t), L(R, this, t));
                    } catch (e1) {
                        R(this, t, e1);
                    }
                }, (r = function(e1) {
                    J(this, {
                        type: j,
                        done: !1,
                        notified: !1,
                        parent: !1,
                        reactions: [],
                        rejection: !1,
                        state: 0,
                        value: void 0
                    });
                }).prototype = N(x.prototype, {
                    then: function(e1, t) {
                        var r = K(this), o = T(X(this, x));
                        return o.ok = "function" != typeof e1 || e1, o.fail = "function" == typeof t && t, o.domain = k ? E.domain : void 0, r.parent = !0, r.reactions.push(o), 0 != r.state && P(this, r, !1), o.promise;
                    },
                    catch: function(e1) {
                        return this.then(void 0, e1);
                    }
                }), t = function() {
                    var e1 = new r, t = _(e1);
                    this.promise = e1, this.resolve = L(I, e1, t), this.reject = L(R, e1, t);
                }, h.f = T = function(e1) {
                    return e1 === x || e1 === o ? new t : $(e1);
                }, i || "function" != typeof l || (n = l.prototype.then, U(l.prototype, "then", function(e1, t) {
                    var r = this;
                    return new x(function(e1, t) {
                        n.call(r, e1, t);
                    }).then(e1, t);
                }, {
                    unsafe: !0
                }), "function" == typeof M && s({
                    global: !0,
                    enumerable: !0,
                    forced: !0
                }, {
                    fetch: function(e1) {
                        return f(x, M.apply(g, arguments));
                    }
                }))), s({
                    global: !0,
                    wrap: !0,
                    forced: e1
                }, {
                    Promise: x
                }), B(x, j, !1, !0), G(j), o = a(j), s({
                    target: j,
                    stat: !0,
                    forced: e1
                }, {
                    reject: function(e1) {
                        var t = T(this);
                        return t.reject.call(void 0, e1), t.promise;
                    }
                }), s({
                    target: j,
                    stat: !0,
                    forced: i || e1
                }, {
                    resolve: function(e1) {
                        return f(i && this === o ? x : this, e1);
                    }
                }), s({
                    target: j,
                    stat: !0,
                    forced: m
                }, {
                    all: function(e1) {
                        var a = this, t = T(a), l = t.resolve, u = t.reject, r = b(function() {
                            var o = c(a.resolve), n = [], s = 0, i = 1;
                            d(e1, function(e1) {
                                var t = s++, r = !1;
                                n.push(void 0), i++, o.call(a, e1).then(function(e1) {
                                    r || (r = !0, n[t] = e1, --i || l(n));
                                }, u);
                            }), --i || l(n);
                        });
                        return r.error && u(r.value), t.promise;
                    },
                    race: function(e1) {
                        var r = this, o = T(r), n = o.reject, t = b(function() {
                            var t = c(r.resolve);
                            d(e1, function(e1) {
                                t.call(r, e1).then(o.resolve, n);
                            });
                        });
                        return t.error && n(t.value), o.promise;
                    }
                });
            },
            {
                "../internals/a-function": 5,
                "../internals/an-instance": 9,
                "../internals/check-correctness-of-iteration": 27,
                "../internals/classof-raw": 28,
                "../internals/engine-v8-version": 48,
                "../internals/export": 50,
                "../internals/get-built-in": 56,
                "../internals/global": 59,
                "../internals/host-report-errors": 62,
                "../internals/inspect-source": 68,
                "../internals/internal-state": 70,
                "../internals/is-forced": 73,
                "../internals/is-object": 74,
                "../internals/is-pure": 75,
                "../internals/iterate": 77,
                "../internals/microtask": 81,
                "../internals/native-promise-constructor": 82,
                "../internals/new-promise-capability": 86,
                "../internals/perform": 105,
                "../internals/promise-resolve": 106,
                "../internals/redefine": 108,
                "../internals/redefine-all": 107,
                "../internals/set-species": 116,
                "../internals/set-to-string-tag": 117,
                "../internals/species-constructor": 121,
                "../internals/task": 130,
                "../internals/well-known-symbol": 148
            }
        ],
        182: [
            function(e1, t, r) {
                var o = e1("../internals/export"), n = e1("../internals/get-built-in"), s = e1("../internals/a-function"), i = e1("../internals/an-object"), a = e1("../internals/is-object"), l = e1("../internals/object-create"), u = e1("../internals/function-bind"), e1 = e1("../internals/fails"), c = n("Reflect", "construct"), d = e1(function() {
                    function e1() {}
                    return !(c(function() {}, [], e1) instanceof e1);
                }), f = !e1(function() {
                    c(function() {});
                }), n = d || f;
                o({
                    target: "Reflect",
                    stat: !0,
                    forced: n,
                    sham: n
                }, {
                    construct: function(e1, t) {
                        s(e1), i(t);
                        var r = arguments.length < 3 ? e1 : s(arguments[2]);
                        if (f && !d) return c(e1, t, r);
                        if (e1 == r) {
                            switch(t.length){
                                case 0:
                                    return new e1;
                                case 1:
                                    return new e1(t[0]);
                                case 2:
                                    return new e1(t[0], t[1]);
                                case 3:
                                    return new e1(t[0], t[1], t[2]);
                                case 4:
                                    return new e1(t[0], t[1], t[2], t[3]);
                            }
                            var o = [
                                null
                            ];
                            return o.push.apply(o, t), new (u.apply(e1, o));
                        }
                        o = r.prototype, r = l(a(o) ? o : Object.prototype), o = Function.apply.call(e1, r, t);
                        return a(o) ? o : r;
                    }
                });
            },
            {
                "../internals/a-function": 5,
                "../internals/an-object": 10,
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/function-bind": 55,
                "../internals/get-built-in": 56,
                "../internals/is-object": 74,
                "../internals/object-create": 90
            }
        ],
        183: [
            function(e1, t, r) {
                var o = e1("../internals/export"), s = e1("../internals/is-object"), i = e1("../internals/an-object"), a = e1("../internals/has"), l = e1("../internals/object-get-own-property-descriptor"), u = e1("../internals/object-get-prototype-of");
                o({
                    target: "Reflect",
                    stat: !0
                }, {
                    get: function e1(t, r) {
                        var o, n = arguments.length < 3 ? t : arguments[2];
                        return i(t) === n ? t[r] : (o = l.f(t, r)) ? a(o, "value") ? o.value : void 0 === o.get ? void 0 : o.get.call(n) : s(o = u(t)) ? e1(o, r, n) : void 0;
                    }
                });
            },
            {
                "../internals/an-object": 10,
                "../internals/export": 50,
                "../internals/has": 60,
                "../internals/is-object": 74,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/object-get-prototype-of": 97
            }
        ],
        184: [
            function(e1, t, r) {
                var o = e1("../internals/descriptors"), n = e1("../internals/global"), s = e1("../internals/is-forced"), i = e1("../internals/inherit-if-required"), a = e1("../internals/object-define-property").f, l = e1("../internals/object-get-own-property-names").f, u = e1("../internals/is-regexp"), c = e1("../internals/regexp-flags"), d = e1("../internals/regexp-sticky-helpers"), f = e1("../internals/redefine"), h = e1("../internals/fails"), p = e1("../internals/internal-state").set, m = e1("../internals/set-species"), y = e1("../internals/well-known-symbol")("match"), g = n.RegExp, v = g.prototype, b = /a/g, j = /a/g, _ = new g(b) !== b, x = d.UNSUPPORTED_Y;
                if (o && s("RegExp", !_ || x || h(function() {
                    return j[y] = !1, g(b) != b || g(j) == j || "/a/i" != g(b, "i");
                }))) {
                    for(var w = function(e1, t) {
                        var r, o = this instanceof w, n = u(e1), s = void 0 === t;
                        if (!o && n && e1.constructor === w && s) return e1;
                        _ ? n && !s && (e1 = e1.source) : e1 instanceof w && (s && (t = c.call(e1)), e1 = e1.source), x && (r = !!t && -1 < t.indexOf("y")) && (t = t.replace(/y/g, ""));
                        n = i(_ ? new g(e1, t) : g(e1, t), o ? this : v, w);
                        return x && r && p(n, {
                            sticky: r
                        }), n;
                    }, S = l(g), E = 0; S.length > E;)!function(t) {
                        t in w || a(w, t, {
                            configurable: !0,
                            get: function() {
                                return g[t];
                            },
                            set: function(e1) {
                                g[t] = e1;
                            }
                        });
                    }(S[E++]);
                    (v.constructor = w).prototype = v, f(n, "RegExp", w);
                }
                m("RegExp");
            },
            {
                "../internals/descriptors": 43,
                "../internals/fails": 51,
                "../internals/global": 59,
                "../internals/inherit-if-required": 67,
                "../internals/internal-state": 70,
                "../internals/is-forced": 73,
                "../internals/is-regexp": 76,
                "../internals/object-define-property": 92,
                "../internals/object-get-own-property-names": 95,
                "../internals/redefine": 108,
                "../internals/regexp-flags": 111,
                "../internals/regexp-sticky-helpers": 112,
                "../internals/set-species": 116,
                "../internals/well-known-symbol": 148
            }
        ],
        185: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), e1 = e1("../internals/regexp-exec");
                o({
                    target: "RegExp",
                    proto: !0,
                    forced: /./.exec !== e1
                }, {
                    exec: e1
                });
            },
            {
                "../internals/export": 50,
                "../internals/regexp-exec": 110
            }
        ],
        186: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/redefine"), n = e1("../internals/an-object"), s = e1("../internals/fails"), i = e1("../internals/regexp-flags"), e1 = "toString", a = RegExp.prototype, l = a[e1], s = s(function() {
                    return "/a/b" != l.call({
                        source: "a",
                        flags: "b"
                    });
                }), u = l.name != e1;
                (s || u) && o(RegExp.prototype, e1, function() {
                    var e1 = n(this), t = String(e1.source), r = e1.flags;
                    return "/" + t + "/" + String(void 0 === r && e1 instanceof RegExp && !("flags" in a) ? i.call(e1) : r);
                }, {
                    unsafe: !0
                });
            },
            {
                "../internals/an-object": 10,
                "../internals/fails": 51,
                "../internals/redefine": 108,
                "../internals/regexp-flags": 111
            }
        ],
        187: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/collection"), e1 = e1("../internals/collection-strong");
                t.exports = o("Set", function(e1) {
                    return function() {
                        return e1(this, arguments.length ? arguments[0] : void 0);
                    };
                }, e1);
            },
            {
                "../internals/collection": 32,
                "../internals/collection-strong": 30
            }
        ],
        188: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/object-get-own-property-descriptor").f, s = e1("../internals/to-length"), i = e1("../internals/not-a-regexp"), a = e1("../internals/require-object-coercible"), l = e1("../internals/correct-is-regexp-logic"), e1 = e1("../internals/is-pure"), u = "".endsWith, c = Math.min, l = l("endsWith");
                o({
                    target: "String",
                    proto: !0,
                    forced: !!(e1 || l || !(o = n(String.prototype, "endsWith")) || o.writable) && !l
                }, {
                    endsWith: function(e1) {
                        var t = String(a(this)), r = (i(e1), 1 < arguments.length ? arguments[1] : void 0), o = s(t.length), r = void 0 === r ? o : c(s(r), o), o = String(e1);
                        return u ? u.call(t, o, r) : t.slice(r - o.length, r) === o;
                    }
                });
            },
            {
                "../internals/correct-is-regexp-logic": 34,
                "../internals/export": 50,
                "../internals/is-pure": 75,
                "../internals/not-a-regexp": 87,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/require-object-coercible": 113,
                "../internals/to-length": 136
            }
        ],
        189: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/not-a-regexp"), s = e1("../internals/require-object-coercible");
                o({
                    target: "String",
                    proto: !0,
                    forced: !e1("../internals/correct-is-regexp-logic")("includes")
                }, {
                    includes: function(e1) {
                        return !!~String(s(this)).indexOf(n(e1), 1 < arguments.length ? arguments[1] : void 0);
                    }
                });
            },
            {
                "../internals/correct-is-regexp-logic": 34,
                "../internals/export": 50,
                "../internals/not-a-regexp": 87,
                "../internals/require-object-coercible": 113
            }
        ],
        190: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/string-multibyte").charAt, n = e1("../internals/internal-state"), e1 = e1("../internals/define-iterator"), s = "String Iterator", i = n.set, a = n.getterFor(s);
                e1(String, "String", function(e1) {
                    i(this, {
                        type: s,
                        string: String(e1),
                        index: 0
                    });
                }, function() {
                    var e1 = a(this), t = e1.string, r = e1.index;
                    return r >= t.length ? {
                        value: void 0,
                        done: !0
                    } : (t = o(t, r), e1.index += t.length, {
                        value: t,
                        done: !1
                    });
                });
            },
            {
                "../internals/define-iterator": 41,
                "../internals/internal-state": 70,
                "../internals/string-multibyte": 123
            }
        ],
        191: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/fix-regexp-well-known-symbol-logic"), c = e1("../internals/an-object"), d = e1("../internals/to-length"), n = e1("../internals/require-object-coercible"), f = e1("../internals/advance-string-index"), h = e1("../internals/regexp-exec-abstract");
                o("match", 1, function(o, l, u) {
                    return [
                        function(e1) {
                            var t = n(this), r = null == e1 ? void 0 : e1[o];
                            return void 0 !== r ? r.call(e1, t) : new RegExp(e1)[o](String(t));
                        },
                        function(e1) {
                            var t = u(l, e1, this);
                            if (t.done) return t.value;
                            var r = c(e1), o = String(this);
                            if (!r.global) return h(r, o);
                            for(var n = r.unicode, s = [], i = r.lastIndex = 0; null !== (a = h(r, o));){
                                var a = String(a[0]);
                                "" === (s[i] = a) && (r.lastIndex = f(o, d(r.lastIndex), n)), i++;
                            }
                            return 0 === i ? null : s;
                        }
                    ];
                });
            },
            {
                "../internals/advance-string-index": 8,
                "../internals/an-object": 10,
                "../internals/fix-regexp-well-known-symbol-logic": 52,
                "../internals/regexp-exec-abstract": 109,
                "../internals/require-object-coercible": 113,
                "../internals/to-length": 136
            }
        ],
        192: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/string-pad").start;
                o({
                    target: "String",
                    proto: !0,
                    forced: e1("../internals/string-pad-webkit-bug")
                }, {
                    padStart: function(e1) {
                        return n(this, e1, 1 < arguments.length ? arguments[1] : void 0);
                    }
                });
            },
            {
                "../internals/export": 50,
                "../internals/string-pad": 125,
                "../internals/string-pad-webkit-bug": 124
            }
        ],
        193: [
            function(e1, t, r) {
                e1("../internals/export")({
                    target: "String",
                    proto: !0
                }, {
                    repeat: e1("../internals/string-repeat")
                });
            },
            {
                "../internals/export": 50,
                "../internals/string-repeat": 127
            }
        ],
        194: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/fix-regexp-well-known-symbol-logic"), E = e1("../internals/an-object"), M = e1("../internals/to-object"), T = e1("../internals/to-length"), k = e1("../internals/to-integer"), s = e1("../internals/require-object-coercible"), O = e1("../internals/advance-string-index"), C = e1("../internals/regexp-exec-abstract"), A = Math.max, P = Math.min, L = Math.floor, R = /\$([$&'`]|\d\d?|<[^>]*>)/g, I = /\$([$&'`]|\d\d?)/g;
                o("replace", 2, function(n, j, _, e1) {
                    var x = e1.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE, w = e1.REPLACE_KEEPS_$0, S = x ? "$" : "$0";
                    return [
                        function(e1, t) {
                            var r = s(this), o = null == e1 ? void 0 : e1[n];
                            return void 0 !== o ? o.call(e1, r, t) : j.call(String(r), e1, t);
                        },
                        function(e1, t) {
                            if (!x && w || "string" == typeof t && -1 === t.indexOf(S)) {
                                var r = _(j, e1, this, t);
                                if (r.done) return r.value;
                            }
                            for(var o, n = E(e1), s = String(this), i = "function" == typeof t, a = (i || (t = String(t)), n.global), l = (a && (o = n.unicode, n.lastIndex = 0), []); null !== (h = C(n, s)) && (l.push(h), a);)"" === String(h[0]) && (n.lastIndex = O(s, T(n.lastIndex), o));
                            for(var u, c = "", d = 0, f = 0; f < l.length; f++){
                                for(var h = l[f], p = String(h[0]), m = A(P(k(h.index), s.length), 0), y = [], g = 1; g < h.length; g++)y.push(void 0 === (u = h[g]) ? u : String(u));
                                var v = h.groups, b = i ? (b = [
                                    p
                                ].concat(y, m, s), void 0 !== v && b.push(v), String(t.apply(void 0, b))) : function(s, i, a, l, u, e1) {
                                    var c = a + s.length, d = l.length, t = I;
                                    void 0 !== u && (u = M(u), t = R);
                                    return j.call(e1, t, function(e1, t) {
                                        var r;
                                        switch(t.charAt(0)){
                                            case "$":
                                                return "$";
                                            case "&":
                                                return s;
                                            case "`":
                                                return i.slice(0, a);
                                            case "'":
                                                return i.slice(c);
                                            case "<":
                                                r = u[t.slice(1, -1)];
                                                break;
                                            default:
                                                var o, n = +t;
                                                if (0 == n) return e1;
                                                if (d < n) return 0 !== (o = L(n / 10)) && o <= d ? void 0 === l[o - 1] ? t.charAt(1) : l[o - 1] + t.charAt(1) : e1;
                                                r = l[n - 1];
                                        }
                                        return void 0 === r ? "" : r;
                                    });
                                }(p, s, m, y, v, t);
                                d <= m && (c += s.slice(d, m) + b, d = m + p.length);
                            }
                            return c + s.slice(d);
                        }
                    ];
                });
            },
            {
                "../internals/advance-string-index": 8,
                "../internals/an-object": 10,
                "../internals/fix-regexp-well-known-symbol-logic": 52,
                "../internals/regexp-exec-abstract": 109,
                "../internals/require-object-coercible": 113,
                "../internals/to-integer": 135,
                "../internals/to-length": 136,
                "../internals/to-object": 137
            }
        ],
        195: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/fix-regexp-well-known-symbol-logic"), i = e1("../internals/an-object"), a = e1("../internals/require-object-coercible"), l = e1("../internals/same-value"), u = e1("../internals/regexp-exec-abstract");
                o("search", 1, function(o, n, s) {
                    return [
                        function(e1) {
                            var t = a(this), r = null == e1 ? void 0 : e1[o];
                            return void 0 !== r ? r.call(e1, t) : new RegExp(e1)[o](String(t));
                        },
                        function(e1) {
                            var t, r = s(n, e1, this);
                            return r.done ? r.value : (r = i(e1), e1 = String(this), t = r.lastIndex, l(t, 0) || (r.lastIndex = 0), e1 = u(r, e1), l(r.lastIndex, t) || (r.lastIndex = t), null === e1 ? -1 : e1.index);
                        }
                    ];
                });
            },
            {
                "../internals/an-object": 10,
                "../internals/fix-regexp-well-known-symbol-logic": 52,
                "../internals/regexp-exec-abstract": 109,
                "../internals/require-object-coercible": 113,
                "../internals/same-value": 114
            }
        ],
        196: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/fix-regexp-well-known-symbol-logic"), c = e1("../internals/is-regexp"), g = e1("../internals/an-object"), d = e1("../internals/require-object-coercible"), v = e1("../internals/species-constructor"), b = e1("../internals/advance-string-index"), j = e1("../internals/to-length"), _ = e1("../internals/regexp-exec-abstract"), f = e1("../internals/regexp-exec"), e1 = e1("../internals/fails"), h = [].push, x = Math.min, w = 4294967295, S = !e1(function() {
                    return !RegExp(w, "y");
                });
                o("split", 2, function(n, p, m) {
                    var y = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || 1 < ".".split(/()()/).length || "".split(/.?/).length ? function(e1, t) {
                        var r = String(d(this)), o = void 0 === t ? w : t >>> 0;
                        if (0 == o) return [];
                        if (void 0 === e1) return [
                            r
                        ];
                        if (!c(e1)) return p.call(r, e1, o);
                        for(var n, s, i, a = [], t = (e1.ignoreCase ? "i" : "") + (e1.multiline ? "m" : "") + (e1.unicode ? "u" : "") + (e1.sticky ? "y" : ""), l = 0, u = new RegExp(e1.source, t + "g"); (n = f.call(u, r)) && !(l < (s = u.lastIndex) && (a.push(r.slice(l, n.index)), 1 < n.length && n.index < r.length && h.apply(a, n.slice(1)), i = n[0].length, l = s, a.length >= o));)u.lastIndex === n.index && u.lastIndex++;
                        return l === r.length ? !i && u.test("") || a.push("") : a.push(r.slice(l)), a.length > o ? a.slice(0, o) : a;
                    } : "0".split(void 0, 0).length ? function(e1, t) {
                        return void 0 === e1 && 0 === t ? [] : p.call(this, e1, t);
                    } : p;
                    return [
                        function(e1, t) {
                            var r = d(this), o = null == e1 ? void 0 : e1[n];
                            return void 0 !== o ? o.call(e1, r, t) : y.call(String(r), e1, t);
                        },
                        function(e1, t) {
                            var r = m(y, e1, this, t, y !== p);
                            if (r.done) return r.value;
                            var r = g(e1), o = String(this), e1 = v(r, RegExp), n = r.unicode, s = (r.ignoreCase ? "i" : "") + (r.multiline ? "m" : "") + (r.unicode ? "u" : "") + (S ? "y" : "g"), i = new e1(S ? r : "^(?:" + r.source + ")", s), a = void 0 === t ? w : t >>> 0;
                            if (0 == a) return [];
                            if (0 === o.length) return null === _(i, o) ? [
                                o
                            ] : [];
                            for(var l = 0, u = 0, c = []; u < o.length;){
                                i.lastIndex = S ? u : 0;
                                var d, f = _(i, S ? o : o.slice(u));
                                if (null === f || (d = x(j(i.lastIndex + (S ? 0 : u)), o.length)) === l) u = b(o, u, n);
                                else {
                                    if (c.push(o.slice(l, u)), c.length === a) return c;
                                    for(var h = 1; h <= f.length - 1; h++)if (c.push(f[h]), c.length === a) return c;
                                    u = l = d;
                                }
                            }
                            return c.push(o.slice(l)), c;
                        }
                    ];
                }, !S);
            },
            {
                "../internals/advance-string-index": 8,
                "../internals/an-object": 10,
                "../internals/fails": 51,
                "../internals/fix-regexp-well-known-symbol-logic": 52,
                "../internals/is-regexp": 76,
                "../internals/regexp-exec": 110,
                "../internals/regexp-exec-abstract": 109,
                "../internals/require-object-coercible": 113,
                "../internals/species-constructor": 121,
                "../internals/to-length": 136
            }
        ],
        197: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/object-get-own-property-descriptor").f, s = e1("../internals/to-length"), i = e1("../internals/not-a-regexp"), a = e1("../internals/require-object-coercible"), l = e1("../internals/correct-is-regexp-logic"), e1 = e1("../internals/is-pure"), u = "".startsWith, c = Math.min, l = l("startsWith");
                o({
                    target: "String",
                    proto: !0,
                    forced: !!(e1 || l || !(o = n(String.prototype, "startsWith")) || o.writable) && !l
                }, {
                    startsWith: function(e1) {
                        var t = String(a(this)), r = (i(e1), s(c(1 < arguments.length ? arguments[1] : void 0, t.length))), e1 = String(e1);
                        return u ? u.call(t, e1, r) : t.slice(r, r + e1.length) === e1;
                    }
                });
            },
            {
                "../internals/correct-is-regexp-logic": 34,
                "../internals/export": 50,
                "../internals/is-pure": 75,
                "../internals/not-a-regexp": 87,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/require-object-coercible": 113,
                "../internals/to-length": 136
            }
        ],
        198: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/create-html");
                o({
                    target: "String",
                    proto: !0,
                    forced: e1("../internals/string-html-forced")("sub")
                }, {
                    sub: function() {
                        return n(this, "sub", "", "");
                    }
                });
            },
            {
                "../internals/create-html": 36,
                "../internals/export": 50,
                "../internals/string-html-forced": 122
            }
        ],
        199: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/export"), n = e1("../internals/string-trim").trim;
                o({
                    target: "String",
                    proto: !0,
                    forced: e1("../internals/string-trim-forced")("trim")
                }, {
                    trim: function() {
                        return n(this);
                    }
                });
            },
            {
                "../internals/export": 50,
                "../internals/string-trim": 129,
                "../internals/string-trim-forced": 128
            }
        ],
        200: [
            function(e1, t, r) {
                "use strict";
                var o, n, s, i, a, l = e1("../internals/export"), u = e1("../internals/descriptors"), c = e1("../internals/global"), d = e1("../internals/has"), f = e1("../internals/is-object"), h = e1("../internals/object-define-property").f, e1 = e1("../internals/copy-constructor-properties"), p = c.Symbol;
                !u || "function" != typeof p || "description" in p.prototype && void 0 === p().description || (o = {}, e1(n = function() {
                    var e1 = arguments.length < 1 || void 0 === arguments[0] ? void 0 : String(arguments[0]), t = this instanceof n ? new p(e1) : void 0 === e1 ? p() : p(e1);
                    return "" === e1 && (o[t] = !0), t;
                }, p), (c = n.prototype = p.prototype).constructor = n, s = c.toString, i = "Symbol(test)" == String(p("test")), a = /^Symbol\((.*)\)[^)]+$/, h(c, "description", {
                    configurable: !0,
                    get: function() {
                        var e1 = f(this) ? this.valueOf() : this, t = s.call(e1);
                        return d(o, e1) ? "" : "" === (e1 = i ? t.slice(7, -1) : t.replace(a, "$1")) ? void 0 : e1;
                    }
                }), l({
                    global: !0,
                    forced: !0
                }, {
                    Symbol: n
                }));
            },
            {
                "../internals/copy-constructor-properties": 33,
                "../internals/descriptors": 43,
                "../internals/export": 50,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/is-object": 74,
                "../internals/object-define-property": 92
            }
        ],
        201: [
            function(e1, t, r) {
                e1("../internals/define-well-known-symbol")("iterator");
            },
            {
                "../internals/define-well-known-symbol": 42
            }
        ],
        202: [
            function(e1, D, F) {
                "use strict";
                function o(e1, t) {
                    var r = M[e1] = h(w[_]);
                    return ie(r, {
                        type: j,
                        tag: e1,
                        description: t
                    }), s || (r.description = t), r;
                }
                function r(t, e1) {
                    u(t);
                    var r = c(e1), e1 = q(r).concat(I(r));
                    return v(e1, function(e1) {
                        s && !R.call(r, e1) || L(t, e1, r[e1]);
                    }), t;
                }
                function t(e1, t) {
                    var r, e1 = c(e1), t = d(t, !0);
                    if (e1 !== x || !l(M, t) || l(T, t)) return !(r = le(e1, t)) || !l(M, t) || l(e1, b) && e1[b][t] || (r.enumerable = !0), r;
                }
                function U(e1) {
                    var e1 = ue(c(e1)), t = [];
                    return v(e1, function(e1) {
                        l(M, e1) || l(ee, e1) || t.push(e1);
                    }), t;
                }
                var n = e1("../internals/export"), N = e1("../internals/global"), B = e1("../internals/get-built-in"), G = e1("../internals/is-pure"), s = e1("../internals/descriptors"), i = e1("../internals/native-symbol"), V = e1("../internals/use-symbol-as-uid"), a = e1("../internals/fails"), l = e1("../internals/has"), z = e1("../internals/is-array"), H = e1("../internals/is-object"), u = e1("../internals/an-object"), W = e1("../internals/to-object"), c = e1("../internals/to-indexed-object"), d = e1("../internals/to-primitive"), f = e1("../internals/create-property-descriptor"), h = e1("../internals/object-create"), q = e1("../internals/object-keys"), X = e1("../internals/object-get-own-property-names"), Y = e1("../internals/object-get-own-property-names-external"), p = e1("../internals/object-get-own-property-symbols"), Z = e1("../internals/object-get-own-property-descriptor"), Q = e1("../internals/object-define-property"), J = e1("../internals/object-property-is-enumerable"), K = e1("../internals/create-non-enumerable-property"), m = e1("../internals/redefine"), y = e1("../internals/shared"), $ = e1("../internals/shared-key"), ee = e1("../internals/hidden-keys"), te = e1("../internals/uid"), re = e1("../internals/well-known-symbol"), oe = e1("../internals/well-known-symbol-wrapped"), ne = e1("../internals/define-well-known-symbol"), se = e1("../internals/set-to-string-tag"), g = e1("../internals/internal-state"), v = e1("../internals/array-iteration").forEach, b = $("hidden"), j = "Symbol", _ = "prototype", e1 = re("toPrimitive"), ie = g.set, ae = g.getterFor(j), x = Object[_], w = N.Symbol, S = B("JSON", "stringify"), le = Z.f, E = Q.f, ue = Y.f, ce = J.f, M = y("symbols"), T = y("op-symbols"), k = y("string-to-symbol-registry"), O = y("symbol-to-string-registry"), $ = y("wks"), g = N.QObject, C = !g || !g[_] || !g[_].findChild, A = s && a(function() {
                    return 7 != h(E({}, "a", {
                        get: function() {
                            return E(this, "a", {
                                value: 7
                            }).a;
                        }
                    })).a;
                }) ? function(e1, t, r) {
                    var o = le(x, t);
                    o && delete x[t], E(e1, t, r), o && e1 !== x && E(x, t, o);
                } : E, P = V ? function(e1) {
                    return "symbol" == typeof e1;
                } : function(e1) {
                    return Object(e1) instanceof w;
                }, L = function(e1, t, r) {
                    e1 === x && L(T, t, r), u(e1);
                    t = d(t, !0);
                    return u(r), (l(M, t) ? (r.enumerable ? (l(e1, b) && e1[b][t] && (e1[b][t] = !1), r = h(r, {
                        enumerable: f(0, !1)
                    })) : (l(e1, b) || E(e1, b, f(1, {})), e1[b][t] = !0), A) : E)(e1, t, r);
                }, R = function(e1) {
                    var e1 = d(e1, !0), t = ce.call(this, e1);
                    return !(this === x && l(M, e1) && !l(T, e1)) && (!(t || !l(this, e1) || !l(M, e1) || l(this, b) && this[b][e1]) || t);
                }, I = function(e1) {
                    var t = e1 === x, e1 = ue(t ? T : c(e1)), r = [];
                    return v(e1, function(e1) {
                        !l(M, e1) || t && !l(x, e1) || r.push(M[e1]);
                    }), r;
                };
                i || (m((w = function() {
                    if (this instanceof w) throw TypeError("Symbol is not a constructor");
                    var e1 = arguments.length && void 0 !== arguments[0] ? String(arguments[0]) : void 0, t = te(e1), r = function(e1) {
                        this === x && r.call(T, e1), l(this, b) && l(this[b], t) && (this[b][t] = !1), A(this, t, f(1, e1));
                    };
                    return s && C && A(x, t, {
                        configurable: !0,
                        set: r
                    }), o(t, e1);
                })[_], "toString", function() {
                    return ae(this).tag;
                }), m(w, "withoutSetter", function(e1) {
                    return o(te(e1), e1);
                }), J.f = R, Q.f = L, Z.f = t, X.f = Y.f = U, p.f = I, oe.f = function(e1) {
                    return o(re(e1), e1);
                }, s && (E(w[_], "description", {
                    configurable: !0,
                    get: function() {
                        return ae(this).description;
                    }
                }), G || m(x, "propertyIsEnumerable", R, {
                    unsafe: !0
                }))), n({
                    global: !0,
                    wrap: !0,
                    forced: !i,
                    sham: !i
                }, {
                    Symbol: w
                }), v(q($), function(e1) {
                    ne(e1);
                }), n({
                    target: j,
                    stat: !0,
                    forced: !i
                }, {
                    for: function(e1) {
                        var t, e1 = String(e1);
                        return l(k, e1) ? k[e1] : (t = w(e1), k[e1] = t, O[t] = e1, t);
                    },
                    keyFor: function(e1) {
                        if (!P(e1)) throw TypeError(e1 + " is not a symbol");
                        if (l(O, e1)) return O[e1];
                    },
                    useSetter: function() {
                        C = !0;
                    },
                    useSimple: function() {
                        C = !1;
                    }
                }), n({
                    target: "Object",
                    stat: !0,
                    forced: !i,
                    sham: !s
                }, {
                    create: function(e1, t) {
                        return void 0 === t ? h(e1) : r(h(e1), t);
                    },
                    defineProperty: L,
                    defineProperties: r,
                    getOwnPropertyDescriptor: t
                }), n({
                    target: "Object",
                    stat: !0,
                    forced: !i
                }, {
                    getOwnPropertyNames: U,
                    getOwnPropertySymbols: I
                }), n({
                    target: "Object",
                    stat: !0,
                    forced: a(function() {
                        p.f(1);
                    })
                }, {
                    getOwnPropertySymbols: function(e1) {
                        return p.f(W(e1));
                    }
                }), S && n({
                    target: "JSON",
                    stat: !0,
                    forced: !i || a(function() {
                        var e1 = w();
                        return "[null]" != S([
                            e1
                        ]) || "{}" != S({
                            a: e1
                        }) || "{}" != S(Object(e1));
                    })
                }, {
                    stringify: function(e1, t, r) {
                        for(var o, n = [
                            e1
                        ], s = 1; s < arguments.length;)n.push(arguments[s++]);
                        if ((H(o = t) || void 0 !== e1) && !P(e1)) return z(t) || (t = function(e1, t) {
                            if ("function" == typeof o && (t = o.call(this, e1, t)), !P(t)) return t;
                        }), n[1] = t, S.apply(null, n);
                    }
                }), w[_][e1] || K(w[_], e1, w[_].valueOf), se(w, j), ee[b] = !0;
            },
            {
                "../internals/an-object": 10,
                "../internals/array-iteration": 19,
                "../internals/create-non-enumerable-property": 38,
                "../internals/create-property-descriptor": 39,
                "../internals/define-well-known-symbol": 42,
                "../internals/descriptors": 43,
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/get-built-in": 56,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/hidden-keys": 61,
                "../internals/internal-state": 70,
                "../internals/is-array": 72,
                "../internals/is-object": 74,
                "../internals/is-pure": 75,
                "../internals/native-symbol": 83,
                "../internals/object-create": 90,
                "../internals/object-define-property": 92,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/object-get-own-property-names": 95,
                "../internals/object-get-own-property-names-external": 94,
                "../internals/object-get-own-property-symbols": 96,
                "../internals/object-keys": 99,
                "../internals/object-property-is-enumerable": 100,
                "../internals/redefine": 108,
                "../internals/set-to-string-tag": 117,
                "../internals/shared": 120,
                "../internals/shared-key": 118,
                "../internals/to-indexed-object": 134,
                "../internals/to-object": 137,
                "../internals/to-primitive": 140,
                "../internals/uid": 145,
                "../internals/use-symbol-as-uid": 146,
                "../internals/well-known-symbol": 148,
                "../internals/well-known-symbol-wrapped": 147
            }
        ],
        203: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/array-copy-within"), s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("copyWithin", function(e1, t) {
                    return n.call(s(this), e1, t, 2 < arguments.length ? arguments[2] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-copy-within": 14
            }
        ],
        204: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/array-iteration").every, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("every", function(e1) {
                    return n(s(this), e1, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19
            }
        ],
        205: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/array-fill"), s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("fill", function(e1) {
                    return n.apply(s(this), arguments);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-fill": 15
            }
        ],
        206: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), s = e1("../internals/array-iteration").filter, i = e1("../internals/species-constructor"), a = o.aTypedArray, l = o.aTypedArrayConstructor;
                (0, o.exportTypedArrayMethod)("filter", function(e1) {
                    for(var t = s(a(this), e1, 1 < arguments.length ? arguments[1] : void 0), e1 = i(this, this.constructor), r = 0, o = t.length, n = new (l(e1))(o); r < o;)n[r] = t[r++];
                    return n;
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19,
                "../internals/species-constructor": 121
            }
        ],
        207: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/array-iteration").findIndex, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("findIndex", function(e1) {
                    return n(s(this), e1, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19
            }
        ],
        208: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/array-iteration").find, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("find", function(e1) {
                    return n(s(this), e1, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19
            }
        ],
        209: [
            function(e1, t, r) {
                e1("../internals/typed-array-constructor")("Float32", function(o) {
                    return function(e1, t, r) {
                        return o(this, e1, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 142
            }
        ],
        210: [
            function(e1, t, r) {
                e1("../internals/typed-array-constructor")("Float64", function(o) {
                    return function(e1, t, r) {
                        return o(this, e1, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 142
            }
        ],
        211: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/array-iteration").forEach, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("forEach", function(e1) {
                    n(s(this), e1, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19
            }
        ],
        212: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/array-includes").includes, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("includes", function(e1) {
                    return n(s(this), e1, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-includes": 18
            }
        ],
        213: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/array-includes").indexOf, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("indexOf", function(e1) {
                    return n(s(this), e1, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-includes": 18
            }
        ],
        214: [
            function(e1, t, r) {
                e1("../internals/typed-array-constructor")("Int16", function(o) {
                    return function(e1, t, r) {
                        return o(this, e1, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 142
            }
        ],
        215: [
            function(e1, t, r) {
                e1("../internals/typed-array-constructor")("Int32", function(o) {
                    return function(e1, t, r) {
                        return o(this, e1, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 142
            }
        ],
        216: [
            function(e1, t, r) {
                "use strict";
                function o() {
                    return a.call(c(this));
                }
                var n = e1("../internals/global"), s = e1("../internals/array-buffer-view-core"), i = e1("../modules/es.array.iterator"), e1 = e1("../internals/well-known-symbol")("iterator"), n = n.Uint8Array, a = i.values, l = i.keys, u = i.entries, c = s.aTypedArray, i = s.exportTypedArrayMethod, s = n && n.prototype[e1], n = !!s && ("values" == s.name || null == s.name);
                i("entries", function() {
                    return u.call(c(this));
                }), i("keys", function() {
                    return l.call(c(this));
                }), i("values", o, !n), i(e1, o, !n);
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/global": 59,
                "../internals/well-known-symbol": 148,
                "../modules/es.array.iterator": 160
            }
        ],
        217: [
            function(e1, t, r) {
                "use strict";
                var e1 = e1("../internals/array-buffer-view-core"), o = e1.aTypedArray, e1 = e1.exportTypedArrayMethod, n = [].join;
                e1("join", function(e1) {
                    return n.apply(o(this), arguments);
                });
            },
            {
                "../internals/array-buffer-view-core": 12
            }
        ],
        218: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/array-last-index-of"), s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("lastIndexOf", function(e1) {
                    return n.apply(s(this), arguments);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-last-index-of": 20
            }
        ],
        219: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/array-iteration").map, s = e1("../internals/species-constructor"), i = o.aTypedArray, a = o.aTypedArrayConstructor;
                (0, o.exportTypedArrayMethod)("map", function(e1) {
                    return n(i(this), e1, 1 < arguments.length ? arguments[1] : void 0, function(e1, t) {
                        return new (a(s(e1, e1.constructor)))(t);
                    });
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19,
                "../internals/species-constructor": 121
            }
        ],
        220: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/array-reduce").right, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("reduceRight", function(e1) {
                    return n(s(this), e1, arguments.length, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-reduce": 24
            }
        ],
        221: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/array-reduce").left, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("reduce", function(e1) {
                    return n(s(this), e1, arguments.length, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-reduce": 24
            }
        ],
        222: [
            function(e1, t, r) {
                "use strict";
                var e1 = e1("../internals/array-buffer-view-core"), n = e1.aTypedArray, e1 = e1.exportTypedArrayMethod, s = Math.floor;
                e1("reverse", function() {
                    for(var e1, t = n(this).length, r = s(t / 2), o = 0; o < r;)e1 = this[o], this[o++] = this[--t], this[t] = e1;
                    return this;
                });
            },
            {
                "../internals/array-buffer-view-core": 12
            }
        ],
        223: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), i = e1("../internals/to-length"), a = e1("../internals/to-offset"), l = e1("../internals/to-object"), e1 = e1("../internals/fails"), u = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("set", function(e1) {
                    u(this);
                    var t = a(1 < arguments.length ? arguments[1] : void 0, 1), r = this.length, o = l(e1), n = i(o.length), s = 0;
                    if (r < n + t) throw RangeError("Wrong length");
                    for(; s < n;)this[t + s] = o[s++];
                }, e1(function() {
                    new Int8Array(1).set({});
                }));
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/fails": 51,
                "../internals/to-length": 136,
                "../internals/to-object": 137,
                "../internals/to-offset": 138
            }
        ],
        224: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), i = e1("../internals/species-constructor"), e1 = e1("../internals/fails"), a = o.aTypedArray, l = o.aTypedArrayConstructor, o = o.exportTypedArrayMethod, u = [].slice;
                o("slice", function(e1, t) {
                    for(var r = u.call(a(this), e1, t), e1 = i(this, this.constructor), o = 0, n = r.length, s = new (l(e1))(n); o < n;)s[o] = r[o++];
                    return s;
                }, e1(function() {
                    new Int8Array(1).slice();
                }));
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/fails": 51,
                "../internals/species-constructor": 121
            }
        ],
        225: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/array-iteration").some, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("some", function(e1) {
                    return n(s(this), e1, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19
            }
        ],
        226: [
            function(e1, t, r) {
                "use strict";
                var e1 = e1("../internals/array-buffer-view-core"), o = e1.aTypedArray, e1 = e1.exportTypedArrayMethod, n = [].sort;
                e1("sort", function(e1) {
                    return n.call(o(this), e1);
                });
            },
            {
                "../internals/array-buffer-view-core": 12
            }
        ],
        227: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core"), n = e1("../internals/to-length"), s = e1("../internals/to-absolute-index"), i = e1("../internals/species-constructor"), a = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("subarray", function(e1, t) {
                    var r = a(this), o = r.length, e1 = s(e1, o);
                    return new (i(r, r.constructor))(r.buffer, r.byteOffset + e1 * r.BYTES_PER_ELEMENT, n((void 0 === t ? o : s(t, o)) - e1));
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/species-constructor": 121,
                "../internals/to-absolute-index": 132,
                "../internals/to-length": 136
            }
        ],
        228: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/global"), n = e1("../internals/array-buffer-view-core"), e1 = e1("../internals/fails"), s = o.Int8Array, i = n.aTypedArray, o = n.exportTypedArrayMethod, a = [].toLocaleString, l = [].slice, u = !!s && e1(function() {
                    a.call(new s(1));
                });
                o("toLocaleString", function() {
                    return a.apply(u ? l.call(i(this)) : i(this), arguments);
                }, e1(function() {
                    return [
                        1,
                        2
                    ].toLocaleString() != new s([
                        1,
                        2
                    ]).toLocaleString();
                }) || !e1(function() {
                    s.prototype.toLocaleString.call([
                        1,
                        2
                    ]);
                }));
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/fails": 51,
                "../internals/global": 59
            }
        ],
        229: [
            function(e1, t, r) {
                "use strict";
                var o = e1("../internals/array-buffer-view-core").exportTypedArrayMethod, n = e1("../internals/fails"), e1 = e1("../internals/global").Uint8Array, e1 = e1 && e1.prototype || {}, s = [].toString, i = [].join, n = (n(function() {
                    s.call({});
                }) && (s = function() {
                    return i.call(this);
                }), e1.toString != s);
                o("toString", s, n);
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/fails": 51,
                "../internals/global": 59
            }
        ],
        230: [
            function(e1, t, r) {
                e1("../internals/typed-array-constructor")("Uint16", function(o) {
                    return function(e1, t, r) {
                        return o(this, e1, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 142
            }
        ],
        231: [
            function(e1, t, r) {
                e1("../internals/typed-array-constructor")("Uint32", function(o) {
                    return function(e1, t, r) {
                        return o(this, e1, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 142
            }
        ],
        232: [
            function(e1, t, r) {
                e1("../internals/typed-array-constructor")("Uint8", function(o) {
                    return function(e1, t, r) {
                        return o(this, e1, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 142
            }
        ],
        233: [
            function(e1, t, r) {
                e1("../internals/typed-array-constructor")("Uint8", function(o) {
                    return function(e1, t, r) {
                        return o(this, e1, t, r);
                    };
                }, !0);
            },
            {
                "../internals/typed-array-constructor": 142
            }
        ],
        234: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return function() {
                        return e1(this, arguments.length ? arguments[0] : void 0);
                    };
                }
                var n, s, i, a, l, u = e1("../internals/global"), c = e1("../internals/redefine-all"), d = e1("../internals/internal-metadata"), f = e1("../internals/collection"), h = e1("../internals/collection-weak"), p = e1("../internals/is-object"), m = e1("../internals/internal-state").enforce, e1 = e1("../internals/native-weak-map"), u = !u.ActiveXObject && "ActiveXObject" in u, y = Object.isExtensible, t = t.exports = f("WeakMap", o, h);
                e1 && u && (n = h.getConstructor(o, "WeakMap", !0), d.REQUIRED = !0, f = t.prototype, s = f.delete, i = f.has, a = f.get, l = f.set, c(f, {
                    delete: function(e1) {
                        var t;
                        return p(e1) && !y(e1) ? ((t = m(this)).frozen || (t.frozen = new n), s.call(this, e1) || t.frozen.delete(e1)) : s.call(this, e1);
                    },
                    has: function(e1) {
                        var t;
                        return p(e1) && !y(e1) ? ((t = m(this)).frozen || (t.frozen = new n), i.call(this, e1) || t.frozen.has(e1)) : i.call(this, e1);
                    },
                    get: function(e1) {
                        var t;
                        return !p(e1) || y(e1) || ((t = m(this)).frozen || (t.frozen = new n), i.call(this, e1)) ? a.call(this, e1) : t.frozen.get(e1);
                    },
                    set: function(e1, t) {
                        var r;
                        return !p(e1) || y(e1) || ((r = m(this)).frozen || (r.frozen = new n), i.call(this, e1)) ? l.call(this, e1, t) : r.frozen.set(e1, t), this;
                    }
                }));
            },
            {
                "../internals/collection": 32,
                "../internals/collection-weak": 31,
                "../internals/global": 59,
                "../internals/internal-metadata": 69,
                "../internals/internal-state": 70,
                "../internals/is-object": 74,
                "../internals/native-weak-map": 85,
                "../internals/redefine-all": 107
            }
        ],
        235: [
            function(e1, t, r) {
                var o, n = e1("../internals/global"), s = e1("../internals/dom-iterables"), i = e1("../internals/array-for-each"), a = e1("../internals/create-non-enumerable-property");
                for(o in s){
                    var l = n[o], l = l && l.prototype;
                    if (l && l.forEach !== i) try {
                        a(l, "forEach", i);
                    } catch (e1) {
                        l.forEach = i;
                    }
                }
            },
            {
                "../internals/array-for-each": 16,
                "../internals/create-non-enumerable-property": 38,
                "../internals/dom-iterables": 45,
                "../internals/global": 59
            }
        ],
        236: [
            function(e1, t, r) {
                var o, n = e1("../internals/global"), s = e1("../internals/dom-iterables"), i = e1("../modules/es.array.iterator"), a = e1("../internals/create-non-enumerable-property"), e1 = e1("../internals/well-known-symbol"), l = e1("iterator"), u = e1("toStringTag"), c = i.values;
                for(o in s){
                    var d = n[o], f = d && d.prototype;
                    if (f) {
                        if (f[l] !== c) try {
                            a(f, l, c);
                        } catch (e1) {
                            f[l] = c;
                        }
                        if (f[u] || a(f, u, o), s[o]) {
                            for(var h in i)if (f[h] !== i[h]) try {
                                a(f, h, i[h]);
                            } catch (e1) {
                                f[h] = i[h];
                            }
                        }
                    }
                }
            },
            {
                "../internals/create-non-enumerable-property": 38,
                "../internals/dom-iterables": 45,
                "../internals/global": 59,
                "../internals/well-known-symbol": 148,
                "../modules/es.array.iterator": 160
            }
        ],
        237: [
            function(e1, t, D) {
                "use strict";
                e1("../modules/es.array.iterator");
                function n(t) {
                    try {
                        return decodeURIComponent(t);
                    } catch (e1) {
                        return t;
                    }
                }
                function r(e1) {
                    return B[e1];
                }
                function s(e1) {
                    return encodeURIComponent(e1).replace(N, r);
                }
                function c(e1) {
                    this.entries.length = 0, R(this.entries, e1);
                }
                function u(e1, t) {
                    if (e1 < t) throw TypeError("Not enough arguments");
                }
                function d() {
                    y(this, d, k);
                    var e1, t, r, o, n, s, i, a, l = 0 < arguments.length ? arguments[0] : void 0, u = [];
                    if (C(this, {
                        type: k,
                        entries: u,
                        updateURL: function() {},
                        updateSearchParams: c
                    }), void 0 !== l) {
                        if (_(l)) {
                            if ("function" == typeof (e1 = E(l))) for(r = (t = e1.call(l)).next; !(o = r.call(t)).done;){
                                if ((s = (n = (o = S(j(o.value))).next).call(o)).done || (i = n.call(o)).done || !n.call(o).done) throw TypeError("Expected sequence with length 2");
                                u.push({
                                    key: s.value + "",
                                    value: i.value + ""
                                });
                            }
                            else for(a in l)g(l, a) && u.push({
                                key: a,
                                value: l[a] + ""
                            });
                        } else R(u, "string" == typeof l ? "?" === l.charAt(0) ? l.slice(1) : l : l + "");
                    }
                }
                var o = e1("../internals/export"), i = e1("../internals/get-built-in"), a = e1("../internals/native-url"), l = e1("../internals/redefine"), f = e1("../internals/redefine-all"), h = e1("../internals/set-to-string-tag"), p = e1("../internals/create-iterator-constructor"), m = e1("../internals/internal-state"), y = e1("../internals/an-instance"), g = e1("../internals/has"), v = e1("../internals/function-bind-context"), b = e1("../internals/classof"), j = e1("../internals/an-object"), _ = e1("../internals/is-object"), x = e1("../internals/object-create"), w = e1("../internals/create-property-descriptor"), S = e1("../internals/get-iterator"), E = e1("../internals/get-iterator-method"), e1 = e1("../internals/well-known-symbol"), M = i("fetch"), T = i("Headers"), i = e1("iterator"), k = "URLSearchParams", O = k + "Iterator", C = m.set, A = m.getterFor(k), F = m.getterFor(O), U = /\+/g, P = Array(4), L = function(e1) {
                    var t, r = e1.replace(U, " "), o = 4;
                    try {
                        return decodeURIComponent(r);
                    } catch (e1) {
                        for(; o;)r = r.replace((t = o--, P[t - 1] || (P[t - 1] = RegExp("((?:%[\\da-f]{2}){" + t + "})", "gi"))), n);
                        return r;
                    }
                }, N = /[!'()~]|%20/g, B = {
                    "!": "%21",
                    "'": "%27",
                    "(": "%28",
                    ")": "%29",
                    "~": "%7E",
                    "%20": "+"
                }, R = function(e1, t) {
                    if (t) for(var r, o = t.split("&"), n = 0; n < o.length;)(r = o[n++]).length && (r = r.split("="), e1.push({
                        key: L(r.shift()),
                        value: L(r.join("="))
                    }));
                }, I = p(function(e1, t) {
                    C(this, {
                        type: O,
                        iterator: S(A(e1).entries),
                        kind: t
                    });
                }, "Iterator", function() {
                    var e1 = F(this), t = e1.kind, e1 = e1.iterator.next(), r = e1.value;
                    return e1.done || (e1.value = "keys" === t ? r.key : "values" === t ? r.value : [
                        r.key,
                        r.value
                    ]), e1;
                }), e1 = d.prototype;
                f(e1, {
                    append: function(e1, t) {
                        u(arguments.length, 2);
                        var r = A(this);
                        r.entries.push({
                            key: e1 + "",
                            value: t + ""
                        }), r.updateURL();
                    },
                    delete: function(e1) {
                        u(arguments.length, 1);
                        for(var t = A(this), r = t.entries, o = e1 + "", n = 0; n < r.length;)r[n].key === o ? r.splice(n, 1) : n++;
                        t.updateURL();
                    },
                    get: function(e1) {
                        u(arguments.length, 1);
                        for(var t = A(this).entries, r = e1 + "", o = 0; o < t.length; o++)if (t[o].key === r) return t[o].value;
                        return null;
                    },
                    getAll: function(e1) {
                        u(arguments.length, 1);
                        for(var t = A(this).entries, r = e1 + "", o = [], n = 0; n < t.length; n++)t[n].key === r && o.push(t[n].value);
                        return o;
                    },
                    has: function(e1) {
                        u(arguments.length, 1);
                        for(var t = A(this).entries, r = e1 + "", o = 0; o < t.length;)if (t[o++].key === r) return !0;
                        return !1;
                    },
                    set: function(e1, t) {
                        u(arguments.length, 1);
                        for(var r, o = A(this), n = o.entries, s = !1, i = e1 + "", a = t + "", l = 0; l < n.length; l++)(r = n[l]).key === i && (s ? n.splice(l--, 1) : (s = !0, r.value = a));
                        s || n.push({
                            key: i,
                            value: a
                        }), o.updateURL();
                    },
                    sort: function() {
                        for(var e1, t, r = A(this), o = r.entries, n = o.slice(), s = o.length = 0; s < n.length; s++){
                            for(e1 = n[s], t = 0; t < s; t++)if (o[t].key > e1.key) {
                                o.splice(t, 0, e1);
                                break;
                            }
                            t === s && o.push(e1);
                        }
                        r.updateURL();
                    },
                    forEach: function(e1) {
                        for(var t, r = A(this).entries, o = v(e1, 1 < arguments.length ? arguments[1] : void 0, 3), n = 0; n < r.length;)o((t = r[n++]).value, t.key, this);
                    },
                    keys: function() {
                        return new I(this, "keys");
                    },
                    values: function() {
                        return new I(this, "values");
                    },
                    entries: function() {
                        return new I(this, "entries");
                    }
                }, {
                    enumerable: !0
                }), l(e1, i, e1.entries), l(e1, "toString", function() {
                    for(var e1, t = A(this).entries, r = [], o = 0; o < t.length;)e1 = t[o++], r.push(s(e1.key) + "=" + s(e1.value));
                    return r.join("&");
                }, {
                    enumerable: !0
                }), h(d, k), o({
                    global: !0,
                    forced: !a
                }, {
                    URLSearchParams: d
                }), a || "function" != typeof M || "function" != typeof T || o({
                    global: !0,
                    enumerable: !0,
                    forced: !0
                }, {
                    fetch: function(e1) {
                        var t, r, o, e1 = [
                            e1
                        ];
                        return 1 < arguments.length && (_(t = arguments[1]) && (r = t.body, b(r) === k && ((o = t.headers ? new T(t.headers) : new T).has("content-type") || o.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"), t = x(t, {
                            body: w(0, String(r)),
                            headers: w(0, o)
                        }))), e1.push(t)), M.apply(this, e1);
                    }
                }), t.exports = {
                    URLSearchParams: d,
                    getState: A
                };
            },
            {
                "../internals/an-instance": 9,
                "../internals/an-object": 10,
                "../internals/classof": 29,
                "../internals/create-iterator-constructor": 37,
                "../internals/create-property-descriptor": 39,
                "../internals/export": 50,
                "../internals/function-bind-context": 54,
                "../internals/get-built-in": 56,
                "../internals/get-iterator": 58,
                "../internals/get-iterator-method": 57,
                "../internals/has": 60,
                "../internals/internal-state": 70,
                "../internals/is-object": 74,
                "../internals/native-url": 84,
                "../internals/object-create": 90,
                "../internals/redefine": 108,
                "../internals/redefine-all": 107,
                "../internals/set-to-string-tag": 117,
                "../internals/well-known-symbol": 148,
                "../modules/es.array.iterator": 160
            }
        ],
        238: [
            function(e1, y, F) {
                "use strict";
                e1("../modules/es.string.iterator");
                function c(e1) {
                    var t, r, o, n;
                    if ("number" == typeof e1) {
                        for(t = [], r = 0; r < 4; r++)t.unshift(e1 % 256), e1 = Y(e1 / 256);
                        return t.join(".");
                    }
                    if ("object" != typeof e1) return e1;
                    for(t = "", o = le(e1), r = 0; r < 8; r++)n && 0 === e1[r] || (n = n && !1, o === r ? (t += r ? ":" : "::", n = !0) : (t += e1[r].toString(16), r < 7 && (t += ":")));
                    return "[" + t + "]";
                }
                function n(e1) {
                    return !e1.host || e1.cannotBeABaseURL || "file" == e1.scheme;
                }
                function a(e1, t, r, o) {
                    var n, s, i, a = r || me, l = 0, u = "", c = !1, d = !1, f = !1;
                    for(r || (e1.scheme = "", e1.username = "", e1.password = "", e1.host = null, e1.port = null, e1.path = [], e1.query = null, e1.fragment = null, e1.cannotBeABaseURL = !1, t = t.replace(ie, "")), t = t.replace(ae, ""), n = b(t); l <= n.length;){
                        switch(s = n[l], a){
                            case me:
                                if (!s || !K.test(s)) {
                                    if (r) return j;
                                    a = ge;
                                    continue;
                                }
                                u += s.toLowerCase(), a = ye;
                                break;
                            case ye:
                                if (s && ($.test(s) || "+" == s || "-" == s || "." == s)) u += s.toLowerCase();
                                else {
                                    if (":" != s) {
                                        if (r) return j;
                                        u = "", a = ge, l = 0;
                                        continue;
                                    }
                                    if (r && (k(e1) != v(T, u) || "file" == u && (O(e1) || null !== e1.port) || "file" == e1.scheme && !e1.host)) return;
                                    if (e1.scheme = u, r) return void (k(e1) && T[e1.scheme] == e1.port && (e1.port = null));
                                    u = "", "file" == e1.scheme ? a = Me : k(e1) && o && o.scheme == e1.scheme ? a = ve : k(e1) ? a = xe : "/" == n[l + 1] ? (a = be, l++) : (e1.cannotBeABaseURL = !0, e1.path.push(""), a = Oe);
                                }
                                break;
                            case ge:
                                if (!o || o.cannotBeABaseURL && "#" != s) return j;
                                if (o.cannotBeABaseURL && "#" == s) {
                                    e1.scheme = o.scheme, e1.path = o.path.slice(), e1.query = o.query, e1.fragment = "", e1.cannotBeABaseURL = !0, a = D;
                                    break;
                                }
                                a = "file" == o.scheme ? Me : je;
                                continue;
                            case ve:
                                if ("/" != s || "/" != n[l + 1]) {
                                    a = je;
                                    continue;
                                }
                                a = A, l++;
                                break;
                            case be:
                                if ("/" == s) {
                                    a = P;
                                    break;
                                }
                                a = R;
                                continue;
                            case je:
                                if (e1.scheme = o.scheme, s == g) e1.username = o.username, e1.password = o.password, e1.host = o.host, e1.port = o.port, e1.path = o.path.slice(), e1.query = o.query;
                                else if ("/" == s || "\\" == s && k(e1)) a = _e;
                                else if ("?" == s) e1.username = o.username, e1.password = o.password, e1.host = o.host, e1.port = o.port, e1.path = o.path.slice(), e1.query = "", a = I;
                                else {
                                    if ("#" != s) {
                                        e1.username = o.username, e1.password = o.password, e1.host = o.host, e1.port = o.port, e1.path = o.path.slice(), e1.path.pop(), a = R;
                                        continue;
                                    }
                                    e1.username = o.username, e1.password = o.password, e1.host = o.host, e1.port = o.port, e1.path = o.path.slice(), e1.query = o.query, e1.fragment = "", a = D;
                                }
                                break;
                            case _e:
                                if (!k(e1) || "/" != s && "\\" != s) {
                                    if ("/" != s) {
                                        e1.username = o.username, e1.password = o.password, e1.host = o.host, e1.port = o.port, a = R;
                                        continue;
                                    }
                                    a = P;
                                } else a = A;
                                break;
                            case xe:
                                if (a = A, "/" != s || "/" != u.charAt(l + 1)) continue;
                                l++;
                                break;
                            case A:
                                if ("/" == s || "\\" == s) break;
                                a = P;
                                continue;
                            case P:
                                if ("@" == s) {
                                    c && (u = "%40" + u);
                                    for(var c = !0, h = b(u), p = 0; p < h.length; p++){
                                        var m = h[p];
                                        ":" != m || f ? (m = M(m, E), f ? e1.password += m : e1.username += m) : f = !0;
                                    }
                                    u = "";
                                } else if (s == g || "/" == s || "?" == s || "#" == s || "\\" == s && k(e1)) {
                                    if (c && "" == u) return Q;
                                    l -= b(u).length + 1, u = "", a = we;
                                } else u += s;
                                break;
                            case we:
                            case Se:
                                if (r && "file" == e1.scheme) {
                                    a = ke;
                                    continue;
                                }
                                if (":" != s || d) {
                                    if (s == g || "/" == s || "?" == s || "#" == s || "\\" == s && k(e1)) {
                                        if (k(e1) && "" == u) return _;
                                        if (r && "" == u && (O(e1) || null !== e1.port)) return;
                                        if (i = w(e1, u)) return i;
                                        if (u = "", a = L, r) return;
                                        continue;
                                    }
                                    "[" == s ? d = !0 : "]" == s && (d = !1), u += s;
                                } else {
                                    if ("" == u) return _;
                                    if (i = w(e1, u)) return i;
                                    if (u = "", a = Ee, r == Se) return;
                                }
                                break;
                            case Ee:
                                if (!x.test(s)) {
                                    if (s == g || "/" == s || "?" == s || "#" == s || "\\" == s && k(e1) || r) {
                                        if ("" != u) {
                                            var y = parseInt(u, 10);
                                            if (65535 < y) return J;
                                            e1.port = k(e1) && y === T[e1.scheme] ? null : y, u = "";
                                        }
                                        if (r) return;
                                        a = L;
                                        continue;
                                    }
                                    return J;
                                }
                                u += s;
                                break;
                            case Me:
                                if (e1.scheme = "file", "/" == s || "\\" == s) a = Te;
                                else {
                                    if (!o || "file" != o.scheme) {
                                        a = R;
                                        continue;
                                    }
                                    if (s == g) e1.host = o.host, e1.path = o.path.slice(), e1.query = o.query;
                                    else if ("?" == s) e1.host = o.host, e1.path = o.path.slice(), e1.query = "", a = I;
                                    else {
                                        if ("#" != s) {
                                            de(n.slice(l).join("")) || (e1.host = o.host, e1.path = o.path.slice(), fe(e1)), a = R;
                                            continue;
                                        }
                                        e1.host = o.host, e1.path = o.path.slice(), e1.query = o.query, e1.fragment = "", a = D;
                                    }
                                }
                                break;
                            case Te:
                                if ("/" == s || "\\" == s) {
                                    a = ke;
                                    break;
                                }
                                o && "file" == o.scheme && !de(n.slice(l).join("")) && (C(o.path[0], !0) ? e1.path.push(o.path[0]) : e1.host = o.host), a = R;
                                continue;
                            case ke:
                                if (s == g || "/" == s || "\\" == s || "?" == s || "#" == s) {
                                    if (!r && C(u)) a = R;
                                    else {
                                        if ("" == u) {
                                            if (e1.host = "", r) return;
                                        } else {
                                            if (i = w(e1, u)) return i;
                                            if ("localhost" == e1.host && (e1.host = ""), r) return;
                                            u = "";
                                        }
                                        a = L;
                                    }
                                    continue;
                                }
                                u += s;
                                break;
                            case L:
                                if (k(e1)) {
                                    if (a = R, "/" != s && "\\" != s) continue;
                                } else if (r || "?" != s) {
                                    if (r || "#" != s) {
                                        if (s != g && (a = R, "/" != s)) continue;
                                    } else e1.fragment = "", a = D;
                                } else e1.query = "", a = I;
                                break;
                            case R:
                                if (s == g || "/" == s || "\\" == s && k(e1) || !r && ("?" == s || "#" == s)) {
                                    if (pe(u) ? (fe(e1), "/" == s || "\\" == s && k(e1) || e1.path.push("")) : he(u) ? "/" == s || "\\" == s && k(e1) || e1.path.push("") : ("file" == e1.scheme && !e1.path.length && C(u) && (e1.host && (e1.host = ""), u = u.charAt(0) + ":"), e1.path.push(u)), u = "", "file" == e1.scheme && (s == g || "?" == s || "#" == s)) for(; 1 < e1.path.length && "" === e1.path[0];)e1.path.shift();
                                    "?" == s ? (e1.query = "", a = I) : "#" == s && (e1.fragment = "", a = D);
                                } else u += M(s, ce);
                                break;
                            case Oe:
                                "?" == s ? (e1.query = "", a = I) : "#" == s ? (e1.fragment = "", a = D) : s != g && (e1.path[0] += M(s, S));
                                break;
                            case I:
                                r || "#" != s ? s != g && ("'" == s && k(e1) ? e1.query += "%27" : e1.query += "#" == s ? "%23" : M(s, S)) : (e1.fragment = "", a = D);
                                break;
                            case D:
                                s != g && (e1.fragment += M(s, ue));
                        }
                        l++;
                    }
                }
                function l(e1) {
                    var t, r, o = G(this, l, "URL"), n = 1 < arguments.length ? arguments[1] : void 0, e1 = String(e1), s = X(o, {
                        type: "URL"
                    });
                    if (void 0 !== n) {
                        if (n instanceof l) t = p(n);
                        else if (r = a(t = {}, String(n))) throw TypeError(r);
                    }
                    if (r = a(s, e1, null, t)) throw TypeError(r);
                    var i = s.searchParams = new q;
                    (n = h(i)).updateSearchParams(s.query), n.updateURL = function() {
                        s.query = String(i) || null;
                    }, u || (o.href = m.call(o), o.origin = Ce.call(o), o.protocol = Ae.call(o), o.username = Pe.call(o), o.password = Le.call(o), o.host = Re.call(o), o.hostname = Ie.call(o), o.port = De.call(o), o.pathname = Fe.call(o), o.search = Ue.call(o), o.searchParams = Ne.call(o), o.hash = Be.call(o));
                }
                function t(e1, t) {
                    return {
                        get: e1,
                        set: t,
                        configurable: !0,
                        enumerable: !0
                    };
                }
                var g, r, o, U = e1("../internals/export"), u = e1("../internals/descriptors"), N = e1("../internals/native-url"), s = e1("../internals/global"), B = e1("../internals/object-define-properties"), i = e1("../internals/redefine"), G = e1("../internals/an-instance"), v = e1("../internals/has"), d = e1("../internals/object-assign"), b = e1("../internals/array-from"), V = e1("../internals/string-multibyte").codeAt, z = e1("../internals/string-punycode-to-ascii"), H = e1("../internals/set-to-string-tag"), W = e1("../modules/web.url-search-params"), e1 = e1("../internals/internal-state"), f = s.URL, q = W.URLSearchParams, h = W.getState, X = e1.set, p = e1.getterFor("URL"), Y = Math.floor, Z = Math.pow, Q = "Invalid authority", j = "Invalid scheme", _ = "Invalid host", J = "Invalid port", K = /[A-Za-z]/, $ = /[\d+-.A-Za-z]/, x = /\d/, ee = /^(0x|0X)/, te = /^[0-7]+$/, re = /^\d+$/, oe = /^[\dA-Fa-f]+$/, ne = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/, se = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/, ie = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g, ae = /[\u0009\u000A\u000D]/g, w = function(e1, t) {
                    var r, o, n;
                    if ("[" == t.charAt(0)) return "]" == t.charAt(t.length - 1) && (r = function(e1) {
                        var t = [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ], r = 0, o = null, n = 0, s, i, a, l, u, c, d, f = function() {
                            return e1.charAt(n);
                        };
                        if (f() == ":") {
                            if (e1.charAt(1) != ":") return;
                            n += 2;
                            r++;
                            o = r;
                        }
                        while(f()){
                            if (r == 8) return;
                            if (f() == ":") {
                                if (o !== null) return;
                                n++;
                                r++;
                                o = r;
                                continue;
                            }
                            s = i = 0;
                            while(i < 4 && oe.test(f())){
                                s = s * 16 + parseInt(f(), 16);
                                n++;
                                i++;
                            }
                            if (f() == ".") {
                                if (i == 0) return;
                                n -= i;
                                if (r > 6) return;
                                a = 0;
                                while(f()){
                                    l = null;
                                    if (a > 0) {
                                        if (f() == "." && a < 4) n++;
                                        else return;
                                    }
                                    if (!x.test(f())) return;
                                    while(x.test(f())){
                                        u = parseInt(f(), 10);
                                        if (l === null) l = u;
                                        else if (l == 0) return;
                                        else l = l * 10 + u;
                                        if (l > 255) return;
                                        n++;
                                    }
                                    t[r] = t[r] * 256 + l;
                                    a++;
                                    if (a == 2 || a == 4) r++;
                                }
                                if (a != 4) return;
                                break;
                            } else if (f() == ":") {
                                n++;
                                if (!f()) return;
                            } else if (f()) return;
                            t[r++] = s;
                        }
                        if (o !== null) {
                            c = r - o;
                            r = 7;
                            while(r != 0 && c > 0){
                                d = t[r];
                                t[r--] = t[o + c - 1];
                                t[o + --c] = d;
                            }
                        } else if (r != 8) return;
                        return t;
                    }(t.slice(1, -1))) ? void (e1.host = r) : _;
                    if (k(e1)) return t = z(t), ne.test(t) || null === (r = function(e1) {
                        var t = e1.split("."), r, o, n, s, i, a, l;
                        if (t.length && t[t.length - 1] == "") t.pop();
                        if ((r = t.length) > 4) return e1;
                        for(o = [], n = 0; n < r; n++){
                            s = t[n];
                            if (s == "") return e1;
                            i = 10;
                            if (s.length > 1 && s.charAt(0) == "0") {
                                i = ee.test(s) ? 16 : 8;
                                s = s.slice(i == 8 ? 1 : 2);
                            }
                            if (s === "") a = 0;
                            else {
                                if (!(i == 10 ? re : i == 8 ? te : oe).test(s)) return e1;
                                a = parseInt(s, i);
                            }
                            o.push(a);
                        }
                        for(n = 0; n < r; n++){
                            a = o[n];
                            if (n == r - 1) {
                                if (a >= Z(256, 5 - r)) return null;
                            } else if (a > 255) return null;
                        }
                        for(l = o.pop(), n = 0; n < o.length; n++)l += o[n] * Z(256, 3 - n);
                        return l;
                    }(t)) ? _ : void (e1.host = r);
                    if (se.test(t)) return _;
                    for(r = "", o = b(t), n = 0; n < o.length; n++)r += M(o[n], S);
                    e1.host = r;
                }, le = function(e1) {
                    for(var t = null, r = 1, o = null, n = 0, s = 0; s < 8; s++)0 !== e1[s] ? (r < n && (t = o, r = n), o = null, n = 0) : (null === o && (o = s), ++n);
                    return r < n && (t = o, r = n), t;
                }, S = {}, ue = d({}, S, {
                    " ": 1,
                    '"': 1,
                    "<": 1,
                    ">": 1,
                    "`": 1
                }), ce = d({}, ue, {
                    "#": 1,
                    "?": 1,
                    "{": 1,
                    "}": 1
                }), E = d({}, ce, {
                    "/": 1,
                    ":": 1,
                    ";": 1,
                    "=": 1,
                    "@": 1,
                    "[": 1,
                    "\\": 1,
                    "]": 1,
                    "^": 1,
                    "|": 1
                }), M = function(e1, t) {
                    var r = V(e1, 0);
                    return 32 < r && r < 127 && !v(t, e1) ? e1 : encodeURIComponent(e1);
                }, T = {
                    ftp: 21,
                    file: null,
                    http: 80,
                    https: 443,
                    ws: 80,
                    wss: 443
                }, k = function(e1) {
                    return v(T, e1.scheme);
                }, O = function(e1) {
                    return "" != e1.username || "" != e1.password;
                }, C = function(e1, t) {
                    return 2 == e1.length && K.test(e1.charAt(0)) && (":" == (e1 = e1.charAt(1)) || !t && "|" == e1);
                }, de = function(e1) {
                    return 1 < e1.length && C(e1.slice(0, 2)) && (2 == e1.length || "/" === (e1 = e1.charAt(2)) || "\\" === e1 || "?" === e1 || "#" === e1);
                }, fe = function(e1) {
                    var t = e1.path, r = t.length;
                    !r || "file" == e1.scheme && 1 == r && C(t[0], !0) || t.pop();
                }, he = function(e1) {
                    return "." === e1 || "%2e" === e1.toLowerCase();
                }, pe = function(e1) {
                    return ".." === (e1 = e1.toLowerCase()) || "%2e." === e1 || ".%2e" === e1 || "%2e%2e" === e1;
                }, me = {}, ye = {}, ge = {}, ve = {}, be = {}, je = {}, _e = {}, xe = {}, A = {}, P = {}, we = {}, Se = {}, Ee = {}, Me = {}, Te = {}, ke = {}, L = {}, R = {}, Oe = {}, I = {}, D = {}, s = l.prototype, m = function() {
                    var e1 = p(this), t = e1.scheme, r = e1.username, o = e1.password, n = e1.host, s = e1.port, i = e1.path, a = e1.query, l = e1.fragment, u = t + ":";
                    return null !== n ? (u += "//", O(e1) && (u += r + (o ? ":" + o : "") + "@"), u += c(n), null !== s && (u += ":" + s)) : "file" == t && (u += "//"), u += e1.cannotBeABaseURL ? i[0] : i.length ? "/" + i.join("/") : "", null !== a && (u += "?" + a), null !== l && (u += "#" + l), u;
                }, Ce = function() {
                    var e1 = p(this), t = e1.scheme, r = e1.port;
                    if ("blob" == t) try {
                        return new URL(t.path[0]).origin;
                    } catch (e1) {
                        return "null";
                    }
                    return "file" != t && k(e1) ? t + "://" + c(e1.host) + (null !== r ? ":" + r : "") : "null";
                }, Ae = function() {
                    return p(this).scheme + ":";
                }, Pe = function() {
                    return p(this).username;
                }, Le = function() {
                    return p(this).password;
                }, Re = function() {
                    var e1 = p(this), t = e1.host, e1 = e1.port;
                    return null === t ? "" : null === e1 ? c(t) : c(t) + ":" + e1;
                }, Ie = function() {
                    var e1 = p(this).host;
                    return null === e1 ? "" : c(e1);
                }, De = function() {
                    var e1 = p(this).port;
                    return null === e1 ? "" : String(e1);
                }, Fe = function() {
                    var e1 = p(this), t = e1.path;
                    return e1.cannotBeABaseURL ? t[0] : t.length ? "/" + t.join("/") : "";
                }, Ue = function() {
                    var e1 = p(this).query;
                    return e1 ? "?" + e1 : "";
                }, Ne = function() {
                    return p(this).searchParams;
                }, Be = function() {
                    var e1 = p(this).fragment;
                    return e1 ? "#" + e1 : "";
                };
                u && B(s, {
                    href: t(m, function(e1) {
                        var t = p(this), e1 = String(e1), e1 = a(t, e1);
                        if (e1) throw TypeError(e1);
                        h(t.searchParams).updateSearchParams(t.query);
                    }),
                    origin: t(Ce),
                    protocol: t(Ae, function(e1) {
                        var t = p(this);
                        a(t, String(e1) + ":", me);
                    }),
                    username: t(Pe, function(e1) {
                        var t = p(this), r = b(String(e1));
                        if (!n(t)) {
                            t.username = "";
                            for(var o = 0; o < r.length; o++)t.username += M(r[o], E);
                        }
                    }),
                    password: t(Le, function(e1) {
                        var t = p(this), r = b(String(e1));
                        if (!n(t)) {
                            t.password = "";
                            for(var o = 0; o < r.length; o++)t.password += M(r[o], E);
                        }
                    }),
                    host: t(Re, function(e1) {
                        var t = p(this);
                        t.cannotBeABaseURL || a(t, String(e1), we);
                    }),
                    hostname: t(Ie, function(e1) {
                        var t = p(this);
                        t.cannotBeABaseURL || a(t, String(e1), Se);
                    }),
                    port: t(De, function(e1) {
                        var t = p(this);
                        n(t) || ("" == (e1 = String(e1)) ? t.port = null : a(t, e1, Ee));
                    }),
                    pathname: t(Fe, function(e1) {
                        var t = p(this);
                        t.cannotBeABaseURL || (t.path = [], a(t, e1 + "", L));
                    }),
                    search: t(Ue, function(e1) {
                        var t = p(this);
                        "" == (e1 = String(e1)) ? t.query = null : ("?" == e1.charAt(0) && (e1 = e1.slice(1)), t.query = "", a(t, e1, I)), h(t.searchParams).updateSearchParams(t.query);
                    }),
                    searchParams: t(Ne),
                    hash: t(Be, function(e1) {
                        var t = p(this);
                        "" == (e1 = String(e1)) ? t.fragment = null : ("#" == e1.charAt(0) && (e1 = e1.slice(1)), t.fragment = "", a(t, e1, D));
                    })
                }), i(s, "toJSON", function() {
                    return m.call(this);
                }, {
                    enumerable: !0
                }), i(s, "toString", function() {
                    return m.call(this);
                }, {
                    enumerable: !0
                }), f && (r = f.createObjectURL, o = f.revokeObjectURL, r && i(l, "createObjectURL", function(e1) {
                    return r.apply(f, arguments);
                }), o && i(l, "revokeObjectURL", function(e1) {
                    return o.apply(f, arguments);
                })), H(l, "URL"), U({
                    global: !0,
                    forced: !N,
                    sham: !u
                }, {
                    URL: l
                });
            },
            {
                "../internals/an-instance": 9,
                "../internals/array-from": 17,
                "../internals/descriptors": 43,
                "../internals/export": 50,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/internal-state": 70,
                "../internals/native-url": 84,
                "../internals/object-assign": 89,
                "../internals/object-define-properties": 91,
                "../internals/redefine": 108,
                "../internals/set-to-string-tag": 117,
                "../internals/string-multibyte": 123,
                "../internals/string-punycode-to-ascii": 126,
                "../modules/es.string.iterator": 190,
                "../modules/web.url-search-params": 237
            }
        ],
        239: [
            function(e1, t, r) {
                "use strict";
                t.exports = e1("./").polyfill();
            },
            {
                "./": 240
            }
        ],
        240: [
            function(V, r, o) {
                (function(B, G) {
                    var e1, t;
                    e1 = this, t = function() {
                        "use strict";
                        function l(e1) {
                            return "function" == typeof e1;
                        }
                        var r = Array.isArray || function(e1) {
                            return "[object Array]" === Object.prototype.toString.call(e1);
                        }, o = 0, t = void 0, n = void 0, i = function(e1, t) {
                            d[o] = e1, d[o + 1] = t, 2 === (o += 2) && (n ? n(f) : D());
                        };
                        var e1 = "undefined" != typeof window ? window : void 0, s = e1 || {}, s = s.MutationObserver || s.WebKitMutationObserver, a = "undefined" == typeof self && void 0 !== B && "[object process]" === ({}).toString.call(B), u = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel;
                        function c() {
                            var e1 = setTimeout;
                            return function() {
                                return e1(f, 1);
                            };
                        }
                        var d = new Array(1e3);
                        function f() {
                            for(var e1 = 0; e1 < o; e1 += 2)(0, d[e1])(d[e1 + 1]), d[e1] = void 0, d[e1 + 1] = void 0;
                            o = 0;
                        }
                        function h() {
                            try {
                                var e1 = Function("return this")().require("vertx");
                                return void 0 !== (t = e1.runOnLoop || e1.runOnContext) ? function() {
                                    t(f);
                                } : c();
                            } catch (e1) {
                                return c();
                            }
                        }
                        var p, m, y, D = void 0;
                        function g(e1, t) {
                            var r, o = this, n = new this.constructor(j), s = (void 0 === n[b] && P(n), o._state);
                            return s ? (r = arguments[s - 1], i(function() {
                                return C(s, n, r, o._result);
                            })) : k(o, n, e1, t), n;
                        }
                        function v(e1) {
                            var t;
                            return e1 && "object" == typeof e1 && e1.constructor === this ? e1 : (E(t = new this(j), e1), t);
                        }
                        var D = a ? function() {
                            return B.nextTick(f);
                        } : s ? (m = 0, a = new s(f), y = document.createTextNode(""), a.observe(y, {
                            characterData: !0
                        }), function() {
                            y.data = m = ++m % 2;
                        }) : u ? ((p = new MessageChannel).port1.onmessage = f, function() {
                            return p.port2.postMessage(0);
                        }) : (void 0 === e1 && "function" == typeof V ? h : c)(), b = Math.random().toString(36).substring(2);
                        function j() {}
                        var _ = void 0, x = 1, w = 2;
                        function F(e1, o, n) {
                            i(function(t) {
                                var r = !1, e1 = function(e1, t, r, o) {
                                    try {
                                        e1.call(t, r, o);
                                    } catch (e1) {
                                        return e1;
                                    }
                                }(n, o, function(e1) {
                                    r || (r = !0, (o !== e1 ? E : M)(t, e1));
                                }, function(e1) {
                                    r || (r = !0, T(t, e1));
                                }, t._label);
                                !r && e1 && (r = !0, T(t, e1));
                            }, e1);
                        }
                        function S(e1, t, r) {
                            var o, n;
                            t.constructor === e1.constructor && r === g && t.constructor.resolve === v ? (o = e1, (n = t)._state === x ? M(o, n._result) : n._state === w ? T(o, n._result) : k(n, void 0, function(e1) {
                                return E(o, e1);
                            }, function(e1) {
                                return T(o, e1);
                            })) : void 0 !== r && l(r) ? F(e1, t, r) : M(e1, t);
                        }
                        function E(t, e1) {
                            if (t === e1) T(t, new TypeError("You cannot resolve a promise with itself"));
                            else if (r = typeof e1, null === e1 || "object" != r && "function" != r) M(t, e1);
                            else {
                                r = void 0;
                                try {
                                    r = e1.then;
                                } catch (e1) {
                                    return void T(t, e1);
                                }
                                S(t, e1, r);
                            }
                            var r;
                        }
                        function U(e1) {
                            e1._onerror && e1._onerror(e1._result), O(e1);
                        }
                        function M(e1, t) {
                            e1._state === _ && (e1._result = t, e1._state = x, 0 !== e1._subscribers.length && i(O, e1));
                        }
                        function T(e1, t) {
                            e1._state === _ && (e1._state = w, e1._result = t, i(U, e1));
                        }
                        function k(e1, t, r, o) {
                            var n = e1._subscribers, s = n.length;
                            e1._onerror = null, n[s] = t, n[s + x] = r, n[s + w] = o, 0 === s && e1._state && i(O, e1);
                        }
                        function O(e1) {
                            var t = e1._subscribers, r = e1._state;
                            if (0 !== t.length) {
                                for(var o, n = void 0, s = e1._result, i = 0; i < t.length; i += 3)o = t[i], n = t[i + r], o ? C(r, o, n, s) : n(s);
                                e1._subscribers.length = 0;
                            }
                        }
                        function C(e1, t, r, o) {
                            var n = l(r), s = void 0, i = void 0, a = !0;
                            if (n) {
                                try {
                                    s = r(o);
                                } catch (e1) {
                                    a = !1, i = e1;
                                }
                                if (t === s) return void T(t, new TypeError("A promises callback cannot return that same promise."));
                            } else s = o;
                            t._state === _ && (n && a ? E(t, s) : !1 === a ? T(t, i) : e1 === x ? M(t, s) : e1 === w && T(t, s));
                        }
                        var A = 0;
                        function P(e1) {
                            e1[b] = A++, e1._state = void 0, e1._result = void 0, e1._subscribers = [];
                        }
                        L.prototype._enumerate = function(e1) {
                            for(var t = 0; this._state === _ && t < e1.length; t++)this._eachEntry(e1[t], t);
                        }, L.prototype._eachEntry = function(t, e1) {
                            var r = this._instanceConstructor, o = r.resolve;
                            if (o === v) {
                                var n, s = void 0, i = void 0, a = !1;
                                try {
                                    s = t.then;
                                } catch (e1) {
                                    a = !0, i = e1;
                                }
                                s === g && t._state !== _ ? this._settledAt(t._state, e1, t._result) : "function" != typeof s ? (this._remaining--, this._result[e1] = t) : r === R ? (n = new r(j), a ? T(n, i) : S(n, t, s), this._willSettleAt(n, e1)) : this._willSettleAt(new r(function(e1) {
                                    return e1(t);
                                }), e1);
                            } else this._willSettleAt(o(t), e1);
                        }, L.prototype._settledAt = function(e1, t, r) {
                            var o = this.promise;
                            o._state === _ && (this._remaining--, e1 === w ? T(o, r) : this._result[t] = r), 0 === this._remaining && M(o, this._result);
                        }, L.prototype._willSettleAt = function(e1, t) {
                            var r = this;
                            k(e1, void 0, function(e1) {
                                return r._settledAt(x, t, e1);
                            }, function(e1) {
                                return r._settledAt(w, t, e1);
                            });
                        };
                        var N = L;
                        function L(e1, t) {
                            this._instanceConstructor = e1, this.promise = new e1(j), this.promise[b] || P(this.promise), r(t) ? (this.length = t.length, this._remaining = t.length, this._result = new Array(this.length), 0 !== this.length && (this.length = this.length || 0, this._enumerate(t), 0 !== this._remaining) || M(this.promise, this._result)) : T(this.promise, new Error("Array Methods must be provided an Array"));
                        }
                        I.prototype.catch = function(e1) {
                            return this.then(null, e1);
                        }, I.prototype.finally = function(t) {
                            var r = this.constructor;
                            return l(t) ? this.then(function(e1) {
                                return r.resolve(t()).then(function() {
                                    return e1;
                                });
                            }, function(e1) {
                                return r.resolve(t()).then(function() {
                                    throw e1;
                                });
                            }) : this.then(t, t);
                        };
                        var R = I;
                        function I(e1) {
                            if (this[b] = A++, this._result = this._state = void 0, this._subscribers = [], j !== e1) {
                                if ("function" != typeof e1) throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
                                if (!(this instanceof I)) throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
                                var t = this;
                                try {
                                    e1(function(e1) {
                                        E(t, e1);
                                    }, function(e1) {
                                        T(t, e1);
                                    });
                                } catch (e1) {
                                    T(t, e1);
                                }
                            }
                        }
                        return R.prototype.then = g, R.all = function(e1) {
                            return new N(this, e1).promise;
                        }, R.race = function(n) {
                            var s = this;
                            return r(n) ? new s(function(e1, t) {
                                for(var r = n.length, o = 0; o < r; o++)s.resolve(n[o]).then(e1, t);
                            }) : new s(function(e1, t) {
                                return t(new TypeError("You must pass an array to race."));
                            });
                        }, R.resolve = v, R.reject = function(e1) {
                            var t = new this(j);
                            return T(t, e1), t;
                        }, R._setScheduler = function(e1) {
                            n = e1;
                        }, R._setAsap = function(e1) {
                            i = e1;
                        }, R._asap = i, R.polyfill = function() {
                            var e1 = void 0;
                            if (void 0 !== G) e1 = G;
                            else if ("undefined" != typeof self) e1 = self;
                            else try {
                                e1 = Function("return this")();
                            } catch (e1) {
                                throw new Error("polyfill failed because global object is unavailable in this environment");
                            }
                            var t = e1.Promise;
                            if (t) {
                                var r = null;
                                try {
                                    r = Object.prototype.toString.call(t.resolve());
                                } catch (e1) {}
                                if ("[object Promise]" === r && !t.cast) return;
                            }
                            e1.Promise = R;
                        }, R.Promise = R;
                    }, "object" == typeof o && void 0 !== r ? r.exports = t() : "function" == typeof s && s.amd ? s(t) : e1.ES6Promise = t();
                }).call(this, V("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
            },
            {
                _process: 249
            }
        ],
        241: [
            function(e1, t, r) {
                var o, n;
                o = this, n = function(e1, t) {
                    "use strict";
                    var r = 5e3, o = "callback";
                    function d(t) {
                        try {
                            delete window[t];
                        } catch (e1) {
                            window[t] = void 0;
                        }
                    }
                    function f(e1) {
                        e1 = document.getElementById(e1);
                        e1 && document.getElementsByTagName("head")[0].removeChild(e1);
                    }
                    t.exports = function(s) {
                        var i = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1], a = s, l = i.timeout || r, u = i.jsonpCallback || o, c = void 0;
                        return new Promise(function(t, e1) {
                            var r = i.jsonpCallbackFunction || "jsonp_" + Date.now() + "_" + Math.ceil(1e5 * Math.random()), o = u + "_" + r, n = (window[r] = function(e1) {
                                t({
                                    ok: !0,
                                    json: function() {
                                        return Promise.resolve(e1);
                                    }
                                }), c && clearTimeout(c), f(o), d(r);
                            }, a += -1 === a.indexOf("?") ? "?" : "&", document.createElement("script"));
                            n.setAttribute("src", "" + a + u + "=" + r), i.charset && n.setAttribute("charset", i.charset), n.id = o, document.getElementsByTagName("head")[0].appendChild(n), c = setTimeout(function() {
                                e1(new Error("JSONP request to " + s + " timed out")), d(r), f(o), window[r] = function() {
                                    d(r);
                                };
                            }, l), n.onerror = function() {
                                e1(new Error("JSONP request to " + s + " failed")), d(r), f(o), c && clearTimeout(c);
                            };
                        });
                    };
                }, "function" == typeof s && s.amd ? s([
                    "exports",
                    "module"
                ], n) : void 0 !== r && void 0 !== t ? n(0, t) : (n(n = {
                    exports: {}
                }, n), o.fetchJsonp = n.exports);
            },
            {}
        ],
        242: [
            function(e1, t, r) {
                var o = function(a) {
                    "use strict";
                    var l, u, c, d, f, h, t, p, m, o, e1;
                    if (!(void 0 === a || "undefined" != typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) return e1 = a.document, l = function() {
                        return a.URL || a.webkitURL || a;
                    }, u = e1.createElementNS("http://www.w3.org/1999/xhtml", "a"), c = "download" in u, d = /constructor/i.test(a.HTMLElement) || a.safari, f = /CriOS\/[\d]+/.test(navigator.userAgent), h = function(e1) {
                        (a.setImmediate || a.setTimeout)(function() {
                            throw e1;
                        }, 0);
                    }, t = 4e4, p = function(e1) {
                        setTimeout(function() {
                            "string" == typeof e1 ? l().revokeObjectURL(e1) : e1.remove();
                        }, t);
                    }, m = function(e1) {
                        return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e1.type) ? new Blob([
                            String.fromCharCode(65279),
                            e1
                        ], {
                            type: e1.type
                        }) : e1;
                    }, e1 = (o = function(e1, r, t) {
                        t || (e1 = m(e1));
                        var o, n, s = this, t = "application/octet-stream" === e1.type, i = function() {
                            for(var e1 = s, t = "writestart progress write writeend".split(" "), r = void 0, o = (t = [].concat(t)).length; o--;){
                                var n = e1["on" + t[o]];
                                if ("function" == typeof n) try {
                                    n.call(e1, r || e1);
                                } catch (e1) {
                                    h(e1);
                                }
                            }
                        };
                        s.readyState = s.INIT, c ? (o = l().createObjectURL(e1), setTimeout(function() {
                            var e1, t;
                            u.href = o, u.download = r, e1 = u, t = new MouseEvent("click"), e1.dispatchEvent(t), i(), p(o), s.readyState = s.DONE;
                        })) : (f || t && d) && a.FileReader ? ((n = new FileReader).onloadend = function() {
                            var e1 = f ? n.result : n.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                            a.open(e1, "_blank") || (a.location.href = e1), e1 = void 0, s.readyState = s.DONE, i();
                        }, n.readAsDataURL(e1), s.readyState = s.INIT) : (o = o || l().createObjectURL(e1), !t && a.open(o, "_blank") || (a.location.href = o), s.readyState = s.DONE, i(), p(o));
                    }).prototype, "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function(e1, t, r) {
                        return t = t || e1.name || "download", r || (e1 = m(e1)), navigator.msSaveOrOpenBlob(e1, t);
                    } : (e1.abort = function() {}, e1.readyState = e1.INIT = 0, e1.WRITING = 1, e1.DONE = 2, e1.error = e1.onwritestart = e1.onprogress = e1.onwrite = e1.onabort = e1.onerror = e1.onwriteend = null, function(e1, t, r) {
                        return new o(e1, t || e1.name || "download", r);
                    });
                }("undefined" != typeof self && self || "undefined" != typeof window && window || this.content);
                void 0 !== t && t.exports ? t.exports.saveAs = o : null != s && null !== s.amd && s("FileSaver.js", function() {
                    return o;
                });
            },
            {}
        ],
        243: [
            function(e1, t, r) {
                var o, n = Object.defineProperty, s = (n(r, "__esModule", {
                    value: !0
                }), r), i = {
                    GIFEncoder: ()=>f,
                    applyPalette: ()=>function(e1, t, r = "rgb565") {
                            if (!e1 || !e1.buffer) throw new Error("quantize() expected RGBA Uint8Array data");
                            if (!(e1 instanceof Uint8Array || e1 instanceof Uint8ClampedArray)) throw new Error("quantize() expected RGBA Uint8Array data");
                            if (256 < t.length) throw new Error("applyPalette() only works with 256 colors or less");
                            const o = new Uint32Array(e1.buffer), n = o.length, s = "rgb444" === r ? 4096 : 65536, i = new Uint8Array(n), a = new Array(s);
                            if ("rgba4444" === r) for(let e1 = 0; e1 < n; e1++){
                                var l = o[e1], u = l >> 24 & 255, c = l >> 16 & 255, d = l >> 8 & 255, l = 255 & l, f = A(l, d, c, u), f = f in a ? a[f] : a[f] = function(t, r, o, n, s) {
                                    let i = 0, a = 1e100;
                                    for(let e1 = 0; e1 < s.length; e1++){
                                        var l, u = s[e1], c = v(u[3] - n);
                                        c > a || (l = u[0], (c += v(l - t)) > a || (l = u[1], (c += v(l - r)) > a || (l = u[2], (c += v(l - o)) > a || (a = c, i = e1))));
                                    }
                                    return i;
                                }(l, d, c, u, t);
                                i[e1] = f;
                            }
                            else {
                                const g = "rgb444" === r ? P : C;
                                for(let e1 = 0; e1 < n; e1++){
                                    var h = o[e1], p = h >> 16 & 255, m = h >> 8 & 255, h = 255 & h, y = g(h, m, p), y = y in a ? a[y] : a[y] = function(t, r, o, n) {
                                        let s = 0, i = 1e100;
                                        for(let e1 = 0; e1 < n.length; e1++){
                                            var a, l = n[e1], u = v(l[0] - t);
                                            u > i || (a = l[1], (u += v(a - r)) > i || (a = l[2], (u += v(a - o)) > i || (i = u, s = e1)));
                                        }
                                        return s;
                                    }(h, m, p, t);
                                    i[e1] = y;
                                }
                            }
                            return i;
                        },
                    default: ()=>h,
                    nearestColor: ()=>function(e1, t, r = u) {
                            return e1[l(e1, t, r)];
                        },
                    nearestColorIndex: ()=>l,
                    nearestColorIndexWithDistance: ()=>d,
                    prequantize: ()=>function(e1, { roundRGB: r = 5, roundAlpha: o = 10, oneBitAlpha: n = null } = {}) {
                            const s = new Uint32Array(e1.buffer);
                            for(let t = 0; t < s.length; t++){
                                var i = s[t];
                                let e1 = i >> 24 & 255;
                                var a, l = i >> 16 & 255, u = i >> 8 & 255, i = 255 & i;
                                e1 = c(e1, o), n && (a = "number" == typeof n ? n : 127, e1 = e1 <= a ? 0 : 255), i = c(i, r), u = c(u, r), l = c(l, r), s[t] = e1 << 24 | l << 16 | u << 8 | i << 0;
                            }
                        },
                    quantize: ()=>function(e1, t, r = {}) {
                            var { format: o = "rgb565", clearAlpha: n = !0, clearAlphaColor: s = 0, clearAlphaThreshold: i = 0, oneBitAlpha: a = !1 } = r;
                            if (!e1 || !e1.buffer) throw new Error("quantize() expected RGBA Uint8Array data");
                            if (!(e1 instanceof Uint8Array || e1 instanceof Uint8ClampedArray)) throw new Error("quantize() expected RGBA Uint8Array data");
                            e1 = new Uint32Array(e1.buffer);
                            let l = !1 !== r.useSqrt;
                            const u = "rgba4444" === o, c = function(r, e1) {
                                const t = "rgb444" === e1 ? 4096 : 65536, o = new Array(t), n = r.length;
                                if ("rgba4444" === e1) for(let t = 0; t < n; ++t){
                                    var s = r[t], i = s >> 24 & 255, a = s >> 16 & 255, l = s >> 8 & 255, s = 255 & s, u = A(s, l, a, i);
                                    let e1 = u in o ? o[u] : o[u] = D();
                                    e1.rc += s, e1.gc += l, e1.bc += a, e1.ac += i, e1.cnt++;
                                }
                                else if ("rgb444" === e1) for(let t = 0; t < n; ++t){
                                    var c = r[t], d = c >> 16 & 255, f = c >> 8 & 255, c = 255 & c, h = P(c, f, d);
                                    let e1 = h in o ? o[h] : o[h] = D();
                                    e1.rc += c, e1.gc += f, e1.bc += d, e1.cnt++;
                                }
                                else for(let t = 0; t < n; ++t){
                                    var p = r[t], m = p >> 16 & 255, y = p >> 8 & 255, p = 255 & p, g = C(p, y, m);
                                    let e1 = g in o ? o[g] : o[g] = D();
                                    e1.rc += p, e1.gc += y, e1.bc += m, e1.cnt++;
                                }
                                return o;
                            }(e1, o), d = c.length, f = d - 1, h = new Uint32Array(d + 1);
                            for(var p = 0, m = 0; m < d; ++m){
                                const O = c[m];
                                null != O && (M = 1 / O.cnt, u && (O.ac *= M), O.rc *= M, O.gc *= M, O.bc *= M, c[p++] = O);
                            }
                            R(t) / p < .022 && (l = !1);
                            for(var y, g, v, m = 0; m < p - 1; ++m)c[m].fw = m + 1, c[m + 1].bk = m, l && (c[m].cnt = Math.sqrt(c[m].cnt));
                            l && (c[m].cnt = Math.sqrt(c[m].cnt));
                            for(m = 0; m < p; ++m){
                                I(c, m, !1);
                                var b = c[m].err;
                                for(g = ++h[0]; 1 < g && (v = g >> 1, !(c[y = h[v]].err <= b)); g = v)h[g] = y;
                                h[g] = m;
                            }
                            var j, _ = p - t;
                            for(m = 0; m < _;){
                                for(;;){
                                    var x = h[1];
                                    if ((j = c[x]).tm >= j.mtm && c[j.nn].mtm <= j.tm) break;
                                    j.mtm == f ? x = h[1] = h[h[0]--] : (I(c, x, !1), j.tm = m);
                                    b = c[x].err;
                                    for(g = 1; (v = g + g) <= h[0] && (v < h[0] && c[h[v]].err > c[h[v + 1]].err && v++, !(b <= c[y = h[v]].err)); g = v)h[g] = y;
                                    h[g] = x;
                                }
                                var w = c[j.nn], S = j.cnt, E = w.cnt, M = 1 / (S + E);
                                u && (j.ac = M * (S * j.ac + E * w.ac)), j.rc = M * (S * j.rc + E * w.rc), j.gc = M * (S * j.gc + E * w.gc), j.bc = M * (S * j.bc + E * w.bc), j.cnt += w.cnt, j.mtm = ++m, c[w.bk].fw = w.fw, c[w.fw].bk = w.bk, w.mtm = f;
                            }
                            let T = [];
                            for(m = 0;;){
                                let e1 = L(Math.round(c[m].rc), 0, 255), t = L(Math.round(c[m].gc), 0, 255), r = L(Math.round(c[m].bc), 0, 255), o = 255;
                                u && (o = L(Math.round(c[m].ac), 0, 255), a && (k = "number" == typeof a ? a : 127, o = o <= k ? 0 : 255), n && o <= i && (e1 = t = r = s, o = 0));
                                var k = u ? [
                                    e1,
                                    t,
                                    r,
                                    o
                                ] : [
                                    e1,
                                    t,
                                    r
                                ];
                                if (function(t, r) {
                                    for(let e1 = 0; e1 < t.length; e1++){
                                        var o = t[e1], n = o[0] === r[0] && o[1] === r[1] && o[2] === r[2], o = !(4 <= o.length && 4 <= r.length) || o[3] === r[3];
                                        if (n && o) return !0;
                                    }
                                    return !1;
                                }(T, k) || T.push(k), 0 == (m = c[m].fw)) break;
                            }
                            return T;
                        },
                    snapColorsToPalette: ()=>function(r, o, e1 = 5) {
                            if (r.length && o.length) {
                                var n = r.map((e1)=>e1.slice(0, 3)), s = e1 * e1, i = r[0].length;
                                for(let t = 0; t < o.length; t++){
                                    let e1 = o[t];
                                    e1 = e1.length < i ? [
                                        e1[0],
                                        e1[1],
                                        e1[2],
                                        255
                                    ] : e1.length > i ? e1.slice(0, 3) : e1.slice();
                                    var a = d(n, e1.slice(0, 3), u), l = a[0], a = a[1];
                                    0 < a && a <= s && (r[l] = e1);
                                }
                            }
                        }
                };
                for(o in i)n(s, o, {
                    get: i[o],
                    enumerable: !0
                });
                var a = {
                    signature: "GIF",
                    version: "89a",
                    trailer: 59,
                    extensionIntroducer: 33,
                    applicationExtensionLabel: 255,
                    graphicControlExtensionLabel: 249,
                    imageSeparator: 44,
                    signatureSize: 3,
                    versionSize: 3,
                    globalColorTableFlagMask: 128,
                    colorResolutionMask: 112,
                    sortFlagMask: 8,
                    globalColorTableSizeMask: 7,
                    applicationIdentifierSize: 8,
                    applicationAuthCodeSize: 3,
                    disposalMethodMask: 28,
                    userInputFlagMask: 2,
                    transparentColorFlagMask: 1,
                    localColorTableFlagMask: 128,
                    interlaceFlagMask: 64,
                    idSortFlagMask: 32,
                    localColorTableSizeMask: 7
                };
                function T(e1 = 256) {
                    let n = 0, s = new Uint8Array(e1);
                    return {
                        get buffer () {
                            return s.buffer;
                        },
                        reset () {
                            n = 0;
                        },
                        bytesView () {
                            return s.subarray(0, n);
                        },
                        bytes () {
                            return s.slice(0, n);
                        },
                        writeByte (e1) {
                            i(n + 1), s[n] = e1, n++;
                        },
                        writeBytes (t, r = 0, o = t.length) {
                            i(n + o);
                            for(let e1 = 0; e1 < o; e1++)s[n++] = t[e1 + r];
                        },
                        writeBytesView (e1, t = 0, r = e1.byteLength) {
                            i(n + r), s.set(e1.subarray(t, t + r), n), n += r;
                        }
                    };
                    function i(e1) {
                        var t = s.length;
                        if (!(e1 <= t)) {
                            e1 = Math.max(e1, t * (t < 1048576 ? 2 : 1.125) >>> 0), 0 != t && (e1 = Math.max(e1, 256));
                            const r = s;
                            s = new Uint8Array(e1), 0 < n && s.set(r.subarray(0, n), 0);
                        }
                    }
                }
                var k = [
                    0,
                    1,
                    3,
                    7,
                    15,
                    31,
                    63,
                    127,
                    255,
                    511,
                    1023,
                    2047,
                    4095,
                    8191,
                    16383,
                    32767,
                    65535
                ];
                var S = function(e1, t, r, o, n = T(512), s = new Uint8Array(256), i = new Int32Array(5003), a = new Int32Array(5003)) {
                    var l = i.length, o = Math.max(2, o);
                    s.fill(0), a.fill(0), i.fill(-1);
                    let u = 0, c = 0;
                    var d = o + 1;
                    const f = d;
                    let h = !1, p = f, m = (1 << p) - 1;
                    var y = 1 << d - 1;
                    const g = 1 + y;
                    let v = 2 + y, b = 0, j = r[0], _ = 0;
                    for(let e1 = l; e1 < 65536; e1 *= 2)++_;
                    _ = 8 - _, n.writeByte(o), M(y);
                    var x = r.length;
                    for(let t = 1; t < x; t++)e: {
                        var w = r[t], S = (w << 12) + j;
                        let e1 = w << _ ^ j;
                        if (i[e1] === S) j = a[e1];
                        else {
                            for(var E = 0 === e1 ? 1 : l - e1; 0 <= i[e1];)if ((e1 -= E) < 0 && (e1 += l), i[e1] === S) {
                                j = a[e1];
                                break e;
                            }
                            M(j), j = w, v < 4096 ? (a[e1] = v++, i[e1] = S) : (i.fill(-1), v = 2 + y, h = !0, M(y));
                        }
                    }
                    return M(j), M(g), n.writeByte(0), n.bytesView();
                    function M(e1) {
                        for(u &= k[c], 0 < c ? u |= e1 << c : u = e1, c += p; 8 <= c;)s[b++] = 255 & u, 254 <= b && (n.writeByte(b), n.writeBytesView(s, 0, b), b = 0), u >>= 8, c -= 8;
                        if ((v > m || h) && (h ? (p = f, m = (1 << p) - 1, h = !1) : (++p, m = 12 === p ? 1 << p : (1 << p) - 1)), e1 == g) {
                            for(; 0 < c;)s[b++] = 255 & u, 254 <= b && (n.writeByte(b), n.writeBytesView(s, 0, b), b = 0), u >>= 8, c -= 8;
                            0 < b && (n.writeByte(b), n.writeBytesView(s, 0, b), b = 0);
                        }
                    }
                };
                function C(e1, t, r) {
                    return e1 << 8 & 63488 | t << 2 & 992 | r >> 3;
                }
                function A(e1, t, r, o) {
                    return e1 >> 4 | 240 & t | (240 & r) << 4 | (240 & o) << 8;
                }
                function P(e1, t, r) {
                    return e1 >> 4 << 8 | 240 & t | r >> 4;
                }
                function L(e1, t, r) {
                    return e1 < t ? t : r < e1 ? r : e1;
                }
                function R(e1) {
                    return e1 * e1;
                }
                function I(e1, t, r) {
                    var o = 0, n = 1e100;
                    const s = e1[t];
                    for(var i = s.cnt, a = s.ac, l = s.rc, u = s.gc, c = s.bc, d = s.fw; 0 != d; d = e1[d].fw){
                        var f, h = e1[d], p = h.cnt, p = i * p / (i + p);
                        n <= p || (f = 0, r && n <= (f += p * R(h.ac - a)) || n <= (f += p * R(h.rc - l)) || n <= (f += p * R(h.gc - u)) || n <= (f += p * R(h.bc - c)) || (n = f, o = d));
                    }
                    s.err = n, s.nn = o;
                }
                function D() {
                    return {
                        ac: 0,
                        rc: 0,
                        gc: 0,
                        bc: 0,
                        cnt: 0,
                        nn: 0,
                        fw: 0,
                        bk: 0,
                        tm: 0,
                        mtm: 0,
                        err: 0
                    };
                }
                function u(e1, t) {
                    for(var r = 0, o = 0; o < e1.length; o++){
                        var n = e1[o] - t[o];
                        r += n * n;
                    }
                    return r;
                }
                function c(e1, t) {
                    return 1 < t ? Math.round(e1 / t) * t : e1;
                }
                function v(e1) {
                    return e1 * e1;
                }
                function l(t, r, o = u) {
                    let n = 1 / 0, s = -1;
                    for(let e1 = 0; e1 < t.length; e1++){
                        var i = o(r, t[e1]);
                        i < n && (n = i, s = e1);
                    }
                    return s;
                }
                function d(t, r, o = u) {
                    let n = 1 / 0, s = -1;
                    for(let e1 = 0; e1 < t.length; e1++){
                        var i = o(r, t[e1]);
                        i < n && (n = i, s = e1);
                    }
                    return [
                        s,
                        n
                    ];
                }
                function f(e1 = {}) {
                    const { initialCapacity: t = 4096, auto: g = !0 } = e1, v = T(t);
                    const b = new Uint8Array(256), j = new Int32Array(5003), _ = new Int32Array(5003);
                    let x = !1;
                    return {
                        reset () {
                            v.reset(), x = !1;
                        },
                        finish () {
                            v.writeByte(a.trailer);
                        },
                        bytes () {
                            return v.bytes();
                        },
                        bytesView () {
                            return v.bytesView();
                        },
                        get buffer () {
                            return v.buffer;
                        },
                        get stream () {
                            return v;
                        },
                        writeHeader: w,
                        writeFrame (e1, t, r, o = {}) {
                            var { transparent: n = !1, transparentIndex: s = 0, delay: i = 0, palette: a = null, repeat: l = 0, colorDepth: u = 8, dispose: c = -1 } = o;
                            let d = !1;
                            if (g ? x || (d = !0, w(), x = !0) : d = Boolean(o.first), t = Math.max(0, Math.floor(t)), r = Math.max(0, Math.floor(r)), d) {
                                if (!a) throw new Error("First frame must include a { palette } option");
                                var [o, f, h, p, m = 8] = [
                                    v,
                                    t,
                                    r,
                                    a,
                                    u
                                ];
                                p = F(p.length) - 1, m = 128 | m - 1 << 4 | p, M(o, f), M(o, h), o.writeBytes([
                                    m,
                                    0,
                                    0
                                ]), E(v, a), 0 <= l && (p = v, f = l, p.writeByte(33), p.writeByte(255), p.writeByte(11), O(p, "NETSCAPE2.0"), p.writeByte(3), p.writeByte(1), M(p, f), p.writeByte(0));
                            }
                            var y, h = Math.round(i / 10), o = v, m = c, l = h, f = n, p = s, i = (o.writeByte(33), o.writeByte(249), o.writeByte(4), p < 0 && (p = 0, f = !1), f = f ? (y = 1, 2) : y = 0, 0 <= m && (f = 7 & m), f <<= 2, o.writeByte(0 | f | y), M(o, l), o.writeByte(p || 0), o.writeByte(0), Boolean(a) && !d);
                            c = v, n = t, s = r, y = i ? a : null, c.writeByte(44), M(c, 0), M(c, 0), M(c, n), M(c, s), y ? (n = F(y.length) - 1, c.writeByte(128 | n)) : c.writeByte(0), i && E(v, a), [l, o, s, n, c = 8, i, a, e1] = [
                                v,
                                e1,
                                t,
                                r,
                                u,
                                b,
                                j,
                                _
                            ], S(s, n, o, c, l, i, a, e1);
                        }
                    };
                    function w() {
                        O(v, "GIF89a");
                    }
                }
                function E(r, o) {
                    var e1 = 1 << F(o.length);
                    for(let t = 0; t < e1; t++){
                        let e1 = [
                            0,
                            0,
                            0
                        ];
                        t < o.length && (e1 = o[t]), r.writeByte(e1[0]), r.writeByte(e1[1]), r.writeByte(e1[2]);
                    }
                }
                function M(e1, t) {
                    e1.writeByte(255 & t), e1.writeByte(t >> 8 & 255);
                }
                function O(e1, t) {
                    for(var r = 0; r < t.length; r++)e1.writeByte(t.charCodeAt(r));
                }
                function F(e1) {
                    return Math.max(Math.ceil(Math.log2(e1)), 1);
                }
                var h = f;
            },
            {}
        ],
        244: [
            function(e1, t, r) {
                r.read = function(e1, t, r, o, n) {
                    var s, i, a = 8 * n - o - 1, l = (1 << a) - 1, u = l >> 1, c = -7, d = r ? n - 1 : 0, f = r ? -1 : 1, n = e1[t + d];
                    for(d += f, s = n & (1 << -c) - 1, n >>= -c, c += a; 0 < c; s = 256 * s + e1[t + d], d += f, c -= 8);
                    for(i = s & (1 << -c) - 1, s >>= -c, c += o; 0 < c; i = 256 * i + e1[t + d], d += f, c -= 8);
                    if (0 === s) s = 1 - u;
                    else {
                        if (s === l) return i ? NaN : 1 / 0 * (n ? -1 : 1);
                        i += Math.pow(2, o), s -= u;
                    }
                    return (n ? -1 : 1) * i * Math.pow(2, s - o);
                }, r.write = function(e1, t, r, o, n, s) {
                    var i, a, l = 8 * s - n - 1, u = (1 << l) - 1, c = u >> 1, d = 23 === n ? Math.pow(2, -24) - Math.pow(2, -77) : 0, f = o ? 0 : s - 1, h = o ? 1 : -1, s = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
                    for(t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (a = isNaN(t) ? 1 : 0, i = u) : (i = Math.floor(Math.log(t) / Math.LN2), t * (o = Math.pow(2, -i)) < 1 && (i--, o *= 2), 2 <= (t += 1 <= i + c ? d / o : d * Math.pow(2, 1 - c)) * o && (i++, o /= 2), u <= i + c ? (a = 0, i = u) : 1 <= i + c ? (a = (t * o - 1) * Math.pow(2, n), i += c) : (a = t * Math.pow(2, c - 1) * Math.pow(2, n), i = 0)); 8 <= n; e1[r + f] = 255 & a, f += h, a /= 256, n -= 8);
                    for(i = i << n | a, l += n; 0 < l; e1[r + f] = 255 & i, f += h, i /= 256, l -= 8);
                    e1[r + f - h] |= 128 * s;
                };
            },
            {}
        ],
        245: [
            function(o, e1, c) {
                "use strict";
                var t;
                function y(e1, t) {
                    return e1.b === t.b && e1.a === t.a;
                }
                function g(e1, t) {
                    return e1.b < t.b || e1.b === t.b && e1.a <= t.a;
                }
                function v(e1, t, r) {
                    var o = t.b - e1.b, n = r.b - t.b;
                    return 0 < o + n ? o < n ? t.a - e1.a + o / (o + n) * (e1.a - r.a) : t.a - r.a + n / (o + n) * (r.a - e1.a) : 0;
                }
                function b(e1, t, r) {
                    var o = t.b - e1.b, n = r.b - t.b;
                    return 0 < o + n ? (t.a - r.a) * o + (t.a - e1.a) * n : 0;
                }
                function j(e1, t) {
                    return e1.a < t.a || e1.a === t.a && e1.b <= t.b;
                }
                function V(e1, t, r) {
                    var o = t.a - e1.a, n = r.a - t.a;
                    return 0 < o + n ? o < n ? t.b - e1.b + o / (o + n) * (e1.b - r.b) : t.b - r.b + n / (o + n) * (r.b - e1.b) : 0;
                }
                function z(e1, t, r) {
                    var o = t.a - e1.a, n = r.a - t.a;
                    return 0 < o + n ? (t.b - r.b) * o + (t.b - e1.b) * n : 0;
                }
                function _(e1, t, r, o) {
                    return (e1 = e1 < 0 ? 0 : e1) <= (r = r < 0 ? 0 : r) ? 0 === r ? (t + o) / 2 : t + e1 / (e1 + r) * (o - t) : o + r / (e1 + r) * (t - o);
                }
                function d(e1) {
                    var t = s(e1.b);
                    return n(t, e1.c), n(t.b, e1.c), i(t, e1.a), t;
                }
                function x(e1, t) {
                    var r = !1, o = !1;
                    e1 !== t && (t.a !== e1.a && (o = !0, M(t.a, e1.a)), t.d !== e1.d && (r = !0, a(t.d, e1.d)), E(t, e1), o || (n(t, e1.a), e1.a.c = e1), r || (i(t, e1.d), e1.d.a = e1));
                }
                function m(e1) {
                    var t = e1.b, r = !1;
                    e1.d !== e1.b.d && (r = !0, a(e1.d, e1.b.d)), e1.c === e1 ? M(e1.a, null) : (e1.b.d.a = e1.b.e, e1.a.c = e1.c, E(e1, e1.b.e), r || i(e1, e1.d)), t.c === t ? (M(t.a, null), a(t.d, null)) : (e1.d.a = t.b.e, t.a.c = t.c, E(t, t.b.e)), H(e1);
                }
                function w(e1) {
                    var t = s(e1), r = t.b;
                    return E(t, e1.e), t.a = e1.b.a, n(r, t.a), t.d = r.d = e1.d, t = t.b, E(e1.b, e1.b.b.e), E(e1.b, t), e1.b.a = t.a, t.b.a.c = t.b, t.b.d = e1.b.d, t.f = e1.f, t.b.f = e1.b.f, t;
                }
                function S(e1, t) {
                    var r = !1, o = s(e1), n = o.b;
                    return t.d !== e1.d && (r = !0, a(t.d, e1.d)), E(o, e1.e), E(n, t), o.a = e1.b.a, n.a = t.a, o.d = n.d = e1.d, e1.d.a = n, r || i(o, e1.d), o;
                }
                function s(e1) {
                    var t = new u, r = new u, o = e1.b.h;
                    return (((r.h = o).b.h = t).h = e1).b.h = r, t.b = r, ((t.c = t).e = r).b = t, (r.c = r).e = t;
                }
                function E(e1, t) {
                    var r = e1.c, o = t.c;
                    r.b.e = t, (o.b.e = e1).c = o, t.c = r;
                }
                function n(e1, t) {
                    var r = t.f, o = new D(t, r);
                    for(r.e = o, r = (t.f = o).c = e1; r.a = o, (r = r.c) !== e1;);
                }
                function i(e1, t) {
                    var r = t.d, o = new te(t, r);
                    for(r.b = o, (t.d = o).a = e1, o.c = t.c, r = e1; r.d = o, (r = r.e) !== e1;);
                }
                function H(e1) {
                    var t = e1.h;
                    e1 = e1.b.h, (t.b.h = e1).b.h = t;
                }
                function M(e1, t) {
                    for(var r = e1.c, o = r; o.a = t, (o = o.c) !== r;);
                    r = e1.f, ((o = e1.e).f = r).e = o;
                }
                function a(e1, t) {
                    for(var r = e1.a, o = r; o.d = t, (o = o.e) !== r;);
                    r = e1.d, ((o = e1.b).d = r).b = o;
                }
                function W(e1) {
                    var t = 0;
                    return Math.abs(e1[1]) > Math.abs(e1[0]) && (t = 1), t = Math.abs(e1[2]) > Math.abs(e1[t]) ? 2 : t;
                }
                function T(e1, t) {
                    e1.f += t.f, e1.b.f += t.b.f;
                }
                function f(e1, t, r) {
                    return e1 = e1.a, t = t.a, r = r.a, t.b.a === e1 ? r.b.a === e1 ? g(t.a, r.a) ? b(r.b.a, t.a, r.a) <= 0 : 0 <= b(t.b.a, r.a, t.a) : b(r.b.a, e1, r.a) <= 0 : r.b.a === e1 ? 0 <= b(t.b.a, e1, t.a) : (t = v(t.b.a, e1, t.a), (e1 = v(r.b.a, e1, r.a)) <= t);
                }
                function k(e1) {
                    e1.a.i = null;
                    var t = e1.e;
                    t.a.c = t.c, t.c.a = t.a, e1.e = null;
                }
                function O(e1, t) {
                    m(e1.a), e1.c = !1, (e1.a = t).i = e1;
                }
                function C(e1) {
                    for(var t = e1.a.a; (e1 = G(e1)).a.a === t;);
                    return e1.c && (O(e1, t = S(B(e1).a.b, e1.a.e)), e1 = G(e1)), e1;
                }
                function q(e1, t, r) {
                    var o = new N;
                    return o.a = r, o.e = p(e1.f, t.e, o), r.i = o;
                }
                function X(e1, t) {
                    switch(e1.s){
                        case 100130:
                            return 0 != (1 & t);
                        case 100131:
                            return 0 !== t;
                        case 100132:
                            return 0 < t;
                        case 100133:
                            return t < 0;
                        case 100134:
                            return 2 <= t || t <= -2;
                    }
                    return !1;
                }
                function h(e1) {
                    var t = e1.a, r = t.d;
                    r.c = e1.d, r.a = t, k(e1);
                }
                function A(e1, t, r) {
                    for(t = (e1 = t).a; e1 !== r;){
                        e1.c = !1;
                        var o = B(e1), n = o.a;
                        if (n.a !== t.a) {
                            if (!o.c) {
                                h(e1);
                                break;
                            }
                            O(o, n = S(t.c.b, n.b));
                        }
                        t.c !== n && (x(n.b.e, n), x(t, n)), h(e1), t = o.a, e1 = o;
                    }
                    return t;
                }
                function P(e1, t, r, o, n, s) {
                    for(var i = !0; q(e1, t, r.b), (r = r.c) !== o;);
                    for(null === n && (n = B(t).a.b.c); (r = (o = B(t)).a.b).a === n.a;)r.c !== n && (x(r.b.e, r), x(n.b.e, r)), o.f = t.f - r.f, o.d = X(e1, o.f), t.b = !0, !i && R(e1, t) && (T(r, n), k(t), m(n)), i = !1, t = o, n = r;
                    t.b = !0, s && J(e1, t);
                }
                function Y(e1, t, r, o, n) {
                    var s = [
                        t.g[0],
                        t.g[1],
                        t.g[2]
                    ];
                    t.d = null, t.d = e1.o && e1.o(s, r, o, e1.c) || null, null === t.d && (n ? e1.n || (l(e1, 100156), e1.n = !0) : t.d = r[0]);
                }
                function L(e1, t, r) {
                    var o = [
                        null,
                        null,
                        null,
                        null
                    ];
                    o[0] = t.a.d, o[1] = r.a.d, Y(e1, t.a, o, [
                        .5,
                        .5,
                        0,
                        0
                    ], !1), x(t, r);
                }
                function Z(e1, t, r, o, n) {
                    var s = Math.abs(t.b - e1.b) + Math.abs(t.a - e1.a), i = Math.abs(r.b - e1.b) + Math.abs(r.a - e1.a), a = n + 1;
                    o[n] = .5 * i / (s + i), o[a] = .5 * s / (s + i), e1.g[0] += o[n] * t.g[0] + o[a] * r.g[0], e1.g[1] += o[n] * t.g[1] + o[a] * r.g[1], e1.g[2] += o[n] * t.g[2] + o[a] * r.g[2];
                }
                function R(e1, t) {
                    var r = B(t), o = t.a, n = r.a;
                    if (g(o.a, n.a)) {
                        if (0 < b(n.b.a, o.a, n.a)) return;
                        if (y(o.a, n.a)) {
                            if (o.a !== n.a) {
                                var r = e1.e, s = o.a.h;
                                if (0 <= s) {
                                    var i = (r = r.b).d, a = r.e, l = r.c, u = l[s];
                                    i[u] = i[r.a], (l[i[u]] = u) <= --r.a && (u <= 1 || g(a[i[u >> 1]], a[i[u]]) ? U : ue)(r, u), a[s] = null, l[s] = r.b, r.b = s;
                                } else for(r.c[-(s + 1)] = null; 0 < r.a && null === r.c[r.d[r.a - 1]];)--r.a;
                                L(e1, n.b.e, o);
                            }
                        } else w(n.b), x(o, n.b.e), t.b = r.b = !0;
                    } else {
                        if (b(o.b.a, n.a, o.a) < 0) return;
                        G(t).b = t.b = !0, w(o.b), x(n.b.e, o);
                    }
                    return 1;
                }
                function Q(e1, t) {
                    var r = B(t), o = t.a, n = r.a, s = o.a, i = n.a, a = o.b.a, l = n.b.a, u = new D;
                    if (b(a, e1.a, s), b(l, e1.a, i), !(s === i || Math.min(s.a, a.a) > Math.max(i.a, l.a))) {
                        if (g(s, i)) {
                            if (0 < b(l, s, i)) return;
                        } else if (b(a, i, s) < 0) return;
                        var c, d, f = a, h = s, p = l, m = i;
                        if (g(f, h) || (c = f, f = h, h = c), g(p, m) || (c = p, p = m, m = c), g(f, p) || (c = f, f = p, p = c, c = h, h = m, m = c), g(p, h) ? g(h, m) ? ((c = v(f, p, h)) + (d = v(p, h, m)) < 0 && (c = -c, d = -d), u.b = _(c, p.b, d, h.b)) : ((c = b(f, p, h)) + (d = -b(f, m, h)) < 0 && (c = -c, d = -d), u.b = _(c, p.b, d, m.b)) : u.b = (p.b + h.b) / 2, j(f, h) || (c = f, f = h, h = c), j(p, m) || (c = p, p = m, m = c), j(f, p) || (c = f, f = p, p = c, c = h, h = m, m = c), j(p, h) ? j(h, m) ? ((c = V(f, p, h)) + (d = V(p, h, m)) < 0 && (c = -c, d = -d), u.a = _(c, p.a, d, h.a)) : ((c = z(f, p, h)) + (d = -z(f, m, h)) < 0 && (c = -c, d = -d), u.a = _(c, p.a, d, m.a)) : u.a = (p.a + h.a) / 2, g(u, e1.a) && (u.b = e1.a.b, u.a = e1.a.a), f = g(s, i) ? s : i, g(f, u) && (u.b = f.b, u.a = f.a), y(u, s) || y(u, i)) return R(e1, t), 0;
                        if (!y(a, e1.a) && 0 <= b(a, e1.a, u) || !y(l, e1.a) && b(l, e1.a, u) <= 0) {
                            if (l === e1.a) w(o.b), x(n.b, o), o = B(t = C(t)).a, A(e1, B(t), r), P(e1, t, o.b.e, o, o, !0);
                            else {
                                if (a !== e1.a) return 0 <= b(a, e1.a, u) && (G(t).b = t.b = !0, w(o.b), o.a.b = e1.a.b, o.a.a = e1.a.a), void (b(l, e1.a, u) <= 0 && (t.b = r.b = !0, w(n.b), n.a.b = e1.a.b, n.a.a = e1.a.a));
                                for(w(n.b), x(o.e, n.b.e), i = (s = r = t).a.b.a; (s = G(s)).a.b.a === i;);
                                s = B(t = s).a.b.c, r.a = n.b.e, P(e1, t, (n = A(e1, r, null)).c, o.b.c, s, !0);
                            }
                            return 1;
                        }
                        w(o.b), w(n.b), x(n.b.e, o), o.a.b = u.b, o.a.a = u.a, o.a.h = ne(e1.e, o.a), o = o.a, n = [
                            0,
                            0,
                            0,
                            0
                        ], u = [
                            s.d,
                            a.d,
                            i.d,
                            l.d
                        ], o.g[0] = o.g[1] = o.g[2] = 0, Z(o, s, a, n, 0), Z(o, i, l, n, 2), Y(e1, o, u, n, !0), G(t).b = t.b = r.b = !0;
                    }
                }
                function J(e1, t) {
                    for(var r = B(t);;){
                        for(; r.b;)r = B(t = r);
                        if (!t.b && (null === (t = G(r = t)) || !t.b)) break;
                        t.b = !1;
                        var o = t.a, n = r.a;
                        if (s = o.b.a !== n.b.a) e: {
                            var s, i = B(s = t), a = s.a, l = i.a, u = void 0;
                            if (g(a.b.a, l.b.a)) {
                                if (b(a.b.a, l.b.a, a.a) < 0) {
                                    s = !1;
                                    break e;
                                }
                                G(s).b = s.b = !0, u = w(a), x(l.b, u), u.d.c = s.d;
                            } else {
                                if (0 < b(l.b.a, a.b.a, l.a)) {
                                    s = !1;
                                    break e;
                                }
                                s.b = i.b = !0, u = w(l), x(a.e, l.b), u.b.d.c = s.d;
                            }
                            s = !0;
                        }
                        if (s && (r.c ? (k(r), m(n), n = (r = B(t)).a) : t.c && (k(t), m(o), o = (t = G(r)).a)), o.a !== n.a) {
                            if (o.b.a === n.b.a || t.c || r.c || o.b.a !== e1.a && n.b.a !== e1.a) R(e1, t);
                            else if (Q(e1, t)) break;
                        }
                        o.a === n.a && o.b.a === n.b.a && (T(n, o), k(t), m(o), t = G(r));
                    }
                }
                function K(e1, t) {
                    var r = new N, o = d(e1.b);
                    o.a.b = 4e150, o.a.a = t, o.b.a.b = -4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, o.b.a.a = t, e1.a = o.b.a, r.a = o, r.f = 0, r.d = !1, r.c = !1, r.h = !0, r.b = !1, o = p(o = e1.f, o.a, r), r.e = o;
                }
                function $(e1) {
                    this.a = new ee, this.b = e1, this.c = f;
                }
                function p(e1, t, r) {
                    for(; null !== (t = t.c).b && !e1.c(e1.b, t.b, r););
                    return e1 = new ee(r, t.a, t), t.a.c = e1, t.a = e1;
                }
                function ee(e1, t, r) {
                    this.b = e1 || null, this.a = t || this, this.c = r || this;
                }
                function r() {
                    this.d = 0, this.p = this.b = this.q = null, this.j = [
                        0,
                        0,
                        0
                    ], this.s = 100130, this.n = !1, this.o = this.a = this.e = this.f = null, this.m = !1, this.c = this.r = this.i = this.k = this.l = this.h = null;
                }
                function I(e1, t) {
                    if (e1.d !== t) for(; e1.d !== t;)if (e1.d < t) switch(e1.d){
                        case 0:
                            l(e1, 100151), e1.u(null);
                            break;
                        case 1:
                            l(e1, 100152), e1.t();
                    }
                    else switch(e1.d){
                        case 2:
                            l(e1, 100154), e1.v();
                            break;
                        case 1:
                            l(e1, 100153), e1.w();
                    }
                }
                function l(e1, t) {
                    e1.p && e1.p(t, e1.c);
                }
                function te(e1, t) {
                    this.b = e1 || this, this.d = t || this, this.a = null, this.c = !1;
                }
                function u() {
                    (this.h = this).i = this.d = this.a = this.e = this.c = this.b = null, this.f = 0;
                }
                function re() {
                    this.c = new D, this.a = new te, this.b = new u, this.d = new u, this.b.b = this.d, this.d.b = this.b;
                }
                function D(e1, t) {
                    this.e = e1 || this, this.f = t || this, this.d = this.c = null, this.g = [
                        0,
                        0,
                        0
                    ], this.h = this.a = this.b = 0;
                }
                function oe() {
                    this.c = [], this.d = null, this.a = 0, this.e = !1, this.b = new ie;
                }
                function ne(e1, t) {
                    var r, o, n;
                    return e1.e ? (2 * (o = ++(r = e1.b).a) > r.f && (r.f *= 2, r.c = ae(r.c, r.f + 1)), 0 === r.b ? n = o : (n = r.b, r.b = r.c[r.b]), r.e[n] = t, r.c[n] = o, r.d[o] = n, r.h && ue(r, o), n) : (r = e1.a++, e1.c[r] = t, -(r + 1));
                }
                function se(e1) {
                    if (0 === e1.a) return le(e1.b);
                    var t = e1.c[e1.d[e1.a - 1]];
                    if (0 !== e1.b.a && g(F(e1.b), t)) return le(e1.b);
                    for(; --e1.a, 0 < e1.a && null === e1.c[e1.d[e1.a - 1]];);
                    return t;
                }
                function ie() {
                    this.d = ae([
                        0
                    ], 33), this.e = [
                        null,
                        null
                    ], this.c = [
                        0,
                        0
                    ], this.a = 0, this.f = 32, this.b = 0, this.h = !1, this.d[1] = 1;
                }
                function ae(e1, t) {
                    for(var r = Array(t), o = 0; o < e1.length; o++)r[o] = e1[o];
                    for(; o < t; o++)r[o] = 0;
                    return r;
                }
                function F(e1) {
                    return e1.e[e1.d[1]];
                }
                function le(e1) {
                    var t = e1.d, r = e1.e, o = e1.c, n = t[1], s = r[n];
                    return 0 < e1.a && (t[1] = t[e1.a], o[t[1]] = 1, r[n] = null, o[n] = e1.b, e1.b = n, 0 < --e1.a && U(e1, 1)), s;
                }
                function U(e1, t) {
                    for(var r = e1.d, o = e1.e, n = e1.c, s = t, i = r[s];;){
                        var a = s << 1, l = (a < e1.a && g(o[r[a + 1]], o[r[a]]) && (a += 1), r[a]);
                        if (a > e1.a || g(o[i], o[l])) {
                            n[r[s] = i] = s;
                            break;
                        }
                        n[r[s] = l] = s, s = a;
                    }
                }
                function ue(e1, t) {
                    for(var r = e1.d, o = e1.e, n = e1.c, s = t, i = r[s];;){
                        var a = s >> 1, l = r[a];
                        if (0 == a || g(o[l], o[i])) {
                            n[r[s] = i] = s;
                            break;
                        }
                        n[r[s] = l] = s, s = a;
                    }
                }
                function N() {
                    this.e = this.a = null, this.f = 0, this.c = this.b = this.h = this.d = !1;
                }
                function B(e1) {
                    return e1.e.c.b;
                }
                function G(e1) {
                    return e1.e.a.b;
                }
                (t = r.prototype).x = function() {
                    I(this, 0);
                }, t.B = function(e1, t) {
                    switch(e1){
                        case 100142:
                            return;
                        case 100140:
                            switch(t){
                                case 100130:
                                case 100131:
                                case 100132:
                                case 100133:
                                case 100134:
                                    return void (this.s = t);
                            }
                            break;
                        case 100141:
                            return void (this.m = !!t);
                        default:
                            return void l(this, 100900);
                    }
                    l(this, 100901);
                }, t.y = function(e1) {
                    switch(e1){
                        case 100142:
                            return 0;
                        case 100140:
                            return this.s;
                        case 100141:
                            return this.m;
                        default:
                            l(this, 100900);
                    }
                    return !1;
                }, t.A = function(e1, t, r) {
                    this.j[0] = e1, this.j[1] = t, this.j[2] = r;
                }, t.z = function(e1, t) {
                    var r = t || null;
                    switch(e1){
                        case 100100:
                        case 100106:
                            this.h = r;
                            break;
                        case 100104:
                        case 100110:
                            this.l = r;
                            break;
                        case 100101:
                        case 100107:
                            this.k = r;
                            break;
                        case 100102:
                        case 100108:
                            this.i = r;
                            break;
                        case 100103:
                        case 100109:
                            this.p = r;
                            break;
                        case 100105:
                        case 100111:
                            this.o = r;
                            break;
                        case 100112:
                            this.r = r;
                            break;
                        default:
                            l(this, 100900);
                    }
                }, t.C = function(e1, t) {
                    var r = !1, o = [
                        0,
                        0,
                        0
                    ];
                    I(this, 2);
                    for(var n = 0; n < 3; ++n){
                        var s = e1[n];
                        s < -1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 && (s = -1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, r = !0), 1e150 < s && (s = 1e150, r = !0), o[n] = s;
                    }
                    r && l(this, 100155), null === (r = this.q) ? x(r = d(this.b), r.b) : (w(r), r = r.e), r.a.d = t, r.a.g[0] = o[0], r.a.g[1] = o[1], r.a.g[2] = o[2], r.f = 1, r.b.f = -1, this.q = r;
                }, t.u = function(e1) {
                    I(this, 0), this.d = 1, this.b = new re, this.c = e1;
                }, t.t = function() {
                    I(this, 1), this.d = 2, this.q = null;
                }, t.v = function() {
                    I(this, 2), this.d = 1;
                }, t.w = function() {
                    I(this, 1), this.d = 0;
                    var e1, t, r = this.j[0], o = this.j[1], n = this.j[2], s = !1, i = [
                        r,
                        o,
                        n
                    ];
                    if (0 === r && 0 === o && 0 === n) {
                        for(var o = [
                            -2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
                            -2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
                            -2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
                        ], a = [
                            2e150,
                            2e150,
                            2e150
                        ], n = [], l = [], r = (s = this.b.c).e; r !== s; r = r.e)for(var u = 0; u < 3; ++u){
                            var c = r.g[u];
                            c < a[u] && (a[u] = c, l[u] = r), c > o[u] && (o[u] = c, n[u] = r);
                        }
                        if (o[1] - a[1] > o[r = 0] - a[0] && (r = 1), a[r = o[2] - a[2] > o[r] - a[r] ? 2 : r] >= o[r]) i[0] = 0, i[1] = 0, i[2] = 1;
                        else {
                            for(a = l[r], n = n[r], l = [
                                o = 0,
                                0,
                                0
                            ], a = [
                                a.g[0] - n.g[0],
                                a.g[1] - n.g[1],
                                a.g[2] - n.g[2]
                            ], u = [
                                0,
                                0,
                                0
                            ], r = s.e; r !== s; r = r.e)u[0] = r.g[0] - n.g[0], u[1] = r.g[1] - n.g[1], u[2] = r.g[2] - n.g[2], l[0] = a[1] * u[2] - a[2] * u[1], l[1] = a[2] * u[0] - a[0] * u[2], l[2] = a[0] * u[1] - a[1] * u[0], o < (c = l[0] * l[0] + l[1] * l[1] + l[2] * l[2]) && (o = c, i[0] = l[0], i[1] = l[1], i[2] = l[2]);
                            o <= 0 && (i[0] = i[1] = i[2] = 0, i[W(a)] = 1);
                        }
                        s = !0;
                    }
                    for(l = W(i), r = this.b.c, o = (l + 1) % 3, n = (l + 2) % 3, l = 0 < i[l] ? 1 : -1, i = r.e; i !== r; i = i.e)i.b = i.g[o], i.a = l * i.g[n];
                    if (s) {
                        for(i = 0, r = (s = this.b.a).b; r !== s; r = r.b)if (!((o = r.a).f <= 0)) for(; i += (o.a.b - o.b.a.b) * (o.a.a + o.b.a.a), (o = o.e) !== r.a;);
                        if (i < 0) for(s = (i = this.b.c).e; s !== i; s = s.e)s.a = -s.a;
                    }
                    for(this.n = !1, i = this.b.b, r = i.h; r !== i; r = s)s = r.h, o = r.e, y(r.a, r.b.a) && r.e.e !== r && (L(this, o, r), m(r), o = (r = o).e), o.e === r && (o !== r && (o !== s && o !== s.b || (s = s.h), m(o)), r !== s && r !== s.b || (s = s.h), m(r));
                    for(this.e = i = new oe, s = this.b.c, r = s.e; r !== s; r = r.e)r.h = ne(i, r);
                    var d = i;
                    d.d = [];
                    for(var f = 0; f < d.a; f++)d.d[f] = f;
                    d.d.sort(function(r) {
                        return function(e1, t) {
                            return g(r[e1], r[t]) ? 1 : -1;
                        };
                    }(d.c)), d.e = !0;
                    for(var h = d.b, p = h.a; 1 <= p; --p)U(h, p);
                    for(h.h = !0, this.f = new $(this), K(this, -4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), K(this, 4e150); null !== (i = se(this.e));){
                        for(;;){
                            e: if (0 === (r = this.e).a) s = F(r.b);
                            else if (s = r.c[r.d[r.a - 1]], 0 !== r.b.a && g(r = F(r.b), s)) {
                                s = r;
                                break e;
                            }
                            if (null === s || !y(s, i)) break;
                            s = se(this.e), L(this, i.c, s.c);
                        }
                        !function e1(t, r) {
                            for(var o, n = (t.a = r).c; null === n.i;)if ((n = n.c) === r.c) {
                                var n = t, s = r;
                                (c = new N).a = s.c.b;
                                for(var i = (a = n.f).a; null !== (i = i.a).b && !a.c(a.b, c, i.b););
                                var a, l, u = B(a = i.b), c = a.a, i = u.a;
                                return void (0 === b(c.b.a, s, c.a) ? y((c = a.a).a, s) || y(c.b.a, s) || (w(c.b), a.c && (m(c.c), a.c = !1), x(s.c, c), e1(n, s)) : (l = g(i.b.a, c.b.a) ? a : u, u = void 0, a.d || l.c ? (u = l === a ? S(s.c.b, c.e) : S(i.b.c.b, s.c).b, l.c ? O(l, u) : ((a = q(c = n, a, u)).f = G(a).f + a.a.f, a.d = X(c, a.f)), e1(n, s)) : P(n, a, s.c, s.c, null, !0)));
                            }
                            a = (c = B(n = C(n.i))).a, (c = A(t, c, null)).c === a ? (c = (a = c).c, i = B(n), u = n.a, l = i.a, o = !1, u.b.a !== l.b.a && Q(t, n), y(u.a, t.a) && (x(c.b.e, u), c = B(n = C(n)).a, A(t, B(n), i), o = !0), y(l.a, t.a) && (x(a, l.b.e), a = A(t, i, null), o = !0), o ? P(t, n, a.c, c, c, !0) : (s = g(l.a, u.a) ? l.b.e : u, P(t, n, s = S(a.c.b, s), s.c, s.c, !1), s.b.i.c = !0, J(t, n))) : P(t, n, c.c, a, a, !0);
                        }(this, i);
                    }
                    for(this.a = this.f.a.a.b.a.a, i = 0; null !== (s = this.f.a.a.b);)s.h || ++i, k(s);
                    for(this.f = null, (i = this.e).b = null, i.d = null, this.e = i.c = null, i = this.b, r = i.a.b; r !== i.a; r = s)s = r.b, (r = r.a).e.e === r && (T(r.c, r), m(r));
                    if (!this.n) {
                        if (i = this.b, this.m) for(r = i.b.h; r !== i.b; r = s)s = r.h, r.b.d.c !== r.d.c ? r.f = r.d.c ? 1 : -1 : m(r);
                        else for(r = i.a.b; r !== i.a; r = s)if (s = r.b, r.c) {
                            for(r = r.a; g(r.b.a, r.a); r = r.c.b);
                            for(; g(r.a, r.b.a); r = r.e);
                            for(o = r.c.b, n = void 0; r.e !== o;)if (g(r.b.a, o.a)) {
                                for(; o.e !== r && (g((t = o.e).b.a, t.a) || b(o.a, o.b.a, o.e.b.a) <= 0);)o = (n = S(o.e, o)).b;
                                o = o.c.b;
                            } else {
                                for(; o.e !== r && (g((e1 = r.c.b).a, e1.b.a) || 0 <= b(r.b.a, r.a, r.c.b.a));)r = (n = S(r, r.c.b)).b;
                                r = r.e;
                            }
                            for(; o.e.e !== r;)n = S(o.e, o), o = n.b;
                        }
                        if (this.h || this.i || this.k || this.l) {
                            if (this.m) {
                                for(s = (i = this.b).a.b; s !== i.a; s = s.b)if (s.c) {
                                    for(this.h && this.h(2, this.c), r = s.a; this.k && this.k(r.a.d, this.c), (r = r.e) !== s.a;);
                                    this.i && this.i(this.c);
                                }
                            } else {
                                for(i = this.b, s = !!this.l, r = !1, o = -1, n = i.a.d; n !== i.a; n = n.d)if (n.c) for(r || (this.h && this.h(4, this.c), r = !0), l = n.a; s && (a = l.b.d.c ? 0 : 1, o !== a && (o = a, this.l && this.l(!!o, this.c))), this.k && this.k(l.a.d, this.c), (l = l.e) !== n.a;);
                                r && this.i && this.i(this.c);
                            }
                        }
                        if (this.r) {
                            for(i = this.b, r = i.a.b; r !== i.a; r = s)if (s = r.b, !r.c) {
                                for(n = (o = r.a).e, l = void 0; n = (l = n).e, (l.d = null) === l.b.d && (l.c === l ? M(l.a, null) : (l.a.c = l.c, E(l, l.b.e)), (a = l.b).c === a ? M(a.a, null) : (a.a.c = a.c, E(a, a.b.e)), H(l)), l !== o;);
                                o = r.d, ((r = r.b).d = o).b = r;
                            }
                            return this.r(this.b), void (this.c = this.b = null);
                        }
                    }
                    this.b = this.c = null;
                }, this.libtess = {
                    GluTesselator: r,
                    windingRule: {
                        GLU_TESS_WINDING_ODD: 100130,
                        GLU_TESS_WINDING_NONZERO: 100131,
                        GLU_TESS_WINDING_POSITIVE: 100132,
                        GLU_TESS_WINDING_NEGATIVE: 100133,
                        GLU_TESS_WINDING_ABS_GEQ_TWO: 100134
                    },
                    primitiveType: {
                        GL_LINE_LOOP: 2,
                        GL_TRIANGLES: 4,
                        GL_TRIANGLE_STRIP: 5,
                        GL_TRIANGLE_FAN: 6
                    },
                    errorType: {
                        GLU_TESS_MISSING_BEGIN_POLYGON: 100151,
                        GLU_TESS_MISSING_END_POLYGON: 100153,
                        GLU_TESS_MISSING_BEGIN_CONTOUR: 100152,
                        GLU_TESS_MISSING_END_CONTOUR: 100154,
                        GLU_TESS_COORD_TOO_LARGE: 100155,
                        GLU_TESS_NEED_COMBINE_CALLBACK: 100156
                    },
                    gluEnum: {
                        GLU_TESS_MESH: 100112,
                        GLU_TESS_TOLERANCE: 100142,
                        GLU_TESS_WINDING_RULE: 100140,
                        GLU_TESS_BOUNDARY_ONLY: 100141,
                        GLU_INVALID_ENUM: 100900,
                        GLU_INVALID_VALUE: 100901,
                        GLU_TESS_BEGIN: 100100,
                        GLU_TESS_VERTEX: 100101,
                        GLU_TESS_END: 100102,
                        GLU_TESS_ERROR: 100103,
                        GLU_TESS_EDGE_FLAG: 100104,
                        GLU_TESS_COMBINE: 100105,
                        GLU_TESS_BEGIN_DATA: 100106,
                        GLU_TESS_VERTEX_DATA: 100107,
                        GLU_TESS_END_DATA: 100108,
                        GLU_TESS_ERROR_DATA: 100109,
                        GLU_TESS_EDGE_FLAG_DATA: 100110,
                        GLU_TESS_COMBINE_DATA: 100111
                    }
                }, r.prototype.gluDeleteTess = r.prototype.x, r.prototype.gluTessProperty = r.prototype.B, r.prototype.gluGetTessProperty = r.prototype.y, r.prototype.gluTessNormal = r.prototype.A, r.prototype.gluTessCallback = r.prototype.z, r.prototype.gluTessVertex = r.prototype.C, r.prototype.gluTessBeginPolygon = r.prototype.u, r.prototype.gluTessBeginContour = r.prototype.t, r.prototype.gluTessEndContour = r.prototype.v, r.prototype.gluTessEndPolygon = r.prototype.w, void 0 !== e1 && (e1.exports = this.libtess);
            },
            {}
        ],
        246: [
            function(e1, t, r) {
                "use strict";
                function o(g, e1, t, r) {
                    var v = 0, o = void 0 === (r = void 0 === r ? {} : r).loop ? null : r.loop, b = void 0 === r.palette ? null : r.palette;
                    if (e1 <= 0 || t <= 0 || 65535 < e1 || 65535 < t) throw new Error("Width/Height invalid.");
                    function j(e1) {
                        e1 = e1.length;
                        if (e1 < 2 || 256 < e1 || e1 & e1 - 1) throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");
                        return e1;
                    }
                    g[v++] = 71, g[v++] = 73, g[v++] = 70, g[v++] = 56, g[v++] = 57, g[v++] = 97;
                    var n = 0, s = 0;
                    if (null !== b) {
                        for(var i = j(b); i >>= 1;)++n;
                        if (i = 1 << n, --n, void 0 !== r.background) {
                            if (i <= (s = r.background)) throw new Error("Background index out of range.");
                            if (0 === s) throw new Error("Background index explicitly passed as 0.");
                        }
                    }
                    if (g[v++] = 255 & e1, g[v++] = e1 >> 8 & 255, g[v++] = 255 & t, g[v++] = t >> 8 & 255, g[v++] = (null !== b ? 128 : 0) | n, g[v++] = s, g[v++] = 0, null !== b) for(var a = 0, l = b.length; a < l; ++a){
                        var u = b[a];
                        g[v++] = u >> 16 & 255, g[v++] = u >> 8 & 255, g[v++] = 255 & u;
                    }
                    if (null !== o) {
                        if (o < 0 || 65535 < o) throw new Error("Loop count invalid.");
                        g[v++] = 33, g[v++] = 255, g[v++] = 11, g[v++] = 78, g[v++] = 69, g[v++] = 84, g[v++] = 83, g[v++] = 67, g[v++] = 65, g[v++] = 80, g[v++] = 69, g[v++] = 50, g[v++] = 46, g[v++] = 48, g[v++] = 3, g[v++] = 1, g[v++] = 255 & o, g[v++] = o >> 8 & 255, g[v++] = 0;
                    }
                    var _ = !1;
                    this.addFrame = function(e1, t, r, o, n, s) {
                        if (!0 === _ && (--v, _ = !1), s = void 0 === s ? {} : s, e1 < 0 || t < 0 || 65535 < e1 || 65535 < t) throw new Error("x/y invalid.");
                        if (r <= 0 || o <= 0 || 65535 < r || 65535 < o) throw new Error("Width/Height invalid.");
                        if (n.length < r * o) throw new Error("Not enough pixels for the frame size.");
                        var i = !0, a = s.palette;
                        if (null == a && (i = !1, a = b), null == a) throw new Error("Must supply either a local or global palette.");
                        for(var l = j(a), u = 0; l >>= 1;)++u;
                        var l = 1 << u, c = void 0 === s.delay ? 0 : s.delay, d = void 0 === s.disposal ? 0 : s.disposal;
                        if (d < 0 || 3 < d) throw new Error("Disposal out of range.");
                        var f = !1, h = 0;
                        if (void 0 !== s.transparent && null !== s.transparent && (f = !0, (h = s.transparent) < 0 || l <= h)) throw new Error("Transparent color index.");
                        if (0 === d && !f && 0 === c || (g[v++] = 33, g[v++] = 249, g[v++] = 4, g[v++] = d << 2 | (!0 === f ? 1 : 0), g[v++] = 255 & c, g[v++] = c >> 8 & 255, g[v++] = h, g[v++] = 0), g[v++] = 44, g[v++] = 255 & e1, g[v++] = e1 >> 8 & 255, g[v++] = 255 & t, g[v++] = t >> 8 & 255, g[v++] = 255 & r, g[v++] = r >> 8 & 255, g[v++] = 255 & o, g[v++] = o >> 8 & 255, g[v++] = !0 === i ? 128 | u - 1 : 0, !0 === i) for(var p = 0, m = a.length; p < m; ++p){
                            var y = a[p];
                            g[v++] = y >> 16 & 255, g[v++] = y >> 8 & 255, g[v++] = 255 & y;
                        }
                        return v = function(t, r, e1, o) {
                            t[r++] = e1;
                            var n = r++, s = 1 << e1, i = s - 1, a = 1 + s, l = 1 + a, u = e1 + 1, c = 0, d = 0;
                            function f(e1) {
                                for(; e1 <= c;)t[r++] = 255 & d, d >>= 8, c -= 8, r === n + 256 && (t[n] = 255, n = r++);
                            }
                            function h(e1) {
                                d |= e1 << c, c += u, f(8);
                            }
                            var p = o[0] & i, m = {};
                            h(s);
                            for(var y = 1, g = o.length; y < g; ++y){
                                var v = o[y] & i, b = p << 8 | v, j = m[b];
                                if (void 0 === j) {
                                    for(d |= p << c, c += u; 8 <= c;)t[r++] = 255 & d, d >>= 8, c -= 8, r === n + 256 && (t[n] = 255, n = r++);
                                    4096 === l ? (h(s), l = 1 + a, u = e1 + 1, m = {}) : (1 << u <= l && ++u, m[b] = l++), p = v;
                                } else p = j;
                            }
                            h(p), h(a), f(1), n + 1 === r ? t[n] = 0 : (t[n] = r - n - 1, t[r++] = 0);
                            return r;
                        }(g, v, u < 2 ? 2 : u, n);
                    }, this.end = function() {
                        return !1 === _ && (g[v++] = 59, _ = !0), v;
                    }, this.getOutputBuffer = function() {
                        return g;
                    }, this.setOutputBuffer = function(e1) {
                        g = e1;
                    }, this.getOutputBufferPosition = function() {
                        return v;
                    }, this.setOutputBufferPosition = function(e1) {
                        v = e1;
                    };
                }
                function M(e1, t, r, o) {
                    for(var n = e1[t++], s = 1 << n, i = 1 + s, a = 1 + i, l = n + 1, u = (1 << l) - 1, c = 0, d = 0, f = 0, h = e1[t++], p = new Int32Array(4096), m = null;;){
                        for(; c < 16 && 0 !== h;)d |= e1[t++] << c, c += 8, 1 === h ? h = e1[t++] : --h;
                        if (c < l) break;
                        var y = d & u;
                        if (d >>= l, c -= l, y == s) a = 1 + i, u = (1 << (l = n + 1)) - 1, m = null;
                        else {
                            if (y == i) break;
                            for(var g = y < a ? y : m, v = 0, b = g; s < b;)b = p[b] >> 8, ++v;
                            var j = b;
                            if (o < f + v + (g !== y ? 1 : 0)) return void console.log("Warning, gif stream longer than expected.");
                            r[f++] = j;
                            var _ = f += v;
                            for(g !== y && (r[f++] = j), b = g; v--;)b = p[b], r[--_] = 255 & b, b >>= 8;
                            null !== m && a < 4096 && (p[a++] = m << 8 | j, u + 1 <= a && l < 12 && (++l, u = u << 1 | 1)), m = y;
                        }
                    }
                    f !== o && console.log("Warning, gif stream shorter than expected.");
                }
                try {
                    r.GifWriter = o, r.GifReader = function(b) {
                        var e1 = 0;
                        if (71 !== b[e1++] || 73 !== b[e1++] || 70 !== b[e1++] || 56 !== b[e1++] || 56 != (b[e1++] + 1 & 253) || 97 !== b[e1++]) throw new Error("Invalid GIF 87a/89a header.");
                        var j = b[e1++] | b[e1++] << 8, t = b[e1++] | b[e1++] << 8, r = b[e1++], o = 1 << 1 + (7 & r), n = (b[e1++], b[e1++], null), s = null, i = (r >> 7 && (n = e1, e1 += 3 * (s = o)), !0), a = [], l = 0, u = null, c = 0, d = null;
                        for(this.width = j, this.height = t; i && e1 < b.length;)switch(b[e1++]){
                            case 33:
                                switch(b[e1++]){
                                    case 255:
                                        if (11 !== b[e1] || 78 == b[e1 + 1] && 69 == b[e1 + 2] && 84 == b[e1 + 3] && 83 == b[e1 + 4] && 67 == b[e1 + 5] && 65 == b[e1 + 6] && 80 == b[e1 + 7] && 69 == b[e1 + 8] && 50 == b[e1 + 9] && 46 == b[e1 + 10] && 48 == b[e1 + 11] && 3 == b[e1 + 12] && 1 == b[e1 + 13] && 0 == b[e1 + 16]) e1 += 14, d = b[e1++] | b[e1++] << 8, e1++;
                                        else for(e1 += 12;;){
                                            if (!(0 <= (h = b[e1++]))) throw Error("Invalid block size");
                                            if (0 === h) break;
                                            e1 += h;
                                        }
                                        break;
                                    case 249:
                                        if (4 !== b[e1++] || 0 !== b[e1 + 4]) throw new Error("Invalid graphics extension block.");
                                        var f = b[e1++], l = b[e1++] | b[e1++] << 8, u = b[e1++];
                                        0 == (1 & f) && (u = null), c = f >> 2 & 7, e1++;
                                        break;
                                    case 254:
                                        for(;;){
                                            if (!(0 <= (h = b[e1++]))) throw Error("Invalid block size");
                                            if (0 === h) break;
                                            e1 += h;
                                        }
                                        break;
                                    default:
                                        throw new Error("Unknown graphic control label: 0x" + b[e1 - 1].toString(16));
                                }
                                break;
                            case 44:
                                var h, p = b[e1++] | b[e1++] << 8, m = b[e1++] | b[e1++] << 8, y = b[e1++] | b[e1++] << 8, g = b[e1++] | b[e1++] << 8, v = b[e1++], _ = v >> 6 & 1, x = 1 << 1 + (7 & v), w = n, S = s, E = !1, v = (v >> 7 && (E = !0, w = e1, e1 += 3 * (S = x)), e1);
                                for(e1++;;){
                                    if (!(0 <= (h = b[e1++]))) throw Error("Invalid block size");
                                    if (0 === h) break;
                                    e1 += h;
                                }
                                a.push({
                                    x: p,
                                    y: m,
                                    width: y,
                                    height: g,
                                    has_local_palette: E,
                                    palette_offset: w,
                                    palette_size: S,
                                    data_offset: v,
                                    data_length: e1 - v,
                                    transparent_index: u,
                                    interlaced: !!_,
                                    delay: l,
                                    disposal: c
                                });
                                break;
                            case 59:
                                i = !1;
                                break;
                            default:
                                throw new Error("Unknown gif block: 0x" + b[e1 - 1].toString(16));
                        }
                        this.numFrames = function() {
                            return a.length;
                        }, this.loopCount = function() {
                            return d;
                        }, this.frameInfo = function(e1) {
                            if (e1 < 0 || e1 >= a.length) throw new Error("Frame index out of range.");
                            return a[e1];
                        }, this.decodeAndBlitFrameBGRA = function(e1, t) {
                            for(var e1 = this.frameInfo(e1), r = e1.width * e1.height, o = new Uint8Array(r), n = (M(b, e1.data_offset, o, r), e1.palette_offset), s = e1.transparent_index, i = (null === s && (s = 256), e1.width), a = j - i, l = i, u = 4 * (e1.y * j + e1.x), c = 4 * ((e1.y + e1.height) * j + e1.x), d = u, f = 4 * a, h = (!0 === e1.interlaced && (f += 4 * j * 7), 8), p = 0, m = o.length; p < m; ++p){
                                var y, g, v = o[p];
                                0 === l && (l = i, c <= (d += f) && (f = 4 * a + 4 * j * (h - 1), d = u + (i + a) * (h << 1), h >>= 1)), v === s ? d += 4 : (y = b[n + 3 * v], g = b[n + 3 * v + 1], v = b[n + 3 * v + 2], t[d++] = v, t[d++] = g, t[d++] = y, t[d++] = 255), --l;
                            }
                        }, this.decodeAndBlitFrameRGBA = function(e1, t) {
                            for(var e1 = this.frameInfo(e1), r = e1.width * e1.height, o = new Uint8Array(r), n = (M(b, e1.data_offset, o, r), e1.palette_offset), s = e1.transparent_index, i = (null === s && (s = 256), e1.width), a = j - i, l = i, u = 4 * (e1.y * j + e1.x), c = 4 * ((e1.y + e1.height) * j + e1.x), d = u, f = 4 * a, h = (!0 === e1.interlaced && (f += 4 * j * 7), 8), p = 0, m = o.length; p < m; ++p){
                                var y, g, v = o[p];
                                0 === l && (l = i, c <= (d += f) && (f = 4 * a + 4 * j * (h - 1), d = u + (i + a) * (h << 1), h >>= 1)), v === s ? d += 4 : (y = b[n + 3 * v], g = b[n + 3 * v + 1], v = b[n + 3 * v + 2], t[d++] = y, t[d++] = g, t[d++] = v, t[d++] = 255), --l;
                            }
                        };
                    };
                } catch (e1) {}
            },
            {}
        ],
        247: [
            function(Pr, r, o) {
                (function(Ar) {
                    var e1, t;
                    e1 = this, t = function(j) {
                        "use strict";
                        function D(e1) {
                            if (null == this) throw TypeError();
                            var t, r = String(this), o = r.length, e1 = e1 ? Number(e1) : 0;
                            if (!((e1 = e1 != e1 ? 0 : e1) < 0 || o <= e1)) return 55296 <= (t = r.charCodeAt(e1)) && t <= 56319 && e1 + 1 < o && 56320 <= (o = r.charCodeAt(e1 + 1)) && o <= 57343 ? 1024 * (t - 55296) + o - 56320 + 65536 : t;
                        }
                        String.prototype.codePointAt || ((F = function() {
                            try {
                                var e1 = {}, t = Object.defineProperty, r = t(e1, e1, e1) && t;
                            } catch (e1) {}
                            return r;
                        }()) ? F(String.prototype, "codePointAt", {
                            value: D,
                            configurable: !0,
                            writable: !0
                        }) : String.prototype.codePointAt = D);
                        var F, U = 0, N = -3;
                        function B() {
                            this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
                        }
                        function G(e1, t) {
                            this.source = e1, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = t, this.destLen = 0, this.ltree = new B, this.dtree = new B;
                        }
                        var V = new B, z = new B, H = new Uint8Array(30), W = new Uint16Array(30), q = new Uint8Array(30), X = new Uint16Array(30), Y = new Uint8Array([
                            16,
                            17,
                            18,
                            0,
                            8,
                            7,
                            9,
                            6,
                            10,
                            5,
                            11,
                            4,
                            12,
                            3,
                            13,
                            2,
                            14,
                            1,
                            15
                        ]), Z = new B, v = new Uint8Array(320);
                        function Q(e1, t, r, o) {
                            for(var n, s = 0; s < r; ++s)e1[s] = 0;
                            for(s = 0; s < 30 - r; ++s)e1[s + r] = s / r | 0;
                            for(n = o, s = 0; s < 30; ++s)t[s] = n, n += 1 << e1[s];
                        }
                        var J = new Uint16Array(16);
                        function K(e1, t, r, o) {
                            for(var n, s = 0; s < 16; ++s)e1.table[s] = 0;
                            for(s = 0; s < o; ++s)e1.table[t[r + s]]++;
                            for(s = n = e1.table[0] = 0; s < 16; ++s)J[s] = n, n += e1.table[s];
                            for(s = 0; s < o; ++s)t[r + s] && (e1.trans[J[t[r + s]]++] = s);
                        }
                        function b(e1, t, r) {
                            if (!t) return r;
                            for(; e1.bitcount < 24;)e1.tag |= e1.source[e1.sourceIndex++] << e1.bitcount, e1.bitcount += 8;
                            var o = e1.tag & 65535 >>> 16 - t;
                            return e1.tag >>>= t, e1.bitcount -= t, o + r;
                        }
                        function $(e1, t) {
                            for(; e1.bitcount < 24;)e1.tag |= e1.source[e1.sourceIndex++] << e1.bitcount, e1.bitcount += 8;
                            for(var r = 0, o = 0, n = 0, s = e1.tag; o = 2 * o + (1 & s), s >>>= 1, r += t.table[++n], 0 <= (o -= t.table[n]););
                            return e1.tag = s, e1.bitcount -= n, t.trans[r + o];
                        }
                        function ee(e1, t, r) {
                            for(;;){
                                var o = $(e1, t);
                                if (256 === o) return U;
                                if (o < 256) e1.dest[e1.destLen++] = o;
                                else for(var n, s = b(e1, H[o -= 257], W[o]), o = $(e1, r), i = n = e1.destLen - b(e1, q[o], X[o]); i < n + s; ++i)e1.dest[e1.destLen++] = e1.dest[i];
                            }
                        }
                        for(var e1 = V, te = z, t = 0; t < 7; ++t)e1.table[t] = 0;
                        for(e1.table[7] = 24, e1.table[8] = 152, e1.table[9] = 112, t = 0; t < 24; ++t)e1.trans[t] = 256 + t;
                        for(t = 0; t < 144; ++t)e1.trans[24 + t] = t;
                        for(t = 0; t < 8; ++t)e1.trans[168 + t] = 280 + t;
                        for(t = 0; t < 112; ++t)e1.trans[176 + t] = 144 + t;
                        for(t = 0; t < 5; ++t)te.table[t] = 0;
                        for(te.table[5] = 32, t = 0; t < 32; ++t)te.trans[t] = t;
                        Q(H, W, 4, 3), Q(q, X, 2, 1), H[28] = 0, W[28] = 258;
                        var re = function(e1, t) {
                            var r, o, n, s = new G(e1, t);
                            do {
                                switch(n = void 0, (o = s).bitcount-- || (o.tag = o.source[o.sourceIndex++], o.bitcount = 7), n = 1 & o.tag, o.tag >>>= 1, o = n, b(s, 2, 0)){
                                    case 0:
                                        r = function(e1) {
                                            for(var t, r; 8 < e1.bitcount;)e1.sourceIndex--, e1.bitcount -= 8;
                                            if ((t = 256 * e1.source[e1.sourceIndex + 1] + e1.source[e1.sourceIndex]) !== (65535 & ~(256 * e1.source[e1.sourceIndex + 3] + e1.source[e1.sourceIndex + 2]))) return N;
                                            for(e1.sourceIndex += 4, r = t; r; --r)e1.dest[e1.destLen++] = e1.source[e1.sourceIndex++];
                                            return e1.bitcount = 0, U;
                                        }(s);
                                        break;
                                    case 1:
                                        r = ee(s, V, z);
                                        break;
                                    case 2:
                                        y = m = p = g = i = h = f = d = c = u = l = a = void 0;
                                        for(var i, a = s, l = s.ltree, u = s.dtree, c = b(a, 5, 257), d = b(a, 5, 1), f = b(a, 4, 4), h = 0; h < 19; ++h)v[h] = 0;
                                        for(h = 0; h < f; ++h){
                                            var p = b(a, 3, 0);
                                            v[Y[h]] = p;
                                        }
                                        for(K(Z, v, 0, 19), i = 0; i < c + d;){
                                            var m = $(a, Z);
                                            switch(m){
                                                case 16:
                                                    for(var y = v[i - 1], g = b(a, 2, 3); g; --g)v[i++] = y;
                                                    break;
                                                case 17:
                                                    for(g = b(a, 3, 3); g; --g)v[i++] = 0;
                                                    break;
                                                case 18:
                                                    for(g = b(a, 7, 11); g; --g)v[i++] = 0;
                                                    break;
                                                default:
                                                    v[i++] = m;
                                            }
                                        }
                                        K(l, v, 0, c), K(u, v, c, d), r = ee(s, s.ltree, s.dtree);
                                        break;
                                    default:
                                        r = N;
                                }
                                if (r !== U) throw new Error("Data error");
                            }while (!o);
                            return s.destLen < s.dest.length ? "function" == typeof s.dest.slice ? s.dest.slice(0, s.destLen) : s.dest.subarray(0, s.destLen) : s.dest;
                        };
                        function g(e1, t, r, o, n) {
                            return Math.pow(1 - n, 3) * e1 + 3 * Math.pow(1 - n, 2) * n * t + 3 * (1 - n) * Math.pow(n, 2) * r + Math.pow(n, 3) * o;
                        }
                        function a() {
                            this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN;
                        }
                        function f() {
                            this.commands = [], this.fill = "black", this.stroke = null, this.strokeWidth = 1;
                        }
                        function oe(e1) {
                            throw new Error(e1);
                        }
                        function ne(e1, t) {
                            e1 || oe(t);
                        }
                        a.prototype.isEmpty = function() {
                            return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);
                        }, a.prototype.addPoint = function(e1, t) {
                            "number" == typeof e1 && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = e1, this.x2 = e1), e1 < this.x1 && (this.x1 = e1), e1 > this.x2 && (this.x2 = e1)), "number" == typeof t && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = t, this.y2 = t), t < this.y1 && (this.y1 = t), t > this.y2 && (this.y2 = t));
                        }, a.prototype.addX = function(e1) {
                            this.addPoint(e1, null);
                        }, a.prototype.addY = function(e1) {
                            this.addPoint(null, e1);
                        }, a.prototype.addBezier = function(e1, t, r, o, n, s, i, a) {
                            var l = [
                                e1,
                                t
                            ], u = [
                                r,
                                o
                            ], c = [
                                n,
                                s
                            ], d = [
                                i,
                                a
                            ];
                            this.addPoint(e1, t), this.addPoint(i, a);
                            for(var f = 0; f <= 1; f++){
                                var h, p = 6 * l[f] - 12 * u[f] + 6 * c[f], m = -3 * l[f] + 9 * u[f] - 9 * c[f] + 3 * d[f], y = 3 * u[f] - 3 * l[f];
                                0 == m ? 0 == p || 0 < (h = -y / p) && h < 1 && (0 === f && this.addX(g(l[f], u[f], c[f], d[f], h)), 1 === f && this.addY(g(l[f], u[f], c[f], d[f], h))) : (h = Math.pow(p, 2) - 4 * y * m) < 0 || (0 < (y = (-p + Math.sqrt(h)) / (2 * m)) && y < 1 && (0 === f && this.addX(g(l[f], u[f], c[f], d[f], y)), 1 === f && this.addY(g(l[f], u[f], c[f], d[f], y))), 0 < (y = (-p - Math.sqrt(h)) / (2 * m)) && y < 1 && (0 === f && this.addX(g(l[f], u[f], c[f], d[f], y)), 1 === f && this.addY(g(l[f], u[f], c[f], d[f], y))));
                            }
                        }, a.prototype.addQuad = function(e1, t, r, o, n, s) {
                            r = e1 + 2 / 3 * (r - e1), o = t + 2 / 3 * (o - t);
                            this.addBezier(e1, t, r, o, r + 1 / 3 * (n - e1), o + 1 / 3 * (s - t), n, s);
                        }, f.prototype.moveTo = function(e1, t) {
                            this.commands.push({
                                type: "M",
                                x: e1,
                                y: t
                            });
                        }, f.prototype.lineTo = function(e1, t) {
                            this.commands.push({
                                type: "L",
                                x: e1,
                                y: t
                            });
                        }, f.prototype.curveTo = f.prototype.bezierCurveTo = function(e1, t, r, o, n, s) {
                            this.commands.push({
                                type: "C",
                                x1: e1,
                                y1: t,
                                x2: r,
                                y2: o,
                                x: n,
                                y: s
                            });
                        }, f.prototype.quadTo = f.prototype.quadraticCurveTo = function(e1, t, r, o) {
                            this.commands.push({
                                type: "Q",
                                x1: e1,
                                y1: t,
                                x: r,
                                y: o
                            });
                        }, f.prototype.close = f.prototype.closePath = function() {
                            this.commands.push({
                                type: "Z"
                            });
                        }, f.prototype.extend = function(e1) {
                            var t;
                            if (e1.commands) e1 = e1.commands;
                            else if (e1 instanceof a) return t = e1, this.moveTo(t.x1, t.y1), this.lineTo(t.x2, t.y1), this.lineTo(t.x2, t.y2), this.lineTo(t.x1, t.y2), void this.close();
                            Array.prototype.push.apply(this.commands, e1);
                        }, f.prototype.getBoundingBox = function() {
                            for(var e1 = new a, t = 0, r = 0, o = 0, n = 0, s = 0; s < this.commands.length; s++){
                                var i = this.commands[s];
                                switch(i.type){
                                    case "M":
                                        e1.addPoint(i.x, i.y), t = o = i.x, r = n = i.y;
                                        break;
                                    case "L":
                                        e1.addPoint(i.x, i.y), o = i.x, n = i.y;
                                        break;
                                    case "Q":
                                        e1.addQuad(o, n, i.x1, i.y1, i.x, i.y), o = i.x, n = i.y;
                                        break;
                                    case "C":
                                        e1.addBezier(o, n, i.x1, i.y1, i.x2, i.y2, i.x, i.y), o = i.x, n = i.y;
                                        break;
                                    case "Z":
                                        o = t, n = r;
                                        break;
                                    default:
                                        throw new Error("Unexpected path command " + i.type);
                                }
                            }
                            return e1.isEmpty() && e1.addPoint(0, 0), e1;
                        }, f.prototype.draw = function(e1) {
                            e1.beginPath();
                            for(var t = 0; t < this.commands.length; t += 1){
                                var r = this.commands[t];
                                "M" === r.type ? e1.moveTo(r.x, r.y) : "L" === r.type ? e1.lineTo(r.x, r.y) : "C" === r.type ? e1.bezierCurveTo(r.x1, r.y1, r.x2, r.y2, r.x, r.y) : "Q" === r.type ? e1.quadraticCurveTo(r.x1, r.y1, r.x, r.y) : "Z" === r.type && e1.closePath();
                            }
                            this.fill && (e1.fillStyle = this.fill, e1.fill()), this.stroke && (e1.strokeStyle = this.stroke, e1.lineWidth = this.strokeWidth, e1.stroke());
                        }, f.prototype.toPathData = function(n) {
                            function e1() {
                                for(var e1 = arguments, t = "", r = 0; r < arguments.length; r += 1){
                                    var o = e1[r];
                                    0 <= o && 0 < r && (t += " "), t += (o, Math.round(o) === o ? "" + Math.round(o) : o.toFixed(n));
                                }
                                return t;
                            }
                            n = void 0 !== n ? n : 2;
                            for(var t = "", r = 0; r < this.commands.length; r += 1){
                                var o = this.commands[r];
                                "M" === o.type ? t += "M" + e1(o.x, o.y) : "L" === o.type ? t += "L" + e1(o.x, o.y) : "C" === o.type ? t += "C" + e1(o.x1, o.y1, o.x2, o.y2, o.x, o.y) : "Q" === o.type ? t += "Q" + e1(o.x1, o.y1, o.x, o.y) : "Z" === o.type && (t += "Z");
                            }
                            return t;
                        }, f.prototype.toSVG = function(e1) {
                            var t = (t = '<path d="') + this.toPathData(e1) + '"';
                            return this.fill && "black" !== this.fill && (null === this.fill ? t += ' fill="none"' : t += ' fill="' + this.fill + '"'), this.stroke && (t += ' stroke="' + this.stroke + '" stroke-width="' + this.strokeWidth + '"'), t += "/>";
                        }, f.prototype.toDOMElement = function(e1) {
                            var e1 = this.toPathData(e1), t = document.createElementNS("http://www.w3.org/2000/svg", "path");
                            return t.setAttribute("d", e1), t;
                        };
                        var L = {
                            fail: oe,
                            argument: ne,
                            assert: ne
                        }, m = {}, w = {}, l = {};
                        function r(e1) {
                            return function() {
                                return e1;
                            };
                        }
                        w.BYTE = function(e1) {
                            return L.argument(0 <= e1 && e1 <= 255, "Byte value should be between 0 and 255."), [
                                e1
                            ];
                        }, l.BYTE = r(1), w.CHAR = function(e1) {
                            return [
                                e1.charCodeAt(0)
                            ];
                        }, l.CHAR = r(1), w.CHARARRAY = function(e1) {
                            for(var t = [], r = 0; r < e1.length; r += 1)t[r] = e1.charCodeAt(r);
                            return t;
                        }, l.CHARARRAY = function(e1) {
                            return e1.length;
                        }, w.USHORT = function(e1) {
                            return [
                                e1 >> 8 & 255,
                                255 & e1
                            ];
                        }, l.USHORT = r(2), w.SHORT = function(e1) {
                            return [
                                (e1 = 32768 <= e1 ? -(65536 - e1) : e1) >> 8 & 255,
                                255 & e1
                            ];
                        }, l.SHORT = r(2), w.UINT24 = function(e1) {
                            return [
                                e1 >> 16 & 255,
                                e1 >> 8 & 255,
                                255 & e1
                            ];
                        }, l.UINT24 = r(3), w.ULONG = function(e1) {
                            return [
                                e1 >> 24 & 255,
                                e1 >> 16 & 255,
                                e1 >> 8 & 255,
                                255 & e1
                            ];
                        }, l.ULONG = r(4), w.LONG = function(e1) {
                            return [
                                (e1 = 2147483648 <= e1 ? -(4294967296 - e1) : e1) >> 24 & 255,
                                e1 >> 16 & 255,
                                e1 >> 8 & 255,
                                255 & e1
                            ];
                        }, l.LONG = r(4), w.FIXED = w.ULONG, l.FIXED = l.ULONG, w.FWORD = w.SHORT, l.FWORD = l.SHORT, w.UFWORD = w.USHORT, l.UFWORD = l.USHORT, w.LONGDATETIME = function(e1) {
                            return [
                                0,
                                0,
                                0,
                                0,
                                e1 >> 24 & 255,
                                e1 >> 16 & 255,
                                e1 >> 8 & 255,
                                255 & e1
                            ];
                        }, l.LONGDATETIME = r(8), w.TAG = function(e1) {
                            return L.argument(4 === e1.length, "Tag should be exactly 4 ASCII characters."), [
                                e1.charCodeAt(0),
                                e1.charCodeAt(1),
                                e1.charCodeAt(2),
                                e1.charCodeAt(3)
                            ];
                        }, l.TAG = r(4), w.Card8 = w.BYTE, l.Card8 = l.BYTE, w.Card16 = w.USHORT, l.Card16 = l.USHORT, w.OffSize = w.BYTE, l.OffSize = l.BYTE, w.SID = w.USHORT, l.SID = l.USHORT, w.NUMBER = function(e1) {
                            return -107 <= e1 && e1 <= 107 ? [
                                e1 + 139
                            ] : 108 <= e1 && e1 <= 1131 ? [
                                247 + ((e1 -= 108) >> 8),
                                255 & e1
                            ] : -1131 <= e1 && e1 <= -108 ? [
                                251 + ((e1 = -e1 - 108) >> 8),
                                255 & e1
                            ] : -32768 <= e1 && e1 <= 32767 ? w.NUMBER16(e1) : w.NUMBER32(e1);
                        }, l.NUMBER = function(e1) {
                            return w.NUMBER(e1).length;
                        }, w.NUMBER16 = function(e1) {
                            return [
                                28,
                                e1 >> 8 & 255,
                                255 & e1
                            ];
                        }, l.NUMBER16 = r(3), w.NUMBER32 = function(e1) {
                            return [
                                29,
                                e1 >> 24 & 255,
                                e1 >> 16 & 255,
                                e1 >> 8 & 255,
                                255 & e1
                            ];
                        }, l.NUMBER32 = r(5), w.REAL = function(e1) {
                            for(var t = e1.toString(), r = /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t), o = (r && (r = parseFloat("1e" + ((r[2] ? +r[2] : 0) + r[1].length)), t = (Math.round(e1 * r) / r).toString()), ""), n = 0, s = t.length; n < s; n += 1){
                                var i = t[n];
                                o += "e" === i ? "-" === t[++n] ? "c" : "b" : "." === i ? "a" : "-" === i ? "e" : i;
                            }
                            for(var a = [
                                30
                            ], l = 0, u = (o += 1 & o.length ? "f" : "ff").length; l < u; l += 2)a.push(parseInt(o.substr(l, 2), 16));
                            return a;
                        }, l.REAL = function(e1) {
                            return w.REAL(e1).length;
                        }, w.NAME = w.CHARARRAY, l.NAME = l.CHARARRAY, w.STRING = w.CHARARRAY, l.STRING = l.CHARARRAY, m.UTF8 = function(e1, t, r) {
                            for(var o = [], n = r, s = 0; s < n; s++, t += 1)o[s] = e1.getUint8(t);
                            return String.fromCharCode.apply(null, o);
                        }, m.UTF16 = function(e1, t, r) {
                            for(var o = [], n = r / 2, s = 0; s < n; s++, t += 2)o[s] = e1.getUint16(t);
                            return String.fromCharCode.apply(null, o);
                        }, w.UTF16 = function(e1) {
                            for(var t = [], r = 0; r < e1.length; r += 1){
                                var o = e1.charCodeAt(r);
                                t[t.length] = o >> 8 & 255, t[t.length] = 255 & o;
                            }
                            return t;
                        }, l.UTF16 = function(e1) {
                            return 2 * e1.length;
                        };
                        var se, ie = {
                            "x-mac-croatian": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\u0160\u2122\xb4\xa8\u2260\u017D\xd8\u221E\xb1\u2264\u2265\u2206\xb5\u2202\u2211\u220F\u0161\u222B\xaa\xba\u03A9\u017E\xf8\xbf\xa1\xac\u221A\u0192\u2248\u0106\xab\u010C\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\xf7\u25CA\uF8FF\xa9\u2044\u20AC\u2039\u203A\xc6\xbb\u2013\xb7\u201A\u201E\u2030\xc2\u0107\xc1\u010D\xc8\xcd\xce\xcf\xcc\xd3\xd4\u0111\xd2\xda\xdb\xd9\u0131\u02C6\u02DC\xaf\u03C0\xcb\u02DA\xb8\xca\xe6\u02C7",
                            "x-mac-cyrillic": "\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\xb0\u0490\xa3\xa7\u2022\xb6\u0406\xae\xa9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\xb1\u2264\u2265\u0456\xb5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\xac\u221A\u0192\u2248\u2206\xab\xbb\u2026\xa0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\xf7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E",
                            "x-mac-gaelic": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u1E02\xb1\u2264\u2265\u1E03\u010A\u010B\u1E0A\u1E0B\u1E1E\u1E1F\u0120\u0121\u1E40\xe6\xf8\u1E41\u1E56\u1E57\u027C\u0192\u017F\u1E60\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u1E61\u1E9B\xff\u0178\u1E6A\u20AC\u2039\u203A\u0176\u0177\u1E6B\xb7\u1EF2\u1EF3\u204A\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\u2663\xd2\xda\xdb\xd9\u0131\xdd\xfd\u0174\u0175\u1E84\u1E85\u1E80\u1E81\u1E82\u1E83",
                            "x-mac-greek": "\xc4\xb9\xb2\xc9\xb3\xd6\xdc\u0385\xe0\xe2\xe4\u0384\xa8\xe7\xe9\xe8\xea\xeb\xa3\u2122\xee\xef\u2022\xbd\u2030\xf4\xf6\xa6\u20AC\xf9\xfb\xfc\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\xdf\xae\xa9\u03A3\u03AA\xa7\u2260\xb0\xb7\u0391\xb1\u2264\u2265\xa5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\xac\u039F\u03A1\u2248\u03A4\xab\xbb\u2026\xa0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\xf7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\xad",
                            "x-mac-icelandic": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\xdd\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221E\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220F\u03C0\u222B\xaa\xba\u03A9\xe6\xf8\xbf\xa1\xac\u221A\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xf7\u25CA\xff\u0178\u2044\u20AC\xd0\xf0\xde\xfe\xfd\xb7\u201A\u201E\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uF8FF\xd2\xda\xdb\xd9\u0131\u02C6\u02DC\xaf\u02D8\u02D9\u02DA\xb8\u02DD\u02DB\u02C7",
                            "x-mac-inuit": "\u1403\u1404\u1405\u1406\u140A\u140B\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144E\u144F\u1450\u1451\u1455\u1456\u1466\u146D\u146E\u146F\u1470\u1472\u1473\u1483\u148B\u148C\u148D\u148E\u1490\u1491\xb0\u14A1\u14A5\u14A6\u2022\xb6\u14A7\xae\xa9\u2122\u14A8\u14AA\u14AB\u14BB\u14C2\u14C3\u14C4\u14C5\u14C7\u14C8\u14D0\u14EF\u14F0\u14F1\u14F2\u14F4\u14F5\u1505\u14D5\u14D6\u14D7\u14D8\u14DA\u14DB\u14EA\u1528\u1529\u152A\u152B\u152D\u2026\xa0\u152E\u153E\u1555\u1556\u1557\u2013\u2014\u201C\u201D\u2018\u2019\u1558\u1559\u155A\u155D\u1546\u1547\u1548\u1549\u154B\u154C\u1550\u157F\u1580\u1581\u1582\u1583\u1584\u1585\u158F\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15A0\u15A1\u15A2\u15A3\u15A4\u15A5\u15A6\u157C\u0141\u0142",
                            "x-mac-ce": "\xc4\u0100\u0101\xc9\u0104\xd6\xdc\xe1\u0105\u010C\xe4\u010D\u0106\u0107\xe9\u0179\u017A\u010E\xed\u010F\u0112\u0113\u0116\xf3\u0117\xf4\xf6\xf5\xfa\u011A\u011B\xfc\u2020\xb0\u0118\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\u0119\xa8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\xac\u221A\u0144\u0147\u2206\xab\xbb\u2026\xa0\u0148\u0150\xd5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\xf7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\xc1\u0164\u0165\xcd\u017D\u017E\u016A\xd3\xd4\u016B\u016E\xda\u016F\u0170\u0171\u0172\u0173\xdd\xfd\u0137\u017B\u0141\u017C\u0122\u02C7",
                            macintosh: "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221E\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220F\u03C0\u222B\xaa\xba\u03A9\xe6\xf8\xbf\xa1\xac\u221A\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xf7\u25CA\xff\u0178\u2044\u20AC\u2039\u203A\uFB01\uFB02\u2021\xb7\u201A\u201E\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uF8FF\xd2\xda\xdb\xd9\u0131\u02C6\u02DC\xaf\u02D8\u02D9\u02DA\xb8\u02DD\u02DB\u02C7",
                            "x-mac-romanian": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\u0102\u0218\u221E\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220F\u03C0\u222B\xaa\xba\u03A9\u0103\u0219\xbf\xa1\xac\u221A\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xf7\u25CA\xff\u0178\u2044\u20AC\u2039\u203A\u021A\u021B\u2021\xb7\u201A\u201E\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uF8FF\xd2\xda\xdb\xd9\u0131\u02C6\u02DC\xaf\u02D8\u02D9\u02DA\xb8\u02DD\u02DB\u02C7",
                            "x-mac-turkish": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221E\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220F\u03C0\u222B\xaa\xba\u03A9\xe6\xf8\xbf\xa1\xac\u221A\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xf7\u25CA\xff\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\xb7\u201A\u201E\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uF8FF\xd2\xda\xdb\xd9\uF8A0\u02C6\u02DC\xaf\u02D8\u02D9\u02DA\xb8\u02DD\u02DB\u02C7"
                        }, ae = (m.MACSTRING = function(e1, t, r, o) {
                            var n = ie[o];
                            if (void 0 !== n) {
                                for(var s = "", i = 0; i < r; i++){
                                    var a = e1.getUint8(t + i);
                                    s += a <= 127 ? String.fromCharCode(a) : n[127 & a];
                                }
                                return s;
                            }
                        }, "function" == typeof WeakMap && new WeakMap);
                        function le(e1) {
                            return -128 <= e1 && e1 <= 127;
                        }
                        w.MACSTRING = function(e1, t) {
                            var r = function(e1) {
                                if (!se) for(var t in se = {}, ie)se[t] = new String(t);
                                var r = se[e1];
                                if (void 0 !== r) {
                                    if (ae) {
                                        var o = ae.get(r);
                                        if (void 0 !== o) return o;
                                    }
                                    var n = ie[e1];
                                    if (void 0 !== n) {
                                        for(var s = {}, i = 0; i < n.length; i++)s[n.charCodeAt(i)] = i + 128;
                                        return ae && ae.set(r, s), s;
                                    }
                                }
                            }(t);
                            if (void 0 !== r) {
                                for(var o = [], n = 0; n < e1.length; n++){
                                    var s = e1.charCodeAt(n);
                                    if (128 <= s && void 0 === (s = r[s])) return;
                                    o[n] = s;
                                }
                                return o;
                            }
                        }, l.MACSTRING = function(e1, t) {
                            e1 = w.MACSTRING(e1, t);
                            return void 0 !== e1 ? e1.length : 0;
                        }, w.VARDELTAS = function(e1) {
                            for(var t = 0, r = []; t < e1.length;)var o = e1[t], t = (0 === o ? function(e1, t, r) {
                                for(var o = 0, n = e1.length; t < n && o < 64 && 0 === e1[t];)++t, ++o;
                                return r.push(128 | o - 1), t;
                            } : -128 <= o && o <= 127 ? function(e1, t, r) {
                                for(var o = 0, n = e1.length, s = t; s < n && o < 64;){
                                    var i = e1[s];
                                    if (!le(i)) break;
                                    if (0 === i && s + 1 < n && 0 === e1[s + 1]) break;
                                    ++s, ++o;
                                }
                                r.push(o - 1);
                                for(var a = t; a < s; ++a)r.push(e1[a] + 256 & 255);
                                return s;
                            } : function(e1, t, r) {
                                for(var o = 0, n = e1.length, s = t; s < n && o < 64;){
                                    var i = e1[s];
                                    if (0 === i) break;
                                    if (le(i) && s + 1 < n && le(e1[s + 1])) break;
                                    ++s, ++o;
                                }
                                r.push(64 | o - 1);
                                for(var a = t; a < s; ++a){
                                    var l = e1[a];
                                    r.push(l + 65536 >> 8 & 255, l + 256 & 255);
                                }
                                return s;
                            })(e1, t, r);
                            return r;
                        }, w.INDEX = function(e1) {
                            for(var t = 1, r = [
                                t
                            ], o = [], n = 0; n < e1.length; n += 1){
                                var s = w.OBJECT(e1[n]);
                                Array.prototype.push.apply(o, s), t += s.length, r.push(t);
                            }
                            if (0 === o.length) return [
                                0,
                                0
                            ];
                            for(var i = [], a = 1 + Math.floor(Math.log(t) / Math.log(2)) / 8 | 0, l = [
                                void 0,
                                w.BYTE,
                                w.USHORT,
                                w.UINT24,
                                w.ULONG
                            ][a], u = 0; u < r.length; u += 1){
                                var c = l(r[u]);
                                Array.prototype.push.apply(i, c);
                            }
                            return Array.prototype.concat(w.Card16(e1.length), w.OffSize(a), i, o);
                        }, l.INDEX = function(e1) {
                            return w.INDEX(e1).length;
                        }, w.DICT = function(e1) {
                            for(var t = [], r = Object.keys(e1), o = r.length, n = 0; n < o; n += 1){
                                var s = parseInt(r[n], 0), i = e1[s];
                                t = (t = t.concat(w.OPERAND(i.value, i.type))).concat(w.OPERATOR(s));
                            }
                            return t;
                        }, l.DICT = function(e1) {
                            return w.DICT(e1).length;
                        }, w.OPERATOR = function(e1) {
                            return e1 < 1200 ? [
                                e1
                            ] : [
                                12,
                                e1 - 1200
                            ];
                        }, w.OPERAND = function(e1, t) {
                            var r = [];
                            if (Array.isArray(t)) for(var o = 0; o < t.length; o += 1)L.argument(e1.length === t.length, "Not enough arguments given for type" + t), r = r.concat(w.OPERAND(e1[o], t[o]));
                            else if ("SID" === t) r = r.concat(w.NUMBER(e1));
                            else if ("offset" === t) r = r.concat(w.NUMBER32(e1));
                            else if ("number" === t) r = r.concat(w.NUMBER(e1));
                            else {
                                if ("real" !== t) throw new Error("Unknown operand type " + t);
                                r = r.concat(w.REAL(e1));
                            }
                            return r;
                        }, w.OP = w.BYTE, l.OP = l.BYTE;
                        var ue = "function" == typeof WeakMap && new WeakMap;
                        function n(e1, t, r) {
                            for(var o = 0; o < t.length; o += 1){
                                var n = t[o];
                                this[n.name] = n.value;
                            }
                            if (this.tableName = e1, this.fields = t, r) for(var s = Object.keys(r), i = 0; i < s.length; i += 1){
                                var a = s[i], l = r[a];
                                void 0 !== this[a] && (this[a] = l);
                            }
                        }
                        function ce(e1, t, r) {
                            void 0 === r && (r = t.length);
                            var o = new Array(t.length + 1);
                            o[0] = {
                                name: e1 + "Count",
                                type: "USHORT",
                                value: r
                            };
                            for(var n = 0; n < t.length; n++)o[n + 1] = {
                                name: e1 + n,
                                type: "USHORT",
                                value: t[n]
                            };
                            return o;
                        }
                        function de(e1, t, r) {
                            var o = t.length, n = new Array(o + 1);
                            n[0] = {
                                name: e1 + "Count",
                                type: "USHORT",
                                value: o
                            };
                            for(var s = 0; s < o; s++)n[s + 1] = {
                                name: e1 + s,
                                type: "TABLE",
                                value: r(t[s], s)
                            };
                            return n;
                        }
                        function fe(e1, t, r) {
                            var o = t.length, n = [];
                            n[0] = {
                                name: e1 + "Count",
                                type: "USHORT",
                                value: o
                            };
                            for(var s = 0; s < o; s++)n = n.concat(r(t[s], s));
                            return n;
                        }
                        function he(e1) {
                            1 === e1.format ? n.call(this, "coverageTable", [
                                {
                                    name: "coverageFormat",
                                    type: "USHORT",
                                    value: 1
                                }
                            ].concat(ce("glyph", e1.glyphs))) : L.assert(!1, "Can't create coverage table format 2 yet.");
                        }
                        function pe(e1) {
                            n.call(this, "scriptListTable", fe("scriptRecord", e1, function(e1, t) {
                                var r = e1.script, o = r.defaultLangSys;
                                return L.assert(!!o, "Unable to write GSUB: script " + e1.tag + " has no default language system."), [
                                    {
                                        name: "scriptTag" + t,
                                        type: "TAG",
                                        value: e1.tag
                                    },
                                    {
                                        name: "script" + t,
                                        type: "TABLE",
                                        value: new n("scriptTable", [
                                            {
                                                name: "defaultLangSys",
                                                type: "TABLE",
                                                value: new n("defaultLangSys", [
                                                    {
                                                        name: "lookupOrder",
                                                        type: "USHORT",
                                                        value: 0
                                                    },
                                                    {
                                                        name: "reqFeatureIndex",
                                                        type: "USHORT",
                                                        value: o.reqFeatureIndex
                                                    }
                                                ].concat(ce("featureIndex", o.featureIndexes)))
                                            }
                                        ].concat(fe("langSys", r.langSysRecords, function(e1, t) {
                                            var r = e1.langSys;
                                            return [
                                                {
                                                    name: "langSysTag" + t,
                                                    type: "TAG",
                                                    value: e1.tag
                                                },
                                                {
                                                    name: "langSys" + t,
                                                    type: "TABLE",
                                                    value: new n("langSys", [
                                                        {
                                                            name: "lookupOrder",
                                                            type: "USHORT",
                                                            value: 0
                                                        },
                                                        {
                                                            name: "reqFeatureIndex",
                                                            type: "USHORT",
                                                            value: r.reqFeatureIndex
                                                        }
                                                    ].concat(ce("featureIndex", r.featureIndexes)))
                                                }
                                            ];
                                        })))
                                    }
                                ];
                            }));
                        }
                        function me(e1) {
                            n.call(this, "featureListTable", fe("featureRecord", e1, function(e1, t) {
                                var r = e1.feature;
                                return [
                                    {
                                        name: "featureTag" + t,
                                        type: "TAG",
                                        value: e1.tag
                                    },
                                    {
                                        name: "feature" + t,
                                        type: "TABLE",
                                        value: new n("featureTable", [
                                            {
                                                name: "featureParams",
                                                type: "USHORT",
                                                value: r.featureParams
                                            }
                                        ].concat(ce("lookupListIndex", r.lookupListIndexes)))
                                    }
                                ];
                            }));
                        }
                        function ye(e1, r) {
                            n.call(this, "lookupListTable", de("lookup", e1, function(e1) {
                                var t = r[e1.lookupType];
                                return L.assert(!!t, "Unable to write GSUB lookup type " + e1.lookupType + " tables."), new n("lookupTable", [
                                    {
                                        name: "lookupType",
                                        type: "USHORT",
                                        value: e1.lookupType
                                    },
                                    {
                                        name: "lookupFlag",
                                        type: "USHORT",
                                        value: e1.lookupFlag
                                    }
                                ].concat(de("subtable", e1.subtables, t)));
                            }));
                        }
                        w.CHARSTRING = function(e1) {
                            if (ue) {
                                var t = ue.get(e1);
                                if (void 0 !== t) return t;
                            }
                            for(var r = [], o = e1.length, n = 0; n < o; n += 1)var s = e1[n], r = r.concat(w[s.type](s.value));
                            return ue && ue.set(e1, r), r;
                        }, l.CHARSTRING = function(e1) {
                            return w.CHARSTRING(e1).length;
                        }, w.OBJECT = function(e1) {
                            var t = w[e1.type];
                            return L.argument(void 0 !== t, "No encoding function for type " + e1.type), t(e1.value);
                        }, l.OBJECT = function(e1) {
                            var t = l[e1.type];
                            return L.argument(void 0 !== t, "No sizeOf function for type " + e1.type), t(e1.value);
                        }, w.TABLE = function(e1) {
                            for(var t = [], r = e1.fields.length, o = [], n = [], s = 0; s < r; s += 1){
                                var i = e1.fields[s], a = w[i.type], l = (L.argument(void 0 !== a, "No encoding function for field type " + i.type + " (" + i.name + ")"), e1[i.name]), a = a(l = void 0 === l ? i.value : l);
                                "TABLE" === i.type ? (n.push(t.length), t = t.concat([
                                    0,
                                    0
                                ]), o.push(a)) : t = t.concat(a);
                            }
                            for(var u = 0; u < o.length; u += 1){
                                var c = n[u], d = t.length;
                                L.argument(d < 65536, "Table " + e1.tableName + " too big."), t[c] = d >> 8, t[c + 1] = 255 & d, t = t.concat(o[u]);
                            }
                            return t;
                        }, l.TABLE = function(e1) {
                            for(var t = 0, r = e1.fields.length, o = 0; o < r; o += 1){
                                var n = e1.fields[o], s = l[n.type], i = (L.argument(void 0 !== s, "No sizeOf function for field type " + n.type + " (" + n.name + ")"), e1[n.name]);
                                t += s(i = void 0 === i ? n.value : i), "TABLE" === n.type && (t += 2);
                            }
                            return t;
                        }, w.RECORD = w.TABLE, l.RECORD = l.TABLE, w.LITERAL = function(e1) {
                            return e1;
                        }, l.LITERAL = function(e1) {
                            return e1.length;
                        }, n.prototype.encode = function() {
                            return w.TABLE(this);
                        }, n.prototype.sizeOf = function() {
                            return l.TABLE(this);
                        };
                        var S = {
                            Table: n,
                            Record: n,
                            Coverage: (he.prototype = Object.create(n.prototype)).constructor = he,
                            ScriptList: (pe.prototype = Object.create(n.prototype)).constructor = pe,
                            FeatureList: (me.prototype = Object.create(n.prototype)).constructor = me,
                            LookupList: (ye.prototype = Object.create(n.prototype)).constructor = ye,
                            ushortList: ce,
                            tableList: de,
                            recordList: fe
                        };
                        function ge(e1, t) {
                            return e1.getUint8(t);
                        }
                        function ve(e1, t) {
                            return e1.getUint16(t, !1);
                        }
                        function be(e1, t) {
                            return e1.getUint32(t, !1);
                        }
                        function je(e1, t) {
                            return e1.getInt16(t, !1) + e1.getUint16(t + 2, !1) / 65535;
                        }
                        var _e = {
                            byte: 1,
                            uShort: 2,
                            short: 2,
                            uLong: 4,
                            fixed: 4,
                            longDateTime: 8,
                            tag: 4
                        };
                        function u(e1, t) {
                            this.data = e1, this.offset = t, this.relativeOffset = 0;
                        }
                        u.prototype.parseByte = function() {
                            var e1 = this.data.getUint8(this.offset + this.relativeOffset);
                            return this.relativeOffset += 1, e1;
                        }, u.prototype.parseChar = function() {
                            var e1 = this.data.getInt8(this.offset + this.relativeOffset);
                            return this.relativeOffset += 1, e1;
                        }, u.prototype.parseCard8 = u.prototype.parseByte, u.prototype.parseCard16 = u.prototype.parseUShort = function() {
                            var e1 = this.data.getUint16(this.offset + this.relativeOffset);
                            return this.relativeOffset += 2, e1;
                        }, u.prototype.parseSID = u.prototype.parseUShort, u.prototype.parseOffset16 = u.prototype.parseUShort, u.prototype.parseShort = function() {
                            var e1 = this.data.getInt16(this.offset + this.relativeOffset);
                            return this.relativeOffset += 2, e1;
                        }, u.prototype.parseF2Dot14 = function() {
                            var e1 = this.data.getInt16(this.offset + this.relativeOffset) / 16384;
                            return this.relativeOffset += 2, e1;
                        }, u.prototype.parseOffset32 = u.prototype.parseULong = function() {
                            var e1 = be(this.data, this.offset + this.relativeOffset);
                            return this.relativeOffset += 4, e1;
                        }, u.prototype.parseFixed = function() {
                            var e1 = je(this.data, this.offset + this.relativeOffset);
                            return this.relativeOffset += 4, e1;
                        }, u.prototype.parseString = function(e1) {
                            var t = this.data, r = this.offset + this.relativeOffset, o = "";
                            this.relativeOffset += e1;
                            for(var n = 0; n < e1; n++)o += String.fromCharCode(t.getUint8(r + n));
                            return o;
                        }, u.prototype.parseTag = function() {
                            return this.parseString(4);
                        }, u.prototype.parseLongDateTime = function() {
                            var e1 = be(this.data, this.offset + this.relativeOffset + 4);
                            return e1 -= 2082844800, this.relativeOffset += 8, e1;
                        }, u.prototype.parseVersion = function(e1) {
                            var t = ve(this.data, this.offset + this.relativeOffset), r = ve(this.data, this.offset + this.relativeOffset + 2);
                            return this.relativeOffset += 4, t + r / (e1 = void 0 === e1 ? 4096 : e1) / 10;
                        }, u.prototype.skip = function(e1, t) {
                            this.relativeOffset += _e[e1] * (t = void 0 === t ? 1 : t);
                        }, u.prototype.parseULongList = function(e1) {
                            void 0 === e1 && (e1 = this.parseULong());
                            for(var t = new Array(e1), r = this.data, o = this.offset + this.relativeOffset, n = 0; n < e1; n++)t[n] = r.getUint32(o), o += 4;
                            return this.relativeOffset += 4 * e1, t;
                        }, u.prototype.parseOffset16List = u.prototype.parseUShortList = function(e1) {
                            void 0 === e1 && (e1 = this.parseUShort());
                            for(var t = new Array(e1), r = this.data, o = this.offset + this.relativeOffset, n = 0; n < e1; n++)t[n] = r.getUint16(o), o += 2;
                            return this.relativeOffset += 2 * e1, t;
                        }, u.prototype.parseShortList = function(e1) {
                            for(var t = new Array(e1), r = this.data, o = this.offset + this.relativeOffset, n = 0; n < e1; n++)t[n] = r.getInt16(o), o += 2;
                            return this.relativeOffset += 2 * e1, t;
                        }, u.prototype.parseByteList = function(e1) {
                            for(var t = new Array(e1), r = this.data, o = this.offset + this.relativeOffset, n = 0; n < e1; n++)t[n] = r.getUint8(o++);
                            return this.relativeOffset += e1, t;
                        }, u.prototype.parseList = function(e1, t) {
                            t || (t = e1, e1 = this.parseUShort());
                            for(var r = new Array(e1), o = 0; o < e1; o++)r[o] = t.call(this);
                            return r;
                        }, u.prototype.parseList32 = function(e1, t) {
                            t || (t = e1, e1 = this.parseULong());
                            for(var r = new Array(e1), o = 0; o < e1; o++)r[o] = t.call(this);
                            return r;
                        }, u.prototype.parseRecordList = function(e1, t) {
                            t || (t = e1, e1 = this.parseUShort());
                            for(var r = new Array(e1), o = Object.keys(t), n = 0; n < e1; n++){
                                for(var s = {}, i = 0; i < o.length; i++){
                                    var a = o[i], l = t[a];
                                    s[a] = l.call(this);
                                }
                                r[n] = s;
                            }
                            return r;
                        }, u.prototype.parseRecordList32 = function(e1, t) {
                            t || (t = e1, e1 = this.parseULong());
                            for(var r = new Array(e1), o = Object.keys(t), n = 0; n < e1; n++){
                                for(var s = {}, i = 0; i < o.length; i++){
                                    var a = o[i], l = t[a];
                                    s[a] = l.call(this);
                                }
                                r[n] = s;
                            }
                            return r;
                        }, u.prototype.parseStruct = function(e1) {
                            if ("function" == typeof e1) return e1.call(this);
                            for(var t = Object.keys(e1), r = {}, o = 0; o < t.length; o++){
                                var n = t[o], s = e1[n];
                                r[n] = s.call(this);
                            }
                            return r;
                        }, u.prototype.parseValueRecord = function(e1) {
                            var t;
                            if (0 !== (e1 = void 0 === e1 ? this.parseUShort() : e1)) return t = {}, 1 & e1 && (t.xPlacement = this.parseShort()), 2 & e1 && (t.yPlacement = this.parseShort()), 4 & e1 && (t.xAdvance = this.parseShort()), 8 & e1 && (t.yAdvance = this.parseShort()), 16 & e1 && (t.xPlaDevice = void 0, this.parseShort()), 32 & e1 && (t.yPlaDevice = void 0, this.parseShort()), 64 & e1 && (t.xAdvDevice = void 0, this.parseShort()), 128 & e1 && (t.yAdvDevice = void 0, this.parseShort()), t;
                        }, u.prototype.parseValueRecordList = function() {
                            for(var e1 = this.parseUShort(), t = this.parseUShort(), r = new Array(t), o = 0; o < t; o++)r[o] = this.parseValueRecord(e1);
                            return r;
                        }, u.prototype.parsePointer = function(e1) {
                            var t = this.parseOffset16();
                            if (0 < t) return new u(this.data, this.offset + t).parseStruct(e1);
                        }, u.prototype.parsePointer32 = function(e1) {
                            var t = this.parseOffset32();
                            if (0 < t) return new u(this.data, this.offset + t).parseStruct(e1);
                        }, u.prototype.parseListOfLists = function(e1) {
                            for(var t = this.parseOffset16List(), r = t.length, o = this.relativeOffset, n = new Array(r), s = 0; s < r; s++){
                                var i = t[s];
                                if (0 === i) n[s] = void 0;
                                else if (this.relativeOffset = i, e1) {
                                    for(var a = this.parseOffset16List(), l = new Array(a.length), u = 0; u < a.length; u++)this.relativeOffset = i + a[u], l[u] = e1.call(this);
                                    n[s] = l;
                                } else n[s] = this.parseUShortList();
                            }
                            return this.relativeOffset = o, n;
                        }, u.prototype.parseCoverage = function() {
                            var e1 = this.offset + this.relativeOffset, t = this.parseUShort(), r = this.parseUShort();
                            if (1 === t) return {
                                format: 1,
                                glyphs: this.parseUShortList(r)
                            };
                            if (2 !== t) throw new Error("0x" + e1.toString(16) + ": Coverage format must be 1 or 2.");
                            for(var o = new Array(r), n = 0; n < r; n++)o[n] = {
                                start: this.parseUShort(),
                                end: this.parseUShort(),
                                index: this.parseUShort()
                            };
                            return {
                                format: 2,
                                ranges: o
                            };
                        }, u.prototype.parseClassDef = function() {
                            var e1 = this.offset + this.relativeOffset, t = this.parseUShort();
                            if (1 === t) return {
                                format: 1,
                                startGlyph: this.parseUShort(),
                                classes: this.parseUShortList()
                            };
                            if (2 === t) return {
                                format: 2,
                                ranges: this.parseRecordList({
                                    start: u.uShort,
                                    end: u.uShort,
                                    classId: u.uShort
                                })
                            };
                            throw new Error("0x" + e1.toString(16) + ": ClassDef format must be 1 or 2.");
                        }, u.list = function(e1, t) {
                            return function() {
                                return this.parseList(e1, t);
                            };
                        }, u.list32 = function(e1, t) {
                            return function() {
                                return this.parseList32(e1, t);
                            };
                        }, u.recordList = function(e1, t) {
                            return function() {
                                return this.parseRecordList(e1, t);
                            };
                        }, u.recordList32 = function(e1, t) {
                            return function() {
                                return this.parseRecordList32(e1, t);
                            };
                        }, u.pointer = function(e1) {
                            return function() {
                                return this.parsePointer(e1);
                            };
                        }, u.pointer32 = function(e1) {
                            return function() {
                                return this.parsePointer32(e1);
                            };
                        }, u.tag = u.prototype.parseTag, u.byte = u.prototype.parseByte, u.uShort = u.offset16 = u.prototype.parseUShort, u.uShortList = u.prototype.parseUShortList, u.uLong = u.offset32 = u.prototype.parseULong, u.uLongList = u.prototype.parseULongList, u.struct = u.prototype.parseStruct, u.coverage = u.prototype.parseCoverage, u.classDef = u.prototype.parseClassDef;
                        var xe = {
                            reserved: u.uShort,
                            reqFeatureIndex: u.uShort,
                            featureIndexes: u.uShortList
                        }, R = (u.prototype.parseScriptList = function() {
                            return this.parsePointer(u.recordList({
                                tag: u.tag,
                                script: u.pointer({
                                    defaultLangSys: u.pointer(xe),
                                    langSysRecords: u.recordList({
                                        tag: u.tag,
                                        langSys: u.pointer(xe)
                                    })
                                })
                            })) || [];
                        }, u.prototype.parseFeatureList = function() {
                            return this.parsePointer(u.recordList({
                                tag: u.tag,
                                feature: u.pointer({
                                    featureParams: u.offset16,
                                    lookupListIndexes: u.uShortList
                                })
                            })) || [];
                        }, u.prototype.parseLookupList = function(o) {
                            return this.parsePointer(u.list(u.pointer(function() {
                                var e1 = this.parseUShort(), t = (L.argument(1 <= e1 && e1 <= 9, "GPOS/GSUB lookup type " + e1 + " unknown."), this.parseUShort()), r = 16 & t;
                                return {
                                    lookupType: e1,
                                    lookupFlag: t,
                                    subtables: this.parseList(u.pointer(o[e1])),
                                    markFilteringSet: r ? this.parseUShort() : void 0
                                };
                            }))) || [];
                        }, u.prototype.parseFeatureVariationsList = function() {
                            return this.parsePointer32(function() {
                                var e1 = this.parseUShort(), t = this.parseUShort();
                                return L.argument(1 === e1 && t < 1, "GPOS/GSUB feature variations table unknown."), this.parseRecordList32({
                                    conditionSetOffset: u.offset32,
                                    featureTableSubstitutionOffset: u.offset32
                                });
                            }) || [];
                        }, {
                            getByte: ge,
                            getCard8: ge,
                            getUShort: ve,
                            getCard16: ve,
                            getShort: function(e1, t) {
                                return e1.getInt16(t, !1);
                            },
                            getULong: be,
                            getFixed: je,
                            getTag: function(e1, t) {
                                for(var r = "", o = t; o < t + 4; o += 1)r += String.fromCharCode(e1.getInt8(o));
                                return r;
                            },
                            getOffset: function(e1, t, r) {
                                for(var o = 0, n = 0; n < r; n += 1)o = (o <<= 8) + e1.getUint8(t + n);
                                return o;
                            },
                            getBytes: function(e1, t, r) {
                                for(var o = [], n = t; n < r; n += 1)o.push(e1.getUint8(n));
                                return o;
                            },
                            bytesToString: function(e1) {
                                for(var t = "", r = 0; r < e1.length; r += 1)t += String.fromCharCode(e1[r]);
                                return t;
                            },
                            Parser: u
                        });
                        var we = {
                            parse: function(e1, t) {
                                for(var r = {}, o = (r.version = R.getUShort(e1, t), L.argument(0 === r.version, "cmap table version should be 0."), r.numTables = R.getUShort(e1, t + 2), -1), n = r.numTables - 1; 0 <= n; --n){
                                    var s = R.getUShort(e1, t + 4 + 8 * n), i = R.getUShort(e1, t + 4 + 8 * n + 2);
                                    if (3 === s && (0 === i || 1 === i || 10 === i) || 0 === s && (0 === i || 1 === i || 2 === i || 3 === i || 4 === i)) {
                                        o = R.getULong(e1, t + 4 + 8 * n + 4);
                                        break;
                                    }
                                }
                                if (-1 === o) throw new Error("No valid cmap sub-tables found.");
                                var a = new R.Parser(e1, t + o);
                                if (r.format = a.parseUShort(), 12 === r.format) {
                                    var l, u = r, c = a;
                                    c.parseUShort(), u.length = c.parseULong(), u.language = c.parseULong(), u.groupCount = l = c.parseULong(), u.glyphIndexMap = {};
                                    for(var d = 0; d < l; d += 1)for(var f = c.parseULong(), h = c.parseULong(), p = c.parseULong(), m = f; m <= h; m += 1)u.glyphIndexMap[m] = p, p++;
                                } else {
                                    if (4 !== r.format) throw new Error("Only format 4 and 12 cmap tables are supported (found format " + r.format + ").");
                                    var y = r, g = e1, v = t, b = o;
                                    y.length = a.parseUShort(), y.language = a.parseUShort(), y.segCount = j = a.parseUShort() >> 1, a.skip("uShort", 3), y.glyphIndexMap = {};
                                    for(var j, _ = new R.Parser(g, v + b + 14), x = new R.Parser(g, v + b + 16 + 2 * j), w = new R.Parser(g, v + b + 16 + 4 * j), S = new R.Parser(g, v + b + 16 + 6 * j), E = v + b + 16 + 8 * j, M = 0; M < j - 1; M += 1)for(var T = void 0, k = _.parseUShort(), O = x.parseUShort(), C = w.parseShort(), A = S.parseUShort(), P = O; P <= k; P += 1)0 !== A ? (E = (E = S.offset + S.relativeOffset - 2) + A + 2 * (P - O), 0 !== (T = R.getUShort(g, E)) && (T = T + C & 65535)) : T = P + C & 65535, y.glyphIndexMap[P] = T;
                                }
                                return r;
                            },
                            make: function(e1) {
                                for(var t = !0, r = e1.length - 1; 0 < r; --r)if (65535 < e1.get(r).unicode) {
                                    console.log("Adding CMAP format 12 (needed!)"), t = !1;
                                    break;
                                }
                                var o, n, s = [
                                    {
                                        name: "version",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "numTables",
                                        type: "USHORT",
                                        value: t ? 1 : 2
                                    },
                                    {
                                        name: "platformID",
                                        type: "USHORT",
                                        value: 3
                                    },
                                    {
                                        name: "encodingID",
                                        type: "USHORT",
                                        value: 1
                                    },
                                    {
                                        name: "offset",
                                        type: "ULONG",
                                        value: t ? 12 : 20
                                    }
                                ], i = (s = (s = t ? s : s.concat([
                                    {
                                        name: "cmap12PlatformID",
                                        type: "USHORT",
                                        value: 3
                                    },
                                    {
                                        name: "cmap12EncodingID",
                                        type: "USHORT",
                                        value: 10
                                    },
                                    {
                                        name: "cmap12Offset",
                                        type: "ULONG",
                                        value: 0
                                    }
                                ])).concat([
                                    {
                                        name: "format",
                                        type: "USHORT",
                                        value: 4
                                    },
                                    {
                                        name: "cmap4Length",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "language",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "segCountX2",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "searchRange",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "entrySelector",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "rangeShift",
                                        type: "USHORT",
                                        value: 0
                                    }
                                ]), new S.Table("cmap", s));
                                for(i.segments = [], r = 0; r < e1.length; r += 1){
                                    for(var a = e1.get(r), l = 0; l < a.unicodes.length; l += 1)o = a.unicodes[l], n = r, i.segments.push({
                                        end: o,
                                        start: o,
                                        delta: -(o - n),
                                        offset: 0,
                                        glyphIndex: n
                                    });
                                    i.segments = i.segments.sort(function(e1, t) {
                                        return e1.start - t.start;
                                    });
                                }
                                i.segments.push({
                                    end: 65535,
                                    start: 65535,
                                    delta: 1,
                                    offset: 0
                                });
                                var u = i.segments.length, c = 0, d = [], f = [], h = [], p = [], m = [], y = [];
                                for(r = 0; r < u; r += 1){
                                    var g = i.segments[r];
                                    g.end <= 65535 && g.start <= 65535 ? (d = d.concat({
                                        name: "end_" + r,
                                        type: "USHORT",
                                        value: g.end
                                    }), f = f.concat({
                                        name: "start_" + r,
                                        type: "USHORT",
                                        value: g.start
                                    }), h = h.concat({
                                        name: "idDelta_" + r,
                                        type: "SHORT",
                                        value: g.delta
                                    }), p = p.concat({
                                        name: "idRangeOffset_" + r,
                                        type: "USHORT",
                                        value: g.offset
                                    }), void 0 !== g.glyphId && (m = m.concat({
                                        name: "glyph_" + r,
                                        type: "USHORT",
                                        value: g.glyphId
                                    }))) : c += 1, t || void 0 === g.glyphIndex || (y = (y = (y = y.concat({
                                        name: "cmap12Start_" + r,
                                        type: "ULONG",
                                        value: g.start
                                    })).concat({
                                        name: "cmap12End_" + r,
                                        type: "ULONG",
                                        value: g.end
                                    })).concat({
                                        name: "cmap12Glyph_" + r,
                                        type: "ULONG",
                                        value: g.glyphIndex
                                    }));
                                }
                                return i.segCountX2 = 2 * (u - c), i.searchRange = 2 * Math.pow(2, Math.floor(Math.log(u - c) / Math.log(2))), i.entrySelector = Math.log(i.searchRange / 2) / Math.log(2), i.rangeShift = i.segCountX2 - i.searchRange, i.fields = i.fields.concat(d), i.fields.push({
                                    name: "reservedPad",
                                    type: "USHORT",
                                    value: 0
                                }), i.fields = i.fields.concat(f), i.fields = i.fields.concat(h), i.fields = i.fields.concat(p), i.fields = i.fields.concat(m), i.cmap4Length = 14 + 2 * d.length + 2 + 2 * f.length + 2 * h.length + 2 * p.length + 2 * m.length, t || (s = 16 + 4 * y.length, i.cmap12Offset = 20 + i.cmap4Length, i.fields = i.fields.concat([
                                    {
                                        name: "cmap12Format",
                                        type: "USHORT",
                                        value: 12
                                    },
                                    {
                                        name: "cmap12Reserved",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "cmap12Length",
                                        type: "ULONG",
                                        value: s
                                    },
                                    {
                                        name: "cmap12Language",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "cmap12nGroups",
                                        type: "ULONG",
                                        value: y.length / 3
                                    }
                                ]), i.fields = i.fields.concat(y)), i;
                            }
                        }, Se = [
                            ".notdef",
                            "space",
                            "exclam",
                            "quotedbl",
                            "numbersign",
                            "dollar",
                            "percent",
                            "ampersand",
                            "quoteright",
                            "parenleft",
                            "parenright",
                            "asterisk",
                            "plus",
                            "comma",
                            "hyphen",
                            "period",
                            "slash",
                            "zero",
                            "one",
                            "two",
                            "three",
                            "four",
                            "five",
                            "six",
                            "seven",
                            "eight",
                            "nine",
                            "colon",
                            "semicolon",
                            "less",
                            "equal",
                            "greater",
                            "question",
                            "at",
                            "A",
                            "B",
                            "C",
                            "D",
                            "E",
                            "F",
                            "G",
                            "H",
                            "I",
                            "J",
                            "K",
                            "L",
                            "M",
                            "N",
                            "O",
                            "P",
                            "Q",
                            "R",
                            "S",
                            "T",
                            "U",
                            "V",
                            "W",
                            "X",
                            "Y",
                            "Z",
                            "bracketleft",
                            "backslash",
                            "bracketright",
                            "asciicircum",
                            "underscore",
                            "quoteleft",
                            "a",
                            "b",
                            "c",
                            "d",
                            "e",
                            "f",
                            "g",
                            "h",
                            "i",
                            "j",
                            "k",
                            "l",
                            "m",
                            "n",
                            "o",
                            "p",
                            "q",
                            "r",
                            "s",
                            "t",
                            "u",
                            "v",
                            "w",
                            "x",
                            "y",
                            "z",
                            "braceleft",
                            "bar",
                            "braceright",
                            "asciitilde",
                            "exclamdown",
                            "cent",
                            "sterling",
                            "fraction",
                            "yen",
                            "florin",
                            "section",
                            "currency",
                            "quotesingle",
                            "quotedblleft",
                            "guillemotleft",
                            "guilsinglleft",
                            "guilsinglright",
                            "fi",
                            "fl",
                            "endash",
                            "dagger",
                            "daggerdbl",
                            "periodcentered",
                            "paragraph",
                            "bullet",
                            "quotesinglbase",
                            "quotedblbase",
                            "quotedblright",
                            "guillemotright",
                            "ellipsis",
                            "perthousand",
                            "questiondown",
                            "grave",
                            "acute",
                            "circumflex",
                            "tilde",
                            "macron",
                            "breve",
                            "dotaccent",
                            "dieresis",
                            "ring",
                            "cedilla",
                            "hungarumlaut",
                            "ogonek",
                            "caron",
                            "emdash",
                            "AE",
                            "ordfeminine",
                            "Lslash",
                            "Oslash",
                            "OE",
                            "ordmasculine",
                            "ae",
                            "dotlessi",
                            "lslash",
                            "oslash",
                            "oe",
                            "germandbls",
                            "onesuperior",
                            "logicalnot",
                            "mu",
                            "trademark",
                            "Eth",
                            "onehalf",
                            "plusminus",
                            "Thorn",
                            "onequarter",
                            "divide",
                            "brokenbar",
                            "degree",
                            "thorn",
                            "threequarters",
                            "twosuperior",
                            "registered",
                            "minus",
                            "eth",
                            "multiply",
                            "threesuperior",
                            "copyright",
                            "Aacute",
                            "Acircumflex",
                            "Adieresis",
                            "Agrave",
                            "Aring",
                            "Atilde",
                            "Ccedilla",
                            "Eacute",
                            "Ecircumflex",
                            "Edieresis",
                            "Egrave",
                            "Iacute",
                            "Icircumflex",
                            "Idieresis",
                            "Igrave",
                            "Ntilde",
                            "Oacute",
                            "Ocircumflex",
                            "Odieresis",
                            "Ograve",
                            "Otilde",
                            "Scaron",
                            "Uacute",
                            "Ucircumflex",
                            "Udieresis",
                            "Ugrave",
                            "Yacute",
                            "Ydieresis",
                            "Zcaron",
                            "aacute",
                            "acircumflex",
                            "adieresis",
                            "agrave",
                            "aring",
                            "atilde",
                            "ccedilla",
                            "eacute",
                            "ecircumflex",
                            "edieresis",
                            "egrave",
                            "iacute",
                            "icircumflex",
                            "idieresis",
                            "igrave",
                            "ntilde",
                            "oacute",
                            "ocircumflex",
                            "odieresis",
                            "ograve",
                            "otilde",
                            "scaron",
                            "uacute",
                            "ucircumflex",
                            "udieresis",
                            "ugrave",
                            "yacute",
                            "ydieresis",
                            "zcaron",
                            "exclamsmall",
                            "Hungarumlautsmall",
                            "dollaroldstyle",
                            "dollarsuperior",
                            "ampersandsmall",
                            "Acutesmall",
                            "parenleftsuperior",
                            "parenrightsuperior",
                            "266 ff",
                            "onedotenleader",
                            "zerooldstyle",
                            "oneoldstyle",
                            "twooldstyle",
                            "threeoldstyle",
                            "fouroldstyle",
                            "fiveoldstyle",
                            "sixoldstyle",
                            "sevenoldstyle",
                            "eightoldstyle",
                            "nineoldstyle",
                            "commasuperior",
                            "threequartersemdash",
                            "periodsuperior",
                            "questionsmall",
                            "asuperior",
                            "bsuperior",
                            "centsuperior",
                            "dsuperior",
                            "esuperior",
                            "isuperior",
                            "lsuperior",
                            "msuperior",
                            "nsuperior",
                            "osuperior",
                            "rsuperior",
                            "ssuperior",
                            "tsuperior",
                            "ff",
                            "ffi",
                            "ffl",
                            "parenleftinferior",
                            "parenrightinferior",
                            "Circumflexsmall",
                            "hyphensuperior",
                            "Gravesmall",
                            "Asmall",
                            "Bsmall",
                            "Csmall",
                            "Dsmall",
                            "Esmall",
                            "Fsmall",
                            "Gsmall",
                            "Hsmall",
                            "Ismall",
                            "Jsmall",
                            "Ksmall",
                            "Lsmall",
                            "Msmall",
                            "Nsmall",
                            "Osmall",
                            "Psmall",
                            "Qsmall",
                            "Rsmall",
                            "Ssmall",
                            "Tsmall",
                            "Usmall",
                            "Vsmall",
                            "Wsmall",
                            "Xsmall",
                            "Ysmall",
                            "Zsmall",
                            "colonmonetary",
                            "onefitted",
                            "rupiah",
                            "Tildesmall",
                            "exclamdownsmall",
                            "centoldstyle",
                            "Lslashsmall",
                            "Scaronsmall",
                            "Zcaronsmall",
                            "Dieresissmall",
                            "Brevesmall",
                            "Caronsmall",
                            "Dotaccentsmall",
                            "Macronsmall",
                            "figuredash",
                            "hypheninferior",
                            "Ogoneksmall",
                            "Ringsmall",
                            "Cedillasmall",
                            "questiondownsmall",
                            "oneeighth",
                            "threeeighths",
                            "fiveeighths",
                            "seveneighths",
                            "onethird",
                            "twothirds",
                            "zerosuperior",
                            "foursuperior",
                            "fivesuperior",
                            "sixsuperior",
                            "sevensuperior",
                            "eightsuperior",
                            "ninesuperior",
                            "zeroinferior",
                            "oneinferior",
                            "twoinferior",
                            "threeinferior",
                            "fourinferior",
                            "fiveinferior",
                            "sixinferior",
                            "seveninferior",
                            "eightinferior",
                            "nineinferior",
                            "centinferior",
                            "dollarinferior",
                            "periodinferior",
                            "commainferior",
                            "Agravesmall",
                            "Aacutesmall",
                            "Acircumflexsmall",
                            "Atildesmall",
                            "Adieresissmall",
                            "Aringsmall",
                            "AEsmall",
                            "Ccedillasmall",
                            "Egravesmall",
                            "Eacutesmall",
                            "Ecircumflexsmall",
                            "Edieresissmall",
                            "Igravesmall",
                            "Iacutesmall",
                            "Icircumflexsmall",
                            "Idieresissmall",
                            "Ethsmall",
                            "Ntildesmall",
                            "Ogravesmall",
                            "Oacutesmall",
                            "Ocircumflexsmall",
                            "Otildesmall",
                            "Odieresissmall",
                            "OEsmall",
                            "Oslashsmall",
                            "Ugravesmall",
                            "Uacutesmall",
                            "Ucircumflexsmall",
                            "Udieresissmall",
                            "Yacutesmall",
                            "Thornsmall",
                            "Ydieresissmall",
                            "001.000",
                            "001.001",
                            "001.002",
                            "001.003",
                            "Black",
                            "Bold",
                            "Book",
                            "Light",
                            "Medium",
                            "Regular",
                            "Roman",
                            "Semibold"
                        ], Ee = [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "space",
                            "exclam",
                            "quotedbl",
                            "numbersign",
                            "dollar",
                            "percent",
                            "ampersand",
                            "quoteright",
                            "parenleft",
                            "parenright",
                            "asterisk",
                            "plus",
                            "comma",
                            "hyphen",
                            "period",
                            "slash",
                            "zero",
                            "one",
                            "two",
                            "three",
                            "four",
                            "five",
                            "six",
                            "seven",
                            "eight",
                            "nine",
                            "colon",
                            "semicolon",
                            "less",
                            "equal",
                            "greater",
                            "question",
                            "at",
                            "A",
                            "B",
                            "C",
                            "D",
                            "E",
                            "F",
                            "G",
                            "H",
                            "I",
                            "J",
                            "K",
                            "L",
                            "M",
                            "N",
                            "O",
                            "P",
                            "Q",
                            "R",
                            "S",
                            "T",
                            "U",
                            "V",
                            "W",
                            "X",
                            "Y",
                            "Z",
                            "bracketleft",
                            "backslash",
                            "bracketright",
                            "asciicircum",
                            "underscore",
                            "quoteleft",
                            "a",
                            "b",
                            "c",
                            "d",
                            "e",
                            "f",
                            "g",
                            "h",
                            "i",
                            "j",
                            "k",
                            "l",
                            "m",
                            "n",
                            "o",
                            "p",
                            "q",
                            "r",
                            "s",
                            "t",
                            "u",
                            "v",
                            "w",
                            "x",
                            "y",
                            "z",
                            "braceleft",
                            "bar",
                            "braceright",
                            "asciitilde",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "exclamdown",
                            "cent",
                            "sterling",
                            "fraction",
                            "yen",
                            "florin",
                            "section",
                            "currency",
                            "quotesingle",
                            "quotedblleft",
                            "guillemotleft",
                            "guilsinglleft",
                            "guilsinglright",
                            "fi",
                            "fl",
                            "",
                            "endash",
                            "dagger",
                            "daggerdbl",
                            "periodcentered",
                            "",
                            "paragraph",
                            "bullet",
                            "quotesinglbase",
                            "quotedblbase",
                            "quotedblright",
                            "guillemotright",
                            "ellipsis",
                            "perthousand",
                            "",
                            "questiondown",
                            "",
                            "grave",
                            "acute",
                            "circumflex",
                            "tilde",
                            "macron",
                            "breve",
                            "dotaccent",
                            "dieresis",
                            "",
                            "ring",
                            "cedilla",
                            "",
                            "hungarumlaut",
                            "ogonek",
                            "caron",
                            "emdash",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "AE",
                            "",
                            "ordfeminine",
                            "",
                            "",
                            "",
                            "",
                            "Lslash",
                            "Oslash",
                            "OE",
                            "ordmasculine",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "ae",
                            "",
                            "",
                            "",
                            "dotlessi",
                            "",
                            "",
                            "lslash",
                            "oslash",
                            "oe",
                            "germandbls"
                        ], Me = [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "space",
                            "exclamsmall",
                            "Hungarumlautsmall",
                            "",
                            "dollaroldstyle",
                            "dollarsuperior",
                            "ampersandsmall",
                            "Acutesmall",
                            "parenleftsuperior",
                            "parenrightsuperior",
                            "twodotenleader",
                            "onedotenleader",
                            "comma",
                            "hyphen",
                            "period",
                            "fraction",
                            "zerooldstyle",
                            "oneoldstyle",
                            "twooldstyle",
                            "threeoldstyle",
                            "fouroldstyle",
                            "fiveoldstyle",
                            "sixoldstyle",
                            "sevenoldstyle",
                            "eightoldstyle",
                            "nineoldstyle",
                            "colon",
                            "semicolon",
                            "commasuperior",
                            "threequartersemdash",
                            "periodsuperior",
                            "questionsmall",
                            "",
                            "asuperior",
                            "bsuperior",
                            "centsuperior",
                            "dsuperior",
                            "esuperior",
                            "",
                            "",
                            "isuperior",
                            "",
                            "",
                            "lsuperior",
                            "msuperior",
                            "nsuperior",
                            "osuperior",
                            "",
                            "",
                            "rsuperior",
                            "ssuperior",
                            "tsuperior",
                            "",
                            "ff",
                            "fi",
                            "fl",
                            "ffi",
                            "ffl",
                            "parenleftinferior",
                            "",
                            "parenrightinferior",
                            "Circumflexsmall",
                            "hyphensuperior",
                            "Gravesmall",
                            "Asmall",
                            "Bsmall",
                            "Csmall",
                            "Dsmall",
                            "Esmall",
                            "Fsmall",
                            "Gsmall",
                            "Hsmall",
                            "Ismall",
                            "Jsmall",
                            "Ksmall",
                            "Lsmall",
                            "Msmall",
                            "Nsmall",
                            "Osmall",
                            "Psmall",
                            "Qsmall",
                            "Rsmall",
                            "Ssmall",
                            "Tsmall",
                            "Usmall",
                            "Vsmall",
                            "Wsmall",
                            "Xsmall",
                            "Ysmall",
                            "Zsmall",
                            "colonmonetary",
                            "onefitted",
                            "rupiah",
                            "Tildesmall",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "exclamdownsmall",
                            "centoldstyle",
                            "Lslashsmall",
                            "",
                            "",
                            "Scaronsmall",
                            "Zcaronsmall",
                            "Dieresissmall",
                            "Brevesmall",
                            "Caronsmall",
                            "",
                            "Dotaccentsmall",
                            "",
                            "",
                            "Macronsmall",
                            "",
                            "",
                            "figuredash",
                            "hypheninferior",
                            "",
                            "",
                            "Ogoneksmall",
                            "Ringsmall",
                            "Cedillasmall",
                            "",
                            "",
                            "",
                            "onequarter",
                            "onehalf",
                            "threequarters",
                            "questiondownsmall",
                            "oneeighth",
                            "threeeighths",
                            "fiveeighths",
                            "seveneighths",
                            "onethird",
                            "twothirds",
                            "",
                            "",
                            "zerosuperior",
                            "onesuperior",
                            "twosuperior",
                            "threesuperior",
                            "foursuperior",
                            "fivesuperior",
                            "sixsuperior",
                            "sevensuperior",
                            "eightsuperior",
                            "ninesuperior",
                            "zeroinferior",
                            "oneinferior",
                            "twoinferior",
                            "threeinferior",
                            "fourinferior",
                            "fiveinferior",
                            "sixinferior",
                            "seveninferior",
                            "eightinferior",
                            "nineinferior",
                            "centinferior",
                            "dollarinferior",
                            "periodinferior",
                            "commainferior",
                            "Agravesmall",
                            "Aacutesmall",
                            "Acircumflexsmall",
                            "Atildesmall",
                            "Adieresissmall",
                            "Aringsmall",
                            "AEsmall",
                            "Ccedillasmall",
                            "Egravesmall",
                            "Eacutesmall",
                            "Ecircumflexsmall",
                            "Edieresissmall",
                            "Igravesmall",
                            "Iacutesmall",
                            "Icircumflexsmall",
                            "Idieresissmall",
                            "Ethsmall",
                            "Ntildesmall",
                            "Ogravesmall",
                            "Oacutesmall",
                            "Ocircumflexsmall",
                            "Otildesmall",
                            "Odieresissmall",
                            "OEsmall",
                            "Oslashsmall",
                            "Ugravesmall",
                            "Uacutesmall",
                            "Ucircumflexsmall",
                            "Udieresissmall",
                            "Yacutesmall",
                            "Thornsmall",
                            "Ydieresissmall"
                        ], c = [
                            ".notdef",
                            ".null",
                            "nonmarkingreturn",
                            "space",
                            "exclam",
                            "quotedbl",
                            "numbersign",
                            "dollar",
                            "percent",
                            "ampersand",
                            "quotesingle",
                            "parenleft",
                            "parenright",
                            "asterisk",
                            "plus",
                            "comma",
                            "hyphen",
                            "period",
                            "slash",
                            "zero",
                            "one",
                            "two",
                            "three",
                            "four",
                            "five",
                            "six",
                            "seven",
                            "eight",
                            "nine",
                            "colon",
                            "semicolon",
                            "less",
                            "equal",
                            "greater",
                            "question",
                            "at",
                            "A",
                            "B",
                            "C",
                            "D",
                            "E",
                            "F",
                            "G",
                            "H",
                            "I",
                            "J",
                            "K",
                            "L",
                            "M",
                            "N",
                            "O",
                            "P",
                            "Q",
                            "R",
                            "S",
                            "T",
                            "U",
                            "V",
                            "W",
                            "X",
                            "Y",
                            "Z",
                            "bracketleft",
                            "backslash",
                            "bracketright",
                            "asciicircum",
                            "underscore",
                            "grave",
                            "a",
                            "b",
                            "c",
                            "d",
                            "e",
                            "f",
                            "g",
                            "h",
                            "i",
                            "j",
                            "k",
                            "l",
                            "m",
                            "n",
                            "o",
                            "p",
                            "q",
                            "r",
                            "s",
                            "t",
                            "u",
                            "v",
                            "w",
                            "x",
                            "y",
                            "z",
                            "braceleft",
                            "bar",
                            "braceright",
                            "asciitilde",
                            "Adieresis",
                            "Aring",
                            "Ccedilla",
                            "Eacute",
                            "Ntilde",
                            "Odieresis",
                            "Udieresis",
                            "aacute",
                            "agrave",
                            "acircumflex",
                            "adieresis",
                            "atilde",
                            "aring",
                            "ccedilla",
                            "eacute",
                            "egrave",
                            "ecircumflex",
                            "edieresis",
                            "iacute",
                            "igrave",
                            "icircumflex",
                            "idieresis",
                            "ntilde",
                            "oacute",
                            "ograve",
                            "ocircumflex",
                            "odieresis",
                            "otilde",
                            "uacute",
                            "ugrave",
                            "ucircumflex",
                            "udieresis",
                            "dagger",
                            "degree",
                            "cent",
                            "sterling",
                            "section",
                            "bullet",
                            "paragraph",
                            "germandbls",
                            "registered",
                            "copyright",
                            "trademark",
                            "acute",
                            "dieresis",
                            "notequal",
                            "AE",
                            "Oslash",
                            "infinity",
                            "plusminus",
                            "lessequal",
                            "greaterequal",
                            "yen",
                            "mu",
                            "partialdiff",
                            "summation",
                            "product",
                            "pi",
                            "integral",
                            "ordfeminine",
                            "ordmasculine",
                            "Omega",
                            "ae",
                            "oslash",
                            "questiondown",
                            "exclamdown",
                            "logicalnot",
                            "radical",
                            "florin",
                            "approxequal",
                            "Delta",
                            "guillemotleft",
                            "guillemotright",
                            "ellipsis",
                            "nonbreakingspace",
                            "Agrave",
                            "Atilde",
                            "Otilde",
                            "OE",
                            "oe",
                            "endash",
                            "emdash",
                            "quotedblleft",
                            "quotedblright",
                            "quoteleft",
                            "quoteright",
                            "divide",
                            "lozenge",
                            "ydieresis",
                            "Ydieresis",
                            "fraction",
                            "currency",
                            "guilsinglleft",
                            "guilsinglright",
                            "fi",
                            "fl",
                            "daggerdbl",
                            "periodcentered",
                            "quotesinglbase",
                            "quotedblbase",
                            "perthousand",
                            "Acircumflex",
                            "Ecircumflex",
                            "Aacute",
                            "Edieresis",
                            "Egrave",
                            "Iacute",
                            "Icircumflex",
                            "Idieresis",
                            "Igrave",
                            "Oacute",
                            "Ocircumflex",
                            "apple",
                            "Ograve",
                            "Uacute",
                            "Ucircumflex",
                            "Ugrave",
                            "dotlessi",
                            "circumflex",
                            "tilde",
                            "macron",
                            "breve",
                            "dotaccent",
                            "ring",
                            "cedilla",
                            "hungarumlaut",
                            "ogonek",
                            "caron",
                            "Lslash",
                            "lslash",
                            "Scaron",
                            "scaron",
                            "Zcaron",
                            "zcaron",
                            "brokenbar",
                            "Eth",
                            "eth",
                            "Yacute",
                            "yacute",
                            "Thorn",
                            "thorn",
                            "minus",
                            "multiply",
                            "onesuperior",
                            "twosuperior",
                            "threesuperior",
                            "onehalf",
                            "onequarter",
                            "threequarters",
                            "franc",
                            "Gbreve",
                            "gbreve",
                            "Idotaccent",
                            "Scedilla",
                            "scedilla",
                            "Cacute",
                            "cacute",
                            "Ccaron",
                            "ccaron",
                            "dcroat"
                        ];
                        function Te(e1) {
                            this.font = e1;
                        }
                        function ke(e1) {
                            this.cmap = e1;
                        }
                        function Oe(e1, t) {
                            this.encoding = e1, this.charset = t;
                        }
                        function Ce(e1) {
                            switch(e1.version){
                                case 1:
                                    this.names = c.slice();
                                    break;
                                case 2:
                                    this.names = new Array(e1.numberOfGlyphs);
                                    for(var t = 0; t < e1.numberOfGlyphs; t++)e1.glyphNameIndex[t] < c.length ? this.names[t] = c[e1.glyphNameIndex[t]] : this.names[t] = e1.names[e1.glyphNameIndex[t] - c.length];
                                    break;
                                case 2.5:
                                    this.names = new Array(e1.numberOfGlyphs);
                                    for(var r = 0; r < e1.numberOfGlyphs; r++)this.names[r] = c[r + e1.glyphNameIndex[r]];
                                    break;
                                default:
                                    this.names = [];
                            }
                        }
                        Te.prototype.charToGlyphIndex = function(e1) {
                            var t = e1.codePointAt(0), r = this.font.glyphs;
                            if (r) {
                                for(var o = 0; o < r.length; o += 1)for(var n = r.get(o), s = 0; s < n.unicodes.length; s += 1)if (n.unicodes[s] === t) return o;
                            }
                            return null;
                        }, ke.prototype.charToGlyphIndex = function(e1) {
                            return this.cmap.glyphIndexMap[e1.codePointAt(0)] || 0;
                        }, Oe.prototype.charToGlyphIndex = function(e1) {
                            e1 = e1.codePointAt(0), e1 = this.encoding[e1];
                            return this.charset.indexOf(e1);
                        }, Ce.prototype.nameToGlyphIndex = function(e1) {
                            return this.names.indexOf(e1);
                        }, Ce.prototype.glyphIndexToName = function(e1) {
                            return this.names[e1];
                        };
                        var d = {
                            line: function(e1, t, r, o, n) {
                                e1.beginPath(), e1.moveTo(t, r), e1.lineTo(o, n), e1.stroke();
                            }
                        };
                        function h(e1) {
                            this.bindConstructorValues(e1);
                        }
                        function Ae(t, e1, r) {
                            Object.defineProperty(t, e1, {
                                get: function() {
                                    return t.path, t[r];
                                },
                                set: function(e1) {
                                    t[r] = e1;
                                },
                                enumerable: !0,
                                configurable: !0
                            });
                        }
                        function Pe(e1, t) {
                            if (this.font = e1, this.glyphs = {}, Array.isArray(t)) for(var r = 0; r < t.length; r++)this.glyphs[r] = t[r];
                            this.length = t && t.length || 0;
                        }
                        h.prototype.bindConstructorValues = function(e1) {
                            var t;
                            this.index = e1.index || 0, this.name = e1.name || null, this.unicode = e1.unicode || void 0, this.unicodes = e1.unicodes || void 0 !== e1.unicode ? [
                                e1.unicode
                            ] : [], e1.xMin && (this.xMin = e1.xMin), e1.yMin && (this.yMin = e1.yMin), e1.xMax && (this.xMax = e1.xMax), e1.yMax && (this.yMax = e1.yMax), e1.advanceWidth && (this.advanceWidth = e1.advanceWidth), Object.defineProperty(this, "path", (e1 = e1.path, t = e1 || new f, {
                                configurable: !0,
                                get: function() {
                                    return t = "function" == typeof t ? t() : t;
                                },
                                set: function(e1) {
                                    t = e1;
                                }
                            }));
                        }, h.prototype.addUnicode = function(e1) {
                            0 === this.unicodes.length && (this.unicode = e1), this.unicodes.push(e1);
                        }, h.prototype.getBoundingBox = function() {
                            return this.path.getBoundingBox();
                        }, h.prototype.getPath = function(e1, t, r, o, n) {
                            e1 = void 0 !== e1 ? e1 : 0, t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 72;
                            for(var s, i, a = (o = o || {}).xScale, l = o.yScale, u = ((s = o.hinting && n && n.hinting ? this.path && n.hinting.exec(this, r) : s) ? (i = n.hinting.getCommands(s), e1 = Math.round(e1), t = Math.round(t), a = l = 1) : (i = this.path.commands, o = 1 / this.path.unitsPerEm * r, void 0 === a && (a = o), void 0 === l && (l = o)), new f), c = 0; c < i.length; c += 1){
                                var d = i[c];
                                "M" === d.type ? u.moveTo(e1 + d.x * a, t + -d.y * l) : "L" === d.type ? u.lineTo(e1 + d.x * a, t + -d.y * l) : "Q" === d.type ? u.quadraticCurveTo(e1 + d.x1 * a, t + -d.y1 * l, e1 + d.x * a, t + -d.y * l) : "C" === d.type ? u.curveTo(e1 + d.x1 * a, t + -d.y1 * l, e1 + d.x2 * a, t + -d.y2 * l, e1 + d.x * a, t + -d.y * l) : "Z" === d.type && u.closePath();
                            }
                            return u;
                        }, h.prototype.getContours = function() {
                            if (void 0 === this.points) return [];
                            for(var e1 = [], t = [], r = 0; r < this.points.length; r += 1){
                                var o = this.points[r];
                                t.push(o), o.lastPointOfContour && (e1.push(t), t = []);
                            }
                            return L.argument(0 === t.length, "There are still points left in the current contour."), e1;
                        }, h.prototype.getMetrics = function() {
                            for(var e1 = this.path.commands, t = [], r = [], o = 0; o < e1.length; o += 1){
                                var n = e1[o];
                                "Z" !== n.type && (t.push(n.x), r.push(n.y)), "Q" !== n.type && "C" !== n.type || (t.push(n.x1), r.push(n.y1)), "C" === n.type && (t.push(n.x2), r.push(n.y2));
                            }
                            var s = {
                                xMin: Math.min.apply(null, t),
                                yMin: Math.min.apply(null, r),
                                xMax: Math.max.apply(null, t),
                                yMax: Math.max.apply(null, r),
                                leftSideBearing: this.leftSideBearing
                            };
                            return isFinite(s.xMin) || (s.xMin = 0), isFinite(s.xMax) || (s.xMax = this.advanceWidth), isFinite(s.yMin) || (s.yMin = 0), isFinite(s.yMax) || (s.yMax = 0), s.rightSideBearing = this.advanceWidth - s.leftSideBearing - (s.xMax - s.xMin), s;
                        }, h.prototype.draw = function(e1, t, r, o, n) {
                            this.getPath(t, r, o, n).draw(e1);
                        }, h.prototype.drawPoints = function(i, e1, t, r) {
                            function o(e1, t, r, o) {
                                var n = 2 * Math.PI;
                                i.beginPath();
                                for(var s = 0; s < e1.length; s += 1)i.moveTo(t + e1[s].x * o, r + e1[s].y * o), i.arc(t + e1[s].x * o, r + e1[s].y * o, 2, 0, n, !1);
                                i.closePath(), i.fill();
                            }
                            e1 = void 0 !== e1 ? e1 : 0, t = void 0 !== t ? t : 0;
                            for(var r = 1 / this.path.unitsPerEm * (r = void 0 !== r ? r : 24), n = [], s = [], a = this.path, l = 0; l < a.commands.length; l += 1){
                                var u = a.commands[l];
                                void 0 !== u.x && n.push({
                                    x: u.x,
                                    y: -u.y
                                }), void 0 !== u.x1 && s.push({
                                    x: u.x1,
                                    y: -u.y1
                                }), void 0 !== u.x2 && s.push({
                                    x: u.x2,
                                    y: -u.y2
                                });
                            }
                            i.fillStyle = "blue", o(n, e1, t, r), i.fillStyle = "red", o(s, e1, t, r);
                        }, h.prototype.drawMetrics = function(e1, t, r, o) {
                            t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 0, o = 1 / this.path.unitsPerEm * (o = void 0 !== o ? o : 24), e1.lineWidth = 1, e1.strokeStyle = "black", d.line(e1, t, -10000, t, 1e4), d.line(e1, -10000, r, 1e4, r);
                            var n = this.xMin || 0, s = this.yMin || 0, i = this.xMax || 0, a = this.yMax || 0, l = this.advanceWidth || 0;
                            e1.strokeStyle = "blue", d.line(e1, t + n * o, -10000, t + n * o, 1e4), d.line(e1, t + i * o, -10000, t + i * o, 1e4), d.line(e1, -10000, r + -s * o, 1e4, r + -s * o), d.line(e1, -10000, r + -a * o, 1e4, r + -a * o), e1.strokeStyle = "green", d.line(e1, t + l * o, -10000, t + l * o, 1e4);
                        }, Pe.prototype.get = function(e1) {
                            return "function" == typeof this.glyphs[e1] && (this.glyphs[e1] = this.glyphs[e1]()), this.glyphs[e1];
                        }, Pe.prototype.push = function(e1, t) {
                            this.glyphs[e1] = t, this.length++;
                        };
                        var p = {
                            GlyphSet: Pe,
                            glyphLoader: function(e1, t) {
                                return new h({
                                    index: t,
                                    font: e1
                                });
                            },
                            ttfGlyphLoader: function(r, e1, o, n, s, i) {
                                return function() {
                                    var t = new h({
                                        index: e1,
                                        font: r
                                    });
                                    return t.path = function() {
                                        o(t, n, s);
                                        var e1 = i(r.glyphs, t);
                                        return e1.unitsPerEm = r.unitsPerEm, e1;
                                    }, Ae(t, "xMin", "_xMin"), Ae(t, "xMax", "_xMax"), Ae(t, "yMin", "_yMin"), Ae(t, "yMax", "_yMax"), t;
                                };
                            },
                            cffGlyphLoader: function(r, e1, o, n) {
                                return function() {
                                    var t = new h({
                                        index: e1,
                                        font: r
                                    });
                                    return t.path = function() {
                                        var e1 = o(r, t, n);
                                        return e1.unitsPerEm = r.unitsPerEm, e1;
                                    }, t;
                                };
                            }
                        };
                        function Le(e1) {
                            e1 = e1.length < 1240 ? 107 : e1.length < 33900 ? 1131 : 32768;
                            return e1;
                        }
                        function y(e1, t, r) {
                            var o, n = [], s = [], i = R.getCard16(e1, t);
                            if (0 !== i) {
                                for(var a = R.getByte(e1, t + 2), l = t + (i + 1) * a + 2, u = t + 3, c = 0; c < i + 1; c += 1)n.push(R.getOffset(e1, u, a)), u += a;
                                o = l + n[i];
                            } else o = t + 2;
                            for(var d = 0; d < n.length - 1; d += 1){
                                var f = R.getBytes(e1, l + n[d], l + n[d + 1]);
                                r && (f = r(f)), s.push(f);
                            }
                            return {
                                objects: s,
                                startOffset: t,
                                endOffset: o
                            };
                        }
                        function Re(e1, t) {
                            if (28 === t) return e1.parseByte() << 8 | e1.parseByte();
                            if (29 === t) return e1.parseByte() << 24 | e1.parseByte() << 16 | e1.parseByte() << 8 | e1.parseByte();
                            if (30 === t) {
                                for(var r = e1, o = "", n = [
                                    "0",
                                    "1",
                                    "2",
                                    "3",
                                    "4",
                                    "5",
                                    "6",
                                    "7",
                                    "8",
                                    "9",
                                    ".",
                                    "E",
                                    "E-",
                                    null,
                                    "-"
                                ];;){
                                    var s = r.parseByte(), i = s >> 4, s = 15 & s;
                                    if (15 == i) break;
                                    if (o += n[i], 15 == s) break;
                                    o += n[s];
                                }
                                return parseFloat(o);
                            }
                            if (32 <= t && t <= 246) return t - 139;
                            if (247 <= t && t <= 250) return 256 * (t - 247) + e1.parseByte() + 108;
                            if (251 <= t && t <= 254) return 256 * -(t - 251) - e1.parseByte() - 108;
                            throw new Error("Invalid b0 " + t);
                        }
                        function Ie(e1, t, r) {
                            var o = new R.Parser(e1, t = void 0 !== t ? t : 0), n = [], s = [];
                            for(r = void 0 !== r ? r : e1.length; o.relativeOffset < r;){
                                var i = o.parseByte();
                                i <= 21 ? (12 === i && (i = 1200 + o.parseByte()), n.push([
                                    i,
                                    s
                                ]), s = []) : s.push(Re(o, i));
                            }
                            for(var a = n, l = {}, u = 0; u < a.length; u += 1){
                                var c = a[u][0], d = a[u][1], f = void 0, f = 1 === d.length ? d[0] : d;
                                if (l.hasOwnProperty(c) && !isNaN(l[c])) throw new Error("Object " + l + " already has key " + c);
                                l[c] = f;
                            }
                            return l;
                        }
                        function De(e1, t) {
                            return t = t <= 390 ? Se[t] : e1[t - 391];
                        }
                        function Fe(e1, t, r) {
                            for(var o, n = {}, s = 0; s < t.length; s += 1){
                                var i = t[s];
                                if (Array.isArray(i.type)) {
                                    var a = [];
                                    a.length = i.type.length;
                                    for(var l = 0; l < i.type.length; l++)void 0 === (o = void 0 !== e1[i.op] ? e1[i.op][l] : void 0) && (o = void 0 !== i.value && void 0 !== i.value[l] ? i.value[l] : null), "SID" === i.type[l] && (o = De(r, o)), a[l] = o;
                                    n[i.name] = a;
                                } else void 0 === (o = e1[i.op]) && (o = void 0 !== i.value ? i.value : null), "SID" === i.type && (o = De(r, o)), n[i.name] = o;
                            }
                            return n;
                        }
                        var Ue = [
                            {
                                name: "version",
                                op: 0,
                                type: "SID"
                            },
                            {
                                name: "notice",
                                op: 1,
                                type: "SID"
                            },
                            {
                                name: "copyright",
                                op: 1200,
                                type: "SID"
                            },
                            {
                                name: "fullName",
                                op: 2,
                                type: "SID"
                            },
                            {
                                name: "familyName",
                                op: 3,
                                type: "SID"
                            },
                            {
                                name: "weight",
                                op: 4,
                                type: "SID"
                            },
                            {
                                name: "isFixedPitch",
                                op: 1201,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "italicAngle",
                                op: 1202,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "underlinePosition",
                                op: 1203,
                                type: "number",
                                value: -100
                            },
                            {
                                name: "underlineThickness",
                                op: 1204,
                                type: "number",
                                value: 50
                            },
                            {
                                name: "paintType",
                                op: 1205,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "charstringType",
                                op: 1206,
                                type: "number",
                                value: 2
                            },
                            {
                                name: "fontMatrix",
                                op: 1207,
                                type: [
                                    "real",
                                    "real",
                                    "real",
                                    "real",
                                    "real",
                                    "real"
                                ],
                                value: [
                                    .001,
                                    0,
                                    0,
                                    .001,
                                    0,
                                    0
                                ]
                            },
                            {
                                name: "uniqueId",
                                op: 13,
                                type: "number"
                            },
                            {
                                name: "fontBBox",
                                op: 5,
                                type: [
                                    "number",
                                    "number",
                                    "number",
                                    "number"
                                ],
                                value: [
                                    0,
                                    0,
                                    0,
                                    0
                                ]
                            },
                            {
                                name: "strokeWidth",
                                op: 1208,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "xuid",
                                op: 14,
                                type: [],
                                value: null
                            },
                            {
                                name: "charset",
                                op: 15,
                                type: "offset",
                                value: 0
                            },
                            {
                                name: "encoding",
                                op: 16,
                                type: "offset",
                                value: 0
                            },
                            {
                                name: "charStrings",
                                op: 17,
                                type: "offset",
                                value: 0
                            },
                            {
                                name: "private",
                                op: 18,
                                type: [
                                    "number",
                                    "offset"
                                ],
                                value: [
                                    0,
                                    0
                                ]
                            },
                            {
                                name: "ros",
                                op: 1230,
                                type: [
                                    "SID",
                                    "SID",
                                    "number"
                                ]
                            },
                            {
                                name: "cidFontVersion",
                                op: 1231,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "cidFontRevision",
                                op: 1232,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "cidFontType",
                                op: 1233,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "cidCount",
                                op: 1234,
                                type: "number",
                                value: 8720
                            },
                            {
                                name: "uidBase",
                                op: 1235,
                                type: "number"
                            },
                            {
                                name: "fdArray",
                                op: 1236,
                                type: "offset"
                            },
                            {
                                name: "fdSelect",
                                op: 1237,
                                type: "offset"
                            },
                            {
                                name: "fontName",
                                op: 1238,
                                type: "SID"
                            }
                        ], Ne = [
                            {
                                name: "subrs",
                                op: 19,
                                type: "offset",
                                value: 0
                            },
                            {
                                name: "defaultWidthX",
                                op: 20,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "nominalWidthX",
                                op: 21,
                                type: "number",
                                value: 0
                            }
                        ];
                        function Be(e1, t, r, o) {
                            return Fe(Ie(e1, t, r), Ne, o);
                        }
                        function Ge(e1, t, r, o) {
                            for(var n = [], s = 0; s < r.length; s += 1){
                                var i = new DataView(new Uint8Array(r[s]).buffer), i = (a = o, Fe(Ie(i, 0, i.byteLength), Ue, a)), a = (i._subrs = [], i._subrsBias = 0, i.private[0]), l = i.private[1];
                                0 !== a && 0 !== l && (a = Be(e1, l + t, a, o), i._defaultWidthX = a.defaultWidthX, i._nominalWidthX = a.nominalWidthX, 0 !== a.subrs && (l = y(e1, l + a.subrs + t), i._subrs = l.objects, i._subrsBias = Le(i._subrs)), i._privateDict = a), n.push(i);
                            }
                            return n;
                        }
                        function Ve(y, g, e1) {
                            var v, b, j, _, t, x, w, r, S, E = new f, M = [], T = 0, k = !1, O = !1, C = 0, A = 0, P = (S = (y.isCIDFont ? (t = y.tables.cff.topDict._fdSelect[g.index], t = y.tables.cff.topDict._fdArray[t], x = t._subrs, w = t._subrsBias, r = t._defaultWidthX, t) : (x = y.tables.cff.topDict._subrs, w = y.tables.cff.topDict._subrsBias, r = y.tables.cff.topDict._defaultWidthX, y.tables.cff.topDict))._nominalWidthX, r);
                            function L(e1, t) {
                                O && E.closePath(), E.moveTo(e1, t), O = !0;
                            }
                            function R() {
                                M.length % 2 == 0 || k || (P = M.shift() + S), T += M.length >> 1, M.length = 0, k = !0;
                            }
                            return function e1(t) {
                                for(var r, o, n, s, i, a, l, u, c, d, f, h, p = 0; p < t.length;){
                                    var m = t[p];
                                    switch(p += 1, m){
                                        case 1:
                                        case 3:
                                            R();
                                            break;
                                        case 4:
                                            1 < M.length && !k && (P = M.shift() + S, k = !0), A += M.pop(), L(C, A);
                                            break;
                                        case 5:
                                            for(; 0 < M.length;)C += M.shift(), A += M.shift(), E.lineTo(C, A);
                                            break;
                                        case 6:
                                            for(; 0 < M.length && (C += M.shift(), E.lineTo(C, A), 0 !== M.length);)A += M.shift(), E.lineTo(C, A);
                                            break;
                                        case 7:
                                            for(; 0 < M.length && (A += M.shift(), E.lineTo(C, A), 0 !== M.length);)C += M.shift(), E.lineTo(C, A);
                                            break;
                                        case 8:
                                            for(; 0 < M.length;)v = C + M.shift(), b = A + M.shift(), j = v + M.shift(), _ = b + M.shift(), C = j + M.shift(), A = _ + M.shift(), E.curveTo(v, b, j, _, C, A);
                                            break;
                                        case 10:
                                            i = M.pop() + w, (a = x[i]) && e1(a);
                                            break;
                                        case 11:
                                            return;
                                        case 12:
                                            switch(m = t[p], p += 1, m){
                                                case 35:
                                                    v = C + M.shift(), b = A + M.shift(), j = v + M.shift(), _ = b + M.shift(), l = j + M.shift(), u = _ + M.shift(), c = l + M.shift(), d = u + M.shift(), f = c + M.shift(), h = d + M.shift(), C = f + M.shift(), A = h + M.shift(), M.shift(), E.curveTo(v, b, j, _, l, u), E.curveTo(c, d, f, h, C, A);
                                                    break;
                                                case 34:
                                                    v = C + M.shift(), b = A, j = v + M.shift(), _ = b + M.shift(), l = j + M.shift(), u = _, c = l + M.shift(), d = _, f = c + M.shift(), h = A, C = f + M.shift(), E.curveTo(v, b, j, _, l, u), E.curveTo(c, d, f, h, C, A);
                                                    break;
                                                case 36:
                                                    v = C + M.shift(), b = A + M.shift(), j = v + M.shift(), _ = b + M.shift(), l = j + M.shift(), u = _, c = l + M.shift(), d = _, f = c + M.shift(), h = d + M.shift(), C = f + M.shift(), E.curveTo(v, b, j, _, l, u), E.curveTo(c, d, f, h, C, A);
                                                    break;
                                                case 37:
                                                    v = C + M.shift(), b = A + M.shift(), j = v + M.shift(), _ = b + M.shift(), l = j + M.shift(), u = _ + M.shift(), c = l + M.shift(), d = u + M.shift(), f = c + M.shift(), h = d + M.shift(), Math.abs(f - C) > Math.abs(h - A) ? C = f + M.shift() : A = h + M.shift(), E.curveTo(v, b, j, _, l, u), E.curveTo(c, d, f, h, C, A);
                                                    break;
                                                default:
                                                    console.log("Glyph " + g.index + ": unknown operator 1200" + m), M.length = 0;
                                            }
                                            break;
                                        case 14:
                                            0 < M.length && !k && (P = M.shift() + S, k = !0), O && (E.closePath(), O = !1);
                                            break;
                                        case 18:
                                            R();
                                            break;
                                        case 19:
                                        case 20:
                                            R(), p += T + 7 >> 3;
                                            break;
                                        case 21:
                                            2 < M.length && !k && (P = M.shift() + S, k = !0), A += M.pop(), L(C += M.pop(), A);
                                            break;
                                        case 22:
                                            1 < M.length && !k && (P = M.shift() + S, k = !0), L(C += M.pop(), A);
                                            break;
                                        case 23:
                                            R();
                                            break;
                                        case 24:
                                            for(; 2 < M.length;)v = C + M.shift(), b = A + M.shift(), j = v + M.shift(), _ = b + M.shift(), C = j + M.shift(), A = _ + M.shift(), E.curveTo(v, b, j, _, C, A);
                                            C += M.shift(), A += M.shift(), E.lineTo(C, A);
                                            break;
                                        case 25:
                                            for(; 6 < M.length;)C += M.shift(), A += M.shift(), E.lineTo(C, A);
                                            v = C + M.shift(), b = A + M.shift(), j = v + M.shift(), _ = b + M.shift(), C = j + M.shift(), A = _ + M.shift(), E.curveTo(v, b, j, _, C, A);
                                            break;
                                        case 26:
                                            for(M.length % 2 && (C += M.shift()); 0 < M.length;)v = C, b = A + M.shift(), j = v + M.shift(), _ = b + M.shift(), C = j, A = _ + M.shift(), E.curveTo(v, b, j, _, C, A);
                                            break;
                                        case 27:
                                            for(M.length % 2 && (A += M.shift()); 0 < M.length;)v = C + M.shift(), b = A, j = v + M.shift(), _ = b + M.shift(), C = j + M.shift(), A = _, E.curveTo(v, b, j, _, C, A);
                                            break;
                                        case 28:
                                            r = t[p], o = t[p + 1], M.push((r << 24 | o << 16) >> 16), p += 2;
                                            break;
                                        case 29:
                                            i = M.pop() + y.gsubrsBias, (a = y.gsubrs[i]) && e1(a);
                                            break;
                                        case 30:
                                            for(; 0 < M.length && (v = C, b = A + M.shift(), j = v + M.shift(), _ = b + M.shift(), C = j + M.shift(), A = _ + (1 === M.length ? M.shift() : 0), E.curveTo(v, b, j, _, C, A), 0 !== M.length);)v = C + M.shift(), b = A, j = v + M.shift(), _ = b + M.shift(), A = _ + M.shift(), C = j + (1 === M.length ? M.shift() : 0), E.curveTo(v, b, j, _, C, A);
                                            break;
                                        case 31:
                                            for(; 0 < M.length && (v = C + M.shift(), b = A, j = v + M.shift(), _ = b + M.shift(), A = _ + M.shift(), C = j + (1 === M.length ? M.shift() : 0), E.curveTo(v, b, j, _, C, A), 0 !== M.length);)v = C, b = A + M.shift(), j = v + M.shift(), _ = b + M.shift(), C = j + M.shift(), A = _ + (1 === M.length ? M.shift() : 0), E.curveTo(v, b, j, _, C, A);
                                            break;
                                        default:
                                            m < 32 ? console.log("Glyph " + g.index + ": unknown operator " + m) : m < 247 ? M.push(m - 139) : m < 251 ? (r = t[p], p += 1, M.push(256 * (m - 247) + r + 108)) : m < 255 ? (r = t[p], p += 1, M.push(256 * -(m - 251) - r - 108)) : (r = t[p], o = t[p + 1], n = t[p + 2], s = t[p + 3], p += 4, M.push((r << 24 | o << 16 | n << 8 | s) / 65536));
                                    }
                                }
                            }(e1), g.advanceWidth = P, E;
                        }
                        function ze(e1, t) {
                            var r, o = Se.indexOf(e1);
                            return 0 <= o && (r = o), 0 <= (o = t.indexOf(e1)) ? r = o + Se.length : (r = Se.length + t.length, t.push(e1)), r;
                        }
                        function He(e1, t, r) {
                            for(var o = {}, n = 0; n < e1.length; n += 1){
                                var s = e1[n], i = t[s.name];
                                void 0 === i || function e1(t, r) {
                                    if (t === r) return 1;
                                    if (Array.isArray(t) && Array.isArray(r) && t.length === r.length) {
                                        for(var o = 0; o < t.length; o += 1)if (!e1(t[o], r[o])) return;
                                        return 1;
                                    }
                                }(i, s.value) || ("SID" === s.type && (i = ze(i, r)), o[s.op] = {
                                    name: s.name,
                                    type: s.type,
                                    value: i
                                });
                            }
                            return o;
                        }
                        function We(e1, t) {
                            var r = new S.Record("Top DICT", [
                                {
                                    name: "dict",
                                    type: "DICT",
                                    value: {}
                                }
                            ]);
                            return r.dict = He(Ue, e1, t), r;
                        }
                        function qe(e1) {
                            var t = new S.Record("Top DICT INDEX", [
                                {
                                    name: "topDicts",
                                    type: "INDEX",
                                    value: []
                                }
                            ]);
                            return t.topDicts = [
                                {
                                    name: "topDict_0",
                                    type: "TABLE",
                                    value: e1
                                }
                            ], t;
                        }
                        function Xe(e1) {
                            for(var t = new S.Record("CharStrings INDEX", [
                                {
                                    name: "charStrings",
                                    type: "INDEX",
                                    value: []
                                }
                            ]), r = 0; r < e1.length; r += 1){
                                var o = e1.get(r), n = function(e1) {
                                    for(var t = [], r = e1.path, o = (t.push({
                                        name: "width",
                                        type: "NUMBER",
                                        value: e1.advanceWidth
                                    }), 0), n = 0, s = 0; s < r.commands.length; s += 1){
                                        var i, a, l, u, c = void 0, d = void 0, f = r.commands[s];
                                        "M" === (f = "Q" === f.type ? {
                                            type: "C",
                                            x: f.x,
                                            y: f.y,
                                            x1: 1 / 3 * o + 2 / 3 * f.x1,
                                            y1: 1 / 3 * n + 2 / 3 * f.y1,
                                            x2: 1 / 3 * f.x + 2 / 3 * f.x1,
                                            y2: 1 / 3 * f.y + 2 / 3 * f.y1
                                        } : f).type ? (c = Math.round(f.x - o), d = Math.round(f.y - n), t.push({
                                            name: "dx",
                                            type: "NUMBER",
                                            value: c
                                        }), t.push({
                                            name: "dy",
                                            type: "NUMBER",
                                            value: d
                                        }), t.push({
                                            name: "rmoveto",
                                            type: "OP",
                                            value: 21
                                        }), o = Math.round(f.x), n = Math.round(f.y)) : "L" === f.type ? (c = Math.round(f.x - o), d = Math.round(f.y - n), t.push({
                                            name: "dx",
                                            type: "NUMBER",
                                            value: c
                                        }), t.push({
                                            name: "dy",
                                            type: "NUMBER",
                                            value: d
                                        }), t.push({
                                            name: "rlineto",
                                            type: "OP",
                                            value: 5
                                        }), o = Math.round(f.x), n = Math.round(f.y)) : "C" === f.type && (i = Math.round(f.x1 - o), a = Math.round(f.y1 - n), l = Math.round(f.x2 - f.x1), u = Math.round(f.y2 - f.y1), c = Math.round(f.x - f.x2), d = Math.round(f.y - f.y2), t.push({
                                            name: "dx1",
                                            type: "NUMBER",
                                            value: i
                                        }), t.push({
                                            name: "dy1",
                                            type: "NUMBER",
                                            value: a
                                        }), t.push({
                                            name: "dx2",
                                            type: "NUMBER",
                                            value: l
                                        }), t.push({
                                            name: "dy2",
                                            type: "NUMBER",
                                            value: u
                                        }), t.push({
                                            name: "dx",
                                            type: "NUMBER",
                                            value: c
                                        }), t.push({
                                            name: "dy",
                                            type: "NUMBER",
                                            value: d
                                        }), t.push({
                                            name: "rrcurveto",
                                            type: "OP",
                                            value: 8
                                        }), o = Math.round(f.x), n = Math.round(f.y));
                                    }
                                    return t.push({
                                        name: "endchar",
                                        type: "OP",
                                        value: 14
                                    }), t;
                                }(o);
                                t.charStrings.push({
                                    name: o.name,
                                    type: "CHARSTRING",
                                    value: n
                                });
                            }
                            return t;
                        }
                        var Ye = {
                            parse: function(e1, t, r) {
                                r.tables.cff = {}, o = e1, n = t, (s = {}).formatMajor = R.getCard8(o, n), s.formatMinor = R.getCard8(o, n + 1), s.size = R.getCard8(o, n + 2), s.offsetSize = R.getCard8(o, n + 3), s.startOffset = n, s.endOffset = n + 4;
                                var o = y(e1, s.endOffset, R.bytesToString), n = y(e1, o.endOffset), s = y(e1, n.endOffset, R.bytesToString), o = y(e1, s.endOffset);
                                if (r.gsubrs = o.objects, r.gsubrsBias = Le(r.gsubrs), 1 !== (o = Ge(e1, t, n.objects, s.objects)).length) throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " + o.length);
                                if (n = o[0], (r.tables.cff.topDict = n)._privateDict && (r.defaultWidthX = n._privateDict.defaultWidthX, r.nominalWidthX = n._privateDict.nominalWidthX), void 0 !== n.ros[0] && void 0 !== n.ros[1] && (r.isCIDFont = !0), r.isCIDFont) {
                                    var o = n.fdArray, i = n.fdSelect;
                                    if (0 === o || 0 === i) throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");
                                    o = Ge(e1, t, y(e1, o += t).objects, s.objects);
                                    n._fdArray = o, n._fdSelect = function(e1, t, r, o) {
                                        var n, s = [], i = new R.Parser(e1, t);
                                        if (0 === (e1 = i.parseCard8())) for(var a = 0; a < r; a++){
                                            if (o <= (n = i.parseCard8())) throw new Error("CFF table CID Font FDSelect has bad FD index value " + n + " (FD count " + o + ")");
                                            s.push(n);
                                        }
                                        else {
                                            if (3 !== e1) throw new Error("CFF Table CID Font FDSelect table has unsupported format " + e1);
                                            var l, u = i.parseCard16(), c = i.parseCard16();
                                            if (0 !== c) throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID " + c);
                                            for(var d = 0; d < u; d++){
                                                if (n = i.parseCard8(), l = i.parseCard16(), o <= n) throw new Error("CFF table CID Font FDSelect has bad FD index value " + n + " (FD count " + o + ")");
                                                if (r < l) throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID " + l);
                                                for(; c < l; c++)s.push(n);
                                                c = l;
                                            }
                                            if (l !== r) throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID " + l);
                                        }
                                        return s;
                                    }(e1, i += t, r.numGlyphs, o.length);
                                }
                                var i = t + n.private[1], o = Be(e1, i, n.private[0], s.objects), a = (r.defaultWidthX = o.defaultWidthX, r.nominalWidthX = o.nominalWidthX, 0 !== o.subrs ? (i = y(e1, i + o.subrs), r.subrs = i.objects, r.subrsBias = Le(r.subrs)) : (r.subrs = [], r.subrsBias = 0), y(e1, t + n.charStrings)), o = (r.nGlyphs = a.objects.length, function(e1, t, r, o) {
                                    var n = new R.Parser(e1, t), s = (--r, [
                                        ".notdef"
                                    ]);
                                    if (0 === (e1 = n.parseCard8())) for(var i = 0; i < r; i += 1)a = n.parseSID(), s.push(De(o, a));
                                    else if (1 === e1) for(; s.length <= r;)for(var a = n.parseSID(), l = n.parseCard8(), u = 0; u <= l; u += 1)s.push(De(o, a)), a += 1;
                                    else {
                                        if (2 !== e1) throw new Error("Unknown charset format " + e1);
                                        for(; s.length <= r;){
                                            a = n.parseSID(), l = n.parseCard16();
                                            for(var c = 0; c <= l; c += 1)s.push(De(o, a)), a += 1;
                                        }
                                    }
                                    return s;
                                }(e1, t + n.charset, r.nGlyphs, s.objects));
                                0 === n.encoding ? r.cffEncoding = new Oe(Ee, o) : 1 === n.encoding ? r.cffEncoding = new Oe(Me, o) : r.cffEncoding = function(e1, t, r) {
                                    var o = {}, n = new R.Parser(e1, t);
                                    if (0 === (e1 = n.parseCard8())) for(var s = n.parseCard8(), i = 0; i < s; i += 1)o[l = n.parseCard8()] = i;
                                    else {
                                        if (1 !== e1) throw new Error("Unknown encoding format " + e1);
                                        for(var a = n.parseCard8(), l = 1, u = 0; u < a; u += 1)for(var c = n.parseCard8(), d = n.parseCard8(), f = c; f <= c + d; f += 1)o[f] = l, l += 1;
                                    }
                                    return new Oe(o, r);
                                }(e1, t + n.encoding, o), r.encoding = r.encoding || r.cffEncoding, r.glyphs = new p.GlyphSet(r);
                                for(var l = 0; l < r.nGlyphs; l += 1){
                                    var u = a.objects[l];
                                    r.glyphs.push(l, p.cffGlyphLoader(r, l, Ve, u));
                                }
                            },
                            make: function(e1, t) {
                                for(var r, o = new S.Table("CFF ", [
                                    {
                                        name: "header",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "nameIndex",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "topDictIndex",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "stringIndex",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "globalSubrIndex",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "charsets",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "charStringsIndex",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "privateDict",
                                        type: "RECORD"
                                    }
                                ]), n = 1 / t.unitsPerEm, n = {
                                    version: t.version,
                                    fullName: t.fullName,
                                    familyName: t.familyName,
                                    weight: t.weightName,
                                    fontBBox: t.fontBBox || [
                                        0,
                                        0,
                                        0,
                                        0
                                    ],
                                    fontMatrix: [
                                        n,
                                        0,
                                        0,
                                        n,
                                        0,
                                        0
                                    ],
                                    charset: 999,
                                    encoding: 0,
                                    charStrings: 999,
                                    private: [
                                        0,
                                        999
                                    ]
                                }, s = [], i = 1; i < e1.length; i += 1)r = e1.get(i), s.push(r.name);
                                var a, l, u = [], t = (o.header = new S.Record("Header", [
                                    {
                                        name: "major",
                                        type: "Card8",
                                        value: 1
                                    },
                                    {
                                        name: "minor",
                                        type: "Card8",
                                        value: 0
                                    },
                                    {
                                        name: "hdrSize",
                                        type: "Card8",
                                        value: 4
                                    },
                                    {
                                        name: "major",
                                        type: "Card8",
                                        value: 1
                                    }
                                ]), o.nameIndex = function(e1) {
                                    var t = new S.Record("Name INDEX", [
                                        {
                                            name: "names",
                                            type: "INDEX",
                                            value: []
                                        }
                                    ]);
                                    t.names = [];
                                    for(var r = 0; r < e1.length; r += 1)t.names.push({
                                        name: "name_" + r,
                                        type: "NAME",
                                        value: e1[r]
                                    });
                                    return t;
                                }([
                                    t.postScriptName
                                ]), We(n, u)), c = (o.topDictIndex = qe(t), o.globalSubrIndex = new S.Record("Global Subr INDEX", [
                                    {
                                        name: "subrs",
                                        type: "INDEX",
                                        value: []
                                    }
                                ]), o.charsets = function(e1, t) {
                                    for(var r = new S.Record("Charsets", [
                                        {
                                            name: "format",
                                            type: "Card8",
                                            value: 0
                                        }
                                    ]), o = 0; o < e1.length; o += 1){
                                        var n = ze(e1[o], t);
                                        r.fields.push({
                                            name: "glyph_" + o,
                                            type: "SID",
                                            value: n
                                        });
                                    }
                                    return r;
                                }(s, u), o.charStringsIndex = Xe(e1), o.privateDict = (c = {}, a = u, (l = new S.Record("Private DICT", [
                                    {
                                        name: "dict",
                                        type: "DICT",
                                        value: {}
                                    }
                                ])).dict = He(Ne, c, a), l), o.stringIndex = function(e1) {
                                    var t = new S.Record("String INDEX", [
                                        {
                                            name: "strings",
                                            type: "INDEX",
                                            value: []
                                        }
                                    ]);
                                    t.strings = [];
                                    for(var r = 0; r < e1.length; r += 1)t.strings.push({
                                        name: "string_" + r,
                                        type: "STRING",
                                        value: e1[r]
                                    });
                                    return t;
                                }(u), o.header.sizeOf() + o.nameIndex.sizeOf() + o.topDictIndex.sizeOf() + o.stringIndex.sizeOf() + o.globalSubrIndex.sizeOf());
                                return n.charset = c, n.encoding = 0, n.charStrings = n.charset + o.charsets.sizeOf(), n.private[1] = n.charStrings + o.charStringsIndex.sizeOf(), t = We(n, u), o.topDictIndex = qe(t), o;
                            }
                        };
                        var Ze = {
                            parse: function(e1, t) {
                                var r = {}, e1 = new R.Parser(e1, t);
                                return r.version = e1.parseVersion(), r.fontRevision = Math.round(1e3 * e1.parseFixed()) / 1e3, r.checkSumAdjustment = e1.parseULong(), r.magicNumber = e1.parseULong(), L.argument(1594834165 === r.magicNumber, "Font header has wrong magic number."), r.flags = e1.parseUShort(), r.unitsPerEm = e1.parseUShort(), r.created = e1.parseLongDateTime(), r.modified = e1.parseLongDateTime(), r.xMin = e1.parseShort(), r.yMin = e1.parseShort(), r.xMax = e1.parseShort(), r.yMax = e1.parseShort(), r.macStyle = e1.parseUShort(), r.lowestRecPPEM = e1.parseUShort(), r.fontDirectionHint = e1.parseShort(), r.indexToLocFormat = e1.parseShort(), r.glyphDataFormat = e1.parseShort(), r;
                            },
                            make: function(e1) {
                                var t = Math.round((new Date).getTime() / 1e3) + 2082844800, r = t;
                                return e1.createdTimestamp && (r = e1.createdTimestamp + 2082844800), new S.Table("head", [
                                    {
                                        name: "version",
                                        type: "FIXED",
                                        value: 65536
                                    },
                                    {
                                        name: "fontRevision",
                                        type: "FIXED",
                                        value: 65536
                                    },
                                    {
                                        name: "checkSumAdjustment",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "magicNumber",
                                        type: "ULONG",
                                        value: 1594834165
                                    },
                                    {
                                        name: "flags",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "unitsPerEm",
                                        type: "USHORT",
                                        value: 1e3
                                    },
                                    {
                                        name: "created",
                                        type: "LONGDATETIME",
                                        value: r
                                    },
                                    {
                                        name: "modified",
                                        type: "LONGDATETIME",
                                        value: t
                                    },
                                    {
                                        name: "xMin",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "yMin",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "xMax",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "yMax",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "macStyle",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "lowestRecPPEM",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "fontDirectionHint",
                                        type: "SHORT",
                                        value: 2
                                    },
                                    {
                                        name: "indexToLocFormat",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "glyphDataFormat",
                                        type: "SHORT",
                                        value: 0
                                    }
                                ], e1);
                            }
                        };
                        var Qe = {
                            parse: function(e1, t) {
                                var r = {}, e1 = new R.Parser(e1, t);
                                return r.version = e1.parseVersion(), r.ascender = e1.parseShort(), r.descender = e1.parseShort(), r.lineGap = e1.parseShort(), r.advanceWidthMax = e1.parseUShort(), r.minLeftSideBearing = e1.parseShort(), r.minRightSideBearing = e1.parseShort(), r.xMaxExtent = e1.parseShort(), r.caretSlopeRise = e1.parseShort(), r.caretSlopeRun = e1.parseShort(), r.caretOffset = e1.parseShort(), e1.relativeOffset += 8, r.metricDataFormat = e1.parseShort(), r.numberOfHMetrics = e1.parseUShort(), r;
                            },
                            make: function(e1) {
                                return new S.Table("hhea", [
                                    {
                                        name: "version",
                                        type: "FIXED",
                                        value: 65536
                                    },
                                    {
                                        name: "ascender",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "descender",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "lineGap",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "advanceWidthMax",
                                        type: "UFWORD",
                                        value: 0
                                    },
                                    {
                                        name: "minLeftSideBearing",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "minRightSideBearing",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "xMaxExtent",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "caretSlopeRise",
                                        type: "SHORT",
                                        value: 1
                                    },
                                    {
                                        name: "caretSlopeRun",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "caretOffset",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "reserved1",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "reserved2",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "reserved3",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "reserved4",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "metricDataFormat",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "numberOfHMetrics",
                                        type: "USHORT",
                                        value: 0
                                    }
                                ], e1);
                            }
                        };
                        var Je = {
                            parse: function(e1, t, r, o, n) {
                                for(var s, i, a = new R.Parser(e1, t), l = 0; l < o; l += 1){
                                    l < r && (s = a.parseUShort(), i = a.parseShort());
                                    var u = n.get(l);
                                    u.advanceWidth = s, u.leftSideBearing = i;
                                }
                            },
                            make: function(e1) {
                                for(var t = new S.Table("hmtx", []), r = 0; r < e1.length; r += 1){
                                    var o = e1.get(r), n = o.advanceWidth || 0, o = o.leftSideBearing || 0;
                                    t.fields.push({
                                        name: "advanceWidth_" + r,
                                        type: "USHORT",
                                        value: n
                                    }), t.fields.push({
                                        name: "leftSideBearing_" + r,
                                        type: "SHORT",
                                        value: o
                                    });
                                }
                                return t;
                            }
                        };
                        var Ke = {
                            make: function(e1) {
                                for(var t = new S.Table("ltag", [
                                    {
                                        name: "version",
                                        type: "ULONG",
                                        value: 1
                                    },
                                    {
                                        name: "flags",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "numTags",
                                        type: "ULONG",
                                        value: e1.length
                                    }
                                ]), r = "", o = 12 + 4 * e1.length, n = 0; n < e1.length; ++n){
                                    var s = r.indexOf(e1[n]);
                                    s < 0 && (s = r.length, r += e1[n]), t.fields.push({
                                        name: "offset " + n,
                                        type: "USHORT",
                                        value: o + s
                                    }), t.fields.push({
                                        name: "length " + n,
                                        type: "USHORT",
                                        value: e1[n].length
                                    });
                                }
                                return t.fields.push({
                                    name: "stringPool",
                                    type: "CHARARRAY",
                                    value: r
                                }), t;
                            },
                            parse: function(e1, t) {
                                for(var r = new R.Parser(e1, t), o = r.parseULong(), n = (L.argument(1 === o, "Unsupported ltag table version."), r.skip("uLong", 1), r.parseULong()), s = [], i = 0; i < n; i++){
                                    for(var a = "", l = t + r.parseUShort(), u = r.parseUShort(), c = l; c < l + u; ++c)a += String.fromCharCode(e1.getInt8(c));
                                    s.push(a);
                                }
                                return s;
                            }
                        };
                        var $e = {
                            parse: function(e1, t) {
                                var r = {}, e1 = new R.Parser(e1, t);
                                return r.version = e1.parseVersion(), r.numGlyphs = e1.parseUShort(), 1 === r.version && (r.maxPoints = e1.parseUShort(), r.maxContours = e1.parseUShort(), r.maxCompositePoints = e1.parseUShort(), r.maxCompositeContours = e1.parseUShort(), r.maxZones = e1.parseUShort(), r.maxTwilightPoints = e1.parseUShort(), r.maxStorage = e1.parseUShort(), r.maxFunctionDefs = e1.parseUShort(), r.maxInstructionDefs = e1.parseUShort(), r.maxStackElements = e1.parseUShort(), r.maxSizeOfInstructions = e1.parseUShort(), r.maxComponentElements = e1.parseUShort(), r.maxComponentDepth = e1.parseUShort()), r;
                            },
                            make: function(e1) {
                                return new S.Table("maxp", [
                                    {
                                        name: "version",
                                        type: "FIXED",
                                        value: 20480
                                    },
                                    {
                                        name: "numGlyphs",
                                        type: "USHORT",
                                        value: e1
                                    }
                                ]);
                            }
                        }, et = [
                            "copyright",
                            "fontFamily",
                            "fontSubfamily",
                            "uniqueID",
                            "fullName",
                            "version",
                            "postScriptName",
                            "trademark",
                            "manufacturer",
                            "designer",
                            "description",
                            "manufacturerURL",
                            "designerURL",
                            "license",
                            "licenseURL",
                            "reserved",
                            "preferredFamily",
                            "preferredSubfamily",
                            "compatibleFullName",
                            "sampleText",
                            "postScriptFindFontName",
                            "wwsFamily",
                            "wwsSubfamily"
                        ], tt = {
                            0: "en",
                            1: "fr",
                            2: "de",
                            3: "it",
                            4: "nl",
                            5: "sv",
                            6: "es",
                            7: "da",
                            8: "pt",
                            9: "no",
                            10: "he",
                            11: "ja",
                            12: "ar",
                            13: "fi",
                            14: "el",
                            15: "is",
                            16: "mt",
                            17: "tr",
                            18: "hr",
                            19: "zh-Hant",
                            20: "ur",
                            21: "hi",
                            22: "th",
                            23: "ko",
                            24: "lt",
                            25: "pl",
                            26: "hu",
                            27: "es",
                            28: "lv",
                            29: "se",
                            30: "fo",
                            31: "fa",
                            32: "ru",
                            33: "zh",
                            34: "nl-BE",
                            35: "ga",
                            36: "sq",
                            37: "ro",
                            38: "cz",
                            39: "sk",
                            40: "si",
                            41: "yi",
                            42: "sr",
                            43: "mk",
                            44: "bg",
                            45: "uk",
                            46: "be",
                            47: "uz",
                            48: "kk",
                            49: "az-Cyrl",
                            50: "az-Arab",
                            51: "hy",
                            52: "ka",
                            53: "mo",
                            54: "ky",
                            55: "tg",
                            56: "tk",
                            57: "mn-CN",
                            58: "mn",
                            59: "ps",
                            60: "ks",
                            61: "ku",
                            62: "sd",
                            63: "bo",
                            64: "ne",
                            65: "sa",
                            66: "mr",
                            67: "bn",
                            68: "as",
                            69: "gu",
                            70: "pa",
                            71: "or",
                            72: "ml",
                            73: "kn",
                            74: "ta",
                            75: "te",
                            76: "si",
                            77: "my",
                            78: "km",
                            79: "lo",
                            80: "vi",
                            81: "id",
                            82: "tl",
                            83: "ms",
                            84: "ms-Arab",
                            85: "am",
                            86: "ti",
                            87: "om",
                            88: "so",
                            89: "sw",
                            90: "rw",
                            91: "rn",
                            92: "ny",
                            93: "mg",
                            94: "eo",
                            128: "cy",
                            129: "eu",
                            130: "ca",
                            131: "la",
                            132: "qu",
                            133: "gn",
                            134: "ay",
                            135: "tt",
                            136: "ug",
                            137: "dz",
                            138: "jv",
                            139: "su",
                            140: "gl",
                            141: "af",
                            142: "br",
                            143: "iu",
                            144: "gd",
                            145: "gv",
                            146: "ga",
                            147: "to",
                            148: "el-polyton",
                            149: "kl",
                            150: "az",
                            151: "nn"
                        }, rt = {
                            0: 0,
                            1: 0,
                            2: 0,
                            3: 0,
                            4: 0,
                            5: 0,
                            6: 0,
                            7: 0,
                            8: 0,
                            9: 0,
                            10: 5,
                            11: 1,
                            12: 4,
                            13: 0,
                            14: 6,
                            15: 0,
                            16: 0,
                            17: 0,
                            18: 0,
                            19: 2,
                            20: 4,
                            21: 9,
                            22: 21,
                            23: 3,
                            24: 29,
                            25: 29,
                            26: 29,
                            27: 29,
                            28: 29,
                            29: 0,
                            30: 0,
                            31: 4,
                            32: 7,
                            33: 25,
                            34: 0,
                            35: 0,
                            36: 0,
                            37: 0,
                            38: 29,
                            39: 29,
                            40: 0,
                            41: 5,
                            42: 7,
                            43: 7,
                            44: 7,
                            45: 7,
                            46: 7,
                            47: 7,
                            48: 7,
                            49: 7,
                            50: 4,
                            51: 24,
                            52: 23,
                            53: 7,
                            54: 7,
                            55: 7,
                            56: 7,
                            57: 27,
                            58: 7,
                            59: 4,
                            60: 4,
                            61: 4,
                            62: 4,
                            63: 26,
                            64: 9,
                            65: 9,
                            66: 9,
                            67: 13,
                            68: 13,
                            69: 11,
                            70: 10,
                            71: 12,
                            72: 17,
                            73: 16,
                            74: 14,
                            75: 15,
                            76: 18,
                            77: 19,
                            78: 20,
                            79: 22,
                            80: 30,
                            81: 0,
                            82: 0,
                            83: 0,
                            84: 4,
                            85: 28,
                            86: 28,
                            87: 28,
                            88: 0,
                            89: 0,
                            90: 0,
                            91: 0,
                            92: 0,
                            93: 0,
                            94: 0,
                            128: 0,
                            129: 0,
                            130: 0,
                            131: 0,
                            132: 0,
                            133: 0,
                            134: 0,
                            135: 7,
                            136: 4,
                            137: 26,
                            138: 0,
                            139: 0,
                            140: 0,
                            141: 0,
                            142: 0,
                            143: 28,
                            144: 0,
                            145: 0,
                            146: 0,
                            147: 0,
                            148: 6,
                            149: 0,
                            150: 0,
                            151: 0
                        }, ot = {
                            1078: "af",
                            1052: "sq",
                            1156: "gsw",
                            1118: "am",
                            5121: "ar-DZ",
                            15361: "ar-BH",
                            3073: "ar",
                            2049: "ar-IQ",
                            11265: "ar-JO",
                            13313: "ar-KW",
                            12289: "ar-LB",
                            4097: "ar-LY",
                            6145: "ary",
                            8193: "ar-OM",
                            16385: "ar-QA",
                            1025: "ar-SA",
                            10241: "ar-SY",
                            7169: "aeb",
                            14337: "ar-AE",
                            9217: "ar-YE",
                            1067: "hy",
                            1101: "as",
                            2092: "az-Cyrl",
                            1068: "az",
                            1133: "ba",
                            1069: "eu",
                            1059: "be",
                            2117: "bn",
                            1093: "bn-IN",
                            8218: "bs-Cyrl",
                            5146: "bs",
                            1150: "br",
                            1026: "bg",
                            1027: "ca",
                            3076: "zh-HK",
                            5124: "zh-MO",
                            2052: "zh",
                            4100: "zh-SG",
                            1028: "zh-TW",
                            1155: "co",
                            1050: "hr",
                            4122: "hr-BA",
                            1029: "cs",
                            1030: "da",
                            1164: "prs",
                            1125: "dv",
                            2067: "nl-BE",
                            1043: "nl",
                            3081: "en-AU",
                            10249: "en-BZ",
                            4105: "en-CA",
                            9225: "en-029",
                            16393: "en-IN",
                            6153: "en-IE",
                            8201: "en-JM",
                            17417: "en-MY",
                            5129: "en-NZ",
                            13321: "en-PH",
                            18441: "en-SG",
                            7177: "en-ZA",
                            11273: "en-TT",
                            2057: "en-GB",
                            1033: "en",
                            12297: "en-ZW",
                            1061: "et",
                            1080: "fo",
                            1124: "fil",
                            1035: "fi",
                            2060: "fr-BE",
                            3084: "fr-CA",
                            1036: "fr",
                            5132: "fr-LU",
                            6156: "fr-MC",
                            4108: "fr-CH",
                            1122: "fy",
                            1110: "gl",
                            1079: "ka",
                            3079: "de-AT",
                            1031: "de",
                            5127: "de-LI",
                            4103: "de-LU",
                            2055: "de-CH",
                            1032: "el",
                            1135: "kl",
                            1095: "gu",
                            1128: "ha",
                            1037: "he",
                            1081: "hi",
                            1038: "hu",
                            1039: "is",
                            1136: "ig",
                            1057: "id",
                            1117: "iu",
                            2141: "iu-Latn",
                            2108: "ga",
                            1076: "xh",
                            1077: "zu",
                            1040: "it",
                            2064: "it-CH",
                            1041: "ja",
                            1099: "kn",
                            1087: "kk",
                            1107: "km",
                            1158: "quc",
                            1159: "rw",
                            1089: "sw",
                            1111: "kok",
                            1042: "ko",
                            1088: "ky",
                            1108: "lo",
                            1062: "lv",
                            1063: "lt",
                            2094: "dsb",
                            1134: "lb",
                            1071: "mk",
                            2110: "ms-BN",
                            1086: "ms",
                            1100: "ml",
                            1082: "mt",
                            1153: "mi",
                            1146: "arn",
                            1102: "mr",
                            1148: "moh",
                            1104: "mn",
                            2128: "mn-CN",
                            1121: "ne",
                            1044: "nb",
                            2068: "nn",
                            1154: "oc",
                            1096: "or",
                            1123: "ps",
                            1045: "pl",
                            1046: "pt",
                            2070: "pt-PT",
                            1094: "pa",
                            1131: "qu-BO",
                            2155: "qu-EC",
                            3179: "qu",
                            1048: "ro",
                            1047: "rm",
                            1049: "ru",
                            9275: "smn",
                            4155: "smj-NO",
                            5179: "smj",
                            3131: "se-FI",
                            1083: "se",
                            2107: "se-SE",
                            8251: "sms",
                            6203: "sma-NO",
                            7227: "sms",
                            1103: "sa",
                            7194: "sr-Cyrl-BA",
                            3098: "sr",
                            6170: "sr-Latn-BA",
                            2074: "sr-Latn",
                            1132: "nso",
                            1074: "tn",
                            1115: "si",
                            1051: "sk",
                            1060: "sl",
                            11274: "es-AR",
                            16394: "es-BO",
                            13322: "es-CL",
                            9226: "es-CO",
                            5130: "es-CR",
                            7178: "es-DO",
                            12298: "es-EC",
                            17418: "es-SV",
                            4106: "es-GT",
                            18442: "es-HN",
                            2058: "es-MX",
                            19466: "es-NI",
                            6154: "es-PA",
                            15370: "es-PY",
                            10250: "es-PE",
                            20490: "es-PR",
                            3082: "es",
                            1034: "es",
                            21514: "es-US",
                            14346: "es-UY",
                            8202: "es-VE",
                            2077: "sv-FI",
                            1053: "sv",
                            1114: "syr",
                            1064: "tg",
                            2143: "tzm",
                            1097: "ta",
                            1092: "tt",
                            1098: "te",
                            1054: "th",
                            1105: "bo",
                            1055: "tr",
                            1090: "tk",
                            1152: "ug",
                            1058: "uk",
                            1070: "hsb",
                            1056: "ur",
                            2115: "uz-Cyrl",
                            1091: "uz",
                            1066: "vi",
                            1106: "cy",
                            1160: "wo",
                            1157: "sah",
                            1144: "ii",
                            1130: "yo"
                        };
                        var nt = "utf-16", st = {
                            0: "macintosh",
                            1: "x-mac-japanese",
                            2: "x-mac-chinesetrad",
                            3: "x-mac-korean",
                            6: "x-mac-greek",
                            7: "x-mac-cyrillic",
                            9: "x-mac-devanagai",
                            10: "x-mac-gurmukhi",
                            11: "x-mac-gujarati",
                            12: "x-mac-oriya",
                            13: "x-mac-bengali",
                            14: "x-mac-tamil",
                            15: "x-mac-telugu",
                            16: "x-mac-kannada",
                            17: "x-mac-malayalam",
                            18: "x-mac-sinhalese",
                            19: "x-mac-burmese",
                            20: "x-mac-khmer",
                            21: "x-mac-thai",
                            22: "x-mac-lao",
                            23: "x-mac-georgian",
                            24: "x-mac-armenian",
                            25: "x-mac-chinesesimp",
                            26: "x-mac-tibetan",
                            27: "x-mac-mongolian",
                            28: "x-mac-ethiopic",
                            29: "x-mac-ce",
                            30: "x-mac-vietnamese",
                            31: "x-mac-extarabic"
                        }, it = {
                            15: "x-mac-icelandic",
                            17: "x-mac-turkish",
                            18: "x-mac-croatian",
                            24: "x-mac-ce",
                            25: "x-mac-ce",
                            26: "x-mac-ce",
                            27: "x-mac-ce",
                            28: "x-mac-ce",
                            30: "x-mac-icelandic",
                            37: "x-mac-romanian",
                            38: "x-mac-ce",
                            39: "x-mac-ce",
                            40: "x-mac-ce",
                            143: "x-mac-inuit",
                            146: "x-mac-gaelic"
                        };
                        function at(e1, t, r) {
                            switch(e1){
                                case 0:
                                    return nt;
                                case 1:
                                    return it[r] || st[t];
                                case 3:
                                    if (1 === t || 10 === t) return nt;
                            }
                        }
                        function lt(e1) {
                            var t, r = {};
                            for(t in e1)r[e1[t]] = parseInt(t);
                            return r;
                        }
                        function ut(e1, t, r, o, n, s) {
                            return new S.Record("NameRecord", [
                                {
                                    name: "platformID",
                                    type: "USHORT",
                                    value: e1
                                },
                                {
                                    name: "encodingID",
                                    type: "USHORT",
                                    value: t
                                },
                                {
                                    name: "languageID",
                                    type: "USHORT",
                                    value: r
                                },
                                {
                                    name: "nameID",
                                    type: "USHORT",
                                    value: o
                                },
                                {
                                    name: "length",
                                    type: "USHORT",
                                    value: n
                                },
                                {
                                    name: "offset",
                                    type: "USHORT",
                                    value: s
                                }
                            ]);
                        }
                        function ct(e1, t) {
                            if ((r = function(e1, t) {
                                var r = e1.length, o = t.length - r + 1;
                                e: for(var n = 0; n < o; n++)for(; n < o; n++){
                                    for(var s = 0; s < r; s++)if (t[n + s] !== e1[s]) continue e;
                                    return n;
                                }
                                return -1;
                            }(e1, t)) < 0) for(var r = t.length, o = 0, n = e1.length; o < n; ++o)t.push(e1[o]);
                            return r;
                        }
                        var dt = {
                            parse: function(e1, t, r) {
                                for(var o = {}, n = new R.Parser(e1, t), t = n.parseUShort(), s = n.parseUShort(), i = n.offset + n.parseUShort(), a = 0; a < s; a++){
                                    var l = n.parseUShort(), u = n.parseUShort(), c = n.parseUShort(), d = n.parseUShort(), d = et[d] || d, f = n.parseUShort(), h = n.parseUShort(), p = function(e1, t, r) {
                                        switch(e1){
                                            case 0:
                                                if (65535 === t) return "und";
                                                if (r) return r[t];
                                                break;
                                            case 1:
                                                return tt[t];
                                            case 3:
                                                return ot[t];
                                        }
                                    }(l, c, r), l = at(l, u, c);
                                    void 0 !== l && void 0 !== p && (u = void 0, (u = l === nt ? m.UTF16(e1, i + h, f) : m.MACSTRING(e1, i + h, f, l)) && ((c = void 0 === (c = o[d]) ? o[d] = {} : c)[p] = u));
                                }
                                return 1 === t && n.parseUShort(), o;
                            },
                            make: function(e1, t) {
                                var r, o = [], n = {}, s = lt(et);
                                for(r in e1){
                                    var i = s[r];
                                    if (void 0 === i && (i = r), f = parseInt(i), isNaN(f)) throw new Error('Name table entry "' + r + '" does not exist, see nameTableNames for complete list.');
                                    n[f] = e1[r], o.push(f);
                                }
                                for(var a = lt(tt), l = lt(ot), u = [], c = [], d = 0; d < o.length; d++){
                                    var f, h, p = n[f = o[d]];
                                    for(h in p){
                                        var m = p[h], y = 1, g = a[h], v = rt[g], b = at(y, v, g), b = w.MACSTRING(m, b), j = (void 0 === b && (y = 0, (g = t.indexOf(h)) < 0 && (g = t.length, t.push(h)), v = 4, b = w.UTF16(m)), ct(b, c)), y = (u.push(ut(y, v, g, f, b.length, j)), l[h]);
                                        void 0 !== y && (g = ct(v = w.UTF16(m), c), u.push(ut(3, 1, y, f, v.length, g)));
                                    }
                                }
                                u.sort(function(e1, t) {
                                    return e1.platformID - t.platformID || e1.encodingID - t.encodingID || e1.languageID - t.languageID || e1.nameID - t.nameID;
                                });
                                for(var _ = new S.Table("name", [
                                    {
                                        name: "format",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "count",
                                        type: "USHORT",
                                        value: u.length
                                    },
                                    {
                                        name: "stringOffset",
                                        type: "USHORT",
                                        value: 6 + 12 * u.length
                                    }
                                ]), x = 0; x < u.length; x++)_.fields.push({
                                    name: "record_" + x,
                                    type: "RECORD",
                                    value: u[x]
                                });
                                return _.fields.push({
                                    name: "strings",
                                    type: "LITERAL",
                                    value: c
                                }), _;
                            }
                        }, ft = [
                            {
                                begin: 0,
                                end: 127
                            },
                            {
                                begin: 128,
                                end: 255
                            },
                            {
                                begin: 256,
                                end: 383
                            },
                            {
                                begin: 384,
                                end: 591
                            },
                            {
                                begin: 592,
                                end: 687
                            },
                            {
                                begin: 688,
                                end: 767
                            },
                            {
                                begin: 768,
                                end: 879
                            },
                            {
                                begin: 880,
                                end: 1023
                            },
                            {
                                begin: 11392,
                                end: 11519
                            },
                            {
                                begin: 1024,
                                end: 1279
                            },
                            {
                                begin: 1328,
                                end: 1423
                            },
                            {
                                begin: 1424,
                                end: 1535
                            },
                            {
                                begin: 42240,
                                end: 42559
                            },
                            {
                                begin: 1536,
                                end: 1791
                            },
                            {
                                begin: 1984,
                                end: 2047
                            },
                            {
                                begin: 2304,
                                end: 2431
                            },
                            {
                                begin: 2432,
                                end: 2559
                            },
                            {
                                begin: 2560,
                                end: 2687
                            },
                            {
                                begin: 2688,
                                end: 2815
                            },
                            {
                                begin: 2816,
                                end: 2943
                            },
                            {
                                begin: 2944,
                                end: 3071
                            },
                            {
                                begin: 3072,
                                end: 3199
                            },
                            {
                                begin: 3200,
                                end: 3327
                            },
                            {
                                begin: 3328,
                                end: 3455
                            },
                            {
                                begin: 3584,
                                end: 3711
                            },
                            {
                                begin: 3712,
                                end: 3839
                            },
                            {
                                begin: 4256,
                                end: 4351
                            },
                            {
                                begin: 6912,
                                end: 7039
                            },
                            {
                                begin: 4352,
                                end: 4607
                            },
                            {
                                begin: 7680,
                                end: 7935
                            },
                            {
                                begin: 7936,
                                end: 8191
                            },
                            {
                                begin: 8192,
                                end: 8303
                            },
                            {
                                begin: 8304,
                                end: 8351
                            },
                            {
                                begin: 8352,
                                end: 8399
                            },
                            {
                                begin: 8400,
                                end: 8447
                            },
                            {
                                begin: 8448,
                                end: 8527
                            },
                            {
                                begin: 8528,
                                end: 8591
                            },
                            {
                                begin: 8592,
                                end: 8703
                            },
                            {
                                begin: 8704,
                                end: 8959
                            },
                            {
                                begin: 8960,
                                end: 9215
                            },
                            {
                                begin: 9216,
                                end: 9279
                            },
                            {
                                begin: 9280,
                                end: 9311
                            },
                            {
                                begin: 9312,
                                end: 9471
                            },
                            {
                                begin: 9472,
                                end: 9599
                            },
                            {
                                begin: 9600,
                                end: 9631
                            },
                            {
                                begin: 9632,
                                end: 9727
                            },
                            {
                                begin: 9728,
                                end: 9983
                            },
                            {
                                begin: 9984,
                                end: 10175
                            },
                            {
                                begin: 12288,
                                end: 12351
                            },
                            {
                                begin: 12352,
                                end: 12447
                            },
                            {
                                begin: 12448,
                                end: 12543
                            },
                            {
                                begin: 12544,
                                end: 12591
                            },
                            {
                                begin: 12592,
                                end: 12687
                            },
                            {
                                begin: 43072,
                                end: 43135
                            },
                            {
                                begin: 12800,
                                end: 13055
                            },
                            {
                                begin: 13056,
                                end: 13311
                            },
                            {
                                begin: 44032,
                                end: 55215
                            },
                            {
                                begin: 55296,
                                end: 57343
                            },
                            {
                                begin: 67840,
                                end: 67871
                            },
                            {
                                begin: 19968,
                                end: 40959
                            },
                            {
                                begin: 57344,
                                end: 63743
                            },
                            {
                                begin: 12736,
                                end: 12783
                            },
                            {
                                begin: 64256,
                                end: 64335
                            },
                            {
                                begin: 64336,
                                end: 65023
                            },
                            {
                                begin: 65056,
                                end: 65071
                            },
                            {
                                begin: 65040,
                                end: 65055
                            },
                            {
                                begin: 65104,
                                end: 65135
                            },
                            {
                                begin: 65136,
                                end: 65279
                            },
                            {
                                begin: 65280,
                                end: 65519
                            },
                            {
                                begin: 65520,
                                end: 65535
                            },
                            {
                                begin: 3840,
                                end: 4095
                            },
                            {
                                begin: 1792,
                                end: 1871
                            },
                            {
                                begin: 1920,
                                end: 1983
                            },
                            {
                                begin: 3456,
                                end: 3583
                            },
                            {
                                begin: 4096,
                                end: 4255
                            },
                            {
                                begin: 4608,
                                end: 4991
                            },
                            {
                                begin: 5024,
                                end: 5119
                            },
                            {
                                begin: 5120,
                                end: 5759
                            },
                            {
                                begin: 5760,
                                end: 5791
                            },
                            {
                                begin: 5792,
                                end: 5887
                            },
                            {
                                begin: 6016,
                                end: 6143
                            },
                            {
                                begin: 6144,
                                end: 6319
                            },
                            {
                                begin: 10240,
                                end: 10495
                            },
                            {
                                begin: 40960,
                                end: 42127
                            },
                            {
                                begin: 5888,
                                end: 5919
                            },
                            {
                                begin: 66304,
                                end: 66351
                            },
                            {
                                begin: 66352,
                                end: 66383
                            },
                            {
                                begin: 66560,
                                end: 66639
                            },
                            {
                                begin: 118784,
                                end: 119039
                            },
                            {
                                begin: 119808,
                                end: 120831
                            },
                            {
                                begin: 1044480,
                                end: 1048573
                            },
                            {
                                begin: 65024,
                                end: 65039
                            },
                            {
                                begin: 917504,
                                end: 917631
                            },
                            {
                                begin: 6400,
                                end: 6479
                            },
                            {
                                begin: 6480,
                                end: 6527
                            },
                            {
                                begin: 6528,
                                end: 6623
                            },
                            {
                                begin: 6656,
                                end: 6687
                            },
                            {
                                begin: 11264,
                                end: 11359
                            },
                            {
                                begin: 11568,
                                end: 11647
                            },
                            {
                                begin: 19904,
                                end: 19967
                            },
                            {
                                begin: 43008,
                                end: 43055
                            },
                            {
                                begin: 65536,
                                end: 65663
                            },
                            {
                                begin: 65856,
                                end: 65935
                            },
                            {
                                begin: 66432,
                                end: 66463
                            },
                            {
                                begin: 66464,
                                end: 66527
                            },
                            {
                                begin: 66640,
                                end: 66687
                            },
                            {
                                begin: 66688,
                                end: 66735
                            },
                            {
                                begin: 67584,
                                end: 67647
                            },
                            {
                                begin: 68096,
                                end: 68191
                            },
                            {
                                begin: 119552,
                                end: 119647
                            },
                            {
                                begin: 73728,
                                end: 74751
                            },
                            {
                                begin: 119648,
                                end: 119679
                            },
                            {
                                begin: 7040,
                                end: 7103
                            },
                            {
                                begin: 7168,
                                end: 7247
                            },
                            {
                                begin: 7248,
                                end: 7295
                            },
                            {
                                begin: 43136,
                                end: 43231
                            },
                            {
                                begin: 43264,
                                end: 43311
                            },
                            {
                                begin: 43312,
                                end: 43359
                            },
                            {
                                begin: 43520,
                                end: 43615
                            },
                            {
                                begin: 65936,
                                end: 65999
                            },
                            {
                                begin: 66e3,
                                end: 66047
                            },
                            {
                                begin: 66208,
                                end: 66271
                            },
                            {
                                begin: 127024,
                                end: 127135
                            }
                        ];
                        var ht = {
                            parse: function(e1, t) {
                                var r = {}, o = new R.Parser(e1, t);
                                r.version = o.parseUShort(), r.xAvgCharWidth = o.parseShort(), r.usWeightClass = o.parseUShort(), r.usWidthClass = o.parseUShort(), r.fsType = o.parseUShort(), r.ySubscriptXSize = o.parseShort(), r.ySubscriptYSize = o.parseShort(), r.ySubscriptXOffset = o.parseShort(), r.ySubscriptYOffset = o.parseShort(), r.ySuperscriptXSize = o.parseShort(), r.ySuperscriptYSize = o.parseShort(), r.ySuperscriptXOffset = o.parseShort(), r.ySuperscriptYOffset = o.parseShort(), r.yStrikeoutSize = o.parseShort(), r.yStrikeoutPosition = o.parseShort(), r.sFamilyClass = o.parseShort(), r.panose = [];
                                for(var n = 0; n < 10; n++)r.panose[n] = o.parseByte();
                                return r.ulUnicodeRange1 = o.parseULong(), r.ulUnicodeRange2 = o.parseULong(), r.ulUnicodeRange3 = o.parseULong(), r.ulUnicodeRange4 = o.parseULong(), r.achVendID = String.fromCharCode(o.parseByte(), o.parseByte(), o.parseByte(), o.parseByte()), r.fsSelection = o.parseUShort(), r.usFirstCharIndex = o.parseUShort(), r.usLastCharIndex = o.parseUShort(), r.sTypoAscender = o.parseShort(), r.sTypoDescender = o.parseShort(), r.sTypoLineGap = o.parseShort(), r.usWinAscent = o.parseUShort(), r.usWinDescent = o.parseUShort(), 1 <= r.version && (r.ulCodePageRange1 = o.parseULong(), r.ulCodePageRange2 = o.parseULong()), 2 <= r.version && (r.sxHeight = o.parseShort(), r.sCapHeight = o.parseShort(), r.usDefaultChar = o.parseUShort(), r.usBreakChar = o.parseUShort(), r.usMaxContent = o.parseUShort()), r;
                            },
                            make: function(e1) {
                                return new S.Table("OS/2", [
                                    {
                                        name: "version",
                                        type: "USHORT",
                                        value: 3
                                    },
                                    {
                                        name: "xAvgCharWidth",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usWeightClass",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usWidthClass",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "fsType",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "ySubscriptXSize",
                                        type: "SHORT",
                                        value: 650
                                    },
                                    {
                                        name: "ySubscriptYSize",
                                        type: "SHORT",
                                        value: 699
                                    },
                                    {
                                        name: "ySubscriptXOffset",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "ySubscriptYOffset",
                                        type: "SHORT",
                                        value: 140
                                    },
                                    {
                                        name: "ySuperscriptXSize",
                                        type: "SHORT",
                                        value: 650
                                    },
                                    {
                                        name: "ySuperscriptYSize",
                                        type: "SHORT",
                                        value: 699
                                    },
                                    {
                                        name: "ySuperscriptXOffset",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "ySuperscriptYOffset",
                                        type: "SHORT",
                                        value: 479
                                    },
                                    {
                                        name: "yStrikeoutSize",
                                        type: "SHORT",
                                        value: 49
                                    },
                                    {
                                        name: "yStrikeoutPosition",
                                        type: "SHORT",
                                        value: 258
                                    },
                                    {
                                        name: "sFamilyClass",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "bFamilyType",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bSerifStyle",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bWeight",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bProportion",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bContrast",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bStrokeVariation",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bArmStyle",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bLetterform",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bMidline",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bXHeight",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "ulUnicodeRange1",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "ulUnicodeRange2",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "ulUnicodeRange3",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "ulUnicodeRange4",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "achVendID",
                                        type: "CHARARRAY",
                                        value: "XXXX"
                                    },
                                    {
                                        name: "fsSelection",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usFirstCharIndex",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usLastCharIndex",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "sTypoAscender",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "sTypoDescender",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "sTypoLineGap",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usWinAscent",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usWinDescent",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "ulCodePageRange1",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "ulCodePageRange2",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "sxHeight",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "sCapHeight",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usDefaultChar",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usBreakChar",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usMaxContext",
                                        type: "USHORT",
                                        value: 0
                                    }
                                ], e1);
                            },
                            unicodeRanges: ft,
                            getUnicodeRange: function(e1) {
                                for(var t = 0; t < ft.length; t += 1){
                                    var r = ft[t];
                                    if (e1 >= r.begin && e1 < r.end) return t;
                                }
                                return -1;
                            }
                        };
                        var pt = {
                            parse: function(e1, t) {
                                var r = {}, o = new R.Parser(e1, t);
                                switch(r.version = o.parseVersion(), r.italicAngle = o.parseFixed(), r.underlinePosition = o.parseShort(), r.underlineThickness = o.parseShort(), r.isFixedPitch = o.parseULong(), r.minMemType42 = o.parseULong(), r.maxMemType42 = o.parseULong(), r.minMemType1 = o.parseULong(), r.maxMemType1 = o.parseULong(), r.version){
                                    case 1:
                                        r.names = c.slice();
                                        break;
                                    case 2:
                                        r.numberOfGlyphs = o.parseUShort(), r.glyphNameIndex = new Array(r.numberOfGlyphs);
                                        for(var n = 0; n < r.numberOfGlyphs; n++)r.glyphNameIndex[n] = o.parseUShort();
                                        r.names = [];
                                        for(var s, i = 0; i < r.numberOfGlyphs; i++)r.glyphNameIndex[i] >= c.length && (s = o.parseChar(), r.names.push(o.parseString(s)));
                                        break;
                                    case 2.5:
                                        r.numberOfGlyphs = o.parseUShort(), r.offset = new Array(r.numberOfGlyphs);
                                        for(var a = 0; a < r.numberOfGlyphs; a++)r.offset[a] = o.parseChar();
                                }
                                return r;
                            },
                            make: function() {
                                return new S.Table("post", [
                                    {
                                        name: "version",
                                        type: "FIXED",
                                        value: 196608
                                    },
                                    {
                                        name: "italicAngle",
                                        type: "FIXED",
                                        value: 0
                                    },
                                    {
                                        name: "underlinePosition",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "underlineThickness",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "isFixedPitch",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "minMemType42",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "maxMemType42",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "minMemType1",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "maxMemType1",
                                        type: "ULONG",
                                        value: 0
                                    }
                                ]);
                            }
                        }, o = new Array(9), s = (o[1] = function() {
                            var e1 = this.offset + this.relativeOffset, t = this.parseUShort();
                            return 1 === t ? {
                                substFormat: 1,
                                coverage: this.parsePointer(u.coverage),
                                deltaGlyphId: this.parseUShort()
                            } : 2 === t ? {
                                substFormat: 2,
                                coverage: this.parsePointer(u.coverage),
                                substitute: this.parseOffset16List()
                            } : void L.assert(!1, "0x" + e1.toString(16) + ": lookup type 1 format must be 1 or 2.");
                        }, o[2] = function() {
                            var e1 = this.parseUShort();
                            return L.argument(1 === e1, "GSUB Multiple Substitution Subtable identifier-format must be 1"), {
                                substFormat: e1,
                                coverage: this.parsePointer(u.coverage),
                                sequences: this.parseListOfLists()
                            };
                        }, o[3] = function() {
                            var e1 = this.parseUShort();
                            return L.argument(1 === e1, "GSUB Alternate Substitution Subtable identifier-format must be 1"), {
                                substFormat: e1,
                                coverage: this.parsePointer(u.coverage),
                                alternateSets: this.parseListOfLists()
                            };
                        }, o[4] = function() {
                            var e1 = this.parseUShort();
                            return L.argument(1 === e1, "GSUB ligature table identifier-format must be 1"), {
                                substFormat: e1,
                                coverage: this.parsePointer(u.coverage),
                                ligatureSets: this.parseListOfLists(function() {
                                    return {
                                        ligGlyph: this.parseUShort(),
                                        components: this.parseUShortList(this.parseUShort() - 1)
                                    };
                                })
                            };
                        }, {
                            sequenceIndex: u.uShort,
                            lookupListIndex: u.uShort
                        });
                        o[5] = function() {
                            var e1, t, r = this.offset + this.relativeOffset, o = this.parseUShort();
                            return 1 === o ? {
                                substFormat: o,
                                coverage: this.parsePointer(u.coverage),
                                ruleSets: this.parseListOfLists(function() {
                                    var e1 = this.parseUShort(), t = this.parseUShort();
                                    return {
                                        input: this.parseUShortList(e1 - 1),
                                        lookupRecords: this.parseRecordList(t, s)
                                    };
                                })
                            } : 2 === o ? {
                                substFormat: o,
                                coverage: this.parsePointer(u.coverage),
                                classDef: this.parsePointer(u.classDef),
                                classSets: this.parseListOfLists(function() {
                                    var e1 = this.parseUShort(), t = this.parseUShort();
                                    return {
                                        classes: this.parseUShortList(e1 - 1),
                                        lookupRecords: this.parseRecordList(t, s)
                                    };
                                })
                            } : 3 === o ? (e1 = this.parseUShort(), t = this.parseUShort(), {
                                substFormat: o,
                                coverages: this.parseList(e1, u.pointer(u.coverage)),
                                lookupRecords: this.parseRecordList(t, s)
                            }) : void L.assert(!1, "0x" + r.toString(16) + ": lookup type 5 format must be 1, 2 or 3.");
                        }, o[6] = function() {
                            var e1 = this.offset + this.relativeOffset, t = this.parseUShort();
                            return 1 === t ? {
                                substFormat: 1,
                                coverage: this.parsePointer(u.coverage),
                                chainRuleSets: this.parseListOfLists(function() {
                                    return {
                                        backtrack: this.parseUShortList(),
                                        input: this.parseUShortList(this.parseShort() - 1),
                                        lookahead: this.parseUShortList(),
                                        lookupRecords: this.parseRecordList(s)
                                    };
                                })
                            } : 2 === t ? {
                                substFormat: 2,
                                coverage: this.parsePointer(u.coverage),
                                backtrackClassDef: this.parsePointer(u.classDef),
                                inputClassDef: this.parsePointer(u.classDef),
                                lookaheadClassDef: this.parsePointer(u.classDef),
                                chainClassSet: this.parseListOfLists(function() {
                                    return {
                                        backtrack: this.parseUShortList(),
                                        input: this.parseUShortList(this.parseShort() - 1),
                                        lookahead: this.parseUShortList(),
                                        lookupRecords: this.parseRecordList(s)
                                    };
                                })
                            } : 3 === t ? {
                                substFormat: 3,
                                backtrackCoverage: this.parseList(u.pointer(u.coverage)),
                                inputCoverage: this.parseList(u.pointer(u.coverage)),
                                lookaheadCoverage: this.parseList(u.pointer(u.coverage)),
                                lookupRecords: this.parseRecordList(s)
                            } : void L.assert(!1, "0x" + e1.toString(16) + ": lookup type 6 format must be 1, 2 or 3.");
                        }, o[7] = function() {
                            var e1 = this.parseUShort(), e1 = (L.argument(1 === e1, "GSUB Extension Substitution subtable identifier-format must be 1"), this.parseUShort()), t = new u(this.data, this.offset + this.parseULong());
                            return {
                                substFormat: 1,
                                lookupType: e1,
                                extension: o[e1].call(t)
                            };
                        }, o[8] = function() {
                            var e1 = this.parseUShort();
                            return L.argument(1 === e1, "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"), {
                                substFormat: e1,
                                coverage: this.parsePointer(u.coverage),
                                backtrackCoverage: this.parseList(u.pointer(u.coverage)),
                                lookaheadCoverage: this.parseList(u.pointer(u.coverage)),
                                substitutes: this.parseUShortList()
                            };
                        };
                        var mt = new Array(9);
                        mt[1] = function(e1) {
                            return 1 === e1.substFormat ? new S.Table("substitutionTable", [
                                {
                                    name: "substFormat",
                                    type: "USHORT",
                                    value: 1
                                },
                                {
                                    name: "coverage",
                                    type: "TABLE",
                                    value: new S.Coverage(e1.coverage)
                                },
                                {
                                    name: "deltaGlyphID",
                                    type: "USHORT",
                                    value: e1.deltaGlyphId
                                }
                            ]) : new S.Table("substitutionTable", [
                                {
                                    name: "substFormat",
                                    type: "USHORT",
                                    value: 2
                                },
                                {
                                    name: "coverage",
                                    type: "TABLE",
                                    value: new S.Coverage(e1.coverage)
                                }
                            ].concat(S.ushortList("substitute", e1.substitute)));
                        }, mt[3] = function(e1) {
                            return L.assert(1 === e1.substFormat, "Lookup type 3 substFormat must be 1."), new S.Table("substitutionTable", [
                                {
                                    name: "substFormat",
                                    type: "USHORT",
                                    value: 1
                                },
                                {
                                    name: "coverage",
                                    type: "TABLE",
                                    value: new S.Coverage(e1.coverage)
                                }
                            ].concat(S.tableList("altSet", e1.alternateSets, function(e1) {
                                return new S.Table("alternateSetTable", S.ushortList("alternate", e1));
                            })));
                        }, mt[4] = function(e1) {
                            return L.assert(1 === e1.substFormat, "Lookup type 4 substFormat must be 1."), new S.Table("substitutionTable", [
                                {
                                    name: "substFormat",
                                    type: "USHORT",
                                    value: 1
                                },
                                {
                                    name: "coverage",
                                    type: "TABLE",
                                    value: new S.Coverage(e1.coverage)
                                }
                            ].concat(S.tableList("ligSet", e1.ligatureSets, function(e1) {
                                return new S.Table("ligatureSetTable", S.tableList("ligature", e1, function(e1) {
                                    return new S.Table("ligatureTable", [
                                        {
                                            name: "ligGlyph",
                                            type: "USHORT",
                                            value: e1.ligGlyph
                                        }
                                    ].concat(S.ushortList("component", e1.components, e1.components.length + 1)));
                                }));
                            })));
                        };
                        var yt = {
                            parse: function(e1, t) {
                                return t = (e1 = new u(e1, t = t || 0)).parseVersion(1), L.argument(1 === t || 1.1 === t, "Unsupported GSUB table version."), 1 === t ? {
                                    version: t,
                                    scripts: e1.parseScriptList(),
                                    features: e1.parseFeatureList(),
                                    lookups: e1.parseLookupList(o)
                                } : {
                                    version: t,
                                    scripts: e1.parseScriptList(),
                                    features: e1.parseFeatureList(),
                                    lookups: e1.parseLookupList(o),
                                    variations: e1.parseFeatureVariationsList()
                                };
                            },
                            make: function(e1) {
                                return new S.Table("GSUB", [
                                    {
                                        name: "version",
                                        type: "ULONG",
                                        value: 65536
                                    },
                                    {
                                        name: "scripts",
                                        type: "TABLE",
                                        value: new S.ScriptList(e1.scripts)
                                    },
                                    {
                                        name: "features",
                                        type: "TABLE",
                                        value: new S.FeatureList(e1.features)
                                    },
                                    {
                                        name: "lookups",
                                        type: "TABLE",
                                        value: new S.LookupList(e1.lookups, mt)
                                    }
                                ]);
                            }
                        };
                        var gt = {
                            parse: function(e1, t) {
                                for(var r = new R.Parser(e1, t), o = r.parseULong(), n = (L.argument(1 === o, "Unsupported META table version."), r.parseULong(), r.parseULong(), r.parseULong()), s = {}, i = 0; i < n; i++){
                                    var a = r.parseTag(), l = r.parseULong(), u = r.parseULong(), l = m.UTF8(e1, t + l, u);
                                    s[a] = l;
                                }
                                return s;
                            },
                            make: function(e1) {
                                var t, r = Object.keys(e1).length, o = "", n = 16 + 12 * r, s = new S.Table("meta", [
                                    {
                                        name: "version",
                                        type: "ULONG",
                                        value: 1
                                    },
                                    {
                                        name: "flags",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "offset",
                                        type: "ULONG",
                                        value: n
                                    },
                                    {
                                        name: "numTags",
                                        type: "ULONG",
                                        value: r
                                    }
                                ]);
                                for(t in e1){
                                    var i = o.length;
                                    o += e1[t], s.fields.push({
                                        name: "tag " + t,
                                        type: "TAG",
                                        value: t
                                    }), s.fields.push({
                                        name: "offset " + t,
                                        type: "ULONG",
                                        value: n + i
                                    }), s.fields.push({
                                        name: "length " + t,
                                        type: "ULONG",
                                        value: e1[t].length
                                    });
                                }
                                return s.fields.push({
                                    name: "stringPool",
                                    type: "CHARARRAY",
                                    value: o
                                }), s;
                            }
                        };
                        function vt(e1) {
                            return Math.log(e1) / Math.log(2) | 0;
                        }
                        function bt(e1) {
                            for(; e1.length % 4 != 0;)e1.push(0);
                            for(var t = 0, r = 0; r < e1.length; r += 4)t += (e1[r] << 24) + (e1[r + 1] << 16) + (e1[r + 2] << 8) + e1[r + 3];
                            return t %= Math.pow(2, 32);
                        }
                        function jt(e1, t, r, o) {
                            return new S.Record("Table Record", [
                                {
                                    name: "tag",
                                    type: "TAG",
                                    value: void 0 !== e1 ? e1 : ""
                                },
                                {
                                    name: "checkSum",
                                    type: "ULONG",
                                    value: void 0 !== t ? t : 0
                                },
                                {
                                    name: "offset",
                                    type: "ULONG",
                                    value: void 0 !== r ? r : 0
                                },
                                {
                                    name: "length",
                                    type: "ULONG",
                                    value: void 0 !== o ? o : 0
                                }
                            ]);
                        }
                        function _t(e1) {
                            for(var t = new S.Table("sfnt", [
                                {
                                    name: "version",
                                    type: "TAG",
                                    value: "OTTO"
                                },
                                {
                                    name: "numTables",
                                    type: "USHORT",
                                    value: 0
                                },
                                {
                                    name: "searchRange",
                                    type: "USHORT",
                                    value: 0
                                },
                                {
                                    name: "entrySelector",
                                    type: "USHORT",
                                    value: 0
                                },
                                {
                                    name: "rangeShift",
                                    type: "USHORT",
                                    value: 0
                                }
                            ]), r = (t.tables = e1, t.numTables = e1.length, Math.pow(2, vt(t.numTables))), o = (t.searchRange = 16 * r, t.entrySelector = vt(r), t.rangeShift = 16 * t.numTables - t.searchRange, []), n = [], s = t.sizeOf() + jt().sizeOf() * t.numTables; s % 4 != 0;)s += 1, n.push({
                                name: "padding",
                                type: "BYTE",
                                value: 0
                            });
                            for(var i = 0; i < e1.length; i += 1){
                                var a = e1[i], l = (L.argument(4 === a.tableName.length, "Table name" + a.tableName + " is invalid."), a.sizeOf()), u = jt(a.tableName, bt(a.encode()), s, l);
                                for(o.push({
                                    name: u.tag + " Table Record",
                                    type: "RECORD",
                                    value: u
                                }), n.push({
                                    name: a.tableName + " table",
                                    type: "RECORD",
                                    value: a
                                }), s += l, L.argument(!isNaN(s), "Something went wrong calculating the offset."); s % 4 != 0;)s += 1, n.push({
                                    name: "padding",
                                    type: "BYTE",
                                    value: 0
                                });
                            }
                            return o.sort(function(e1, t) {
                                return e1.value.tag > t.value.tag ? 1 : -1;
                            }), t.fields = t.fields.concat(o), t.fields = t.fields.concat(n), t;
                        }
                        function xt(e1, t, r) {
                            for(var o = 0; o < t.length; o += 1){
                                var n = e1.charToGlyphIndex(t[o]);
                                if (0 < n) return e1.glyphs.get(n).getMetrics();
                            }
                            return r;
                        }
                        var wt = {
                            make: _t,
                            fontToTable: function(e1) {
                                for(var t, r = [], o = [], n = [], s = [], i = [], a = [], l = [], u = 0, c = 0, d = 0, f = 0, h = 0, p = 0; p < e1.glyphs.length; p += 1){
                                    var m = e1.glyphs.get(p), y = 0 | m.unicode;
                                    if (isNaN(m.advanceWidth)) throw new Error("Glyph " + m.name + " (" + p + "): advanceWidth is not a number.");
                                    (y < t || void 0 === t) && 0 < y && (t = y), u < y && (u = y);
                                    var y = ht.getUnicodeRange(y);
                                    if (y < 32) c |= 1 << y;
                                    else if (y < 64) d |= 1 << y - 32;
                                    else if (y < 96) f |= 1 << y - 64;
                                    else {
                                        if (!(y < 123)) throw new Error("Unicode ranges bits > 123 are reserved for internal usage");
                                        h |= 1 << y - 96;
                                    }
                                    ".notdef" !== m.name && (y = m.getMetrics(), r.push(y.xMin), o.push(y.yMin), n.push(y.xMax), s.push(y.yMax), a.push(y.leftSideBearing), l.push(y.rightSideBearing), i.push(m.advanceWidth));
                                }
                                var g, v = {
                                    xMin: Math.min.apply(null, r),
                                    yMin: Math.min.apply(null, o),
                                    xMax: Math.max.apply(null, n),
                                    yMax: Math.max.apply(null, s),
                                    advanceWidthMax: Math.max.apply(null, i),
                                    advanceWidthAvg: function(e1) {
                                        for(var t = 0, r = 0; r < e1.length; r += 1)t += e1[r];
                                        return t / e1.length;
                                    }(i),
                                    minLeftSideBearing: Math.min.apply(null, a),
                                    maxLeftSideBearing: Math.max.apply(null, a),
                                    minRightSideBearing: Math.min.apply(null, l)
                                }, b = (v.ascender = e1.ascender, v.descender = e1.descender, Ze.make({
                                    flags: 3,
                                    unitsPerEm: e1.unitsPerEm,
                                    xMin: v.xMin,
                                    yMin: v.yMin,
                                    xMax: v.xMax,
                                    yMax: v.yMax,
                                    lowestRecPPEM: 3,
                                    createdTimestamp: e1.createdTimestamp
                                })), j = Qe.make({
                                    ascender: v.ascender,
                                    descender: v.descender,
                                    advanceWidthMax: v.advanceWidthMax,
                                    minLeftSideBearing: v.minLeftSideBearing,
                                    minRightSideBearing: v.minRightSideBearing,
                                    xMaxExtent: v.maxLeftSideBearing + (v.xMax - v.xMin),
                                    numberOfHMetrics: e1.glyphs.length
                                }), _ = $e.make(e1.glyphs.length), x = ht.make({
                                    xAvgCharWidth: Math.round(v.advanceWidthAvg),
                                    usWeightClass: e1.tables.os2.usWeightClass,
                                    usWidthClass: e1.tables.os2.usWidthClass,
                                    usFirstCharIndex: t,
                                    usLastCharIndex: u,
                                    ulUnicodeRange1: c,
                                    ulUnicodeRange2: d,
                                    ulUnicodeRange3: f,
                                    ulUnicodeRange4: h,
                                    fsSelection: e1.tables.os2.fsSelection,
                                    sTypoAscender: v.ascender,
                                    sTypoDescender: v.descender,
                                    sTypoLineGap: 0,
                                    usWinAscent: v.yMax,
                                    usWinDescent: Math.abs(v.yMin),
                                    ulCodePageRange1: 1,
                                    sxHeight: xt(e1, "xyvw", {
                                        yMax: Math.round(v.ascender / 2)
                                    }).yMax,
                                    sCapHeight: xt(e1, "HIKLEFJMNTZBDPRAGOQSUVWXY", v).yMax,
                                    usDefaultChar: e1.hasChar(" ") ? 32 : 0,
                                    usBreakChar: e1.hasChar(" ") ? 32 : 0
                                }), w = Je.make(e1.glyphs), S = we.make(e1.glyphs), E = e1.getEnglishName("fontFamily"), M = e1.getEnglishName("fontSubfamily"), T = E + " " + M, k = (k = e1.getEnglishName("postScriptName")) || E.replace(/\s/g, "") + "-" + M, O = {};
                                for(g in e1.names)O[g] = e1.names[g];
                                O.uniqueID || (O.uniqueID = {
                                    en: e1.getEnglishName("manufacturer") + ":" + T
                                }), O.postScriptName || (O.postScriptName = {
                                    en: k
                                }), O.preferredFamily || (O.preferredFamily = e1.names.fontFamily), O.preferredSubfamily || (O.preferredSubfamily = e1.names.fontSubfamily);
                                var C = [], A = dt.make(O, C), C = 0 < C.length ? Ke.make(C) : void 0, P = pt.make(), T = Ye.make(e1.glyphs, {
                                    version: e1.getEnglishName("version"),
                                    fullName: T,
                                    familyName: E,
                                    weightName: M,
                                    postScriptName: k,
                                    unitsPerEm: e1.unitsPerEm,
                                    fontBBox: [
                                        0,
                                        v.yMin,
                                        v.ascender,
                                        v.advanceWidthMax
                                    ]
                                }), E = e1.metas && 0 < Object.keys(e1.metas).length ? gt.make(e1.metas) : void 0, M = [
                                    b,
                                    j,
                                    _,
                                    x,
                                    A,
                                    S,
                                    P,
                                    T,
                                    w
                                ];
                                C && M.push(C), e1.tables.gsub && M.push(yt.make(e1.tables.gsub)), E && M.push(E);
                                for(var D = bt((k = _t(M)).encode()), L = k.fields, R = !1, I = 0; I < L.length; I += 1)if ("head table" === L[I].name) {
                                    L[I].value.checkSumAdjustment = 2981146554 - D, R = !0;
                                    break;
                                }
                                if (R) return k;
                                throw new Error("Could not find head table with checkSum to adjust.");
                            },
                            computeCheckSum: bt
                        };
                        function St(e1, t) {
                            for(var r = 0, o = e1.length - 1; r <= o;){
                                var n = r + o >>> 1, s = e1[n].tag;
                                if (s === t) return n;
                                s < t ? r = 1 + n : o = n - 1;
                            }
                            return -r - 1;
                        }
                        function Et(e1, t) {
                            for(var r = 0, o = e1.length - 1; r <= o;){
                                var n = r + o >>> 1, s = e1[n];
                                if (s === t) return n;
                                s < t ? r = 1 + n : o = n - 1;
                            }
                            return -r - 1;
                        }
                        function Mt(e1, t) {
                            for(var r = 0, o = e1.length - 1; r <= o;){
                                var n, s = r + o >>> 1, i = (n = e1[s]).start;
                                if (i === t) return n;
                                i < t ? r = 1 + s : o = s - 1;
                            }
                            if (0 < r) return t > (n = e1[r - 1]).end ? 0 : n;
                        }
                        function Tt(e1, t) {
                            this.font = e1, this.tableName = t;
                        }
                        function kt(e1) {
                            Tt.call(this, e1, "gpos");
                        }
                        function i(e1) {
                            Tt.call(this, e1, "gsub");
                        }
                        function Ot(e1, t, r) {
                            for(var o = e1.subtables, n = 0; n < o.length; n++){
                                var s = o[n];
                                if (s.substFormat === t) return s;
                            }
                            if (r) return o.push(r), r;
                        }
                        function Ct(e1) {
                            for(var t = new ArrayBuffer(e1.length), r = new Uint8Array(t), o = 0; o < e1.length; ++o)r[o] = e1[o];
                            return t;
                        }
                        function _(e1, t) {
                            if (!e1) throw t;
                        }
                        function At(e1, t, r, o, n) {
                            var s = 0 < (t & o) ? (s = e1.parseByte(), r + (s = 0 == (t & n) ? -s : s)) : 0 < (t & n) ? r : r + e1.parseShort();
                            return s;
                        }
                        function Pt(e1, t, r) {
                            var o, n = new R.Parser(t, r);
                            if (e1.numberOfContours = n.parseShort(), e1._xMin = n.parseShort(), e1._yMin = n.parseShort(), e1._xMax = n.parseShort(), e1._yMax = n.parseShort(), 0 < e1.numberOfContours) {
                                for(var s = e1.endPointIndices = [], i = 0; i < e1.numberOfContours; i += 1)s.push(n.parseUShort());
                                e1.instructionLength = n.parseUShort(), e1.instructions = [];
                                for(var a = 0; a < e1.instructionLength; a += 1)e1.instructions.push(n.parseByte());
                                for(var l = s[s.length - 1] + 1, u = [], c = 0; c < l; c += 1)if (o = n.parseByte(), u.push(o), 0 < (8 & o)) for(var d = n.parseByte(), f = 0; f < d; f += 1)u.push(o), c += 1;
                                if (L.argument(u.length === l, "Bad flags."), 0 < s.length) {
                                    var h, p = [];
                                    if (0 < l) {
                                        for(var m = 0; m < l; m += 1)o = u[m], (h = {}).onCurve = !!(1 & o), h.lastPointOfContour = 0 <= s.indexOf(m), p.push(h);
                                        for(var y = 0, g = 0; g < l; g += 1)o = u[g], (h = p[g]).x = At(n, o, y, 2, 16), y = h.x;
                                        for(var v = 0, b = 0; b < l; b += 1)o = u[b], (h = p[b]).y = At(n, o, v, 4, 32), v = h.y;
                                    }
                                    e1.points = p;
                                } else e1.points = [];
                            } else if (0 === e1.numberOfContours) e1.points = [];
                            else {
                                e1.isComposite = !0, e1.points = [], e1.components = [];
                                for(var j = !0; j;){
                                    u = n.parseUShort();
                                    var _ = {
                                        glyphIndex: n.parseUShort(),
                                        xScale: 1,
                                        scale01: 0,
                                        scale10: 0,
                                        yScale: 1,
                                        dx: 0,
                                        dy: 0
                                    };
                                    0 < (1 & u) ? 0 < (2 & u) ? (_.dx = n.parseShort(), _.dy = n.parseShort()) : _.matchedPoints = [
                                        n.parseUShort(),
                                        n.parseUShort()
                                    ] : 0 < (2 & u) ? (_.dx = n.parseChar(), _.dy = n.parseChar()) : _.matchedPoints = [
                                        n.parseByte(),
                                        n.parseByte()
                                    ], 0 < (8 & u) ? _.xScale = _.yScale = n.parseF2Dot14() : 0 < (64 & u) ? (_.xScale = n.parseF2Dot14(), _.yScale = n.parseF2Dot14()) : 0 < (128 & u) && (_.xScale = n.parseF2Dot14(), _.scale01 = n.parseF2Dot14(), _.scale10 = n.parseF2Dot14(), _.yScale = n.parseF2Dot14()), e1.components.push(_), j = !!(32 & u);
                                }
                                if (256 & u) {
                                    e1.instructionLength = n.parseUShort(), e1.instructions = [];
                                    for(var x = 0; x < e1.instructionLength; x += 1)e1.instructions.push(n.parseByte());
                                }
                            }
                        }
                        function Lt(e1, t) {
                            for(var r = [], o = 0; o < e1.length; o += 1){
                                var n = e1[o], n = {
                                    x: t.xScale * n.x + t.scale01 * n.y + t.dx,
                                    y: t.scale10 * n.x + t.yScale * n.y + t.dy,
                                    onCurve: n.onCurve,
                                    lastPointOfContour: n.lastPointOfContour
                                };
                                r.push(n);
                            }
                            return r;
                        }
                        function Rt(e1) {
                            var t = new f;
                            if (e1) for(var r = function(e1) {
                                for(var t = [], r = [], o = 0; o < e1.length; o += 1){
                                    var n = e1[o];
                                    r.push(n), n.lastPointOfContour && (t.push(r), r = []);
                                }
                                return L.argument(0 === r.length, "There are still points left in the current contour."), t;
                            }(e1), o = 0; o < r.length; ++o){
                                var n, s = r[o], i = s[s.length - 1], a = s[0];
                                i.onCurve ? t.moveTo(i.x, i.y) : a.onCurve ? t.moveTo(a.x, a.y) : (n = {
                                    x: .5 * (i.x + a.x),
                                    y: .5 * (i.y + a.y)
                                }, t.moveTo(n.x, n.y));
                                for(var l = 0; l < s.length; ++l){
                                    var u, c = i, i = a, a = s[(l + 1) % s.length];
                                    i.onCurve ? t.lineTo(i.x, i.y) : (u = a, c.onCurve || (i.x, c.x, i.y, c.y), a.onCurve || (u = {
                                        x: .5 * (i.x + a.x),
                                        y: .5 * (i.y + a.y)
                                    }), t.quadraticCurveTo(i.x, i.y, u.x, u.y));
                                }
                                t.closePath();
                            }
                            return t;
                        }
                        function It(e1, t) {
                            if (t.isComposite) for(var r = 0; r < t.components.length; r += 1){
                                var o = t.components[r], n = e1.get(o.glyphIndex);
                                if (n.getPath(), n.points) {
                                    var s = void 0;
                                    if (void 0 === o.matchedPoints) s = Lt(n.points, o);
                                    else {
                                        if (o.matchedPoints[0] > t.points.length - 1 || o.matchedPoints[1] > n.points.length - 1) throw Error("Matched points out of range in " + t.name);
                                        var i = t.points[o.matchedPoints[0]], a = n.points[o.matchedPoints[1]], o = {
                                            xScale: o.xScale,
                                            scale01: o.scale01,
                                            scale10: o.scale10,
                                            yScale: o.yScale,
                                            dx: 0,
                                            dy: 0
                                        }, a = Lt([
                                            a
                                        ], o)[0];
                                        o.dx = i.x - a.x, o.dy = i.y - a.y, s = Lt(n.points, o);
                                    }
                                    t.points = t.points.concat(s);
                                }
                            }
                            return Rt(t.points);
                        }
                        (kt.prototype = Tt.prototype = {
                            searchTag: St,
                            binSearch: Et,
                            getTable: function(e1) {
                                var t = this.font.tables[this.tableName];
                                return t = !t && e1 ? this.font.tables[this.tableName] = this.createDefaultTable() : t;
                            },
                            getScriptNames: function() {
                                var e1 = this.getTable();
                                return e1 ? e1.scripts.map(function(e1) {
                                    return e1.tag;
                                }) : [];
                            },
                            getDefaultScriptName: function() {
                                var e1 = this.getTable();
                                if (e1) {
                                    for(var t = !1, r = 0; r < e1.scripts.length; r++){
                                        var o = e1.scripts[r].tag;
                                        if ("DFLT" === o) return o;
                                        "latn" === o && (t = !0);
                                    }
                                    return t ? "latn" : void 0;
                                }
                            },
                            getScriptTable: function(e1, t) {
                                var r, o = this.getTable(t);
                                if (o) return r = o.scripts, 0 <= (o = St(o.scripts, e1 = e1 || "DFLT")) ? r[o].script : t ? (r.splice(-1 - o, 0, t = {
                                    tag: e1,
                                    script: {
                                        defaultLangSys: {
                                            reserved: 0,
                                            reqFeatureIndex: 65535,
                                            featureIndexes: []
                                        },
                                        langSysRecords: []
                                    }
                                }), t.script) : void 0;
                            },
                            getLangSysTable: function(e1, t, r) {
                                var o, e1 = this.getScriptTable(e1, r);
                                if (e1) return t && "dflt" !== t && "DFLT" !== t ? 0 <= (o = St(e1.langSysRecords, t)) ? e1.langSysRecords[o].langSys : r ? (e1.langSysRecords.splice(-1 - o, 0, r = {
                                    tag: t,
                                    langSys: {
                                        reserved: 0,
                                        reqFeatureIndex: 65535,
                                        featureIndexes: []
                                    }
                                }), r.langSys) : void 0 : e1.defaultLangSys;
                            },
                            getFeatureTable: function(e1, t, r, o) {
                                e1 = this.getLangSysTable(e1, t, o);
                                if (e1) {
                                    for(var n, s = e1.featureIndexes, i = this.font.tables[this.tableName].features, a = 0; a < s.length; a++)if ((n = i[s[a]]).tag === r) return n.feature;
                                    if (o) return t = i.length, L.assert(0 === t || r >= i[t - 1].tag, "Features must be added in alphabetical order."), i.push(n = {
                                        tag: r,
                                        feature: {
                                            params: 0,
                                            lookupListIndexes: []
                                        }
                                    }), s.push(t), n.feature;
                                }
                            },
                            getLookupTables: function(e1, t, r, o, n) {
                                var e1 = this.getFeatureTable(e1, t, r, n), s = [];
                                if (e1) {
                                    for(var i, a = e1.lookupListIndexes, l = this.font.tables[this.tableName].lookups, u = 0; u < a.length; u++)(i = l[a[u]]).lookupType === o && s.push(i);
                                    if (0 === s.length && n) return t = l.length, l.push(i = {
                                        lookupType: o,
                                        lookupFlag: 0,
                                        subtables: [],
                                        markFilteringSet: void 0
                                    }), a.push(t), [
                                        i
                                    ];
                                }
                                return s;
                            },
                            getGlyphClass: function(e1, t) {
                                switch(e1.format){
                                    case 1:
                                        return e1.startGlyph <= t && t < e1.startGlyph + e1.classes.length ? e1.classes[t - e1.startGlyph] : 0;
                                    case 2:
                                        var r = Mt(e1.ranges, t);
                                        return r ? r.classId : 0;
                                }
                            },
                            getCoverageIndex: function(e1, t) {
                                switch(e1.format){
                                    case 1:
                                        var r = Et(e1.glyphs, t);
                                        return 0 <= r ? r : -1;
                                    case 2:
                                        r = Mt(e1.ranges, t);
                                        return r ? r.index + t - r.start : -1;
                                }
                            },
                            expandCoverage: function(e1) {
                                if (1 === e1.format) return e1.glyphs;
                                for(var t = [], r = e1.ranges, o = 0; o < r.length; o++)for(var n = r[o], s = n.start, i = n.end, a = s; a <= i; a++)t.push(a);
                                return t;
                            }
                        }).init = function() {
                            var e1 = this.getDefaultScriptName();
                            this.defaultKerningTables = this.getKerningTables(e1);
                        }, kt.prototype.getKerningValue = function(e1, t, r) {
                            for(var o = 0; o < e1.length; o++)for(var n = e1[o].subtables, s = 0; s < n.length; s++){
                                var i = n[s], a = this.getCoverageIndex(i.coverage, t);
                                if (!(a < 0)) switch(i.posFormat){
                                    case 1:
                                        for(var l = i.pairSets[a], u = 0; u < l.length; u++){
                                            var c = l[u];
                                            if (c.secondGlyph === r) return c.value1 && c.value1.xAdvance || 0;
                                        }
                                        break;
                                    case 2:
                                        var d = this.getGlyphClass(i.classDef1, t), f = this.getGlyphClass(i.classDef2, r), d = i.classRecords[d][f];
                                        return d.value1 && d.value1.xAdvance || 0;
                                }
                            }
                            return 0;
                        }, kt.prototype.getKerningTables = function(e1, t) {
                            if (this.font.tables.gpos) return this.getLookupTables(e1, t, "kern", 2);
                        }, (i.prototype = Tt.prototype).createDefaultTable = function() {
                            return {
                                version: 1,
                                scripts: [
                                    {
                                        tag: "DFLT",
                                        script: {
                                            defaultLangSys: {
                                                reserved: 0,
                                                reqFeatureIndex: 65535,
                                                featureIndexes: []
                                            },
                                            langSysRecords: []
                                        }
                                    }
                                ],
                                features: [],
                                lookups: []
                            };
                        }, i.prototype.getSingle = function(e1, t, r) {
                            for(var o = [], n = this.getLookupTables(t, r, e1, 1), s = 0; s < n.length; s++)for(var i = n[s].subtables, a = 0; a < i.length; a++){
                                var l = i[a], u = this.expandCoverage(l.coverage), c = void 0;
                                if (1 === l.substFormat) for(var d = l.deltaGlyphId, c = 0; c < u.length; c++){
                                    var f = u[c];
                                    o.push({
                                        sub: f,
                                        by: f + d
                                    });
                                }
                                else {
                                    var h = l.substitute;
                                    for(c = 0; c < u.length; c++)o.push({
                                        sub: u[c],
                                        by: h[c]
                                    });
                                }
                            }
                            return o;
                        }, i.prototype.getAlternates = function(e1, t, r) {
                            for(var o = [], n = this.getLookupTables(t, r, e1, 3), s = 0; s < n.length; s++)for(var i = n[s].subtables, a = 0; a < i.length; a++)for(var l = i[a], u = this.expandCoverage(l.coverage), c = l.alternateSets, d = 0; d < u.length; d++)o.push({
                                sub: u[d],
                                by: c[d]
                            });
                            return o;
                        }, i.prototype.getLigatures = function(e1, t, r) {
                            for(var o = [], n = this.getLookupTables(t, r, e1, 4), s = 0; s < n.length; s++)for(var i = n[s].subtables, a = 0; a < i.length; a++)for(var l = i[a], u = this.expandCoverage(l.coverage), c = l.ligatureSets, d = 0; d < u.length; d++)for(var f = u[d], h = c[d], p = 0; p < h.length; p++){
                                var m = h[p];
                                o.push({
                                    sub: [
                                        f
                                    ].concat(m.components),
                                    by: m.ligGlyph
                                });
                            }
                            return o;
                        }, i.prototype.addSingle = function(e1, t, r, o) {
                            r = Ot(this.getLookupTables(r, o, e1, 1, !0)[0], 2, {
                                substFormat: 2,
                                coverage: {
                                    format: 1,
                                    glyphs: []
                                },
                                substitute: []
                            }), L.assert(1 === r.coverage.format, "Ligature: unable to modify coverage table format " + r.coverage.format), o = t.sub, e1 = this.binSearch(r.coverage.glyphs, o);
                            e1 < 0 && (r.coverage.glyphs.splice(e1 = -1 - e1, 0, o), r.substitute.splice(e1, 0, 0)), r.substitute[e1] = t.by;
                        }, i.prototype.addAlternate = function(e1, t, r, o) {
                            r = Ot(this.getLookupTables(r, o, e1, 3, !0)[0], 1, {
                                substFormat: 1,
                                coverage: {
                                    format: 1,
                                    glyphs: []
                                },
                                alternateSets: []
                            }), L.assert(1 === r.coverage.format, "Ligature: unable to modify coverage table format " + r.coverage.format), o = t.sub, e1 = this.binSearch(r.coverage.glyphs, o);
                            e1 < 0 && (r.coverage.glyphs.splice(e1 = -1 - e1, 0, o), r.alternateSets.splice(e1, 0, 0)), r.alternateSets[e1] = t.by;
                        }, i.prototype.addLigature = function(e1, t, r, o) {
                            var r = this.getLookupTables(r, o, e1, 4, !0)[0], o = r.subtables[0], e1 = (o || (r.subtables[0] = o = {
                                substFormat: 1,
                                coverage: {
                                    format: 1,
                                    glyphs: []
                                },
                                ligatureSets: []
                            }), L.assert(1 === o.coverage.format, "Ligature: unable to modify coverage table format " + o.coverage.format), t.sub[0]), n = t.sub.slice(1), r = {
                                ligGlyph: t.by,
                                components: n
                            }, t = this.binSearch(o.coverage.glyphs, e1);
                            if (0 <= t) {
                                for(var s = o.ligatureSets[t], i = 0; i < s.length; i++)if (function(e1, t) {
                                    var r = e1.length;
                                    if (r === t.length) {
                                        for(var o = 0; o < r; o++)if (e1[o] !== t[o]) return;
                                        return 1;
                                    }
                                }(s[i].components, n)) return;
                                s.push(r);
                            } else o.coverage.glyphs.splice(t = -1 - t, 0, e1), o.ligatureSets.splice(t, 0, [
                                r
                            ]);
                        }, i.prototype.getFeature = function(e1, t, r) {
                            if (/ss\d\d/.test(e1)) return this.getSingle(e1, t, r);
                            switch(e1){
                                case "aalt":
                                case "salt":
                                    return this.getSingle(e1, t, r).concat(this.getAlternates(e1, t, r));
                                case "dlig":
                                case "liga":
                                case "rlig":
                                    return this.getLigatures(e1, t, r);
                            }
                        }, i.prototype.add = function(e1, t, r, o) {
                            if (/ss\d\d/.test(e1)) return this.addSingle(e1, t, r, o);
                            switch(e1){
                                case "aalt":
                                case "salt":
                                    return "number" == typeof t.by ? this.addSingle(e1, t, r, o) : this.addAlternate(e1, t, r, o);
                                case "dlig":
                                case "liga":
                                case "rlig":
                                    return this.addLigature(e1, t, r, o);
                            }
                        };
                        var Dt = {
                            getPath: Rt,
                            parse: function(e1, t, r, o) {
                                for(var n = new p.GlyphSet(o), s = 0; s < r.length - 1; s += 1){
                                    var i = r[s];
                                    i !== r[s + 1] ? n.push(s, p.ttfGlyphLoader(o, s, Pt, e1, t + i, It)) : n.push(s, p.glyphLoader(o, s));
                                }
                                return n;
                            }
                        };
                        function Ft(e1) {
                            this.font = e1, this.getCommands = function(e1) {
                                return Dt.getPath(e1).commands;
                            }, this._fpgmState = this._prepState = void 0, this._errorState = 0;
                        }
                        function Ut(e1) {
                            return e1;
                        }
                        function Nt(e1) {
                            return Math.sign(e1) * Math.round(Math.abs(e1));
                        }
                        function Bt(e1) {
                            return Math.sign(e1) * Math.round(Math.abs(2 * e1)) / 2;
                        }
                        function Gt(e1) {
                            return Math.sign(e1) * (Math.round(Math.abs(e1) + .5) - .5);
                        }
                        function Vt(e1) {
                            return Math.sign(e1) * Math.ceil(Math.abs(e1));
                        }
                        function zt(e1) {
                            return Math.sign(e1) * Math.floor(Math.abs(e1));
                        }
                        function Ht(e1) {
                            var t = this.srPeriod, r = this.srPhase, o = 1;
                            return e1 < 0 && (e1 = -e1, o = -1), e1 += this.srThreshold - r, e1 = Math.trunc(e1 / t) * t, (e1 += r) < 0 ? r * o : e1 * o;
                        }
                        var x = {
                            x: 1,
                            y: 0,
                            axis: "x",
                            distance: function(e1, t, r, o) {
                                return (r ? e1.xo : e1.x) - (o ? t.xo : t.x);
                            },
                            interpolate: function(e1, t, r, o) {
                                var n, s, i, a, l, u, c;
                                if (!o || o === this) return n = e1.xo - t.xo, s = e1.xo - r.xo, l = t.x - t.xo, u = r.x - r.xo, 0 === (c = (i = Math.abs(n)) + (a = Math.abs(s))) ? void (e1.x = e1.xo + (l + u) / 2) : void (e1.x = e1.xo + (l * a + u * i) / c);
                                n = o.distance(e1, t, !0, !0), s = o.distance(e1, r, !0, !0), l = o.distance(t, t, !1, !0), u = o.distance(r, r, !1, !0), 0 === (c = (i = Math.abs(n)) + (a = Math.abs(s))) ? x.setRelative(e1, e1, (l + u) / 2, o, !0) : x.setRelative(e1, e1, (l * a + u * i) / c, o, !0);
                            },
                            normalSlope: Number.NEGATIVE_INFINITY,
                            setRelative: function(e1, t, r, o, n) {
                                var s, i;
                                o && o !== this ? (s = n ? t.xo : t.x, i = n ? t.yo : t.y, s += r * o.x, i += r * o.y, e1.x = s + (e1.y - i) / o.normalSlope) : e1.x = (n ? t.xo : t.x) + r;
                            },
                            slope: 0,
                            touch: function(e1) {
                                e1.xTouched = !0;
                            },
                            touched: function(e1) {
                                return e1.xTouched;
                            },
                            untouch: function(e1) {
                                e1.xTouched = !1;
                            }
                        }, E = {
                            x: 0,
                            y: 1,
                            axis: "y",
                            distance: function(e1, t, r, o) {
                                return (r ? e1.yo : e1.y) - (o ? t.yo : t.y);
                            },
                            interpolate: function(e1, t, r, o) {
                                var n, s, i, a, l, u, c;
                                if (!o || o === this) return n = e1.yo - t.yo, s = e1.yo - r.yo, l = t.y - t.yo, u = r.y - r.yo, 0 === (c = (i = Math.abs(n)) + (a = Math.abs(s))) ? void (e1.y = e1.yo + (l + u) / 2) : void (e1.y = e1.yo + (l * a + u * i) / c);
                                n = o.distance(e1, t, !0, !0), s = o.distance(e1, r, !0, !0), l = o.distance(t, t, !1, !0), u = o.distance(r, r, !1, !0), 0 === (c = (i = Math.abs(n)) + (a = Math.abs(s))) ? E.setRelative(e1, e1, (l + u) / 2, o, !0) : E.setRelative(e1, e1, (l * a + u * i) / c, o, !0);
                            },
                            normalSlope: 0,
                            setRelative: function(e1, t, r, o, n) {
                                var s, i;
                                o && o !== this ? (s = n ? t.xo : t.x, i = n ? t.yo : t.y, s += r * o.x, i += r * o.y, e1.y = i + o.normalSlope * (e1.x - s)) : e1.y = (n ? t.yo : t.y) + r;
                            },
                            slope: Number.POSITIVE_INFINITY,
                            touch: function(e1) {
                                e1.yTouched = !0;
                            },
                            touched: function(e1) {
                                return e1.yTouched;
                            },
                            untouch: function(e1) {
                                e1.yTouched = !1;
                            }
                        };
                        function Wt(e1, t) {
                            this.x = e1, this.y = t, this.axis = void 0, this.slope = t / e1, this.normalSlope = -e1 / t, Object.freeze(this);
                        }
                        function qt(e1, t) {
                            var r = Math.sqrt(e1 * e1 + t * t);
                            return t /= r, 1 === (e1 /= r) && 0 === t ? x : 0 === e1 && 1 === t ? E : new Wt(e1, t);
                        }
                        function M(e1, t, r, o) {
                            this.x = this.xo = Math.round(64 * e1) / 64, this.y = this.yo = Math.round(64 * t) / 64, this.lastPointOfContour = r, this.onCurve = o, this.prevPointOnContour = void 0, this.nextPointOnContour = void 0, this.xTouched = !1, this.yTouched = !1, Object.preventExtensions(this);
                        }
                        Object.freeze(x), Object.freeze(E), Wt.prototype.distance = function(e1, t, r, o) {
                            return this.x * x.distance(e1, t, r, o) + this.y * E.distance(e1, t, r, o);
                        }, Wt.prototype.interpolate = function(e1, t, r, o) {
                            var n = o.distance(e1, t, !0, !0), s = o.distance(e1, r, !0, !0), t = o.distance(t, t, !1, !0), r = o.distance(r, r, !1, !0), n = Math.abs(n), s = Math.abs(s), i = n + s;
                            0 === i ? this.setRelative(e1, e1, (t + r) / 2, o, !0) : this.setRelative(e1, e1, (t * s + r * n) / i, o, !0);
                        }, Wt.prototype.setRelative = function(e1, t, r, o, n) {
                            var s = n ? t.xo : t.x, n = n ? t.yo : t.y, t = s + r * (o = o || this).x, s = n + r * o.y, n = o.normalSlope, r = this.slope, o = e1.x, i = e1.y;
                            e1.x = (r * o - n * t + s - i) / (r - n), e1.y = r * (e1.x - o) + i;
                        }, Wt.prototype.touch = function(e1) {
                            e1.xTouched = !0, e1.yTouched = !0;
                        }, M.prototype.nextTouched = function(e1) {
                            for(var t = this.nextPointOnContour; !e1.touched(t) && t !== this;)t = t.nextPointOnContour;
                            return t;
                        }, M.prototype.prevTouched = function(e1) {
                            for(var t = this.prevPointOnContour; !e1.touched(t) && t !== this;)t = t.prevPointOnContour;
                            return t;
                        };
                        var Xt = Object.freeze(new M(0, 0)), Yt = {
                            cvCutIn: 17 / 16,
                            deltaBase: 9,
                            deltaShift: .125,
                            loop: 1,
                            minDis: 1,
                            autoFlip: !0
                        };
                        function T(e1, t) {
                            switch(this.env = e1, this.stack = [], this.prog = t, e1){
                                case "glyf":
                                    this.zp0 = this.zp1 = this.zp2 = 1, this.rp0 = this.rp1 = this.rp2 = 0;
                                case "prep":
                                    this.fv = this.pv = this.dpv = x, this.round = Nt;
                            }
                        }
                        function Zt(e1) {
                            for(var t = e1.tZone = new Array(e1.gZone.length), r = 0; r < t.length; r++)t[r] = new M(0, 0);
                        }
                        function Qt(e1, t) {
                            var r, o = e1.prog, n = e1.ip, s = 1;
                            do {
                                if (88 === (r = o[++n])) s++;
                                else if (89 === r) s--;
                                else if (64 === r) n += o[n + 1] + 1;
                                else if (65 === r) n += 2 * o[n + 1] + 1;
                                else if (176 <= r && r <= 183) n += r - 176 + 1;
                                else if (184 <= r && r <= 191) n += 2 * (r - 184 + 1);
                                else if (t && 1 === s && 27 === r) break;
                            }while (0 < s);
                            e1.ip = n;
                        }
                        function Jt(e1, t) {
                            j.DEBUG && console.log(t.step, "SVTCA[" + e1.axis + "]"), t.fv = t.pv = t.dpv = e1;
                        }
                        function Kt(e1, t) {
                            j.DEBUG && console.log(t.step, "SPVTCA[" + e1.axis + "]"), t.pv = t.dpv = e1;
                        }
                        function $t(e1, t) {
                            j.DEBUG && console.log(t.step, "SFVTCA[" + e1.axis + "]"), t.fv = e1;
                        }
                        function er(e1, t) {
                            var r, o = t.stack, n = o.pop(), o = o.pop(), s = t.z2[n], i = t.z1[o];
                            j.DEBUG && console.log("SPVTL[" + e1 + "]", n, o), n = e1 ? (r = s.y - i.y, i.x - s.x) : (r = i.x - s.x, i.y - s.y), t.pv = t.dpv = qt(r, n);
                        }
                        function tr(e1, t) {
                            var r, o = t.stack, n = o.pop(), o = o.pop(), s = t.z2[n], i = t.z1[o];
                            j.DEBUG && console.log("SFVTL[" + e1 + "]", n, o), n = e1 ? (r = s.y - i.y, i.x - s.x) : (r = i.x - s.x, i.y - s.y), t.fv = qt(r, n);
                        }
                        function rr(e1) {
                            j.DEBUG && console.log(e1.step, "POP[]"), e1.stack.pop();
                        }
                        function or(e1, t) {
                            var r = t.stack.pop(), o = t.z0[r], n = t.fv, s = t.pv, i = (j.DEBUG && console.log(t.step, "MDAP[" + e1 + "]", r), s.distance(o, Xt));
                            e1 && (i = t.round(i)), n.setRelative(o, Xt, i, s), n.touch(o), t.rp0 = t.rp1 = r;
                        }
                        function nr(e1, t) {
                            var r, o, n, s = t.z2, i = s.length - 2;
                            j.DEBUG && console.log(t.step, "IUP[" + e1.axis + "]");
                            for(var a = 0; a < i; a++)r = s[a], e1.touched(r) || (o = r.prevTouched(e1)) !== r && (o === (n = r.nextTouched(e1)) && e1.setRelative(r, r, e1.distance(o, o, !1, !0), e1, !0), e1.interpolate(r, o, n, e1));
                        }
                        function sr(e1, t) {
                            for(var r = t.stack, o = e1 ? t.rp1 : t.rp2, n = (e1 ? t.z0 : t.z1)[o], s = t.fv, i = t.pv, a = t.loop, l = t.z2; a--;){
                                var u = r.pop(), c = l[u], d = i.distance(n, n, !1, !0);
                                s.setRelative(c, c, d, i), s.touch(c), j.DEBUG && console.log(t.step, (1 < t.loop ? "loop " + (t.loop - a) + ": " : "") + "SHP[" + (e1 ? "rp1" : "rp2") + "]", u);
                            }
                            t.loop = 1;
                        }
                        function ir(e1, t) {
                            for(var r = t.stack, o = e1 ? t.rp1 : t.rp2, n = (e1 ? t.z0 : t.z1)[o], s = t.fv, i = t.pv, o = r.pop(), a = t.z2[t.contours[o]], l = a, u = (j.DEBUG && console.log(t.step, "SHC[" + e1 + "]", o), i.distance(n, n, !1, !0)); l !== n && s.setRelative(l, l, u, i), (l = l.nextPointOnContour) !== a;);
                        }
                        function ar(e1, t) {
                            var r, o, n = t.stack, s = e1 ? t.rp1 : t.rp2, s = (e1 ? t.z0 : t.z1)[s], i = t.fv, a = t.pv, n = n.pop();
                            switch(j.DEBUG && console.log(t.step, "SHZ[" + e1 + "]", n), n){
                                case 0:
                                    r = t.tZone;
                                    break;
                                case 1:
                                    r = t.gZone;
                                    break;
                                default:
                                    throw new Error("Invalid zone");
                            }
                            for(var l = a.distance(s, s, !1, !0), u = r.length - 2, c = 0; c < u; c++)o = r[c], i.setRelative(o, o, l, a);
                        }
                        function lr(e1, t) {
                            var r = t.stack, o = r.pop() / 64, r = r.pop(), n = t.z1[r], s = t.z0[t.rp0], i = t.fv, a = t.pv;
                            i.setRelative(n, s, o, a), i.touch(n), j.DEBUG && console.log(t.step, "MSIRP[" + e1 + "]", o, r), t.rp1 = t.rp0, t.rp2 = r, e1 && (t.rp0 = r);
                        }
                        function ur(e1, t) {
                            var r = t.stack, o = r.pop(), r = r.pop(), n = t.z0[r], s = t.fv, i = t.pv, a = t.cvt[o], o = (j.DEBUG && console.log(t.step, "MIAP[" + e1 + "]", o, "(", a, ")", r), i.distance(n, Xt));
                            e1 && (Math.abs(o - a) < t.cvCutIn && (o = a), o = t.round(o)), s.setRelative(n, Xt, o, i), 0 === t.zp0 && (n.xo = n.x, n.yo = n.y), s.touch(n), t.rp0 = t.rp1 = r;
                        }
                        function cr(e1, t) {
                            var r = t.stack, o = r.pop(), n = t.z2[o];
                            j.DEBUG && console.log(t.step, "GC[" + e1 + "]", o), r.push(64 * t.dpv.distance(n, Xt, e1, !1));
                        }
                        function dr(e1, t) {
                            var r = t.stack, o = r.pop(), r = r.pop(), n = t.z1[o], s = t.z0[r], s = t.dpv.distance(s, n, e1, e1);
                            j.DEBUG && console.log(t.step, "MD[" + e1 + "]", o, r, "->", s), t.stack.push(Math.round(64 * s));
                        }
                        function fr(e1, t) {
                            var r = t.stack, o = r.pop(), n = t.fv, s = t.pv, i = t.ppem, a = t.deltaBase + 16 * (e1 - 1), l = t.deltaShift, u = t.z0;
                            j.DEBUG && console.log(t.step, "DELTAP[" + e1 + "]", o, r);
                            for(var c = 0; c < o; c++){
                                var d = r.pop(), f = r.pop();
                                a + ((240 & f) >> 4) === i && (0 <= (f = (15 & f) - 8) && f++, j.DEBUG && console.log(t.step, "DELTAPFIX", d, "by", f * l), d = u[d], n.setRelative(d, d, f * l, s));
                            }
                        }
                        function hr(e1, t) {
                            var r = t.stack, o = r.pop();
                            j.DEBUG && console.log(t.step, "ROUND[]"), r.push(64 * t.round(o / 64));
                        }
                        function pr(e1, t) {
                            var r = t.stack, o = r.pop(), n = t.ppem, s = t.deltaBase + 16 * (e1 - 1), i = t.deltaShift;
                            j.DEBUG && console.log(t.step, "DELTAC[" + e1 + "]", o, r);
                            for(var a = 0; a < o; a++){
                                var l = r.pop(), u = r.pop();
                                s + ((240 & u) >> 4) === n && (0 <= (u = (15 & u) - 8) && u++, u = u * i, j.DEBUG && console.log(t.step, "DELTACFIX", l, "by", u), t.cvt[l] += u);
                            }
                        }
                        function mr(e1, t) {
                            var r, o = t.stack, n = o.pop(), o = o.pop(), s = t.z2[n], i = t.z1[o];
                            j.DEBUG && console.log(t.step, "SDPVTL[" + e1 + "]", n, o), n = e1 ? (r = s.y - i.y, i.x - s.x) : (r = i.x - s.x, i.y - s.y), t.dpv = qt(r, n);
                        }
                        function k(e1, t) {
                            var r = t.stack, o = t.prog, n = t.ip;
                            j.DEBUG && console.log(t.step, "PUSHB[" + e1 + "]");
                            for(var s = 0; s < e1; s++)r.push(o[++n]);
                            t.ip = n;
                        }
                        function O(e1, t) {
                            var r = t.ip, o = t.prog, n = t.stack;
                            j.DEBUG && console.log(t.ip, "PUSHW[" + e1 + "]");
                            for(var s = 0; s < e1; s++){
                                var i = o[++r] << 8 | o[++r];
                                32768 & i && (i = -(1 + (65535 ^ i))), n.push(i);
                            }
                            t.ip = r;
                        }
                        function C(e1, t, r, o, n, s) {
                            var i, a, l = s.stack, u = e1 && l.pop(), l = l.pop(), c = s.rp0, c = s.z0[c], d = s.z1[l], f = s.minDis, h = s.fv, p = s.dpv, m = i = p.distance(d, c, !0, !0), y = 0 <= m ? 1 : -1;
                            m = Math.abs(m), e1 && (a = s.cvt[u], o && Math.abs(m - a) < s.cvCutIn && (m = a)), r && m < f && (m = f), o && (m = s.round(m)), h.setRelative(d, c, y * m, p), h.touch(d), j.DEBUG && console.log(s.step, (e1 ? "MIRP[" : "MDRP[") + (t ? "M" : "m") + (r ? ">" : "_") + (o ? "R" : "_") + (0 === n ? "Gr" : 1 === n ? "Bl" : 2 === n ? "Wh" : "") + "]", e1 ? u + "(" + s.cvt[u] + "," + a + ")" : "", l, "(d =", i, "->", y * m, ")"), s.rp1 = s.rp0, s.rp2 = l, t && (s.rp0 = l);
                        }
                        Ft.prototype.exec = function(e1, t) {
                            if ("number" != typeof t) throw new Error("Point size is not a number!");
                            if (!(2 < this._errorState)) {
                                var r = this.font, o = this._prepState;
                                if (!o || o.ppem !== t) {
                                    var n = this._fpgmState;
                                    if (!n) {
                                        T.prototype = Yt, (n = this._fpgmState = new T("fpgm", r.tables.fpgm)).funcs = [], n.font = r, j.DEBUG && (console.log("---EXEC FPGM---"), n.step = -1);
                                        try {
                                            vr(n);
                                        } catch (e1) {
                                            return console.log("Hinting error in FPGM:" + e1), void (this._errorState = 3);
                                        }
                                    }
                                    T.prototype = n, (o = this._prepState = new T("prep", r.tables.prep)).ppem = t;
                                    var s = r.tables.cvt;
                                    if (s) for(var i = o.cvt = new Array(s.length), a = t / r.unitsPerEm, l = 0; l < s.length; l++)i[l] = s[l] * a;
                                    else o.cvt = [];
                                    j.DEBUG && (console.log("---EXEC PREP---"), o.step = -1);
                                    try {
                                        vr(o);
                                    } catch (e1) {
                                        this._errorState < 2 && console.log("Hinting error in PREP:" + e1), this._errorState = 2;
                                    }
                                }
                                if (!(1 < this._errorState)) try {
                                    return yr(e1, o);
                                } catch (e1) {
                                    this._errorState < 1 && (console.log("Hinting error:" + e1), console.log("Note: further hinting errors are silenced")), this._errorState = 1;
                                }
                            }
                        };
                        var yr = function(e1, t) {
                            var r = t.ppem / t.font.unitsPerEm, o = r, n = e1.components;
                            if (T.prototype = t, n) {
                                for(var s = t.font, i = [], a = [], l = 0; l < n.length; l++){
                                    var u = n[l], c = s.glyphs.get(u.glyphIndex), d = new T("glyf", c.instructions);
                                    j.DEBUG && (console.log("---EXEC COMP " + l + "---"), d.step = -1), gr(c, d, r, o);
                                    for(var f = Math.round(u.dx * r), h = Math.round(u.dy * o), p = d.gZone, m = d.contours, y = 0; y < p.length; y++){
                                        var g = p[y];
                                        g.xTouched = g.yTouched = !1, g.xo = g.x = g.x + f, g.yo = g.y = g.y + h;
                                    }
                                    var v = i.length;
                                    i.push.apply(i, p);
                                    for(var b = 0; b < m.length; b++)a.push(m[b] + v);
                                }
                                e1.instructions && !d.inhibitGridFit && ((d = new T("glyf", e1.instructions)).gZone = d.z0 = d.z1 = d.z2 = i, d.contours = a, i.push(new M(0, 0), new M(Math.round(e1.advanceWidth * r), 0)), j.DEBUG && (console.log("---EXEC COMPOSITE---"), d.step = -1), vr(d), i.length -= 2);
                            } else d = new T("glyf", e1.instructions), j.DEBUG && (console.log("---EXEC GLYPH---"), d.step = -1), gr(e1, d, r, o), i = d.gZone;
                            return i;
                        }, gr = function(e1, t, r, o) {
                            for(var n, s, i, a = e1.points || [], l = a.length, u = t.gZone = t.z0 = t.z1 = t.z2 = [], c = t.contours = [], d = 0; d < l; d++)n = a[d], u[d] = new M(n.x * r, n.y * o, n.lastPointOfContour, n.onCurve);
                            for(var f = 0; f < l; f++)n = u[f], s || (s = n, c.push(f)), n.lastPointOfContour ? ((n.nextPointOnContour = s).prevPointOnContour = n, s = void 0) : (i = u[f + 1], (n.nextPointOnContour = i).prevPointOnContour = n);
                            if (!t.inhibitGridFit) {
                                if (j.DEBUG) {
                                    console.log("PROCESSING GLYPH", t.stack);
                                    for(var h = 0; h < l; h++)console.log(h, u[h].x, u[h].y);
                                }
                                if (u.push(new M(0, 0), new M(Math.round(e1.advanceWidth * r), 0)), vr(t), u.length -= 2, j.DEBUG) {
                                    console.log("FINISHED GLYPH", t.stack);
                                    for(var p = 0; p < l; p++)console.log(p, u[p].x, u[p].y);
                                }
                            }
                        }, vr = function(e1) {
                            var t = e1.prog;
                            if (t) {
                                var r, o = t.length;
                                for(e1.ip = 0; e1.ip < o; e1.ip++){
                                    if (j.DEBUG && e1.step++, !(r = br[t[e1.ip]])) throw new Error("unknown instruction: 0x" + Number(t[e1.ip]).toString(16));
                                    r(e1);
                                }
                            }
                        }, br = [
                            Jt.bind(void 0, E),
                            Jt.bind(void 0, x),
                            Kt.bind(void 0, E),
                            Kt.bind(void 0, x),
                            $t.bind(void 0, E),
                            $t.bind(void 0, x),
                            er.bind(void 0, 0),
                            er.bind(void 0, 1),
                            tr.bind(void 0, 0),
                            tr.bind(void 0, 1),
                            function(e1) {
                                var t = (r = e1.stack).pop(), r = r.pop();
                                j.DEBUG && console.log(e1.step, "SPVFS[]", t, r), e1.pv = e1.dpv = qt(r, t);
                            },
                            function(e1) {
                                var t = (r = e1.stack).pop(), r = r.pop();
                                j.DEBUG && console.log(e1.step, "SPVFS[]", t, r), e1.fv = qt(r, t);
                            },
                            function(e1) {
                                var t = e1.stack, r = e1.pv;
                                j.DEBUG && console.log(e1.step, "GPV[]"), t.push(16384 * r.x), t.push(16384 * r.y);
                            },
                            function(e1) {
                                var t = e1.stack, r = e1.fv;
                                j.DEBUG && console.log(e1.step, "GFV[]"), t.push(16384 * r.x), t.push(16384 * r.y);
                            },
                            function(e1) {
                                e1.fv = e1.pv, j.DEBUG && console.log(e1.step, "SFVTPV[]");
                            },
                            function(e1) {
                                var t = (s = e1.stack).pop(), r = s.pop(), o = s.pop(), n = s.pop(), s = s.pop(), i = e1.z0, a = e1.z1, l = i[t], i = i[r], u = a[o], a = a[n], e1 = e1.z2[s], t = (j.DEBUG && console.log("ISECT[], ", t, r, o, n, s), l.x), r = l.y, o = i.x, n = i.y, s = u.x, l = u.y, i = a.x, u = a.y, a = (t - o) * (l - u) - (r - n) * (s - i), c = t * n - r * o, d = s * u - l * i;
                                e1.x = (c * (s - i) - d * (t - o)) / a, e1.y = (c * (l - u) - d * (r - n)) / a;
                            },
                            function(e1) {
                                e1.rp0 = e1.stack.pop(), j.DEBUG && console.log(e1.step, "SRP0[]", e1.rp0);
                            },
                            function(e1) {
                                e1.rp1 = e1.stack.pop(), j.DEBUG && console.log(e1.step, "SRP1[]", e1.rp1);
                            },
                            function(e1) {
                                e1.rp2 = e1.stack.pop(), j.DEBUG && console.log(e1.step, "SRP2[]", e1.rp2);
                            },
                            function(e1) {
                                var t = e1.stack.pop();
                                switch(j.DEBUG && console.log(e1.step, "SZP0[]", t), e1.zp0 = t){
                                    case 0:
                                        e1.tZone || Zt(e1), e1.z0 = e1.tZone;
                                        break;
                                    case 1:
                                        e1.z0 = e1.gZone;
                                        break;
                                    default:
                                        throw new Error("Invalid zone pointer");
                                }
                            },
                            function(e1) {
                                var t = e1.stack.pop();
                                switch(j.DEBUG && console.log(e1.step, "SZP1[]", t), e1.zp1 = t){
                                    case 0:
                                        e1.tZone || Zt(e1), e1.z1 = e1.tZone;
                                        break;
                                    case 1:
                                        e1.z1 = e1.gZone;
                                        break;
                                    default:
                                        throw new Error("Invalid zone pointer");
                                }
                            },
                            function(e1) {
                                var t = e1.stack.pop();
                                switch(j.DEBUG && console.log(e1.step, "SZP2[]", t), e1.zp2 = t){
                                    case 0:
                                        e1.tZone || Zt(e1), e1.z2 = e1.tZone;
                                        break;
                                    case 1:
                                        e1.z2 = e1.gZone;
                                        break;
                                    default:
                                        throw new Error("Invalid zone pointer");
                                }
                            },
                            function(e1) {
                                var t = e1.stack.pop();
                                switch(j.DEBUG && console.log(e1.step, "SZPS[]", t), e1.zp0 = e1.zp1 = e1.zp2 = t){
                                    case 0:
                                        e1.tZone || Zt(e1), e1.z0 = e1.z1 = e1.z2 = e1.tZone;
                                        break;
                                    case 1:
                                        e1.z0 = e1.z1 = e1.z2 = e1.gZone;
                                        break;
                                    default:
                                        throw new Error("Invalid zone pointer");
                                }
                            },
                            function(e1) {
                                e1.loop = e1.stack.pop(), j.DEBUG && console.log(e1.step, "SLOOP[]", e1.loop);
                            },
                            function(e1) {
                                j.DEBUG && console.log(e1.step, "RTG[]"), e1.round = Nt;
                            },
                            function(e1) {
                                j.DEBUG && console.log(e1.step, "RTHG[]"), e1.round = Gt;
                            },
                            function(e1) {
                                var t = e1.stack.pop();
                                j.DEBUG && console.log(e1.step, "SMD[]", t), e1.minDis = t / 64;
                            },
                            function(e1) {
                                j.DEBUG && console.log(e1.step, "ELSE[]"), Qt(e1, !1);
                            },
                            function(e1) {
                                var t = e1.stack.pop();
                                j.DEBUG && console.log(e1.step, "JMPR[]", t), e1.ip += t - 1;
                            },
                            function(e1) {
                                var t = e1.stack.pop();
                                j.DEBUG && console.log(e1.step, "SCVTCI[]", t), e1.cvCutIn = t / 64;
                            },
                            void 0,
                            void 0,
                            function(e1) {
                                var t = e1.stack;
                                j.DEBUG && console.log(e1.step, "DUP[]"), t.push(t[t.length - 1]);
                            },
                            rr,
                            function(e1) {
                                j.DEBUG && console.log(e1.step, "CLEAR[]"), e1.stack.length = 0;
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "SWAP[]"), t.push(r), t.push(o);
                            },
                            function(e1) {
                                var t = e1.stack;
                                j.DEBUG && console.log(e1.step, "DEPTH[]"), t.push(t.length);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop();
                                j.DEBUG && console.log(e1.step, "CINDEX[]", r), t.push(t[t.length - r]);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop();
                                j.DEBUG && console.log(e1.step, "MINDEX[]", r), t.push(t.splice(t.length - r, 1)[0]);
                            },
                            void 0,
                            void 0,
                            void 0,
                            function(e1) {
                                var t = (o = e1.stack).pop(), r = o.pop(), o = (j.DEBUG && console.log(e1.step, "LOOPCALL[]", t, r), e1.ip), n = e1.prog;
                                e1.prog = e1.funcs[t];
                                for(var s = 0; s < r; s++)vr(e1), j.DEBUG && console.log(++e1.step, s + 1 < r ? "next loopcall" : "done loopcall", s);
                                e1.ip = o, e1.prog = n;
                            },
                            function(e1) {
                                var t = e1.stack.pop(), r = (j.DEBUG && console.log(e1.step, "CALL[]", t), e1.ip), o = e1.prog;
                                e1.prog = e1.funcs[t], vr(e1), e1.ip = r, e1.prog = o, j.DEBUG && console.log(++e1.step, "returning from", t);
                            },
                            function(e1) {
                                if ("fpgm" !== e1.env) throw new Error("FDEF not allowed here");
                                var t = e1.stack, r = e1.prog, o = e1.ip, t = t.pop(), n = o;
                                for(j.DEBUG && console.log(e1.step, "FDEF[]", t); 45 !== r[++o];);
                                e1.ip = o, e1.funcs[t] = r.slice(n + 1, o);
                            },
                            void 0,
                            or.bind(void 0, 0),
                            or.bind(void 0, 1),
                            nr.bind(void 0, E),
                            nr.bind(void 0, x),
                            sr.bind(void 0, 0),
                            sr.bind(void 0, 1),
                            ir.bind(void 0, 0),
                            ir.bind(void 0, 1),
                            ar.bind(void 0, 0),
                            ar.bind(void 0, 1),
                            function(e1) {
                                for(var t = e1.stack, r = e1.loop, o = e1.fv, n = t.pop() / 64, s = e1.z2; r--;){
                                    var i = t.pop(), a = s[i];
                                    j.DEBUG && console.log(e1.step, (1 < e1.loop ? "loop " + (e1.loop - r) + ": " : "") + "SHPIX[]", i, n), o.setRelative(a, a, n), o.touch(a);
                                }
                                e1.loop = 1;
                            },
                            function(e1) {
                                for(var t = e1.stack, r = e1.rp1, o = e1.rp2, n = e1.loop, s = e1.z0[r], i = e1.z1[o], a = e1.fv, l = e1.dpv, u = e1.z2; n--;){
                                    var c = t.pop(), d = u[c];
                                    j.DEBUG && console.log(e1.step, (1 < e1.loop ? "loop " + (e1.loop - n) + ": " : "") + "IP[]", c, r, "<->", o), a.interpolate(d, s, i, l), a.touch(d);
                                }
                                e1.loop = 1;
                            },
                            lr.bind(void 0, 0),
                            lr.bind(void 0, 1),
                            function(e1) {
                                for(var t = e1.stack, r = e1.rp0, o = e1.z0[r], n = e1.loop, s = e1.fv, i = e1.pv, a = e1.z1; n--;){
                                    var l = t.pop(), u = a[l];
                                    j.DEBUG && console.log(e1.step, (1 < e1.loop ? "loop " + (e1.loop - n) + ": " : "") + "ALIGNRP[]", l), s.setRelative(u, o, 0, i), s.touch(u);
                                }
                                e1.loop = 1;
                            },
                            function(e1) {
                                j.DEBUG && console.log(e1.step, "RTDG[]"), e1.round = Bt;
                            },
                            ur.bind(void 0, 0),
                            ur.bind(void 0, 1),
                            function(e1) {
                                var t = e1.prog, r = e1.ip, o = e1.stack, n = t[++r];
                                j.DEBUG && console.log(e1.step, "NPUSHB[]", n);
                                for(var s = 0; s < n; s++)o.push(t[++r]);
                                e1.ip = r;
                            },
                            function(e1) {
                                var t = e1.ip, r = e1.prog, o = e1.stack, n = r[++t];
                                j.DEBUG && console.log(e1.step, "NPUSHW[]", n);
                                for(var s = 0; s < n; s++){
                                    var i = r[++t] << 8 | r[++t];
                                    32768 & i && (i = -(1 + (65535 ^ i))), o.push(i);
                                }
                                e1.ip = t;
                            },
                            function(e1) {
                                var t = e1.stack, r = (r = e1.store) || (e1.store = []), o = t.pop(), t = t.pop();
                                j.DEBUG && console.log(e1.step, "WS", o, t), r[t] = o;
                            },
                            function(e1) {
                                var t = e1.stack, r = e1.store, o = t.pop(), e1 = (j.DEBUG && console.log(e1.step, "RS", o), r && r[o] || 0);
                                t.push(e1);
                            },
                            function(e1) {
                                var t = (r = e1.stack).pop(), r = r.pop();
                                j.DEBUG && console.log(e1.step, "WCVTP", t, r), e1.cvt[r] = t / 64;
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop();
                                j.DEBUG && console.log(e1.step, "RCVT", r), t.push(64 * e1.cvt[r]);
                            },
                            cr.bind(void 0, 0),
                            cr.bind(void 0, 1),
                            void 0,
                            dr.bind(void 0, 0),
                            dr.bind(void 0, 1),
                            function(e1) {
                                j.DEBUG && console.log(e1.step, "MPPEM[]"), e1.stack.push(e1.ppem);
                            },
                            void 0,
                            function(e1) {
                                j.DEBUG && console.log(e1.step, "FLIPON[]"), e1.autoFlip = !0;
                            },
                            void 0,
                            void 0,
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "LT[]", r, o), t.push(o < r ? 1 : 0);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "LTEQ[]", r, o), t.push(o <= r ? 1 : 0);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "GT[]", r, o), t.push(r < o ? 1 : 0);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "GTEQ[]", r, o), t.push(r <= o ? 1 : 0);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "EQ[]", r, o), t.push(r === o ? 1 : 0);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "NEQ[]", r, o), t.push(r !== o ? 1 : 0);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop();
                                j.DEBUG && console.log(e1.step, "ODD[]", r), t.push(Math.trunc(r) % 2 ? 1 : 0);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop();
                                j.DEBUG && console.log(e1.step, "EVEN[]", r), t.push(Math.trunc(r) % 2 ? 0 : 1);
                            },
                            function(e1) {
                                var t = e1.stack.pop();
                                j.DEBUG && console.log(e1.step, "IF[]", t), t || (Qt(e1, !0), j.DEBUG && console.log(e1.step, "EIF[]"));
                            },
                            function(e1) {
                                j.DEBUG && console.log(e1.step, "EIF[]");
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "AND[]", r, o), t.push(r && o ? 1 : 0);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "OR[]", r, o), t.push(r || o ? 1 : 0);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop();
                                j.DEBUG && console.log(e1.step, "NOT[]", r), t.push(r ? 0 : 1);
                            },
                            fr.bind(void 0, 1),
                            function(e1) {
                                var t = e1.stack.pop();
                                j.DEBUG && console.log(e1.step, "SDB[]", t), e1.deltaBase = t;
                            },
                            function(e1) {
                                var t = e1.stack.pop();
                                j.DEBUG && console.log(e1.step, "SDS[]", t), e1.deltaShift = Math.pow(.5, t);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "ADD[]", r, o), t.push(o + r);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "SUB[]", r, o), t.push(o - r);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "DIV[]", r, o), t.push(64 * o / r);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "MUL[]", r, o), t.push(o * r / 64);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop();
                                j.DEBUG && console.log(e1.step, "ABS[]", r), t.push(Math.abs(r));
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop();
                                j.DEBUG && console.log(e1.step, "NEG[]", r), t.push(-r);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop();
                                j.DEBUG && console.log(e1.step, "FLOOR[]", r), t.push(64 * Math.floor(r / 64));
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop();
                                j.DEBUG && console.log(e1.step, "CEILING[]", r), t.push(64 * Math.ceil(r / 64));
                            },
                            hr.bind(void 0, 0),
                            hr.bind(void 0, 1),
                            hr.bind(void 0, 2),
                            hr.bind(void 0, 3),
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            function(e1) {
                                var t = (r = e1.stack).pop(), r = r.pop();
                                j.DEBUG && console.log(e1.step, "WCVTF[]", t, r), e1.cvt[r] = t * e1.ppem / e1.font.unitsPerEm;
                            },
                            fr.bind(void 0, 2),
                            fr.bind(void 0, 3),
                            pr.bind(void 0, 1),
                            pr.bind(void 0, 2),
                            pr.bind(void 0, 3),
                            function(e1) {
                                var t, r = e1.stack.pop();
                                switch(j.DEBUG && console.log(e1.step, "SROUND[]", r), e1.round = Ht, 192 & r){
                                    case 0:
                                        t = .5;
                                        break;
                                    case 64:
                                        t = 1;
                                        break;
                                    case 128:
                                        t = 2;
                                        break;
                                    default:
                                        throw new Error("invalid SROUND value");
                                }
                                switch(e1.srPeriod = t, 48 & r){
                                    case 0:
                                        e1.srPhase = 0;
                                        break;
                                    case 16:
                                        e1.srPhase = .25 * t;
                                        break;
                                    case 32:
                                        e1.srPhase = .5 * t;
                                        break;
                                    case 48:
                                        e1.srPhase = .75 * t;
                                        break;
                                    default:
                                        throw new Error("invalid SROUND value");
                                }
                                e1.srThreshold = 0 === (r &= 15) ? 0 : (r / 8 - .5) * t;
                            },
                            function(e1) {
                                var t, r = e1.stack.pop();
                                switch(j.DEBUG && console.log(e1.step, "S45ROUND[]", r), e1.round = Ht, 192 & r){
                                    case 0:
                                        t = Math.sqrt(2) / 2;
                                        break;
                                    case 64:
                                        t = Math.sqrt(2);
                                        break;
                                    case 128:
                                        t = 2 * Math.sqrt(2);
                                        break;
                                    default:
                                        throw new Error("invalid S45ROUND value");
                                }
                                switch(e1.srPeriod = t, 48 & r){
                                    case 0:
                                        e1.srPhase = 0;
                                        break;
                                    case 16:
                                        e1.srPhase = .25 * t;
                                        break;
                                    case 32:
                                        e1.srPhase = .5 * t;
                                        break;
                                    case 48:
                                        e1.srPhase = .75 * t;
                                        break;
                                    default:
                                        throw new Error("invalid S45ROUND value");
                                }
                                e1.srThreshold = 0 === (r &= 15) ? 0 : (r / 8 - .5) * t;
                            },
                            void 0,
                            void 0,
                            function(e1) {
                                j.DEBUG && console.log(e1.step, "ROFF[]"), e1.round = Ut;
                            },
                            void 0,
                            function(e1) {
                                j.DEBUG && console.log(e1.step, "RUTG[]"), e1.round = Vt;
                            },
                            function(e1) {
                                j.DEBUG && console.log(e1.step, "RDTG[]"), e1.round = zt;
                            },
                            rr,
                            rr,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            function(e1) {
                                var t = e1.stack.pop();
                                j.DEBUG && console.log(e1.step, "SCANCTRL[]", t);
                            },
                            mr.bind(void 0, 0),
                            mr.bind(void 0, 1),
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = 0;
                                j.DEBUG && console.log(e1.step, "GETINFO[]", r), 1 & r && (o = 35), 32 & r && (o |= 4096), t.push(o);
                            },
                            void 0,
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop(), n = t.pop();
                                j.DEBUG && console.log(e1.step, "ROLL[]"), t.push(o), t.push(r), t.push(n);
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "MAX[]", r, o), t.push(Math.max(o, r));
                            },
                            function(e1) {
                                var t = e1.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e1.step, "MIN[]", r, o), t.push(Math.min(o, r));
                            },
                            function(e1) {
                                var t = e1.stack.pop();
                                j.DEBUG && console.log(e1.step, "SCANTYPE[]", t);
                            },
                            function(e1) {
                                var t = e1.stack.pop(), r = e1.stack.pop();
                                switch(j.DEBUG && console.log(e1.step, "INSTCTRL[]", t, r), t){
                                    case 1:
                                        return void (e1.inhibitGridFit = !!r);
                                    case 2:
                                        return void (e1.ignoreCvt = !!r);
                                    default:
                                        throw new Error("invalid INSTCTRL[] selector");
                                }
                            },
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            k.bind(void 0, 1),
                            k.bind(void 0, 2),
                            k.bind(void 0, 3),
                            k.bind(void 0, 4),
                            k.bind(void 0, 5),
                            k.bind(void 0, 6),
                            k.bind(void 0, 7),
                            k.bind(void 0, 8),
                            O.bind(void 0, 1),
                            O.bind(void 0, 2),
                            O.bind(void 0, 3),
                            O.bind(void 0, 4),
                            O.bind(void 0, 5),
                            O.bind(void 0, 6),
                            O.bind(void 0, 7),
                            O.bind(void 0, 8),
                            C.bind(void 0, 0, 0, 0, 0, 0),
                            C.bind(void 0, 0, 0, 0, 0, 1),
                            C.bind(void 0, 0, 0, 0, 0, 2),
                            C.bind(void 0, 0, 0, 0, 0, 3),
                            C.bind(void 0, 0, 0, 0, 1, 0),
                            C.bind(void 0, 0, 0, 0, 1, 1),
                            C.bind(void 0, 0, 0, 0, 1, 2),
                            C.bind(void 0, 0, 0, 0, 1, 3),
                            C.bind(void 0, 0, 0, 1, 0, 0),
                            C.bind(void 0, 0, 0, 1, 0, 1),
                            C.bind(void 0, 0, 0, 1, 0, 2),
                            C.bind(void 0, 0, 0, 1, 0, 3),
                            C.bind(void 0, 0, 0, 1, 1, 0),
                            C.bind(void 0, 0, 0, 1, 1, 1),
                            C.bind(void 0, 0, 0, 1, 1, 2),
                            C.bind(void 0, 0, 0, 1, 1, 3),
                            C.bind(void 0, 0, 1, 0, 0, 0),
                            C.bind(void 0, 0, 1, 0, 0, 1),
                            C.bind(void 0, 0, 1, 0, 0, 2),
                            C.bind(void 0, 0, 1, 0, 0, 3),
                            C.bind(void 0, 0, 1, 0, 1, 0),
                            C.bind(void 0, 0, 1, 0, 1, 1),
                            C.bind(void 0, 0, 1, 0, 1, 2),
                            C.bind(void 0, 0, 1, 0, 1, 3),
                            C.bind(void 0, 0, 1, 1, 0, 0),
                            C.bind(void 0, 0, 1, 1, 0, 1),
                            C.bind(void 0, 0, 1, 1, 0, 2),
                            C.bind(void 0, 0, 1, 1, 0, 3),
                            C.bind(void 0, 0, 1, 1, 1, 0),
                            C.bind(void 0, 0, 1, 1, 1, 1),
                            C.bind(void 0, 0, 1, 1, 1, 2),
                            C.bind(void 0, 0, 1, 1, 1, 3),
                            C.bind(void 0, 1, 0, 0, 0, 0),
                            C.bind(void 0, 1, 0, 0, 0, 1),
                            C.bind(void 0, 1, 0, 0, 0, 2),
                            C.bind(void 0, 1, 0, 0, 0, 3),
                            C.bind(void 0, 1, 0, 0, 1, 0),
                            C.bind(void 0, 1, 0, 0, 1, 1),
                            C.bind(void 0, 1, 0, 0, 1, 2),
                            C.bind(void 0, 1, 0, 0, 1, 3),
                            C.bind(void 0, 1, 0, 1, 0, 0),
                            C.bind(void 0, 1, 0, 1, 0, 1),
                            C.bind(void 0, 1, 0, 1, 0, 2),
                            C.bind(void 0, 1, 0, 1, 0, 3),
                            C.bind(void 0, 1, 0, 1, 1, 0),
                            C.bind(void 0, 1, 0, 1, 1, 1),
                            C.bind(void 0, 1, 0, 1, 1, 2),
                            C.bind(void 0, 1, 0, 1, 1, 3),
                            C.bind(void 0, 1, 1, 0, 0, 0),
                            C.bind(void 0, 1, 1, 0, 0, 1),
                            C.bind(void 0, 1, 1, 0, 0, 2),
                            C.bind(void 0, 1, 1, 0, 0, 3),
                            C.bind(void 0, 1, 1, 0, 1, 0),
                            C.bind(void 0, 1, 1, 0, 1, 1),
                            C.bind(void 0, 1, 1, 0, 1, 2),
                            C.bind(void 0, 1, 1, 0, 1, 3),
                            C.bind(void 0, 1, 1, 1, 0, 0),
                            C.bind(void 0, 1, 1, 1, 0, 1),
                            C.bind(void 0, 1, 1, 1, 0, 2),
                            C.bind(void 0, 1, 1, 1, 0, 3),
                            C.bind(void 0, 1, 1, 1, 1, 0),
                            C.bind(void 0, 1, 1, 1, 1, 1),
                            C.bind(void 0, 1, 1, 1, 1, 2),
                            C.bind(void 0, 1, 1, 1, 1, 3)
                        ], jr = Array.from || function(e1) {
                            return e1.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g) || [];
                        };
                        function A(e1) {
                            (e1 = e1 || {}).empty || (_(e1.familyName, "When creating a new Font object, familyName is required."), _(e1.styleName, "When creating a new Font object, styleName is required."), _(e1.unitsPerEm, "When creating a new Font object, unitsPerEm is required."), _(e1.ascender, "When creating a new Font object, ascender is required."), _(e1.descender, "When creating a new Font object, descender is required."), _(e1.descender < 0, "Descender should be negative (e.g. -512)."), this.names = {
                                fontFamily: {
                                    en: e1.familyName || " "
                                },
                                fontSubfamily: {
                                    en: e1.styleName || " "
                                },
                                fullName: {
                                    en: e1.fullName || e1.familyName + " " + e1.styleName
                                },
                                postScriptName: {
                                    en: e1.postScriptName || (e1.familyName + e1.styleName).replace(/\s/g, "")
                                },
                                designer: {
                                    en: e1.designer || " "
                                },
                                designerURL: {
                                    en: e1.designerURL || " "
                                },
                                manufacturer: {
                                    en: e1.manufacturer || " "
                                },
                                manufacturerURL: {
                                    en: e1.manufacturerURL || " "
                                },
                                license: {
                                    en: e1.license || " "
                                },
                                licenseURL: {
                                    en: e1.licenseURL || " "
                                },
                                version: {
                                    en: e1.version || "Version 0.1"
                                },
                                description: {
                                    en: e1.description || " "
                                },
                                copyright: {
                                    en: e1.copyright || " "
                                },
                                trademark: {
                                    en: e1.trademark || " "
                                }
                            }, this.unitsPerEm = e1.unitsPerEm || 1e3, this.ascender = e1.ascender, this.descender = e1.descender, this.createdTimestamp = e1.createdTimestamp, this.tables = {
                                os2: {
                                    usWeightClass: e1.weightClass || this.usWeightClasses.MEDIUM,
                                    usWidthClass: e1.widthClass || this.usWidthClasses.MEDIUM,
                                    fsSelection: e1.fsSelection || this.fsSelectionValues.REGULAR
                                }
                            }), this.supported = !0, this.glyphs = new p.GlyphSet(this, e1.glyphs || []), this.encoding = new Te(this), this.position = new kt(this), this.substitution = new i(this), this.tables = this.tables || {}, Object.defineProperty(this, "hinting", {
                                get: function() {
                                    return this._hinting || ("truetype" === this.outlinesFormat ? this._hinting = new Ft(this) : void 0);
                                }
                            });
                        }
                        function _r(e1, t) {
                            var r, o = JSON.stringify(e1), n = 256;
                            for(r in t){
                                var s = parseInt(r);
                                if (s && !(s < 256)) {
                                    if (JSON.stringify(t[r]) === o) return s;
                                    n <= s && (n = s + 1);
                                }
                            }
                            return t[n] = e1, n;
                        }
                        A.prototype.hasChar = function(e1) {
                            return null !== this.encoding.charToGlyphIndex(e1);
                        }, A.prototype.charToGlyphIndex = function(e1) {
                            return this.encoding.charToGlyphIndex(e1);
                        }, A.prototype.charToGlyph = function(e1) {
                            e1 = this.charToGlyphIndex(e1);
                            return this.glyphs.get(e1) || this.glyphs.get(0);
                        }, A.prototype.stringToGlyphs = function(e1, t) {
                            t = t || this.defaultRenderOptions;
                            for(var r = jr(e1), o = [], n = 0; n < r.length; n += 1){
                                var s = r[n];
                                o.push(this.charToGlyphIndex(s));
                            }
                            var i = o.length;
                            if (t.features) {
                                var e1 = t.script || this.substitution.getDefaultScriptName(), a = [];
                                t.features.liga && (a = a.concat(this.substitution.getFeature("liga", e1, t.language))), t.features.rlig && (a = a.concat(this.substitution.getFeature("rlig", e1, t.language)));
                                for(var l = 0; l < i; l += 1)for(var u = 0; u < a.length; u++){
                                    for(var c = a[u], d = c.sub, f = d.length, h = 0; h < f && d[h] === o[l + h];)h++;
                                    h === f && (o.splice(l, f, c.by), i = i - f + 1);
                                }
                            }
                            for(var p = new Array(i), m = this.glyphs.get(0), y = 0; y < i; y += 1)p[y] = this.glyphs.get(o[y]) || m;
                            return p;
                        }, A.prototype.nameToGlyphIndex = function(e1) {
                            return this.glyphNames.nameToGlyphIndex(e1);
                        }, A.prototype.nameToGlyph = function(e1) {
                            e1 = this.nameToGlyphIndex(e1);
                            return this.glyphs.get(e1) || this.glyphs.get(0);
                        }, A.prototype.glyphIndexToName = function(e1) {
                            return this.glyphNames.glyphIndexToName ? this.glyphNames.glyphIndexToName(e1) : "";
                        }, A.prototype.getKerningValue = function(e1, t) {
                            e1 = e1.index || e1, t = t.index || t;
                            var r = this.position.defaultKerningTables;
                            return r ? this.position.getKerningValue(r, e1, t) : this.kerningPairs[e1 + "," + t] || 0;
                        }, A.prototype.defaultRenderOptions = {
                            kerning: !0,
                            features: {
                                liga: !0,
                                rlig: !0
                            }
                        }, A.prototype.forEachGlyph = function(e1, t, r, o, n, s) {
                            t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 0, n = n || this.defaultRenderOptions;
                            var i, a = 1 / this.unitsPerEm * (o = void 0 !== o ? o : 72), l = this.stringToGlyphs(e1, n);
                            n.kerning && (e1 = n.script || this.position.getDefaultScriptName(), i = this.position.getKerningTables(e1, n.language));
                            for(var u = 0; u < l.length; u += 1){
                                var c = l[u];
                                s.call(this, c, t, r, o, n), c.advanceWidth && (t += c.advanceWidth * a), n.kerning && u < l.length - 1 && (t += (i ? this.position.getKerningValue(i, c.index, l[u + 1].index) : this.getKerningValue(c, l[u + 1])) * a), n.letterSpacing ? t += n.letterSpacing * o : n.tracking && (t += n.tracking / 1e3 * o);
                            }
                            return t;
                        }, A.prototype.getPath = function(e1, t, r, o, n) {
                            var s = new f;
                            return this.forEachGlyph(e1, t, r, o, n, function(e1, t, r, o) {
                                e1 = e1.getPath(t, r, o, n, this);
                                s.extend(e1);
                            }), s;
                        }, A.prototype.getPaths = function(e1, t, r, o, n) {
                            var s = [];
                            return this.forEachGlyph(e1, t, r, o, n, function(e1, t, r, o) {
                                e1 = e1.getPath(t, r, o, n, this);
                                s.push(e1);
                            }), s;
                        }, A.prototype.getAdvanceWidth = function(e1, t, r) {
                            return this.forEachGlyph(e1, 0, 0, t, r, function() {});
                        }, A.prototype.draw = function(e1, t, r, o, n, s) {
                            this.getPath(t, r, o, n, s).draw(e1);
                        }, A.prototype.drawPoints = function(n, e1, t, r, o, s) {
                            this.forEachGlyph(e1, t, r, o, s, function(e1, t, r, o) {
                                e1.drawPoints(n, t, r, o);
                            });
                        }, A.prototype.drawMetrics = function(n, e1, t, r, o, s) {
                            this.forEachGlyph(e1, t, r, o, s, function(e1, t, r, o) {
                                e1.drawMetrics(n, t, r, o);
                            });
                        }, A.prototype.getEnglishName = function(e1) {
                            e1 = this.names[e1];
                            if (e1) return e1.en;
                        }, A.prototype.validate = function() {
                            var t = this;
                            function e1(e1) {
                                e1 = t.getEnglishName(e1);
                                e1 && e1.trim().length;
                            }
                            e1("fontFamily"), e1("weightName"), e1("manufacturer"), e1("copyright"), e1("version"), this.unitsPerEm;
                        }, A.prototype.toTables = function() {
                            return wt.fontToTable(this);
                        }, A.prototype.toBuffer = function() {
                            return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."), this.toArrayBuffer();
                        }, A.prototype.toArrayBuffer = function() {
                            for(var e1 = this.toTables().encode(), t = new ArrayBuffer(e1.length), r = new Uint8Array(t), o = 0; o < e1.length; o++)r[o] = e1[o];
                            return t;
                        }, A.prototype.download = function(t) {
                            var e1 = this.getEnglishName("fontFamily"), r = this.getEnglishName("fontSubfamily"), o = (t = t || e1.replace(/\s/g, "") + "-" + r + ".otf", this.toArrayBuffer());
                            "undefined" != typeof window ? (window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem, window.requestFileSystem(window.TEMPORARY, o.byteLength, function(e1) {
                                e1.root.getFile(t, {
                                    create: !0
                                }, function(r) {
                                    r.createWriter(function(e1) {
                                        var t = new DataView(o), t = new Blob([
                                            t
                                        ], {
                                            type: "font/opentype"
                                        });
                                        e1.write(t), e1.addEventListener("writeend", function() {
                                            location.href = r.toURL();
                                        }, !1);
                                    });
                                });
                            }, function(e1) {
                                throw new Error(e1.name + ": " + e1.message);
                            })) : (e1 = Pr("fs"), r = function(e1) {
                                for(var t = new Ar(e1.byteLength), r = new Uint8Array(e1), o = 0; o < t.length; ++o)t[o] = r[o];
                                return t;
                            }(o), e1.writeFileSync(t, r));
                        }, A.prototype.fsSelectionValues = {
                            ITALIC: 1,
                            UNDERSCORE: 2,
                            NEGATIVE: 4,
                            OUTLINED: 8,
                            STRIKEOUT: 16,
                            BOLD: 32,
                            REGULAR: 64,
                            USER_TYPO_METRICS: 128,
                            WWS: 256,
                            OBLIQUE: 512
                        }, A.prototype.usWidthClasses = {
                            ULTRA_CONDENSED: 1,
                            EXTRA_CONDENSED: 2,
                            CONDENSED: 3,
                            SEMI_CONDENSED: 4,
                            MEDIUM: 5,
                            SEMI_EXPANDED: 6,
                            EXPANDED: 7,
                            EXTRA_EXPANDED: 8,
                            ULTRA_EXPANDED: 9
                        }, A.prototype.usWeightClasses = {
                            THIN: 100,
                            EXTRA_LIGHT: 200,
                            LIGHT: 300,
                            NORMAL: 400,
                            MEDIUM: 500,
                            SEMI_BOLD: 600,
                            BOLD: 700,
                            EXTRA_BOLD: 800,
                            BLACK: 900
                        };
                        var xr = {
                            make: function(e1, t) {
                                var r = new S.Table("fvar", [
                                    {
                                        name: "version",
                                        type: "ULONG",
                                        value: 65536
                                    },
                                    {
                                        name: "offsetToData",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "countSizePairs",
                                        type: "USHORT",
                                        value: 2
                                    },
                                    {
                                        name: "axisCount",
                                        type: "USHORT",
                                        value: e1.axes.length
                                    },
                                    {
                                        name: "axisSize",
                                        type: "USHORT",
                                        value: 20
                                    },
                                    {
                                        name: "instanceCount",
                                        type: "USHORT",
                                        value: e1.instances.length
                                    },
                                    {
                                        name: "instanceSize",
                                        type: "USHORT",
                                        value: 4 + 4 * e1.axes.length
                                    }
                                ]);
                                r.offsetToData = r.sizeOf();
                                for(var o, n, s, i = 0; i < e1.axes.length; i++)r.fields = r.fields.concat((o = i, n = e1.axes[i], s = t, s = _r(n.name, t), [
                                    {
                                        name: "tag_" + o,
                                        type: "TAG",
                                        value: n.tag
                                    },
                                    {
                                        name: "minValue_" + o,
                                        type: "FIXED",
                                        value: n.minValue << 16
                                    },
                                    {
                                        name: "defaultValue_" + o,
                                        type: "FIXED",
                                        value: n.defaultValue << 16
                                    },
                                    {
                                        name: "maxValue_" + o,
                                        type: "FIXED",
                                        value: n.maxValue << 16
                                    },
                                    {
                                        name: "flags_" + o,
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "nameID_" + o,
                                        type: "USHORT",
                                        value: s
                                    }
                                ]));
                                for(var a = 0; a < e1.instances.length; a++)r.fields = r.fields.concat(function(e1, t, r, o) {
                                    for(var n = [
                                        {
                                            name: "nameID_" + e1,
                                            type: "USHORT",
                                            value: _r(t.name, o)
                                        },
                                        {
                                            name: "flags_" + e1,
                                            type: "USHORT",
                                            value: 0
                                        }
                                    ], s = 0; s < r.length; ++s){
                                        var i = r[s].tag;
                                        n.push({
                                            name: "axis_" + e1 + " " + i,
                                            type: "FIXED",
                                            value: t.coordinates[i] << 16
                                        });
                                    }
                                    return n;
                                }(a, e1.instances[a], e1.axes, t));
                                return r;
                            },
                            parse: function(e1, t, r) {
                                for(var o, n, s, i, a = new R.Parser(e1, t), l = a.parseULong(), u = (L.argument(65536 === l, "Unsupported fvar table version."), a.parseOffset16()), c = (a.skip("uShort", 1), a.parseUShort()), d = a.parseUShort(), f = a.parseUShort(), h = a.parseUShort(), p = [], m = 0; m < c; m++)p.push((o = e1, n = t + u + m * d, s = r, i = {}, o = new R.Parser(o, n), i.tag = o.parseTag(), i.minValue = o.parseFixed(), i.defaultValue = o.parseFixed(), i.maxValue = o.parseFixed(), o.skip("uShort", 1), i.name = s[o.parseUShort()] || {}, i));
                                for(var y = [], g = t + u + c * d, v = 0; v < f; v++)y.push(function(e1, t, r, o) {
                                    var n = {}, s = new R.Parser(e1, t);
                                    n.name = o[s.parseUShort()] || {}, s.skip("uShort", 1), n.coordinates = {};
                                    for(var i = 0; i < r.length; ++i)n.coordinates[r[i].tag] = s.parseFixed();
                                    return n;
                                }(e1, g + v * h, p, r));
                                return {
                                    axes: p,
                                    instances: y
                                };
                            }
                        }, P = new Array(10);
                        P[1] = function() {
                            var e1 = this.offset + this.relativeOffset, t = this.parseUShort();
                            return 1 === t ? {
                                posFormat: 1,
                                coverage: this.parsePointer(u.coverage),
                                value: this.parseValueRecord()
                            } : 2 === t ? {
                                posFormat: 2,
                                coverage: this.parsePointer(u.coverage),
                                values: this.parseValueRecordList()
                            } : void L.assert(!1, "0x" + e1.toString(16) + ": GPOS lookup type 1 format must be 1 or 2.");
                        }, P[2] = function() {
                            var e1, t, r, o, n = this.offset + this.relativeOffset, s = this.parseUShort(), n = (L.assert(1 === s || 2 === s, "0x" + n.toString(16) + ": GPOS lookup type 2 format must be 1 or 2."), this.parsePointer(u.coverage)), i = this.parseUShort(), a = this.parseUShort();
                            return 1 === s ? {
                                posFormat: s,
                                coverage: n,
                                valueFormat1: i,
                                valueFormat2: a,
                                pairSets: this.parseList(u.pointer(u.list(function() {
                                    return {
                                        secondGlyph: this.parseUShort(),
                                        value1: this.parseValueRecord(i),
                                        value2: this.parseValueRecord(a)
                                    };
                                })))
                            } : 2 === s ? (e1 = this.parsePointer(u.classDef), t = this.parsePointer(u.classDef), r = this.parseUShort(), o = this.parseUShort(), {
                                posFormat: s,
                                coverage: n,
                                valueFormat1: i,
                                valueFormat2: a,
                                classDef1: e1,
                                classDef2: t,
                                class1Count: r,
                                class2Count: o,
                                classRecords: this.parseList(r, u.list(o, function() {
                                    return {
                                        value1: this.parseValueRecord(i),
                                        value2: this.parseValueRecord(a)
                                    };
                                }))
                            }) : void 0;
                        }, P[3] = function() {
                            return {
                                error: "GPOS Lookup 3 not supported"
                            };
                        }, P[4] = function() {
                            return {
                                error: "GPOS Lookup 4 not supported"
                            };
                        }, P[5] = function() {
                            return {
                                error: "GPOS Lookup 5 not supported"
                            };
                        }, P[6] = function() {
                            return {
                                error: "GPOS Lookup 6 not supported"
                            };
                        }, P[7] = function() {
                            return {
                                error: "GPOS Lookup 7 not supported"
                            };
                        }, P[8] = function() {
                            return {
                                error: "GPOS Lookup 8 not supported"
                            };
                        }, P[9] = function() {
                            return {
                                error: "GPOS Lookup 9 not supported"
                            };
                        };
                        var wr = new Array(10);
                        var Sr = {
                            parse: function(e1, t) {
                                return t = (e1 = new u(e1, t = t || 0)).parseVersion(1), L.argument(1 === t || 1.1 === t, "Unsupported GPOS table version " + t), 1 === t ? {
                                    version: t,
                                    scripts: e1.parseScriptList(),
                                    features: e1.parseFeatureList(),
                                    lookups: e1.parseLookupList(P)
                                } : {
                                    version: t,
                                    scripts: e1.parseScriptList(),
                                    features: e1.parseFeatureList(),
                                    lookups: e1.parseLookupList(P),
                                    variations: e1.parseFeatureVariationsList()
                                };
                            },
                            make: function(e1) {
                                return new S.Table("GPOS", [
                                    {
                                        name: "version",
                                        type: "ULONG",
                                        value: 65536
                                    },
                                    {
                                        name: "scripts",
                                        type: "TABLE",
                                        value: new S.ScriptList(e1.scripts)
                                    },
                                    {
                                        name: "features",
                                        type: "TABLE",
                                        value: new S.FeatureList(e1.features)
                                    },
                                    {
                                        name: "lookups",
                                        type: "TABLE",
                                        value: new S.LookupList(e1.lookups, wr)
                                    }
                                ]);
                            }
                        };
                        var Er = {
                            parse: function(e1, t) {
                                if (e1 = new R.Parser(e1, t), 0 === (t = e1.parseUShort())) {
                                    var r = e1, o = {}, n = (r.skip("uShort"), r.parseUShort()), s = (L.argument(0 === n, "Unsupported kern sub-table version."), r.skip("uShort", 2), r.parseUShort());
                                    r.skip("uShort", 3);
                                    for(var i = 0; i < s; i += 1){
                                        var a = r.parseUShort(), l = r.parseUShort(), u = r.parseShort();
                                        o[a + "," + l] = u;
                                    }
                                    return o;
                                }
                                if (1 !== t) throw new Error("Unsupported kern table version (" + t + ").");
                                var c = e1, d = {}, n = (c.skip("uShort"), 1 < c.parseULong() && console.warn("Only the first kern subtable is supported."), c.skip("uLong"), 255 & c.parseUShort());
                                if (c.skip("uShort"), 0 == n) {
                                    var f = c.parseUShort();
                                    c.skip("uShort", 3);
                                    for(var h = 0; h < f; h += 1){
                                        var p = c.parseUShort(), m = c.parseUShort(), y = c.parseShort();
                                        d[p + "," + m] = y;
                                    }
                                }
                                return d;
                            }
                        };
                        var Mr = {
                            parse: function(e1, t, r, o) {
                                for(var n = new R.Parser(e1, t), s = o ? n.parseUShort : n.parseULong, i = [], a = 0; a < r + 1; a += 1){
                                    var l = s.call(n);
                                    o && (l *= 2), i.push(l);
                                }
                                return i;
                            }
                        };
                        function Tr(e1, r) {
                            Pr("fs").readFile(e1, function(e1, t) {
                                if (e1) return r(e1.message);
                                r(null, Ct(t));
                            });
                        }
                        function kr(e1, t) {
                            var r = new XMLHttpRequest;
                            r.open("get", e1, !0), r.responseType = "arraybuffer", r.onload = function() {
                                return r.response ? t(null, r.response) : t("Font could not be loaded: " + r.statusText);
                            }, r.onerror = function() {
                                t("Font could not be loaded");
                            }, r.send();
                        }
                        function Or(e1, t) {
                            for(var r = [], o = 12, n = 0; n < t; n += 1){
                                var s = R.getTag(e1, o), i = R.getULong(e1, o + 4), a = R.getULong(e1, o + 8), l = R.getULong(e1, o + 12);
                                r.push({
                                    tag: s,
                                    checksum: i,
                                    offset: a,
                                    length: l,
                                    compression: !1
                                }), o += 16;
                            }
                            return r;
                        }
                        function I(e1, t) {
                            if ("WOFF" !== t.compression) return {
                                data: e1,
                                offset: t.offset
                            };
                            var e1 = new Uint8Array(e1.buffer, t.offset + 2, t.compressedLength - 2), r = new Uint8Array(t.length);
                            if (re(e1, r), r.byteLength !== t.length) throw new Error("Decompression error: " + t.tag + " decompressed length doesn't match recorded length");
                            return {
                                data: new DataView(r.buffer, 0),
                                offset: 0
                            };
                        }
                        function Cr(e1) {
                            var t, r, o, n, s, i, a, l, u, c, d, f, h, p, m = new A({
                                empty: !0
                            }), y = new DataView(e1, 0), g = [], e1 = R.getTag(y, 0);
                            if (e1 === String.fromCharCode(0, 1, 0, 0) || "true" === e1 || "typ1" === e1) m.outlinesFormat = "truetype", g = Or(y, o = R.getUShort(y, 4));
                            else if ("OTTO" === e1) m.outlinesFormat = "cff", g = Or(y, o = R.getUShort(y, 4));
                            else {
                                if ("wOFF" !== e1) throw new Error("Unsupported OpenType signature " + e1);
                                var v = R.getTag(y, 4);
                                if (v === String.fromCharCode(0, 1, 0, 0)) m.outlinesFormat = "truetype";
                                else {
                                    if ("OTTO" !== v) throw new Error("Unsupported OpenType flavor " + e1);
                                    m.outlinesFormat = "cff";
                                }
                                g = function(e1, t) {
                                    for(var r = [], o = 44, n = 0; n < t; n += 1){
                                        var s = R.getTag(e1, o), i = R.getULong(e1, o + 4), a = R.getULong(e1, o + 8), l = R.getULong(e1, o + 12), u = void 0, u = a < l && "WOFF";
                                        r.push({
                                            tag: s,
                                            offset: i,
                                            compression: u,
                                            compressedLength: a,
                                            length: l
                                        }), o += 20;
                                    }
                                    return r;
                                }(y, o = R.getUShort(y, 12));
                            }
                            for(var b = 0; b < o; b += 1){
                                var j = g[b], _ = void 0;
                                switch(j.tag){
                                    case "cmap":
                                        _ = I(y, j), m.tables.cmap = we.parse(_.data, _.offset), m.encoding = new ke(m.tables.cmap);
                                        break;
                                    case "cvt ":
                                        _ = I(y, j), p = new R.Parser(_.data, _.offset), m.tables.cvt = p.parseShortList(j.length / 2);
                                        break;
                                    case "fvar":
                                        s = j;
                                        break;
                                    case "fpgm":
                                        _ = I(y, j), p = new R.Parser(_.data, _.offset), m.tables.fpgm = p.parseByteList(j.length);
                                        break;
                                    case "head":
                                        _ = I(y, j), m.tables.head = Ze.parse(_.data, _.offset), m.unitsPerEm = m.tables.head.unitsPerEm, t = m.tables.head.indexToLocFormat;
                                        break;
                                    case "hhea":
                                        _ = I(y, j), m.tables.hhea = Qe.parse(_.data, _.offset), m.ascender = m.tables.hhea.ascender, m.descender = m.tables.hhea.descender, m.numberOfHMetrics = m.tables.hhea.numberOfHMetrics;
                                        break;
                                    case "hmtx":
                                        u = j;
                                        break;
                                    case "ltag":
                                        _ = I(y, j), r = Ke.parse(_.data, _.offset);
                                        break;
                                    case "maxp":
                                        _ = I(y, j), m.tables.maxp = $e.parse(_.data, _.offset), m.numGlyphs = m.tables.maxp.numGlyphs;
                                        break;
                                    case "name":
                                        f = j;
                                        break;
                                    case "OS/2":
                                        _ = I(y, j), m.tables.os2 = ht.parse(_.data, _.offset);
                                        break;
                                    case "post":
                                        _ = I(y, j), m.tables.post = pt.parse(_.data, _.offset), m.glyphNames = new Ce(m.tables.post);
                                        break;
                                    case "prep":
                                        _ = I(y, j), p = new R.Parser(_.data, _.offset), m.tables.prep = p.parseByteList(j.length);
                                        break;
                                    case "glyf":
                                        i = j;
                                        break;
                                    case "loca":
                                        d = j;
                                        break;
                                    case "CFF ":
                                        n = j;
                                        break;
                                    case "kern":
                                        c = j;
                                        break;
                                    case "GPOS":
                                        a = j;
                                        break;
                                    case "GSUB":
                                        l = j;
                                        break;
                                    case "meta":
                                        h = j;
                                }
                            }
                            v = I(y, f);
                            if (m.tables.name = dt.parse(v.data, v.offset, r), m.names = m.tables.name, i && d) {
                                e1 = 0 === t, v = I(y, d), v = Mr.parse(v.data, v.offset, m.numGlyphs, e1), e1 = I(y, i);
                                m.glyphs = Dt.parse(e1.data, e1.offset, v, m);
                            } else {
                                if (!n) throw new Error("Font doesn't contain TrueType or CFF outlines.");
                                e1 = I(y, n);
                                Ye.parse(e1.data, e1.offset, m);
                            }
                            for(var v = I(y, u), x = (Je.parse(v.data, v.offset, m.numberOfHMetrics, m.numGlyphs, m.glyphs), m), w = x.tables.cmap.glyphIndexMap, S = Object.keys(w), E = 0; E < S.length; E += 1){
                                var M, T = S[E], k = w[T];
                                (M = x.glyphs.get(k)).addUnicode(parseInt(T));
                            }
                            for(var O = 0; O < x.glyphs.length; O += 1)M = x.glyphs.get(O), x.cffEncoding ? x.isCIDFont ? M.name = "gid" + O : M.name = x.cffEncoding.charset[O] : x.glyphNames.names && (M.name = x.glyphNames.glyphIndexToName(O));
                            return c ? (e1 = I(y, c), m.kerningPairs = Er.parse(e1.data, e1.offset)) : m.kerningPairs = {}, a && (v = I(y, a), m.tables.gpos = Sr.parse(v.data, v.offset), m.position.init()), l && (e1 = I(y, l), m.tables.gsub = yt.parse(e1.data, e1.offset)), s && (v = I(y, s), m.tables.fvar = xr.parse(v.data, v.offset, m.names)), h && (e1 = I(y, h), m.tables.meta = gt.parse(e1.data, e1.offset), m.metas = m.tables.meta), m;
                        }
                        j.Font = A, j.Glyph = h, j.Path = f, j.BoundingBox = a, j._parse = R, j.parse = Cr, j.load = function(e1, o) {
                            ("undefined" == typeof window ? Tr : kr)(e1, function(e1, t) {
                                if (e1) return o(e1);
                                var r;
                                try {
                                    r = Cr(t);
                                } catch (e1) {
                                    return o(e1, null);
                                }
                                return o(null, r);
                            });
                        }, j.loadSync = function(e1) {
                            return Cr(Ct(Pr("fs").readFileSync(e1)));
                        }, Object.defineProperty(j, "__esModule", {
                            value: !0
                        });
                    }, "object" == typeof o && void 0 !== r ? t(o) : "function" == typeof s && s.amd ? s([
                        "exports"
                    ], t) : t(e1.opentype = {});
                }).call(this, Pr("buffer").Buffer);
            },
            {
                buffer: 4,
                fs: 2
            }
        ],
        248: [
            function(e1, t, u) {
                (function(n) {
                    function s(e1, t) {
                        for(var r = 0, o = e1.length - 1; 0 <= o; o--){
                            var n = e1[o];
                            "." === n ? e1.splice(o, 1) : ".." === n ? (e1.splice(o, 1), r++) : r && (e1.splice(o, 1), r--);
                        }
                        if (t) for(; r--;)e1.unshift("..");
                        return e1;
                    }
                    function i(e1, t) {
                        if (e1.filter) return e1.filter(t);
                        for(var r = [], o = 0; o < e1.length; o++)t(e1[o], o, e1) && r.push(e1[o]);
                        return r;
                    }
                    u.resolve = function() {
                        for(var e1 = "", t = !1, r = arguments.length - 1; -1 <= r && !t; r--){
                            var o = 0 <= r ? arguments[r] : n.cwd();
                            if ("string" != typeof o) throw new TypeError("Arguments to path.resolve must be strings");
                            o && (e1 = o + "/" + e1, t = "/" === o.charAt(0));
                        }
                        return (t ? "/" : "") + (e1 = s(i(e1.split("/"), function(e1) {
                            return !!e1;
                        }), !t).join("/")) || ".";
                    }, u.normalize = function(e1) {
                        var t = u.isAbsolute(e1), r = "/" === o(e1, -1);
                        return (e1 = (e1 = s(i(e1.split("/"), function(e1) {
                            return !!e1;
                        }), !t).join("/")) || t ? e1 : ".") && r && (e1 += "/"), (t ? "/" : "") + e1;
                    }, u.isAbsolute = function(e1) {
                        return "/" === e1.charAt(0);
                    }, u.join = function() {
                        var e1 = Array.prototype.slice.call(arguments, 0);
                        return u.normalize(i(e1, function(e1, t) {
                            if ("string" != typeof e1) throw new TypeError("Arguments to path.join must be strings");
                            return e1;
                        }).join("/"));
                    }, u.relative = function(e1, t) {
                        function r(e1) {
                            for(var t = 0; t < e1.length && "" === e1[t]; t++);
                            for(var r = e1.length - 1; 0 <= r && "" === e1[r]; r--);
                            return r < t ? [] : e1.slice(t, r - t + 1);
                        }
                        e1 = u.resolve(e1).substr(1), t = u.resolve(t).substr(1);
                        for(var o = r(e1.split("/")), n = r(t.split("/")), s = Math.min(o.length, n.length), i = s, a = 0; a < s; a++)if (o[a] !== n[a]) {
                            i = a;
                            break;
                        }
                        for(var l = [], a = i; a < o.length; a++)l.push("..");
                        return (l = l.concat(n.slice(i))).join("/");
                    }, u.sep = "/", u.delimiter = ":", u.dirname = function(e1) {
                        if ("string" != typeof e1 && (e1 += ""), 0 === e1.length) return ".";
                        for(var t = 47 === e1.charCodeAt(0), r = -1, o = !0, n = e1.length - 1; 1 <= n; --n)if (47 === e1.charCodeAt(n)) {
                            if (!o) {
                                r = n;
                                break;
                            }
                        } else o = !1;
                        return -1 === r ? t ? "/" : "." : t && 1 === r ? "/" : e1.slice(0, r);
                    }, u.basename = function(e1, t) {
                        e1 = function(e1) {
                            "string" != typeof e1 && (e1 += "");
                            for(var t = 0, r = -1, o = !0, n = e1.length - 1; 0 <= n; --n)if (47 === e1.charCodeAt(n)) {
                                if (!o) {
                                    t = n + 1;
                                    break;
                                }
                            } else -1 === r && (o = !1, r = n + 1);
                            return -1 === r ? "" : e1.slice(t, r);
                        }(e1);
                        return e1 = t && e1.substr(-1 * t.length) === t ? e1.substr(0, e1.length - t.length) : e1;
                    }, u.extname = function(e1) {
                        "string" != typeof e1 && (e1 += "");
                        for(var t = -1, r = 0, o = -1, n = !0, s = 0, i = e1.length - 1; 0 <= i; --i){
                            var a = e1.charCodeAt(i);
                            if (47 === a) {
                                if (n) continue;
                                r = i + 1;
                                break;
                            }
                            -1 === o && (n = !1, o = i + 1), 46 === a ? -1 === t ? t = i : 1 !== s && (s = 1) : -1 !== t && (s = -1);
                        }
                        return -1 === t || -1 === o || 0 === s || 1 === s && t === o - 1 && t === r + 1 ? "" : e1.slice(t, o);
                    };
                    var o = "b" === "ab".substr(-1) ? function(e1, t, r) {
                        return e1.substr(t, r);
                    } : function(e1, t, r) {
                        return t < 0 && (t = e1.length + t), e1.substr(t, r);
                    };
                }).call(this, e1("_process"));
            },
            {
                _process: 249
            }
        ],
        249: [
            function(e1, t, r) {
                var o, n, t = t.exports = {};
                function s() {
                    throw new Error("setTimeout has not been defined");
                }
                function i() {
                    throw new Error("clearTimeout has not been defined");
                }
                try {
                    o = "function" == typeof setTimeout ? setTimeout : s;
                } catch (e1) {
                    o = s;
                }
                try {
                    n = "function" == typeof clearTimeout ? clearTimeout : i;
                } catch (e1) {
                    n = i;
                }
                function a(t) {
                    if (o === setTimeout) return setTimeout(t, 0);
                    if ((o === s || !o) && setTimeout) return (o = setTimeout)(t, 0);
                    try {
                        return o(t, 0);
                    } catch (e1) {
                        try {
                            return o.call(null, t, 0);
                        } catch (e1) {
                            return o.call(this, t, 0);
                        }
                    }
                }
                var l, u = [], c = !1, d = -1;
                function f() {
                    c && l && (c = !1, l.length ? u = l.concat(u) : d = -1, u.length && h());
                }
                function h() {
                    if (!c) {
                        for(var e1 = a(f), t = (c = !0, u.length); t;){
                            for(l = u, u = []; ++d < t;)l && l[d].run();
                            d = -1, t = u.length;
                        }
                        l = null, c = !1, !function(t) {
                            if (n === clearTimeout) return clearTimeout(t);
                            if ((n === i || !n) && clearTimeout) return (n = clearTimeout)(t);
                            try {
                                n(t);
                            } catch (e1) {
                                try {
                                    return n.call(null, t);
                                } catch (e1) {
                                    return n.call(this, t);
                                }
                            }
                        }(e1);
                    }
                }
                function p(e1, t) {
                    this.fun = e1, this.array = t;
                }
                function m() {}
                t.nextTick = function(e1) {
                    var t = new Array(arguments.length - 1);
                    if (1 < arguments.length) for(var r = 1; r < arguments.length; r++)t[r - 1] = arguments[r];
                    u.push(new p(e1, t)), 1 !== u.length || c || a(h);
                }, p.prototype.run = function() {
                    this.fun.apply(null, this.array);
                }, t.title = "browser", t.browser = !0, t.env = {}, t.argv = [], t.version = "", t.versions = {}, t.on = m, t.addListener = m, t.once = m, t.off = m, t.removeListener = m, t.removeAllListeners = m, t.emit = m, t.prependListener = m, t.prependOnceListener = m, t.listeners = function(e1) {
                    return [];
                }, t.binding = function(e1) {
                    throw new Error("process.binding is not supported");
                }, t.cwd = function() {
                    return "/";
                }, t.chdir = function(e1) {
                    throw new Error("process.chdir is not supported");
                }, t.umask = function() {
                    return 0;
                };
            },
            {}
        ],
        250: [
            function(e1, t, r) {
                t = function(s) {
                    "use strict";
                    var l, e1 = Object.prototype, u = e1.hasOwnProperty, t = "function" == typeof Symbol ? Symbol : {}, o = t.iterator || "@@iterator", r = t.asyncIterator || "@@asyncIterator", n = t.toStringTag || "@@toStringTag";
                    function i(e1, t, r, o) {
                        var n, s, i, a, t = t && t.prototype instanceof y ? t : y, t = Object.create(t.prototype), o = new S(o || []);
                        return t._invoke = (n = e1, s = r, i = o, a = d, function(e1, t) {
                            if (a === h) throw new Error("Generator is already running");
                            if (a === p) {
                                if ("throw" === e1) throw t;
                                return M();
                            }
                            for(i.method = e1, i.arg = t;;){
                                var r = i.delegate;
                                if (r) {
                                    r = function e1(t, r) {
                                        var o = t.iterator[r.method];
                                        if (o === l) {
                                            if (r.delegate = null, "throw" === r.method) {
                                                if (t.iterator.return && (r.method = "return", r.arg = l, e1(t, r), "throw" === r.method)) return m;
                                                r.method = "throw", r.arg = new TypeError("The iterator does not provide a 'throw' method");
                                            }
                                            return m;
                                        }
                                        o = c(o, t.iterator, r.arg);
                                        if ("throw" === o.type) return r.method = "throw", r.arg = o.arg, r.delegate = null, m;
                                        o = o.arg;
                                        if (!o) return r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, m;
                                        if (!o.done) return o;
                                        r[t.resultName] = o.value, r.next = t.nextLoc, "return" !== r.method && (r.method = "next", r.arg = l);
                                        r.delegate = null;
                                        return m;
                                    }(r, i);
                                    if (r) {
                                        if (r === m) continue;
                                        return r;
                                    }
                                }
                                if ("next" === i.method) i.sent = i._sent = i.arg;
                                else if ("throw" === i.method) {
                                    if (a === d) throw a = p, i.arg;
                                    i.dispatchException(i.arg);
                                } else "return" === i.method && i.abrupt("return", i.arg);
                                a = h;
                                r = c(n, s, i);
                                if ("normal" === r.type) {
                                    if (a = i.done ? p : f, r.arg !== m) return {
                                        value: r.arg,
                                        done: i.done
                                    };
                                } else "throw" === r.type && (a = p, i.method = "throw", i.arg = r.arg);
                            }
                        }), t;
                    }
                    function c(e1, t, r) {
                        try {
                            return {
                                type: "normal",
                                arg: e1.call(t, r)
                            };
                        } catch (e1) {
                            return {
                                type: "throw",
                                arg: e1
                            };
                        }
                    }
                    s.wrap = i;
                    var d = "suspendedStart", f = "suspendedYield", h = "executing", p = "completed", m = {};
                    function y() {}
                    function a() {}
                    function g() {}
                    var t = {}, v = (t[o] = function() {
                        return this;
                    }, Object.getPrototypeOf), v = v && v(v(E([]))), b = (v && v !== e1 && u.call(v, o) && (t = v), g.prototype = y.prototype = Object.create(t));
                    function j(e1) {
                        [
                            "next",
                            "throw",
                            "return"
                        ].forEach(function(t) {
                            e1[t] = function(e1) {
                                return this._invoke(t, e1);
                            };
                        });
                    }
                    function _(i) {
                        var t;
                        this._invoke = function(r, o) {
                            function e1() {
                                return new Promise(function(e1, t) {
                                    !function t(e1, r, o, n) {
                                        var s, e1 = c(i[e1], i, r);
                                        if ("throw" !== e1.type) return (r = (s = e1.arg).value) && "object" == typeof r && u.call(r, "__await") ? Promise.resolve(r.__await).then(function(e1) {
                                            t("next", e1, o, n);
                                        }, function(e1) {
                                            t("throw", e1, o, n);
                                        }) : Promise.resolve(r).then(function(e1) {
                                            s.value = e1, o(s);
                                        }, function(e1) {
                                            return t("throw", e1, o, n);
                                        });
                                        n(e1.arg);
                                    }(r, o, e1, t);
                                });
                            }
                            return t = t ? t.then(e1, e1) : e1();
                        };
                    }
                    function x(e1) {
                        var t = {
                            tryLoc: e1[0]
                        };
                        1 in e1 && (t.catchLoc = e1[1]), 2 in e1 && (t.finallyLoc = e1[2], t.afterLoc = e1[3]), this.tryEntries.push(t);
                    }
                    function w(e1) {
                        var t = e1.completion || {};
                        t.type = "normal", delete t.arg, e1.completion = t;
                    }
                    function S(e1) {
                        this.tryEntries = [
                            {
                                tryLoc: "root"
                            }
                        ], e1.forEach(x, this), this.reset(!0);
                    }
                    function E(t) {
                        if (t) {
                            var r, e1 = t[o];
                            if (e1) return e1.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) return r = -1, (e1 = function e1() {
                                for(; ++r < t.length;)if (u.call(t, r)) return e1.value = t[r], e1.done = !1, e1;
                                return e1.value = l, e1.done = !0, e1;
                            }).next = e1;
                        }
                        return {
                            next: M
                        };
                    }
                    function M() {
                        return {
                            value: l,
                            done: !0
                        };
                    }
                    return (a.prototype = b.constructor = g).constructor = a, g[n] = a.displayName = "GeneratorFunction", s.isGeneratorFunction = function(e1) {
                        e1 = "function" == typeof e1 && e1.constructor;
                        return !!e1 && (e1 === a || "GeneratorFunction" === (e1.displayName || e1.name));
                    }, s.mark = function(e1) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(e1, g) : (e1.__proto__ = g, n in e1 || (e1[n] = "GeneratorFunction")), e1.prototype = Object.create(b), e1;
                    }, s.awrap = function(e1) {
                        return {
                            __await: e1
                        };
                    }, j(_.prototype), _.prototype[r] = function() {
                        return this;
                    }, s.AsyncIterator = _, s.async = function(e1, t, r, o) {
                        var n = new _(i(e1, t, r, o));
                        return s.isGeneratorFunction(t) ? n : n.next().then(function(e1) {
                            return e1.done ? e1.value : n.next();
                        });
                    }, j(b), b[n] = "Generator", b[o] = function() {
                        return this;
                    }, b.toString = function() {
                        return "[object Generator]";
                    }, s.keys = function(r) {
                        var e1, o = [];
                        for(e1 in r)o.push(e1);
                        return o.reverse(), function e1() {
                            for(; o.length;){
                                var t = o.pop();
                                if (t in r) return e1.value = t, e1.done = !1, e1;
                            }
                            return e1.done = !0, e1;
                        };
                    }, s.values = E, S.prototype = {
                        constructor: S,
                        reset: function(e1) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = l, this.done = !1, this.delegate = null, this.method = "next", this.arg = l, this.tryEntries.forEach(w), !e1) for(var t in this)"t" === t.charAt(0) && u.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = l);
                        },
                        stop: function() {
                            this.done = !0;
                            var e1 = this.tryEntries[0].completion;
                            if ("throw" === e1.type) throw e1.arg;
                            return this.rval;
                        },
                        dispatchException: function(r) {
                            if (this.done) throw r;
                            var o = this;
                            function e1(e1, t) {
                                return s.type = "throw", s.arg = r, o.next = e1, t && (o.method = "next", o.arg = l), !!t;
                            }
                            for(var t = this.tryEntries.length - 1; 0 <= t; --t){
                                var n = this.tryEntries[t], s = n.completion;
                                if ("root" === n.tryLoc) return e1("end");
                                if (n.tryLoc <= this.prev) {
                                    var i = u.call(n, "catchLoc"), a = u.call(n, "finallyLoc");
                                    if (i && a) {
                                        if (this.prev < n.catchLoc) return e1(n.catchLoc, !0);
                                        if (this.prev < n.finallyLoc) return e1(n.finallyLoc);
                                    } else if (i) {
                                        if (this.prev < n.catchLoc) return e1(n.catchLoc, !0);
                                    } else {
                                        if (!a) throw new Error("try statement without catch or finally");
                                        if (this.prev < n.finallyLoc) return e1(n.finallyLoc);
                                    }
                                }
                            }
                        },
                        abrupt: function(e1, t) {
                            for(var r = this.tryEntries.length - 1; 0 <= r; --r){
                                var o = this.tryEntries[r];
                                if (o.tryLoc <= this.prev && u.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var n = o;
                                    break;
                                }
                            }
                            var s = (n = n && ("break" === e1 || "continue" === e1) && n.tryLoc <= t && t <= n.finallyLoc ? null : n) ? n.completion : {};
                            return s.type = e1, s.arg = t, n ? (this.method = "next", this.next = n.finallyLoc, m) : this.complete(s);
                        },
                        complete: function(e1, t) {
                            if ("throw" === e1.type) throw e1.arg;
                            return "break" === e1.type || "continue" === e1.type ? this.next = e1.arg : "return" === e1.type ? (this.rval = this.arg = e1.arg, this.method = "return", this.next = "end") : "normal" === e1.type && t && (this.next = t), m;
                        },
                        finish: function(e1) {
                            for(var t = this.tryEntries.length - 1; 0 <= t; --t){
                                var r = this.tryEntries[t];
                                if (r.finallyLoc === e1) return this.complete(r.completion, r.afterLoc), w(r), m;
                            }
                        },
                        catch: function(e1) {
                            for(var t = this.tryEntries.length - 1; 0 <= t; --t){
                                var r, o, n = this.tryEntries[t];
                                if (n.tryLoc === e1) return "throw" === (r = n.completion).type && (o = r.arg, w(n)), o;
                            }
                            throw new Error("illegal catch attempt");
                        },
                        delegateYield: function(e1, t, r) {
                            return this.delegate = {
                                iterator: E(e1),
                                resultName: t,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = l), m;
                        }
                    }, s;
                }("object" == typeof t ? t.exports : {});
                try {
                    regeneratorRuntime = t;
                } catch (e1) {
                    Function("r", "regeneratorRuntime = r")(t);
                }
            },
            {}
        ],
        251: [
            function(e1, t, r) {
                !function(e1) {
                    "use strict";
                    var t, r, i, o, n, s, a, l, u, c;
                    function d(e1) {
                        if ("string" != typeof e1 && (e1 = String(e1)), /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e1)) throw new TypeError("Invalid character in header field name");
                        return e1.toLowerCase();
                    }
                    function f(e1) {
                        return e1 = "string" != typeof e1 ? String(e1) : e1;
                    }
                    function h(t) {
                        var e1 = {
                            next: function() {
                                var e1 = t.shift();
                                return {
                                    done: void 0 === e1,
                                    value: e1
                                };
                            }
                        };
                        return r && (e1[Symbol.iterator] = function() {
                            return e1;
                        }), e1;
                    }
                    function p(t) {
                        this.map = {}, t instanceof p ? t.forEach(function(e1, t) {
                            this.append(t, e1);
                        }, this) : Array.isArray(t) ? t.forEach(function(e1) {
                            this.append(e1[0], e1[1]);
                        }, this) : t && Object.getOwnPropertyNames(t).forEach(function(e1) {
                            this.append(e1, t[e1]);
                        }, this);
                    }
                    function m(e1) {
                        if (e1.bodyUsed) return Promise.reject(new TypeError("Already read"));
                        e1.bodyUsed = !0;
                    }
                    function y(r) {
                        return new Promise(function(e1, t) {
                            r.onload = function() {
                                e1(r.result);
                            }, r.onerror = function() {
                                t(r.error);
                            };
                        });
                    }
                    function g(e1) {
                        var t = new FileReader, r = y(t);
                        return t.readAsArrayBuffer(e1), r;
                    }
                    function v(e1) {
                        var t;
                        return e1.slice ? e1.slice(0) : ((t = new Uint8Array(e1.byteLength)).set(new Uint8Array(e1)), t.buffer);
                    }
                    function b() {
                        return this.bodyUsed = !1, this._initBody = function(e1) {
                            if (this._bodyInit = e1) {
                                if ("string" == typeof e1) this._bodyText = e1;
                                else if (i && Blob.prototype.isPrototypeOf(e1)) this._bodyBlob = e1;
                                else if (o && FormData.prototype.isPrototypeOf(e1)) this._bodyFormData = e1;
                                else if (t && URLSearchParams.prototype.isPrototypeOf(e1)) this._bodyText = e1.toString();
                                else if (n && i && a(e1)) this._bodyArrayBuffer = v(e1.buffer), this._bodyInit = new Blob([
                                    this._bodyArrayBuffer
                                ]);
                                else {
                                    if (!n || !ArrayBuffer.prototype.isPrototypeOf(e1) && !l(e1)) throw new Error("unsupported BodyInit type");
                                    this._bodyArrayBuffer = v(e1);
                                }
                            } else this._bodyText = "";
                            this.headers.get("content-type") || ("string" == typeof e1 ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : t && URLSearchParams.prototype.isPrototypeOf(e1) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
                        }, i && (this.blob = function() {
                            var e1 = m(this);
                            if (e1) return e1;
                            if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                            if (this._bodyArrayBuffer) return Promise.resolve(new Blob([
                                this._bodyArrayBuffer
                            ]));
                            if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                            return Promise.resolve(new Blob([
                                this._bodyText
                            ]));
                        }, this.arrayBuffer = function() {
                            return this._bodyArrayBuffer ? m(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(g);
                        }), this.text = function() {
                            var e1, t, r = m(this);
                            if (r) return r;
                            if (this._bodyBlob) return r = this._bodyBlob, e1 = new FileReader, t = y(e1), e1.readAsText(r), t;
                            if (this._bodyArrayBuffer) return Promise.resolve(function(e1) {
                                for(var t = new Uint8Array(e1), r = new Array(t.length), o = 0; o < t.length; o++)r[o] = String.fromCharCode(t[o]);
                                return r.join("");
                            }(this._bodyArrayBuffer));
                            if (this._bodyFormData) throw new Error("could not read FormData body as text");
                            return Promise.resolve(this._bodyText);
                        }, o && (this.formData = function() {
                            return this.text().then(_);
                        }), this.json = function() {
                            return this.text().then(JSON.parse);
                        }, this;
                    }
                    function j(e1, t) {
                        var r, o = (t = t || {}).body;
                        if (e1 instanceof j) {
                            if (e1.bodyUsed) throw new TypeError("Already read");
                            this.url = e1.url, this.credentials = e1.credentials, t.headers || (this.headers = new p(e1.headers)), this.method = e1.method, this.mode = e1.mode, o || null == e1._bodyInit || (o = e1._bodyInit, e1.bodyUsed = !0);
                        } else this.url = String(e1);
                        if (this.credentials = t.credentials || this.credentials || "omit", !t.headers && this.headers || (this.headers = new p(t.headers)), this.method = (e1 = t.method || this.method || "GET", r = e1.toUpperCase(), -1 < u.indexOf(r) ? r : e1), this.mode = t.mode || this.mode || null, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && o) throw new TypeError("Body not allowed for GET or HEAD requests");
                        this._initBody(o);
                    }
                    function _(e1) {
                        var r = new FormData;
                        return e1.trim().split("&").forEach(function(e1) {
                            var t;
                            e1 && (t = (e1 = e1.split("=")).shift().replace(/\+/g, " "), e1 = e1.join("=").replace(/\+/g, " "), r.append(decodeURIComponent(t), decodeURIComponent(e1)));
                        }), r;
                    }
                    function x(e1, t) {
                        t = t || {}, this.type = "default", this.status = void 0 === t.status ? 200 : t.status, this.ok = 200 <= this.status && this.status < 300, this.statusText = "statusText" in t ? t.statusText : "OK", this.headers = new p(t.headers), this.url = t.url || "", this._initBody(e1);
                    }
                    e1.fetch || (t = "URLSearchParams" in e1, r = "Symbol" in e1 && "iterator" in Symbol, i = "FileReader" in e1 && "Blob" in e1 && function() {
                        try {
                            return new Blob, !0;
                        } catch (e1) {
                            return !1;
                        }
                    }(), o = "FormData" in e1, (n = "ArrayBuffer" in e1) && (s = [
                        "[object Int8Array]",
                        "[object Uint8Array]",
                        "[object Uint8ClampedArray]",
                        "[object Int16Array]",
                        "[object Uint16Array]",
                        "[object Int32Array]",
                        "[object Uint32Array]",
                        "[object Float32Array]",
                        "[object Float64Array]"
                    ], a = function(e1) {
                        return e1 && DataView.prototype.isPrototypeOf(e1);
                    }, l = ArrayBuffer.isView || function(e1) {
                        return e1 && -1 < s.indexOf(Object.prototype.toString.call(e1));
                    }), p.prototype.append = function(e1, t) {
                        e1 = d(e1), t = f(t);
                        var r = this.map[e1];
                        this.map[e1] = r ? r + "," + t : t;
                    }, p.prototype.delete = function(e1) {
                        delete this.map[d(e1)];
                    }, p.prototype.get = function(e1) {
                        return e1 = d(e1), this.has(e1) ? this.map[e1] : null;
                    }, p.prototype.has = function(e1) {
                        return this.map.hasOwnProperty(d(e1));
                    }, p.prototype.set = function(e1, t) {
                        this.map[d(e1)] = f(t);
                    }, p.prototype.forEach = function(e1, t) {
                        for(var r in this.map)this.map.hasOwnProperty(r) && e1.call(t, this.map[r], r, this);
                    }, p.prototype.keys = function() {
                        var r = [];
                        return this.forEach(function(e1, t) {
                            r.push(t);
                        }), h(r);
                    }, p.prototype.values = function() {
                        var t = [];
                        return this.forEach(function(e1) {
                            t.push(e1);
                        }), h(t);
                    }, p.prototype.entries = function() {
                        var r = [];
                        return this.forEach(function(e1, t) {
                            r.push([
                                t,
                                e1
                            ]);
                        }), h(r);
                    }, r && (p.prototype[Symbol.iterator] = p.prototype.entries), u = [
                        "DELETE",
                        "GET",
                        "HEAD",
                        "OPTIONS",
                        "POST",
                        "PUT"
                    ], j.prototype.clone = function() {
                        return new j(this, {
                            body: this._bodyInit
                        });
                    }, b.call(j.prototype), b.call(x.prototype), x.prototype.clone = function() {
                        return new x(this._bodyInit, {
                            status: this.status,
                            statusText: this.statusText,
                            headers: new p(this.headers),
                            url: this.url
                        });
                    }, x.error = function() {
                        var e1 = new x(null, {
                            status: 0,
                            statusText: ""
                        });
                        return e1.type = "error", e1;
                    }, c = [
                        301,
                        302,
                        303,
                        307,
                        308
                    ], x.redirect = function(e1, t) {
                        if (-1 === c.indexOf(t)) throw new RangeError("Invalid status code");
                        return new x(null, {
                            status: t,
                            headers: {
                                location: e1
                            }
                        });
                    }, e1.Headers = p, e1.Request = j, e1.Response = x, e1.fetch = function(r, s) {
                        return new Promise(function(o, e1) {
                            var t = new j(r, s), n = new XMLHttpRequest;
                            n.onload = function() {
                                var r, e1 = {
                                    status: n.status,
                                    statusText: n.statusText,
                                    headers: (e1 = n.getAllResponseHeaders() || "", r = new p, e1.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach(function(e1) {
                                        var e1 = e1.split(":"), t = e1.shift().trim();
                                        t && (e1 = e1.join(":").trim(), r.append(t, e1));
                                    }), r)
                                }, t = (e1.url = "responseURL" in n ? n.responseURL : e1.headers.get("X-Request-URL"), "response" in n ? n.response : n.responseText);
                                o(new x(t, e1));
                            }, n.onerror = function() {
                                e1(new TypeError("Network request failed"));
                            }, n.ontimeout = function() {
                                e1(new TypeError("Network request failed"));
                            }, n.open(t.method, t.url, !0), "include" === t.credentials ? n.withCredentials = !0 : "omit" === t.credentials && (n.withCredentials = !1), "responseType" in n && i && (n.responseType = "blob"), t.headers.forEach(function(e1, t) {
                                n.setRequestHeader(t, e1);
                            }), n.send(void 0 === t._bodyInit ? null : t._bodyInit);
                        });
                    }, e1.fetch.polyfill = !0);
                }("undefined" != typeof self ? self : this);
            },
            {}
        ],
        252: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.function.name"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.function.name"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l, o = n(e1("../core/main")), u = n(e1("../color/color_conversion"));
                function n(e1) {
                    return e1 && e1.__esModule ? e1 : {
                        default: e1
                    };
                }
                var c = [
                    {
                        h: 0,
                        s: 0,
                        b: .8275,
                        name: "gray"
                    },
                    {
                        h: 0,
                        s: 0,
                        b: .8627,
                        name: "gray"
                    },
                    {
                        h: 0,
                        s: 0,
                        b: .7529,
                        name: "gray"
                    },
                    {
                        h: .0167,
                        s: .1176,
                        b: 1,
                        name: "light pink"
                    }
                ], d = [
                    {
                        h: 0,
                        s: 0,
                        b: 0,
                        name: "black"
                    },
                    {
                        h: 0,
                        s: 0,
                        b: .5,
                        name: "gray"
                    },
                    {
                        h: 0,
                        s: 0,
                        b: 1,
                        name: "white"
                    },
                    {
                        h: 0,
                        s: .5,
                        b: .5,
                        name: "dark maroon"
                    },
                    {
                        h: 0,
                        s: .5,
                        b: 1,
                        name: "salmon pink"
                    },
                    {
                        h: 0,
                        s: 1,
                        b: 0,
                        name: "black"
                    },
                    {
                        h: 0,
                        s: 1,
                        b: .5,
                        name: "dark red"
                    },
                    {
                        h: 0,
                        s: 1,
                        b: 1,
                        name: "red"
                    },
                    {
                        h: 5,
                        s: 0,
                        b: 1,
                        name: "very light peach"
                    },
                    {
                        h: 5,
                        s: .5,
                        b: .5,
                        name: "brown"
                    },
                    {
                        h: 5,
                        s: .5,
                        b: 1,
                        name: "peach"
                    },
                    {
                        h: 5,
                        s: 1,
                        b: .5,
                        name: "brick red"
                    },
                    {
                        h: 5,
                        s: 1,
                        b: 1,
                        name: "crimson"
                    },
                    {
                        h: 10,
                        s: 0,
                        b: 1,
                        name: "light peach"
                    },
                    {
                        h: 10,
                        s: .5,
                        b: .5,
                        name: "brown"
                    },
                    {
                        h: 10,
                        s: .5,
                        b: 1,
                        name: "light orange"
                    },
                    {
                        h: 10,
                        s: 1,
                        b: .5,
                        name: "brown"
                    },
                    {
                        h: 10,
                        s: 1,
                        b: 1,
                        name: "orange"
                    },
                    {
                        h: 15,
                        s: 0,
                        b: 1,
                        name: "very light yellow"
                    },
                    {
                        h: 15,
                        s: .5,
                        b: .5,
                        name: "olive green"
                    },
                    {
                        h: 15,
                        s: .5,
                        b: 1,
                        name: "light yellow"
                    },
                    {
                        h: 15,
                        s: 1,
                        b: 0,
                        name: "dark olive green"
                    },
                    {
                        h: 15,
                        s: 1,
                        b: .5,
                        name: "olive green"
                    },
                    {
                        h: 15,
                        s: 1,
                        b: 1,
                        name: "yellow"
                    },
                    {
                        h: 20,
                        s: 0,
                        b: 1,
                        name: "very light yellow"
                    },
                    {
                        h: 20,
                        s: .5,
                        b: .5,
                        name: "olive green"
                    },
                    {
                        h: 20,
                        s: .5,
                        b: 1,
                        name: "light yellow green"
                    },
                    {
                        h: 20,
                        s: 1,
                        b: 0,
                        name: "dark olive green"
                    },
                    {
                        h: 20,
                        s: 1,
                        b: .5,
                        name: "dark yellow green"
                    },
                    {
                        h: 20,
                        s: 1,
                        b: 1,
                        name: "yellow green"
                    },
                    {
                        h: 25,
                        s: .5,
                        b: .5,
                        name: "dark yellow green"
                    },
                    {
                        h: 25,
                        s: .5,
                        b: 1,
                        name: "light green"
                    },
                    {
                        h: 25,
                        s: 1,
                        b: .5,
                        name: "dark green"
                    },
                    {
                        h: 25,
                        s: 1,
                        b: 1,
                        name: "green"
                    },
                    {
                        h: 30,
                        s: .5,
                        b: 1,
                        name: "light green"
                    },
                    {
                        h: 30,
                        s: 1,
                        b: .5,
                        name: "dark green"
                    },
                    {
                        h: 30,
                        s: 1,
                        b: 1,
                        name: "green"
                    },
                    {
                        h: 35,
                        s: 0,
                        b: .5,
                        name: "light green"
                    },
                    {
                        h: 35,
                        s: 0,
                        b: 1,
                        name: "very light green"
                    },
                    {
                        h: 35,
                        s: .5,
                        b: .5,
                        name: "dark green"
                    },
                    {
                        h: 35,
                        s: .5,
                        b: 1,
                        name: "light green"
                    },
                    {
                        h: 35,
                        s: 1,
                        b: 0,
                        name: "very dark green"
                    },
                    {
                        h: 35,
                        s: 1,
                        b: .5,
                        name: "dark green"
                    },
                    {
                        h: 35,
                        s: 1,
                        b: 1,
                        name: "green"
                    },
                    {
                        h: 40,
                        s: 0,
                        b: 1,
                        name: "very light green"
                    },
                    {
                        h: 40,
                        s: .5,
                        b: .5,
                        name: "dark green"
                    },
                    {
                        h: 40,
                        s: .5,
                        b: 1,
                        name: "light green"
                    },
                    {
                        h: 40,
                        s: 1,
                        b: .5,
                        name: "dark green"
                    },
                    {
                        h: 40,
                        s: 1,
                        b: 1,
                        name: "green"
                    },
                    {
                        h: 45,
                        s: .5,
                        b: 1,
                        name: "light turquoise"
                    },
                    {
                        h: 45,
                        s: 1,
                        b: .5,
                        name: "dark turquoise"
                    },
                    {
                        h: 45,
                        s: 1,
                        b: 1,
                        name: "turquoise"
                    },
                    {
                        h: 50,
                        s: 0,
                        b: 1,
                        name: "light sky blue"
                    },
                    {
                        h: 50,
                        s: .5,
                        b: .5,
                        name: "dark cyan"
                    },
                    {
                        h: 50,
                        s: .5,
                        b: 1,
                        name: "light cyan"
                    },
                    {
                        h: 50,
                        s: 1,
                        b: .5,
                        name: "dark cyan"
                    },
                    {
                        h: 50,
                        s: 1,
                        b: 1,
                        name: "cyan"
                    },
                    {
                        h: 55,
                        s: 0,
                        b: 1,
                        name: "light sky blue"
                    },
                    {
                        h: 55,
                        s: .5,
                        b: 1,
                        name: "light sky blue"
                    },
                    {
                        h: 55,
                        s: 1,
                        b: .5,
                        name: "dark blue"
                    },
                    {
                        h: 55,
                        s: 1,
                        b: 1,
                        name: "sky blue"
                    },
                    {
                        h: 60,
                        s: 0,
                        b: .5,
                        name: "gray"
                    },
                    {
                        h: 60,
                        s: 0,
                        b: 1,
                        name: "very light blue"
                    },
                    {
                        h: 60,
                        s: .5,
                        b: .5,
                        name: "blue"
                    },
                    {
                        h: 60,
                        s: .5,
                        b: 1,
                        name: "light blue"
                    },
                    {
                        h: 60,
                        s: 1,
                        b: .5,
                        name: "navy blue"
                    },
                    {
                        h: 60,
                        s: 1,
                        b: 1,
                        name: "blue"
                    },
                    {
                        h: 65,
                        s: 0,
                        b: 1,
                        name: "lavender"
                    },
                    {
                        h: 65,
                        s: .5,
                        b: .5,
                        name: "navy blue"
                    },
                    {
                        h: 65,
                        s: .5,
                        b: 1,
                        name: "light purple"
                    },
                    {
                        h: 65,
                        s: 1,
                        b: .5,
                        name: "dark navy blue"
                    },
                    {
                        h: 65,
                        s: 1,
                        b: 1,
                        name: "blue"
                    },
                    {
                        h: 70,
                        s: 0,
                        b: 1,
                        name: "lavender"
                    },
                    {
                        h: 70,
                        s: .5,
                        b: .5,
                        name: "navy blue"
                    },
                    {
                        h: 70,
                        s: .5,
                        b: 1,
                        name: "lavender blue"
                    },
                    {
                        h: 70,
                        s: 1,
                        b: .5,
                        name: "dark navy blue"
                    },
                    {
                        h: 70,
                        s: 1,
                        b: 1,
                        name: "blue"
                    },
                    {
                        h: 75,
                        s: .5,
                        b: 1,
                        name: "lavender"
                    },
                    {
                        h: 75,
                        s: 1,
                        b: .5,
                        name: "dark purple"
                    },
                    {
                        h: 75,
                        s: 1,
                        b: 1,
                        name: "purple"
                    },
                    {
                        h: 80,
                        s: .5,
                        b: 1,
                        name: "pinkish purple"
                    },
                    {
                        h: 80,
                        s: 1,
                        b: .5,
                        name: "dark purple"
                    },
                    {
                        h: 80,
                        s: 1,
                        b: 1,
                        name: "purple"
                    },
                    {
                        h: 85,
                        s: 0,
                        b: 1,
                        name: "light pink"
                    },
                    {
                        h: 85,
                        s: .5,
                        b: .5,
                        name: "purple"
                    },
                    {
                        h: 85,
                        s: .5,
                        b: 1,
                        name: "light fuchsia"
                    },
                    {
                        h: 85,
                        s: 1,
                        b: .5,
                        name: "dark fuchsia"
                    },
                    {
                        h: 85,
                        s: 1,
                        b: 1,
                        name: "fuchsia"
                    },
                    {
                        h: 90,
                        s: .5,
                        b: .5,
                        name: "dark fuchsia"
                    },
                    {
                        h: 90,
                        s: .5,
                        b: 1,
                        name: "hot pink"
                    },
                    {
                        h: 90,
                        s: 1,
                        b: .5,
                        name: "dark fuchsia"
                    },
                    {
                        h: 90,
                        s: 1,
                        b: 1,
                        name: "fuchsia"
                    },
                    {
                        h: 95,
                        s: 0,
                        b: 1,
                        name: "pink"
                    },
                    {
                        h: 95,
                        s: .5,
                        b: 1,
                        name: "light pink"
                    },
                    {
                        h: 95,
                        s: 1,
                        b: .5,
                        name: "dark magenta"
                    },
                    {
                        h: 95,
                        s: 1,
                        b: 1,
                        name: "magenta"
                    }
                ];
                o.default.prototype._rgbColorName = function(e1) {
                    var t, r, e1 = u.default._rgbaToHSBA(e1), o = [
                        (l = e1)[0],
                        e1[1],
                        e1[2]
                    ];
                    0 !== o[0] && (o[0] = Math.round(100 * o[0]), (e1 = o[0].toString().split(""))[r = e1.length - 1] = parseInt(e1[r]), e1[r] < 2.5 ? e1[r] = 0 : 2.5 <= e1[r] && e1[r] < 7.5 && (e1[r] = 5), 2 === e1.length ? (e1[0] = parseInt(e1[0]), 7.5 <= e1[r] && (e1[r] = 0, e1[0] = e1[0] + 1), o[0] = 10 * e1[0] + e1[1]) : 7.5 <= e1[r] ? o[0] = 10 : o[0] = e1[r]), o[2] = o[2] / 255;
                    for(var n = o.length - 1; 1 <= n; n--)o[n] <= .25 ? o[n] = 0 : .25 < o[n] && o[n] < .75 ? o[n] = .5 : o[n] = 1;
                    if (0 === o[0] && 0 === o[1] && 1 === o[2]) {
                        for(var s = 2; 0 <= s; s--)l[s] = Math.round(1e4 * l[s]) / 1e4;
                        for(var i = 0; i < c.length; i++){
                            if (c[i].h === l[0] && c[i].s === l[1] && c[i].b === l[2]) {
                                t = c[i].name;
                                break;
                            }
                            t = "white";
                        }
                    } else for(var a = 0; a < d.length; a++)if (d[a].h === o[0] && d[a].s === o[1] && d[a].b === o[2]) {
                        t = d[a].name;
                        break;
                    }
                    return t;
                };
                e1 = o.default;
                r.default = e1;
            },
            {
                "../color/color_conversion": 258,
                "../core/main": 273,
                "core-js/modules/es.function.name": 167,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.split": 196
            }
        ],
        253: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.ends-with"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.ends-with"), e1("core-js/modules/es.string.replace"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                var i = "_Description", a = "_fallbackDesc", l = "_fallbackTable", u = "_Label", c = "_labelDesc", d = "_labelTable";
                function f(e1) {
                    if ("label" === e1 || "fallback" === e1) throw new Error("description should not be LABEL or FALLBACK");
                    return e1.endsWith(".") || e1.endsWith(";") || e1.endsWith(",") || e1.endsWith("?") || e1.endsWith("!") || (e1 += "."), e1;
                }
                s.default.prototype.describe = function(e1, t) {
                    var r;
                    s.default._validateParameters("describe", arguments), "string" == typeof e1 && (r = this.canvas.id, e1 = f(e1), this.dummyDOM || (this.dummyDOM = document.getElementById(r).parentNode), this.descriptions || (this.descriptions = {}), this.descriptions.fallback ? this.descriptions.fallback.innerHTML !== e1 && (this.descriptions.fallback.innerHTML = e1) : this._describeHTML("fallback", e1), t === this.LABEL && (this.descriptions.label ? this.descriptions.label.innerHTML !== e1 && (this.descriptions.label.innerHTML = e1) : this._describeHTML("label", e1)));
                }, s.default.prototype.describeElement = function(e1, t, r) {
                    var o, n;
                    s.default._validateParameters("describeElement", arguments), "string" == typeof t && "string" == typeof e1 && (o = this.canvas.id, t = f(t), n = function(e1) {
                        if ("label" === e1 || "fallback" === e1) throw new Error("element name should not be LABEL or FALLBACK");
                        e1.endsWith(".") || e1.endsWith(";") || e1.endsWith(",") ? e1 = e1.replace(/.$/, ":") : e1.endsWith(":") || (e1 += ":");
                        return e1;
                    }(e1), e1 = e1.replace(/[^a-zA-Z0-9]/g, ""), n = '<th scope="row">'.concat(n, "</th><td>").concat(t, "</td>"), this.dummyDOM || (this.dummyDOM = document.getElementById(o).parentNode), this.descriptions ? this.descriptions.fallbackElements || (this.descriptions.fallbackElements = {}) : this.descriptions = {
                        fallbackElements: {}
                    }, this.descriptions.fallbackElements[e1] ? this.descriptions.fallbackElements[e1].innerHTML !== n && (this.descriptions.fallbackElements[e1].innerHTML = n) : this._describeElementHTML("fallback", e1, n), r === this.LABEL && (this.descriptions.labelElements || (this.descriptions.labelElements = {}), this.descriptions.labelElements[e1] ? this.descriptions.labelElements[e1].innerHTML !== n && (this.descriptions.labelElements[e1].innerHTML = n) : this._describeElementHTML("label", e1, n)));
                }, s.default.prototype._describeHTML = function(e1, t) {
                    var r, o = this.canvas.id;
                    "fallback" === e1 ? (this.dummyDOM.querySelector("#".concat(o + i)) ? this.dummyDOM.querySelector("#" + o + l).insertAdjacentHTML("beforebegin", '<p id="'.concat(o + a, '"></p>')) : (r = '<div id="'.concat(o).concat(i, '" role="region" aria-label="Canvas Description"><p id="').concat(o).concat(a, '"></p></div>'), this.dummyDOM.querySelector("#".concat(o, "accessibleOutput")) ? this.dummyDOM.querySelector("#".concat(o, "accessibleOutput")).insertAdjacentHTML("beforebegin", r) : this.dummyDOM.querySelector("#".concat(o)).innerHTML = r), this.descriptions.fallback = this.dummyDOM.querySelector("#".concat(o).concat(a)), this.descriptions.fallback.innerHTML = t) : "label" === e1 && (this.dummyDOM.querySelector("#".concat(o + u)) ? this.dummyDOM.querySelector("#".concat(o + d)) && this.dummyDOM.querySelector("#".concat(o + d)).insertAdjacentHTML("beforebegin", '<p id="'.concat(o).concat(c, '"></p>')) : (r = '<div id="'.concat(o).concat(u, '" class="p5Label"><p id="').concat(o).concat(c, '"></p></div>'), this.dummyDOM.querySelector("#".concat(o, "accessibleOutputLabel")) ? this.dummyDOM.querySelector("#".concat(o, "accessibleOutputLabel")).insertAdjacentHTML("beforebegin", r) : this.dummyDOM.querySelector("#" + o).insertAdjacentHTML("afterend", r)), this.descriptions.label = this.dummyDOM.querySelector("#" + o + c), this.descriptions.label.innerHTML = t);
                }, s.default.prototype._describeElementHTML = function(e1, t, r) {
                    var o, n = this.canvas.id;
                    "fallback" === e1 ? (this.dummyDOM.querySelector("#".concat(n + i)) ? this.dummyDOM.querySelector("#" + n + l) || this.dummyDOM.querySelector("#" + n + a).insertAdjacentHTML("afterend", '<table id="'.concat(n).concat(l, '"><caption>Canvas elements and their descriptions</caption></table>')) : (o = '<div id="'.concat(n).concat(i, '" role="region" aria-label="Canvas Description"><table id="').concat(n).concat(l, '"><caption>Canvas elements and their descriptions</caption></table></div>'), this.dummyDOM.querySelector("#".concat(n, "accessibleOutput")) ? this.dummyDOM.querySelector("#".concat(n, "accessibleOutput")).insertAdjacentHTML("beforebegin", o) : this.dummyDOM.querySelector("#" + n).innerHTML = o), (o = document.createElement("tr")).id = n + "_fte_" + t, this.dummyDOM.querySelector("#" + n + l).appendChild(o), this.descriptions.fallbackElements[t] = this.dummyDOM.querySelector("#".concat(n).concat("_fte_").concat(t)), this.descriptions.fallbackElements[t].innerHTML = r) : "label" === e1 && (this.dummyDOM.querySelector("#".concat(n + u)) ? this.dummyDOM.querySelector("#".concat(n + d)) || this.dummyDOM.querySelector("#" + n + c).insertAdjacentHTML("afterend", '<table id="'.concat(n + d, '"></table>')) : (o = '<div id="'.concat(n).concat(u, '" class="p5Label"><table id="').concat(n).concat(d, '"></table></div>'), this.dummyDOM.querySelector("#".concat(n, "accessibleOutputLabel")) ? this.dummyDOM.querySelector("#".concat(n, "accessibleOutputLabel")).insertAdjacentHTML("beforebegin", o) : this.dummyDOM.querySelector("#" + n).insertAdjacentHTML("afterend", o)), (e1 = document.createElement("tr")).id = n + "_lte_" + t, this.dummyDOM.querySelector("#" + n + d).appendChild(e1), this.descriptions.labelElements[t] = this.dummyDOM.querySelector("#".concat(n).concat("_lte_").concat(t)), this.descriptions.labelElements[t].innerHTML = r);
                };
                e1 = s.default;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.string.ends-with": 188,
                "core-js/modules/es.string.replace": 194
            }
        ],
        254: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.string.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e1 = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                e1.default.prototype._updateGridOutput = function(e1) {
                    var t, r, o, n;
                    this.dummyDOM.querySelector("#".concat(e1, "_summary")) && (t = this._accessibleOutputs[e1], o = function(e1, t, r, o) {
                        t = "".concat(t, " canvas, ").concat(r, " by ").concat(o, " pixels, contains ").concat(e1[0]);
                        t = (1 === e1[0] ? "".concat(t, " shape: ") : "".concat(t, " shapes: ")).concat(e1[1]);
                        return t;
                    }((r = function(e1, t) {
                        var r, o = "", n = "", s = 0;
                        for(r in t){
                            var i, a = 0;
                            for(i in t[r]){
                                var l = '<li id="'.concat(e1, "shape").concat(s, '">').concat(t[r][i].color, " ").concat(r, ",");
                                "line" === r ? l += " location = ".concat(t[r][i].pos, ", length = ").concat(t[r][i].length, " pixels") : (l += " location = ".concat(t[r][i].pos), "point" !== r && (l += ", area = ".concat(t[r][i].area, " %")), l += "</li>"), o += l, a++, s++;
                            }
                            n = 1 < a ? "".concat(n, " ").concat(a, " ").concat(r, "s") : "".concat(n, " ").concat(a, " ").concat(r);
                        }
                        return {
                            numShapes: [
                                s,
                                n
                            ],
                            details: o
                        };
                    }(e1, this.ingredients.shapes)).numShapes, this.ingredients.colors.background, this.width, this.height), n = function(e1, t) {
                        var r, o, n = 0, s = "", i = Array.from(Array(10), function() {
                            return Array(10);
                        });
                        for(r in t)for(var a in t[r]){
                            var l = void 0;
                            l = "line" !== r ? '<a href="#'.concat(e1, "shape").concat(n, '">').concat(t[r][a].color, " ").concat(r, "</a>") : '<a href="#'.concat(e1, "shape").concat(n, '">').concat(t[r][a].color, " ").concat(r, " midpoint</a>"), i[t[r][a].loc.locY][t[r][a].loc.locX] ? i[t[r][a].loc.locY][t[r][a].loc.locX] = i[t[r][a].loc.locY][t[r][a].loc.locX] + "  " + l : i[t[r][a].loc.locY][t[r][a].loc.locX] = l, n++;
                        }
                        for(o in i){
                            var u, c = "<tr>";
                            for(u in i[o])c += "<td>", void 0 !== i[o][u] && (c += i[o][u]), c += "</td>";
                            s = s + c + "</tr>";
                        }
                        return s;
                    }(e1, this.ingredients.shapes), o !== t.summary.innerHTML && (t.summary.innerHTML = o), n !== t.map.innerHTML && (t.map.innerHTML = n), r.details !== t.shapeDetails.innerHTML && (t.shapeDetails.innerHTML = r.details), this._accessibleOutputs[e1] = t);
                };
                e1 = e1.default;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.from": 157,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.string.iterator": 190
            }
        ],
        255: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.number.to-fixed"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.number.to-fixed"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var o = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function l(e1) {
                    return function(e1) {
                        if (Array.isArray(e1)) {
                            for(var t = 0, r = new Array(e1.length); t < e1.length; t++)r[t] = e1[t];
                            return r;
                        }
                    }(e1) || function(e1) {
                        if (Symbol.iterator in Object(e1) || "[object Arguments]" === Object.prototype.toString.call(e1)) return Array.from(e1);
                    }(e1) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                function u(e1, t, r) {
                    t = Math.floor(e1[0] / t * 10), e1 = Math.floor(e1[1] / r * 10);
                    return 10 === t && (t -= 1), 10 === e1 && (e1 -= 1), {
                        locX: t,
                        locY: e1
                    };
                }
                o.default.prototype.textOutput = function(e1) {
                    o.default._validateParameters("textOutput", arguments), this._accessibleOutputs.text || (this._accessibleOutputs.text = !0, this._createOutput("textOutput", "Fallback"), e1 === this.LABEL && (this._accessibleOutputs.textLabel = !0, this._createOutput("textOutput", "Label")));
                }, o.default.prototype.gridOutput = function(e1) {
                    o.default._validateParameters("gridOutput", arguments), this._accessibleOutputs.grid || (this._accessibleOutputs.grid = !0, this._createOutput("gridOutput", "Fallback"), e1 === this.LABEL && (this._accessibleOutputs.gridLabel = !0, this._createOutput("gridOutput", "Label")));
                }, o.default.prototype._addAccsOutput = function() {
                    return this._accessibleOutputs || (this._accessibleOutputs = {
                        text: !1,
                        grid: !1,
                        textLabel: !1,
                        gridLabel: !1
                    }), this._accessibleOutputs.grid || this._accessibleOutputs.text;
                }, o.default.prototype._createOutput = function(e1, t) {
                    var r, o, n, s = this.canvas.id, i = (this.ingredients || (this.ingredients = {
                        shapes: {},
                        colors: {
                            background: "white",
                            fill: "white",
                            stroke: "black"
                        },
                        pShapes: ""
                    }), this.dummyDOM || (this.dummyDOM = document.getElementById(s).parentNode), "");
                    "Fallback" === t ? (r = s + e1, this.dummyDOM.querySelector("#".concat(o = s + "accessibleOutput")) || (this.dummyDOM.querySelector("#".concat(s, "_Description")) ? this.dummyDOM.querySelector("#".concat(s, "_Description")).insertAdjacentHTML("afterend", '<div id="'.concat(o, '" role="region" aria-label="Canvas Outputs"></div>')) : this.dummyDOM.querySelector("#".concat(s)).innerHTML = '<div id="'.concat(o, '" role="region" aria-label="Canvas Outputs"></div>'))) : "Label" === t && (r = s + e1 + (i = t), this.dummyDOM.querySelector("#".concat(o = s + "accessibleOutput" + t)) || (this.dummyDOM.querySelector("#".concat(s, "_Label")) ? this.dummyDOM.querySelector("#".concat(s, "_Label")) : this.dummyDOM.querySelector("#".concat(s))).insertAdjacentHTML("afterend", '<div id="'.concat(o, '"></div>'))), this._accessibleOutputs[r] = {}, "textOutput" === e1 ? (i = "#".concat(s, "gridOutput").concat(i), n = '<div id="'.concat(r, '">Text Output<div id="').concat(r, 'Summary" aria-label="text output summary"><p id="').concat(r, '_summary"></p><ul id="').concat(r, '_list"></ul></div><table id="').concat(r, '_shapeDetails" summary="text output shape details"></table></div>'), this.dummyDOM.querySelector(i) ? this.dummyDOM.querySelector(i).insertAdjacentHTML("beforebegin", n) : this.dummyDOM.querySelector("#".concat(o)).innerHTML = n, this._accessibleOutputs[r].list = this.dummyDOM.querySelector("#".concat(r, "_list"))) : "gridOutput" === e1 && (i = "#".concat(s, "textOutput").concat(i), n = '<div id="'.concat(r, '">Grid Output<p id="').concat(r, '_summary" aria-label="grid output summary"><table id="').concat(r, '_map" summary="grid output content"></table><ul id="').concat(r, '_shapeDetails" aria-label="grid output shape details"></ul></div>'), this.dummyDOM.querySelector(i) ? this.dummyDOM.querySelector(i).insertAdjacentHTML("afterend", n) : this.dummyDOM.querySelector("#".concat(o)).innerHTML = n, this._accessibleOutputs[r].map = this.dummyDOM.querySelector("#".concat(r, "_map"))), this._accessibleOutputs[r].shapeDetails = this.dummyDOM.querySelector("#".concat(r, "_shapeDetails")), this._accessibleOutputs[r].summary = this.dummyDOM.querySelector("#".concat(r, "_summary"));
                }, o.default.prototype._updateAccsOutput = function() {
                    var e1 = this.canvas.id;
                    JSON.stringify(this.ingredients.shapes) !== this.ingredients.pShapes && (this.ingredients.pShapes = JSON.stringify(this.ingredients.shapes), this._accessibleOutputs.text && this._updateTextOutput(e1 + "textOutput"), this._accessibleOutputs.grid && this._updateGridOutput(e1 + "gridOutput"), this._accessibleOutputs.textLabel && this._updateTextOutput(e1 + "textOutputLabel"), this._accessibleOutputs.gridLabel && this._updateGridOutput(e1 + "gridOutputLabel"));
                }, o.default.prototype._accsBackground = function(e1) {
                    this.ingredients.pShapes = JSON.stringify(this.ingredients.shapes), this.ingredients.shapes = {}, this.ingredients.colors.backgroundRGBA !== e1 && (this.ingredients.colors.backgroundRGBA = e1, this.ingredients.colors.background = this._rgbColorName(e1));
                }, o.default.prototype._accsCanvasColors = function(e1, t) {
                    "fill" === e1 ? this.ingredients.colors.fillRGBA !== t && (this.ingredients.colors.fillRGBA = t, this.ingredients.colors.fill = this._rgbColorName(t)) : "stroke" === e1 && this.ingredients.colors.strokeRGBA !== t && (this.ingredients.colors.strokeRGBA = t, this.ingredients.colors.stroke = this._rgbColorName(t));
                }, o.default.prototype._accsOutput = function(e1, t) {
                    "ellipse" === e1 && t[2] === t[3] ? e1 = "circle" : "rectangle" === e1 && t[2] === t[3] && (e1 = "square");
                    var r, o, n = {}, s = !0, i = function(e1, t) {
                        var r;
                        e1 = "rectangle" === e1 || "ellipse" === e1 || "arc" === e1 || "circle" === e1 || "square" === e1 ? (r = Math.round(t[0] + t[2] / 2), Math.round(t[1] + t[3] / 2)) : "triangle" === e1 ? (r = (t[0] + t[2] + t[4]) / 3, (t[1] + t[3] + t[5]) / 3) : "quadrilateral" === e1 ? (r = (t[0] + t[2] + t[4] + t[6]) / 4, (t[1] + t[3] + t[5] + t[7]) / 4) : "line" === e1 ? (r = (t[0] + t[2]) / 2, (t[1] + t[3]) / 2) : (r = t[0], t[1]);
                        return [
                            r,
                            e1
                        ];
                    }(e1, t);
                    if ("line" === e1 ? (n.color = this.ingredients.colors.stroke, n.length = Math.round(this.dist(t[0], t[1], t[2], t[3])), r = this._getPos(t[0], [
                        1
                    ]), o = this._getPos(t[2], [
                        3
                    ]), n.loc = u(i, this.width, this.height), n.pos = r === o ? "at ".concat(r) : "from ".concat(r, " to ").concat(o)) : ("point" === e1 ? n.color = this.ingredients.colors.stroke : (n.color = this.ingredients.colors.fill, n.area = this._getArea(e1, t)), n.pos = this._getPos.apply(this, l(i)), n.loc = u(i, this.width, this.height)), this.ingredients.shapes[e1]) {
                        if (this.ingredients.shapes[e1] !== [
                            n
                        ]) {
                            for(var a in this.ingredients.shapes[e1])JSON.stringify(this.ingredients.shapes[e1][a]) === JSON.stringify(n) && (s = !1);
                            !0 === s && this.ingredients.shapes[e1].push(n);
                        }
                    } else this.ingredients.shapes[e1] = [
                        n
                    ];
                }, o.default.prototype._getPos = function(e1, t) {
                    var e1 = new DOMPointReadOnly(e1, t), t = this._renderer.isP3D ? new DOMMatrix(this._renderer.uMVMatrix.mat4) : this.drawingContext.getTransform(), e1 = e1.matrixTransform(t), t = e1.x, e1 = e1.y, r = this.width, o = this.height;
                    return t < .4 * r ? e1 < .4 * o ? "top left" : .6 * o < e1 ? "bottom left" : "mid left" : .6 * r < t ? e1 < .4 * o ? "top right" : .6 * o < e1 ? "bottom right" : "mid right" : e1 < .4 * o ? "top middle" : .6 * o < e1 ? "bottom middle" : "middle";
                }, o.default.prototype._getArea = function(e1, t) {
                    var r, o, n = 0, s = ("arc" === e1 ? (n = (r = ((t[5] - t[4]) % (2 * Math.PI) + 2 * Math.PI) % (2 * Math.PI)) * t[2] * t[3] / 8, "open" !== t[6] && "chord" !== t[6] || (o = t[0], u = t[1], s = t[0] + t[2] / 2 * Math.cos(t[4]).toFixed(2), c = t[1] + t[3] / 2 * Math.sin(t[4]).toFixed(2), a = t[0] + t[2] / 2 * Math.cos(t[5]).toFixed(2), i = t[1] + t[3] / 2 * Math.sin(t[5]).toFixed(2), o = Math.abs(o * (c - i) + s * (i - u) + a * (u - c)) / 2, r > Math.PI ? n += o : n -= o)) : "ellipse" === e1 || "circle" === e1 ? n = 3.14 * t[2] / 2 * t[3] / 2 : "line" === e1 || "point" === e1 ? n = 0 : "quadrilateral" === e1 ? n = Math.abs((t[6] + t[0]) * (t[7] - t[1]) + (t[0] + t[2]) * (t[1] - t[3]) + (t[2] + t[4]) * (t[3] - t[5]) + (t[4] + t[6]) * (t[5] - t[7])) / 2 : "rectangle" === e1 || "square" === e1 ? n = t[2] * t[3] : "triangle" === e1 && (n = Math.abs(t[0] * (t[3] - t[5]) + t[2] * (t[5] - t[1]) + t[4] * (t[1] - t[3])) / 2), this.width * this._pixelDensity), i = this.height * this._pixelDensity, a = [
                        new DOMPoint(0, 0),
                        new DOMPoint(s, 0),
                        new DOMPoint(s, i),
                        new DOMPoint(0, i)
                    ], l = (this._renderer.isP3D ? new DOMMatrix(this._renderer.uMVMatrix.mat4) : this.drawingContext.getTransform()).inverse(), u = a.map(function(e1) {
                        return e1.matrixTransform(l);
                    }), c = Math.abs((u[3].x + u[0].x) * (u[3].y - u[0].y) + (u[0].x + u[1].x) * (u[0].y - u[1].y) + (u[1].x + u[2].x) * (u[1].y - u[2].y) + (u[2].x + u[3].x) * (u[2].y - u[3].y)) / 2;
                    return Math.round(100 * n / c);
                };
                e1 = o.default;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.fill": 154,
                "core-js/modules/es.array.from": 157,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.number.to-fixed": 173,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        256: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.concat"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e1 = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                e1.default.prototype._updateTextOutput = function(e1) {
                    var t, r, o, n;
                    this.dummyDOM.querySelector("#".concat(e1, "_summary")) && (t = this._accessibleOutputs[e1], o = function(e1, t, r, o) {
                        r = "Your output is a, ".concat(r, " by ").concat(o, " pixels, ").concat(t, " canvas containing the following");
                        r = 1 === e1 ? "".concat(r, " shape:") : "".concat(r, " ").concat(e1, " shapes:");
                        return r;
                    }((r = function(e1, t) {
                        var r, o = "", n = 0;
                        for(r in t)for(var s in t[r]){
                            var i = '<li><a href="#'.concat(e1, "shape").concat(n, '">').concat(t[r][s].color, " ").concat(r, "</a>");
                            "line" === r ? i += ", ".concat(t[r][s].pos, ", ").concat(t[r][s].length, " pixels long.</li>") : (i += ", at ".concat(t[r][s].pos), "point" !== r && (i += ", covering ".concat(t[r][s].area, "% of the canvas")), i += ".</li>"), o += i, n++;
                        }
                        return {
                            numShapes: n,
                            listShapes: o
                        };
                    }(e1, this.ingredients.shapes)).numShapes, this.ingredients.colors.background, this.width, this.height), n = function(e1, t) {
                        var r, o = "", n = 0;
                        for(r in t)for(var s in t[r]){
                            var i = '<tr id="'.concat(e1, "shape").concat(n, '"><th>').concat(t[r][s].color, " ").concat(r, "</th>");
                            "line" === r ? i += "<td>location = ".concat(t[r][s].pos, "</td><td>length = ").concat(t[r][s].length, " pixels</td></tr>") : (i += "<td>location = ".concat(t[r][s].pos, "</td>"), "point" !== r && (i += "<td> area = ".concat(t[r][s].area, "%</td>")), i += "</tr>"), o += i, n++;
                        }
                        return o;
                    }(e1, this.ingredients.shapes), o !== t.summary.innerHTML && (t.summary.innerHTML = o), r.listShapes !== t.list.innerHTML && (t.list.innerHTML = r.listShapes), n !== t.shapeDetails.innerHTML && (t.shapeDetails.innerHTML = n), this._accessibleOutputs[e1] = t);
                };
                e1 = e1.default;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.concat": 151
            }
        ],
        257: [
            function(e1, t, r) {
                "use strict";
                var o = (o = e1("./core/main")) && o.__esModule ? o : {
                    default: o
                };
                e1("./core/constants"), e1("./core/environment"), e1("./core/friendly_errors/stacktrace"), e1("./core/friendly_errors/validate_params"), e1("./core/friendly_errors/file_errors"), e1("./core/friendly_errors/fes_core"), e1("./core/friendly_errors/sketch_reader"), e1("./core/helpers"), e1("./core/legacy"), e1("./core/preload"), e1("./core/p5.Element"), e1("./core/p5.Graphics"), e1("./core/p5.Renderer"), e1("./core/p5.Renderer2D"), e1("./core/rendering"), e1("./core/shim"), e1("./core/structure"), e1("./core/transform"), e1("./core/shape/2d_primitives"), e1("./core/shape/attributes"), e1("./core/shape/curves"), e1("./core/shape/vertex"), e1("./accessibility/outputs"), e1("./accessibility/textOutput"), e1("./accessibility/gridOutput"), e1("./accessibility/color_namer"), e1("./color/color_conversion"), e1("./color/creating_reading"), e1("./color/p5.Color"), e1("./color/setting"), e1("./data/p5.TypedDict"), e1("./data/local_storage.js"), e1("./dom/dom"), e1("./accessibility/describe"), e1("./events/acceleration"), e1("./events/keyboard"), e1("./events/mouse"), e1("./events/touch"), e1("./image/filters"), e1("./image/image"), e1("./image/loading_displaying"), e1("./image/p5.Image"), e1("./image/pixels"), e1("./io/files"), e1("./io/p5.Table"), e1("./io/p5.TableRow"), e1("./io/p5.XML"), e1("./math/calculation"), e1("./math/math"), e1("./math/noise"), e1("./math/p5.Vector"), e1("./math/random"), e1("./math/trigonometry"), e1("./typography/attributes"), e1("./typography/loading_displaying"), e1("./typography/p5.Font"), e1("./utilities/array_functions"), e1("./utilities/conversion"), e1("./utilities/string_functions"), e1("./utilities/time_date"), e1("./webgl/3d_primitives"), e1("./webgl/interaction"), e1("./webgl/light"), e1("./webgl/loading"), e1("./webgl/material"), e1("./webgl/p5.Camera"), e1("./webgl/p5.Geometry"), e1("./webgl/p5.Matrix"), e1("./webgl/p5.RendererGL.Immediate"), e1("./webgl/p5.RendererGL"), e1("./webgl/p5.RendererGL.Retained"), e1("./webgl/p5.Framebuffer"), e1("./webgl/p5.Shader"), e1("./webgl/p5.RenderBuffer"), e1("./webgl/p5.Texture"), e1("./webgl/text"), e1("./core/init"), t.exports = o.default;
            },
            {
                "./accessibility/color_namer": 252,
                "./accessibility/describe": 253,
                "./accessibility/gridOutput": 254,
                "./accessibility/outputs": 255,
                "./accessibility/textOutput": 256,
                "./color/color_conversion": 258,
                "./color/creating_reading": 259,
                "./color/p5.Color": 260,
                "./color/setting": 261,
                "./core/constants": 262,
                "./core/environment": 263,
                "./core/friendly_errors/fes_core": 264,
                "./core/friendly_errors/file_errors": 265,
                "./core/friendly_errors/sketch_reader": 266,
                "./core/friendly_errors/stacktrace": 267,
                "./core/friendly_errors/validate_params": 268,
                "./core/helpers": 269,
                "./core/init": 270,
                "./core/legacy": 272,
                "./core/main": 273,
                "./core/p5.Element": 274,
                "./core/p5.Graphics": 275,
                "./core/p5.Renderer": 276,
                "./core/p5.Renderer2D": 277,
                "./core/preload": 278,
                "./core/rendering": 279,
                "./core/shape/2d_primitives": 280,
                "./core/shape/attributes": 281,
                "./core/shape/curves": 282,
                "./core/shape/vertex": 283,
                "./core/shim": 284,
                "./core/structure": 285,
                "./core/transform": 286,
                "./data/local_storage.js": 287,
                "./data/p5.TypedDict": 288,
                "./dom/dom": 289,
                "./events/acceleration": 290,
                "./events/keyboard": 291,
                "./events/mouse": 292,
                "./events/touch": 293,
                "./image/filters": 294,
                "./image/image": 295,
                "./image/loading_displaying": 296,
                "./image/p5.Image": 297,
                "./image/pixels": 298,
                "./io/files": 299,
                "./io/p5.Table": 300,
                "./io/p5.TableRow": 301,
                "./io/p5.XML": 302,
                "./math/calculation": 303,
                "./math/math": 304,
                "./math/noise": 305,
                "./math/p5.Vector": 306,
                "./math/random": 307,
                "./math/trigonometry": 308,
                "./typography/attributes": 309,
                "./typography/loading_displaying": 310,
                "./typography/p5.Font": 311,
                "./utilities/array_functions": 312,
                "./utilities/conversion": 313,
                "./utilities/string_functions": 314,
                "./utilities/time_date": 315,
                "./webgl/3d_primitives": 316,
                "./webgl/interaction": 317,
                "./webgl/light": 318,
                "./webgl/loading": 319,
                "./webgl/material": 320,
                "./webgl/p5.Camera": 321,
                "./webgl/p5.Framebuffer": 322,
                "./webgl/p5.Geometry": 323,
                "./webgl/p5.Matrix": 324,
                "./webgl/p5.RenderBuffer": 325,
                "./webgl/p5.RendererGL": 328,
                "./webgl/p5.RendererGL.Immediate": 326,
                "./webgl/p5.RendererGL.Retained": 327,
                "./webgl/p5.Shader": 329,
                "./webgl/p5.Texture": 330,
                "./webgl/text": 331
            }
        ],
        258: [
            function(e1, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e1 = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                e1.default.ColorConversion = {
                    _hsbaToHSLA: function(e1) {
                        var t = e1[0], r = e1[1], o = e1[2], n = (2 - r) * o / 2;
                        return 0 != n && (1 == n ? r = 0 : n < .5 ? r /= 2 - r : r = r * o / (2 - 2 * n)), [
                            t,
                            r,
                            n,
                            e1[3]
                        ];
                    },
                    _hsbaToRGBA: function(e1) {
                        var t, r, o, n, s, i = 6 * e1[0], a = e1[1], l = e1[2];
                        return 0 === a ? [
                            l,
                            l,
                            l,
                            e1[3]
                        ] : (r = l * (1 - a), o = l * (1 - a * (i - (t = Math.floor(i)))), a = l * (1 - a * (1 + t - i)), i = 1 === t ? (n = o, s = l, r) : 2 === t ? (n = r, s = l, a) : 3 === t ? (n = r, s = o, l) : 4 === t ? (n = a, s = r, l) : 5 === t ? (n = l, s = r, o) : (n = l, s = a, r), [
                            n,
                            s,
                            i,
                            e1[3]
                        ]);
                    },
                    _hslaToHSBA: function(e1) {
                        var t = e1[0], r = e1[1], o = e1[2], n = o < .5 ? (1 + r) * o : o + r - o * r;
                        return [
                            t,
                            r = 2 * (n - o) / n,
                            n,
                            e1[3]
                        ];
                    },
                    _hslaToRGBA: function(e1) {
                        var t, r = 6 * e1[0], o = e1[1], n = e1[2];
                        return 0 === o ? [
                            n,
                            n,
                            n,
                            e1[3]
                        ] : [
                            (t = function(e1, t, r) {
                                return e1 < 0 ? e1 += 6 : 6 <= e1 && (e1 -= 6), e1 < 1 ? t + (r - t) * e1 : e1 < 3 ? r : e1 < 4 ? t + (r - t) * (4 - e1) : t;
                            })(2 + r, o = 2 * n - (n = n < .5 ? (1 + o) * n : n + o - n * o), n),
                            t(r, o, n),
                            t(r - 2, o, n),
                            e1[3]
                        ];
                    },
                    _rgbaToHSBA: function(e1) {
                        var t, r, o = e1[0], n = e1[1], s = e1[2], i = Math.max(o, n, s), a = i - Math.min(o, n, s);
                        return 0 == a ? r = t = 0 : (r = a / i, o === i ? t = (n - s) / a : n === i ? t = 2 + (s - o) / a : s === i && (t = 4 + (o - n) / a), t < 0 ? t += 6 : 6 <= t && (t -= 6)), [
                            t / 6,
                            r,
                            i,
                            e1[3]
                        ];
                    },
                    _rgbaToHSLA: function(e1) {
                        var t, r, o = e1[0], n = e1[1], s = e1[2], i = Math.max(o, n, s), a = Math.min(o, n, s), l = i + a, a = i - a;
                        return 0 == a ? r = t = 0 : (r = l < 1 ? a / l : a / (2 - l), o === i ? t = (n - s) / a : n === i ? t = 2 + (s - o) / a : s === i && (t = 4 + (o - n) / a), t < 0 ? t += 6 : 6 <= t && (t -= 6)), [
                            t / 6,
                            r,
                            l / 2,
                            e1[3]
                        ];
                    }
                };
                e1 = e1.default.ColorConversion;
                r.default = e1;
            },
            {
                "../core/main": 273
            }
        ],
        259: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.array.map"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l = (n = e1("../core/main")) && n.__esModule ? n : {
                    default: n
                }, u = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants"));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                e1("./p5.Color"), e1("../core/friendly_errors/validate_params"), e1("../core/friendly_errors/file_errors"), e1("../core/friendly_errors/fes_core"), l.default.prototype.alpha = function(e1) {
                    return l.default._validateParameters("alpha", arguments), this.color(e1)._getAlpha();
                }, l.default.prototype.blue = function(e1) {
                    return l.default._validateParameters("blue", arguments), this.color(e1)._getBlue();
                }, l.default.prototype.brightness = function(e1) {
                    return l.default._validateParameters("brightness", arguments), this.color(e1)._getBrightness();
                }, l.default.prototype.color = function() {
                    var e1;
                    return l.default._validateParameters("color", arguments), arguments[0] instanceof l.default.Color ? arguments[0] : (e1 = arguments[0] instanceof Array ? arguments[0] : arguments, new l.default.Color(this, e1));
                }, l.default.prototype.green = function(e1) {
                    return l.default._validateParameters("green", arguments), this.color(e1)._getGreen();
                }, l.default.prototype.hue = function(e1) {
                    return l.default._validateParameters("hue", arguments), this.color(e1)._getHue();
                }, l.default.prototype.lerpColor = function(e1, t, r) {
                    l.default._validateParameters("lerpColor", arguments);
                    var o, n, s, i = this._colorMode, a = this._colorMaxes;
                    if (i === u.RGB) n = e1.levels.map(function(e1) {
                        return e1 / 255;
                    }), s = t.levels.map(function(e1) {
                        return e1 / 255;
                    });
                    else if (i === u.HSB) e1._getBrightness(), t._getBrightness(), n = e1.hsba, s = t.hsba;
                    else {
                        if (i !== u.HSL) throw new Error("".concat(i, "cannot be used for interpolation."));
                        e1._getLightness(), t._getLightness(), n = e1.hsla, s = t.hsla;
                    }
                    return r = Math.max(Math.min(r, 1), 0), void 0 === this.lerp && (this.lerp = function(e1, t, r) {
                        return r * (t - e1) + e1;
                    }), e1 = this.lerp(n[0], s[0], r), t = this.lerp(n[1], s[1], r), o = this.lerp(n[2], s[2], r), n = this.lerp(n[3], s[3], r), e1 *= a[i][0], t *= a[i][1], o *= a[i][2], n *= a[i][3], this.color(e1, t, o, n);
                }, l.default.prototype.lightness = function(e1) {
                    return l.default._validateParameters("lightness", arguments), this.color(e1)._getLightness();
                }, l.default.prototype.red = function(e1) {
                    return l.default._validateParameters("red", arguments), this.color(e1)._getRed();
                }, l.default.prototype.saturation = function(e1) {
                    return l.default._validateParameters("saturation", arguments), this.color(e1)._getSaturation();
                };
                var n = l.default;
                r.default = n;
            },
            {
                "../core/constants": 262,
                "../core/friendly_errors/fes_core": 264,
                "../core/friendly_errors/file_errors": 265,
                "../core/friendly_errors/validate_params": 268,
                "../core/main": 273,
                "./p5.Color": 260,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        260: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.constructor"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.trim"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.constructor"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.trim"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = s(e1("../core/main")), d = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants")), f = s(e1("./color_conversion"));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                function s(e1) {
                    return e1 && e1.__esModule ? e1 : {
                        default: e1
                    };
                }
                function l(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                var h = {
                    aliceblue: "#f0f8ff",
                    antiquewhite: "#faebd7",
                    aqua: "#00ffff",
                    aquamarine: "#7fffd4",
                    azure: "#f0ffff",
                    beige: "#f5f5dc",
                    bisque: "#ffe4c4",
                    black: "#000000",
                    blanchedalmond: "#ffebcd",
                    blue: "#0000ff",
                    blueviolet: "#8a2be2",
                    brown: "#a52a2a",
                    burlywood: "#deb887",
                    cadetblue: "#5f9ea0",
                    chartreuse: "#7fff00",
                    chocolate: "#d2691e",
                    coral: "#ff7f50",
                    cornflowerblue: "#6495ed",
                    cornsilk: "#fff8dc",
                    crimson: "#dc143c",
                    cyan: "#00ffff",
                    darkblue: "#00008b",
                    darkcyan: "#008b8b",
                    darkgoldenrod: "#b8860b",
                    darkgray: "#a9a9a9",
                    darkgreen: "#006400",
                    darkgrey: "#a9a9a9",
                    darkkhaki: "#bdb76b",
                    darkmagenta: "#8b008b",
                    darkolivegreen: "#556b2f",
                    darkorange: "#ff8c00",
                    darkorchid: "#9932cc",
                    darkred: "#8b0000",
                    darksalmon: "#e9967a",
                    darkseagreen: "#8fbc8f",
                    darkslateblue: "#483d8b",
                    darkslategray: "#2f4f4f",
                    darkslategrey: "#2f4f4f",
                    darkturquoise: "#00ced1",
                    darkviolet: "#9400d3",
                    deeppink: "#ff1493",
                    deepskyblue: "#00bfff",
                    dimgray: "#696969",
                    dimgrey: "#696969",
                    dodgerblue: "#1e90ff",
                    firebrick: "#b22222",
                    floralwhite: "#fffaf0",
                    forestgreen: "#228b22",
                    fuchsia: "#ff00ff",
                    gainsboro: "#dcdcdc",
                    ghostwhite: "#f8f8ff",
                    gold: "#ffd700",
                    goldenrod: "#daa520",
                    gray: "#808080",
                    green: "#008000",
                    greenyellow: "#adff2f",
                    grey: "#808080",
                    honeydew: "#f0fff0",
                    hotpink: "#ff69b4",
                    indianred: "#cd5c5c",
                    indigo: "#4b0082",
                    ivory: "#fffff0",
                    khaki: "#f0e68c",
                    lavender: "#e6e6fa",
                    lavenderblush: "#fff0f5",
                    lawngreen: "#7cfc00",
                    lemonchiffon: "#fffacd",
                    lightblue: "#add8e6",
                    lightcoral: "#f08080",
                    lightcyan: "#e0ffff",
                    lightgoldenrodyellow: "#fafad2",
                    lightgray: "#d3d3d3",
                    lightgreen: "#90ee90",
                    lightgrey: "#d3d3d3",
                    lightpink: "#ffb6c1",
                    lightsalmon: "#ffa07a",
                    lightseagreen: "#20b2aa",
                    lightskyblue: "#87cefa",
                    lightslategray: "#778899",
                    lightslategrey: "#778899",
                    lightsteelblue: "#b0c4de",
                    lightyellow: "#ffffe0",
                    lime: "#00ff00",
                    limegreen: "#32cd32",
                    linen: "#faf0e6",
                    magenta: "#ff00ff",
                    maroon: "#800000",
                    mediumaquamarine: "#66cdaa",
                    mediumblue: "#0000cd",
                    mediumorchid: "#ba55d3",
                    mediumpurple: "#9370db",
                    mediumseagreen: "#3cb371",
                    mediumslateblue: "#7b68ee",
                    mediumspringgreen: "#00fa9a",
                    mediumturquoise: "#48d1cc",
                    mediumvioletred: "#c71585",
                    midnightblue: "#191970",
                    mintcream: "#f5fffa",
                    mistyrose: "#ffe4e1",
                    moccasin: "#ffe4b5",
                    navajowhite: "#ffdead",
                    navy: "#000080",
                    oldlace: "#fdf5e6",
                    olive: "#808000",
                    olivedrab: "#6b8e23",
                    orange: "#ffa500",
                    orangered: "#ff4500",
                    orchid: "#da70d6",
                    palegoldenrod: "#eee8aa",
                    palegreen: "#98fb98",
                    paleturquoise: "#afeeee",
                    palevioletred: "#db7093",
                    papayawhip: "#ffefd5",
                    peachpuff: "#ffdab9",
                    peru: "#cd853f",
                    pink: "#ffc0cb",
                    plum: "#dda0dd",
                    powderblue: "#b0e0e6",
                    purple: "#800080",
                    rebeccapurple: "#663399",
                    red: "#ff0000",
                    rosybrown: "#bc8f8f",
                    royalblue: "#4169e1",
                    saddlebrown: "#8b4513",
                    salmon: "#fa8072",
                    sandybrown: "#f4a460",
                    seagreen: "#2e8b57",
                    seashell: "#fff5ee",
                    sienna: "#a0522d",
                    silver: "#c0c0c0",
                    skyblue: "#87ceeb",
                    slateblue: "#6a5acd",
                    slategray: "#708090",
                    slategrey: "#708090",
                    snow: "#fffafa",
                    springgreen: "#00ff7f",
                    steelblue: "#4682b4",
                    tan: "#d2b48c",
                    teal: "#008080",
                    thistle: "#d8bfd8",
                    tomato: "#ff6347",
                    turquoise: "#40e0d0",
                    violet: "#ee82ee",
                    wheat: "#f5deb3",
                    white: "#ffffff",
                    whitesmoke: "#f5f5f5",
                    yellow: "#ffff00",
                    yellowgreen: "#9acd32"
                }, e1 = /\s*/, u = /(\d{1,3})/, c = /((?:\d+(?:\.\d+)?)|(?:\.\d+))/, p = new RegExp("".concat(c.source, "%")), m = {
                    HEX3: /^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,
                    HEX4: /^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i,
                    HEX6: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,
                    HEX8: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,
                    RGB: new RegExp([
                        "^rgb\\(",
                        u.source,
                        ",",
                        u.source,
                        ",",
                        u.source,
                        "\\)$"
                    ].join(e1.source), "i"),
                    RGB_PERCENT: new RegExp([
                        "^rgb\\(",
                        p.source,
                        ",",
                        p.source,
                        ",",
                        p.source,
                        "\\)$"
                    ].join(e1.source), "i"),
                    RGBA: new RegExp([
                        "^rgba\\(",
                        u.source,
                        ",",
                        u.source,
                        ",",
                        u.source,
                        ",",
                        c.source,
                        "\\)$"
                    ].join(e1.source), "i"),
                    RGBA_PERCENT: new RegExp([
                        "^rgba\\(",
                        p.source,
                        ",",
                        p.source,
                        ",",
                        p.source,
                        ",",
                        c.source,
                        "\\)$"
                    ].join(e1.source), "i"),
                    HSL: new RegExp([
                        "^hsl\\(",
                        u.source,
                        ",",
                        p.source,
                        ",",
                        p.source,
                        "\\)$"
                    ].join(e1.source), "i"),
                    HSLA: new RegExp([
                        "^hsla\\(",
                        u.source,
                        ",",
                        p.source,
                        ",",
                        p.source,
                        ",",
                        c.source,
                        "\\)$"
                    ].join(e1.source), "i"),
                    HSB: new RegExp([
                        "^hsb\\(",
                        u.source,
                        ",",
                        p.source,
                        ",",
                        p.source,
                        "\\)$"
                    ].join(e1.source), "i"),
                    HSBA: new RegExp([
                        "^hsba\\(",
                        u.source,
                        ",",
                        p.source,
                        ",",
                        p.source,
                        ",",
                        c.source,
                        "\\)$"
                    ].join(e1.source), "i")
                }, u = (n.default.Color = function() {
                    function c(e1, t) {
                        if (!(this instanceof c)) throw new TypeError("Cannot call a class as a function");
                        if (this._storeModeAndMaxes(e1._colorMode, e1._colorMaxes), ![
                            d.RGB,
                            d.HSL,
                            d.HSB
                        ].includes(this.mode)) throw new Error("".concat(this.mode, " is an invalid colorMode."));
                        this._array = c._parseInputs.apply(this, t), this._calculateLevels();
                    }
                    var e1, t, r;
                    return e1 = c, r = [
                        {
                            key: "_parseInputs",
                            value: function(e1, t, r, o) {
                                var n, s = arguments.length, i = this.mode, a = this.maxes[i], l = [];
                                if (3 <= s) {
                                    for(l[0] = e1 / a[0], l[1] = t / a[1], l[2] = r / a[2], l[3] = "number" == typeof o ? o / a[3] : 1, n = l.length - 1; 0 <= n; --n){
                                        var u = l[n];
                                        u < 0 ? l[n] = 0 : 1 < u && (l[n] = 1);
                                    }
                                    return i === d.HSL ? f.default._hslaToRGBA(l) : i === d.HSB ? f.default._hsbaToRGBA(l) : l;
                                }
                                if (1 === s && "string" == typeof e1) {
                                    r = e1.trim().toLowerCase();
                                    if (h[r]) return c._parseInputs.call(this, h[r]);
                                    if (m.HEX3.test(r)) return (l = m.HEX3.exec(r).slice(1).map(function(e1) {
                                        return parseInt(e1 + e1, 16) / 255;
                                    }))[3] = 1, l;
                                    if (m.HEX6.test(r)) return (l = m.HEX6.exec(r).slice(1).map(function(e1) {
                                        return parseInt(e1, 16) / 255;
                                    }))[3] = 1, l;
                                    if (m.HEX4.test(r)) return l = m.HEX4.exec(r).slice(1).map(function(e1) {
                                        return parseInt(e1 + e1, 16) / 255;
                                    });
                                    if (m.HEX8.test(r)) return l = m.HEX8.exec(r).slice(1).map(function(e1) {
                                        return parseInt(e1, 16) / 255;
                                    });
                                    if (m.RGB.test(r)) return (l = m.RGB.exec(r).slice(1).map(function(e1) {
                                        return e1 / 255;
                                    }))[3] = 1, l;
                                    if (m.RGB_PERCENT.test(r)) return (l = m.RGB_PERCENT.exec(r).slice(1).map(function(e1) {
                                        return parseFloat(e1) / 100;
                                    }))[3] = 1, l;
                                    if (m.RGBA.test(r)) return l = m.RGBA.exec(r).slice(1).map(function(e1, t) {
                                        return 3 === t ? parseFloat(e1) : e1 / 255;
                                    });
                                    if (m.RGBA_PERCENT.test(r)) return l = m.RGBA_PERCENT.exec(r).slice(1).map(function(e1, t) {
                                        return 3 === t ? parseFloat(e1) : parseFloat(e1) / 100;
                                    });
                                    if (m.HSL.test(r) ? (l = m.HSL.exec(r).slice(1).map(function(e1, t) {
                                        return 0 === t ? parseInt(e1, 10) / 360 : parseInt(e1, 10) / 100;
                                    }))[3] = 1 : m.HSLA.test(r) && (l = m.HSLA.exec(r).slice(1).map(function(e1, t) {
                                        return 0 === t ? parseInt(e1, 10) / 360 : 3 === t ? parseFloat(e1) : parseInt(e1, 10) / 100;
                                    })), (l = l.map(function(e1) {
                                        return Math.max(Math.min(e1, 1), 0);
                                    })).length) return f.default._hslaToRGBA(l);
                                    if (m.HSB.test(r) ? (l = m.HSB.exec(r).slice(1).map(function(e1, t) {
                                        return 0 === t ? parseInt(e1, 10) / 360 : parseInt(e1, 10) / 100;
                                    }))[3] = 1 : m.HSBA.test(r) && (l = m.HSBA.exec(r).slice(1).map(function(e1, t) {
                                        return 0 === t ? parseInt(e1, 10) / 360 : 3 === t ? parseFloat(e1) : parseInt(e1, 10) / 100;
                                    })), l.length) {
                                        for(n = l.length - 1; 0 <= n; --n)l[n] = Math.max(Math.min(l[n], 1), 0);
                                        return f.default._hsbaToRGBA(l);
                                    }
                                    l = [
                                        1,
                                        1,
                                        1,
                                        1
                                    ];
                                } else {
                                    if (1 !== s && 2 !== s || "number" != typeof e1) throw new Error("".concat(arguments, "is not a valid color representation."));
                                    l[0] = e1 / a[2], l[1] = e1 / a[2], l[2] = e1 / a[2], l[3] = "number" == typeof t ? t / a[3] : 1, l = l.map(function(e1) {
                                        return Math.max(Math.min(e1, 1), 0);
                                    });
                                }
                                return l;
                            }
                        }
                    ], t = [
                        {
                            key: "toString",
                            value: function(e1) {
                                var t = this.levels, r = this._array, o = r[3];
                                switch(e1){
                                    case "#rrggbb":
                                        return "#".concat(t[0] < 16 ? "0".concat(t[0].toString(16)) : t[0].toString(16), t[1] < 16 ? "0".concat(t[1].toString(16)) : t[1].toString(16), t[2] < 16 ? "0".concat(t[2].toString(16)) : t[2].toString(16));
                                    case "#rrggbbaa":
                                        return "#".concat(t[0] < 16 ? "0".concat(t[0].toString(16)) : t[0].toString(16), t[1] < 16 ? "0".concat(t[1].toString(16)) : t[1].toString(16), t[2] < 16 ? "0".concat(t[2].toString(16)) : t[2].toString(16), t[3] < 16 ? "0".concat(t[3].toString(16)) : t[3].toString(16));
                                    case "#rgb":
                                        return "#".concat(Math.round(15 * r[0]).toString(16), Math.round(15 * r[1]).toString(16), Math.round(15 * r[2]).toString(16));
                                    case "#rgba":
                                        return "#".concat(Math.round(15 * r[0]).toString(16), Math.round(15 * r[1]).toString(16), Math.round(15 * r[2]).toString(16), Math.round(15 * r[3]).toString(16));
                                    case "rgb":
                                        return "rgb(".concat(t[0], ", ", t[1], ", ", t[2], ")");
                                    case "rgb%":
                                        return "rgb(".concat((100 * r[0]).toPrecision(3), "%, ", (100 * r[1]).toPrecision(3), "%, ", (100 * r[2]).toPrecision(3), "%)");
                                    case "rgba%":
                                        return "rgba(".concat((100 * r[0]).toPrecision(3), "%, ", (100 * r[1]).toPrecision(3), "%, ", (100 * r[2]).toPrecision(3), "%, ", (100 * r[3]).toPrecision(3), "%)");
                                    case "hsb":
                                    case "hsv":
                                        return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), "hsb(".concat(this.hsba[0] * this.maxes[d.HSB][0], ", ", this.hsba[1] * this.maxes[d.HSB][1], ", ", this.hsba[2] * this.maxes[d.HSB][2], ")");
                                    case "hsb%":
                                    case "hsv%":
                                        return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), "hsb(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%)");
                                    case "hsba":
                                    case "hsva":
                                        return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), "hsba(".concat(this.hsba[0] * this.maxes[d.HSB][0], ", ", this.hsba[1] * this.maxes[d.HSB][1], ", ", this.hsba[2] * this.maxes[d.HSB][2], ", ", o, ")");
                                    case "hsba%":
                                    case "hsva%":
                                        return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), "hsba(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%, ", (100 * o).toPrecision(3), "%)");
                                    case "hsl":
                                        return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), "hsl(".concat(this.hsla[0] * this.maxes[d.HSL][0], ", ", this.hsla[1] * this.maxes[d.HSL][1], ", ", this.hsla[2] * this.maxes[d.HSL][2], ")");
                                    case "hsl%":
                                        return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%)");
                                    case "hsla":
                                        return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), "hsla(".concat(this.hsla[0] * this.maxes[d.HSL][0], ", ", this.hsla[1] * this.maxes[d.HSL][1], ", ", this.hsla[2] * this.maxes[d.HSL][2], ", ", o, ")");
                                    case "hsla%":
                                        return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%, ", (100 * o).toPrecision(3), "%)");
                                    default:
                                        return "rgba(".concat(t[0], ",", t[1], ",", t[2], ",", o, ")");
                                }
                            }
                        },
                        {
                            key: "setRed",
                            value: function(e1) {
                                this._array[0] = e1 / this.maxes[d.RGB][0], this._calculateLevels();
                            }
                        },
                        {
                            key: "setGreen",
                            value: function(e1) {
                                this._array[1] = e1 / this.maxes[d.RGB][1], this._calculateLevels();
                            }
                        },
                        {
                            key: "setBlue",
                            value: function(e1) {
                                this._array[2] = e1 / this.maxes[d.RGB][2], this._calculateLevels();
                            }
                        },
                        {
                            key: "setAlpha",
                            value: function(e1) {
                                this._array[3] = e1 / this.maxes[this.mode][3], this._calculateLevels();
                            }
                        },
                        {
                            key: "_calculateLevels",
                            value: function() {
                                for(var e1 = this._array, t = this.levels = new Array(e1.length), r = e1.length - 1; 0 <= r; --r)t[r] = Math.round(255 * e1[r]);
                                this.hsla = null, this.hsba = null;
                            }
                        },
                        {
                            key: "_getAlpha",
                            value: function() {
                                return this._array[3] * this.maxes[this.mode][3];
                            }
                        },
                        {
                            key: "_storeModeAndMaxes",
                            value: function(e1, t) {
                                this.mode = e1, this.maxes = t;
                            }
                        },
                        {
                            key: "_getMode",
                            value: function() {
                                return this.mode;
                            }
                        },
                        {
                            key: "_getMaxes",
                            value: function() {
                                return this.maxes;
                            }
                        },
                        {
                            key: "_getBlue",
                            value: function() {
                                return this._array[2] * this.maxes[d.RGB][2];
                            }
                        },
                        {
                            key: "_getBrightness",
                            value: function() {
                                return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), this.hsba[2] * this.maxes[d.HSB][2];
                            }
                        },
                        {
                            key: "_getGreen",
                            value: function() {
                                return this._array[1] * this.maxes[d.RGB][1];
                            }
                        },
                        {
                            key: "_getHue",
                            value: function() {
                                return this.mode === d.HSB ? (this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), this.hsba[0] * this.maxes[d.HSB][0]) : (this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), this.hsla[0] * this.maxes[d.HSL][0]);
                            }
                        },
                        {
                            key: "_getLightness",
                            value: function() {
                                return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), this.hsla[2] * this.maxes[d.HSL][2];
                            }
                        },
                        {
                            key: "_getRed",
                            value: function() {
                                return this._array[0] * this.maxes[d.RGB][0];
                            }
                        },
                        {
                            key: "_getSaturation",
                            value: function() {
                                return this.mode === d.HSB ? (this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), this.hsba[1] * this.maxes[d.HSB][1]) : (this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), this.hsla[1] * this.maxes[d.HSL][1]);
                            }
                        }
                    ], l(e1.prototype, t), r && l(e1, r), c;
                }(), n.default.Color);
                r.default = u;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "./color_conversion": 258,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.join": 161,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.constructor": 184,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.includes": 189,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.trim": 199,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        261: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.array.fill"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = (n = e1("../core/main")) && n.__esModule ? n : {
                    default: n
                }, a = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = l();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants"));
                function l() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, l = function() {
                        return e1;
                    }, e1);
                }
                e1("./p5.Color"), s.default.prototype.background = function() {
                    var e1;
                    return (e1 = this._renderer).background.apply(e1, arguments), this;
                }, s.default.prototype.clear = function() {
                    return this._renderer.clear((arguments.length <= 0 ? void 0 : arguments[0]) || 0, (arguments.length <= 1 ? void 0 : arguments[1]) || 0, (arguments.length <= 2 ? void 0 : arguments[2]) || 0, (arguments.length <= 3 ? void 0 : arguments[3]) || 0), this;
                }, s.default.prototype.colorMode = function(e1, t, r, o, n) {
                    return s.default._validateParameters("colorMode", arguments), e1 !== a.RGB && e1 !== a.HSB && e1 !== a.HSL || (this._colorMode = e1, e1 = this._colorMaxes[e1], 2 === arguments.length ? (e1[0] = t, e1[1] = t, e1[2] = t, e1[3] = t) : 4 === arguments.length ? (e1[0] = t, e1[1] = r, e1[2] = o) : 5 === arguments.length && (e1[0] = t, e1[1] = r, e1[2] = o, e1[3] = n)), this;
                }, s.default.prototype.fill = function() {
                    var e1;
                    return this._renderer._setProperty("_fillSet", !0), this._renderer._setProperty("_doFill", !0), (e1 = this._renderer).fill.apply(e1, arguments), this;
                }, s.default.prototype.noFill = function() {
                    return this._renderer._setProperty("_doFill", !1), this;
                }, s.default.prototype.noStroke = function() {
                    return this._renderer._setProperty("_doStroke", !1), this;
                }, s.default.prototype.stroke = function() {
                    var e1;
                    return this._renderer._setProperty("_strokeSet", !0), this._renderer._setProperty("_doStroke", !0), (e1 = this._renderer).stroke.apply(e1, arguments), this;
                }, s.default.prototype.erase = function() {
                    return this._renderer.erase(0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 255, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 255), this;
                }, s.default.prototype.noErase = function() {
                    return this._renderer.noErase(), this;
                };
                var n = s.default;
                r.default = n;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "./p5.Color": 260,
                "core-js/modules/es.array.fill": 154,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        262: [
            function(e1, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.QUADRATIC = r.LINEAR = r._CTX_MIDDLE = r._DEFAULT_LEADMULT = r._DEFAULT_TEXT_FILL = r.WORD = r.CHAR = r.BOLDITALIC = r.BOLD = r.ITALIC = r.NORMAL = r.BLUR = r.ERODE = r.DILATE = r.POSTERIZE = r.INVERT = r.OPAQUE = r.GRAY = r.THRESHOLD = r.BURN = r.DODGE = r.SOFT_LIGHT = r.HARD_LIGHT = r.OVERLAY = r.REPLACE = r.SCREEN = r.MULTIPLY = r.EXCLUSION = r.SUBTRACT = r.DIFFERENCE = r.LIGHTEST = r.DARKEST = r.ADD = r.REMOVE = r.BLEND = r.UP_ARROW = r.TAB = r.SHIFT = r.RIGHT_ARROW = r.RETURN = r.OPTION = r.LEFT_ARROW = r.ESCAPE = r.ENTER = r.DOWN_ARROW = r.DELETE = r.CONTROL = r.BACKSPACE = r.ALT = r.AUTO = r.HSL = r.HSB = r.RGB = r.MITER = r.BEVEL = r.ROUND = r.SQUARE = r.PROJECT = r.PIE = r.CHORD = r.OPEN = r.CLOSE = r.TESS = r.QUAD_STRIP = r.QUADS = r.TRIANGLE_STRIP = r.TRIANGLE_FAN = r.TRIANGLES = r.LINE_LOOP = r.LINE_STRIP = r.LINES = r.POINTS = r.BASELINE = r.BOTTOM = r.TOP = r.CENTER = r.LEFT = r.RIGHT = r.RADIUS = r.CORNERS = r.CORNER = r.RAD_TO_DEG = r.DEG_TO_RAD = r.RADIANS = r.DEGREES = r.TWO_PI = r.TAU = r.QUARTER_PI = r.PI = r.HALF_PI = r.WAIT = r.TEXT = r.MOVE = r.HAND = r.CROSS = r.ARROW = r.WEBGL2 = r.WEBGL = r.P2D = r.VERSION = void 0, r.RGBA = r.HALF_FLOAT = r.FLOAT = r.UNSIGNED_INT = r.UNSIGNED_BYTE = r.COVER = r.CONTAIN = r.FALLBACK = r.LABEL = r.AXES = r.GRID = r._DEFAULT_FILL = r._DEFAULT_STROKE = r.PORTRAIT = r.LANDSCAPE = r.MIRROR = r.CLAMP = r.REPEAT = r.NEAREST = r.IMAGE = r.IMMEDIATE = r.TEXTURE = r.FILL = r.STROKE = r.CURVE = r.BEZIER = void 0;
                var o = Math.PI, n = (r.VERSION = "1.7.0", r.P2D = "p2d", r.WEBGL = "webgl", r.WEBGL2 = "webgl2", r.ARROW = "default", r.CROSS = "crosshair", r.HAND = "pointer", r.MOVE = "move", r.TEXT = "text", r.WAIT = "wait", o / 2), n = (r.HALF_PI = n, o), n = (r.PI = n, o / 4), n = (r.QUARTER_PI = n, 2 * o), n = (r.TAU = n, 2 * o), n = (r.TWO_PI = n, r.DEGREES = "degrees", r.RADIANS = "radians", o / 180), n = (r.DEG_TO_RAD = n, 180 / o);
                r.RAD_TO_DEG = n, r.CORNER = "corner", r.CORNERS = "corners", r.RADIUS = "radius", r.RIGHT = "right", r.LEFT = "left", r.CENTER = "center", r.TOP = "top", r.BOTTOM = "bottom", r.BASELINE = "alphabetic", r.POINTS = 0, r.LINES = 1, r.LINE_STRIP = 3, r.LINE_LOOP = 2, r.TRIANGLES = 4, r.TRIANGLE_FAN = 6, r.TRIANGLE_STRIP = 5, r.QUADS = "quads", r.QUAD_STRIP = "quad_strip", r.TESS = "tess", r.CLOSE = "close", r.OPEN = "open", r.CHORD = "chord", r.PIE = "pie", r.PROJECT = "square", r.SQUARE = "butt", r.ROUND = "round", r.BEVEL = "bevel", r.MITER = "miter", r.RGB = "rgb", r.HSB = "hsb", r.HSL = "hsl", r.AUTO = "auto", r.ALT = 18, r.BACKSPACE = 8, r.CONTROL = 17, r.DELETE = 46, r.DOWN_ARROW = 40, r.ENTER = 13, r.ESCAPE = 27, r.LEFT_ARROW = 37, r.OPTION = 18, r.RETURN = 13, r.RIGHT_ARROW = 39, r.SHIFT = 16, r.TAB = 9, r.UP_ARROW = 38, r.BLEND = "source-over", r.REMOVE = "destination-out", r.ADD = "lighter", r.DARKEST = "darken", r.LIGHTEST = "lighten", r.DIFFERENCE = "difference", r.SUBTRACT = "subtract", r.EXCLUSION = "exclusion", r.MULTIPLY = "multiply", r.SCREEN = "screen", r.REPLACE = "copy", r.OVERLAY = "overlay", r.HARD_LIGHT = "hard-light", r.SOFT_LIGHT = "soft-light", r.DODGE = "color-dodge", r.BURN = "color-burn", r.THRESHOLD = "threshold", r.GRAY = "gray", r.OPAQUE = "opaque", r.INVERT = "invert", r.POSTERIZE = "posterize", r.DILATE = "dilate", r.ERODE = "erode", r.BLUR = "blur", r.NORMAL = "normal", r.ITALIC = "italic", r.BOLD = "bold", r.BOLDITALIC = "bold italic", r.CHAR = "CHAR", r.WORD = "WORD", r._DEFAULT_TEXT_FILL = "#000000", r._DEFAULT_LEADMULT = 1.25, r._CTX_MIDDLE = "middle", r.LINEAR = "linear", r.QUADRATIC = "quadratic", r.BEZIER = "bezier", r.CURVE = "curve", r.STROKE = "stroke", r.FILL = "fill", r.TEXTURE = "texture", r.IMMEDIATE = "immediate", r.IMAGE = "image", r.NEAREST = "nearest", r.REPEAT = "repeat", r.CLAMP = "clamp", r.MIRROR = "mirror", r.LANDSCAPE = "landscape", r.PORTRAIT = "portrait", r._DEFAULT_STROKE = "#000000", r._DEFAULT_FILL = "#FFFFFF", r.GRID = "grid", r.AXES = "axes", r.LABEL = "label", r.FALLBACK = "fallback", r.CONTAIN = "contain", r.COVER = "cover", r.UNSIGNED_BYTE = "unsigned-byte", r.UNSIGNED_INT = "unsigned-int", r.FLOAT = "float", r.HALF_FLOAT = "half-float";
                r.RGBA = "rgba";
            },
            {}
        ],
        263: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.search"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.search"), e1("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (s = e1("./main")) && s.__esModule ? s : {
                    default: s
                }, s = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("./constants"));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                var l = [
                    s.ARROW,
                    s.CROSS,
                    s.HAND,
                    s.MOVE,
                    s.TEXT,
                    s.WAIT
                ], u = (n.default.prototype._frameRate = 0, n.default.prototype._lastFrameTime = window.performance.now(), n.default.prototype._targetFrameRate = 60, window.print);
                function c() {
                    return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth || 0;
                }
                function d() {
                    return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight || 0;
                }
                n.default.prototype.print = function() {
                    var e1;
                    arguments.length ? (e1 = console).log.apply(e1, arguments) : u();
                }, n.default.prototype.frameCount = 0, n.default.prototype.deltaTime = 0, n.default.prototype.focused = document.hasFocus(), n.default.prototype.cursor = function(e1, t, r) {
                    var o, n = "auto", s = this._curElement.elt;
                    l.includes(e1) ? n = e1 : "string" == typeof e1 && (o = "", t && r && "number" == typeof t && "number" == typeof r && (o = "".concat(t, " ").concat(r)), n = "http://" === e1.substring(0, 7) || "https://" === e1.substring(0, 8) || /\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(e1) ? "url(".concat(e1, ") ").concat(o, ", auto") : e1), s.style.cursor = n;
                }, n.default.prototype.frameRate = function(e1) {
                    return n.default._validateParameters("frameRate", arguments), "number" != typeof e1 || e1 < 0 ? this._frameRate : (this._setProperty("_targetFrameRate", e1), 0 === e1 && this._setProperty("_frameRate", e1), this);
                }, n.default.prototype.getFrameRate = function() {
                    return this.frameRate();
                }, n.default.prototype.setFrameRate = function(e1) {
                    return this.frameRate(e1);
                }, n.default.prototype.getTargetFrameRate = function() {
                    return this._targetFrameRate;
                }, n.default.prototype.noCursor = function() {
                    this._curElement.elt.style.cursor = "none";
                }, n.default.prototype.webglVersion = s.P2D, n.default.prototype.displayWidth = screen.width, n.default.prototype.displayHeight = screen.height, n.default.prototype.windowWidth = c(), n.default.prototype.windowHeight = d(), n.default.prototype._onresize = function(e1) {
                    this._setProperty("windowWidth", c()), this._setProperty("windowHeight", d());
                    var t = this._isGlobal ? window : this;
                    "function" != typeof t.windowResized || void 0 === (t = t.windowResized(e1)) || t || e1.preventDefault();
                }, n.default.prototype.width = 0, n.default.prototype.height = 0, n.default.prototype.fullscreen = function(e1) {
                    if (n.default._validateParameters("fullscreen", arguments), void 0 === e1) return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;
                    if (e1) {
                        e1 = document.documentElement;
                        if (!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled)) throw new Error("Fullscreen not enabled in this browser.");
                        e1.requestFullscreen ? e1.requestFullscreen() : e1.mozRequestFullScreen ? e1.mozRequestFullScreen() : e1.webkitRequestFullscreen ? e1.webkitRequestFullscreen() : e1.msRequestFullscreen && e1.msRequestFullscreen();
                    } else document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen();
                }, n.default.prototype.pixelDensity = function(e1) {
                    var t;
                    return n.default._validateParameters("pixelDensity", arguments), "number" == typeof e1 ? (e1 !== this._pixelDensity && (this._pixelDensity = e1), (t = this).resizeCanvas(this.width, this.height, !0)) : t = this._pixelDensity, t;
                }, n.default.prototype.displayDensity = function() {
                    return window.devicePixelRatio;
                }, n.default.prototype.getURL = function() {
                    return location.href;
                }, n.default.prototype.getURLPath = function() {
                    return location.pathname.split("/").filter(function(e1) {
                        return "" !== e1;
                    });
                }, n.default.prototype.getURLParams = function() {
                    for(var e1, t = /[?&]([^&=]+)(?:[&=])([^&=]+)/gim, r = {}; null != (e1 = t.exec(location.search));)e1.index === t.lastIndex && t.lastIndex++, r[e1[1]] = e1[2];
                    return r;
                };
                e1 = n.default;
                r.default = e1;
            },
            {
                "./constants": 262,
                "./main": 273,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.filter": 155,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.string.includes": 189,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.search": 195,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        264: [
            function(r, e1, t) {
                "use strict";
                r("core-js/modules/es.symbol"), r("core-js/modules/es.symbol.description"), r("core-js/modules/es.symbol.iterator"), r("core-js/modules/es.array.concat"), r("core-js/modules/es.array.filter"), r("core-js/modules/es.array.for-each"), r("core-js/modules/es.array.includes"), r("core-js/modules/es.array.iterator"), r("core-js/modules/es.array.join"), r("core-js/modules/es.array.map"), r("core-js/modules/es.array.slice"), r("core-js/modules/es.array.some"), r("core-js/modules/es.function.name"), r("core-js/modules/es.object.assign"), r("core-js/modules/es.object.get-own-property-names"), r("core-js/modules/es.object.keys"), r("core-js/modules/es.object.to-string"), r("core-js/modules/es.regexp.constructor"), r("core-js/modules/es.regexp.exec"), r("core-js/modules/es.regexp.to-string"), r("core-js/modules/es.string.iterator"), r("core-js/modules/es.string.match"), r("core-js/modules/es.string.replace"), r("core-js/modules/es.string.split"), r("core-js/modules/es.string.starts-with"), r("core-js/modules/web.dom-collections.for-each"), r("core-js/modules/web.dom-collections.iterator"), r("core-js/modules/es.symbol"), r("core-js/modules/es.symbol.description"), r("core-js/modules/es.symbol.iterator"), r("core-js/modules/es.array.concat"), r("core-js/modules/es.array.filter"), r("core-js/modules/es.array.for-each"), r("core-js/modules/es.array.includes"), r("core-js/modules/es.array.iterator"), r("core-js/modules/es.array.join"), r("core-js/modules/es.array.map"), r("core-js/modules/es.array.slice"), r("core-js/modules/es.array.some"), r("core-js/modules/es.function.name"), r("core-js/modules/es.object.assign"), r("core-js/modules/es.object.get-own-property-names"), r("core-js/modules/es.object.keys"), r("core-js/modules/es.object.to-string"), r("core-js/modules/es.regexp.constructor"), r("core-js/modules/es.regexp.exec"), r("core-js/modules/es.regexp.to-string"), r("core-js/modules/es.string.iterator"), r("core-js/modules/es.string.match"), r("core-js/modules/es.string.replace"), r("core-js/modules/es.string.split"), r("core-js/modules/es.string.starts-with"), r("core-js/modules/web.dom-collections.for-each"), r("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var o = (l = r("../main")) && l.__esModule ? l : {
                    default: l
                };
                r("../internationalization");
                function n(r, o) {
                    o = o || console.log.bind(console), s || i(), s.some(function(e1) {
                        var t;
                        if (r.message && null !== r.message.match("\\W?".concat(e1.name, "\\W"))) return t = "function" === e1.type ? "".concat(e1.name, "()") : e1.name, o("Did you just try to use p5.js's ".concat(t, " ").concat(e1.type, "? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: ").concat(a)), !0;
                    });
                }
                var s = null, i = null, a = (o.default._friendlyError = o.default._checkForUserDefinedFunctions = o.default._fesErrorMonitor = function() {}, s = null, "https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup"), i = function() {
                    function e1(r) {
                        return Object.getOwnPropertyNames(r).filter(function(e1) {
                            return "_" !== e1[0] && !(e1 in t) && (t[e1] = !0);
                        }).map(function(e1) {
                            var t = "function" == typeof r[e1] ? "function" : e1 === e1.toUpperCase() ? "constant" : "variable";
                            return {
                                name: e1,
                                type: t
                            };
                        });
                    }
                    var t = {};
                    (s = [].concat(e1(o.default.prototype), e1(r("../constants")))).sort(function(e1, t) {
                        return t.name.length - e1.name.length;
                    });
                }, l = (o.default.prototype._helpForMisusedAtTopLevelCode = n, "complete" !== document.readyState && (window.addEventListener("error", n, !1), window.addEventListener("load", function() {
                    window.removeEventListener("error", n, !1);
                })), o.default);
                t.default = l;
            },
            {
                "../constants": 262,
                "../internationalization": 271,
                "../main": 273,
                "./browser_errors": void 0,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.filter": 155,
                "core-js/modules/es.array.for-each": 156,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.join": 161,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.array.some": 165,
                "core-js/modules/es.function.name": 167,
                "core-js/modules/es.object.assign": 174,
                "core-js/modules/es.object.get-own-property-names": 177,
                "core-js/modules/es.object.keys": 179,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.constructor": 184,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.match": 191,
                "core-js/modules/es.string.replace": 194,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/es.string.starts-with": 197,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/web.dom-collections.for-each": 235,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        265: [
            function(e1, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var o = (o = e1("../main")) && o.__esModule ? o : {
                    default: o
                };
                e1("../internationalization");
                o.default._friendlyFileLoadError = function() {};
                e1 = o.default;
                r.default = e1;
            },
            {
                "../internationalization": 271,
                "../main": 273
            }
        ],
        266: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.constructor"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.match"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.string.trim"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.for-each"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.constructor"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.match"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.string.trim"), e1("core-js/modules/web.dom-collections.for-each"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = C(e1("../main")), s = e1("../internationalization"), a = O(e1("../constants")), l, u, c, d, f, h, p, m, y, g, v, b, j, _, x, w, S, E, M, T, I;
                function k() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, k = function() {
                        return e1;
                    }, e1);
                }
                function O(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = k();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o, n = {}, s = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1)Object.prototype.hasOwnProperty.call(e1, r) && ((o = s ? Object.getOwnPropertyDescriptor(e1, r) : null) && (o.get || o.set) ? Object.defineProperty(n, r, o) : n[r] = e1[r]);
                    return n.default = e1, t && t.set(e1, n), n;
                }
                function C(e1) {
                    return e1 && e1.__esModule ? e1 : {
                        default: e1
                    };
                }
                function D(e1) {
                    return L(e1) || P(e1) || A();
                }
                function A() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance");
                }
                function P(e1) {
                    if (Symbol.iterator in Object(e1) || "[object Arguments]" === Object.prototype.toString.call(e1)) return Array.from(e1);
                }
                function L(e1) {
                    if (Array.isArray(e1)) {
                        for(var t = 0, r = new Array(e1.length); t < e1.length; t++)r[t] = e1[t];
                        return r;
                    }
                }
                n.default._fesCodeReader = function() {};
                var R = n.default;
                r.default = R;
            },
            {
                "../constants": 262,
                "../internationalization": 271,
                "../main": 273,
                "core-js/modules/es.array.filter": 155,
                "core-js/modules/es.array.for-each": 156,
                "core-js/modules/es.array.from": 157,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.array.index-of": 159,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.join": 161,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.keys": 179,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.constructor": 184,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.includes": 189,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.match": 191,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/es.string.trim": 199,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.for-each": 235,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        267: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.match"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.match"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e1 = (e1 = e1("../main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function o() {
                    var t = /(^|@)\S+:\d+/, r = /^\s*at .*(\S+:\d+|\(native\))/m, o = /^(eval@)?(\[native code])?$/;
                    return {
                        parse: function(e1) {
                            return void 0 !== e1.stacktrace || void 0 !== e1["opera#sourceloc"] ? this.parseOpera(e1) : e1.stack && e1.stack.match(r) ? this.parseV8OrIE(e1) : e1.stack ? this.parseFFOrSafari(e1) : void 0;
                        },
                        extractLocation: function(e1) {
                            return -1 === e1.indexOf(":") ? [
                                e1
                            ] : [
                                (e1 = /(.+?)(?::(\d+))?(?::(\d+))?$/.exec(e1.replace(/[()]/g, "")))[1],
                                e1[2] || void 0,
                                e1[3] || void 0
                            ];
                        },
                        parseV8OrIE: function(e1) {
                            return e1.stack.split("\n").filter(function(e1) {
                                return !!e1.match(r);
                            }, this).map(function(e1) {
                                var t = (e1 = -1 < e1.indexOf("(eval ") ? e1.replace(/eval code/g, "eval").replace(/(\(eval at [^()]*)|(\),.*$)/g, "") : e1).replace(/^\s+/, "").replace(/\(eval code/g, "("), r = t.match(/ (\((.+):(\d+):(\d+)\)$)/), t = (t = r ? t.replace(r[0], "") : t).split(/\s+/).slice(1), r = this.extractLocation(r ? r[1] : t.pop());
                                return {
                                    functionName: t.join(" ") || void 0,
                                    fileName: -1 < [
                                        "eval",
                                        "<anonymous>"
                                    ].indexOf(r[0]) ? void 0 : r[0],
                                    lineNumber: r[1],
                                    columnNumber: r[2],
                                    source: e1
                                };
                            }, this);
                        },
                        parseFFOrSafari: function(e1) {
                            return e1.stack.split("\n").filter(function(e1) {
                                return !e1.match(o);
                            }, this).map(function(e1) {
                                var t, r;
                                return -1 === (e1 = -1 < e1.indexOf(" > eval") ? e1.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g, ":$1") : e1).indexOf("@") && -1 === e1.indexOf(":") ? {
                                    functionName: e1
                                } : {
                                    functionName: (r = e1.match(t = /((.*".+"[^@]*)?[^@]*)(?:@)/)) && r[1] ? r[1] : void 0,
                                    fileName: (r = this.extractLocation(e1.replace(t, "")))[0],
                                    lineNumber: r[1],
                                    columnNumber: r[2],
                                    source: e1
                                };
                            }, this);
                        },
                        parseOpera: function(e1) {
                            return !e1.stacktrace || -1 < e1.message.indexOf("\n") && e1.message.split("\n").length > e1.stacktrace.split("\n").length ? this.parseOpera9(e1) : e1.stack ? this.parseOpera11(e1) : this.parseOpera10(e1);
                        },
                        parseOpera9: function(e1) {
                            for(var t = /Line (\d+).*script (?:in )?(\S+)/i, r = e1.message.split("\n"), o = [], n = 2, s = r.length; n < s; n += 2){
                                var i = t.exec(r[n]);
                                i && o.push({
                                    fileName: i[2],
                                    lineNumber: i[1],
                                    source: r[n]
                                });
                            }
                            return o;
                        },
                        parseOpera10: function(e1) {
                            for(var t = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i, r = e1.stacktrace.split("\n"), o = [], n = 0, s = r.length; n < s; n += 2){
                                var i = t.exec(r[n]);
                                i && o.push({
                                    functionName: i[3] || void 0,
                                    fileName: i[2],
                                    lineNumber: i[1],
                                    source: r[n]
                                });
                            }
                            return o;
                        },
                        parseOpera11: function(e1) {
                            return e1.stack.split("\n").filter(function(e1) {
                                return !!e1.match(t) && !e1.match(/^Error created at/);
                            }, this).map(function(e1) {
                                var t, r = e1.split("@"), o = this.extractLocation(r.pop()), r = r.shift() || "";
                                return {
                                    functionName: r.replace(/<anonymous function(: (\w+))?>/, "$2").replace(/\([^)]*\)/g, "") || void 0,
                                    args: void 0 === (t = r.match(/\(([^)]*)\)/) ? r.replace(/^[^(]+\(([^)]*)\)$/, "$1") : t) || "[arguments not available]" === t ? void 0 : t.split(","),
                                    fileName: o[0],
                                    lineNumber: o[1],
                                    columnNumber: o[2],
                                    source: e1
                                };
                            }, this);
                        }
                    };
                }
                e1.default._getErrorStackParser = function() {
                    return new o;
                };
                e1 = e1.default;
                r.default = e1;
            },
            {
                "../main": 273,
                "core-js/modules/es.array.filter": 155,
                "core-js/modules/es.array.index-of": 159,
                "core-js/modules/es.array.join": 161,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.string.match": 191,
                "core-js/modules/es.string.replace": 194,
                "core-js/modules/es.string.split": 196
            }
        ],
        268: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.last-index-of"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.function.name"), e1("core-js/modules/es.map"), e1("core-js/modules/es.number.constructor"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.set"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.for-each"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.last-index-of"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.function.name"), e1("core-js/modules/es.map"), e1("core-js/modules/es.number.constructor"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.set"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.split"), e1("core-js/modules/web.dom-collections.for-each"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (n = e1("../main")) && n.__esModule ? n : {
                    default: n
                };
                (function(e1) {
                    if (e1 && e1.__esModule) return;
                    if (null === e1 || "object" !== a(e1) && "function" != typeof e1) return;
                    var t = i();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                })(e1("../constants")), e1("../internationalization");
                function i() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, i = function() {
                        return e1;
                    }, e1);
                }
                function a(e1) {
                    return (a = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                n.default._validateParameters = n.default._clearValidateParamsCache = function() {};
                e1 = n.default;
                r.default = e1;
            },
            {
                "../../../docs/parameterData.json": void 0,
                "../constants": 262,
                "../internationalization": 271,
                "../main": 273,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.for-each": 156,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.array.index-of": 159,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.join": 161,
                "core-js/modules/es.array.last-index-of": 162,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.function.name": 167,
                "core-js/modules/es.map": 168,
                "core-js/modules/es.number.constructor": 171,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.get-prototype-of": 178,
                "core-js/modules/es.object.keys": 179,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.reflect.construct": 182,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.set": 187,
                "core-js/modules/es.string.includes": 189,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.for-each": 235,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        269: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("./constants"));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                r.default = {
                    modeAdjust: function(e1, t, r, o, n) {
                        return n === s.CORNER ? {
                            x: e1,
                            y: t,
                            w: r,
                            h: o
                        } : n === s.CORNERS ? {
                            x: e1,
                            y: t,
                            w: r - e1,
                            h: o - t
                        } : n === s.RADIUS ? {
                            x: e1 - r,
                            y: t - o,
                            w: 2 * r,
                            h: 2 * o
                        } : n === s.CENTER ? {
                            x: e1 - .5 * r,
                            y: t - .5 * o,
                            w: r,
                            h: o
                        } : void 0;
                    }
                };
            },
            {
                "./constants": 262,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        270: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.promise"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.promise"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator");
                var o = (n = e1("../core/main")) && n.__esModule ? n : {
                    default: n
                };
                e1("./internationalization");
                var n = Promise.resolve();
                Promise.all([
                    new Promise(function(e1, t) {
                        "complete" === document.readyState ? e1() : window.addEventListener("load", e1, !1);
                    }),
                    n
                ]).then(function() {
                    void 0 !== window._setupDone ? console.warn("p5.js seems to have been imported multiple times. Please remove the duplicate import") : window.mocha || (window.setup && "function" == typeof window.setup || window.draw && "function" == typeof window.draw) && !o.default.instance && new o.default;
                });
            },
            {
                "../core/main": 273,
                "./internationalization": 271,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.promise": 181,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        271: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.promise"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.split"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.promise"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.split"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.setTranslatorLanguage = r.currentTranslatorLanguage = r.availableTranslatorLanguages = r.initialize = r.translator = void 0;
                var n, s, o = a(e1("i18next")), i = a(e1("i18next-browser-languagedetector"));
                function a(e1) {
                    return e1 && e1.__esModule ? e1 : {
                        default: e1
                    };
                }
                function l(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                var u = function() {
                    function r(e1, t) {
                        if (!(this instanceof r)) throw new TypeError("Cannot call a class as a function");
                        this.init(e1, t);
                    }
                    var e1, t, o;
                    return e1 = r, t = [
                        {
                            key: "fetchWithTimeout",
                            value: function(e1, t) {
                                var r = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 2e3;
                                return Promise.race([
                                    fetch(e1, t),
                                    new Promise(function(e1, t) {
                                        return setTimeout(function() {
                                            return t(new Error("timeout"));
                                        }, r);
                                    })
                                ]);
                            }
                        },
                        {
                            key: "init",
                            value: function(e1) {
                                var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
                                this.services = e1, this.options = t;
                            }
                        },
                        {
                            key: "read",
                            value: function(e1, t, r) {
                                var o = this.options.loadPath;
                                e1 === this.options.fallback ? r(null, n[e1][t]) : s.includes(e1) ? (o = this.services.interpolator.interpolate(o, {
                                    lng: e1,
                                    ns: t
                                }), this.loadUrl(o, r)) : r("Not found", !1);
                            }
                        },
                        {
                            key: "loadUrl",
                            value: function(t, r) {
                                this.fetchWithTimeout(t).then(function(e1) {
                                    if (e1.ok) return e1.json();
                                    throw new Error("failed loading ".concat(t));
                                }, function() {
                                    throw new Error("failed loading ".concat(t));
                                }).then(function(e1) {
                                    return r(null, e1);
                                }).catch(r);
                            }
                        }
                    ], l(e1.prototype, t), o && l(e1, o), r;
                }();
                u.type = "backend", r.translator = function(e1, t) {
                    console.debug("p5.js translator called before translations were loaded"), o.default.t(e1, t);
                }, r.initialize = function() {
                    return o.default.use(i.default).use(u).init({
                        fallbackLng: "en",
                        nestingPrefix: "$tr(",
                        nestingSuffix: ")",
                        defaultNS: "translation",
                        returnEmptyString: !1,
                        interpolation: {
                            escapeValue: !1
                        },
                        detection: {
                            checkWhitelist: !1,
                            order: [
                                "querystring",
                                "navigator",
                                "htmlTag",
                                "path",
                                "subdomain"
                            ],
                            caches: []
                        },
                        backend: {
                            fallback: "en",
                            loadPath: "https://cdn.jsdelivr.net/npm/p5/translations/{{lng}}/{{ns}}.json"
                        },
                        partialBundledLanguages: !0,
                        resources: n
                    }).then(function(e1) {
                        r.translator = e1;
                    }, function(e1) {
                        return console.debug("Translations failed to load (".concat(e1, ")"));
                    });
                }, r.availableTranslatorLanguages = function() {
                    return o.default.languages;
                }, r.currentTranslatorLanguage = function(e1) {
                    return o.default.language;
                };
                r.setTranslatorLanguage = function(e1) {
                    return o.default.changeLanguage(e1 || void 0, function(e1) {
                        return console.debug("Translations failed to load (".concat(e1, ")"));
                    });
                };
            },
            {
                "../../translations": void 0,
                "../../translations/dev": void 0,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.join": 161,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.object.keys": 179,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.promise": 181,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.string.includes": 189,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/web.dom-collections.iterator": 236,
                i18next: 3,
                "i18next-browser-languagedetector": 3
            }
        ],
        272: [
            function(e1, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e1 = (e1 = e1("./main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                e1.default.prototype.pushStyle = function() {
                    throw new Error("pushStyle() not used, see push()");
                }, e1.default.prototype.popStyle = function() {
                    throw new Error("popStyle() not used, see pop()");
                }, e1.default.prototype.popMatrix = function() {
                    throw new Error("popMatrix() not used, see pop()");
                }, e1.default.prototype.pushMatrix = function() {
                    throw new Error("pushMatrix() not used, see push()");
                };
                e1 = e1.default;
                r.default = e1;
            },
            {
                "./main": 273
            }
        ],
        273: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.get-own-property-names"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.for-each"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.get-own-property-names"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.for-each"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0, e1("./shim");
                var n = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("./constants"));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                function s(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                var l, u = function() {
                    function v(e1, t, r) {
                        var d = this;
                        if (!(this instanceof v)) throw new TypeError("Cannot call a class as a function");
                        this._setupDone = !1, this._preloadDone = !1, this._pixelDensity = Math.ceil(window.devicePixelRatio) || 1, this._userNode = t, this._curElement = null, this._elements = [], this._glAttributes = null, this._requestAnimId = 0, this._preloadCount = 0, this._isGlobal = !1, this._loop = !0, this._initializeInstanceVariables(), this._defaultCanvasSize = {
                            width: 100,
                            height: 100
                        }, this._events = {
                            mousemove: null,
                            mousedown: null,
                            mouseup: null,
                            dragend: null,
                            dragover: null,
                            click: null,
                            dblclick: null,
                            mouseover: null,
                            mouseout: null,
                            keydown: null,
                            keyup: null,
                            keypress: null,
                            touchstart: null,
                            touchmove: null,
                            touchend: null,
                            resize: null,
                            blur: null
                        }, this._millisStart = -1, this._recording = !1, this._lcg_random_state = null, this._gaussian_previous = !1, this._events.wheel = null, this._loadingScreenId = "p5_loading", this._registeredMethods = {};
                        var t = Object.getOwnPropertyNames(v.prototype._registeredMethods), o = !0, n = !1, s = void 0;
                        try {
                            for(var i, a = t[Symbol.iterator](); !(o = (i = a.next()).done); o = !0){
                                var l = i.value;
                                this._registeredMethods[l] = v.prototype._registeredMethods[l].slice();
                            }
                        } catch (e1) {
                            n = !0, s = e1;
                        } finally{
                            try {
                                o || null == a.return || a.return();
                            } finally{
                                if (n) throw s;
                            }
                        }
                        window.DeviceOrientationEvent && (this._events.deviceorientation = null), window.DeviceMotionEvent && !window._isNodeWebkit && (this._events.devicemotion = null), this._start = function() {
                            d._userNode && "string" == typeof d._userNode && (d._userNode = document.getElementById(d._userNode));
                            var e1 = d._isGlobal ? window : d;
                            if (e1.preload) {
                                var t, r = document.getElementById(d._loadingScreenId), o = (r || ((r = document.createElement("div")).innerHTML = "Loading...", r.style.position = "absolute", r.id = d._loadingScreenId, (d._userNode || document.body).appendChild(r)), d._preloadMethods);
                                for(t in o){
                                    o[t] = o[t] || v;
                                    var n = o[t];
                                    n !== v.prototype && n !== v || (d._isGlobal && (window[t] = d._wrapPreload(d, t)), n = d), d._registeredPreloadMethods[t] = n[t], n[t] = d._wrapPreload(n, t);
                                }
                                e1.preload(), d._runIfPreloadsAreDone();
                            } else d._setup(), d._recording || d._draw();
                        }, this._runIfPreloadsAreDone = function() {
                            var e1, t = this._isGlobal ? window : this;
                            0 === t._preloadCount && ((e1 = document.getElementById(t._loadingScreenId)) && e1.parentNode.removeChild(e1), this._setupDone || (this._lastTargetFrameTime = window.performance.now(), this._lastRealFrameTime = window.performance.now(), t._setup(), this._recording || t._draw()));
                        }, this._decrementPreload = function() {
                            var e1 = this._isGlobal ? window : this;
                            e1._preloadDone || "function" != typeof e1.preload || (e1._setProperty("_preloadCount", e1._preloadCount - 1), e1._runIfPreloadsAreDone());
                        }, this._wrapPreload = function(o, n) {
                            var s = this;
                            return function() {
                                s._incrementPreload();
                                for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                                return s._registeredPreloadMethods[n].apply(o, t);
                            };
                        }, this._incrementPreload = function() {
                            var e1 = this._isGlobal ? window : this;
                            e1._preloadDone || e1._setProperty("_preloadCount", e1._preloadCount + 1);
                        }, this._setup = function() {
                            d.createCanvas(d._defaultCanvasSize.width, d._defaultCanvasSize.height, "p2d");
                            var e1 = d._isGlobal ? window : d;
                            if ("function" == typeof e1.preload) for(var t in d._preloadMethods)e1[t] = d._preloadMethods[t][t], e1[t] && d && (e1[t] = e1[t].bind(d));
                            d._millisStart = window.performance.now(), e1._preloadDone = !0, "function" == typeof e1.setup && e1.setup();
                            var r = document.getElementsByTagName("canvas"), o = !0, n = !1, s = void 0;
                            try {
                                for(var i, a = r[Symbol.iterator](); !(o = (i = a.next()).done); o = !0){
                                    var l = i.value;
                                    "true" === l.dataset.hidden && (l.style.visibility = "", delete l.dataset.hidden);
                                }
                            } catch (e1) {
                                n = !0, s = e1;
                            } finally{
                                try {
                                    o || null == a.return || a.return();
                                } finally{
                                    if (n) throw s;
                                }
                            }
                            d._lastTargetFrameTime = window.performance.now(), d._lastRealFrameTime = window.performance.now(), d._setupDone = !0, (d._accessibleOutputs.grid || d._accessibleOutputs.text) && d._updateAccsOutput();
                        }, this._draw = function() {
                            var e1 = window.performance.now(), t = e1 - d._lastTargetFrameTime, r = 1e3 / d._targetFrameRate;
                            (!d._loop || r - 5 <= t) && (d.deltaTime = e1 - d._lastRealFrameTime, d._setProperty("deltaTime", d.deltaTime), d._frameRate = 1e3 / d.deltaTime, d.redraw(), d._lastTargetFrameTime = Math.max(d._lastTargetFrameTime + r, e1), d._lastRealFrameTime = e1, void 0 !== d._updateMouseCoords && (d._updateMouseCoords(), d._setProperty("movedX", 0), d._setProperty("movedY", 0))), d._loop && (d._requestAnimId = window.requestAnimationFrame(d._draw));
                        }, this._setProperty = function(e1, t) {
                            d[e1] = t, d._isGlobal && (window[e1] = t);
                        }, this.remove = function() {
                            var t = document.getElementById(d._loadingScreenId);
                            if (t && (t.parentNode.removeChild(t), d._incrementPreload()), d._curElement) {
                                for(var e1 in d._loop = !1, d._requestAnimId && window.cancelAnimationFrame(d._requestAnimId), d._events)window.removeEventListener(e1, d._events[e1]);
                                var r = !0, t = !1, o = void 0;
                                try {
                                    for(var n, s = d._elements[Symbol.iterator](); !(r = (n = s.next()).done); r = !0){
                                        var i, a = n.value;
                                        for(i in a.elt && a.elt.parentNode && a.elt.parentNode.removeChild(a.elt), a._events)a.elt.removeEventListener(i, a._events[i]);
                                    }
                                } catch (e1) {
                                    t = !0, o = e1;
                                } finally{
                                    try {
                                        r || null == s.return || s.return();
                                    } finally{
                                        if (t) throw o;
                                    }
                                }
                                var l = d;
                                d._registeredMethods.remove.forEach(function(e1) {
                                    void 0 !== e1 && e1.call(l);
                                });
                            }
                            if (d._isGlobal) {
                                for(var u in v.prototype)try {
                                    delete window[u];
                                } catch (e1) {
                                    window[u] = void 0;
                                }
                                for(var c in d)if (d.hasOwnProperty(c)) try {
                                    delete window[c];
                                } catch (e1) {
                                    window[c] = void 0;
                                }
                                v.instance = null;
                            }
                        }, this._registeredMethods.init.forEach(function(e1) {
                            void 0 !== e1 && e1.call(this);
                        }, this), this._setupPromisePreloads();
                        var u, c, f = this._createFriendlyGlobalFunctionBinder();
                        if (e1) e1(this), v._checkForUserDefinedFunctions(this);
                        else {
                            for(var h in this._isGlobal = !0, v.instance = this, v.prototype)"function" == typeof v.prototype[h] ? (u = h.substring(2), this._events.hasOwnProperty(u) || (Math.hasOwnProperty(h) && Math[h] === v.prototype[h] ? f(h, v.prototype[h]) : f(h, v.prototype[h].bind(this)))) : f(h, v.prototype[h]);
                            for(var p in this)this.hasOwnProperty(p) && f(p, this[p]);
                        }
                        for(c in this._events){
                            var m = this["_on".concat(c)];
                            m && (m = m.bind(this), window.addEventListener(c, m, {
                                passive: !1
                            }), this._events[c] = m);
                        }
                        function y() {
                            d._setProperty("focused", !0);
                        }
                        function g() {
                            d._setProperty("focused", !1);
                        }
                        window.addEventListener("focus", y), window.addEventListener("blur", g), this.registerMethod("remove", function() {
                            window.removeEventListener("focus", y), window.removeEventListener("blur", g);
                        }), "complete" === document.readyState ? this._start() : window.addEventListener("load", this._start.bind(this), !1);
                    }
                    var e1, t, r;
                    return e1 = v, t = [
                        {
                            key: "_initializeInstanceVariables",
                            value: function() {
                                this._accessibleOutputs = {
                                    text: !1,
                                    grid: !1,
                                    textLabel: !1,
                                    gridLabel: !1
                                }, this._styles = [], this._bezierDetail = 20, this._curveDetail = 20, this._colorMode = n.RGB, this._colorMaxes = {
                                    rgb: [
                                        255,
                                        255,
                                        255,
                                        255
                                    ],
                                    hsb: [
                                        360,
                                        100,
                                        100,
                                        1
                                    ],
                                    hsl: [
                                        360,
                                        100,
                                        100,
                                        1
                                    ]
                                }, this._downKeys = {};
                            }
                        },
                        {
                            key: "registerPreloadMethod",
                            value: function(e1, t) {
                                v.prototype._preloadMethods.hasOwnProperty(e1) || (v.prototype._preloadMethods[e1] = t);
                            }
                        },
                        {
                            key: "registerMethod",
                            value: function(e1, t) {
                                var r = this || v.prototype;
                                r._registeredMethods.hasOwnProperty(e1) || (r._registeredMethods[e1] = []), r._registeredMethods[e1].push(t);
                            }
                        },
                        {
                            key: "_createFriendlyGlobalFunctionBinder",
                            value: function() {
                                var e1 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, r = e1.globalObject || window;
                                e1.log || console.log.bind(console);
                                return function(e1, t) {
                                    v.disableFriendlyErrors, r[e1] = t;
                                };
                            }
                        }
                    ], s(e1.prototype, t), r && s(e1, r), v;
                }();
                for(l in u.instance = null, u.disableFriendlyErrors = !1, n)u.prototype[l] = n[l];
                u.VERSION = n.VERSION, u.prototype._preloadMethods = {
                    loadJSON: u.prototype,
                    loadImage: u.prototype,
                    loadStrings: u.prototype,
                    loadXML: u.prototype,
                    loadBytes: u.prototype,
                    loadTable: u.prototype,
                    loadFont: u.prototype,
                    loadModel: u.prototype,
                    loadShader: u.prototype
                }, u.prototype._registeredMethods = {
                    init: [],
                    pre: [],
                    post: [],
                    remove: []
                }, u.prototype._registeredPreloadMethods = {}, r.default = u;
            },
            {
                "./constants": 262,
                "./shim": 284,
                "core-js/modules/es.array.for-each": 156,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.get-own-property-names": 177,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.for-each": 235,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        274: [
            function(e1, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (e1 = e1("./main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function s(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                n.default.Element = function() {
                    function r(e1, t) {
                        if (!(this instanceof r)) throw new TypeError("Cannot call a class as a function");
                        this.elt = e1, this._pInst = this._pixelsState = t, this._events = {}, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight;
                    }
                    var e1, t, o;
                    return e1 = r, o = [
                        {
                            key: "_adjustListener",
                            value: function(e1, t, r) {
                                return !1 === t ? n.default.Element._detachListener(e1, r) : n.default.Element._attachListener(e1, t, r), this;
                            }
                        },
                        {
                            key: "_attachListener",
                            value: function(e1, t, r) {
                                r._events[e1] && n.default.Element._detachListener(e1, r);
                                t = t.bind(r);
                                r.elt.addEventListener(e1, t, !1), r._events[e1] = t;
                            }
                        },
                        {
                            key: "_detachListener",
                            value: function(e1, t) {
                                var r = t._events[e1];
                                t.elt.removeEventListener(e1, r, !1), t._events[e1] = null;
                            }
                        }
                    ], t = [
                        {
                            key: "parent",
                            value: function(e1) {
                                return void 0 === e1 ? this.elt.parentNode : ("string" == typeof e1 ? ("#" === e1[0] && (e1 = e1.substring(1)), e1 = document.getElementById(e1)) : e1 instanceof n.default.Element && (e1 = e1.elt), e1.appendChild(this.elt), this);
                            }
                        },
                        {
                            key: "id",
                            value: function(e1) {
                                return void 0 === e1 ? this.elt.id : (this.elt.id = e1, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight, this);
                            }
                        },
                        {
                            key: "class",
                            value: function(e1) {
                                return void 0 === e1 ? this.elt.className : (this.elt.className = e1, this);
                            }
                        },
                        {
                            key: "mousePressed",
                            value: function(t) {
                                return n.default.Element._adjustListener("mousedown", function(e1) {
                                    return this._pInst._setProperty("mouseIsPressed", !0), this._pInst._setMouseButton(e1), t.call(this, e1);
                                }, this), this;
                            }
                        },
                        {
                            key: "doubleClicked",
                            value: function(e1) {
                                return n.default.Element._adjustListener("dblclick", e1, this), this;
                            }
                        },
                        {
                            key: "mouseWheel",
                            value: function(e1) {
                                return n.default.Element._adjustListener("wheel", e1, this), this;
                            }
                        },
                        {
                            key: "mouseReleased",
                            value: function(e1) {
                                return n.default.Element._adjustListener("mouseup", e1, this), this;
                            }
                        },
                        {
                            key: "mouseClicked",
                            value: function(e1) {
                                return n.default.Element._adjustListener("click", e1, this), this;
                            }
                        },
                        {
                            key: "mouseMoved",
                            value: function(e1) {
                                return n.default.Element._adjustListener("mousemove", e1, this), this;
                            }
                        },
                        {
                            key: "mouseOver",
                            value: function(e1) {
                                return n.default.Element._adjustListener("mouseover", e1, this), this;
                            }
                        },
                        {
                            key: "mouseOut",
                            value: function(e1) {
                                return n.default.Element._adjustListener("mouseout", e1, this), this;
                            }
                        },
                        {
                            key: "touchStarted",
                            value: function(e1) {
                                return n.default.Element._adjustListener("touchstart", e1, this), this;
                            }
                        },
                        {
                            key: "touchMoved",
                            value: function(e1) {
                                return n.default.Element._adjustListener("touchmove", e1, this), this;
                            }
                        },
                        {
                            key: "touchEnded",
                            value: function(e1) {
                                return n.default.Element._adjustListener("touchend", e1, this), this;
                            }
                        },
                        {
                            key: "dragOver",
                            value: function(e1) {
                                return n.default.Element._adjustListener("dragover", e1, this), this;
                            }
                        },
                        {
                            key: "dragLeave",
                            value: function(e1) {
                                return n.default.Element._adjustListener("dragleave", e1, this), this;
                            }
                        },
                        {
                            key: "_setProperty",
                            value: function(e1, t) {
                                this[e1] = t;
                            }
                        }
                    ], s(e1.prototype, t), o && s(e1, o), r;
                }();
                e1 = n.default.Element;
                r.default = e1;
            },
            {
                "./main": 273
            }
        ],
        275: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var c = (u = e1("./main")) && u.__esModule ? u : {
                    default: u
                }, d = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== a(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = i();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("./constants"));
                function i() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, i = function() {
                        return e1;
                    }, e1);
                }
                function a(e1) {
                    return (a = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                function n(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                function s(e1, t) {
                    return (s = Object.setPrototypeOf || function(e1, t) {
                        return e1.__proto__ = t, e1;
                    })(e1, t);
                }
                function f(r) {
                    return function() {
                        var e1, t = l(r);
                        return h(this, function() {
                            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                                if ("function" == typeof Proxy) return 1;
                                try {
                                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), 1;
                                } catch (e1) {}
                            }
                        }() ? (e1 = l(this).constructor, Reflect.construct(t, arguments, e1)) : t.apply(this, arguments));
                    };
                }
                function h(e1, t) {
                    return !t || "object" !== a(t) && "function" != typeof t ? p(e1) : t;
                }
                function p(e1) {
                    if (void 0 === e1) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return e1;
                }
                function l(e1) {
                    return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function(e1) {
                        return e1.__proto__ || Object.getPrototypeOf(e1);
                    })(e1);
                }
                c.default.Graphics = function(e1) {
                    var t = u;
                    if ("function" != typeof e1 && null !== e1) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e1 && e1.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e1 && s(t, e1);
                    var r, l = f(u);
                    function u(e1, t, r, o, n) {
                        var s;
                        if (!(this instanceof u)) throw new TypeError("Cannot call a class as a function");
                        a = n || document.createElement("canvas"), (s = l.call(this, a, o)).canvas = a;
                        var i, a = r || d.P2D, r = o._userNode || document.body;
                        for(i in n || r.appendChild(s.canvas), c.default.prototype)s[i] || ("function" == typeof c.default.prototype[i] ? s[i] = c.default.prototype[i].bind(p(s)) : s[i] = c.default.prototype[i]);
                        return c.default.prototype._initializeInstanceVariables.apply(p(s)), s.width = e1, s.height = t, s._pixelDensity = o._pixelDensity, a === d.WEBGL ? s._renderer = new c.default.RendererGL(s.canvas, p(s), !1) : s._renderer = new c.default.Renderer2D(s.canvas, p(s), !1), o._elements.push(p(s)), Object.defineProperty(p(s), "deltaTime", {
                            get: function() {
                                return this._pInst.deltaTime;
                            }
                        }), s._renderer.resize(e1, t), s._renderer._applyDefaults(), h(s, p(s));
                    }
                    return t = u, e1 = [
                        {
                            key: "reset",
                            value: function() {
                                this._renderer.resetMatrix(), this._renderer.isP3D && this._renderer._update();
                            }
                        },
                        {
                            key: "remove",
                            value: function() {
                                this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
                                var e1, t = this._pInst._elements.indexOf(this);
                                for(e1 in -1 !== t && this._pInst._elements.splice(t, 1), this._events)this.elt.removeEventListener(e1, this._events[e1]);
                            }
                        },
                        {
                            key: "createFramebuffer",
                            value: function(e1) {
                                return new c.default.Framebuffer(this, e1);
                            }
                        }
                    ], n(t.prototype, e1), r && n(t, r), u;
                }(c.default.Element);
                var u = c.default.Graphics;
                r.default = u;
            },
            {
                "./constants": 262,
                "./main": 273,
                "core-js/modules/es.array.index-of": 159,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.splice": 166,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.get-prototype-of": 178,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.reflect.construct": 182,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        276: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.number.constructor"), e1("core-js/modules/es.object.assign"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.string.trim"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.number.constructor"), e1("core-js/modules/es.object.assign"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.string.trim"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = (s = e1("./main")) && s.__esModule ? s : {
                    default: s
                }, A = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== l(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = i();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants"));
                function i() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, i = function() {
                        return e1;
                    }, e1);
                }
                function l(e1) {
                    return (l = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                function u(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                function c(e1, t) {
                    return (c = Object.setPrototypeOf || function(e1, t) {
                        return e1.__proto__ = t, e1;
                    })(e1, t);
                }
                function d(o) {
                    return function() {
                        var e1, t, r = n(o);
                        return e1 = function() {
                            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                                if ("function" == typeof Proxy) return 1;
                                try {
                                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), 1;
                                } catch (e1) {}
                            }
                        }() ? (e1 = n(this).constructor, Reflect.construct(r, arguments, e1)) : r.apply(this, arguments), r = this, !(t = e1) || "object" !== l(t) && "function" != typeof t ? f(r) : t;
                    };
                }
                function f(e1) {
                    if (void 0 === e1) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return e1;
                }
                function n(e1) {
                    return (n = Object.setPrototypeOf ? Object.getPrototypeOf : function(e1) {
                        return e1.__proto__ || Object.getPrototypeOf(e1);
                    })(e1);
                }
                var s = function(e1) {
                    var t = s;
                    if ("function" != typeof e1 && null !== e1) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e1 && e1.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e1 && c(t, e1);
                    var r, n = d(s);
                    function s(e1, t, r) {
                        var o;
                        if (this instanceof s) return (o = n.call(this, e1, t)).canvas = e1, o._pixelsState = t, r ? (o._isMainCanvas = !0, o._pInst._setProperty("_curElement", f(o)), o._pInst._setProperty("canvas", o.canvas), o._pInst._setProperty("width", o.width), o._pInst._setProperty("height", o.height)) : (o.canvas.style.display = "none", o._styles = []), o._textSize = 12, o._textLeading = 15, o._textFont = "sans-serif", o._textStyle = A.NORMAL, o._textAscent = null, o._textDescent = null, o._textAlign = A.LEFT, o._textBaseline = A.BASELINE, o._textWrap = A.WORD, o._rectMode = A.CORNER, o._ellipseMode = A.CENTER, o._curveTightness = 0, o._imageMode = A.CORNER, o._tint = null, o._doStroke = !0, o._doFill = !0, o._strokeSet = !1, o._fillSet = !1, o._leadingSet = !1, o;
                        throw new TypeError("Cannot call a class as a function");
                    }
                    return t = s, e1 = [
                        {
                            key: "push",
                            value: function() {
                                return {
                                    properties: {
                                        _doStroke: this._doStroke,
                                        _strokeSet: this._strokeSet,
                                        _doFill: this._doFill,
                                        _fillSet: this._fillSet,
                                        _tint: this._tint,
                                        _imageMode: this._imageMode,
                                        _rectMode: this._rectMode,
                                        _ellipseMode: this._ellipseMode,
                                        _textFont: this._textFont,
                                        _textLeading: this._textLeading,
                                        _leadingSet: this._leadingSet,
                                        _textSize: this._textSize,
                                        _textAlign: this._textAlign,
                                        _textBaseline: this._textBaseline,
                                        _textStyle: this._textStyle,
                                        _textWrap: this._textWrap
                                    }
                                };
                            }
                        },
                        {
                            key: "pop",
                            value: function(e1) {
                                e1.properties && Object.assign(this, e1.properties);
                            }
                        },
                        {
                            key: "resize",
                            value: function(e1, t) {
                                this.width = e1, this.height = t, this.elt.width = e1 * this._pInst._pixelDensity, this.elt.height = t * this._pInst._pixelDensity, this.elt.style.width = "".concat(e1, "px"), this.elt.style.height = "".concat(t, "px"), this._isMainCanvas && (this._pInst._setProperty("width", this.width), this._pInst._setProperty("height", this.height));
                            }
                        },
                        {
                            key: "get",
                            value: function(e1, t, r, o) {
                                var n = this._pixelsState, s = n._pixelDensity, i = this.canvas;
                                if (void 0 === e1 && void 0 === t) e1 = t = 0, r = n.width, o = n.height;
                                else if (e1 *= s, t *= s, void 0 === r && void 0 === o) return e1 < 0 || t < 0 || e1 >= i.width || t >= i.height ? [
                                    0,
                                    0,
                                    0,
                                    0
                                ] : this._getPixel(e1, t);
                                n = new a.default.Image(r, o);
                                return n.canvas.getContext("2d").drawImage(i, e1, t, r * s, o * s, 0, 0, r, o), n;
                            }
                        },
                        {
                            key: "textLeading",
                            value: function(e1) {
                                return "number" == typeof e1 ? (this._setProperty("_leadingSet", !0), this._setProperty("_textLeading", e1), this._pInst) : this._textLeading;
                            }
                        },
                        {
                            key: "textStyle",
                            value: function(e1) {
                                return e1 ? (e1 !== A.NORMAL && e1 !== A.ITALIC && e1 !== A.BOLD && e1 !== A.BOLDITALIC || this._setProperty("_textStyle", e1), this._applyTextProperties()) : this._textStyle;
                            }
                        },
                        {
                            key: "textAscent",
                            value: function() {
                                return null === this._textAscent && this._updateTextMetrics(), this._textAscent;
                            }
                        },
                        {
                            key: "textDescent",
                            value: function() {
                                return null === this._textDescent && this._updateTextMetrics(), this._textDescent;
                            }
                        },
                        {
                            key: "textAlign",
                            value: function(e1, t) {
                                return void 0 !== e1 ? (this._setProperty("_textAlign", e1), void 0 !== t && this._setProperty("_textBaseline", t), this._applyTextProperties()) : {
                                    horizontal: this._textAlign,
                                    vertical: this._textBaseline
                                };
                            }
                        },
                        {
                            key: "textWrap",
                            value: function(e1) {
                                return this._setProperty("_textWrap", e1), this._textWrap;
                            }
                        },
                        {
                            key: "text",
                            value: function(e1, t, r, o, n) {
                                var s, i, a, l, u = this._pInst, c = this._textWrap, d = Number.MAX_VALUE, f = r;
                                if ((this._doFill || this._doStroke) && void 0 !== e1) {
                                    if (s = (e1 = (e1 = "string" != typeof e1 ? e1.toString() : e1).replace(/(\t)/g, "  ")).split("\n"), void 0 !== o) {
                                        switch(this._rectMode === A.CENTER && (t -= o / 2), this._textAlign){
                                            case A.CENTER:
                                                t += o / 2;
                                                break;
                                            case A.RIGHT:
                                                t += o;
                                        }
                                        if (void 0 !== n) {
                                            this._rectMode === A.CENTER && (r -= n / 2, f -= n / 2);
                                            var e1 = r, h = u.textAscent();
                                            switch(this._textBaseline){
                                                case A.BOTTOM:
                                                    l = r + n, r = Math.max(l, r), f += h;
                                                    break;
                                                case A.CENTER:
                                                    l = r + n / 2, r = Math.max(l, r), f += h / 2;
                                            }
                                            d = r + n - h, this._textBaseline === A.CENTER && (d = e1 + n - h / 2);
                                        } else this._textBaseline !== A.BOTTOM && this._textBaseline !== A.CENTER || (f = r - (e1 = u.textSize() * this._textLeading) / 2, d = r + e1 / 2);
                                        if (c === A.WORD) {
                                            for(var p = [], m = 0; m < s.length; m++){
                                                for(var y = "", g = s[m].split(" "), v = 0; v < g.length; v++)i = "".concat(y + g[v]) + " ", y = o < (a = this.textWidth(i)) && 0 < y.length ? (p.push(y), "".concat(g[v]) + " ") : i;
                                                p.push(y);
                                            }
                                            var b = 0;
                                            this._textBaseline === A.CENTER ? b = (p.length - 1) * u.textLeading() / 2 : this._textBaseline === A.BOTTOM && (b = (p.length - 1) * u.textLeading());
                                            for(var j = 0; j < s.length; j++){
                                                y = "", g = s[j].split(" ");
                                                for(var _ = 0; _ < g.length; _++)i = "".concat(y + g[_]) + " ", o < (a = this.textWidth(i)) && 0 < y.length ? (this._renderText(u, y.trim(), t, r - b, d, f), y = "".concat(g[_]) + " ", r += u.textLeading()) : y = i;
                                                this._renderText(u, y.trim(), t, r - b, d, f), r += u.textLeading();
                                            }
                                        } else {
                                            for(var x = [], w = 0; w < s.length; w++)for(var S = s[w].split(y = ""), E = 0; E < S.length; E++)i = "".concat(y + S[E]), (a = this.textWidth(i)) <= o ? y += S[E] : o < a && 0 < y.length && (x.push(y), y = "".concat(S[E]));
                                            x.push(y);
                                            var M = 0;
                                            this._textBaseline === A.CENTER ? M = (x.length - 1) * u.textLeading() / 2 : this._textBaseline === A.BOTTOM && (M = (x.length - 1) * u.textLeading());
                                            for(var T = 0; T < s.length; T++){
                                                S = s[T].split(y = "");
                                                for(var k = 0; k < S.length; k++)i = "".concat(y + S[k]), (a = this.textWidth(i)) <= o ? y += S[k] : o < a && 0 < y.length && (this._renderText(u, y.trim(), t, r - M, d, f), r += u.textLeading(), y = "".concat(S[k]));
                                            }
                                            this._renderText(u, y.trim(), t, r - M, d, f), r += u.textLeading();
                                        }
                                    } else {
                                        var O = 0;
                                        this._textBaseline === A.CENTER ? O = (s.length - 1) * u.textLeading() / 2 : this._textBaseline === A.BOTTOM && (O = (s.length - 1) * u.textLeading());
                                        for(var C = 0; C < s.length; C++)this._renderText(u, s[C], t, r - O, d, f - O), r += u.textLeading();
                                    }
                                    return u;
                                }
                            }
                        },
                        {
                            key: "_applyDefaults",
                            value: function() {
                                return this;
                            }
                        },
                        {
                            key: "_isOpenType",
                            value: function() {
                                var e1 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : this._textFont;
                                return "object" === l(e1) && e1.font && e1.font.supported;
                            }
                        },
                        {
                            key: "_updateTextMetrics",
                            value: function() {
                                var e1, t, r, o, n, s;
                                return this._isOpenType() ? (this._setProperty("_textAscent", this._textFont._textAscent()), this._setProperty("_textDescent", this._textFont._textDescent())) : ((e1 = document.createElement("span")).style.fontFamily = this._textFont, e1.style.fontSize = "".concat(this._textSize, "px"), e1.innerHTML = "ABCjgq|", (s = document.createElement("div")).style.display = "inline-block", s.style.width = "1px", s.style.height = "0px", o = ((t = document.createElement("div")).appendChild(e1), t.appendChild(s), t.style.height = "0px", t.style.overflow = "hidden", document.body.appendChild(t), s.style.verticalAlign = "baseline", h(s)), n = h(e1), r = o[1] - n[1], o = (s.style.verticalAlign = "bottom", h(s)), n = h(e1), s = o[1] - n[1] - r, document.body.removeChild(t), this._setProperty("_textAscent", r), this._setProperty("_textDescent", s)), this;
                            }
                        }
                    ], u(t.prototype, e1), r && u(t, r), s;
                }(a.default.Element);
                function h(e1) {
                    var t = 0, r = 0;
                    if (e1.offsetParent) for(; t += e1.offsetLeft, r += e1.offsetTop, e1 = e1.offsetParent;);
                    else t += e1.offsetLeft, r += e1.offsetTop;
                    return [
                        t,
                        r
                    ];
                }
                s.prototype.textSize = function(e1) {
                    return "number" == typeof e1 ? (this._setProperty("_textSize", e1), this._leadingSet || this._setProperty("_textLeading", e1 * A._DEFAULT_LEADMULT), this._applyTextProperties()) : this._textSize;
                }, a.default.Renderer = s;
                e1 = a.default.Renderer;
                r.default = e1;
            },
            {
                "../core/constants": 262,
                "./main": 273,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.number.constructor": 171,
                "core-js/modules/es.object.assign": 174,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.get-prototype-of": 178,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.reflect.construct": 182,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.replace": 194,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/es.string.trim": 199,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        277: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.function.name"), e1("core-js/modules/es.number.to-fixed"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.reflect.get"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.function.name"), e1("core-js/modules/es.number.to-fixed"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.reflect.get"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var d = (n = e1("./main")) && n.__esModule ? n : {
                    default: n
                }, p = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== a(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = i();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("./constants"));
                function i() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, i = function() {
                        return e1;
                    }, e1);
                }
                function a(e1) {
                    return (a = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                function s(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                function l(e1, t, r) {
                    return (l = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e1, t, r) {
                        var e1 = function(e1, t) {
                            for(; !Object.prototype.hasOwnProperty.call(e1, t) && null !== (e1 = f(e1)););
                            return e1;
                        }(e1, t);
                        if (e1) return (e1 = Object.getOwnPropertyDescriptor(e1, t)).get ? e1.get.call(r) : e1.value;
                    })(e1, t, r || e1);
                }
                function u(e1, t) {
                    return (u = Object.setPrototypeOf || function(e1, t) {
                        return e1.__proto__ = t, e1;
                    })(e1, t);
                }
                function c(r) {
                    return function() {
                        var e1, t = f(r), t = (e1 = function() {
                            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                                if ("function" == typeof Proxy) return 1;
                                try {
                                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), 1;
                                } catch (e1) {}
                            }
                        }() ? (e1 = f(this).constructor, Reflect.construct(t, arguments, e1)) : t.apply(this, arguments), this);
                        if (!e1 || "object" !== a(e1) && "function" != typeof e1) {
                            if (void 0 !== t) return t;
                            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        }
                        return e1;
                    };
                }
                function f(e1) {
                    return (f = Object.setPrototypeOf ? Object.getPrototypeOf : function(e1) {
                        return e1.__proto__ || Object.getPrototypeOf(e1);
                    })(e1);
                }
                e1("./p5.Renderer");
                var h = "rgba(0,0,0,0)", n = function(e1) {
                    var t = n;
                    if ("function" != typeof e1 && null !== e1) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e1 && e1.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e1 && u(t, e1);
                    var r, o = c(n);
                    function n(e1, t, r) {
                        if (this instanceof n) return (e1 = o.call(this, e1, t, r)).drawingContext = e1.canvas.getContext("2d"), e1._pInst._setProperty("drawingContext", e1.drawingContext), e1;
                        throw new TypeError("Cannot call a class as a function");
                    }
                    return t = n, e1 = [
                        {
                            key: "_applyDefaults",
                            value: function() {
                                this._cachedFillStyle = this._cachedStrokeStyle = void 0, this._cachedBlendMode = p.BLEND, this._setFill(p._DEFAULT_FILL), this._setStroke(p._DEFAULT_STROKE), this.drawingContext.lineCap = p.ROUND, this.drawingContext.font = "normal 12px sans-serif";
                            }
                        },
                        {
                            key: "resize",
                            value: function(e1, t) {
                                l(f(n.prototype), "resize", this).call(this, e1, t), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity);
                            }
                        },
                        {
                            key: "background",
                            value: function() {
                                var e1, t;
                                this.drawingContext.save(), this.resetMatrix(), (arguments.length <= 0 ? void 0 : arguments[0]) instanceof d.default.Image ? 0 <= (arguments.length <= 1 ? void 0 : arguments[1]) ? (e1 = arguments.length <= 0 ? void 0 : arguments[0], this.drawingContext.globalAlpha = (arguments.length <= 1 ? void 0 : arguments[1]) / 255, this._pInst.image(e1, 0, 0, this.width, this.height)) : this._pInst.image(arguments.length <= 0 ? void 0 : arguments[0], 0, 0, this.width, this.height) : (e1 = this._getFill(), t = (t = this._pInst).color.apply(t, arguments), this._pInst._addAccsOutput() && this._pInst._accsBackground(t.levels), t = t.toString(), this._setFill(t), this._isErasing && this.blendMode(this._cachedBlendMode), this.drawingContext.fillRect(0, 0, this.width, this.height), this._setFill(e1), this._isErasing && this._pInst.erase()), this.drawingContext.restore();
                            }
                        },
                        {
                            key: "clear",
                            value: function() {
                                this.drawingContext.save(), this.resetMatrix(), this.drawingContext.clearRect(0, 0, this.width, this.height), this.drawingContext.restore();
                            }
                        },
                        {
                            key: "fill",
                            value: function() {
                                var e1 = (e1 = this._pInst).color.apply(e1, arguments);
                                this._setFill(e1.toString()), this._pInst._addAccsOutput() && this._pInst._accsCanvasColors("fill", e1.levels);
                            }
                        },
                        {
                            key: "stroke",
                            value: function() {
                                var e1 = (e1 = this._pInst).color.apply(e1, arguments);
                                this._setStroke(e1.toString()), this._pInst._addAccsOutput() && this._pInst._accsCanvasColors("stroke", e1.levels);
                            }
                        },
                        {
                            key: "erase",
                            value: function(e1, t) {
                                this._isErasing || (this._cachedFillStyle = this.drawingContext.fillStyle, e1 = this._pInst.color(255, e1).toString(), this.drawingContext.fillStyle = e1, this._cachedStrokeStyle = this.drawingContext.strokeStyle, e1 = this._pInst.color(255, t).toString(), this.drawingContext.strokeStyle = e1, t = this._cachedBlendMode, this.blendMode(p.REMOVE), this._cachedBlendMode = t, this._isErasing = !0);
                            }
                        },
                        {
                            key: "noErase",
                            value: function() {
                                this._isErasing && (this.drawingContext.fillStyle = this._cachedFillStyle, this.drawingContext.strokeStyle = this._cachedStrokeStyle, this.blendMode(this._cachedBlendMode), this._isErasing = !1);
                            }
                        },
                        {
                            key: "image",
                            value: function(e1, t, r, o, n, s, i, a, l) {
                                e1.gifProperties && e1._animateGif(this._pInst);
                                try {
                                    d.default.MediaElement && e1 instanceof d.default.MediaElement && e1._ensureCanvas();
                                    var u = (u = this._tint && e1.canvas ? this._getTintedImageCanvas(e1) : u) || e1.canvas || e1.elt, c = 1;
                                    e1.width && 0 < e1.width && (c = u.width / e1.width), this._isErasing && this.blendMode(this._cachedBlendMode), this.drawingContext.drawImage(u, c * t, c * r, c * o, c * n, s, i, a, l), this._isErasing && this._pInst.erase();
                                } catch (e1) {
                                    if ("NS_ERROR_NOT_AVAILABLE" !== e1.name) throw e1;
                                }
                            }
                        },
                        {
                            key: "_getTintedImageCanvas",
                            value: function(e1) {
                                if (!e1.canvas) return e1;
                                e1.tintCanvas || (e1.tintCanvas = document.createElement("canvas")), e1.tintCanvas.width !== e1.canvas.width && (e1.tintCanvas.width = e1.canvas.width), e1.tintCanvas.height !== e1.canvas.height && (e1.tintCanvas.height = e1.canvas.height);
                                var t = e1.tintCanvas.getContext("2d");
                                return t.save(), t.clearRect(0, 0, e1.canvas.width, e1.canvas.height), (this._tint[0] < 255 || this._tint[1] < 255 || this._tint[2] < 255) && (t.drawImage(e1.canvas, 0, 0), t.globalCompositeOperation = "luminosity", t.drawImage(e1.canvas, 0, 0), t.globalCompositeOperation = "color", t.drawImage(e1.canvas, 0, 0), t.globalCompositeOperation = "multiply", t.fillStyle = "rgb(".concat(this._tint.slice(0, 3).join(", "), ")"), t.fillRect(0, 0, e1.canvas.width, e1.canvas.height), t.globalCompositeOperation = "destination-in"), t.globalAlpha = this._tint[3] / 255, t.drawImage(e1.canvas, 0, 0), t.restore(), e1.tintCanvas;
                            }
                        },
                        {
                            key: "blendMode",
                            value: function(e1) {
                                if (e1 === p.SUBTRACT) console.warn("blendMode(SUBTRACT) only works in WEBGL mode.");
                                else {
                                    if (e1 !== p.BLEND && e1 !== p.REMOVE && e1 !== p.DARKEST && e1 !== p.LIGHTEST && e1 !== p.DIFFERENCE && e1 !== p.MULTIPLY && e1 !== p.EXCLUSION && e1 !== p.SCREEN && e1 !== p.REPLACE && e1 !== p.OVERLAY && e1 !== p.HARD_LIGHT && e1 !== p.SOFT_LIGHT && e1 !== p.DODGE && e1 !== p.BURN && e1 !== p.ADD) throw new Error("Mode ".concat(e1, " not recognized."));
                                    this._cachedBlendMode = e1, this.drawingContext.globalCompositeOperation = e1;
                                }
                            }
                        },
                        {
                            key: "blend",
                            value: function() {
                                for(var e1 = this.drawingContext.globalCompositeOperation, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                                var n = r[r.length - 1], s = Array.prototype.slice.call(r, 0, r.length - 1);
                                this.drawingContext.globalCompositeOperation = n, d.default.prototype.copy.apply(this, s), this.drawingContext.globalCompositeOperation = e1;
                            }
                        },
                        {
                            key: "_getPixel",
                            value: function(e1, t) {
                                e1 = this.drawingContext.getImageData(e1, t, 1, 1).data;
                                return [
                                    e1[0],
                                    e1[1],
                                    e1[2],
                                    e1[3]
                                ];
                            }
                        },
                        {
                            key: "loadPixels",
                            value: function() {
                                var e1 = this._pixelsState, t = e1._pixelDensity, r = this.width * t, t = this.height * t, r = this.drawingContext.getImageData(0, 0, r, t);
                                e1._setProperty("imageData", r), e1._setProperty("pixels", r.data);
                            }
                        },
                        {
                            key: "set",
                            value: function(e1, t, r) {
                                e1 = Math.floor(e1), t = Math.floor(t);
                                var o = this._pixelsState;
                                if (r instanceof d.default.Image) this.drawingContext.save(), this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(o._pixelDensity, o._pixelDensity), this.drawingContext.clearRect(e1, t, r.width, r.height), this.drawingContext.drawImage(r.canvas, e1, t), this.drawingContext.restore();
                                else {
                                    var n = 0, s = 0, i = 0, a = 0, l = 4 * (t * o._pixelDensity * (this.width * o._pixelDensity) + e1 * o._pixelDensity);
                                    if (o.imageData || o.loadPixels.call(o), "number" == typeof r) l < o.pixels.length && (i = s = n = r, a = 255);
                                    else if (r instanceof Array) {
                                        if (r.length < 4) throw new Error("pixel array must be of the form [R, G, B, A]");
                                        l < o.pixels.length && (n = r[0], s = r[1], i = r[2], a = r[3]);
                                    } else r instanceof d.default.Color && l < o.pixels.length && (n = r.levels[0], s = r.levels[1], i = r.levels[2], a = r.levels[3]);
                                    for(var u = 0; u < o._pixelDensity; u++)for(var c = 0; c < o._pixelDensity; c++)l = 4 * ((t * o._pixelDensity + c) * this.width * o._pixelDensity + (e1 * o._pixelDensity + u)), o.pixels[l] = n, o.pixels[l + 1] = s, o.pixels[l + 2] = i, o.pixels[l + 3] = a;
                                }
                            }
                        },
                        {
                            key: "updatePixels",
                            value: function(e1, t, r, o) {
                                var n = this._pixelsState, s = n._pixelDensity;
                                void 0 === e1 && void 0 === t && void 0 === r && void 0 === o && (t = e1 = 0, r = this.width, o = this.height), e1 *= s, t *= s, r *= s, o *= s, this.gifProperties && (this.gifProperties.frames[this.gifProperties.displayIndex].image = n.imageData), this.drawingContext.putImageData(n.imageData, e1, t, 0, 0, r, o);
                            }
                        },
                        {
                            key: "_acuteArcToBezier",
                            value: function(e1, t) {
                                var r = t / 2, o = Math.cos(r), n = Math.sin(r), s = 1 / Math.tan(r), r = e1 + r, i = Math.cos(r), r = Math.sin(r), a = (4 - o) / 3, n = n + (o - a) * s;
                                return {
                                    ax: Math.cos(e1).toFixed(7),
                                    ay: Math.sin(e1).toFixed(7),
                                    bx: (a * i + n * r).toFixed(7),
                                    by: (a * r - n * i).toFixed(7),
                                    cx: (a * i - n * r).toFixed(7),
                                    cy: (a * r + n * i).toFixed(7),
                                    dx: Math.cos(e1 + t).toFixed(7),
                                    dy: Math.sin(e1 + t).toFixed(7)
                                };
                            }
                        },
                        {
                            key: "arc",
                            value: function(r, o, e1, t, n, s, i) {
                                var a, l = this.drawingContext, u = e1 / 2, c = t / 2, d = [];
                                for(r += u, o += c; 1e-5 <= s - n;)a = Math.min(s - n, p.HALF_PI), d.push(this._acuteArcToBezier(n, a)), n += a;
                                return this._doFill && (l.beginPath(), d.forEach(function(e1, t) {
                                    0 === t && l.moveTo(r + e1.ax * u, o + e1.ay * c), l.bezierCurveTo(r + e1.bx * u, o + e1.by * c, r + e1.cx * u, o + e1.cy * c, r + e1.dx * u, o + e1.dy * c);
                                }), i !== p.PIE && null != i || l.lineTo(r, o), l.closePath(), l.fill()), this._doStroke && (l.beginPath(), d.forEach(function(e1, t) {
                                    0 === t && l.moveTo(r + e1.ax * u, o + e1.ay * c), l.bezierCurveTo(r + e1.bx * u, o + e1.by * c, r + e1.cx * u, o + e1.cy * c, r + e1.dx * u, o + e1.dy * c);
                                }), i === p.PIE ? (l.lineTo(r, o), l.closePath()) : i === p.CHORD && l.closePath(), l.stroke()), this;
                            }
                        },
                        {
                            key: "ellipse",
                            value: function(e1) {
                                var t = this.drawingContext, r = this._doFill, o = this._doStroke, n = parseFloat(e1[0]), s = parseFloat(e1[1]), i = parseFloat(e1[2]), e1 = parseFloat(e1[3]);
                                if (r && !o) {
                                    if (this._getFill() === h) return this;
                                } else if (!r && o && this._getStroke() === h) return this;
                                var a = i / 2 * .5522847498, l = e1 / 2 * .5522847498, u = n + i, c = s + e1, i = n + i / 2, e1 = s + e1 / 2;
                                t.beginPath(), t.moveTo(n, e1), t.bezierCurveTo(n, e1 - l, i - a, s, i, s), t.bezierCurveTo(i + a, s, u, e1 - l, u, e1), t.bezierCurveTo(u, e1 + l, i + a, c, i, c), t.bezierCurveTo(i - a, c, n, e1 + l, n, e1), r && t.fill(), o && t.stroke();
                            }
                        },
                        {
                            key: "line",
                            value: function(e1, t, r, o) {
                                var n = this.drawingContext;
                                return this._doStroke && this._getStroke() !== h && (n.beginPath(), n.moveTo(e1, t), n.lineTo(r, o), n.stroke()), this;
                            }
                        },
                        {
                            key: "point",
                            value: function(e1, t) {
                                var r, o, n = this.drawingContext;
                                return !this._doStroke || this._getStroke() === h ? this : (r = this._getStroke(), o = this._getFill(), this._setFill(r), n.beginPath(), n.arc(e1, t, n.lineWidth / 2, 0, p.TWO_PI, !1), n.fill(), void this._setFill(o));
                            }
                        },
                        {
                            key: "quad",
                            value: function(e1, t, r, o, n, s, i, a) {
                                var l = this.drawingContext, u = this._doFill, c = this._doStroke;
                                if (u && !c) {
                                    if (this._getFill() === h) return this;
                                } else if (!u && c && this._getStroke() === h) return this;
                                return l.beginPath(), l.moveTo(e1, t), l.lineTo(r, o), l.lineTo(n, s), l.lineTo(i, a), l.closePath(), u && l.fill(), c && l.stroke(), this;
                            }
                        },
                        {
                            key: "rect",
                            value: function(e1) {
                                var t, r, o = e1[0], n = e1[1], s = e1[2], i = e1[3], a = e1[4], l = e1[5], u = e1[6], e1 = e1[7], c = this.drawingContext, d = this._doFill, f = this._doStroke;
                                if (d && !f) {
                                    if (this._getFill() === h) return this;
                                } else if (!d && f && this._getStroke() === h) return this;
                                return c.beginPath(), void 0 === a ? c.rect(o, n, s, i) : (void 0 === l && (l = a), void 0 === u && (u = l), void 0 === e1 && (e1 = u), f = (d = Math.abs(s)) / 2, r = (t = Math.abs(i)) / 2, t < 2 * (a = d < 2 * a ? f : a) && (a = r), t < 2 * (l = d < 2 * l ? f : l) && (l = r), t < 2 * (u = d < 2 * u ? f : u) && (u = r), t < 2 * (e1 = d < 2 * e1 ? f : e1) && (e1 = r), c.beginPath(), c.moveTo(o + a, n), c.arcTo(o + s, n, o + s, n + i, l), c.arcTo(o + s, n + i, o, n + i, u), c.arcTo(o, n + i, o, n, e1), c.arcTo(o, n, o + s, n, a), c.closePath()), this._doFill && c.fill(), this._doStroke && c.stroke(), this;
                            }
                        },
                        {
                            key: "triangle",
                            value: function(e1) {
                                var t = this.drawingContext, r = this._doFill, o = this._doStroke, n = e1[0], s = e1[1], i = e1[2], a = e1[3], l = e1[4], e1 = e1[5];
                                if (r && !o) {
                                    if (this._getFill() === h) return this;
                                } else if (!r && o && this._getStroke() === h) return this;
                                t.beginPath(), t.moveTo(n, s), t.lineTo(i, a), t.lineTo(l, e1), t.closePath(), r && t.fill(), o && t.stroke();
                            }
                        },
                        {
                            key: "endShape",
                            value: function(e1, t, r, o, n, s, i) {
                                if (0 !== t.length && (this._doStroke || this._doFill)) {
                                    var a, l, u, c = e1 === p.CLOSE, d = (c && !s && t.push(t[0]), t.length);
                                    if (!r || i !== p.POLYGON && null !== i) {
                                        if (!o || i !== p.POLYGON && null !== i) {
                                            if (!n || i !== p.POLYGON && null !== i) {
                                                if (i === p.POINTS) for(l = 0; l < d; l++)a = t[l], this._doStroke && this._pInst.stroke(a[6]), this._pInst.point(a[0], a[1]);
                                                else if (i === p.LINES) for(l = 0; l + 1 < d; l += 2)a = t[l], this._doStroke && this._pInst.stroke(t[l + 1][6]), this._pInst.line(a[0], a[1], t[l + 1][0], t[l + 1][1]);
                                                else if (i === p.TRIANGLES) for(l = 0; l + 2 < d; l += 3)a = t[l], this.drawingContext.beginPath(), this.drawingContext.moveTo(a[0], a[1]), this.drawingContext.lineTo(t[l + 1][0], t[l + 1][1]), this.drawingContext.lineTo(t[l + 2][0], t[l + 2][1]), this.drawingContext.closePath(), this._doFill && (this._pInst.fill(t[l + 2][5]), this.drawingContext.fill()), this._doStroke && (this._pInst.stroke(t[l + 2][6]), this.drawingContext.stroke());
                                                else if (i === p.TRIANGLE_STRIP) for(l = 0; l + 1 < d; l++)a = t[l], this.drawingContext.beginPath(), this.drawingContext.moveTo(t[l + 1][0], t[l + 1][1]), this.drawingContext.lineTo(a[0], a[1]), this._doStroke && this._pInst.stroke(t[l + 1][6]), this._doFill && this._pInst.fill(t[l + 1][5]), l + 2 < d && (this.drawingContext.lineTo(t[l + 2][0], t[l + 2][1]), this._doStroke && this._pInst.stroke(t[l + 2][6]), this._doFill && this._pInst.fill(t[l + 2][5])), this._doFillStrokeClose(c);
                                                else if (i === p.TRIANGLE_FAN) {
                                                    if (2 < d) {
                                                        for(this.drawingContext.beginPath(), l = 2; l < d; l++)a = t[l], this.drawingContext.moveTo(t[0][0], t[0][1]), this.drawingContext.lineTo(t[l - 1][0], t[l - 1][1]), this.drawingContext.lineTo(a[0], a[1]), this.drawingContext.lineTo(t[0][0], t[0][1]), l < d - 1 && (this._doFill && a[5] !== t[l + 1][5] || this._doStroke && a[6] !== t[l + 1][6]) && (this._doFill && (this._pInst.fill(a[5]), this.drawingContext.fill(), this._pInst.fill(t[l + 1][5])), this._doStroke && (this._pInst.stroke(a[6]), this.drawingContext.stroke(), this._pInst.stroke(t[l + 1][6])), this.drawingContext.closePath(), this.drawingContext.beginPath());
                                                        this._doFillStrokeClose(c);
                                                    }
                                                } else if (i === p.QUADS) for(l = 0; l + 3 < d; l += 4){
                                                    for(a = t[l], this.drawingContext.beginPath(), this.drawingContext.moveTo(a[0], a[1]), u = 1; u < 4; u++)this.drawingContext.lineTo(t[l + u][0], t[l + u][1]);
                                                    this.drawingContext.lineTo(a[0], a[1]), this._doFill && this._pInst.fill(t[l + 3][5]), this._doStroke && this._pInst.stroke(t[l + 3][6]), this._doFillStrokeClose(c);
                                                }
                                                else if (i === p.QUAD_STRIP) {
                                                    if (3 < d) for(l = 0; l + 1 < d; l += 2)a = t[l], this.drawingContext.beginPath(), l + 3 < d ? (this.drawingContext.moveTo(t[l + 2][0], t[l + 2][1]), this.drawingContext.lineTo(a[0], a[1]), this.drawingContext.lineTo(t[l + 1][0], t[l + 1][1]), this.drawingContext.lineTo(t[l + 3][0], t[l + 3][1]), this._doFill && this._pInst.fill(t[l + 3][5]), this._doStroke && this._pInst.stroke(t[l + 3][6])) : (this.drawingContext.moveTo(a[0], a[1]), this.drawingContext.lineTo(t[l + 1][0], t[l + 1][1])), this._doFillStrokeClose(c);
                                                } else {
                                                    for(this.drawingContext.beginPath(), this.drawingContext.moveTo(t[0][0], t[0][1]), l = 1; l < d; l++)(a = t[l]).isVert && (a.moveTo ? this.drawingContext.moveTo(a[0], a[1]) : this.drawingContext.lineTo(a[0], a[1]));
                                                    this._doFillStrokeClose(c);
                                                }
                                            } else {
                                                for(this.drawingContext.beginPath(), l = 0; l < d; l++)t[l].isVert ? t[l].moveTo ? this.drawingContext.moveTo(t[l][0], t[l][1]) : this.drawingContext.lineTo(t[l][0], t[l][1]) : this.drawingContext.quadraticCurveTo(t[l][0], t[l][1], t[l][2], t[l][3]);
                                                this._doFillStrokeClose(c);
                                            }
                                        } else {
                                            for(this.drawingContext.beginPath(), l = 0; l < d; l++)t[l].isVert ? t[l].moveTo ? this.drawingContext.moveTo(t[l][0], t[l][1]) : this.drawingContext.lineTo(t[l][0], t[l][1]) : this.drawingContext.bezierCurveTo(t[l][0], t[l][1], t[l][2], t[l][3], t[l][4], t[l][5]);
                                            this._doFillStrokeClose(c);
                                        }
                                    } else if (3 < d) {
                                        var f = [], h = 1 - this._curveTightness;
                                        for(this.drawingContext.beginPath(), this.drawingContext.moveTo(t[1][0], t[1][1]), l = 1; l + 2 < d; l++)a = t[l], f[0] = [
                                            a[0],
                                            a[1]
                                        ], f[1] = [
                                            a[0] + (h * t[l + 1][0] - h * t[l - 1][0]) / 6,
                                            a[1] + (h * t[l + 1][1] - h * t[l - 1][1]) / 6
                                        ], f[2] = [
                                            t[l + 1][0] + (h * t[l][0] - h * t[l + 2][0]) / 6,
                                            t[l + 1][1] + (h * t[l][1] - h * t[l + 2][1]) / 6
                                        ], f[3] = [
                                            t[l + 1][0],
                                            t[l + 1][1]
                                        ], this.drawingContext.bezierCurveTo(f[1][0], f[1][1], f[2][0], f[2][1], f[3][0], f[3][1]);
                                        c && this.drawingContext.lineTo(t[l + 1][0], t[l + 1][1]), this._doFillStrokeClose(c);
                                    }
                                    s = n = o = r = !1, c && t.pop();
                                }
                                return this;
                            }
                        },
                        {
                            key: "strokeCap",
                            value: function(e1) {
                                return e1 !== p.ROUND && e1 !== p.SQUARE && e1 !== p.PROJECT || (this.drawingContext.lineCap = e1), this;
                            }
                        },
                        {
                            key: "strokeJoin",
                            value: function(e1) {
                                return e1 !== p.ROUND && e1 !== p.BEVEL && e1 !== p.MITER || (this.drawingContext.lineJoin = e1), this;
                            }
                        },
                        {
                            key: "strokeWeight",
                            value: function(e1) {
                                return this.drawingContext.lineWidth = void 0 === e1 || 0 === e1 ? 1e-4 : e1, this;
                            }
                        },
                        {
                            key: "_getFill",
                            value: function() {
                                return this._cachedFillStyle || (this._cachedFillStyle = this.drawingContext.fillStyle), this._cachedFillStyle;
                            }
                        },
                        {
                            key: "_setFill",
                            value: function(e1) {
                                e1 !== this._cachedFillStyle && (this.drawingContext.fillStyle = e1, this._cachedFillStyle = e1);
                            }
                        },
                        {
                            key: "_getStroke",
                            value: function() {
                                return this._cachedStrokeStyle || (this._cachedStrokeStyle = this.drawingContext.strokeStyle), this._cachedStrokeStyle;
                            }
                        },
                        {
                            key: "_setStroke",
                            value: function(e1) {
                                e1 !== this._cachedStrokeStyle && (this.drawingContext.strokeStyle = e1, this._cachedStrokeStyle = e1);
                            }
                        },
                        {
                            key: "bezier",
                            value: function(e1, t, r, o, n, s, i, a) {
                                return this._pInst.beginShape(), this._pInst.vertex(e1, t), this._pInst.bezierVertex(r, o, n, s, i, a), this._pInst.endShape(), this;
                            }
                        },
                        {
                            key: "curve",
                            value: function(e1, t, r, o, n, s, i, a) {
                                return this._pInst.beginShape(), this._pInst.curveVertex(e1, t), this._pInst.curveVertex(r, o), this._pInst.curveVertex(n, s), this._pInst.curveVertex(i, a), this._pInst.endShape(), this;
                            }
                        },
                        {
                            key: "_doFillStrokeClose",
                            value: function(e1) {
                                e1 && this.drawingContext.closePath(), this._doFill && this.drawingContext.fill(), this._doStroke && this.drawingContext.stroke();
                            }
                        },
                        {
                            key: "applyMatrix",
                            value: function(e1, t, r, o, n, s) {
                                this.drawingContext.transform(e1, t, r, o, n, s);
                            }
                        },
                        {
                            key: "resetMatrix",
                            value: function() {
                                return this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), this;
                            }
                        },
                        {
                            key: "rotate",
                            value: function(e1) {
                                this.drawingContext.rotate(e1);
                            }
                        },
                        {
                            key: "scale",
                            value: function(e1, t) {
                                return this.drawingContext.scale(e1, t), this;
                            }
                        },
                        {
                            key: "translate",
                            value: function(e1, t) {
                                return e1 instanceof d.default.Vector && (t = e1.y, e1 = e1.x), this.drawingContext.translate(e1, t), this;
                            }
                        },
                        {
                            key: "_renderText",
                            value: function(e1, t, r, o, n, s) {
                                if (!(o < s || n <= o)) return e1.push(), this._isOpenType() ? this._textFont._renderPath(t, r, o, {
                                    renderer: this
                                }) : (this._doStroke && this._strokeSet && this.drawingContext.strokeText(t, r, o), this._doFill && (this._fillSet || this._setFill(p._DEFAULT_TEXT_FILL), this.drawingContext.fillText(t, r, o))), e1.pop(), e1;
                            }
                        },
                        {
                            key: "textWidth",
                            value: function(e1) {
                                return this._isOpenType() ? this._textFont._textWidth(e1, this._textSize) : this.drawingContext.measureText(e1).width;
                            }
                        },
                        {
                            key: "_applyTextProperties",
                            value: function() {
                                var e1, t = this._pInst;
                                return this._setProperty("_textAscent", null), this._setProperty("_textDescent", null), e1 = this._textFont, this._isOpenType() && (e1 = this._textFont.font.familyName, this._setProperty("_textStyle", this._textFont.font.styleName)), this.drawingContext.font = "".concat(this._textStyle || "normal", " ").concat(this._textSize || 12, "px ").concat(e1 || "sans-serif"), this.drawingContext.textAlign = this._textAlign, this._textBaseline === p.CENTER ? this.drawingContext.textBaseline = p._CTX_MIDDLE : this.drawingContext.textBaseline = this._textBaseline, t;
                            }
                        },
                        {
                            key: "push",
                            value: function() {
                                return this.drawingContext.save(), l(f(n.prototype), "push", this).call(this);
                            }
                        },
                        {
                            key: "pop",
                            value: function(e1) {
                                this.drawingContext.restore(), this._cachedFillStyle = this.drawingContext.fillStyle, this._cachedStrokeStyle = this.drawingContext.strokeStyle, l(f(n.prototype), "pop", this).call(this, e1);
                            }
                        }
                    ], s(t.prototype, e1), r && s(t, r), n;
                }(d.default.Renderer), e1 = (n.prototype.text = function(e1, t, r, o, n) {
                    void 0 !== o && this.drawingContext.textBaseline === p.BASELINE && (s = !0, this.drawingContext.textBaseline = p.TOP);
                    var s, o = d.default.Renderer.prototype.text.apply(this, arguments);
                    return s && (this.drawingContext.textBaseline = p.BASELINE), o;
                }, d.default.Renderer2D = n, d.default.Renderer2D);
                r.default = e1;
            },
            {
                "./constants": 262,
                "./main": 273,
                "./p5.Renderer": 276,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.fill": 154,
                "core-js/modules/es.array.for-each": 156,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.join": 161,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.function.name": 167,
                "core-js/modules/es.number.to-fixed": 173,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.get-prototype-of": 178,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.reflect.construct": 182,
                "core-js/modules/es.reflect.get": 183,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        278: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.assign"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.promise"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.assign"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.promise"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator");
                var f = (e1 = e1("./main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                f.default.prototype._promisePreloads = [];
                function o() {
                    return {};
                }
                var h = (f.default.prototype.registerPromisePreload = function(e1) {
                    f.default.prototype._promisePreloads.push(e1);
                }, false);
                f.default.prototype._setupPromisePreloads = function() {
                    var e1 = !0, t = !1, r = void 0;
                    try {
                        for(var o, n = this._promisePreloads[Symbol.iterator](); !(e1 = (o = n.next()).done); e1 = !0){
                            var s = o.value, i = this, a = s.method, l = s.addCallbacks, u = s.legacyPreloadSetup, c = s.target || this, d = c[a].bind(c);
                            if (c === f.default.prototype) {
                                if (h) continue;
                                i = null, d = c[a];
                            }
                            c[a] = this._wrapPromisePreload(i, d, l), u && (c[u.method] = this._legacyPreloadGenerator(i, u, c[a]));
                        }
                    } catch (e1) {
                        t = !0, r = e1;
                    } finally{
                        try {
                            e1 || null == n.return || n.return();
                        } finally{
                            if (t) throw r;
                        }
                    }
                    h = !0;
                }, f.default.prototype._wrapPromisePreload = function(e1, l, u) {
                    var t = function() {
                        for(var e1 = this, t = (this._incrementPreload(), null), r = null, o = arguments.length, n = new Array(o), s = 0; s < o; s++)n[s] = arguments[s];
                        if (u) for(var i = n.length - 1; 0 <= i && !r && "function" == typeof n[i]; i--)r = t, t = n.pop();
                        var a = Promise.resolve(l.apply(this, n));
                        return t && a.then(t), r && a.catch(r), a.then(function() {
                            return e1._decrementPreload();
                        }), a;
                    };
                    return t = e1 ? t.bind(e1) : t;
                };
                f.default.prototype._legacyPreloadGenerator = function(e1, t, s) {
                    var i = t.createBaseObject || o, t = function() {
                        var t = this;
                        this._incrementPreload();
                        for(var e1 = arguments.length, r = new Array(e1), o = 0; o < e1; o++)r[o] = arguments[o];
                        var n = i.apply(this, r);
                        return s.apply(this, r).then(function(e1) {
                            Object.assign(n, e1), t._decrementPreload();
                        }), n;
                    };
                    return t = e1 ? t.bind(e1) : t;
                };
            },
            {
                "./main": 273,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.assign": 174,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.promise": 181,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        279: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l = (n = e1("./main")) && n.__esModule ? n : {
                    default: n
                }, u = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== a(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = i();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("./constants"));
                function i() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, i = function() {
                        return e1;
                    }, e1);
                }
                function a(e1) {
                    return (a = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("./p5.Graphics"), e1("./p5.Renderer2D"), e1("../webgl/p5.RendererGL");
                var c = "defaultCanvas0", n = (l.default.prototype.createCanvas = function(e1, t, r, o) {
                    var n, s, i;
                    if (l.default._validateParameters("createCanvas", arguments), arguments[2] instanceof HTMLCanvasElement ? (r = u.P2D, o = arguments[2]) : n = r || u.P2D, o) (i = document.getElementById(c)) && i.parentNode.removeChild(i), i = o, this._defaultGraphicsCreated = !1;
                    else {
                        if (n === u.WEBGL) (i = document.getElementById(c)) && (i.parentNode.removeChild(i), s = this._renderer, this._elements = this._elements.filter(function(e1) {
                            return e1 !== s;
                        })), (i = document.createElement("canvas")).id = c, i.classList.add("p5Canvas");
                        else if (this._defaultGraphicsCreated) i = this.canvas;
                        else {
                            i = o || document.createElement("canvas");
                            for(var a = 0; document.getElementById("defaultCanvas".concat(a));)a++;
                            c = "defaultCanvas".concat(a), i.id = c, i.classList.add("p5Canvas");
                        }
                        this._setupDone || (i.dataset.hidden = !0, i.style.visibility = "hidden"), (this._userNode || (0 === document.getElementsByTagName("main").length && (r = document.createElement("main"), document.body.appendChild(r)), document.getElementsByTagName("main")[0])).appendChild(i);
                    }
                    return n === u.WEBGL ? (this._setProperty("_renderer", new l.default.RendererGL(i, this, !0)), this._elements.push(this._renderer)) : this._defaultGraphicsCreated || (this._setProperty("_renderer", new l.default.Renderer2D(i, this, !0)), this._defaultGraphicsCreated = !0, this._elements.push(this._renderer)), this._renderer.resize(e1, t), this._renderer._applyDefaults(), this._renderer;
                }, l.default.prototype.resizeCanvas = function(e1, t, r) {
                    if (l.default._validateParameters("resizeCanvas", arguments), this._renderer) {
                        var o, n, s = {};
                        for(o in this.drawingContext){
                            var i = this.drawingContext[o];
                            "object" !== a(i) && "function" != typeof i && (s[o] = i);
                        }
                        for(n in this.width = e1, this.height = t, this._renderer.resize(e1, t), s)try {
                            this.drawingContext[n] = s[n];
                        } catch (e1) {}
                        r || this.redraw();
                    }
                    this._addAccsOutput() && this._updateAccsOutput();
                }, l.default.prototype.noCanvas = function() {
                    this.canvas && this.canvas.parentNode.removeChild(this.canvas);
                }, l.default.prototype.createGraphics = function(e1, t, r, o) {
                    return arguments[2] instanceof HTMLCanvasElement && (r = u.P2D, o = arguments[2]), l.default._validateParameters("createGraphics", arguments), new l.default.Graphics(e1, t, r, this, o);
                }, l.default.prototype.createFramebuffer = function(e1) {
                    return new l.default.Framebuffer(this, e1);
                }, l.default.prototype.blendMode = function(e1) {
                    l.default._validateParameters("blendMode", arguments), e1 === u.NORMAL && (console.warn("NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead."), e1 = u.BLEND), this._renderer.blendMode(e1);
                }, l.default);
                r.default = n;
            },
            {
                "../webgl/p5.RendererGL": 328,
                "./constants": 262,
                "./main": 273,
                "./p5.Graphics": 275,
                "./p5.Renderer2D": 277,
                "core-js/modules/es.array.filter": 155,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        280: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l = n(e1("../main")), a = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = c();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../constants")), u = n(e1("../helpers"));
                function c() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, c = function() {
                        return e1;
                    }, e1);
                }
                function n(e1) {
                    return e1 && e1.__esModule ? e1 : {
                        default: e1
                    };
                }
                function s(e1) {
                    return function(e1) {
                        if (Array.isArray(e1)) {
                            for(var t = 0, r = new Array(e1.length); t < e1.length; t++)r[t] = e1[t];
                            return r;
                        }
                    }(e1) || function(e1) {
                        if (Symbol.iterator in Object(e1) || "[object Arguments]" === Object.prototype.toString.call(e1)) return Array.from(e1);
                    }(e1) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                e1("../friendly_errors/fes_core"), e1("../friendly_errors/file_errors"), e1("../friendly_errors/validate_params"), l.default.prototype._normalizeArcAngles = function(e1, t, r, o, n) {
                    var s;
                    return e1 -= a.TWO_PI * Math.floor(e1 / a.TWO_PI), t -= a.TWO_PI * Math.floor(t / a.TWO_PI), s = Math.min(Math.abs(e1 - t), a.TWO_PI - Math.abs(e1 - t)), n && (e1 = e1 <= a.HALF_PI ? Math.atan(r / o * Math.tan(e1)) : e1 > a.HALF_PI && e1 <= 3 * a.HALF_PI ? Math.atan(r / o * Math.tan(e1)) + a.PI : Math.atan(r / o * Math.tan(e1)) + a.TWO_PI, t = t <= a.HALF_PI ? Math.atan(r / o * Math.tan(t)) : t > a.HALF_PI && t <= 3 * a.HALF_PI ? Math.atan(r / o * Math.tan(t)) + a.PI : Math.atan(r / o * Math.tan(t)) + a.TWO_PI), t < e1 && (t += a.TWO_PI), {
                        start: e1,
                        stop: t,
                        correspondToSamePoint: s < 1e-5
                    };
                }, l.default.prototype.arc = function(e1, t, r, o, n, s, i, a) {
                    return l.default._validateParameters("arc", arguments), (this._renderer._doStroke || this._renderer._doFill) && n !== s && (n = this._toRadians(n), s = this._toRadians(s), r = Math.abs(r), o = Math.abs(o), e1 = u.default.modeAdjust(e1, t, r, o, this._renderer._ellipseMode), (t = this._normalizeArcAngles(n, s, e1.w, e1.h, !0)).correspondToSamePoint ? this._renderer.ellipse([
                        e1.x,
                        e1.y,
                        e1.w,
                        e1.h,
                        a
                    ]) : (this._renderer.arc(e1.x, e1.y, e1.w, e1.h, t.start, t.stop, i, a), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("arc", [
                        e1.x,
                        e1.y,
                        e1.w,
                        e1.h,
                        t.start,
                        t.stop,
                        i
                    ]))), this;
                }, l.default.prototype.ellipse = function(e1, t, r, o, n) {
                    return l.default._validateParameters("ellipse", arguments), this._renderEllipse.apply(this, arguments);
                }, l.default.prototype.circle = function() {
                    l.default._validateParameters("circle", arguments);
                    var e1 = Array.prototype.slice.call(arguments, 0, 2);
                    return e1.push(arguments[2]), e1.push(arguments[2]), this._renderEllipse.apply(this, s(e1));
                }, l.default.prototype._renderEllipse = function(e1, t, r, o, n) {
                    return (this._renderer._doStroke || this._renderer._doFill) && (r < 0 && (r = Math.abs(r)), void 0 === o ? o = r : o < 0 && (o = Math.abs(o)), e1 = u.default.modeAdjust(e1, t, r, o, this._renderer._ellipseMode), this._renderer.ellipse([
                        e1.x,
                        e1.y,
                        e1.w,
                        e1.h,
                        n
                    ]), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("ellipse", [
                        e1.x,
                        e1.y,
                        e1.w,
                        e1.h
                    ])), this;
                }, l.default.prototype.line = function() {
                    for(var e1, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return l.default._validateParameters("line", r), this._renderer._doStroke && (e1 = this._renderer).line.apply(e1, r), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("line", r), this;
                }, l.default.prototype.point = function() {
                    for(var e1, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return l.default._validateParameters("point", r), this._renderer._doStroke && (1 === r.length && r[0] instanceof l.default.Vector ? this._renderer.point.call(this._renderer, r[0].x, r[0].y, r[0].z) : ((e1 = this._renderer).point.apply(e1, r), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("point", r))), this;
                }, l.default.prototype.quad = function() {
                    for(var e1, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return l.default._validateParameters("quad", r), (this._renderer._doStroke || this._renderer._doFill) && (this._renderer.isP3D && r.length < 12 ? this._renderer.quad.call(this._renderer, r[0], r[1], 0, r[2], r[3], 0, r[4], r[5], 0, r[6], r[7], 0, r[8], r[9]) : ((e1 = this._renderer).quad.apply(e1, r), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("quadrilateral", r))), this;
                }, l.default.prototype.rect = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    return l.default._validateParameters("rect", t), this._renderRect.apply(this, t);
                }, l.default.prototype.square = function(e1, t, r, o, n, s, i) {
                    return l.default._validateParameters("square", arguments), this._renderRect.call(this, e1, t, r, r, o, n, s, i);
                }, l.default.prototype._renderRect = function() {
                    if (this._renderer._doStroke || this._renderer._doFill) {
                        3 === arguments.length && (arguments[3] = arguments[2]);
                        for(var e1 = u.default.modeAdjust(arguments[0], arguments[1], arguments[2], arguments[3], this._renderer._rectMode), t = [
                            e1.x,
                            e1.y,
                            e1.w,
                            e1.h
                        ], r = 4; r < arguments.length; r++)t[r] = arguments[r];
                        this._renderer.rect(t), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("rectangle", [
                            e1.x,
                            e1.y,
                            e1.w,
                            e1.h
                        ]);
                    }
                    return this;
                }, l.default.prototype.triangle = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    return l.default._validateParameters("triangle", t), (this._renderer._doStroke || this._renderer._doFill) && this._renderer.triangle(t), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("triangle", t), this;
                };
                e1 = l.default;
                r.default = e1;
            },
            {
                "../constants": 262,
                "../friendly_errors/fes_core": 264,
                "../friendly_errors/file_errors": 265,
                "../friendly_errors/validate_params": 268,
                "../helpers": 269,
                "../main": 273,
                "core-js/modules/es.array.from": 157,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        281: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (l = e1("../main")) && l.__esModule ? l : {
                    default: l
                }, s = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../constants"));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                n.default.prototype.ellipseMode = function(e1) {
                    return n.default._validateParameters("ellipseMode", arguments), e1 !== s.CORNER && e1 !== s.CORNERS && e1 !== s.RADIUS && e1 !== s.CENTER || (this._renderer._ellipseMode = e1), this;
                }, n.default.prototype.noSmooth = function() {
                    return this._renderer.isP3D ? this.setAttributes("antialias", !1) : "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = !1), this;
                }, n.default.prototype.rectMode = function(e1) {
                    return n.default._validateParameters("rectMode", arguments), e1 !== s.CORNER && e1 !== s.CORNERS && e1 !== s.RADIUS && e1 !== s.CENTER || (this._renderer._rectMode = e1), this;
                }, n.default.prototype.smooth = function() {
                    return this.setAttributes("antialias", !0), this._renderer.isP3D || "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = !0), this;
                }, n.default.prototype.strokeCap = function(e1) {
                    return n.default._validateParameters("strokeCap", arguments), e1 !== s.ROUND && e1 !== s.SQUARE && e1 !== s.PROJECT || this._renderer.strokeCap(e1), this;
                }, n.default.prototype.strokeJoin = function(e1) {
                    return n.default._validateParameters("strokeJoin", arguments), e1 !== s.ROUND && e1 !== s.BEVEL && e1 !== s.MITER || this._renderer.strokeJoin(e1), this;
                }, n.default.prototype.strokeWeight = function(e1) {
                    return n.default._validateParameters("strokeWeight", arguments), this._renderer.strokeWeight(e1), this;
                };
                var l = n.default;
                r.default = l;
            },
            {
                "../constants": 262,
                "../main": 273,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        282: [
            function(e1, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l = (o = e1("../main")) && o.__esModule ? o : {
                    default: o
                };
                e1("../friendly_errors/fes_core"), e1("../friendly_errors/file_errors"), e1("../friendly_errors/validate_params"), l.default.prototype.bezier = function() {
                    for(var e1, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return l.default._validateParameters("bezier", r), (this._renderer._doStroke || this._renderer._doFill) && (e1 = this._renderer).bezier.apply(e1, r), this;
                }, l.default.prototype.bezierDetail = function(e1) {
                    return l.default._validateParameters("bezierDetail", arguments), this._bezierDetail = e1, this;
                }, l.default.prototype.bezierPoint = function(e1, t, r, o, n) {
                    l.default._validateParameters("bezierPoint", arguments);
                    var s = 1 - n;
                    return Math.pow(s, 3) * e1 + 3 * Math.pow(s, 2) * n * t + 3 * s * Math.pow(n, 2) * r + Math.pow(n, 3) * o;
                }, l.default.prototype.bezierTangent = function(e1, t, r, o, n) {
                    l.default._validateParameters("bezierTangent", arguments);
                    var s = 1 - n;
                    return 3 * o * Math.pow(n, 2) - 3 * r * Math.pow(n, 2) + 6 * r * s * n - 6 * t * s * n + 3 * t * Math.pow(s, 2) - 3 * e1 * Math.pow(s, 2);
                }, l.default.prototype.curve = function() {
                    for(var e1, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return l.default._validateParameters("curve", r), this._renderer._doStroke && (e1 = this._renderer).curve.apply(e1, r), this;
                }, l.default.prototype.curveDetail = function(e1) {
                    return l.default._validateParameters("curveDetail", arguments), this._curveDetail = e1 < 3 ? 3 : e1, this;
                }, l.default.prototype.curveTightness = function(e1) {
                    return l.default._validateParameters("curveTightness", arguments), this._renderer._curveTightness = e1, this;
                }, l.default.prototype.curvePoint = function(e1, t, r, o, n) {
                    l.default._validateParameters("curvePoint", arguments);
                    var s = this._renderer._curveTightness, i = n * n * n, a = n * n;
                    return e1 * ((s - 1) / 2 * i + (1 - s) * a + (s - 1) / 2 * n) + t * ((s + 3) / 2 * i + (-5 - s) / 2 * a + 1) + r * ((-3 - s) / 2 * i + (s + 2) * a + (1 - s) / 2 * n) + o * ((1 - s) / 2 * i + (s - 1) / 2 * a);
                }, l.default.prototype.curveTangent = function(e1, t, r, o, n) {
                    l.default._validateParameters("curveTangent", arguments);
                    var s = this._renderer._curveTightness, i = n * n * 3, n = 2 * n;
                    return e1 * ((s - 1) / 2 * i + (1 - s) * n + (s - 1) / 2) + t * ((s + 3) / 2 * i + (-5 - s) / 2 * n) + r * ((-3 - s) / 2 * i + (s + 2) * n + (1 - s) / 2) + o * ((1 - s) / 2 * i + (s - 1) / 2 * n);
                };
                var o = l.default;
                r.default = o;
            },
            {
                "../friendly_errors/fes_core": 264,
                "../friendly_errors/file_errors": 265,
                "../friendly_errors/validate_params": 268,
                "../main": 273
            }
        ],
        283: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.array.slice"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = (y = e1("../main")) && y.__esModule ? y : {
                    default: y
                }, l = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = u();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../constants"));
                function u() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, u = function() {
                        return e1;
                    }, e1);
                }
                var n = null, c = [], d = [], f = !1, s = !1, h = !1, p = !1, m = !0, y = (a.default.prototype.beginContour = function() {
                    return d = [], p = !0, this;
                }, a.default.prototype.beginShape = function(e1) {
                    var t;
                    return a.default._validateParameters("beginShape", arguments), this._renderer.isP3D ? (t = this._renderer).beginShape.apply(t, arguments) : (n = e1 === l.POINTS || e1 === l.LINES || e1 === l.TRIANGLES || e1 === l.TRIANGLE_FAN || e1 === l.TRIANGLE_STRIP || e1 === l.QUADS || e1 === l.QUAD_STRIP ? e1 : null, c = [], d = []), this;
                }, a.default.prototype.bezierVertex = function() {
                    for(var e1, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    if (a.default._validateParameters("bezierVertex", r), this._renderer.isP3D) (e1 = this._renderer).bezierVertex.apply(e1, r);
                    else if (0 === c.length) a.default._friendlyError("vertex() must be used once before calling bezierVertex()", "bezierVertex");
                    else {
                        f = !0;
                        for(var n = [], s = 0; s < r.length; s++)n[s] = r[s];
                        n.isVert = !1, (p ? d : c).push(n);
                    }
                    return this;
                }, a.default.prototype.curveVertex = function() {
                    for(var e1, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return a.default._validateParameters("curveVertex", r), this._renderer.isP3D ? (e1 = this._renderer).curveVertex.apply(e1, r) : (s = !0, this.vertex(r[0], r[1])), this;
                }, a.default.prototype.endContour = function() {
                    var e1 = d[0].slice();
                    e1.isVert = d[0].isVert, e1.moveTo = !1, d.push(e1), m && (c.push(c[0]), m = !1);
                    for(var t = 0; t < d.length; t++)c.push(d[t]);
                    return this;
                }, a.default.prototype.endShape = function(e1) {
                    if (a.default._validateParameters("endShape", arguments), this._renderer.isP3D) this._renderer.endShape(e1, s, f, h, p, n);
                    else {
                        if (0 === c.length) return this;
                        if (!this._renderer._doStroke && !this._renderer._doFill) return this;
                        var t = e1 === l.CLOSE;
                        t && !p && c.push(c[0]), this._renderer.endShape(e1, c, s, f, h, p, n), m = (p = h = f = s = !1, true), t && c.pop();
                    }
                    return this;
                }, a.default.prototype.quadraticVertex = function() {
                    for(var e1, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    if (a.default._validateParameters("quadraticVertex", r), this._renderer.isP3D) (e1 = this._renderer).quadraticVertex.apply(e1, r);
                    else {
                        if (this._contourInited) return (e1 = {}).x = r[0], e1.y = r[1], e1.x3 = r[2], e1.y3 = r[3], e1.type = l.QUADRATIC, this._contourVertices.push(e1), this;
                        if (0 < c.length) {
                            h = !0;
                            for(var n = [], s = 0; s < r.length; s++)n[s] = r[s];
                            n.isVert = !1, (p ? d : c).push(n);
                        } else a.default._friendlyError("vertex() must be used once before calling quadraticVertex()", "quadraticVertex");
                    }
                    return this;
                }, a.default.prototype.vertex = function(e1, t, r, o, n) {
                    var s;
                    return this._renderer.isP3D ? (s = this._renderer).vertex.apply(s, arguments) : ((s = []).isVert = !0, s[0] = e1, s[1] = t, s[2] = 0, s[3] = 0, s[4] = 0, s[5] = this._renderer._getFill(), s[6] = this._renderer._getStroke(), r && (s.moveTo = r), (p ? (0 === d.length && (s.moveTo = !0), d) : c).push(s)), this;
                }, a.default.prototype.normal = function(e1, t, r) {
                    var o;
                    return this._assert3d("normal"), a.default._validateParameters("normal", arguments), (o = this._renderer).normal.apply(o, arguments), this;
                }, a.default);
                r.default = y;
            },
            {
                "../constants": 262,
                "../main": 273,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        284: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function a(e1) {
                    return function(e1) {
                        if (Array.isArray(e1)) {
                            for(var t = 0, r = new Array(e1.length); t < e1.length; t++)r[t] = e1[t];
                            return r;
                        }
                    }(e1) || function(e1) {
                        if (Symbol.iterator in Object(e1) || "[object Arguments]" === Object.prototype.toString.call(e1)) return Array.from(e1);
                    }(e1) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                function n(e1) {
                    return (n = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                var l, u, c;
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.assign"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.typed-array.uint8-clamped-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.assign"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.typed-array.uint8-clamped-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/web.dom-collections.iterator"), window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(e1, t) {
                    window.setTimeout(e1, 1e3 / 60);
                }, "undefined" == typeof Uint8ClampedArray || Uint8ClampedArray.prototype.slice || Object.defineProperty(Uint8ClampedArray.prototype, "slice", {
                    value: Array.prototype.slice,
                    writable: !0,
                    configurable: !0,
                    enumerable: !1
                }), Object.assign || (l = Object.keys, e1 = Object.defineProperty, u = "function" == typeof Symbol && "symbol" === n(Symbol()), c = Object.prototype.propertyIsEnumerable, e1(Object, "assign", {
                    value: function(e1, t) {
                        if (null == e1) throw new TypeError("target must be an object");
                        for(var r, o = Object(e1), n = 1; n < arguments.length; ++n){
                            var s = Object(arguments[n]), i = l(s);
                            for(u && Object.getOwnPropertySymbols && i.push.apply(i, a(Object.getOwnPropertySymbols(s).filter(function(t) {
                                return function(e1) {
                                    return c.call(t, e1);
                                };
                            }(s)))), r = 0; r < i.length; ++r)o[i[r]] = s[i[r]];
                        }
                        return o;
                    },
                    configurable: !0,
                    enumerable: !1,
                    writable: !0
                }));
            },
            {
                "core-js/modules/es.array.filter": 155,
                "core-js/modules/es.array.from": 157,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.object.assign": 174,
                "core-js/modules/es.object.keys": 179,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.typed-array.copy-within": 203,
                "core-js/modules/es.typed-array.every": 204,
                "core-js/modules/es.typed-array.fill": 205,
                "core-js/modules/es.typed-array.filter": 206,
                "core-js/modules/es.typed-array.find": 208,
                "core-js/modules/es.typed-array.find-index": 207,
                "core-js/modules/es.typed-array.for-each": 211,
                "core-js/modules/es.typed-array.includes": 212,
                "core-js/modules/es.typed-array.index-of": 213,
                "core-js/modules/es.typed-array.iterator": 216,
                "core-js/modules/es.typed-array.join": 217,
                "core-js/modules/es.typed-array.last-index-of": 218,
                "core-js/modules/es.typed-array.map": 219,
                "core-js/modules/es.typed-array.reduce": 221,
                "core-js/modules/es.typed-array.reduce-right": 220,
                "core-js/modules/es.typed-array.reverse": 222,
                "core-js/modules/es.typed-array.set": 223,
                "core-js/modules/es.typed-array.slice": 224,
                "core-js/modules/es.typed-array.some": 225,
                "core-js/modules/es.typed-array.sort": 226,
                "core-js/modules/es.typed-array.subarray": 227,
                "core-js/modules/es.typed-array.to-locale-string": 228,
                "core-js/modules/es.typed-array.to-string": 229,
                "core-js/modules/es.typed-array.uint8-clamped-array": 233,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        285: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.object.assign"), e1("core-js/modules/web.dom-collections.for-each"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.object.assign"), e1("core-js/modules/web.dom-collections.for-each"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e1 = (e1 = e1("./main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                e1.default.prototype.noLoop = function() {
                    this._loop = !1;
                }, e1.default.prototype.loop = function() {
                    this._loop || (this._loop = !0, this._setupDone && this._draw());
                }, e1.default.prototype.isLooping = function() {
                    return this._loop;
                }, e1.default.prototype.push = function() {
                    this._styles.push({
                        props: {
                            _colorMode: this._colorMode
                        },
                        renderer: this._renderer.push()
                    });
                }, e1.default.prototype.pop = function() {
                    var e1 = this._styles.pop();
                    e1 ? (this._renderer.pop(e1.renderer), Object.assign(this, e1.props)) : console.warn("pop() was called without matching push()");
                }, e1.default.prototype.redraw = function(e1) {
                    if (!this._inUserDraw && this._setupDone) {
                        var t = parseInt(e1), r = ((isNaN(t) || t < 1) && (t = 1), this._isGlobal ? window : this);
                        if ("function" == typeof r.draw) {
                            void 0 === r.setup && r.scale(r._pixelDensity, r._pixelDensity);
                            for(var o = function(e1) {
                                e1.call(r);
                            }, n = 0; n < t; n++){
                                r.resetMatrix(), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._updateAccsOutput(), r._renderer.isP3D && r._renderer._update(), r._setProperty("frameCount", r.frameCount + 1), r._registeredMethods.pre.forEach(o), this._inUserDraw = !0;
                                try {
                                    r.draw();
                                } finally{
                                    this._inUserDraw = !1;
                                }
                                r._registeredMethods.post.forEach(o);
                            }
                        }
                    }
                };
                e1 = e1.default;
                r.default = e1;
            },
            {
                "./main": 273,
                "core-js/modules/es.array.for-each": 156,
                "core-js/modules/es.object.assign": 174,
                "core-js/modules/web.dom-collections.for-each": 235
            }
        ],
        286: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (e1 = e1("./main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function o(e1) {
                    return function(e1) {
                        if (Array.isArray(e1)) {
                            for(var t = 0, r = new Array(e1.length); t < e1.length; t++)r[t] = e1[t];
                            return r;
                        }
                    }(e1) || function(e1) {
                        if (Symbol.iterator in Object(e1) || "[object Arguments]" === Object.prototype.toString.call(e1)) return Array.from(e1);
                    }(e1) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                n.default.prototype.applyMatrix = function() {
                    var e1 = (arguments.length <= 0 ? void 0 : arguments[0]) instanceof Object.getPrototypeOf(Uint8Array);
                    return Array.isArray(arguments.length <= 0 ? void 0 : arguments[0]) || e1 ? (e1 = this._renderer).applyMatrix.apply(e1, o(arguments.length <= 0 ? void 0 : arguments[0])) : (e1 = this._renderer).applyMatrix.apply(e1, arguments), this;
                }, n.default.prototype.resetMatrix = function() {
                    return this._renderer.resetMatrix(), this;
                }, n.default.prototype.rotate = function(e1, t) {
                    return n.default._validateParameters("rotate", arguments), this._renderer.rotate(this._toRadians(e1), t), this;
                }, n.default.prototype.rotateX = function(e1) {
                    return this._assert3d("rotateX"), n.default._validateParameters("rotateX", arguments), this._renderer.rotateX(this._toRadians(e1)), this;
                }, n.default.prototype.rotateY = function(e1) {
                    return this._assert3d("rotateY"), n.default._validateParameters("rotateY", arguments), this._renderer.rotateY(this._toRadians(e1)), this;
                }, n.default.prototype.rotateZ = function(e1) {
                    return this._assert3d("rotateZ"), n.default._validateParameters("rotateZ", arguments), this._renderer.rotateZ(this._toRadians(e1)), this;
                }, n.default.prototype.scale = function(e1, t, r) {
                    var o;
                    return n.default._validateParameters("scale", arguments), e1 instanceof n.default.Vector ? (e1 = (o = e1).x, t = o.y, r = o.z) : e1 instanceof Array && (e1 = (o = e1)[0], t = o[1], r = o[2] || 1), isNaN(t) ? t = r = e1 : isNaN(r) && (r = 1), this._renderer.scale.call(this._renderer, e1, t, r), this;
                }, n.default.prototype.shearX = function(e1) {
                    n.default._validateParameters("shearX", arguments);
                    e1 = this._toRadians(e1);
                    return this._renderer.applyMatrix(1, 0, Math.tan(e1), 1, 0, 0), this;
                }, n.default.prototype.shearY = function(e1) {
                    n.default._validateParameters("shearY", arguments);
                    e1 = this._toRadians(e1);
                    return this._renderer.applyMatrix(1, Math.tan(e1), 0, 1, 0, 0), this;
                }, n.default.prototype.translate = function(e1, t, r) {
                    return n.default._validateParameters("translate", arguments), this._renderer.isP3D ? this._renderer.translate(e1, t, r) : this._renderer.translate(e1, t), this;
                };
                e1 = n.default;
                r.default = e1;
            },
            {
                "./main": 273,
                "core-js/modules/es.array.from": 157,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.get-prototype-of": 178,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.typed-array.copy-within": 203,
                "core-js/modules/es.typed-array.every": 204,
                "core-js/modules/es.typed-array.fill": 205,
                "core-js/modules/es.typed-array.filter": 206,
                "core-js/modules/es.typed-array.find": 208,
                "core-js/modules/es.typed-array.find-index": 207,
                "core-js/modules/es.typed-array.for-each": 211,
                "core-js/modules/es.typed-array.includes": 212,
                "core-js/modules/es.typed-array.index-of": 213,
                "core-js/modules/es.typed-array.iterator": 216,
                "core-js/modules/es.typed-array.join": 217,
                "core-js/modules/es.typed-array.last-index-of": 218,
                "core-js/modules/es.typed-array.map": 219,
                "core-js/modules/es.typed-array.reduce": 221,
                "core-js/modules/es.typed-array.reduce-right": 220,
                "core-js/modules/es.typed-array.reverse": 222,
                "core-js/modules/es.typed-array.set": 223,
                "core-js/modules/es.typed-array.slice": 224,
                "core-js/modules/es.typed-array.some": 225,
                "core-js/modules/es.typed-array.sort": 226,
                "core-js/modules/es.typed-array.subarray": 227,
                "core-js/modules/es.typed-array.to-locale-string": 228,
                "core-js/modules/es.typed-array.to-string": 229,
                "core-js/modules/es.typed-array.uint8-array": 232,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        287: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.ends-with"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.ends-with"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator");
                var n = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function s(e1) {
                    return function(e1) {
                        if (Array.isArray(e1)) {
                            for(var t = 0, r = new Array(e1.length); t < e1.length; t++)r[t] = e1[t];
                            return r;
                        }
                    }(e1) || function(e1) {
                        if (Symbol.iterator in Object(e1) || "[object Arguments]" === Object.prototype.toString.call(e1)) return Array.from(e1);
                    }(e1) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                n.default.prototype.storeItem = function(e1, t) {
                    "string" != typeof e1 && console.log("The argument that you passed to storeItem() - ".concat(e1, " is not a string.")), e1.endsWith("p5TypeID") && console.log("The argument that you passed to storeItem() - ".concat(e1, " must not end with 'p5TypeID'.")), void 0 === t && console.log("You cannot store undefined variables using storeItem().");
                    var r = i(t);
                    switch(r){
                        case "number":
                        case "boolean":
                            t = t.toString();
                            break;
                        case "object":
                            t instanceof n.default.Color ? r = "p5.Color" : t instanceof n.default.Vector && (r = "p5.Vector", t = [
                                t.x,
                                t.y,
                                t.z
                            ]), t = JSON.stringify(t);
                    }
                    localStorage.setItem(e1, t);
                    e1 = "".concat(e1, "p5TypeID");
                    localStorage.setItem(e1, r);
                }, n.default.prototype.getItem = function(e1) {
                    var t = localStorage.getItem(e1), r = localStorage.getItem("".concat(e1, "p5TypeID"));
                    if (void 0 === r) console.log("Unable to determine type of item stored under ".concat(e1, "in local storage. Did you save the item with something other than setItem()?"));
                    else if (null !== t) switch(r){
                        case "number":
                            t = parseFloat(t);
                            break;
                        case "boolean":
                            t = "true" === t;
                            break;
                        case "object":
                            t = JSON.parse(t);
                            break;
                        case "p5.Color":
                            t = JSON.parse(t), t = this.color.apply(this, s(t.levels));
                            break;
                        case "p5.Vector":
                            t = JSON.parse(t), t = this.createVector.apply(this, s(t));
                    }
                    return t;
                }, n.default.prototype.clearStorage = function() {
                    localStorage.clear();
                }, n.default.prototype.removeItem = function(e1) {
                    "string" != typeof e1 && console.log("The argument that you passed to removeItem() - ".concat(e1, " is not a string.")), localStorage.removeItem(e1), localStorage.removeItem("".concat(e1, "p5TypeID"));
                };
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.from": 157,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.ends-with": 188,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        288: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function n(e1) {
                    return (n = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                function i(e1, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
                    e1.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && a(e1, t);
                }
                function a(e1, t) {
                    return (a = Object.setPrototypeOf || function(e1, t) {
                        return e1.__proto__ = t, e1;
                    })(e1, t);
                }
                function l(r) {
                    return function() {
                        var e1, t = u(r), t = (e1 = function() {
                            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                                if ("function" == typeof Proxy) return 1;
                                try {
                                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), 1;
                                } catch (e1) {}
                            }
                        }() ? (e1 = u(this).constructor, Reflect.construct(t, arguments, e1)) : t.apply(this, arguments), this);
                        if (!e1 || "object" !== n(e1) && "function" != typeof e1) {
                            if (void 0 !== t) return t;
                            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        }
                        return e1;
                    };
                }
                function u(e1) {
                    return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(e1) {
                        return e1.__proto__ || Object.getPrototypeOf(e1);
                    })(e1);
                }
                function c(e1, t) {
                    if (!(e1 instanceof t)) throw new TypeError("Cannot call a class as a function");
                }
                function d(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                function f(e1, t, r) {
                    t && d(e1.prototype, t), r && d(e1, r);
                }
                s.default.prototype.createStringDict = function(e1, t) {
                    return s.default._validateParameters("createStringDict", arguments), new s.default.StringDict(e1, t);
                }, s.default.prototype.createNumberDict = function(e1, t) {
                    return s.default._validateParameters("createNumberDict", arguments), new s.default.NumberDict(e1, t);
                }, s.default.TypedDict = function() {
                    function r(e1, t) {
                        return c(this, r), e1 instanceof Object ? this.data = e1 : (this.data = {}, this.data[e1] = t), this;
                    }
                    return f(r, [
                        {
                            key: "size",
                            value: function() {
                                return Object.keys(this.data).length;
                            }
                        },
                        {
                            key: "hasKey",
                            value: function(e1) {
                                return this.data.hasOwnProperty(e1);
                            }
                        },
                        {
                            key: "get",
                            value: function(e1) {
                                if (this.data.hasOwnProperty(e1)) return this.data[e1];
                                console.log("".concat(e1, " does not exist in this Dictionary"));
                            }
                        },
                        {
                            key: "set",
                            value: function(e1, t) {
                                this._validate(t) ? this.data[e1] = t : console.log("Those values dont work for this dictionary type.");
                            }
                        },
                        {
                            key: "_addObj",
                            value: function(e1) {
                                for(var t in e1)this.set(t, e1[t]);
                            }
                        },
                        {
                            key: "create",
                            value: function(e1, t) {
                                e1 instanceof Object && void 0 === t ? this._addObj(e1) : void 0 !== e1 ? this.set(e1, t) : console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair");
                            }
                        },
                        {
                            key: "clear",
                            value: function() {
                                this.data = {};
                            }
                        },
                        {
                            key: "remove",
                            value: function(e1) {
                                if (!this.data.hasOwnProperty(e1)) throw new Error("".concat(e1, " does not exist in this Dictionary"));
                                delete this.data[e1];
                            }
                        },
                        {
                            key: "print",
                            value: function() {
                                for(var e1 in this.data)console.log("key:".concat(e1, " value:").concat(this.data[e1]));
                            }
                        },
                        {
                            key: "saveTable",
                            value: function(e1) {
                                var t, r = "";
                                for(t in this.data)r += "".concat(t, ",").concat(this.data[t], "\n");
                                var o = new Blob([
                                    r
                                ], {
                                    type: "text/csv"
                                });
                                s.default.prototype.downloadFile(o, e1 || "mycsv", "csv");
                            }
                        },
                        {
                            key: "saveJSON",
                            value: function(e1, t) {
                                s.default.prototype.saveJSON(this.data, e1, t);
                            }
                        },
                        {
                            key: "_validate",
                            value: function(e1) {
                                return !0;
                            }
                        }
                    ]), r;
                }(), s.default.StringDict = function() {
                    i(n, s.default.TypedDict);
                    var o = l(n);
                    function n() {
                        c(this, n);
                        for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                        return o.call.apply(o, [
                            this
                        ].concat(t));
                    }
                    return f(n, [
                        {
                            key: "_validate",
                            value: function(e1) {
                                return "string" == typeof e1;
                            }
                        }
                    ]), n;
                }(), s.default.NumberDict = function() {
                    i(n, s.default.TypedDict);
                    var o = l(n);
                    function n() {
                        c(this, n);
                        for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                        return o.call.apply(o, [
                            this
                        ].concat(t));
                    }
                    return f(n, [
                        {
                            key: "_validate",
                            value: function(e1) {
                                return "number" == typeof e1;
                            }
                        },
                        {
                            key: "add",
                            value: function(e1, t) {
                                this.data.hasOwnProperty(e1) ? this.data[e1] += t : console.log("The key - ".concat(e1, " does not exist in this dictionary."));
                            }
                        },
                        {
                            key: "sub",
                            value: function(e1, t) {
                                this.add(e1, -t);
                            }
                        },
                        {
                            key: "mult",
                            value: function(e1, t) {
                                this.data.hasOwnProperty(e1) ? this.data[e1] *= t : console.log("The key - ".concat(e1, " does not exist in this dictionary."));
                            }
                        },
                        {
                            key: "div",
                            value: function(e1, t) {
                                this.data.hasOwnProperty(e1) ? this.data[e1] /= t : console.log("The key - ".concat(e1, " does not exist in this dictionary."));
                            }
                        },
                        {
                            key: "_valueTest",
                            value: function(e1) {
                                if (0 === Object.keys(this.data).length) throw new Error("Unable to search for a minimum or maximum value on an empty NumberDict");
                                if (1 === Object.keys(this.data).length) return this.data[Object.keys(this.data)[0]];
                                var t, r = this.data[Object.keys(this.data)[0]];
                                for(t in this.data)this.data[t] * e1 < r * e1 && (r = this.data[t]);
                                return r;
                            }
                        },
                        {
                            key: "minValue",
                            value: function() {
                                return this._valueTest(1);
                            }
                        },
                        {
                            key: "maxValue",
                            value: function() {
                                return this._valueTest(-1);
                            }
                        },
                        {
                            key: "_keyTest",
                            value: function(e1) {
                                if (0 === Object.keys(this.data).length) throw new Error("Unable to use minValue on an empty NumberDict");
                                if (1 === Object.keys(this.data).length) return Object.keys(this.data)[0];
                                for(var t = Object.keys(this.data)[0], r = 1; r < Object.keys(this.data).length; r++)Object.keys(this.data)[r] * e1 < t * e1 && (t = Object.keys(this.data)[r]);
                                return t;
                            }
                        },
                        {
                            key: "minKey",
                            value: function() {
                                return this._keyTest(1);
                            }
                        },
                        {
                            key: "maxKey",
                            value: function() {
                                return this._keyTest(-1);
                            }
                        }
                    ]), n;
                }();
                e1 = s.default.TypedDict;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.get-prototype-of": 178,
                "core-js/modules/es.object.keys": 179,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.reflect.construct": 182,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        289: [
            function(t, r, o) {
                "use strict";
                function n(e1) {
                    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                t("core-js/modules/es.symbol"), t("core-js/modules/es.symbol.description"), t("core-js/modules/es.symbol.iterator"), t("core-js/modules/es.array.every"), t("core-js/modules/es.array.filter"), t("core-js/modules/es.array.for-each"), t("core-js/modules/es.array.from"), t("core-js/modules/es.array.index-of"), t("core-js/modules/es.array.iterator"), t("core-js/modules/es.array.map"), t("core-js/modules/es.array.slice"), t("core-js/modules/es.array.splice"), t("core-js/modules/es.function.name"), t("core-js/modules/es.object.get-prototype-of"), t("core-js/modules/es.object.to-string"), t("core-js/modules/es.promise"), t("core-js/modules/es.reflect.construct"), t("core-js/modules/es.regexp.exec"), t("core-js/modules/es.regexp.to-string"), t("core-js/modules/es.string.iterator"), t("core-js/modules/es.string.replace"), t("core-js/modules/es.string.split"), t("core-js/modules/es.string.trim"), t("core-js/modules/web.dom-collections.for-each"), t("core-js/modules/web.dom-collections.iterator"), t("core-js/modules/web.url"), t("core-js/modules/es.symbol"), t("core-js/modules/es.symbol.description"), t("core-js/modules/es.symbol.iterator"), t("core-js/modules/es.array.every"), t("core-js/modules/es.array.filter"), t("core-js/modules/es.array.for-each"), t("core-js/modules/es.array.from"), t("core-js/modules/es.array.index-of"), t("core-js/modules/es.array.iterator"), t("core-js/modules/es.array.map"), t("core-js/modules/es.array.slice"), t("core-js/modules/es.array.splice"), t("core-js/modules/es.function.name"), t("core-js/modules/es.object.to-string"), t("core-js/modules/es.promise"), t("core-js/modules/es.reflect.construct"), t("core-js/modules/es.regexp.exec"), t("core-js/modules/es.regexp.to-string"), t("core-js/modules/es.string.iterator"), t("core-js/modules/es.string.replace"), t("core-js/modules/es.string.split"), t("core-js/modules/es.string.trim"), t("core-js/modules/web.dom-collections.for-each"), t("core-js/modules/web.dom-collections.iterator"), t("core-js/modules/web.url"), Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0;
                var h = (t = t("../core/main")) && t.__esModule ? t : {
                    default: t
                };
                function s(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                function a(e1, t, r) {
                    t && s(e1.prototype, t), r && s(e1, r);
                }
                function l(e1, t) {
                    return (l = Object.setPrototypeOf || function(e1, t) {
                        return e1.__proto__ = t, e1;
                    })(e1, t);
                }
                function u(o) {
                    return function() {
                        var e1, t, r = i(o);
                        return e1 = function() {
                            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                                if ("function" == typeof Proxy) return 1;
                                try {
                                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), 1;
                                } catch (e1) {}
                            }
                        }() ? (e1 = i(this).constructor, Reflect.construct(r, arguments, e1)) : r.apply(this, arguments), r = this, !(t = e1) || "object" !== f(t) && "function" != typeof t ? c(r) : t;
                    };
                }
                function c(e1) {
                    if (void 0 === e1) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return e1;
                }
                function i(e1) {
                    return (i = Object.setPrototypeOf ? Object.getPrototypeOf : function(e1) {
                        return e1.__proto__ || Object.getPrototypeOf(e1);
                    })(e1);
                }
                function d(e1, t) {
                    if (!(e1 instanceof t)) throw new TypeError("Cannot call a class as a function");
                }
                function f(e1) {
                    return (f = "function" == typeof Symbol && "symbol" === n(Symbol.iterator) ? function(e1) {
                        return n(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : n(e1);
                    })(e1);
                }
                function p(e1, t, r) {
                    (t._userNode || document.body).appendChild(e1);
                    r = new (r ? h.default.MediaElement : h.default.Element)(e1, t);
                    return t._elements.push(r), r;
                }
                function m(e1, t, r, o) {
                    var n = document.createElement(t), s = ("string" == typeof (r = r || "") && (r = [
                        r
                    ]), !0), t = !1, i = void 0;
                    try {
                        for(var a, l = r[Symbol.iterator](); !(s = (a = l.next()).done); s = !0){
                            var u = a.value, c = document.createElement("source");
                            c.setAttribute("src", u), n.appendChild(c);
                        }
                    } catch (e1) {
                        t = !0, i = e1;
                    } finally{
                        try {
                            s || null == l.return || l.return();
                        } finally{
                            if (t) throw i;
                        }
                    }
                    "function" == typeof o && n.addEventListener("canplaythrough", function e1() {
                        o(), n.removeEventListener("canplaythrough", e1);
                    });
                    var d = p(n, e1, !0);
                    return d.loadedmetadata = !1, n.addEventListener("loadedmetadata", function() {
                        d.width = n.videoWidth, d.height = n.videoHeight, 0 === d.elt.width && (d.elt.width = n.videoWidth), 0 === d.elt.height && (d.elt.height = n.videoHeight), d.presetPlaybackRate && (d.elt.playbackRate = d.presetPlaybackRate, delete d.presetPlaybackRate), d.loadedmetadata = !0;
                    }), d;
                }
                h.default.prototype.select = function(e1, t) {
                    h.default._validateParameters("select", arguments);
                    t = this._getContainer(t).querySelector(e1);
                    return t ? this._wrapElement(t) : null;
                }, h.default.prototype.selectAll = function(e1, t) {
                    h.default._validateParameters("selectAll", arguments);
                    var r = [], o = this._getContainer(t).querySelectorAll(e1);
                    if (o) for(var n = 0; n < o.length; n++){
                        var s = this._wrapElement(o[n]);
                        r.push(s);
                    }
                    return r;
                }, h.default.prototype._getContainer = function(e1) {
                    var t = document;
                    return "string" == typeof e1 ? t = document.querySelector(e1) || document : e1 instanceof h.default.Element ? t = e1.elt : e1 instanceof HTMLElement && (t = e1), t;
                }, h.default.prototype._wrapElement = function(e1) {
                    var t, r = Array.prototype.slice.call(e1.children);
                    return "INPUT" === e1.tagName && "checkbox" === e1.type ? ((t = new h.default.Element(e1, this)).checked = function() {
                        return 0 === arguments.length ? this.elt.checked : (this.elt.checked = !(arguments.length <= 0 || !arguments[0]), this);
                    }, t) : "VIDEO" === e1.tagName || "AUDIO" === e1.tagName ? new h.default.MediaElement(e1, this) : "SELECT" === e1.tagName ? this.createSelect(new h.default.Element(e1, this)) : 0 < r.length && r.every(function(e1) {
                        return "INPUT" === e1.tagName || "LABEL" === e1.tagName;
                    }) ? this.createRadio(new h.default.Element(e1, this)) : new h.default.Element(e1, this);
                }, h.default.prototype.removeElements = function(e1) {
                    h.default._validateParameters("removeElements", arguments);
                    this._elements.filter(function(e1) {
                        return !(e1.elt instanceof HTMLCanvasElement);
                    }).map(function(e1) {
                        return e1.remove();
                    });
                }, h.default.Element.prototype.changed = function(e1) {
                    return h.default.Element._adjustListener("change", e1, this), this;
                }, h.default.Element.prototype.input = function(e1) {
                    return h.default.Element._adjustListener("input", e1, this), this;
                }, h.default.prototype.createDiv = function() {
                    var e1 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t = document.createElement("div");
                    return t.innerHTML = e1, p(t, this);
                }, h.default.prototype.createP = function() {
                    var e1 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t = document.createElement("p");
                    return t.innerHTML = e1, p(t, this);
                }, h.default.prototype.createSpan = function() {
                    var e1 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t = document.createElement("span");
                    return t.innerHTML = e1, p(t, this);
                }, h.default.prototype.createImg = function() {
                    h.default._validateParameters("createImg", arguments);
                    var t, r = document.createElement("img"), o = arguments;
                    return 1 < o.length && "string" == typeof o[1] && (r.alt = o[1]), 2 < o.length && "string" == typeof o[2] && (r.crossOrigin = o[2]), r.src = o[0], t = p(r, this), r.addEventListener("load", function() {
                        t.width = r.offsetWidth || r.width, t.height = r.offsetHeight || r.height;
                        var e1 = o[o.length - 1];
                        "function" == typeof e1 && e1(t);
                    }), t;
                }, h.default.prototype.createA = function(e1, t, r) {
                    h.default._validateParameters("createA", arguments);
                    var o = document.createElement("a");
                    return o.href = e1, o.innerHTML = t, r && (o.target = r), p(o, this);
                }, h.default.prototype.createSlider = function(e1, t, r, o) {
                    h.default._validateParameters("createSlider", arguments);
                    var n = document.createElement("input");
                    return n.type = "range", n.min = e1, n.max = t, 0 === o ? n.step = 1e-18 : o && (n.step = o), "number" == typeof r && (n.value = r), p(n, this);
                }, h.default.prototype.createButton = function(e1, t) {
                    h.default._validateParameters("createButton", arguments);
                    var r = document.createElement("button");
                    return r.innerHTML = e1, t && (r.value = t), p(r, this);
                }, h.default.prototype.createCheckbox = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    h.default._validateParameters("createCheckbox", t);
                    var o = document.createElement("div"), n = document.createElement("input"), s = (n.type = "checkbox", document.createElement("label")), i = (s.appendChild(n), o.appendChild(s), p(o, this));
                    return i.checked = function() {
                        var e1 = i.elt.firstElementChild.getElementsByTagName("input")[0];
                        if (e1) {
                            if (0 === arguments.length) return e1.checked;
                            e1.checked = !(arguments.length <= 0 || !arguments[0]);
                        }
                        return i;
                    }, this.value = function(e1) {
                        return i.value = e1, this;
                    }, t[0] && (i.value(t[0]), (o = document.createElement("span")).innerHTML = t[0], s.appendChild(o)), t[1] && (n.checked = !0), i;
                }, h.default.prototype.createSelect = function() {
                    for(var e1, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    h.default._validateParameters("createSelect", r);
                    var n, s = r[0];
                    return s instanceof h.default.Element && s.elt instanceof HTMLSelectElement ? this.elt = (e1 = s).elt : s instanceof HTMLSelectElement ? (e1 = p(s, this), this.elt = s) : (n = document.createElement("select"), s && "boolean" == typeof s && n.setAttribute("multiple", "true"), e1 = p(n, this), this.elt = n), e1.option = function(e1, t) {
                        var r;
                        if (void 0 !== e1) {
                            for(var o, n = 0; n < this.elt.length; n += 1)if (this.elt[n].textContent === e1) {
                                r = n;
                                break;
                            }
                            void 0 !== r ? !1 === t ? this.elt.remove(r) : this.elt[r].value = t : ((o = document.createElement("option")).textContent = e1, o.value = void 0 === t ? e1 : t, this.elt.appendChild(o), this._pInst._elements.push(o));
                        }
                    }, e1.selected = function(e1) {
                        if (void 0 !== e1) {
                            for(var t = 0; t < this.elt.length; t += 1)this.elt[t].value.toString() === e1.toString() && (this.elt.selectedIndex = t);
                            return this;
                        }
                        if (this.elt.getAttribute("multiple")) {
                            var r = [], o = !0, n = !1, s = void 0;
                            try {
                                for(var i, a = this.elt.selectedOptions[Symbol.iterator](); !(o = (i = a.next()).done); o = !0){
                                    var l = i.value;
                                    r.push(l.value);
                                }
                            } catch (e1) {
                                n = !0, s = e1;
                            } finally{
                                try {
                                    o || null == a.return || a.return();
                                } finally{
                                    if (n) throw s;
                                }
                            }
                            return r;
                        }
                        return this.elt.value;
                    }, e1.disable = function(e1) {
                        if ("string" == typeof e1) for(var t = 0; t < this.elt.length; t++)this.elt[t].value.toString() === e1 && (this.elt[t].disabled = !0, this.elt[t].selected = !1);
                        else this.elt.disabled = !0;
                        return this;
                    }, e1.enable = function(e1) {
                        if ("string" == typeof e1) for(var t = 0; t < this.elt.length; t++)this.elt[t].value.toString() === e1 && (this.elt[t].disabled = !1, this.elt[t].selected = !1);
                        else {
                            this.elt.disabled = !1;
                            for(var r = 0; r < this.elt.length; r++)this.elt[r].disabled = !1, this.elt[r].selected = !1;
                        }
                        return this;
                    }, e1;
                }, h.default.prototype.createRadio = function() {
                    function t(e1) {
                        return e1 instanceof HTMLInputElement && "radio" === e1.type;
                    }
                    function d(e1) {
                        return e1 instanceof HTMLLabelElement;
                    }
                    var f, e1, r, o = arguments.length <= 0 ? void 0 : arguments[0];
                    o instanceof h.default.Element && (o.elt instanceof HTMLDivElement || o.elt instanceof HTMLSpanElement) ? (f = o, this.elt = o.elt) : o instanceof HTMLDivElement || o instanceof HTMLSpanElement ? (f = p(o, this), e1 = this.elt = o, "string" == typeof (arguments.length <= 1 ? void 0 : arguments[1]) && (r = arguments.length <= 1 ? void 0 : arguments[1])) : ("string" == typeof o && (r = o), e1 = document.createElement("div"), f = p(e1, this), this.elt = e1), f._name = r || "radioOption";
                    return f._getOptionsArray = function() {
                        return Array.from(this.elt.children).filter(function(e1) {
                            return t(e1) || d(e1) && t(e1.firstElementChild);
                        }).map(function(e1) {
                            return t(e1) ? e1 : e1.firstElementChild;
                        });
                    }, f.option = function(e1, t) {
                        var r, o, n, s = !0, i = !1, a = void 0;
                        try {
                            for(var l, u = f._getOptionsArray()[Symbol.iterator](); !(s = (l = u.next()).done); s = !0){
                                var c = l.value;
                                if (c.value === e1) {
                                    r = c;
                                    break;
                                }
                            }
                        } catch (e1) {
                            i = !0, a = e1;
                        } finally{
                            try {
                                s || null == u.return || u.return();
                            } finally{
                                if (i) throw a;
                            }
                        }
                        return void 0 === r && ((r = document.createElement("input")).setAttribute("type", "radio"), r.setAttribute("value", e1)), r.setAttribute("name", f._name), d(r.parentElement) ? o = r.parentElement : (o = document.createElement("label")).insertAdjacentElement("afterbegin", r), o.lastElementChild instanceof HTMLSpanElement ? n = o.lastElementChild : (n = document.createElement("span"), r.insertAdjacentElement("afterend", n)), n.innerHTML = void 0 === t ? e1 : t, this.elt.appendChild(o), r;
                    }, f.remove = function(e1) {
                        var t = !0, r = !1, o = void 0;
                        try {
                            for(var n, s = f._getOptionsArray()[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                                var i = n.value;
                                if (i.value === e1) return void (d(i.parentElement) ? i.parentElement : i).remove();
                            }
                        } catch (e1) {
                            r = !0, o = e1;
                        } finally{
                            try {
                                t || null == s.return || s.return();
                            } finally{
                                if (r) throw o;
                            }
                        }
                    }, f.value = function() {
                        var e1 = "", t = !0, r = !1, o = void 0;
                        try {
                            for(var n, s = f._getOptionsArray()[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                                var i = n.value;
                                if (i.checked) {
                                    e1 = i.value;
                                    break;
                                }
                            }
                        } catch (e1) {
                            r = !0, o = e1;
                        } finally{
                            try {
                                t || null == s.return || s.return();
                            } finally{
                                if (r) throw o;
                            }
                        }
                        return e1;
                    }, f.selected = function(e1) {
                        var t = null;
                        if (void 0 === e1) {
                            var r = !0, o = !1, n = void 0;
                            try {
                                for(var s, i = f._getOptionsArray()[Symbol.iterator](); !(r = (s = i.next()).done); r = !0){
                                    var a = s.value;
                                    if (a.checked) {
                                        t = a;
                                        break;
                                    }
                                }
                            } catch (e1) {
                                o = !0, n = e1;
                            } finally{
                                try {
                                    r || null == i.return || i.return();
                                } finally{
                                    if (o) throw n;
                                }
                            }
                        } else {
                            f._getOptionsArray().forEach(function(e1) {
                                e1.checked = !1, e1.removeAttribute("checked");
                            });
                            var l = !0, o = !1, n = void 0;
                            try {
                                for(var u, c = f._getOptionsArray()[Symbol.iterator](); !(l = (u = c.next()).done); l = !0){
                                    var d = u.value;
                                    d.value === e1 && (d.setAttribute("checked", !0), d.checked = !0, t = d);
                                }
                            } catch (e1) {
                                o = !0, n = e1;
                            } finally{
                                try {
                                    l || null == c.return || c.return();
                                } finally{
                                    if (o) throw n;
                                }
                            }
                        }
                        return t;
                    }, f.disable = function() {
                        var e1 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], t = !0, r = !1, o = void 0;
                        try {
                            for(var n, s = f._getOptionsArray()[Symbol.iterator](); !(t = (n = s.next()).done); t = !0)n.value.setAttribute("disabled", e1);
                        } catch (e1) {
                            r = !0, o = e1;
                        } finally{
                            try {
                                t || null == s.return || s.return();
                            } finally{
                                if (r) throw o;
                            }
                        }
                    }, f;
                }, h.default.prototype.createColorPicker = function(e1) {
                    h.default._validateParameters("createColorPicker", arguments);
                    var t = document.createElement("input");
                    return t.type = "color", e1 ? e1 instanceof h.default.Color ? t.value = e1.toString("#rrggbb") : (h.default.prototype._colorMode = "rgb", h.default.prototype._colorMaxes = {
                        rgb: [
                            255,
                            255,
                            255,
                            255
                        ],
                        hsb: [
                            360,
                            100,
                            100,
                            1
                        ],
                        hsl: [
                            360,
                            100,
                            100,
                            1
                        ]
                    }, t.value = h.default.prototype.color(e1).toString("#rrggbb")) : t.value = "#000000", (t = p(t, this)).color = function() {
                        return e1 && (e1.mode && (h.default.prototype._colorMode = e1.mode), e1.maxes && (h.default.prototype._colorMaxes = e1.maxes)), h.default.prototype.color(this.elt.value);
                    }, t;
                }, h.default.prototype.createInput = function() {
                    var e1 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "text", r = (h.default._validateParameters("createInput", arguments), document.createElement("input"));
                    return r.setAttribute("value", e1), r.setAttribute("type", t), p(r, this);
                }, h.default.prototype.createFileInput = function(a) {
                    var e1, t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
                    h.default._validateParameters("createFileInput", arguments);
                    if (window.File && window.FileReader && window.FileList && window.Blob) return (e1 = document.createElement("input")).setAttribute("type", "file"), t && e1.setAttribute("multiple", !0), e1.addEventListener("change", function(e1) {
                        var t = !0, r = !1, o = void 0;
                        try {
                            for(var n, s = e1.target.files[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                                var i = n.value;
                                h.default.File._load(i, a);
                            }
                        } catch (e1) {
                            r = !0, o = e1;
                        } finally{
                            try {
                                t || null == s.return || s.return();
                            } finally{
                                if (r) throw o;
                            }
                        }
                    }, !1), p(e1, this);
                    console.log("The File APIs are not fully supported in this browser. Cannot create element.");
                }, h.default.prototype.createVideo = function(e1, t) {
                    return h.default._validateParameters("createVideo", arguments), m(this, "video", e1, t);
                }, h.default.prototype.createAudio = function(e1, t) {
                    return h.default._validateParameters("createAudio", arguments), m(this, "audio", e1, t);
                }, h.default.prototype.VIDEO = "video", h.default.prototype.AUDIO = "audio", void 0 === navigator.mediaDevices && (navigator.mediaDevices = {}), void 0 === navigator.mediaDevices.getUserMedia && (navigator.mediaDevices.getUserMedia = function(r) {
                    var o = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
                    return o ? new Promise(function(e1, t) {
                        o.call(navigator, r, e1, t);
                    }) : Promise.reject(new Error("getUserMedia is not implemented in this browser"));
                }), h.default.prototype.createCapture = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    if (h.default._validateParameters("createCapture", t), !navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) throw new DOMException("getUserMedia not supported in this browser");
                    for(var o, n = !0, s = !0, i = 0, a = t; i < a.length; i++){
                        var l = a[i];
                        l === h.default.prototype.VIDEO ? s = !1 : l === h.default.prototype.AUDIO ? n = !1 : "object" === f(l) ? u = l : "function" == typeof l && (o = l);
                    }
                    var u = u || {
                        video: n,
                        audio: s
                    }, c = document.createElement("video"), d = (c.setAttribute("playsinline", ""), navigator.mediaDevices.getUserMedia(u).then(function(t) {
                        try {
                            "srcObject" in c ? c.srcObject = t : c.src = window.URL.createObjectURL(t);
                        } catch (e1) {
                            c.src = t;
                        }
                    }, console.log), p(c, this, !0));
                    return d.loadedmetadata = !1, c.addEventListener("loadedmetadata", function() {
                        c.play(), c.width ? (d.width = c.width, d.height = c.height) : (d.width = d.elt.width = c.videoWidth, d.height = d.elt.height = c.videoHeight), d.loadedmetadata = !0, o && o(c.srcObject);
                    }), d;
                }, h.default.prototype.createElement = function(e1, t) {
                    h.default._validateParameters("createElement", arguments);
                    e1 = document.createElement(e1);
                    return void 0 !== t && (e1.innerHTML = t), p(e1, this);
                }, h.default.Element.prototype.addClass = function(e1) {
                    return this.elt.className ? this.hasClass(e1) || (this.elt.className = this.elt.className + " " + e1) : this.elt.className = e1, this;
                }, h.default.Element.prototype.removeClass = function(e1) {
                    return this.elt.classList.remove(e1), this;
                }, h.default.Element.prototype.hasClass = function(e1) {
                    return this.elt.classList.contains(e1);
                }, h.default.Element.prototype.toggleClass = function(e1) {
                    return this.elt.classList.contains(e1) ? this.elt.classList.remove(e1) : this.elt.classList.add(e1), this;
                }, h.default.Element.prototype.child = function(e1) {
                    return void 0 === e1 ? this.elt.childNodes : ("string" == typeof e1 ? ("#" === e1[0] && (e1 = e1.substring(1)), e1 = document.getElementById(e1)) : e1 instanceof h.default.Element && (e1 = e1.elt), e1 instanceof HTMLElement && this.elt.appendChild(e1), this);
                }, h.default.Element.prototype.center = function(e1) {
                    var t = this.elt.style.display, r = "none" === this.elt.style.display, o = "none" === this.parent().style.display, n = {
                        x: this.elt.offsetLeft,
                        y: this.elt.offsetTop
                    }, s = (r && this.show(), o && this.parent().show(), this.elt.style.display = "block", this.position(0, 0), Math.abs(this.parent().offsetWidth - this.elt.offsetWidth)), i = Math.abs(this.parent().offsetHeight - this.elt.offsetHeight);
                    return "both" === e1 || void 0 === e1 ? this.position(s / 2 + this.parent().offsetLeft, i / 2 + this.parent().offsetTop) : "horizontal" === e1 ? this.position(s / 2 + this.parent().offsetLeft, n.y) : "vertical" === e1 && this.position(n.x, i / 2 + this.parent().offsetTop), this.style("display", t), r && this.hide(), o && this.parent().hide(), this;
                }, h.default.Element.prototype.html = function() {
                    return 0 === arguments.length ? this.elt.innerHTML : (arguments.length <= 1 || !arguments[1] ? this.elt.innerHTML = arguments.length <= 0 ? void 0 : arguments[0] : this.elt.insertAdjacentHTML("beforeend", arguments.length <= 0 ? void 0 : arguments[0]), this);
                }, h.default.Element.prototype.position = function() {
                    return 0 === arguments.length ? {
                        x: this.elt.offsetLeft,
                        y: this.elt.offsetTop
                    } : (this.elt.style.position = "static" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "fixed" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "relative" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "sticky" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "initial" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "inherit" !== (arguments.length <= 2 ? void 0 : arguments[2]) ? "absolute" : arguments.length <= 2 ? void 0 : arguments[2], this.elt.style.left = (arguments.length <= 0 ? void 0 : arguments[0]) + "px", this.elt.style.top = (arguments.length <= 1 ? void 0 : arguments[1]) + "px", this.x = arguments.length <= 0 ? void 0 : arguments[0], this.y = arguments.length <= 1 ? void 0 : arguments[1], this);
                }, h.default.Element.prototype._translate = function() {
                    this.elt.style.position = "absolute";
                    var e1 = "";
                    return this.elt.style.transform && (e1 = (e1 = this.elt.style.transform.replace(/translate3d\(.*\)/g, "")).replace(/translate[X-Z]?\(.*\)/g, "")), 2 === arguments.length ? this.elt.style.transform = "translate(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "px, " + (arguments.length <= 1 ? void 0 : arguments[1]) + "px)" : 2 < arguments.length && (this.elt.style.transform = "translate3d(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "px," + (arguments.length <= 1 ? void 0 : arguments[1]) + "px," + (arguments.length <= 2 ? void 0 : arguments[2]) + "px)", this.elt.parentElement.style.perspective = 3 === arguments.length ? "1000px" : (arguments.length <= 3 ? void 0 : arguments[3]) + "px"), this.elt.style.transform += e1, this;
                }, h.default.Element.prototype._rotate = function() {
                    var e1 = "";
                    return this.elt.style.transform && (e1 = (e1 = this.elt.style.transform.replace(/rotate3d\(.*\)/g, "")).replace(/rotate[X-Z]?\(.*\)/g, "")), 1 === arguments.length ? this.elt.style.transform = "rotate(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "deg)" : 2 === arguments.length ? this.elt.style.transform = "rotate(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "deg, " + (arguments.length <= 1 ? void 0 : arguments[1]) + "deg)" : 3 === arguments.length && (this.elt.style.transform = "rotateX(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "deg)", this.elt.style.transform += "rotateY(" + (arguments.length <= 1 ? void 0 : arguments[1]) + "deg)", this.elt.style.transform += "rotateZ(" + (arguments.length <= 2 ? void 0 : arguments[2]) + "deg)"), this.elt.style.transform += e1, this;
                }, h.default.Element.prototype.style = function(e1, t) {
                    if (void 0 === (t = t instanceof h.default.Color ? "rgba(" + t.levels[0] + "," + t.levels[1] + "," + t.levels[2] + "," + t.levels[3] / 255 + ")" : t)) {
                        if (-1 === e1.indexOf(":")) return window.getComputedStyle(this.elt).getPropertyValue(e1);
                        for(var r = e1.split(";"), o = 0; o < r.length; o++){
                            var n = r[o].split(":");
                            n[0] && n[1] && (this.elt.style[n[0].trim()] = n[1].trim());
                        }
                    } else this.elt.style[e1] = t, "width" !== e1 && "height" !== e1 && "left" !== e1 && "top" !== e1 || (t = window.getComputedStyle(this.elt).getPropertyValue(e1).replace(/[^\d.]/g, ""), this[e1] = Math.round(parseFloat(t, 10)));
                    return this;
                }, h.default.Element.prototype.attribute = function(e1, t) {
                    if (null == this.elt.firstChild || "checkbox" !== this.elt.firstChild.type && "radio" !== this.elt.firstChild.type) return void 0 === t ? this.elt.getAttribute(e1) : (this.elt.setAttribute(e1, t), this);
                    if (void 0 === t) return this.elt.firstChild.getAttribute(e1);
                    for(var r = 0; r < this.elt.childNodes.length; r++)this.elt.childNodes[r].setAttribute(e1, t);
                }, h.default.Element.prototype.removeAttribute = function(e1) {
                    if (null != this.elt.firstChild && ("checkbox" === this.elt.firstChild.type || "radio" === this.elt.firstChild.type)) for(var t = 0; t < this.elt.childNodes.length; t++)this.elt.childNodes[t].removeAttribute(e1);
                    return this.elt.removeAttribute(e1), this;
                }, h.default.Element.prototype.value = function() {
                    return 0 < arguments.length ? (this.elt.value = arguments.length <= 0 ? void 0 : arguments[0], this) : "range" === this.elt.type ? parseFloat(this.elt.value) : this.elt.value;
                }, h.default.Element.prototype.show = function() {
                    return this.elt.style.display = "block", this;
                }, h.default.Element.prototype.hide = function() {
                    return this.elt.style.display = "none", this;
                }, h.default.Element.prototype.size = function(e1, t) {
                    if (0 === arguments.length) return {
                        width: this.elt.offsetWidth,
                        height: this.elt.offsetHeight
                    };
                    var r = e1, o = t, n = h.default.prototype.AUTO;
                    if (r !== n || o !== n) {
                        if (r === n ? r = t * this.width / this.height : o === n && (o = e1 * this.height / this.width), this.elt instanceof HTMLCanvasElement) {
                            var s, i = {}, a = this.elt.getContext("2d");
                            for(s in a)i[s] = a[s];
                            for(s in this.elt.setAttribute("width", r * this._pInst._pixelDensity), this.elt.setAttribute("height", o * this._pInst._pixelDensity), this.elt.style.width = r + "px", this.elt.style.height = o + "px", this._pInst.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), i)this.elt.getContext("2d")[s] = i[s];
                        } else this.elt.style.width = r + "px", this.elt.style.height = o + "px", this.elt.width = r, this.elt.height = o;
                        this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight, this._pInst && this._pInst._curElement && this._pInst._curElement.elt === this.elt && (this._pInst._setProperty("width", this.elt.offsetWidth), this._pInst._setProperty("height", this.elt.offsetHeight));
                    }
                    return this;
                }, h.default.Element.prototype.remove = function() {
                    this instanceof h.default.MediaElement && (this.stop(), null !== (t = this.elt.srcObject) && t.getTracks().forEach(function(e1) {
                        e1.stop();
                    }));
                    var e1, t = this._pInst._elements.indexOf(this);
                    for(e1 in -1 !== t && this._pInst._elements.splice(t, 1), this._events)this.elt.removeEventListener(e1, this._events[e1]);
                    this.elt && this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
                }, h.default.Element.prototype.drop = function(a, l) {
                    var e1;
                    return window.File && window.FileReader && window.FileList && window.Blob ? (this._dragDisabled || (this._dragDisabled = !0, this.elt.addEventListener("dragover", e1 = function(e1) {
                        e1.preventDefault();
                    }), this.elt.addEventListener("dragleave", e1)), h.default.Element._attachListener("drop", function(e1) {
                        e1.preventDefault(), "function" == typeof l && l.call(this, e1);
                        var e1 = e1.dataTransfer.files, t = !0, r = !1, o = void 0;
                        try {
                            for(var n, s = e1[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                                var i = n.value;
                                h.default.File._load(i, a);
                            }
                        } catch (e1) {
                            r = !0, o = e1;
                        } finally{
                            try {
                                t || null == s.return || s.return();
                            } finally{
                                if (r) throw o;
                            }
                        }
                    }, this)) : console.log("The File APIs are not fully supported in this browser."), this;
                };
                function y(e1, t, r, o) {
                    d(this, y), this.callback = e1, this.time = t, this.id = r, this.val = o;
                }
                t = function(t) {
                    var r = i;
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
                    r.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: r,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && l(r, t);
                    var s = u(i);
                    function i(o, e1) {
                        d(this, i);
                        var n = c(e1 = s.call(this, o, e1));
                        return e1.elt.crossOrigin = "anonymous", e1._prevTime = 0, e1._cueIDCounter = 0, e1._cues = [], e1.pixels = [], e1._pixelsState = c(e1), e1._pixelDensity = 1, e1._modified = !1, e1._frameOnCanvas = -1, Object.defineProperty(n, "src", {
                            get: function() {
                                var e1 = n.elt.children[0].src, t = n.elt.src === window.location.href ? "" : n.elt.src;
                                return e1 === window.location.href ? t : e1;
                            },
                            set: function(e1) {
                                for(var t = 0; t < n.elt.children.length; t++)n.elt.removeChild(n.elt.children[t]);
                                var r = document.createElement("source");
                                r.src = e1, o.appendChild(r), n.elt.src = e1, n.modified = !0;
                            }
                        }), n._onended = function() {}, n.elt.onended = function() {
                            n._onended(n);
                        }, e1;
                    }
                    return a(i, [
                        {
                            key: "play",
                            value: function() {
                                var e1;
                                return this.elt.currentTime === this.elt.duration && (this.elt.currentTime = 0), 1 < this.elt.readyState || this.elt.load(), (e1 = this.elt.play()) && e1.catch && e1.catch(function(e1) {
                                    "NotAllowedError" === e1.name ? console.error(e1) : console.error("Media play method encountered an unexpected error", e1);
                                }), this;
                            }
                        },
                        {
                            key: "stop",
                            value: function() {
                                return this.elt.pause(), this.elt.currentTime = 0, this;
                            }
                        },
                        {
                            key: "pause",
                            value: function() {
                                return this.elt.pause(), this;
                            }
                        },
                        {
                            key: "loop",
                            value: function() {
                                return this.elt.setAttribute("loop", !0), this.play(), this;
                            }
                        },
                        {
                            key: "noLoop",
                            value: function() {
                                return this.elt.removeAttribute("loop"), this;
                            }
                        },
                        {
                            key: "_setupAutoplayFailDetection",
                            value: function() {
                                var t = setTimeout(function() {
                                    console.error(e);
                                }, 500);
                                this.elt.addEventListener("play", function() {
                                    return clearTimeout(t);
                                }, {
                                    passive: !0,
                                    once: !0
                                });
                            }
                        },
                        {
                            key: "autoplay",
                            value: function(e1) {
                                var t = this, r = this.elt.getAttribute("autoplay");
                                return this.elt.setAttribute("autoplay", e1), e1 && !r && (e1 = function() {
                                    return t._setupAutoplayFailDetection();
                                }, 4 === this.elt.readyState ? e1() : this.elt.addEventListener("canplay", e1, {
                                    passive: !0,
                                    once: !0
                                })), this;
                            }
                        },
                        {
                            key: "volume",
                            value: function(e1) {
                                if (void 0 === e1) return this.elt.volume;
                                this.elt.volume = e1;
                            }
                        },
                        {
                            key: "speed",
                            value: function(e1) {
                                if (void 0 === e1) return this.presetPlaybackRate || this.elt.playbackRate;
                                this.loadedmetadata ? this.elt.playbackRate = e1 : this.presetPlaybackRate = e1;
                            }
                        },
                        {
                            key: "time",
                            value: function(e1) {
                                return void 0 === e1 ? this.elt.currentTime : (this.elt.currentTime = e1, this);
                            }
                        },
                        {
                            key: "duration",
                            value: function() {
                                return this.elt.duration;
                            }
                        },
                        {
                            key: "_ensureCanvas",
                            value: function() {
                                this.canvas || (this.canvas = document.createElement("canvas"), this.drawingContext = this.canvas.getContext("2d"), this.setModified(!0));
                                var e1 = this._frameOnCanvas !== this._pInst.frameCount;
                                this.loadedmetadata && e1 && (this.canvas.width !== this.elt.width && (this.canvas.width = this.elt.width, this.canvas.height = this.elt.height, this.width = this.canvas.width, this.height = this.canvas.height), this.drawingContext.drawImage(this.elt, 0, 0, this.canvas.width, this.canvas.height), this.setModified(!0), this._frameOnCanvas = this._pInst.frameCount);
                            }
                        },
                        {
                            key: "loadPixels",
                            value: function() {
                                this._ensureCanvas();
                                for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                                return h.default.Renderer2D.prototype.loadPixels.apply(this, t);
                            }
                        },
                        {
                            key: "updatePixels",
                            value: function(e1, t, r, o) {
                                return this.loadedmetadata && (this._ensureCanvas(), h.default.Renderer2D.prototype.updatePixels.call(this, e1, t, r, o)), this.setModified(!0), this;
                            }
                        },
                        {
                            key: "get",
                            value: function() {
                                this._ensureCanvas();
                                for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                                return h.default.Renderer2D.prototype.get.apply(this, t);
                            }
                        },
                        {
                            key: "_getPixel",
                            value: function() {
                                this.loadPixels();
                                for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                                return h.default.Renderer2D.prototype._getPixel.apply(this, t);
                            }
                        },
                        {
                            key: "set",
                            value: function(e1, t, r) {
                                this.loadedmetadata && (this._ensureCanvas(), h.default.Renderer2D.prototype.set.call(this, e1, t, r), this.setModified(!0));
                            }
                        },
                        {
                            key: "copy",
                            value: function() {
                                this._ensureCanvas();
                                for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                                h.default.prototype.copy.apply(this, t);
                            }
                        },
                        {
                            key: "mask",
                            value: function() {
                                this.loadPixels(), this.setModified(!0);
                                for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                                h.default.Image.prototype.mask.apply(this, t);
                            }
                        },
                        {
                            key: "isModified",
                            value: function() {
                                return this._modified;
                            }
                        },
                        {
                            key: "setModified",
                            value: function(e1) {
                                this._modified = e1;
                            }
                        },
                        {
                            key: "onended",
                            value: function(e1) {
                                return this._onended = e1, this;
                            }
                        },
                        {
                            key: "connect",
                            value: function(e1) {
                                var t, r;
                                if ("function" == typeof h.default.prototype.getAudioContext) t = h.default.prototype.getAudioContext(), r = h.default.soundOut.input;
                                else try {
                                    r = (t = e1.context).destination;
                                } catch (e1) {
                                    throw "connect() is meant to be used with Web Audio API or p5.sound.js";
                                }
                                this.audioSourceNode || (this.audioSourceNode = t.createMediaElementSource(this.elt), this.audioSourceNode.connect(r)), e1 ? e1.input ? this.audioSourceNode.connect(e1.input) : this.audioSourceNode.connect(e1) : this.audioSourceNode.connect(r);
                            }
                        },
                        {
                            key: "disconnect",
                            value: function() {
                                if (!this.audioSourceNode) throw "nothing to disconnect";
                                this.audioSourceNode.disconnect();
                            }
                        },
                        {
                            key: "showControls",
                            value: function() {
                                this.elt.style["text-align"] = "inherit", this.elt.controls = !0;
                            }
                        },
                        {
                            key: "hideControls",
                            value: function() {
                                this.elt.controls = !1;
                            }
                        },
                        {
                            key: "addCue",
                            value: function(e1, t, r) {
                                var o = this._cueIDCounter++, t = new y(t, e1, o, r);
                                return this._cues.push(t), this.elt.ontimeupdate || (this.elt.ontimeupdate = this._onTimeUpdate.bind(this)), o;
                            }
                        },
                        {
                            key: "removeCue",
                            value: function(e1) {
                                for(var t = 0; t < this._cues.length; t++)this._cues[t].id === e1 && (console.log(e1), this._cues.splice(t, 1));
                                0 === this._cues.length && (this.elt.ontimeupdate = null);
                            }
                        },
                        {
                            key: "clearCues",
                            value: function() {
                                this._cues = [], this.elt.ontimeupdate = null;
                            }
                        },
                        {
                            key: "_onTimeUpdate",
                            value: function() {
                                for(var e1 = this.time(), t = 0; t < this._cues.length; t++){
                                    var r = this._cues[t].time, o = this._cues[t].val;
                                    this._prevTime < r && r <= e1 && this._cues[t].callback(o);
                                }
                                this._prevTime = e1;
                            }
                        }
                    ]), i;
                }(h.default.Element), h.default.MediaElement = t, t = function() {
                    function r(e1, t) {
                        d(this, r), this.file = e1, this._pInst = t;
                        t = e1.type.split("/");
                        this.type = t[0], this.subtype = t[1], this.name = e1.name, this.size = e1.size, this.data = void 0;
                    }
                    return a(r, null, [
                        {
                            key: "_createLoader",
                            value: function(o, n) {
                                var e1 = new FileReader;
                                return e1.onload = function(e1) {
                                    var t, r = new h.default.File(o);
                                    "application/json" === r.file.type ? r.data = JSON.parse(e1.target.result) : "text/xml" === r.file.type ? (t = (new DOMParser).parseFromString(e1.target.result, "text/xml"), r.data = new h.default.XML(t.documentElement)) : r.data = e1.target.result, n(r);
                                }, e1;
                            }
                        },
                        {
                            key: "_load",
                            value: function(e1, t) {
                                var r;
                                /^text\//.test(e1.type) || "application/json" === e1.type ? h.default.File._createLoader(e1, t).readAsText(e1) : /^(video|audio)\//.test(e1.type) ? ((r = new h.default.File(e1)).data = URL.createObjectURL(e1), t(r)) : h.default.File._createLoader(e1, t).readAsDataURL(e1);
                            }
                        }
                    ]), r;
                }(), h.default.File = t, t = h.default;
                o.default = t;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.every": 153,
                "core-js/modules/es.array.filter": 155,
                "core-js/modules/es.array.for-each": 156,
                "core-js/modules/es.array.from": 157,
                "core-js/modules/es.array.index-of": 159,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.array.splice": 166,
                "core-js/modules/es.function.name": 167,
                "core-js/modules/es.object.get-prototype-of": 178,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.promise": 181,
                "core-js/modules/es.reflect.construct": 182,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.replace": 194,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/es.string.trim": 199,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/web.dom-collections.for-each": 235,
                "core-js/modules/web.dom-collections.iterator": 236,
                "core-js/modules/web.url": 238
            }
        ],
        290: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (y = e1("../core/main")) && y.__esModule ? y : {
                    default: y
                }, s = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants"));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                n.default.prototype.deviceOrientation = 1 < window.innerWidth / window.innerHeight ? "landscape" : "portrait", n.default.prototype.accelerationX = 0, n.default.prototype.accelerationY = 0, n.default.prototype.accelerationZ = 0, n.default.prototype.pAccelerationX = 0, n.default.prototype.pAccelerationY = 0, n.default.prototype.pAccelerationZ = 0, n.default.prototype._updatePAccelerations = function() {
                    this._setProperty("pAccelerationX", this.accelerationX), this._setProperty("pAccelerationY", this.accelerationY), this._setProperty("pAccelerationZ", this.accelerationZ);
                }, n.default.prototype.rotationX = 0, n.default.prototype.rotationY = 0, n.default.prototype.rotationZ = 0, n.default.prototype.pRotationX = 0, n.default.prototype.pRotationY = 0;
                var l = n.default.prototype.pRotationZ = 0, u = 0, c = 0, d = "clockwise", f = "clockwise", h = "clockwise", p = (n.default.prototype.pRotateDirectionX = void 0, n.default.prototype.pRotateDirectionY = void 0, n.default.prototype.pRotateDirectionZ = void 0, n.default.prototype._updatePRotations = function() {
                    this._setProperty("pRotationX", this.rotationX), this._setProperty("pRotationY", this.rotationY), this._setProperty("pRotationZ", this.rotationZ);
                }, n.default.prototype.turnAxis = void 0, .5), m = 30, y = (n.default.prototype.setMoveThreshold = function(e1) {
                    n.default._validateParameters("setMoveThreshold", arguments), p = e1;
                }, n.default.prototype.setShakeThreshold = function(e1) {
                    n.default._validateParameters("setShakeThreshold", arguments), m = e1;
                }, n.default.prototype._ondeviceorientation = function(e1) {
                    this._updatePRotations(), this._angleMode === s.radians && (e1.beta = e1.beta * (_PI / 180), e1.gamma = e1.gamma * (_PI / 180), e1.alpha = e1.alpha * (_PI / 180)), this._setProperty("rotationX", e1.beta), this._setProperty("rotationY", e1.gamma), this._setProperty("rotationZ", e1.alpha), this._handleMotion();
                }, n.default.prototype._ondevicemotion = function(e1) {
                    this._updatePAccelerations(), this._setProperty("accelerationX", 2 * e1.acceleration.x), this._setProperty("accelerationY", 2 * e1.acceleration.y), this._setProperty("accelerationZ", 2 * e1.acceleration.z), this._handleMotion();
                }, n.default.prototype._handleMotion = function() {
                    90 === window.orientation || -90 === window.orientation ? this._setProperty("deviceOrientation", "landscape") : 0 === window.orientation ? this._setProperty("deviceOrientation", "portrait") : void 0 === window.orientation && this._setProperty("deviceOrientation", "undefined");
                    var e1, t, r, o, n, s = this._isGlobal ? window : this;
                    "function" == typeof s.deviceMoved && (Math.abs(this.accelerationX - this.pAccelerationX) > p || Math.abs(this.accelerationY - this.pAccelerationY) > p || Math.abs(this.accelerationZ - this.pAccelerationZ) > p) && s.deviceMoved(), "function" == typeof s.deviceTurned && (t = this.rotationX + 180, e1 = this.pRotationX + 180, r = l + 180, 0 < t - e1 && t - e1 < 270 || t - e1 < -270 ? d = "clockwise" : (t - e1 < 0 || 270 < t - e1) && (d = "counter-clockwise"), d !== this.pRotateDirectionX && (r = t), 90 < Math.abs(t - r) && Math.abs(t - r) < 270 && (r = t, this._setProperty("turnAxis", "X"), s.deviceTurned()), this.pRotateDirectionX = d, l = r - 180, e1 = this.rotationY + 180, t = this.pRotationY + 180, r = u + 180, 0 < e1 - t && e1 - t < 270 || e1 - t < -270 ? f = "clockwise" : (e1 - t < 0 || 270 < e1 - this.pRotationY) && (f = "counter-clockwise"), f !== this.pRotateDirectionY && (r = e1), 90 < Math.abs(e1 - r) && Math.abs(e1 - r) < 270 && (r = e1, this._setProperty("turnAxis", "Y"), s.deviceTurned()), this.pRotateDirectionY = f, u = r - 180, 0 < this.rotationZ - this.pRotationZ && this.rotationZ - this.pRotationZ < 270 || this.rotationZ - this.pRotationZ < -270 ? h = "clockwise" : (this.rotationZ - this.pRotationZ < 0 || 270 < this.rotationZ - this.pRotationZ) && (h = "counter-clockwise"), h !== this.pRotateDirectionZ && (c = this.rotationZ), 90 < Math.abs(this.rotationZ - c) && Math.abs(this.rotationZ - c) < 270 && (c = this.rotationZ, this._setProperty("turnAxis", "Z"), s.deviceTurned()), this.pRotateDirectionZ = h, this._setProperty("turnAxis", void 0)), "function" == typeof s.deviceShaken && (null !== this.pAccelerationX && (o = Math.abs(this.accelerationX - this.pAccelerationX), n = Math.abs(this.accelerationY - this.pAccelerationY)), m < o + n && s.deviceShaken());
                }, n.default);
                r.default = y;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        291: [
            function(e1, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var o = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                o.default.prototype.isKeyPressed = !1, o.default.prototype.keyIsPressed = !1, o.default.prototype.key = "", o.default.prototype.keyCode = 0, o.default.prototype._onkeydown = function(e1) {
                    var t;
                    this._downKeys[e1.which] || (this._setProperty("isKeyPressed", !0), this._setProperty("keyIsPressed", !0), this._setProperty("keyCode", e1.which), this._downKeys[e1.which] = !0, this._setProperty("key", e1.key || String.fromCharCode(e1.which) || e1.which), "function" != typeof (t = this._isGlobal ? window : this).keyPressed || e1.charCode || !1 === t.keyPressed(e1) && e1.preventDefault());
                }, o.default.prototype._onkeyup = function(e1) {
                    this._downKeys[e1.which] = !1, this._areDownKeys() || (this._setProperty("isKeyPressed", !1), this._setProperty("keyIsPressed", !1)), this._setProperty("_lastKeyCodeTyped", null), this._setProperty("key", e1.key || String.fromCharCode(e1.which) || e1.which), this._setProperty("keyCode", e1.which);
                    var t = this._isGlobal ? window : this;
                    "function" == typeof t.keyReleased && !1 === t.keyReleased(e1) && e1.preventDefault();
                }, o.default.prototype._onkeypress = function(e1) {
                    var t;
                    e1.which !== this._lastKeyCodeTyped && (this._setProperty("_lastKeyCodeTyped", e1.which), this._setProperty("key", e1.key || String.fromCharCode(e1.which) || e1.which), "function" == typeof (t = this._isGlobal ? window : this).keyTyped && !1 === t.keyTyped(e1) && e1.preventDefault());
                }, o.default.prototype._onblur = function(e1) {
                    this._downKeys = {};
                }, o.default.prototype.keyIsDown = function(e1) {
                    return o.default._validateParameters("keyIsDown", arguments), this._downKeys[e1] || !1;
                }, o.default.prototype._areDownKeys = function() {
                    for(var e1 in this._downKeys)if (this._downKeys.hasOwnProperty(e1) && !0 === this._downKeys[e1]) return !0;
                    return !1;
                };
                e1 = o.default;
                r.default = e1;
            },
            {
                "../core/main": 273
            }
        ],
        292: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.string.includes"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (n = e1("../core/main")) && n.__esModule ? n : {
                    default: n
                }, s = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants"));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                n.default.prototype.movedX = 0, n.default.prototype.movedY = 0, n.default.prototype._hasMouseInteracted = !1, n.default.prototype.mouseX = 0, n.default.prototype.mouseY = 0, n.default.prototype.pmouseX = 0, n.default.prototype.pmouseY = 0, n.default.prototype.winMouseX = 0, n.default.prototype.winMouseY = 0, n.default.prototype.pwinMouseX = 0, n.default.prototype.pwinMouseY = 0, n.default.prototype.mouseButton = 0, n.default.prototype.mouseIsPressed = !1, n.default.prototype._updateNextMouseCoords = function(e1) {
                    var t, r, o, n, s;
                    null !== this._curElement && (!e1.touches || 0 < e1.touches.length) && (t = this._curElement.elt, r = this.width, o = this.height, (n = e1) && !n.clientX && (n.touches ? n = n.touches[0] : n.changedTouches && (n = n.changedTouches[0])), s = t.getBoundingClientRect(), r = t.scrollWidth / r || 1, t = t.scrollHeight / o || 1, o = {
                        x: (n.clientX - s.left) / r,
                        y: (n.clientY - s.top) / t,
                        winX: n.clientX,
                        winY: n.clientY,
                        id: n.identifier
                    }, this._setProperty("movedX", e1.movementX), this._setProperty("movedY", e1.movementY), this._setProperty("mouseX", o.x), this._setProperty("mouseY", o.y), this._setProperty("winMouseX", o.winX), this._setProperty("winMouseY", o.winY)), this._hasMouseInteracted || (this._updateMouseCoords(), this._setProperty("_hasMouseInteracted", !0));
                }, n.default.prototype._updateMouseCoords = function() {
                    this._setProperty("pmouseX", this.mouseX), this._setProperty("pmouseY", this.mouseY), this._setProperty("pwinMouseX", this.winMouseX), this._setProperty("pwinMouseY", this.winMouseY), this._setProperty("_pmouseWheelDeltaY", this._mouseWheelDeltaY);
                }, n.default.prototype._setMouseButton = function(e1) {
                    1 === e1.button ? this._setProperty("mouseButton", s.CENTER) : 2 === e1.button ? this._setProperty("mouseButton", s.RIGHT) : this._setProperty("mouseButton", s.LEFT);
                }, n.default.prototype._onmousemove = function(e1) {
                    var t = this._isGlobal ? window : this;
                    this._updateNextMouseCoords(e1), this.mouseIsPressed ? "function" == typeof t.mouseDragged ? !1 === t.mouseDragged(e1) && e1.preventDefault() : "function" == typeof t.touchMoved && !1 === t.touchMoved(e1) && e1.preventDefault() : "function" == typeof t.mouseMoved && !1 === t.mouseMoved(e1) && e1.preventDefault();
                }, n.default.prototype._onmousedown = function(e1) {
                    var t = this._isGlobal ? window : this;
                    this._setProperty("mouseIsPressed", !0), this._setMouseButton(e1), this._updateNextMouseCoords(e1), "function" == typeof t.mousePressed ? !1 === t.mousePressed(e1) && e1.preventDefault() : navigator.userAgent.toLowerCase().includes("safari") && "function" == typeof t.touchStarted && !1 === t.touchStarted(e1) && e1.preventDefault();
                }, n.default.prototype._onmouseup = function(e1) {
                    var t = this._isGlobal ? window : this;
                    this._setProperty("mouseIsPressed", !1), "function" == typeof t.mouseReleased ? !1 === t.mouseReleased(e1) && e1.preventDefault() : "function" == typeof t.touchEnded && !1 === t.touchEnded(e1) && e1.preventDefault();
                }, n.default.prototype._ondragend = n.default.prototype._onmouseup, n.default.prototype._ondragover = n.default.prototype._onmousemove, n.default.prototype._onclick = function(e1) {
                    var t = this._isGlobal ? window : this;
                    "function" == typeof t.mouseClicked && !1 === t.mouseClicked(e1) && e1.preventDefault();
                }, n.default.prototype._ondblclick = function(e1) {
                    var t = this._isGlobal ? window : this;
                    "function" == typeof t.doubleClicked && !1 === t.doubleClicked(e1) && e1.preventDefault();
                }, n.default.prototype._mouseWheelDeltaY = 0, n.default.prototype._pmouseWheelDeltaY = 0, n.default.prototype._onwheel = function(e1) {
                    var t = this._isGlobal ? window : this;
                    this._setProperty("_mouseWheelDeltaY", e1.deltaY), "function" == typeof t.mouseWheel && (e1.delta = e1.deltaY, !1 === t.mouseWheel(e1) && e1.preventDefault());
                }, n.default.prototype.requestPointerLock = function() {
                    var e1 = this._curElement.elt;
                    return e1.requestPointerLock = e1.requestPointerLock || e1.mozRequestPointerLock, e1.requestPointerLock ? (e1.requestPointerLock(), !0) : (console.log("requestPointerLock is not implemented in this browser"), !1);
                }, n.default.prototype.exitPointerLock = function() {
                    document.exitPointerLock();
                };
                e1 = n.default;
                r.default = e1;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.includes": 189,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        293: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.string.includes"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e1 = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                e1.default.prototype.touches = [], e1.default.prototype._updateTouchCoords = function(e1) {
                    if (null !== this._curElement) {
                        for(var t = [], r = 0; r < e1.touches.length; r++)t[r] = function(e1, t, r, o) {
                            var n = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 0, s = e1.getBoundingClientRect(), t = e1.scrollWidth / t || 1, e1 = e1.scrollHeight / r || 1, r = o.touches[n] || o.changedTouches[n];
                            return {
                                x: (r.clientX - s.left) / t,
                                y: (r.clientY - s.top) / e1,
                                winX: r.clientX,
                                winY: r.clientY,
                                id: r.identifier
                            };
                        }(this._curElement.elt, this.width, this.height, e1, r);
                        this._setProperty("touches", t);
                    }
                }, e1.default.prototype._ontouchstart = function(e1) {
                    var t = this._isGlobal ? window : this;
                    this._setProperty("mouseIsPressed", !0), this._updateTouchCoords(e1), this._updateNextMouseCoords(e1), this._updateMouseCoords(), "function" == typeof t.touchStarted ? !1 === t.touchStarted(e1) && e1.preventDefault() : navigator.userAgent.toLowerCase().includes("safari") && "function" == typeof t.mousePressed && !1 === t.mousePressed(e1) && e1.preventDefault();
                }, e1.default.prototype._ontouchmove = function(e1) {
                    var t = this._isGlobal ? window : this;
                    this._updateTouchCoords(e1), this._updateNextMouseCoords(e1), "function" == typeof t.touchMoved ? !1 === t.touchMoved(e1) && e1.preventDefault() : "function" == typeof t.mouseDragged && !1 === t.mouseDragged(e1) && e1.preventDefault();
                }, e1.default.prototype._ontouchend = function(e1) {
                    this._setProperty("mouseIsPressed", !1), this._updateTouchCoords(e1), this._updateNextMouseCoords(e1);
                    var t = this._isGlobal ? window : this;
                    "function" == typeof t.touchEnded ? !1 === t.touchEnded(e1) && e1.preventDefault() : "function" == typeof t.mouseReleased && !1 === t.mouseReleased(e1) && e1.preventDefault();
                };
                e1 = e1.default;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.string.includes": 189
            }
        ],
        294: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.typed-array.int32-array"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.typed-array.int32-array"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var U, N, B, G, V = {
                    _toPixels: function(e1) {
                        var t, r;
                        return e1 instanceof ImageData ? e1.data : e1.getContext("2d") ? e1.getContext("2d").getImageData(0, 0, e1.width, e1.height).data : e1.getContext("webgl") ? (r = (t = e1.getContext("webgl")).drawingBufferWidth * t.drawingBufferHeight * 4, r = new Uint8Array(r), t.readPixels(0, 0, e1.width, e1.height, t.RGBA, t.UNSIGNED_BYTE, r), r) : void 0;
                    },
                    _getARGB: function(e1, t) {
                        t *= 4;
                        return e1[3 + t] << 24 & 4278190080 | e1[t] << 16 & 16711680 | e1[1 + t] << 8 & 65280 | 255 & e1[2 + t];
                    },
                    _setPixels: function(e1, t) {
                        for(var r, o = 0, n = e1.length; o < n; o++)e1[0 + (r = 4 * o)] = (16711680 & t[o]) >>> 16, e1[1 + r] = (65280 & t[o]) >>> 8, e1[2 + r] = 255 & t[o], e1[3 + r] = (4278190080 & t[o]) >>> 24;
                    },
                    _toImageData: function(e1) {
                        return e1 instanceof ImageData ? e1 : e1.getContext("2d").getImageData(0, 0, e1.width, e1.height);
                    },
                    _createImageData: function(e1, t) {
                        return V._tmpCanvas = document.createElement("canvas"), V._tmpCtx = V._tmpCanvas.getContext("2d"), this._tmpCtx.createImageData(e1, t);
                    },
                    apply: function(e1, t, r) {
                        var o = e1.getContext("2d"), n = o.getImageData(0, 0, e1.width, e1.height), t = t(n, r);
                        t instanceof ImageData ? o.putImageData(t, 0, 0, 0, 0, e1.width, e1.height) : o.putImageData(n, 0, 0, 0, 0, e1.width, e1.height);
                    },
                    threshold: function(e1, t) {
                        for(var r = V._toPixels(e1), o = (void 0 === t && (t = .5), Math.floor(255 * t)), n = 0; n < r.length; n += 4){
                            var s = void 0, s = o <= .2126 * r[n] + .7152 * r[n + 1] + .0722 * r[n + 2] ? 255 : 0;
                            r[n] = r[n + 1] = r[n + 2] = s;
                        }
                    },
                    gray: function(e1) {
                        for(var t = V._toPixels(e1), r = 0; r < t.length; r += 4){
                            var o = t[r], n = t[r + 1], s = t[r + 2];
                            t[r] = t[r + 1] = t[r + 2] = .2126 * o + .7152 * n + .0722 * s;
                        }
                    },
                    opaque: function(e1) {
                        for(var t = V._toPixels(e1), r = 0; r < t.length; r += 4)t[r + 3] = 255;
                        return t;
                    },
                    invert: function(e1) {
                        for(var t = V._toPixels(e1), r = 0; r < t.length; r += 4)t[r] = 255 - t[r], t[r + 1] = 255 - t[r + 1], t[r + 2] = 255 - t[r + 2];
                    },
                    posterize: function(e1, t) {
                        var r = V._toPixels(e1);
                        if (t < 2 || 255 < t) throw new Error("Level must be greater than 2 and less than 255 for posterize");
                        for(var o = t - 1, n = 0; n < r.length; n += 4){
                            var s = r[n], i = r[n + 1], a = r[n + 2];
                            r[n] = 255 * (s * t >> 8) / o, r[n + 1] = 255 * (i * t >> 8) / o, r[n + 2] = 255 * (a * t >> 8) / o;
                        }
                    },
                    dilate: function(e1) {
                        for(var t, r, o, n, s, i, a, l, u, c = V._toPixels(e1), d = 0, f = c.length ? c.length / 4 : 0, h = new Int32Array(f); d < f;)for(r = (t = d) + e1.width; d < r;)n = o = V._getARGB(c, d), (u = d - 1) < t && (u = d), r <= (l = d + 1) && (l = d), (s = d - e1.width) < 0 && (s = 0), f <= (i = d + e1.width) && (i = d), s = V._getARGB(c, s), u = V._getARGB(c, u), i = V._getARGB(c, i), (n = 77 * (n >> 16 & 255) + 151 * (n >> 8 & 255) + 28 * (255 & n)) < (a = 77 * (u >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) && (o = u, n = a), n < (a = 77 * ((u = V._getARGB(c, l)) >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) && (o = u, n = a), n < (l = 77 * (s >> 16 & 255) + 151 * (s >> 8 & 255) + 28 * (255 & s)) && (o = s, n = l), n < (u = 77 * (i >> 16 & 255) + 151 * (i >> 8 & 255) + 28 * (255 & i)) && (o = i, n = u), h[d++] = o;
                        V._setPixels(c, h);
                    },
                    erode: function(e1) {
                        for(var t, r, o, n, s, i, a, l, u, c = V._toPixels(e1), d = 0, f = c.length ? c.length / 4 : 0, h = new Int32Array(f); d < f;)for(r = (t = d) + e1.width; d < r;)n = o = V._getARGB(c, d), (u = d - 1) < t && (u = d), r <= (l = d + 1) && (l = d), (s = d - e1.width) < 0 && (s = 0), f <= (i = d + e1.width) && (i = d), s = V._getARGB(c, s), u = V._getARGB(c, u), i = V._getARGB(c, i), (a = 77 * (u >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) < (n = 77 * (n >> 16 & 255) + 151 * (n >> 8 & 255) + 28 * (255 & n)) && (o = u, n = a), (a = 77 * ((u = V._getARGB(c, l)) >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) < n && (o = u, n = a), (l = 77 * (s >> 16 & 255) + 151 * (s >> 8 & 255) + 28 * (255 & s)) < n && (o = s, n = l), (u = 77 * (i >> 16 & 255) + 151 * (i >> 8 & 255) + 28 * (255 & i)) < n && (o = i, n = u), h[d++] = o;
                        V._setPixels(c, h);
                    },
                    blur: function(e1, D) {
                        for(var t, r, o, n, s, i, a, l, u, c, d = V._toPixels(e1), f = e1.width, h = e1.height, p = f * h, m = new Int32Array(p), y = 0; y < p; y++)m[y] = V._getARGB(d, y);
                        var g, v, b, j, _, x, w, S, E = new Int32Array(p), M = new Int32Array(p), T = new Int32Array(p), F = new Int32Array(p), k = 0, O = 3.5 * D | 0;
                        if (U !== (O = O < 1 ? 1 : O < 248 ? O : 248)) {
                            N = 1 + (U = O) << 1, B = new Int32Array(N), G = new Array(N);
                            for(var C = 0; C < N; C++)G[C] = new Int32Array(256);
                            for(var A = 1, P = O - 1; A < O; A++){
                                B[O + A] = B[P] = x = P * P, w = G[O + A], S = G[P--];
                                for(var L = 0; L < 256; L++)w[L] = S[L] = x * L;
                            }
                            _ = B[O] = O * O, w = G[O];
                            for(var R = 0; R < 256; R++)w[R] = _ * R;
                        }
                        for(v = 0; v < h; v++){
                            for(g = 0; g < f; g++){
                                if (n = o = r = s = t = 0, (i = g - U) < 0) c = -i, i = 0;
                                else {
                                    if (f <= i) break;
                                    c = 0;
                                }
                                for(b = c; b < N && !(f <= i); b++){
                                    var I = m[i + k];
                                    j = G[b], s += j[(-16777216 & I) >>> 24], r += j[(16711680 & I) >> 16], o += j[(65280 & I) >> 8], n += j[255 & I], t += B[b], i++;
                                }
                                E[a = k + g] = s / t, M[a] = r / t, T[a] = o / t, F[a] = n / t;
                            }
                            k += f;
                        }
                        for(u = (l = -U) * f, v = k = 0; v < h; v++){
                            for(g = 0; g < f; g++){
                                if (n = o = r = s = t = 0, l < 0) c = a = -l, i = g;
                                else {
                                    if (h <= l) break;
                                    c = 0, a = l, i = g + u;
                                }
                                for(b = c; b < N && !(h <= a); b++)j = G[b], s += j[E[i]], r += j[M[i]], o += j[T[i]], n += j[F[i]], t += B[b], a++, i += f;
                                m[g + k] = s / t << 24 | r / t << 16 | o / t << 8 | n / t;
                            }
                            k += f, u += f, l++;
                        }
                        V._setPixels(d, m);
                    }
                };
                r.default = V;
            },
            {
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.typed-array.copy-within": 203,
                "core-js/modules/es.typed-array.every": 204,
                "core-js/modules/es.typed-array.fill": 205,
                "core-js/modules/es.typed-array.filter": 206,
                "core-js/modules/es.typed-array.find": 208,
                "core-js/modules/es.typed-array.find-index": 207,
                "core-js/modules/es.typed-array.for-each": 211,
                "core-js/modules/es.typed-array.includes": 212,
                "core-js/modules/es.typed-array.index-of": 213,
                "core-js/modules/es.typed-array.int32-array": 215,
                "core-js/modules/es.typed-array.iterator": 216,
                "core-js/modules/es.typed-array.join": 217,
                "core-js/modules/es.typed-array.last-index-of": 218,
                "core-js/modules/es.typed-array.map": 219,
                "core-js/modules/es.typed-array.reduce": 221,
                "core-js/modules/es.typed-array.reduce-right": 220,
                "core-js/modules/es.typed-array.reverse": 222,
                "core-js/modules/es.typed-array.set": 223,
                "core-js/modules/es.typed-array.slice": 224,
                "core-js/modules/es.typed-array.some": 225,
                "core-js/modules/es.typed-array.sort": 226,
                "core-js/modules/es.typed-array.subarray": 227,
                "core-js/modules/es.typed-array.to-locale-string": 228,
                "core-js/modules/es.typed-array.to-string": 229,
                "core-js/modules/es.typed-array.uint8-array": 232
            }
        ],
        295: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.set"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.uint32-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/web.dom-collections.for-each"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.set"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.uint32-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/web.dom-collections.for-each"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var O = o(e1("../core/main")), C = o(e1("omggif"));
                function o(e1) {
                    return e1 && e1.__esModule ? e1 : {
                        default: e1
                    };
                }
                function A(e1) {
                    return function(e1) {
                        if (Array.isArray(e1)) {
                            for(var t = 0, r = new Array(e1.length); t < e1.length; t++)r[t] = e1[t];
                            return r;
                        }
                    }(e1) || function(e1) {
                        if (Symbol.iterator in Object(e1) || "[object Arguments]" === Object.prototype.toString.call(e1)) return Array.from(e1);
                    }(e1) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                O.default.prototype.createImage = function(e1, t) {
                    return O.default._validateParameters("createImage", arguments), new O.default.Image(e1, t);
                }, O.default.prototype.saveCanvas = function() {
                    O.default._validateParameters("saveCanvas", arguments);
                    var e1, t, r, o, n = [].slice.call(arguments);
                    switch(arguments[0] instanceof HTMLCanvasElement ? (e1 = arguments[0], n.shift()) : arguments[0] instanceof O.default.Element ? (e1 = arguments[0].elt, n.shift()) : e1 = this._curElement && this._curElement.elt, 1 <= n.length && (t = n[0]), r = (r = 2 <= n.length ? n[1] : r) || O.default.prototype._checkFileExtension(t, r)[1] || "png"){
                        default:
                            o = "image/png";
                            break;
                        case "jpeg":
                        case "jpg":
                            o = "image/jpeg";
                    }
                    e1.toBlob(function(e1) {
                        O.default.prototype.downloadFile(e1, t, r);
                    }, o);
                }, O.default.prototype.encodeAndDownloadGif = function(d, e1) {
                    for(var f = d.gifProperties, t = f.loopLimit, r = (1 === t ? t = null : null === t && (t = 0), new Uint8Array(d.width * d.height * f.numFrames)), h = [], o = {}, n = 0; n < f.numFrames; n++){
                        for(var s = new Set, i = f.frames[n].image.data, a = i.length, l = new Uint32Array(d.width * d.height), u = 0, c = 0; u < a; u += 4, c++){
                            var p = i[u + 0] << 16 | i[u + 1] << 8 | i[u + 2] << 0;
                            s.add(p), l[c] = p;
                        }
                        var m = A(s).sort().toString();
                        void 0 === o[m] ? o[m] = {
                            freq: 1,
                            frames: [
                                n
                            ]
                        } : (o[m].freq += 1, o[m].frames.push(n)), h.push(l);
                    }
                    for(var y = [], g = Object.keys(o).sort(function(e1, t) {
                        return o[t].freq - o[e1].freq;
                    }), v = g[0].split(",").map(function(e1) {
                        return parseInt(e1);
                    }), y = y.concat(o[v].frames), b = new Set(v), j = 1; j < g.length; j++){
                        var _ = g[j].split(",").map(function(e1) {
                            return parseInt(e1);
                        }).filter(function(e1) {
                            return !b.has(e1);
                        });
                        if (v.length + _.length <= 256) {
                            for(var x = 0; x < _.length; x++)v.push(_[x]), b.add(_[x]);
                            y = y.concat(o[g[j]].frames);
                        }
                    }
                    y = new Set(y);
                    for(var w = {}, S = 0; S < v.length; S++)w[v[S]] || (w[v[S]] = S);
                    for(var E = 1; E < v.length;)E <<= 1;
                    v.length = E;
                    for(var t = {
                        loop: t,
                        palette: new Uint32Array(v)
                    }, M = new C.default.GifWriter(r, d.width, d.height, t), T = {}, k = 0; k < f.numFrames; k++)!function(r) {
                        var o = !y.has(r), n = o ? [] : v, s = new Uint8Array(d.width * d.height), i = {}, a = new Set, e1 = (h[r].forEach(function(e1, t) {
                            o ? (void 0 === i[e1] && (i[e1] = n.length, n.push(e1)), s[t] = i[e1]) : s[t] = w[e1], 0 < r && h[r - 1][t] !== e1 && a.add(e1);
                        }), {}), t = n.filter(function(e1) {
                            return !a.has(e1);
                        });
                        if (0 < t.length) {
                            var t = t[0], l = (o ? i : w)[t];
                            if (0 < r) {
                                for(var u = 0; u < h[r].length; u++)h[r - 1][u] === h[r][u] && (s[u] = l);
                                e1.transparent = l, T.frameOpts.disposal = 1;
                            }
                        }
                        if (e1.delay = f.frames[r].delay / 10, o) {
                            for(var c = 1; c < n.length;)c <<= 1;
                            n.length = c, e1.palette = new Uint32Array(n);
                        }
                        0 < r && M.addFrame(0, 0, d.width, d.height, T.pixelPaletteIndex, T.frameOpts), T = {
                            pixelPaletteIndex: s,
                            frameOpts: e1
                        };
                    }(k);
                    T.frameOpts.disposal = 1, M.addFrame(0, 0, d.width, d.height, T.pixelPaletteIndex, T.frameOpts);
                    t = new Blob([
                        r.slice(0, M.end())
                    ], {
                        type: "image/gif"
                    });
                    O.default.prototype.downloadFile(t, e1, "gif");
                }, O.default.prototype.saveFrames = function(e1, t, r, o, i) {
                    O.default._validateParameters("saveFrames", arguments);
                    r = O.default.prototype.constrain(r = r || 3, 0, 15);
                    r *= 1e3;
                    var o = O.default.prototype.constrain(o || 15, 0, 22), n = 0, s = O.default.prototype._makeFrame, a = this._curElement.elt, l = [], u = setInterval(function() {
                        l.push(s(e1 + n, t, a)), n++;
                    }, 1e3 / o);
                    setTimeout(function() {
                        if (clearInterval(u), i) i(l);
                        else {
                            var e1 = !0, t = !1, r = void 0;
                            try {
                                for(var o, n = l[Symbol.iterator](); !(e1 = (o = n.next()).done); e1 = !0){
                                    var s = o.value;
                                    O.default.prototype.downloadFile(s.imageData, s.filename, s.ext);
                                }
                            } catch (e1) {
                                t = !0, r = e1;
                            } finally{
                                try {
                                    e1 || null == n.return || n.return();
                                } finally{
                                    if (t) throw r;
                                }
                            }
                        }
                        l = [];
                    }, .01 + r);
                }, O.default.prototype._makeFrame = function(e1, t, r) {
                    var o, r = this ? this._curElement.elt : r;
                    if (t) switch(t.toLowerCase()){
                        case "png":
                            o = "image/png";
                            break;
                        case "jpeg":
                        case "jpg":
                            o = "image/jpeg";
                            break;
                        default:
                            o = "image/png";
                    }
                    else t = "png", o = "image/png";
                    var r = (r = r.toDataURL(o)).replace(o, "image/octet-stream"), n = {};
                    return n.imageData = r, n.filename = e1, n.ext = t, n;
                };
                e1 = O.default;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.filter": 155,
                "core-js/modules/es.array.for-each": 156,
                "core-js/modules/es.array.from": 157,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.object.keys": 179,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.set": 187,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.replace": 194,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.typed-array.copy-within": 203,
                "core-js/modules/es.typed-array.every": 204,
                "core-js/modules/es.typed-array.fill": 205,
                "core-js/modules/es.typed-array.filter": 206,
                "core-js/modules/es.typed-array.find": 208,
                "core-js/modules/es.typed-array.find-index": 207,
                "core-js/modules/es.typed-array.for-each": 211,
                "core-js/modules/es.typed-array.includes": 212,
                "core-js/modules/es.typed-array.index-of": 213,
                "core-js/modules/es.typed-array.iterator": 216,
                "core-js/modules/es.typed-array.join": 217,
                "core-js/modules/es.typed-array.last-index-of": 218,
                "core-js/modules/es.typed-array.map": 219,
                "core-js/modules/es.typed-array.reduce": 221,
                "core-js/modules/es.typed-array.reduce-right": 220,
                "core-js/modules/es.typed-array.reverse": 222,
                "core-js/modules/es.typed-array.set": 223,
                "core-js/modules/es.typed-array.slice": 224,
                "core-js/modules/es.typed-array.some": 225,
                "core-js/modules/es.typed-array.sort": 226,
                "core-js/modules/es.typed-array.subarray": 227,
                "core-js/modules/es.typed-array.to-locale-string": 228,
                "core-js/modules/es.typed-array.to-string": 229,
                "core-js/modules/es.typed-array.uint32-array": 231,
                "core-js/modules/es.typed-array.uint8-array": 232,
                "core-js/modules/web.dom-collections.for-each": 235,
                "core-js/modules/web.dom-collections.iterator": 236,
                omggif: 246
            }
        ],
        296: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.copy-within"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.promise"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.uint8-clamped-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.array.copy-within"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.promise"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.uint8-clamped-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0, e1("regenerator-runtime/runtime");
                var C = n(e1("../core/main")), m = n(e1("../core/helpers")), j = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants")), g = n(e1("omggif")), A = e1("gifenc");
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                function n(e1) {
                    return e1 && e1.__esModule ? e1 : {
                        default: e1
                    };
                }
                function l(e1, t, r, o, n, s, i) {
                    try {
                        var a = e1[s](i), l = a.value;
                    } catch (e1) {
                        return void r(e1);
                    }
                    a.done ? t(l) : Promise.resolve(l).then(o, n);
                }
                function y(e1, t, r, o, n, s, i, a, l, u, c) {
                    var d, f, h, p, m, y, g, v, b;
                    return e1 === j.COVER && (d = t, h = r, g = s, v = i, y = a, b = l, f = u, p = c, m = Math.max(g / f, v / p), g /= m, v /= m, m = y, y = b, d === j.CENTER ? m += (f - g) / 2 : d === j.RIGHT && (m += f - g), h === j.CENTER ? y += (p - v) / 2 : h === j.BOTTOM && (y += p - v), a = (b = {
                        x: m,
                        y: y,
                        w: g,
                        h: v
                    }).x, l = b.y, u = b.w, c = b.h), e1 === j.CONTAIN && (d = t, f = r, h = o, p = n, m = s, y = i, g = u, v = c, b = Math.max(g / m, v / y), g /= b, v /= b, b = h, h = p, d === j.CENTER ? b += (m - g) / 2 : d === j.RIGHT && (b += m - g), f === j.CENTER ? h += (y - v) / 2 : f === j.BOTTOM && (h += y - v), o = (e1 = {
                        x: b,
                        y: h,
                        w: g,
                        h: v
                    }).x, n = e1.y, s = e1.w, i = e1.h), {
                        sx: a,
                        sy: l,
                        sw: u,
                        sh: c,
                        dx: o,
                        dy: n,
                        dw: s,
                        dh: i
                    };
                }
                function v(e1, t) {
                    return 0 < e1 && e1 < t ? e1 : t;
                }
                e1("../core/friendly_errors/validate_params"), e1("../core/friendly_errors/file_errors"), e1("../core/friendly_errors/fes_core"), C.default.prototype.loadImage = function(o, h, p) {
                    C.default._validateParameters("loadImage", arguments);
                    var m = new C.default.Image(1, 1, this), y = this, e1 = new Request(o, {
                        method: "GET",
                        mode: "cors"
                    });
                    return fetch(o, e1).then(function(e1) {
                        var t, r = e1.headers.get("content-type");
                        null === r && console.warn("The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset."), r && r.includes("image/gif") ? e1.arrayBuffer().then(function(e1) {
                            if (e1) {
                                for(var e1 = new Uint8Array(e1), r = m, t = h, o = p, n = (function(e1) {
                                    y._decrementPreload();
                                }).bind(y), s = new g.default.GifReader(e1), i = (r.width = r.canvas.width = s.width, r.height = r.canvas.height = s.height, []), a = s.numFrames(), l = new Uint8ClampedArray(r.width * r.height * 4), u = 0; u < a; u++){
                                    var c = s.frameInfo(u), d = r.drawingContext.getImageData(0, 0, r.width, r.height), f = (l = d.data.slice(), !function(e1, t) {
                                        try {
                                            t.decodeAndBlitFrameRGBA(e1, l);
                                        } catch (e1) {
                                            C.default._friendlyFileLoadError(8, r.src), "function" == typeof o ? o(e1) : console.error(e1);
                                        }
                                    }(u, s), new ImageData(l, r.width, r.height)), f = (r.drawingContext.putImageData(f, 0, 0), c.delay);
                                    0 === f && (f = 10), i.push({
                                        image: r.drawingContext.getImageData(0, 0, r.width, r.height),
                                        delay: 10 * f
                                    }), 2 === c.disposal ? r.drawingContext.clearRect(c.x, c.y, c.width, c.height) : 3 === c.disposal && r.drawingContext.putImageData(d, 0, 0, c.x, c.y, c.width, c.height);
                                }
                                null === (e1 = s.loopCount()) ? e1 = 1 : 0 === e1 && (e1 = null), r.drawingContext.putImageData(i[0].image, 0, 0), 1 < i.length && (r.gifProperties = {
                                    displayIndex: 0,
                                    loopLimit: e1,
                                    loopCount: 0,
                                    frames: i,
                                    numFrames: a,
                                    playing: !0,
                                    timeDisplayed: 0,
                                    lastChangeTime: 0
                                }), "function" == typeof t && t(r), n();
                            }
                        }, function(e1) {
                            "function" == typeof p ? (p(e1), y._decrementPreload()) : console.error(e1);
                        }) : ((t = new Image).onload = function() {
                            m.width = m.canvas.width = t.width, m.height = m.canvas.height = t.height, m.drawingContext.drawImage(t, 0, 0), m.modified = !0, "function" == typeof h && h(m), y._decrementPreload();
                        }, t.onerror = function(e1) {
                            C.default._friendlyFileLoadError(0, t.src), "function" == typeof p ? (p(e1), y._decrementPreload()) : console.error(e1);
                        }, 0 !== o.indexOf("data:image/") && (t.crossOrigin = "Anonymous"), t.src = o), m.modified = !0;
                    }).catch(function(e1) {
                        C.default._friendlyFileLoadError(0, o), "function" == typeof p ? (p(e1), y._decrementPreload()) : console.error(e1);
                    }), m;
                }, C.default.prototype.saveGif = function() {
                    a = regeneratorRuntime.mark(function e1(t, r) {
                        var o, n, s, i, a, l, u, c, d, f, h, p, m, y, g, v, b, j, _, x, w, S, E, M, T, k, O = arguments;
                        return regeneratorRuntime.wrap(function(e1) {
                            for(;;)switch(e1.prev = e1.next){
                                case 0:
                                    if (o = 2 < O.length && void 0 !== O[2] ? O[2] : {
                                        delay: 0,
                                        units: "seconds",
                                        silent: !1,
                                        notificationDuration: 0,
                                        notificationID: "progressBar"
                                    }, "string" != typeof t) throw TypeError("fileName parameter must be a string");
                                    e1.next = 3;
                                    break;
                                case 3:
                                    if ("number" != typeof r) throw TypeError("Duration parameter must be a number");
                                    e1.next = 5;
                                    break;
                                case 5:
                                    if (n = o && o.delay || 0, s = o && o.units || "seconds", i = o && o.silent || !1, a = o && o.notificationDuration || 0, l = o && o.notificationID || "progressBar", "number" != typeof n) throw TypeError("Delay parameter must be a number");
                                    e1.next = 12;
                                    break;
                                case 12:
                                    if ("seconds" !== s && "frames" !== s) throw TypeError('Units parameter must be either "frames" or "seconds"');
                                    e1.next = 14;
                                    break;
                                case 14:
                                    if ("boolean" != typeof i) throw TypeError("Silent parameter must be a boolean");
                                    e1.next = 16;
                                    break;
                                case 16:
                                    if ("number" != typeof a) throw TypeError("Notification duration parameter must be a number");
                                    e1.next = 18;
                                    break;
                                case 18:
                                    if ("string" != typeof l) throw TypeError("Notification ID parameter must be a string");
                                    e1.next = 20;
                                    break;
                                case 20:
                                    return this._recording = !0, f = this._targetFrameRate, u = (u = 1 / (f = f !== 1 / 0 && void 0 !== f && 0 !== f ? f : 60) * 1e3) < 20 ? 20 : u, d = (c = "seconds" === s ? r * f : r) + (f = "seconds" === s ? n * f : n), f, this.frameCount = f, h = this._pixelDensity, this.pixelDensity(1), p = [], null !== document.getElementById(l) && document.getElementById(l).remove(), i || ((m = this.createP("")).id(l), m.style("font-size", "16px"), m.style("font-family", "Montserrat"), m.style("background-color", "#ffffffa0"), m.style("padding", "8px"), m.style("border-radius", "10px"), m.position(0, 0)), this._renderer instanceof C.default.RendererGL && (g = this.drawingContext, y = new Uint8Array(g.drawingBufferWidth * g.drawingBufferHeight * 4)), this.noLoop(), e1.next = 39, Promise.resolve();
                                case 39:
                                    if (f < d) return this.redraw(), M = void 0, M = this._renderer instanceof C.default.RendererGL ? (y = new Uint8Array(g.drawingBufferWidth * g.drawingBufferHeight * 4), g.readPixels(0, 0, g.drawingBufferWidth, g.drawingBufferHeight, g.RGBA, g.UNSIGNED_BYTE, y), function(e1) {
                                        for(var t = parseInt(height / 2), r = 4 * width, o = new Uint8Array(4 * width), n = 0; n < t; ++n){
                                            var s = n * r, i = (height - n - 1) * r;
                                            o.set(e1.subarray(s, s + r)), e1.copyWithin(s, i, i + r), e1.set(o, i);
                                        }
                                        return e1;
                                    }(y)) : this.drawingContext.getImageData(0, 0, this.width, this.height).data, p.push(M), f++, i || m.html("Saved frame <b>" + p.length.toString() + "</b> out of " + c.toString()), e1.next = 48, new Promise(function(e1) {
                                        return setTimeout(e1, 0);
                                    });
                                    e1.next = 50;
                                    break;
                                case 48:
                                    e1.next = 39;
                                    break;
                                case 50:
                                    i || m.html("Frames processed, generating color palette..."), this.loop(), this.pixelDensity(h), v = (0, A.GIFEncoder)(), b = function(e1) {
                                        for(var t = new Uint8Array(e1.length * e1[0].length), r = 0; r < e1.length; r++)t.set(e1[r], r * e1[0].length);
                                        var o = (0, A.quantize)(t, 256, {
                                            format: "rgba4444",
                                            oneBitAlpha: !0
                                        });
                                        256 === o.length ? o[o.length - 1] = [
                                            255 * Math.random(),
                                            255 * Math.random(),
                                            255 * Math.random(),
                                            0
                                        ] : o.push([
                                            255 * Math.random(),
                                            255 * Math.random(),
                                            255 * Math.random(),
                                            0
                                        ]);
                                        return o;
                                    }(p), j = {}, _ = function(e1) {
                                        for(var t = e1.length / 4, r = new Uint8Array(t), o = 0; o < t; o++){
                                            var n = e1[4 * o] << 24 | e1[4 * o + 1] << 16 | e1[4 * o + 2] << 8 | e1[4 * o + 3];
                                            void 0 === j[n] && (j[n] = (0, A.nearestColorIndex)(b, e1.slice(4 * o, 4 * (o + 1)))), r[o] = j[n];
                                        }
                                        return r;
                                    }, x = b.length - 1, w = [], S = 0;
                                case 60:
                                    if (!(S < p.length)) {
                                        e1.next = 71;
                                        break;
                                    }
                                    if (E = _(p[S]), M = E.slice(), 0 === S) v.writeFrame(E, this.width, this.height, {
                                        palette: b,
                                        delay: u,
                                        dispose: 1
                                    });
                                    else {
                                        for(T = 0; T < E.length; T++)E[T] === w[T] && (E[T] = x);
                                        v.writeFrame(E, this.width, this.height, {
                                            delay: u,
                                            transparent: !0,
                                            transparentIndex: x,
                                            dispose: 1
                                        });
                                    }
                                    return w = M, i || m.html("Rendered frame <b>" + S.toString() + "</b> out of " + c.toString()), e1.next = 68, new Promise(function(e1) {
                                        return setTimeout(e1, 0);
                                    });
                                case 68:
                                    S++, e1.next = 60;
                                    break;
                                case 71:
                                    v.finish(), k = v.bytesView(), k = new Blob([
                                        k
                                    ], {
                                        type: "image/gif"
                                    }), p = [], this._recording = !1, this.loop(), i || (m.html("Done. Downloading your gif!\uD83C\uDF38"), 0 < a && setTimeout(function() {
                                        return m.remove();
                                    }, 1e3 * a)), C.default.prototype.downloadFile(k, t, "gif");
                                case 80:
                                case "end":
                                    return e1.stop();
                            }
                        }, e1, this);
                    });
                    var a, r = function() {
                        var e1 = this, i = arguments;
                        return new Promise(function(t, r) {
                            var o = a.apply(e1, i);
                            function n(e1) {
                                l(o, t, r, n, s, "next", e1);
                            }
                            function s(e1) {
                                l(o, t, r, n, s, "throw", e1);
                            }
                            n(void 0);
                        });
                    };
                    return function(e1, t) {
                        return r.apply(this, arguments);
                    };
                }(), C.default.prototype.image = function(e1, t, r, o, n, s, i, a, l, u, c, d) {
                    C.default._validateParameters("image", arguments);
                    var f = e1.width, h = e1.height, p = (d = d || j.CENTER, c = c || j.CENTER, e1.elt && e1.elt.videoWidth && !e1.canvas && (f = e1.elt.videoWidth, h = e1.elt.videoHeight), o || f), n = n || h, s = s || 0, i = i || 0, a = v(a || f, f), f = v(l || h, h), l = 1;
                    e1.elt && !e1.canvas && e1.elt.style.width && (l = e1.elt.videoWidth && !o ? e1.elt.videoWidth : e1.elt.width, l /= parseInt(e1.elt.style.width, 10)), s *= l, i *= l, f *= l, a *= l;
                    h = y(u, c, d, (h = m.default.modeAdjust(t, r, p, n, this._renderer._imageMode)).x, h.y, h.w, h.h, s, i, a, f);
                    this._renderer.image(e1, h.sx, h.sy, h.sw, h.sh, h.dx, h.dy, h.dw, h.dh);
                }, C.default.prototype.tint = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    C.default._validateParameters("tint", t);
                    var o = this.color.apply(this, t);
                    this._renderer._tint = o.levels;
                }, C.default.prototype.noTint = function() {
                    this._renderer._tint = null;
                }, C.default.prototype._getTintedImageCanvas = C.default.Renderer2D.prototype._getTintedImageCanvas, C.default.prototype.imageMode = function(e1) {
                    C.default._validateParameters("imageMode", arguments), e1 !== j.CORNER && e1 !== j.CORNERS && e1 !== j.CENTER || (this._renderer._imageMode = e1);
                };
                e1 = C.default;
                r.default = e1;
            },
            {
                "../core/constants": 262,
                "../core/friendly_errors/fes_core": 264,
                "../core/friendly_errors/file_errors": 265,
                "../core/friendly_errors/validate_params": 268,
                "../core/helpers": 269,
                "../core/main": 273,
                "core-js/modules/es.array.copy-within": 152,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.array.index-of": 159,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.promise": 181,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.includes": 189,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.typed-array.copy-within": 203,
                "core-js/modules/es.typed-array.every": 204,
                "core-js/modules/es.typed-array.fill": 205,
                "core-js/modules/es.typed-array.filter": 206,
                "core-js/modules/es.typed-array.find": 208,
                "core-js/modules/es.typed-array.find-index": 207,
                "core-js/modules/es.typed-array.for-each": 211,
                "core-js/modules/es.typed-array.includes": 212,
                "core-js/modules/es.typed-array.index-of": 213,
                "core-js/modules/es.typed-array.iterator": 216,
                "core-js/modules/es.typed-array.join": 217,
                "core-js/modules/es.typed-array.last-index-of": 218,
                "core-js/modules/es.typed-array.map": 219,
                "core-js/modules/es.typed-array.reduce": 221,
                "core-js/modules/es.typed-array.reduce-right": 220,
                "core-js/modules/es.typed-array.reverse": 222,
                "core-js/modules/es.typed-array.set": 223,
                "core-js/modules/es.typed-array.slice": 224,
                "core-js/modules/es.typed-array.some": 225,
                "core-js/modules/es.typed-array.sort": 226,
                "core-js/modules/es.typed-array.subarray": 227,
                "core-js/modules/es.typed-array.to-locale-string": 228,
                "core-js/modules/es.typed-array.to-string": 229,
                "core-js/modules/es.typed-array.uint8-array": 232,
                "core-js/modules/es.typed-array.uint8-clamped-array": 233,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236,
                gifenc: 243,
                omggif: 246,
                "regenerator-runtime/runtime": 250
            }
        ],
        297: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = o(e1("../core/main")), n = o(e1("./filters"));
                function o(e1) {
                    return e1 && e1.__esModule ? e1 : {
                        default: e1
                    };
                }
                function i(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                s.default.Image = function() {
                    function r(e1, t) {
                        if (!(this instanceof r)) throw new TypeError("Cannot call a class as a function");
                        this.width = e1, this.height = t, this.canvas = document.createElement("canvas"), this.canvas.width = this.width, this.canvas.height = this.height, this.drawingContext = this.canvas.getContext("2d"), (this._pixelsState = this)._pixelDensity = 1, this.gifProperties = null, this._modified = !1, this.pixels = [];
                    }
                    var e1, t, o;
                    return e1 = r, t = [
                        {
                            key: "_animateGif",
                            value: function(e1) {
                                var t, r = this.gifProperties, e1 = e1._lastRealFrameTime;
                                0 === r.lastChangeTime && (r.lastChangeTime = e1), r.playing && (r.timeDisplayed = e1 - r.lastChangeTime, t = r.frames[r.displayIndex].delay, r.timeDisplayed >= t && (t = Math.floor(r.timeDisplayed / t), r.timeDisplayed = 0, r.lastChangeTime = e1, r.displayIndex += t, r.loopCount = Math.floor(r.displayIndex / r.numFrames), null !== r.loopLimit && r.loopCount >= r.loopLimit ? r.playing = !1 : (e1 = r.displayIndex % r.numFrames, this.drawingContext.putImageData(r.frames[e1].image, 0, 0), r.displayIndex = e1, this.setModified(!0))));
                            }
                        },
                        {
                            key: "_setProperty",
                            value: function(e1, t) {
                                this[e1] = t, this.setModified(!0);
                            }
                        },
                        {
                            key: "loadPixels",
                            value: function() {
                                s.default.Renderer2D.prototype.loadPixels.call(this), this.setModified(!0);
                            }
                        },
                        {
                            key: "updatePixels",
                            value: function(e1, t, r, o) {
                                s.default.Renderer2D.prototype.updatePixels.call(this, e1, t, r, o), this.setModified(!0);
                            }
                        },
                        {
                            key: "get",
                            value: function(e1, t, r, o) {
                                return s.default._validateParameters("p5.Image.get", arguments), s.default.Renderer2D.prototype.get.apply(this, arguments);
                            }
                        },
                        {
                            key: "_getPixel",
                            value: function() {
                                for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                                return s.default.Renderer2D.prototype._getPixel.apply(this, t);
                            }
                        },
                        {
                            key: "set",
                            value: function(e1, t, r) {
                                s.default.Renderer2D.prototype.set.call(this, e1, t, r), this.setModified(!0);
                            }
                        },
                        {
                            key: "resize",
                            value: function(e1, t) {
                                0 === e1 && 0 === t ? (e1 = this.canvas.width, t = this.canvas.height) : 0 === e1 ? e1 = this.canvas.width * t / this.canvas.height : 0 === t && (t = this.canvas.height * e1 / this.canvas.width), e1 = Math.floor(e1), t = Math.floor(t);
                                var r = document.createElement("canvas");
                                if (r.width = e1, r.height = t, this.gifProperties) for(var o = this.gifProperties, n = 0; n < o.numFrames; n++){
                                    for(var s = this.drawingContext.createImageData(e1, t), i = (d = d = c = u = l = void 0, o.frames[n].image), a = s, l = 0, u = 0; u < a.height; u++)for(var c = 0; c < a.width; c++){
                                        var d = Math.floor(c * i.width / a.width), d = 4 * (Math.floor(u * i.height / a.height) * i.width + d);
                                        a.data[l++] = i.data[d++], a.data[l++] = i.data[d++], a.data[l++] = i.data[d++], a.data[l++] = i.data[+d];
                                    }
                                    o.frames[n].image = s;
                                }
                                r.getContext("2d").drawImage(this.canvas, 0, 0, this.canvas.width, this.canvas.height, 0, 0, r.width, r.height), this.canvas.width = this.width = e1, this.canvas.height = this.height = t, this.drawingContext.drawImage(r, 0, 0, e1, t, 0, 0, e1, t), 0 < this.pixels.length && this.loadPixels(), this.setModified(!0);
                            }
                        },
                        {
                            key: "copy",
                            value: function() {
                                for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                                s.default.prototype.copy.apply(this, t);
                            }
                        },
                        {
                            key: "mask",
                            value: function(e1) {
                                var t = this.drawingContext.globalCompositeOperation, r = 1, o = [
                                    e1 = void 0 === e1 ? this : e1,
                                    0,
                                    0,
                                    (r = e1 instanceof s.default.Renderer ? e1._pInst._pixelDensity : r) * e1.width,
                                    r * e1.height,
                                    0,
                                    0,
                                    this.width,
                                    this.height
                                ];
                                if (this.drawingContext.globalCompositeOperation = "destination-in", this.gifProperties) {
                                    for(var n = 0; n < this.gifProperties.frames.length; n++)this.drawingContext.putImageData(this.gifProperties.frames[n].image, 0, 0), this.copy.apply(this, o), this.gifProperties.frames[n].image = this.drawingContext.getImageData(0, 0, this.width, this.height);
                                    this.drawingContext.putImageData(this.gifProperties.frames[this.gifProperties.displayIndex].image, 0, 0);
                                } else this.copy.apply(this, o);
                                this.drawingContext.globalCompositeOperation = t, this.setModified(!0);
                            }
                        },
                        {
                            key: "filter",
                            value: function(e1, t) {
                                n.default.apply(this.canvas, n.default[e1], t), this.setModified(!0);
                            }
                        },
                        {
                            key: "blend",
                            value: function() {
                                for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                                s.default._validateParameters("p5.Image.blend", arguments), s.default.prototype.blend.apply(this, t), this.setModified(!0);
                            }
                        },
                        {
                            key: "setModified",
                            value: function(e1) {
                                this._modified = e1;
                            }
                        },
                        {
                            key: "isModified",
                            value: function() {
                                return this._modified;
                            }
                        },
                        {
                            key: "save",
                            value: function(e1, t) {
                                this.gifProperties ? s.default.prototype.encodeAndDownloadGif(this, e1) : s.default.prototype.saveCanvas(this.canvas, e1, t);
                            }
                        },
                        {
                            key: "reset",
                            value: function() {
                                var e1;
                                this.gifProperties && ((e1 = this.gifProperties).playing = !0, e1.timeSinceStart = 0, e1.timeDisplayed = 0, e1.lastChangeTime = 0, e1.loopCount = 0, e1.displayIndex = 0, this.drawingContext.putImageData(e1.frames[0].image, 0, 0));
                            }
                        },
                        {
                            key: "getCurrentFrame",
                            value: function() {
                                var e1;
                                if (this.gifProperties) return (e1 = this.gifProperties).displayIndex % e1.numFrames;
                            }
                        },
                        {
                            key: "setFrame",
                            value: function(e1) {
                                var t;
                                this.gifProperties && (e1 < (t = this.gifProperties).numFrames && 0 <= e1 ? (t.timeDisplayed = 0, t.lastChangeTime = 0, t.displayIndex = e1, this.drawingContext.putImageData(t.frames[e1].image, 0, 0)) : console.log("Cannot set GIF to a frame number that is higher than total number of frames or below zero."));
                            }
                        },
                        {
                            key: "numFrames",
                            value: function() {
                                if (this.gifProperties) return this.gifProperties.numFrames;
                            }
                        },
                        {
                            key: "play",
                            value: function() {
                                this.gifProperties && (this.gifProperties.playing = !0);
                            }
                        },
                        {
                            key: "pause",
                            value: function() {
                                this.gifProperties && (this.gifProperties.playing = !1);
                            }
                        },
                        {
                            key: "delay",
                            value: function(e1, t) {
                                if (this.gifProperties) {
                                    var r = this.gifProperties;
                                    if (t < r.numFrames && 0 <= t) r.frames[t].delay = e1;
                                    else {
                                        var o = !0, t = !1, n = void 0;
                                        try {
                                            for(var s, i = r.frames[Symbol.iterator](); !(o = (s = i.next()).done); o = !0)s.value.delay = e1;
                                        } catch (e1) {
                                            t = !0, n = e1;
                                        } finally{
                                            try {
                                                o || null == i.return || i.return();
                                            } finally{
                                                if (t) throw n;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    ], i(e1.prototype, t), o && i(e1, o), r;
                }();
                e1 = s.default.Image;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "./filters": 294,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        298: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.filter"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var h = n(e1("../core/main")), o = n(e1("./filters"));
                function n(e1) {
                    return e1 && e1.__esModule ? e1 : {
                        default: e1
                    };
                }
                e1("../color/p5.Color"), h.default.prototype.pixels = [], h.default.prototype.blend = function() {
                    for(var e1, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    h.default._validateParameters("blend", r), this._renderer ? (e1 = this._renderer).blend.apply(e1, r) : h.default.Renderer2D.prototype.blend.apply(this, r);
                }, h.default.prototype.copy = function() {
                    for(var e1, t, r, o, n, s, i, a, l, u = arguments.length, c = new Array(u), d = 0; d < u; d++)c[d] = arguments[d];
                    if (h.default._validateParameters("copy", c), 9 === c.length) e1 = c[0], t = c[1], r = c[2], o = c[3], n = c[4], s = c[5], i = c[6], a = c[7], l = c[8];
                    else {
                        if (8 !== c.length) throw new Error("Signature not supported");
                        e1 = this, t = c[0], r = c[1], o = c[2], n = c[3], s = c[4], i = c[5], a = c[6], l = c[7];
                    }
                    h.default.prototype._copyHelper(this, e1, t, r, o, n, s, i, a, l);
                }, h.default.prototype._copyHelper = function(e1, t, r, o, n, s, i, a, l, u) {
                    t.loadPixels();
                    var c = t.canvas.width / t.width, d = 0, f = 0;
                    t._renderer && t._renderer.isP3D && (d = t.width / 2, f = t.height / 2), e1._renderer && e1._renderer.isP3D ? h.default.RendererGL.prototype.image.call(e1._renderer, t, r + d, o + f, n, s, i, a, l, u) : e1.drawingContext.drawImage(t.canvas, c * (r + d), c * (o + f), c * n, c * s, i, a, l, u);
                }, h.default.prototype.filter = function(e1, t) {
                    h.default._validateParameters("filter", arguments), void 0 !== this.canvas ? o.default.apply(this.canvas, o.default[e1], t) : o.default.apply(this.elt, o.default[e1], t);
                }, h.default.prototype.get = function(e1, t, r, o) {
                    var n;
                    return h.default._validateParameters("get", arguments), (n = this._renderer).get.apply(n, arguments);
                }, h.default.prototype.loadPixels = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    h.default._validateParameters("loadPixels", t), this._renderer.loadPixels();
                }, h.default.prototype.set = function(e1, t, r) {
                    this._renderer.set(e1, t, r);
                }, h.default.prototype.updatePixels = function(e1, t, r, o) {
                    h.default._validateParameters("updatePixels", arguments), 0 !== this.pixels.length && this._renderer.updatePixels(e1, t, r, o);
                };
                e1 = h.default;
                r.default = e1;
            },
            {
                "../color/p5.Color": 260,
                "../core/main": 273,
                "./filters": 294,
                "core-js/modules/es.array.filter": 155
            }
        ],
        299: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.last-index-of"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.function.name"), e1("core-js/modules/es.object.from-entries"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.promise"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/web.url"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.last-index-of"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.function.name"), e1("core-js/modules/es.object.from-entries"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.promise"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/web.url"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var v = s(e1("../core/main")), m = (e1("whatwg-fetch"), e1("es6-promise/auto"), s(e1("fetch-jsonp"))), n = s(e1("file-saver"));
                function s(e1) {
                    return e1 && e1.__esModule ? e1 : {
                        default: e1
                    };
                }
                function y(e1) {
                    return (y = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                function g(e1) {
                    return e1.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
                }
                function i(e1, t) {
                    t && !0 !== t && "true" !== t || (t = "");
                    var r = "";
                    return (e1 = e1 || "untitled", e1.includes(".")) && (r = e1.split(".").pop()), t && r !== t && (r = t, e1 = "".concat(e1, ".").concat(r)), [
                        e1,
                        r
                    ];
                }
                e1("../core/friendly_errors/validate_params"), e1("../core/friendly_errors/file_errors"), e1("../core/friendly_errors/fes_core"), v.default.prototype.loadJSON = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    v.default._validateParameters("loadJSON", t);
                    for(var o, n, s, i = t[0], a = {}, l = "json", u = 1; u < t.length; u++){
                        var c = t[u];
                        "string" == typeof c ? "jsonp" !== c && "json" !== c || (l = c) : "function" == typeof c ? o ? n = c : o = c : "object" === y(c) && (c.hasOwnProperty("jsonpCallback") || c.hasOwnProperty("jsonpCallbackFunction")) && (l = "jsonp", s = c);
                    }
                    var d = this;
                    return this.httpDo(i, "GET", s, l, function(e1) {
                        for(var t in e1)a[t] = e1[t];
                        void 0 !== o && o(e1), d._decrementPreload();
                    }, function(e1) {
                        if (v.default._friendlyFileLoadError(5, i), !n) throw e1;
                        n(e1);
                    }), a;
                }, v.default.prototype.loadStrings = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    v.default._validateParameters("loadStrings", t);
                    for(var n, o, s = [], i = 1; i < t.length; i++){
                        var a = t[i];
                        "function" == typeof a && (void 0 === n ? n = a : void 0 === o && (o = a));
                    }
                    var l = this;
                    return v.default.prototype.httpDo.call(this, t[0], "GET", "text", function(e1) {
                        for(var t = e1.replace(/\r\n/g, "\r").replace(/\n/g, "\r").split(/\r/), r = 0, o = t.length; r < o; r += 32768)Array.prototype.push.apply(s, t.slice(r, Math.min(r + 32768, o)));
                        void 0 !== n && n(s), l._decrementPreload();
                    }, function(e1) {
                        if (v.default._friendlyFileLoadError(3, e1), !o) throw e1;
                        o(e1);
                    }), s;
                }, v.default.prototype.loadTable = function(t) {
                    var h, r, p, e1 = [], m = !1, o = t.substring(t.lastIndexOf(".") + 1, t.length);
                    "csv" === o ? p = "," : "ssv" === o ? p = ";" : "tsv" === o && (p = "	");
                    for(var n = 1; n < arguments.length; n++)"function" == typeof arguments[n] ? void 0 === h ? h = arguments[n] : void 0 === r && (r = arguments[n]) : "string" == typeof arguments[n] && (e1.push(arguments[n]), "header" === arguments[n] && (m = !0), "csv" === arguments[n] ? p = "," : "ssv" === arguments[n] ? p = ";" : "tsv" === arguments[n] && (p = "	"));
                    var y = new v.default.Table, g = this;
                    return this.httpDo(t, "GET", "table", function(e1) {
                        for(var t, r, o = {}, n = 0, s = [], i = 0, a = null, l = function() {
                            o.currentState = n, o.token = "";
                        }, u = function() {
                            a.push(o.token), l();
                        }, c = function() {
                            o.currentState = 4, s.push(a), a = null;
                        };;){
                            if (null == (t = e1[i++])) {
                                if (o.escaped) throw new Error("Unclosed quote in file.");
                                if (a) {
                                    u(), c();
                                    break;
                                }
                            }
                            if (null === a && (o.escaped = !1, a = [], l()), o.currentState === n) {
                                if ('"' === t) {
                                    o.escaped = !0, o.currentState = 1;
                                    continue;
                                }
                                o.currentState = 1;
                            }
                            if (1 === o.currentState && o.escaped) {
                                if ('"' === t) '"' === e1[i] ? (o.token += '"', i++) : (o.escaped = !1, o.currentState = 2);
                                else {
                                    if ("\r" === t) continue;
                                    o.token += t;
                                }
                            } else "\r" === t ? ("\n" === e1[i] && i++, u(), c()) : "\n" === t ? (u(), c()) : t === p ? u() : 1 === o.currentState && (o.token += t);
                        }
                        if (m) y.columns = s.shift();
                        else for(var d = 0; d < s[0].length; d++)y.columns[d] = "null";
                        for(var f = 0; f < s.length; f++)(1 !== s[f].length || "undefined" !== s[f][0] && "" !== s[f][0]) && ((r = new v.default.TableRow).arr = s[f], r.obj = function(r, e1) {
                            if (void 0 === (e1 = e1 || [])) for(var t = 0; t < r.length; t++)e1[t.toString()] = t;
                            return Object.fromEntries(e1.map(function(e1, t) {
                                return [
                                    e1,
                                    r[t]
                                ];
                            }));
                        }(s[f], y.columns), y.addRow(r));
                        "function" == typeof h && h(y), g._decrementPreload();
                    }, function(e1) {
                        v.default._friendlyFileLoadError(2, t), r ? r(e1) : console.error(e1);
                    }), y;
                }, v.default.prototype.loadXML = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    for(var o, n, s = new v.default.XML, i = 1; i < t.length; i++){
                        var a = t[i];
                        "function" == typeof a && (void 0 === o ? o = a : void 0 === n && (n = a));
                    }
                    var l = this;
                    return this.httpDo(t[0], "GET", "xml", function(e1) {
                        for(var t in e1)s[t] = e1[t];
                        void 0 !== o && o(s), l._decrementPreload();
                    }, function(e1) {
                        if (v.default._friendlyFileLoadError(1, e1), !n) throw e1;
                        n(e1);
                    }), s;
                }, v.default.prototype.loadBytes = function(t, r, o) {
                    var n = {}, s = this;
                    return this.httpDo(t, "GET", "arrayBuffer", function(e1) {
                        n.bytes = new Uint8Array(e1), "function" == typeof r && r(n), s._decrementPreload();
                    }, function(e1) {
                        if (v.default._friendlyFileLoadError(6, t), !o) throw e1;
                        o(e1);
                    }), n;
                }, v.default.prototype.httpGet = function() {
                    v.default._validateParameters("httpGet", arguments);
                    var e1 = Array.prototype.slice.call(arguments);
                    return e1.splice(1, 0, "GET"), v.default.prototype.httpDo.apply(this, e1);
                }, v.default.prototype.httpPost = function() {
                    v.default._validateParameters("httpPost", arguments);
                    var e1 = Array.prototype.slice.call(arguments);
                    return e1.splice(1, 0, "POST"), v.default.prototype.httpDo.apply(this, e1);
                }, v.default.prototype.httpDo = function() {
                    for(var r, e1, t, o = {}, n = 0, s = "text/plain", i = arguments.length - 1; 0 < i && "function" == typeof (i < 0 || arguments.length <= i ? void 0 : arguments[i]); i--)n++;
                    var a = arguments.length - n, l = arguments.length <= 0 ? void 0 : arguments[0];
                    if (2 == a && "string" == typeof l && "object" === y(arguments.length <= 1 ? void 0 : arguments[1])) p = new Request(l, arguments.length <= 1 ? void 0 : arguments[1]), e1 = arguments.length <= 2 ? void 0 : arguments[2], t = arguments.length <= 3 ? void 0 : arguments[3];
                    else {
                        for(var u, c = "GET", d = 1; d < arguments.length; d++){
                            var f = d < 0 || arguments.length <= d ? void 0 : arguments[d];
                            if ("string" == typeof f) "GET" === f || "POST" === f || "PUT" === f || "DELETE" === f ? c = f : "json" === f || "jsonp" === f || "binary" === f || "arrayBuffer" === f || "xml" === f || "text" === f || "table" === f ? r = f : u = f;
                            else if ("number" == typeof f) u = f.toString();
                            else if ("object" === y(f)) {
                                if (f.hasOwnProperty("jsonpCallback") || f.hasOwnProperty("jsonpCallbackFunction")) for(var h in f)o[h] = f[h];
                                else s = f instanceof v.default.XML ? (u = f.serialize(), "application/xml") : (u = JSON.stringify(f), "application/json");
                            } else "function" == typeof f && (e1 ? t = f : e1 = f);
                        }
                        var a = "GET" === c ? new Headers : new Headers({
                            "Content-Type": s
                        }), p = new Request(l, {
                            method: c,
                            mode: "cors",
                            body: u,
                            headers: a
                        });
                    }
                    return (a = (a = "jsonp" === (r = r || (l.includes("json") ? "json" : l.includes("xml") ? "xml" : "text")) ? (0, m.default)(l, o) : fetch(p)).then(function(e1) {
                        if (!e1.ok) throw (t = new Error(e1.body)).status = e1.status, t.ok = !1, t;
                        var t = 0;
                        switch((t = "jsonp" !== r ? e1.headers.get("content-length") : t) && 64e6 < t && v.default._friendlyFileLoadError(7, l), r){
                            case "json":
                            case "jsonp":
                                return e1.json();
                            case "binary":
                                return e1.blob();
                            case "arrayBuffer":
                                return e1.arrayBuffer();
                            case "xml":
                                return e1.text().then(function(e1) {
                                    e1 = (new DOMParser).parseFromString(e1, "text/xml");
                                    return new v.default.XML(e1.documentElement);
                                });
                            default:
                                return e1.text();
                        }
                    })).then(e1 || function() {}), a.catch(t || console.error), a;
                }, window.URL = window.URL || window.webkitURL, v.default.prototype._pWriters = [], v.default.prototype.createWriter = function(e1, t) {
                    var r, o;
                    for(o in v.default.prototype._pWriters)if (v.default.prototype._pWriters[o].name === e1) return r = new v.default.PrintWriter(e1 + this.millis(), t), v.default.prototype._pWriters.push(r), r;
                    return r = new v.default.PrintWriter(e1, t), v.default.prototype._pWriters.push(r), r;
                }, v.default.PrintWriter = function(r, o) {
                    var n = this;
                    this.name = r, this.content = "", this.write = function(e1) {
                        this.content += e1;
                    }, this.print = function(e1) {
                        this.content += "".concat(e1, "\n");
                    }, this.clear = function() {
                        this.content = "";
                    }, this.close = function() {
                        var e1, t = [];
                        for(e1 in t.push(this.content), v.default.prototype.writeFile(t, r, o), v.default.prototype._pWriters)v.default.prototype._pWriters[e1].name === this.name && v.default.prototype._pWriters.splice(e1, 1);
                        n.clear(), n = {};
                    };
                }, v.default.prototype.save = function(e1, t, r) {
                    var o = arguments, n = (this._curElement || this).elt;
                    if (0 === o.length) v.default.prototype.saveCanvas(n);
                    else if (o[0] instanceof v.default.Renderer || o[0] instanceof v.default.Graphics) v.default.prototype.saveCanvas(o[0].elt, o[1], o[2]);
                    else if (1 === o.length && "string" == typeof o[0]) v.default.prototype.saveCanvas(n, o[0]);
                    else switch(i(o[1], o[2])[1]){
                        case "json":
                            return void v.default.prototype.saveJSON(o[0], o[1], o[2]);
                        case "txt":
                            return void v.default.prototype.saveStrings(o[0], o[1], o[2]);
                        default:
                            o[0] instanceof Array ? v.default.prototype.saveStrings(o[0], o[1], o[2]) : o[0] instanceof v.default.Table ? v.default.prototype.saveTable(o[0], o[1], o[2]) : o[0] instanceof v.default.Image ? v.default.prototype.saveCanvas(o[0].canvas, o[1]) : o[0] instanceof v.default.SoundFile && v.default.prototype.saveSound(o[0], o[1], o[2], o[3]);
                    }
                }, v.default.prototype.saveJSON = function(e1, t, r) {
                    v.default._validateParameters("saveJSON", arguments), r = r ? JSON.stringify(e1) : JSON.stringify(e1, void 0, 2), this.saveStrings(r.split("\n"), t, "json");
                }, v.default.prototype.saveJSONObject = v.default.prototype.saveJSON, v.default.prototype.saveJSONArray = v.default.prototype.saveJSON, v.default.prototype.saveStrings = function(e1, t, r, o) {
                    v.default._validateParameters("saveStrings", arguments);
                    for(var n = this.createWriter(t, r || "txt"), s = 0; s < e1.length; s++)o ? n.write(e1[s] + "\r\n") : n.write(e1[s] + "\n");
                    n.close(), n.clear();
                }, v.default.prototype.saveTable = function(e1, t, r) {
                    v.default._validateParameters("saveTable", arguments), o = void 0 === r ? t.substring(t.lastIndexOf(".") + 1, t.length) : r;
                    var o, n = this.createWriter(t, o), s = e1.columns, i = "tsv" === o ? "	" : ",";
                    if ("html" !== o) {
                        if ("0" !== s[0]) {
                            for(var a = 0; a < s.length; a++)a < s.length - 1 ? n.write(s[a] + i) : n.write(s[a]);
                            n.write("\n");
                        }
                        for(var l = 0; l < e1.rows.length; l++){
                            for(var u = void 0, u = 0; u < e1.rows[l].arr.length; u++)u < e1.rows[l].arr.length - 1 ? "csv" === o && String(e1.rows[l].arr[u]).includes(",") ? n.write('"' + e1.rows[l].arr[u] + '"' + i) : n.write(e1.rows[l].arr[u] + i) : "csv" === o && String(e1.rows[l].arr[u]).includes(",") ? n.write('"' + e1.rows[l].arr[u] + '"') : n.write(e1.rows[l].arr[u]);
                            n.write("\n");
                        }
                    } else {
                        n.print("<html>"), n.print("<head>");
                        if (n.print('  <meta http-equiv="content-type" content="text/html;charset=utf-8" />'), n.print("</head>"), n.print("<body>"), n.print("  <table>"), "0" !== s[0]) {
                            n.print("    <tr>");
                            for(var c = 0; c < s.length; c++){
                                var d = g(s[c]);
                                n.print("      <td>".concat(d)), n.print("      </td>");
                            }
                            n.print("    </tr>");
                        }
                        for(var f = 0; f < e1.rows.length; f++){
                            n.print("    <tr>");
                            for(var h = 0; h < e1.columns.length; h++){
                                var p = g(e1.rows[f].getString(h));
                                n.print("      <td>".concat(p)), n.print("      </td>");
                            }
                            n.print("    </tr>");
                        }
                        n.print("  </table>"), n.print("</body>"), n.print("</html>");
                    }
                    n.close(), n.clear();
                }, v.default.prototype.writeFile = function(e1, t, r) {
                    var o = "application/octet-stream", e1 = (v.default.prototype._isSafari() && (o = "text/plain"), new Blob(e1, {
                        type: o
                    }));
                    v.default.prototype.downloadFile(e1, t, r);
                }, v.default.prototype.downloadFile = function(e1, t, r) {
                    var o, t = i(t, r), r = t[0];
                    e1 instanceof Blob ? n.default.saveAs(e1, r) : ((o = document.createElement("a")).href = e1, o.download = r, o.onclick = function(e1) {
                        document.body.removeChild(e1.target), e1.stopPropagation();
                    }, o.style.display = "none", document.body.appendChild(o), v.default.prototype._isSafari() && (e1 = (e1 = 'Hello, Safari user! To download this file...\n1. Go to File --> Save As.\n2. Choose "Page Source" as the Format.\n') + '3. Name it with this extension: ."'.concat(t[1], '"'), alert(e1)), o.click());
                }, v.default.prototype._checkFileExtension = i, v.default.prototype._isSafari = function() {
                    return 0 < Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor");
                };
                e1 = v.default;
                r.default = e1;
            },
            {
                "../core/friendly_errors/fes_core": 264,
                "../core/friendly_errors/file_errors": 265,
                "../core/friendly_errors/validate_params": 268,
                "../core/main": 273,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.array.index-of": 159,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.last-index-of": 162,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.array.splice": 166,
                "core-js/modules/es.function.name": 167,
                "core-js/modules/es.object.from-entries": 175,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.promise": 181,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.includes": 189,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.replace": 194,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.typed-array.copy-within": 203,
                "core-js/modules/es.typed-array.every": 204,
                "core-js/modules/es.typed-array.fill": 205,
                "core-js/modules/es.typed-array.filter": 206,
                "core-js/modules/es.typed-array.find": 208,
                "core-js/modules/es.typed-array.find-index": 207,
                "core-js/modules/es.typed-array.for-each": 211,
                "core-js/modules/es.typed-array.includes": 212,
                "core-js/modules/es.typed-array.index-of": 213,
                "core-js/modules/es.typed-array.iterator": 216,
                "core-js/modules/es.typed-array.join": 217,
                "core-js/modules/es.typed-array.last-index-of": 218,
                "core-js/modules/es.typed-array.map": 219,
                "core-js/modules/es.typed-array.reduce": 221,
                "core-js/modules/es.typed-array.reduce-right": 220,
                "core-js/modules/es.typed-array.reverse": 222,
                "core-js/modules/es.typed-array.set": 223,
                "core-js/modules/es.typed-array.slice": 224,
                "core-js/modules/es.typed-array.some": 225,
                "core-js/modules/es.typed-array.sort": 226,
                "core-js/modules/es.typed-array.subarray": 227,
                "core-js/modules/es.typed-array.to-locale-string": 228,
                "core-js/modules/es.typed-array.to-string": 229,
                "core-js/modules/es.typed-array.uint8-array": 232,
                "core-js/modules/web.dom-collections.iterator": 236,
                "core-js/modules/web.url": 238,
                "es6-promise/auto": 239,
                "fetch-jsonp": 241,
                "file-saver": 242,
                "whatwg-fetch": 251
            }
        ],
        300: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.regexp.constructor"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.match"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.regexp.constructor"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.match"), e1("core-js/modules/es.string.replace"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function s(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                n.default.Table = function() {
                    function t(e1) {
                        if (!(this instanceof t)) throw new TypeError("Cannot call a class as a function");
                        this.columns = [], this.rows = [];
                    }
                    var e1, r, o;
                    return e1 = t, r = [
                        {
                            key: "addRow",
                            value: function(e1) {
                                e1 = e1 || new n.default.TableRow;
                                if (void 0 === e1.arr || void 0 === e1.obj) throw new Error("invalid TableRow: ".concat(e1));
                                return (e1.table = this).rows.push(e1), e1;
                            }
                        },
                        {
                            key: "removeRow",
                            value: function(e1) {
                                this.rows[e1].table = null;
                                e1 = this.rows.splice(e1 + 1, this.rows.length);
                                this.rows.pop(), this.rows = this.rows.concat(e1);
                            }
                        },
                        {
                            key: "getRow",
                            value: function(e1) {
                                return this.rows[e1];
                            }
                        },
                        {
                            key: "getRows",
                            value: function() {
                                return this.rows;
                            }
                        },
                        {
                            key: "findRow",
                            value: function(e1, t) {
                                if ("string" == typeof t) {
                                    for(var r = 0; r < this.rows.length; r++)if (this.rows[r].obj[t] === e1) return this.rows[r];
                                } else for(var o = 0; o < this.rows.length; o++)if (this.rows[o].arr[t] === e1) return this.rows[o];
                                return null;
                            }
                        },
                        {
                            key: "findRows",
                            value: function(e1, t) {
                                var r = [];
                                if ("string" == typeof t) for(var o = 0; o < this.rows.length; o++)this.rows[o].obj[t] === e1 && r.push(this.rows[o]);
                                else for(var n = 0; n < this.rows.length; n++)this.rows[n].arr[t] === e1 && r.push(this.rows[n]);
                                return r;
                            }
                        },
                        {
                            key: "matchRow",
                            value: function(e1, t) {
                                if ("number" == typeof t) {
                                    for(var r = 0; r < this.rows.length; r++)if (this.rows[r].arr[t].match(e1)) return this.rows[r];
                                } else for(var o = 0; o < this.rows.length; o++)if (this.rows[o].obj[t].match(e1)) return this.rows[o];
                                return null;
                            }
                        },
                        {
                            key: "matchRows",
                            value: function(e1, t) {
                                var r = [];
                                if ("number" == typeof t) for(var o = 0; o < this.rows.length; o++)this.rows[o].arr[t].match(e1) && r.push(this.rows[o]);
                                else for(var n = 0; n < this.rows.length; n++)this.rows[n].obj[t].match(e1) && r.push(this.rows[n]);
                                return r;
                            }
                        },
                        {
                            key: "getColumn",
                            value: function(e1) {
                                var t = [];
                                if ("string" == typeof e1) for(var r = 0; r < this.rows.length; r++)t.push(this.rows[r].obj[e1]);
                                else for(var o = 0; o < this.rows.length; o++)t.push(this.rows[o].arr[e1]);
                                return t;
                            }
                        },
                        {
                            key: "clearRows",
                            value: function() {
                                delete this.rows, this.rows = [];
                            }
                        },
                        {
                            key: "addColumn",
                            value: function(e1) {
                                this.columns.push(e1 || null);
                            }
                        },
                        {
                            key: "getColumnCount",
                            value: function() {
                                return this.columns.length;
                            }
                        },
                        {
                            key: "getRowCount",
                            value: function() {
                                return this.rows.length;
                            }
                        },
                        {
                            key: "removeTokens",
                            value: function(e1, t) {
                                for(var r = [], o = 0; o < e1.length; o++)r.push(e1.charAt(o).replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&"));
                                var n = new RegExp(r.join("|"), "g");
                                if (void 0 === t) for(var s = 0; s < this.columns.length; s++)for(var i = 0; i < this.rows.length; i++){
                                    var a = (a = this.rows[i].arr[s]).replace(n, "");
                                    this.rows[i].arr[s] = a, this.rows[i].obj[this.columns[s]] = a;
                                }
                                else if ("string" == typeof t) for(var l = 0; l < this.rows.length; l++){
                                    var u = (u = this.rows[l].obj[t]).replace(n, ""), c = (this.rows[l].obj[t] = u, this.columns.indexOf(t));
                                    this.rows[l].arr[c] = u;
                                }
                                else for(var d = 0; d < this.rows.length; d++){
                                    var f = (f = this.rows[d].arr[t]).replace(n, "");
                                    this.rows[d].arr[t] = f, this.rows[d].obj[this.columns[t]] = f;
                                }
                            }
                        },
                        {
                            key: "trim",
                            value: function(e1) {
                                var t = new RegExp(" ", "g");
                                if (void 0 === e1) for(var r = 0; r < this.columns.length; r++)for(var o = 0; o < this.rows.length; o++){
                                    var n = (n = this.rows[o].arr[r]).replace(t, "");
                                    this.rows[o].arr[r] = n, this.rows[o].obj[this.columns[r]] = n;
                                }
                                else if ("string" == typeof e1) for(var s = 0; s < this.rows.length; s++){
                                    var i = (i = this.rows[s].obj[e1]).replace(t, ""), a = (this.rows[s].obj[e1] = i, this.columns.indexOf(e1));
                                    this.rows[s].arr[a] = i;
                                }
                                else for(var l = 0; l < this.rows.length; l++){
                                    var u = (u = this.rows[l].arr[e1]).replace(t, "");
                                    this.rows[l].arr[e1] = u, this.rows[l].obj[this.columns[e1]] = u;
                                }
                            }
                        },
                        {
                            key: "removeColumn",
                            value: function(e1) {
                                "string" == typeof e1 ? r = this.columns.indexOf(t = e1) : t = this.columns[r = e1];
                                var t, r, e1 = this.columns.splice(r + 1, this.columns.length);
                                this.columns.pop(), this.columns = this.columns.concat(e1);
                                for(var o = 0; o < this.rows.length; o++){
                                    var n = this.rows[o].arr, s = n.splice(r + 1, n.length);
                                    n.pop(), this.rows[o].arr = n.concat(s), delete this.rows[o].obj[t];
                                }
                            }
                        },
                        {
                            key: "set",
                            value: function(e1, t, r) {
                                this.rows[e1].set(t, r);
                            }
                        },
                        {
                            key: "setNum",
                            value: function(e1, t, r) {
                                this.rows[e1].setNum(t, r);
                            }
                        },
                        {
                            key: "setString",
                            value: function(e1, t, r) {
                                this.rows[e1].setString(t, r);
                            }
                        },
                        {
                            key: "get",
                            value: function(e1, t) {
                                return this.rows[e1].get(t);
                            }
                        },
                        {
                            key: "getNum",
                            value: function(e1, t) {
                                return this.rows[e1].getNum(t);
                            }
                        },
                        {
                            key: "getString",
                            value: function(e1, t) {
                                return this.rows[e1].getString(t);
                            }
                        },
                        {
                            key: "getObject",
                            value: function(e1) {
                                for(var t, r = {}, o = 0; o < this.rows.length; o++)if (t = this.rows[o].obj, "string" == typeof e1) {
                                    if (!(0 <= this.columns.indexOf(e1))) throw new Error('This table has no column named "'.concat(e1, '"'));
                                    r[t[e1]] = t;
                                } else r[o] = this.rows[o].obj;
                                return r;
                            }
                        },
                        {
                            key: "getArray",
                            value: function() {
                                for(var e1 = [], t = 0; t < this.rows.length; t++)e1.push(this.rows[t].arr);
                                return e1;
                            }
                        }
                    ], s(e1.prototype, r), o && s(e1, o), t;
                }();
                e1 = n.default;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.index-of": 159,
                "core-js/modules/es.array.join": 161,
                "core-js/modules/es.array.splice": 166,
                "core-js/modules/es.regexp.constructor": 184,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.match": 191,
                "core-js/modules/es.string.replace": 194
            }
        ],
        301: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.from-entries"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.split"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.from-entries"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.split"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e1 = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function n(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                e1.default.TableRow = function() {
                    function o(e1, t) {
                        if (!(this instanceof o)) throw new TypeError("Cannot call a class as a function");
                        var r = [];
                        e1 && (r = e1.split(t = t || ",")), this.arr = r, this.obj = Object.fromEntries(r.entries()), this.table = null;
                    }
                    var e1, t, r;
                    return e1 = o, t = [
                        {
                            key: "set",
                            value: function(e1, t) {
                                if ("string" == typeof e1) {
                                    var r = this.table.columns.indexOf(e1);
                                    if (!(0 <= r)) throw new Error('This table has no column named "'.concat(e1, '"'));
                                    this.obj[e1] = t, this.arr[r] = t;
                                } else {
                                    if (!(e1 < this.table.columns.length)) throw new Error("Column #".concat(e1, " is out of the range of this table"));
                                    this.arr[e1] = t;
                                    r = this.table.columns[e1];
                                    this.obj[r] = t;
                                }
                            }
                        },
                        {
                            key: "setNum",
                            value: function(e1, t) {
                                t = parseFloat(t);
                                this.set(e1, t);
                            }
                        },
                        {
                            key: "setString",
                            value: function(e1, t) {
                                t = t.toString();
                                this.set(e1, t);
                            }
                        },
                        {
                            key: "get",
                            value: function(e1) {
                                return ("string" == typeof e1 ? this.obj : this.arr)[e1];
                            }
                        },
                        {
                            key: "getNum",
                            value: function(e1) {
                                var t = "string" == typeof e1 ? parseFloat(this.obj[e1]) : parseFloat(this.arr[e1]);
                                if ("NaN" === t.toString()) throw "Error: ".concat(this.obj[e1], " is NaN (Not a Number)");
                                return t;
                            }
                        },
                        {
                            key: "getString",
                            value: function(e1) {
                                return ("string" == typeof e1 ? this.obj : this.arr)[e1].toString();
                            }
                        }
                    ], n(e1.prototype, t), r && n(e1, r), o;
                }();
                e1 = e1.default;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.index-of": 159,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.from-entries": 175,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        302: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.number.constructor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.number.constructor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function n(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                function s(e1) {
                    for(var t = [], r = 0; r < e1.length; r++)t.push(new a.default.XML(e1[r]));
                    return t;
                }
                a.default.XML = function() {
                    function t(e1) {
                        if (!(this instanceof t)) throw new TypeError("Cannot call a class as a function");
                        e1 ? this.DOM = e1 : (e1 = document.implementation.createDocument(null, "doc"), this.DOM = e1.createElement("root"));
                    }
                    var e1, r, o;
                    return e1 = t, r = [
                        {
                            key: "getParent",
                            value: function() {
                                return new a.default.XML(this.DOM.parentElement);
                            }
                        },
                        {
                            key: "getName",
                            value: function() {
                                return this.DOM.tagName;
                            }
                        },
                        {
                            key: "setName",
                            value: function(e1) {
                                var t = this.DOM.innerHTML, r = this.DOM.attributes, o = document.implementation.createDocument(null, "default").createElement(e1);
                                o.innerHTML = t;
                                for(var n = 0; n < r.length; n++)o.setAttribute(r[n].nodeName, r.nodeValue);
                                this.DOM = o;
                            }
                        },
                        {
                            key: "hasChildren",
                            value: function() {
                                return 0 < this.DOM.children.length;
                            }
                        },
                        {
                            key: "listChildren",
                            value: function() {
                                for(var e1 = [], t = 0; t < this.DOM.childNodes.length; t++)e1.push(this.DOM.childNodes[t].nodeName);
                                return e1;
                            }
                        },
                        {
                            key: "getChildren",
                            value: function(e1) {
                                return s(e1 ? this.DOM.getElementsByTagName(e1) : this.DOM.children);
                            }
                        },
                        {
                            key: "getChild",
                            value: function(e1) {
                                if ("string" != typeof e1) return new a.default.XML(this.DOM.children[e1]);
                                var t = !0, r = !1, o = void 0;
                                try {
                                    for(var n, s = this.DOM.children[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                                        var i = n.value;
                                        if (i.tagName === e1) return new a.default.XML(i);
                                    }
                                } catch (e1) {
                                    r = !0, o = e1;
                                } finally{
                                    try {
                                        t || null == s.return || s.return();
                                    } finally{
                                        if (r) throw o;
                                    }
                                }
                            }
                        },
                        {
                            key: "addChild",
                            value: function(e1) {
                                e1 instanceof a.default.XML && this.DOM.appendChild(e1.DOM);
                            }
                        },
                        {
                            key: "removeChild",
                            value: function(e1) {
                                var t = -1;
                                if ("string" == typeof e1) {
                                    for(var r = 0; r < this.DOM.children.length; r++)if (this.DOM.children[r].tagName === e1) {
                                        t = r;
                                        break;
                                    }
                                } else t = e1;
                                -1 !== t && this.DOM.removeChild(this.DOM.children[t]);
                            }
                        },
                        {
                            key: "getAttributeCount",
                            value: function() {
                                return this.DOM.attributes.length;
                            }
                        },
                        {
                            key: "listAttributes",
                            value: function() {
                                var e1 = [], t = !0, r = !1, o = void 0;
                                try {
                                    for(var n, s = this.DOM.attributes[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                                        var i = n.value;
                                        e1.push(i.nodeName);
                                    }
                                } catch (e1) {
                                    r = !0, o = e1;
                                } finally{
                                    try {
                                        t || null == s.return || s.return();
                                    } finally{
                                        if (r) throw o;
                                    }
                                }
                                return e1;
                            }
                        },
                        {
                            key: "hasAttribute",
                            value: function(e1) {
                                var t = {}, r = !0, o = !1, n = void 0;
                                try {
                                    for(var s, i = this.DOM.attributes[Symbol.iterator](); !(r = (s = i.next()).done); r = !0){
                                        var a = s.value;
                                        t[a.nodeName] = a.nodeValue;
                                    }
                                } catch (e1) {
                                    o = !0, n = e1;
                                } finally{
                                    try {
                                        r || null == i.return || i.return();
                                    } finally{
                                        if (o) throw n;
                                    }
                                }
                                return !!t[e1];
                            }
                        },
                        {
                            key: "getNum",
                            value: function(e1, t) {
                                var r = {}, o = !0, n = !1, s = void 0;
                                try {
                                    for(var i, a = this.DOM.attributes[Symbol.iterator](); !(o = (i = a.next()).done); o = !0){
                                        var l = i.value;
                                        r[l.nodeName] = l.nodeValue;
                                    }
                                } catch (e1) {
                                    n = !0, s = e1;
                                } finally{
                                    try {
                                        o || null == a.return || a.return();
                                    } finally{
                                        if (n) throw s;
                                    }
                                }
                                return Number(r[e1]) || t || 0;
                            }
                        },
                        {
                            key: "getString",
                            value: function(e1, t) {
                                var r = {}, o = !0, n = !1, s = void 0;
                                try {
                                    for(var i, a = this.DOM.attributes[Symbol.iterator](); !(o = (i = a.next()).done); o = !0){
                                        var l = i.value;
                                        r[l.nodeName] = l.nodeValue;
                                    }
                                } catch (e1) {
                                    n = !0, s = e1;
                                } finally{
                                    try {
                                        o || null == a.return || a.return();
                                    } finally{
                                        if (n) throw s;
                                    }
                                }
                                return r[e1] ? String(r[e1]) : t || null;
                            }
                        },
                        {
                            key: "setAttribute",
                            value: function(e1, t) {
                                this.DOM.setAttribute(e1, t);
                            }
                        },
                        {
                            key: "getContent",
                            value: function(e1) {
                                var t = this.DOM.textContent;
                                return (t = t.replace(/\s\s+/g, ",")) || e1 || null;
                            }
                        },
                        {
                            key: "setContent",
                            value: function(e1) {
                                this.DOM.children.length || (this.DOM.textContent = e1);
                            }
                        },
                        {
                            key: "serialize",
                            value: function() {
                                return (new XMLSerializer).serializeToString(this.DOM);
                            }
                        }
                    ], n(e1.prototype, r), o && n(e1, o), t;
                }();
                e1 = a.default;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.number.constructor": 171,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.replace": 194,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        303: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.math.hypot"), e1("core-js/modules/es.number.constructor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.math.hypot"), e1("core-js/modules/es.number.constructor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var i = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function o() {
                    if ("function" == typeof Math.hypot) return Math.hypot.apply(null, arguments);
                    for(var e1 = arguments.length, t = [], r = 0, o = 0; o < e1; o++){
                        var n = arguments[o];
                        if ((n = +n) === 1 / 0 || n === -1 / 0) return 1 / 0;
                        r < (n = Math.abs(n)) && (r = n), t[o] = n;
                    }
                    0 === r && (r = 1);
                    for(var s = 0, i = 0, a = 0; a < e1; a++)var l = t[a] / r, l = l * l - i, u = s + l, i = u - s - l, s = u;
                    return Math.sqrt(s) * r;
                }
                i.default.prototype.abs = Math.abs, i.default.prototype.ceil = Math.ceil, i.default.prototype.constrain = function(e1, t, r) {
                    return i.default._validateParameters("constrain", arguments), Math.max(Math.min(e1, r), t);
                }, i.default.prototype.dist = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    return i.default._validateParameters("dist", t), 4 === t.length ? o(t[2] - t[0], t[3] - t[1]) : 6 === t.length ? o(t[3] - t[0], t[4] - t[1], t[5] - t[2]) : void 0;
                }, i.default.prototype.exp = Math.exp, i.default.prototype.floor = Math.floor, i.default.prototype.lerp = function(e1, t, r) {
                    return i.default._validateParameters("lerp", arguments), r * (t - e1) + e1;
                }, i.default.prototype.log = Math.log, i.default.prototype.mag = function(e1, t) {
                    return i.default._validateParameters("mag", arguments), o(e1, t);
                }, i.default.prototype.map = function(e1, t, r, o, n, s) {
                    i.default._validateParameters("map", arguments);
                    e1 = (e1 - t) / (r - t) * (n - o) + o;
                    return s ? o < n ? this.constrain(e1, o, n) : this.constrain(e1, n, o) : e1;
                }, i.default.prototype.max = function() {
                    for(var e1 = function(e1) {
                        var t = -1 / 0, r = !0, o = !1, n = void 0;
                        try {
                            for(var s, i = e1[Symbol.iterator](); !(r = (s = i.next()).done); r = !0)var a = s.value, t = t < a ? a : t;
                        } catch (e1) {
                            o = !0, n = e1;
                        } finally{
                            try {
                                r || null == i.return || i.return();
                            } finally{
                                if (o) throw n;
                            }
                        }
                        return t;
                    }, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return r[0] instanceof Array ? e1(r[0]) : e1(r);
                }, i.default.prototype.min = function() {
                    for(var e1 = function(e1) {
                        var t = 1 / 0, r = !0, o = !1, n = void 0;
                        try {
                            for(var s, i = e1[Symbol.iterator](); !(r = (s = i.next()).done); r = !0)var a = s.value, t = a < t ? a : t;
                        } catch (e1) {
                            o = !0, n = e1;
                        } finally{
                            try {
                                r || null == i.return || i.return();
                            } finally{
                                if (o) throw n;
                            }
                        }
                        return t;
                    }, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return r[0] instanceof Array ? e1(r[0]) : e1(r);
                }, i.default.prototype.norm = function(e1, t, r) {
                    return i.default._validateParameters("norm", arguments), this.map(e1, t, r, 0, 1);
                }, i.default.prototype.pow = Math.pow, i.default.prototype.round = function(e1, t) {
                    return t ? (t = Math.pow(10, t), Math.round(e1 * t) / t) : Math.round(e1);
                }, i.default.prototype.sq = function(e1) {
                    return e1 * e1;
                }, i.default.prototype.sqrt = Math.sqrt, i.default.prototype.fract = function(e1) {
                    i.default._validateParameters("fract", arguments);
                    var t, r = 0, e1 = Number(e1);
                    return isNaN(e1) || Math.abs(e1) === 1 / 0 ? e1 : (e1 < 0 && (e1 = -e1, r = 1), String(e1).includes(".") && !String(e1).includes("e") ? (t = String(e1), t = Number("0" + t.slice(t.indexOf("."))), Math.abs(r - t)) : e1 < 1 ? Math.abs(r - e1) : 0);
                };
                e1 = i.default;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.array.index-of": 159,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.math.hypot": 169,
                "core-js/modules/es.number.constructor": 171,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.includes": 189,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        304: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.regexp.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var o = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function n(e1, t, r) {
                    return (n = function() {
                        if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                            if ("function" == typeof Proxy) return 1;
                            try {
                                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), 1;
                            } catch (e1) {}
                        }
                    }() ? Reflect.construct : function(e1, t, r) {
                        var o = [
                            null
                        ];
                        o.push.apply(o, t);
                        t = new (Function.bind.apply(e1, o));
                        return r && s(t, r.prototype), t;
                    }).apply(null, arguments);
                }
                function s(e1, t) {
                    return (s = Object.setPrototypeOf || function(e1, t) {
                        return e1.__proto__ = t, e1;
                    })(e1, t);
                }
                o.default.prototype.createVector = function(e1, t, r) {
                    return this instanceof o.default ? n(o.default.Vector, [
                        this._fromRadians.bind(this),
                        this._toRadians.bind(this)
                    ].concat(Array.prototype.slice.call(arguments))) : new o.default.Vector(e1, t, r);
                };
                e1 = o.default;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.reflect.construct": 182,
                "core-js/modules/es.regexp.to-string": 186
            }
        ],
        305: [
            function(e1, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e1 = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function b(e1) {
                    return .5 * (1 - Math.cos(e1 * Math.PI));
                }
                var j, _ = 4095, x = 4, w = .5, e1 = (e1.default.prototype.noise = function(e1) {
                    var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, r = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0;
                    if (null == j) {
                        j = new Array(4096);
                        for(var o = 0; o < 4096; o++)j[o] = Math.random();
                    }
                    e1 < 0 && (e1 = -e1), t < 0 && (t = -t), r < 0 && (r = -r);
                    for(var n, s, i = Math.floor(e1), a = Math.floor(t), l = Math.floor(r), u = e1 - i, c = t - a, d = r - l, f = 0, h = .5, p = 0; p < x; p++){
                        var m = i + (a << 4) + (l << 8), y = b(u), g = b(c), v = j[m & _];
                        v += y * (j[m + 1 & _] - v), n = j[m + 16 & _], v += g * ((n += y * (j[m + 16 + 1 & _] - n)) - v), n = j[(m += 256) & _], n += y * (j[m + 1 & _] - n), s = j[m + 16 & _], n += g * ((s += y * (j[m + 16 + 1 & _] - s)) - n), f += (v += b(d) * (n - v)) * h, h *= w, i <<= 1, a <<= 1, l <<= 1, 1 <= (u *= 2) && (i++, u--), 1 <= (c *= 2) && (a++, c--), 1 <= (d *= 2) && (l++, d--);
                    }
                    return f;
                }, e1.default.prototype.noiseDetail = function(e1, t) {
                    0 < e1 && (x = e1), 0 < t && (w = t);
                }, e1.default.prototype.noiseSeed = function(e1) {
                    o = 4294967296;
                    var t, r, o, n = {
                        setSeed: function(e1) {
                            r = t = (null == e1 ? Math.random() * o : e1) >>> 0;
                        },
                        getSeed: function() {
                            return t;
                        },
                        rand: function() {
                            return (r = (1664525 * r + 1013904223) % o) / o;
                        }
                    };
                    n.setSeed(e1), j = new Array(4096);
                    for(var s = 0; s < 4096; s++)j[s] = n.rand();
                }, e1.default);
                r.default = e1;
            },
            {
                "../core/main": 273
            }
        ],
        306: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.every"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.array.some"), e1("core-js/modules/es.math.sign"), e1("core-js/modules/es.number.constructor"), e1("core-js/modules/es.number.is-finite"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.sub"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.every"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.array.some"), e1("core-js/modules/es.math.sign"), e1("core-js/modules/es.number.constructor"), e1("core-js/modules/es.number.is-finite"), e1("core-js/modules/es.string.sub"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = (n = e1("../core/main")) && n.__esModule ? n : {
                    default: n
                }, s = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = l();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants"));
                function l() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, l = function() {
                        return e1;
                    }, e1);
                }
                function u(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                function c(e1, t) {
                    return 0 !== e1 && (this.x = this.x % e1), 0 !== t && (this.y = this.y % t), this;
                }
                function d(e1, t, r) {
                    return 0 !== e1 && (this.x = this.x % e1), 0 !== t && (this.y = this.y % t), 0 !== r && (this.z = this.z % r), this;
                }
                a.default.Vector = function() {
                    function n() {
                        var e1 = this, t = n;
                        if (!(e1 instanceof t)) throw new TypeError("Cannot call a class as a function");
                        var r, o, e1 = "function" == typeof (arguments.length <= 0 ? void 0 : arguments[0]) ? (this.isPInst = !0, this._fromRadians = arguments.length <= 0 ? void 0 : arguments[0], this._toRadians = arguments.length <= 1 ? void 0 : arguments[1], r = (arguments.length <= 2 ? void 0 : arguments[2]) || 0, o = (arguments.length <= 3 ? void 0 : arguments[3]) || 0, (arguments.length <= 4 ? void 0 : arguments[4]) || 0) : (r = (arguments.length <= 0 ? void 0 : arguments[0]) || 0, o = (arguments.length <= 1 ? void 0 : arguments[1]) || 0, (arguments.length <= 2 ? void 0 : arguments[2]) || 0);
                        this.x = r, this.y = o, this.z = e1;
                    }
                    var e1, t, r;
                    return e1 = n, r = [
                        {
                            key: "fromAngle",
                            value: function(e1, t) {
                                return new a.default.Vector((t = void 0 === t ? 1 : t) * Math.cos(e1), t * Math.sin(e1), 0);
                            }
                        },
                        {
                            key: "fromAngles",
                            value: function(e1, t, r) {
                                void 0 === r && (r = 1);
                                var o = Math.cos(t), t = Math.sin(t), n = Math.cos(e1), e1 = Math.sin(e1);
                                return new a.default.Vector(r * e1 * t, -r * n, r * e1 * o);
                            }
                        },
                        {
                            key: "random2D",
                            value: function() {
                                return this.fromAngle(Math.random() * s.TWO_PI);
                            }
                        },
                        {
                            key: "random3D",
                            value: function() {
                                var e1 = Math.random() * s.TWO_PI, t = 2 * Math.random() - 1, r = Math.sqrt(1 - t * t), o = r * Math.cos(e1), r = r * Math.sin(e1);
                                return new a.default.Vector(o, r, t);
                            }
                        },
                        {
                            key: "copy",
                            value: function(e1) {
                                return e1.copy(e1);
                            }
                        },
                        {
                            key: "add",
                            value: function(e1, t, r) {
                                return r ? r.set(e1) : (r = e1.copy(), 3 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.add")), r.add(t), r;
                            }
                        },
                        {
                            key: "rem",
                            value: function(e1, t) {
                                if (e1 instanceof a.default.Vector && t instanceof a.default.Vector) return (e1 = e1.copy()).rem(t), e1;
                            }
                        },
                        {
                            key: "sub",
                            value: function(e1, t, r) {
                                return r ? r.set(e1) : (r = e1.copy(), 3 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.sub")), r.sub(t), r;
                            }
                        },
                        {
                            key: "mult",
                            value: function(e1, t, r) {
                                return r ? r.set(e1) : (r = e1.copy(), 3 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.mult")), r.mult(t), r;
                            }
                        },
                        {
                            key: "rotate",
                            value: function(e1, t, r) {
                                return 2 === arguments.length ? r = e1.copy() : (r instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.rotate"), r.set(e1)), r.rotate(t), r;
                            }
                        },
                        {
                            key: "div",
                            value: function(e1, t, r) {
                                return r ? r.set(e1) : (r = e1.copy(), 3 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.div")), r.div(t), r;
                            }
                        },
                        {
                            key: "dot",
                            value: function(e1, t) {
                                return e1.dot(t);
                            }
                        },
                        {
                            key: "cross",
                            value: function(e1, t) {
                                return e1.cross(t);
                            }
                        },
                        {
                            key: "dist",
                            value: function(e1, t) {
                                return e1.dist(t);
                            }
                        },
                        {
                            key: "lerp",
                            value: function(e1, t, r, o) {
                                return o ? o.set(e1) : (o = e1.copy(), 4 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.lerp")), o.lerp(t, r), o;
                            }
                        },
                        {
                            key: "slerp",
                            value: function(e1, t, r, o) {
                                return o ? o.set(e1) : (o = e1.copy(), 4 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.slerp")), o.slerp(t, r), o;
                            }
                        },
                        {
                            key: "mag",
                            value: function(e1) {
                                return e1.mag();
                            }
                        },
                        {
                            key: "magSq",
                            value: function(e1) {
                                return e1.magSq();
                            }
                        },
                        {
                            key: "normalize",
                            value: function(e1, t) {
                                return arguments.length < 2 ? t = e1.copy() : (t instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.normalize"), t.set(e1)), t.normalize();
                            }
                        },
                        {
                            key: "limit",
                            value: function(e1, t, r) {
                                return arguments.length < 3 ? r = e1.copy() : (r instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.limit"), r.set(e1)), r.limit(t);
                            }
                        },
                        {
                            key: "setMag",
                            value: function(e1, t, r) {
                                return arguments.length < 3 ? r = e1.copy() : (r instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.setMag"), r.set(e1)), r.setMag(t);
                            }
                        },
                        {
                            key: "heading",
                            value: function(e1) {
                                return e1.heading();
                            }
                        },
                        {
                            key: "angleBetween",
                            value: function(e1, t) {
                                return e1.angleBetween(t);
                            }
                        },
                        {
                            key: "reflect",
                            value: function(e1, t, r) {
                                return arguments.length < 3 ? r = e1.copy() : (r instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.reflect"), r.set(e1)), r.reflect(t);
                            }
                        },
                        {
                            key: "array",
                            value: function(e1) {
                                return e1.array();
                            }
                        },
                        {
                            key: "equals",
                            value: function(e1, t) {
                                var r;
                                return e1 instanceof a.default.Vector ? r = e1 : e1 instanceof Array ? r = (new a.default.Vector).set(e1) : a.default._friendlyError("The v1 parameter should be of type Array or p5.Vector", "p5.Vector.equals"), r.equals(t);
                            }
                        }
                    ], t = [
                        {
                            key: "toString",
                            value: function() {
                                return "p5.Vector Object : [".concat(this.x, ", ").concat(this.y, ", ").concat(this.z, "]");
                            }
                        },
                        {
                            key: "set",
                            value: function(e1, t, r) {
                                return e1 instanceof a.default.Vector ? (this.x = e1.x || 0, this.y = e1.y || 0, this.z = e1.z || 0) : Array.isArray(e1) ? (this.x = e1[0] || 0, this.y = e1[1] || 0, this.z = e1[2] || 0) : (this.x = e1 || 0, this.y = t || 0, this.z = r || 0), this;
                            }
                        },
                        {
                            key: "copy",
                            value: function() {
                                return this.isPInst ? new a.default.Vector(this._fromRadians, this._toRadians, this.x, this.y, this.z) : new a.default.Vector(this.x, this.y, this.z);
                            }
                        },
                        {
                            key: "add",
                            value: function(e1, t, r) {
                                return e1 instanceof a.default.Vector ? (this.x += e1.x || 0, this.y += e1.y || 0, this.z += e1.z || 0) : Array.isArray(e1) ? (this.x += e1[0] || 0, this.y += e1[1] || 0, this.z += e1[2] || 0) : (this.x += e1 || 0, this.y += t || 0, this.z += r || 0), this;
                            }
                        },
                        {
                            key: "rem",
                            value: function(e1, t, r) {
                                var o;
                                if (e1 instanceof a.default.Vector) {
                                    if ([
                                        e1.x,
                                        e1.y,
                                        e1.z
                                    ].every(Number.isFinite)) return n = parseFloat(e1.x), s = parseFloat(e1.y), o = parseFloat(e1.z), d.call(this, n, s, o);
                                } else if (Array.isArray(e1)) {
                                    if (e1.every(function(e1) {
                                        return Number.isFinite(e1);
                                    })) return 2 === e1.length ? c.call(this, e1[0], e1[1]) : 3 === e1.length ? d.call(this, e1[0], e1[1], e1[2]) : void 0;
                                } else if (1 === arguments.length) {
                                    if (Number.isFinite(e1) && 0 !== e1) return this.x = this.x % e1, this.y = this.y % e1, this.z = this.z % e1, this;
                                } else if (2 === arguments.length) {
                                    var n = Array.prototype.slice.call(arguments);
                                    if (n.every(function(e1) {
                                        return Number.isFinite(e1);
                                    }) && 2 === n.length) return c.call(this, n[0], n[1]);
                                } else if (3 === arguments.length) {
                                    var s = Array.prototype.slice.call(arguments);
                                    if (s.every(function(e1) {
                                        return Number.isFinite(e1);
                                    }) && 3 === s.length) return d.call(this, s[0], s[1], s[2]);
                                }
                            }
                        },
                        {
                            key: "sub",
                            value: function(e1, t, r) {
                                return e1 instanceof a.default.Vector ? (this.x -= e1.x || 0, this.y -= e1.y || 0, this.z -= e1.z || 0) : Array.isArray(e1) ? (this.x -= e1[0] || 0, this.y -= e1[1] || 0, this.z -= e1[2] || 0) : (this.x -= e1 || 0, this.y -= t || 0, this.z -= r || 0), this;
                            }
                        },
                        {
                            key: "mult",
                            value: function(e1, t, r) {
                                var o;
                                return e1 instanceof a.default.Vector ? Number.isFinite(e1.x) && Number.isFinite(e1.y) && Number.isFinite(e1.z) && "number" == typeof e1.x && "number" == typeof e1.y && "number" == typeof e1.z ? (this.x *= e1.x, this.y *= e1.y, this.z *= e1.z) : console.warn("p5.Vector.prototype.mult:", "x contains components that are either undefined or not finite numbers") : Array.isArray(e1) ? e1.every(function(e1) {
                                    return Number.isFinite(e1);
                                }) && e1.every(function(e1) {
                                    return "number" == typeof e1;
                                }) ? 1 === e1.length ? (this.x *= e1[0], this.y *= e1[0], this.z *= e1[0]) : 2 === e1.length ? (this.x *= e1[0], this.y *= e1[1]) : 3 === e1.length && (this.x *= e1[0], this.y *= e1[1], this.z *= e1[2]) : console.warn("p5.Vector.prototype.mult:", "x contains elements that are either undefined or not finite numbers") : (o = Array.prototype.slice.call(arguments)).every(function(e1) {
                                    return Number.isFinite(e1);
                                }) && o.every(function(e1) {
                                    return "number" == typeof e1;
                                }) ? (1 === arguments.length && (this.x *= e1, this.y *= e1, this.z *= e1), 2 === arguments.length && (this.x *= e1, this.y *= t), 3 === arguments.length && (this.x *= e1, this.y *= t, this.z *= r)) : console.warn("p5.Vector.prototype.mult:", "x, y, or z arguments are either undefined or not a finite number"), this;
                            }
                        },
                        {
                            key: "div",
                            value: function(e1, t, r) {
                                if (e1 instanceof a.default.Vector) {
                                    if (Number.isFinite(e1.x) && Number.isFinite(e1.y) && Number.isFinite(e1.z) && "number" == typeof e1.x && "number" == typeof e1.y && "number" == typeof e1.z) {
                                        var o = 0 === e1.z && 0 === this.z;
                                        if (0 === e1.x || 0 === e1.y || !o && 0 === e1.z) return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
                                        this.x /= e1.x, this.y /= e1.y, o || (this.z /= e1.z);
                                    } else console.warn("p5.Vector.prototype.div:", "x contains components that are either undefined or not finite numbers");
                                } else if (Array.isArray(e1)) {
                                    if (e1.every(function(e1) {
                                        return Number.isFinite(e1);
                                    }) && e1.every(function(e1) {
                                        return "number" == typeof e1;
                                    })) {
                                        if (e1.some(function(e1) {
                                            return 0 === e1;
                                        })) return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
                                        1 === e1.length ? (this.x /= e1[0], this.y /= e1[0], this.z /= e1[0]) : 2 === e1.length ? (this.x /= e1[0], this.y /= e1[1]) : 3 === e1.length && (this.x /= e1[0], this.y /= e1[1], this.z /= e1[2]);
                                    } else console.warn("p5.Vector.prototype.div:", "x contains components that are either undefined or not finite numbers");
                                } else {
                                    o = Array.prototype.slice.call(arguments);
                                    if (o.every(function(e1) {
                                        return Number.isFinite(e1);
                                    }) && o.every(function(e1) {
                                        return "number" == typeof e1;
                                    })) {
                                        if (o.some(function(e1) {
                                            return 0 === e1;
                                        })) return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
                                        1 === arguments.length && (this.x /= e1, this.y /= e1, this.z /= e1), 2 === arguments.length && (this.x /= e1, this.y /= t), 3 === arguments.length && (this.x /= e1, this.y /= t, this.z /= r);
                                    } else console.warn("p5.Vector.prototype.div:", "x, y, or z arguments are either undefined or not a finite number");
                                }
                                return this;
                            }
                        },
                        {
                            key: "mag",
                            value: function() {
                                return Math.sqrt(this.magSq());
                            }
                        },
                        {
                            key: "magSq",
                            value: function() {
                                var e1 = this.x, t = this.y, r = this.z;
                                return e1 * e1 + t * t + r * r;
                            }
                        },
                        {
                            key: "dot",
                            value: function(e1, t, r) {
                                return e1 instanceof a.default.Vector ? this.dot(e1.x, e1.y, e1.z) : this.x * (e1 || 0) + this.y * (t || 0) + this.z * (r || 0);
                            }
                        },
                        {
                            key: "cross",
                            value: function(e1) {
                                var t = this.y * e1.z - this.z * e1.y, r = this.z * e1.x - this.x * e1.z, e1 = this.x * e1.y - this.y * e1.x;
                                return this.isPInst ? new a.default.Vector(this._fromRadians, this._toRadians, t, r, e1) : new a.default.Vector(t, r, e1);
                            }
                        },
                        {
                            key: "dist",
                            value: function(e1) {
                                return e1.copy().sub(this).mag();
                            }
                        },
                        {
                            key: "normalize",
                            value: function() {
                                var e1 = this.mag();
                                return 0 !== e1 && this.mult(1 / e1), this;
                            }
                        },
                        {
                            key: "limit",
                            value: function(e1) {
                                var t = this.magSq();
                                return e1 * e1 < t && this.div(Math.sqrt(t)).mult(e1), this;
                            }
                        },
                        {
                            key: "setMag",
                            value: function(e1) {
                                return this.normalize().mult(e1);
                            }
                        },
                        {
                            key: "heading",
                            value: function() {
                                var e1 = Math.atan2(this.y, this.x);
                                return this.isPInst ? this._fromRadians(e1) : e1;
                            }
                        },
                        {
                            key: "setHeading",
                            value: function(e1) {
                                this.isPInst && (e1 = this._toRadians(e1));
                                var t = this.mag();
                                return this.x = t * Math.cos(e1), this.y = t * Math.sin(e1), this;
                            }
                        },
                        {
                            key: "rotate",
                            value: function(e1) {
                                var e1 = this.heading() + e1, t = (this.isPInst && (e1 = this._toRadians(e1)), this.mag());
                                return this.x = Math.cos(e1) * t, this.y = Math.sin(e1) * t, this;
                            }
                        },
                        {
                            key: "angleBetween",
                            value: function(e1) {
                                var t;
                                return 0 == this.magSq() * e1.magSq() ? NaN : (t = this.cross(e1), e1 = Math.atan2(t.mag(), this.dot(e1)) * Math.sign(t.z || 1), this.isPInst ? this._fromRadians(e1) : e1);
                            }
                        },
                        {
                            key: "lerp",
                            value: function(e1, t, r, o) {
                                return e1 instanceof a.default.Vector ? this.lerp(e1.x, e1.y, e1.z, t) : (this.x += (e1 - this.x) * o || 0, this.y += (t - this.y) * o || 0, this.z += (r - this.z) * o || 0, this);
                            }
                        },
                        {
                            key: "slerp",
                            value: function(e1, t) {
                                if (0 !== t) {
                                    if (1 === t) return this.set(e1);
                                    var r = this.mag(), o = e1.mag();
                                    if (0 == r * o) this.mult(1 - t).add(e1.x * t, e1.y * t, e1.z * t);
                                    else {
                                        var n = this.cross(e1), s = n.mag(), i = Math.atan2(s, this.dot(e1));
                                        if (0 < s) n.x /= s, n.y /= s, n.z /= s;
                                        else {
                                            if (i < .5 * Math.PI) return this.mult(1 - t).add(e1.x * t, e1.y * t, e1.z * t), this;
                                            0 === this.z && 0 === e1.z ? n.set(0, 0, 1) : 0 !== this.x ? n.set(this.y, -this.x, 0).normalize() : n.set(1, 0, 0);
                                        }
                                        s = n.cross(this), e1 = 1 - t + t * o / r, n = e1 * Math.cos(t * i), o = e1 * Math.sin(t * i);
                                        this.x = this.x * n + s.x * o, this.y = this.y * n + s.y * o, this.z = this.z * n + s.z * o;
                                    }
                                }
                                return this;
                            }
                        },
                        {
                            key: "reflect",
                            value: function(e1) {
                                return e1.normalize(), this.sub(e1.mult(2 * this.dot(e1)));
                            }
                        },
                        {
                            key: "array",
                            value: function() {
                                return [
                                    this.x || 0,
                                    this.y || 0,
                                    this.z || 0
                                ];
                            }
                        },
                        {
                            key: "equals",
                            value: function(e1, t, r) {
                                var o, n, e1 = e1 instanceof a.default.Vector ? (o = e1.x || 0, n = e1.y || 0, e1.z || 0) : Array.isArray(e1) ? (o = e1[0] || 0, n = e1[1] || 0, e1[2] || 0) : (o = e1 || 0, n = t || 0, r || 0);
                                return this.x === o && this.y === n && this.z === e1;
                            }
                        }
                    ], u(e1.prototype, t), r && u(e1, r), n;
                }();
                var n = a.default.Vector;
                r.default = n;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.every": 153,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.array.some": 165,
                "core-js/modules/es.math.sign": 170,
                "core-js/modules/es.number.constructor": 171,
                "core-js/modules/es.number.is-finite": 172,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.sub": 198,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        307: [
            function(e1, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                var s = "_lcg_random_state", o = 4294967296, i = 0, e1 = (n.default.prototype._lcg = function(e1) {
                    return this[e1] = (1664525 * this[e1] + 1013904223) % o, this[e1] / o;
                }, n.default.prototype._lcgSetSeed = function(e1, t) {
                    this[e1] = (null == t ? Math.random() * o : t) >>> 0;
                }, n.default.prototype.randomSeed = function(e1) {
                    this._lcgSetSeed(s, e1), this._gaussian_previous = !1;
                }, n.default.prototype.random = function(e1, t) {
                    var r, o;
                    return n.default._validateParameters("random", arguments), r = null != this[s] ? this._lcg(s) : Math.random(), void 0 === e1 ? r : void 0 === t ? e1 instanceof Array ? e1[Math.floor(r * e1.length)] : r * e1 : (t < e1 && (o = e1, e1 = t, t = o), r * (t - e1) + e1);
                }, n.default.prototype.randomGaussian = function(e1) {
                    var t, r, o, n, s = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 1;
                    if (this._gaussian_previous) t = i, this._gaussian_previous = !1;
                    else {
                        for(; 1 <= (n = (r = this.random(2) - 1) * r + (o = this.random(2) - 1) * o););
                        t = r * (n = Math.sqrt(-2 * Math.log(n) / n)), i = o * n, this._gaussian_previous = !0;
                    }
                    return t * s + (e1 || 0);
                }, n.default);
                r.default = e1;
            },
            {
                "../core/main": 273
            }
        ],
        308: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (l = e1("../core/main")) && l.__esModule ? l : {
                    default: l
                }, s = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants"));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                n.default.prototype._angleMode = s.RADIANS, n.default.prototype.acos = function(e1) {
                    return this._fromRadians(Math.acos(e1));
                }, n.default.prototype.asin = function(e1) {
                    return this._fromRadians(Math.asin(e1));
                }, n.default.prototype.atan = function(e1) {
                    return this._fromRadians(Math.atan(e1));
                }, n.default.prototype.atan2 = function(e1, t) {
                    return this._fromRadians(Math.atan2(e1, t));
                }, n.default.prototype.cos = function(e1) {
                    return Math.cos(this._toRadians(e1));
                }, n.default.prototype.sin = function(e1) {
                    return Math.sin(this._toRadians(e1));
                }, n.default.prototype.tan = function(e1) {
                    return Math.tan(this._toRadians(e1));
                }, n.default.prototype.degrees = function(e1) {
                    return e1 * s.RAD_TO_DEG;
                }, n.default.prototype.radians = function(e1) {
                    return e1 * s.DEG_TO_RAD;
                }, n.default.prototype.angleMode = function(e1) {
                    if (n.default._validateParameters("angleMode", arguments), void 0 === e1) return this._angleMode;
                    e1 !== s.DEGREES && e1 !== s.RADIANS || (this._angleMode = e1);
                }, n.default.prototype._toRadians = function(e1) {
                    return this._angleMode === s.DEGREES ? e1 * s.DEG_TO_RAD : e1;
                }, n.default.prototype._toDegrees = function(e1) {
                    return this._angleMode === s.RADIANS ? e1 * s.RAD_TO_DEG : e1;
                }, n.default.prototype._fromRadians = function(e1) {
                    return this._angleMode === s.DEGREES ? e1 * s.RAD_TO_DEG : e1;
                };
                var l = n.default;
                r.default = l;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        309: [
            function(e1, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                n.default.prototype.textAlign = function(e1, t) {
                    var r;
                    return n.default._validateParameters("textAlign", arguments), (r = this._renderer).textAlign.apply(r, arguments);
                }, n.default.prototype.textLeading = function(e1) {
                    var t;
                    return n.default._validateParameters("textLeading", arguments), (t = this._renderer).textLeading.apply(t, arguments);
                }, n.default.prototype.textSize = function(e1) {
                    var t;
                    return n.default._validateParameters("textSize", arguments), (t = this._renderer).textSize.apply(t, arguments);
                }, n.default.prototype.textStyle = function(e1) {
                    var t;
                    return n.default._validateParameters("textStyle", arguments), (t = this._renderer).textStyle.apply(t, arguments);
                }, n.default.prototype.textWidth = function() {
                    for(var e1, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return r[0] += "", n.default._validateParameters("textWidth", r), 0 === r[0].length ? 0 : (e1 = this._renderer).textWidth.apply(e1, r);
                }, n.default.prototype.textAscent = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    return n.default._validateParameters("textAscent", t), this._renderer.textAscent();
                }, n.default.prototype.textDescent = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    return n.default._validateParameters("textDescent", t), this._renderer.textDescent();
                }, n.default.prototype._updateTextMetrics = function() {
                    return this._renderer._updateTextMetrics();
                }, n.default.prototype.textWrap = function(e1) {
                    if ("WORD" !== e1 && "CHAR" !== e1) throw "Error: textWrap accepts only WORD or CHAR";
                    return this._renderer.textWrap(e1);
                };
                e1 = n.default;
                r.default = e1;
            },
            {
                "../core/main": 273
            }
        ],
        310: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.last-index-of"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.last-index-of"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l = (c = e1("../core/main")) && c.__esModule ? c : {
                    default: c
                }, n = s(e1("../core/constants")), u = s(e1("opentype.js"));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                function s(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o, n = {}, s = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1)Object.prototype.hasOwnProperty.call(e1, r) && ((o = s ? Object.getOwnPropertyDescriptor(e1, r) : null) && (o.get || o.set) ? Object.defineProperty(n, r, o) : n[r] = e1[r]);
                    return n.default = e1, t && t.set(e1, n), n;
                }
                e1("../core/friendly_errors/validate_params"), e1("../core/friendly_errors/file_errors"), e1("../core/friendly_errors/fes_core"), l.default.prototype.loadFont = function(o, n, s) {
                    l.default._validateParameters("loadFont", arguments);
                    var i = new l.default.Font(this), a = this;
                    return u.load(o, function(e1, t) {
                        if (e1) return l.default._friendlyFileLoadError(4, o), void 0 !== s ? s(e1) : void console.error(e1, o);
                        i.font = t, void 0 !== n && n(i), a._decrementPreload();
                        var e1 = o.split("\\").pop().split("/").pop(), t = e1.lastIndexOf("."), r = t < 1 ? null : e1.slice(t + 1);
                        [
                            "ttf",
                            "otf",
                            "woff",
                            "woff2"
                        ].includes(r) && (r = e1.slice(0, -1 !== t ? t : 0), (e1 = document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: ".concat(r, ";\nsrc: url(").concat(o, ");\n}\n"))), document.head.appendChild(e1));
                    }), i;
                }, l.default.prototype.text = function(e1, t, r, o, n) {
                    var s;
                    return l.default._validateParameters("text", arguments), this._renderer._doFill || this._renderer._doStroke ? (s = this._renderer).text.apply(s, arguments) : this;
                }, l.default.prototype.textFont = function(e1, t) {
                    if (l.default._validateParameters("textFont", arguments), arguments.length) {
                        if (e1) return this._renderer._setProperty("_textFont", e1), t && (this._renderer._setProperty("_textSize", t), this._renderer._leadingSet || this._renderer._setProperty("_textLeading", t * n._DEFAULT_LEADMULT)), this._renderer._applyTextProperties();
                        throw new Error("null font passed to textFont");
                    }
                    return this._renderer._textFont;
                };
                var c = l.default;
                r.default = c;
            },
            {
                "../core/constants": 262,
                "../core/friendly_errors/fes_core": 264,
                "../core/friendly_errors/file_errors": 265,
                "../core/friendly_errors/validate_params": 268,
                "../core/main": 273,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.last-index-of": 162,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236,
                "opentype.js": 247
            }
        ],
        311: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.function.name"), e1("core-js/modules/es.number.to-fixed"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.function.name"), e1("core-js/modules/es.number.to-fixed"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.split"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (n = e1("../core/main")) && n.__esModule ? n : {
                    default: n
                }, v = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== p(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = i();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants"));
                function i() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, i = function() {
                        return e1;
                    }, e1);
                }
                function p(e1) {
                    return (p = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                function s(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                function m(e1, t) {
                    var r = e1.length;
                    return e1[t < 0 ? t % r + r : t % r];
                }
                function y(e1, t, r, o) {
                    var n, s, i;
                    return o ? (void 0 === y.tmpPoint1 && (y.tmpPoint1 = [], y.tmpPoint2 = []), s = y.tmpPoint1, i = y.tmpPoint2, s.x = t.x - e1.x, s.y = t.y - e1.y, i.x = r.x - t.x, i.y = r.y - t.y, n = s.x * i.x + s.y * i.y, s = Math.sqrt(s.x * s.x + s.y * s.y), i = Math.sqrt(i.x * i.x + i.y * i.y), Math.acos(n / (s * i)) < o) : 0 == (t[0] - e1[0]) * (r[1] - e1[1]) - (r[0] - e1[0]) * (t[1] - e1[1]);
                }
                function d(e1, t, r, o, n, s, i, a, l) {
                    var u = 1 - l, c = Math.pow(u, 3), d = Math.pow(u, 2), f = l * l, h = f * l, p = c * e1 + 3 * d * l * r + 3 * u * l * l * n + h * i, c = c * t + 3 * d * l * o + 3 * u * l * l * s + h * a, d = e1 + 2 * l * (r - e1) + f * (n - 2 * r + e1), h = t + 2 * l * (o - t) + f * (s - 2 * o + t), m = r + 2 * l * (n - r) + f * (i - 2 * n + r), f = o + 2 * l * (s - o) + f * (a - 2 * s + o), e1 = u * e1 + l * r, r = u * t + l * o, t = u * n + l * i, o = u * s + l * a, n = 90 - 180 * Math.atan2(d - m, h - f) / Math.PI;
                    return (m < d || h < f) && (n += 180), {
                        x: p,
                        y: c,
                        m: {
                            x: d,
                            y: h
                        },
                        n: {
                            x: m,
                            y: f
                        },
                        start: {
                            x: e1,
                            y: r
                        },
                        end: {
                            x: t,
                            y: o
                        },
                        alpha: n
                    };
                }
                function f(e1, t, r, o, n, s, i, a, l) {
                    return null == l ? h(e1, t, r, o, n, s, i, a) : d(e1, t, r, o, n, s, i, a, function(e1, t, r, o, n, s, i, a, l) {
                        if (!(l < 0 || h(e1, t, r, o, n, s, i, a) < l)) {
                            var u, c = .5, d = 1 - c;
                            for(u = h(e1, t, r, o, n, s, i, a, d); .01 < Math.abs(u - l);)u = h(e1, t, r, o, n, s, i, a, d += (u < l ? 1 : -1) * (c /= 2));
                            return d;
                        }
                    }(e1, t, r, o, n, s, i, a, l));
                }
                function g(e1, t, r) {
                    for(var o, n, s, i, a, l = 0, u = 0, c = (e1 = function(e1, t) {
                        function r(e1, t, r) {
                            var o, n;
                            if (!e1) return [
                                "C",
                                t.x,
                                t.y,
                                t.x,
                                t.y,
                                t.x,
                                t.y
                            ];
                            switch((e1[0] in {
                                T: 1,
                                Q: 1
                            }) || (t.qx = t.qy = null), e1[0]){
                                case "M":
                                    t.X = e1[1], t.Y = e1[2];
                                    break;
                                case "A":
                                    e1 = [
                                        "C"
                                    ].concat(M.apply(0, [
                                        t.x,
                                        t.y
                                    ].concat(e1.slice(1))));
                                    break;
                                case "S":
                                    n = "C" === r || "S" === r ? (o = 2 * t.x - t.bx, 2 * t.y - t.by) : (o = t.x, t.y), e1 = [
                                        "C",
                                        o,
                                        n
                                    ].concat(e1.slice(1));
                                    break;
                                case "T":
                                    "Q" === r || "T" === r ? (t.qx = 2 * t.x - t.qx, t.qy = 2 * t.y - t.qy) : (t.qx = t.x, t.qy = t.y), e1 = [
                                        "C"
                                    ].concat(x(t.x, t.y, t.qx, t.qy, e1[1], e1[2]));
                                    break;
                                case "Q":
                                    t.qx = e1[1], t.qy = e1[2], e1 = [
                                        "C"
                                    ].concat(x(t.x, t.y, e1[1], e1[2], e1[3], e1[4]));
                                    break;
                                case "L":
                                    e1 = [
                                        "C"
                                    ].concat(_(t.x, t.y, e1[1], e1[2]));
                                    break;
                                case "H":
                                    e1 = [
                                        "C"
                                    ].concat(_(t.x, t.y, e1[1], t.y));
                                    break;
                                case "V":
                                    e1 = [
                                        "C"
                                    ].concat(_(t.x, t.y, t.x, e1[1]));
                                    break;
                                case "Z":
                                    e1 = [
                                        "C"
                                    ].concat(_(t.x, t.y, t.X, t.Y));
                            }
                            return e1;
                        }
                        function o(e1, t) {
                            if (7 < e1[t].length) {
                                e1[t].shift();
                                for(var r = e1[t]; r.length;)c[t] = "A", a && (d[t] = "A"), e1.splice(t++, 0, [
                                    "C"
                                ].concat(r.splice(0, 6)));
                                e1.splice(t, 1), s = Math.max(i.length, a && a.length || 0);
                            }
                        }
                        function n(e1, t, r, o, n) {
                            e1 && t && "M" === e1[n][0] && "M" !== t[n][0] && (t.splice(n, 0, [
                                "M",
                                o.x,
                                o.y
                            ]), r.bx = 0, r.by = 0, r.x = e1[n][1], r.y = e1[n][2], s = Math.max(i.length, a && a.length || 0));
                        }
                        var s, i = b(e1), a = t && b(t), l = {
                            x: 0,
                            y: 0,
                            bx: 0,
                            by: 0,
                            X: 0,
                            Y: 0,
                            qx: null,
                            qy: null
                        }, u = {
                            x: 0,
                            y: 0,
                            bx: 0,
                            by: 0,
                            X: 0,
                            Y: 0,
                            qx: null,
                            qy: null
                        }, c = [], d = [], f = "", h = "";
                        s = Math.max(i.length, a && a.length || 0);
                        for(var p = 0; p < s; p++){
                            "C" !== (f = i[p] ? i[p][0] : f) && (c[p] = f, p && (h = c[p - 1])), i[p] = r(i[p], l, h), "A" !== c[p] && "C" === f && (c[p] = "C"), o(i, p), a && ("C" !== (f = a[p] ? a[p][0] : f) && (d[p] = f, p && (h = d[p - 1])), a[p] = r(a[p], u, h), "A" !== d[p] && "C" === f && (d[p] = "C"), o(a, p)), n(i, a, l, u, p), n(a, i, u, l, p);
                            var m = i[p], y = a && a[p], g = m.length, v = a && y.length;
                            l.x = m[g - 2], l.y = m[g - 1], l.bx = parseFloat(m[g - 4]) || l.x, l.by = parseFloat(m[g - 3]) || l.y, u.bx = a && (parseFloat(y[v - 4]) || u.x), u.by = a && (parseFloat(y[v - 3]) || u.y), u.x = a && y[v - 2], u.y = a && y[v - 1];
                        }
                        return a ? [
                            i,
                            a
                        ] : i;
                    }(e1)).length; u < c; u++){
                        if ("M" === (s = e1[u])[0]) o = +s[1], n = +s[2];
                        else {
                            if (t < l + (i = f(o, n, s[1], s[2], s[3], s[4], s[5], s[6])) && !r) return {
                                x: (a = f(o, n, s[1], s[2], s[3], s[4], s[5], s[6], t - l)).x,
                                y: a.y,
                                alpha: a.alpha
                            };
                            l += i, o = +s[5], n = +s[6];
                        }
                        s.shift();
                    }
                    return a = (a = r ? l : d(o, n, s[0], s[1], s[2], s[3], s[4], s[5], 1)).alpha ? {
                        x: a.x,
                        y: a.y,
                        alpha: a.alpha
                    } : a;
                }
                function b(e1) {
                    var t = [], r = 0, o = 0, n = 0, s = 0, i = 0;
                    if (e1) {
                        "M" === e1[0][0] && (n = r = +e1[0][1], s = o = +e1[0][2], i++, t[0] = [
                            "M",
                            r,
                            o
                        ]);
                        for(var a, l, u = 3 === e1.length && "M" === e1[0][0] && "R" === e1[1][0].toUpperCase() && "Z" === e1[2][0].toUpperCase(), c = i, d = e1.length; c < d; c++){
                            if (t.push(a = []), (l = e1[c])[0] !== String.prototype.toUpperCase.call(l[0])) switch(a[0] = String.prototype.toUpperCase.call(l[0]), a[0]){
                                case "A":
                                    a[1] = l[1], a[2] = l[2], a[3] = l[3], a[4] = l[4], a[5] = l[5], a[6] = +(l[6] + r), a[7] = +(l[7] + o);
                                    break;
                                case "V":
                                    a[1] = +l[1] + o;
                                    break;
                                case "H":
                                    a[1] = +l[1] + r;
                                    break;
                                case "R":
                                    for(var f, h = 2, p = (f = [
                                        r,
                                        o
                                    ].concat(l.slice(1))).length; h < p; h++)f[h] = +f[h] + r, f[++h] = +f[h] + o;
                                    t.pop(), t = t.concat(j(f, u));
                                    break;
                                case "M":
                                    n = +l[1] + r, s = +l[2] + o;
                                    break;
                                default:
                                    for(var m = 1, y = l.length; m < y; m++)a[m] = +l[m] + (m % 2 ? r : o);
                            }
                            else if ("R" === l[0]) f = [
                                r,
                                o
                            ].concat(l.slice(1)), t.pop(), t = t.concat(j(f, u)), a = [
                                "R"
                            ].concat(l.slice(-2));
                            else for(var g = 0, v = l.length; g < v; g++)a[g] = l[g];
                            switch(a[0]){
                                case "Z":
                                    r = n, o = s;
                                    break;
                                case "H":
                                    r = a[1];
                                    break;
                                case "V":
                                    o = a[1];
                                    break;
                                case "M":
                                    n = a[a.length - 2], s = a[a.length - 1];
                                    break;
                                default:
                                    r = a[a.length - 2], o = a[a.length - 1];
                            }
                        }
                    }
                    return t;
                }
                function M(e1, t, r, o, n, s, i, a, l, u) {
                    function c(e1, t, r) {
                        return {
                            x: e1 * Math.cos(r) - t * Math.sin(r),
                            y: e1 * Math.sin(r) + t * Math.cos(r)
                        };
                    }
                    var d, f = Math.PI, h = 120 * f / 180, p = f / 180 * (+n || 0), m = [], y = (u ? (x = u[0], d = u[1], j = u[2], _ = u[3]) : (e1 = (v = c(e1, t, -p)).x, t = v.y, 1 < (y = (g = (e1 - (a = (v = c(a, l, -p)).x)) / 2) * g / (r * r) + (v = (t - (l = v.y)) / 2) * v / (o * o)) && (r *= y = Math.sqrt(y), o *= y), y = r * r, b = o * o, j = (s = (s === i ? -1 : 1) * Math.sqrt(Math.abs((y * b - y * v * v - b * g * g) / (y * v * v + b * g * g)))) * r * v / o + (e1 + a) / 2, _ = s * -o * g / r + (t + l) / 2, x = Math.asin(((t - _) / o).toFixed(9)), d = Math.asin(((l - _) / o).toFixed(9)), (x = e1 < j ? f - x : x) < 0 && (x = 2 * f + x), (d = a < j ? f - d : d) < 0 && (d = 2 * f + d), i && d < x && (x -= 2 * f), !i && x < d && (d -= 2 * f)), d - x), g = (Math.abs(y) > h && (b = d, v = a, s = l, d = x + h * (i && x < d ? 1 : -1), m = M(a = j + r * Math.cos(d), l = _ + o * Math.sin(d), r, o, n, 0, i, v, s, [
                        d,
                        b,
                        j,
                        _
                    ])), y = d - x, Math.cos(x)), f = Math.sin(x), h = Math.cos(d), n = Math.sin(d), i = Math.tan(y / 4), v = 4 / 3 * r * i, s = 4 / 3 * o * i, b = [
                        e1,
                        t
                    ], j = [
                        e1 + v * f,
                        t - s * g
                    ], _ = [
                        a + v * n,
                        l - s * h
                    ], x = [
                        a,
                        l
                    ];
                    if (j[0] = 2 * b[0] - j[0], j[1] = 2 * b[1] - j[1], u) return [
                        j,
                        _,
                        x
                    ].concat(m);
                    for(var w = [], S = 0, E = (m = [
                        j,
                        _,
                        x
                    ].concat(m).join().split(",")).length; S < E; S++)w[S] = S % 2 ? c(m[S - 1], m[S], p).y : c(m[S], m[S + 1], p).x;
                    return w;
                }
                function j(e1, t) {
                    for(var r = [], o = 0, n = e1.length; o < n - 2 * !t; o += 2){
                        var s = [
                            {
                                x: +e1[o - 2],
                                y: +e1[o - 1]
                            },
                            {
                                x: +e1[o],
                                y: +e1[o + 1]
                            },
                            {
                                x: +e1[o + 2],
                                y: +e1[o + 3]
                            },
                            {
                                x: +e1[o + 4],
                                y: +e1[o + 5]
                            }
                        ];
                        t ? o ? n - 4 === o ? s[3] = {
                            x: +e1[0],
                            y: +e1[1]
                        } : n - 2 === o && (s[2] = {
                            x: +e1[0],
                            y: +e1[1]
                        }, s[3] = {
                            x: +e1[2],
                            y: +e1[3]
                        }) : s[0] = {
                            x: +e1[n - 2],
                            y: +e1[n - 1]
                        } : n - 4 === o ? s[3] = s[2] : o || (s[0] = {
                            x: +e1[o],
                            y: +e1[o + 1]
                        }), r.push([
                            "C",
                            (-s[0].x + 6 * s[1].x + s[2].x) / 6,
                            (-s[0].y + 6 * s[1].y + s[2].y) / 6,
                            (s[1].x + 6 * s[2].x - s[3].x) / 6,
                            (s[1].y + 6 * s[2].y - s[3].y) / 6,
                            s[2].x,
                            s[2].y
                        ]);
                    }
                    return r;
                }
                function _(e1, t, r, o) {
                    return [
                        e1,
                        t,
                        r,
                        o,
                        r,
                        o
                    ];
                }
                function x(e1, t, r, o, n, s) {
                    return [
                        1 / 3 * e1 + 2 / 3 * r,
                        1 / 3 * t + 2 / 3 * o,
                        1 / 3 * n + 2 / 3 * r,
                        1 / 3 * s + 2 / 3 * o,
                        n,
                        s
                    ];
                }
                function h(e1, t, r, o, n, s, i, a, l) {
                    for(var u = (l = 1 < (l = null == l ? 1 : l) ? 1 : l < 0 ? 0 : l) / 2, c = [
                        -0.1252,
                        .1252,
                        -0.3678,
                        .3678,
                        -0.5873,
                        .5873,
                        -0.7699,
                        .7699,
                        -0.9041,
                        .9041,
                        -0.9816,
                        .9816
                    ], d = 0, f = [
                        .2491,
                        .2491,
                        .2335,
                        .2335,
                        .2032,
                        .2032,
                        .1601,
                        .1601,
                        .1069,
                        .1069,
                        .0472,
                        .0472
                    ], h = 0; h < 12; h++){
                        var p = u * c[h] + u, m = w(p, e1, r, n, i), p = w(p, t, o, s, a);
                        d += f[h] * Math.sqrt(m * m + p * p);
                    }
                    return u * d;
                }
                function w(e1, t, r, o, n) {
                    return e1 * (e1 * (-3 * t + 9 * r - 9 * o + 3 * n) + 6 * t - 12 * r + 6 * o) - 3 * t + 3 * r;
                }
                n.default.Font = function() {
                    function t(e1) {
                        if (!(this instanceof t)) throw new TypeError("Cannot call a class as a function");
                        this.parent = e1, this.cache = {}, this.font = void 0;
                    }
                    var e1, r, o;
                    return e1 = t, r = [
                        {
                            key: "textBounds",
                            value: function(e1) {
                                var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, r = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0, o = 3 < arguments.length ? arguments[3] : void 0, n = 4 < arguments.length ? arguments[4] : void 0, s = n && n.renderer && n.renderer._pInst || this.parent, i = s._renderer.drawingContext, o = (i.textAlign || v.LEFT, i.textBaseline || v.BASELINE, o || s._renderer._textSize);
                                if (!g) {
                                    for(var a = [], l = [], u = [], c = (u[0] = [], []), d = this._scale(o), f = s._renderer.textLeading(), h = 0, p = (this.font.forEachGlyph(e1, t, r, o, n, function(e1, t, r, o) {
                                        var n = e1.getMetrics();
                                        0 === e1.index || 10 === e1.index ? u[h += 1] = [] : (u[h].push(t + n.xMin * d), u[h].push(t + n.xMax * d), c.push(r + h * f + -n.yMin * d), c.push(r + h * f + -n.yMax * d));
                                    }), 0 < u[h].length && (a[h] = Math.min.apply(null, u[h]), l[h] = Math.max.apply(null, u[h])), 0), m = 0; m <= h; m++){
                                        a[m] = Math.min.apply(null, u[m]), l[m] = Math.max.apply(null, u[m]);
                                        var y = l[m] - a[m];
                                        p < y && (p = y);
                                    }
                                    var i = Math.min.apply(null, a), g = {
                                        x: i,
                                        y: r = Math.min.apply(null, c),
                                        h: Math.max.apply(null, c) - r,
                                        w: p,
                                        advance: i - t
                                    }, o = this._handleAlignment(s._renderer, e1, g.x, g.y, g.w + g.advance);
                                    g.x = o.x, g.y = o.y;
                                }
                                return g;
                            }
                        },
                        {
                            key: "textToPoints",
                            value: function(e1, t, r, o, n) {
                                var s = 0, i = [], a = this._getGlyphs(e1);
                                o = o || this.parent._renderer._textSize;
                                for(var l, u = 0; u < a.length; u++){
                                    if (!(a[l = u].name && "space" === a[l].name || e1.length === a.length && " " === e1[l])) for(var c = function(e1) {
                                        for(var t, r = [], o = 0; o < e1.length; o++)"M" === e1[o].type && (t && r.push(t), t = []), t.push(function(e1) {
                                            var t = [
                                                e1.type
                                            ];
                                            "M" === e1.type || "L" === e1.type ? t.push(e1.x, e1.y) : "C" === e1.type ? t.push(e1.x1, e1.y1, e1.x2, e1.y2, e1.x, e1.y) : "Q" === e1.type && t.push(e1.x1, e1.y1, e1.x, e1.y);
                                            return t;
                                        }(e1[o]));
                                        return r.push(t), r;
                                    }(a[u].getPath(t, r, o).commands), d = 0; d < c.length; d++)for(var f = function(e1, t) {
                                        for(var t = function(e1, t) {
                                            if ("object" !== p(e1)) e1 = t;
                                            else for(var r in t)void 0 === e1[r] && (e1[r] = t[r]);
                                            return e1;
                                        }(t, {
                                            sampleFactor: .1,
                                            simplifyThreshold: 0
                                        }), r = g(e1, 0, 1), o = r / (r * t.sampleFactor), n = [], s = 0; s < r; s += o)n.push(g(e1, s));
                                        t.simplifyThreshold && !function(e1) {
                                            for(var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, r = 0, o = e1.length - 1; 3 < e1.length && 0 <= o; --o)y(m(e1, o - 1), m(e1, o), m(e1, o + 1), t) && (e1.splice(o % e1.length, 1), r++);
                                        }(n, t.simplifyThreshold);
                                        return n;
                                    }(c[d], n), h = 0; h < f.length; h++)f[h].x += s, i.push(f[h]);
                                    s += a[u].advanceWidth * this._scale(o);
                                }
                                return i;
                            }
                        },
                        {
                            key: "_getGlyphs",
                            value: function(e1) {
                                return this.font.stringToGlyphs(e1);
                            }
                        },
                        {
                            key: "_getPath",
                            value: function(e1, t, r, o) {
                                var n = (o && o.renderer && o.renderer._pInst || this.parent)._renderer, t = this._handleAlignment(n, e1, t, r);
                                return this.font.getPath(e1, t.x, t.y, n._textSize, o);
                            }
                        },
                        {
                            key: "_getPathData",
                            value: function(e1, t, r, o) {
                                var n = 3;
                                return "string" == typeof e1 && 2 < arguments.length ? e1 = this._getPath(e1, t, r, o) : "object" === p(t) && (o = t), o && "number" == typeof o.decimals && (n = o.decimals), e1.toPathData(n);
                            }
                        },
                        {
                            key: "_getSVG",
                            value: function(e1, t, r, o) {
                                var n = 3;
                                return "string" == typeof e1 && 2 < arguments.length ? e1 = this._getPath(e1, t, r, o) : "object" === p(t) && (o = t), o && ("number" == typeof o.decimals && (n = o.decimals), "number" == typeof o.strokeWidth && (e1.strokeWidth = o.strokeWidth), void 0 !== o.fill && (e1.fill = o.fill), void 0 !== o.stroke && (e1.stroke = o.stroke)), e1.toSVG(n);
                            }
                        },
                        {
                            key: "_renderPath",
                            value: function(e1, t, r, o) {
                                var n = o && o.renderer || this.parent._renderer, s = n.drawingContext, e1 = ("object" === p(e1) && e1.commands ? e1 : this._getPath(e1, t, r, o)).commands, i = (s.beginPath(), !0), t = !1, r = void 0;
                                try {
                                    for(var a, l = e1[Symbol.iterator](); !(i = (a = l.next()).done); i = !0){
                                        var u = a.value;
                                        "M" === u.type ? s.moveTo(u.x, u.y) : "L" === u.type ? s.lineTo(u.x, u.y) : "C" === u.type ? s.bezierCurveTo(u.x1, u.y1, u.x2, u.y2, u.x, u.y) : "Q" === u.type ? s.quadraticCurveTo(u.x1, u.y1, u.x, u.y) : "Z" === u.type && s.closePath();
                                    }
                                } catch (e1) {
                                    t = !0, r = e1;
                                } finally{
                                    try {
                                        i || null == l.return || l.return();
                                    } finally{
                                        if (t) throw r;
                                    }
                                }
                                return n._doStroke && n._strokeSet && s.stroke(), n._doFill && (n._fillSet || n._setFill(v._DEFAULT_TEXT_FILL), s.fill()), this;
                            }
                        },
                        {
                            key: "_textWidth",
                            value: function(e1, t) {
                                return this.font.getAdvanceWidth(e1, t);
                            }
                        },
                        {
                            key: "_textAscent",
                            value: function(e1) {
                                return this.font.ascender * this._scale(e1);
                            }
                        },
                        {
                            key: "_textDescent",
                            value: function(e1) {
                                return -this.font.descender * this._scale(e1);
                            }
                        },
                        {
                            key: "_scale",
                            value: function(e1) {
                                return 1 / this.font.unitsPerEm * (e1 || this.parent._renderer._textSize);
                            }
                        },
                        {
                            key: "_handleAlignment",
                            value: function(e1, t, r, o, n) {
                                var s = e1._textSize;
                                switch(void 0 === n && (n = this._textWidth(t, s)), e1._textAlign){
                                    case v.CENTER:
                                        r -= n / 2;
                                        break;
                                    case v.RIGHT:
                                        r -= n;
                                }
                                switch(e1._textBaseline){
                                    case v.TOP:
                                        o += this._textAscent(s);
                                        break;
                                    case v.CENTER:
                                        o += this._textAscent(s) / 2;
                                        break;
                                    case v.BOTTOM:
                                        o -= this._textDescent(s);
                                }
                                return {
                                    x: r,
                                    y: o
                                };
                            }
                        }
                    ], s(e1.prototype, r), o && s(e1, o), t;
                }();
                e1 = n.default;
                r.default = e1;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.fill": 154,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.join": 161,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.array.splice": 166,
                "core-js/modules/es.function.name": 167,
                "core-js/modules/es.number.to-fixed": 173,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        312: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.array-buffer.constructor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.array-buffer.constructor"), e1("core-js/modules/es.object.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e1 = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                e1.default.prototype.append = function(e1, t) {
                    return e1.push(t), e1;
                }, e1.default.prototype.arrayCopy = function(e1, t, r, o, n) {
                    var s, i;
                    e1 = void 0 !== n ? (i = Math.min(n, e1.length), s = o, e1.slice(t, i + t)) : (i = void 0 !== r ? (i = r, Math.min(i, e1.length)) : e1.length, r = t, e1.slice(s = 0, i)), Array.prototype.splice.apply(r, [
                        s,
                        i
                    ].concat(e1));
                }, e1.default.prototype.concat = function(e1, t) {
                    return e1.concat(t);
                }, e1.default.prototype.reverse = function(e1) {
                    return e1.reverse();
                }, e1.default.prototype.shorten = function(e1) {
                    return e1.pop(), e1;
                }, e1.default.prototype.shuffle = function(e1, t) {
                    for(var r, o, n = ArrayBuffer && ArrayBuffer.isView && ArrayBuffer.isView(e1), s = (e1 = t || n ? e1 : e1.slice()).length; 1 < s;)r = this.random(0, 1) * s | 0, o = e1[--s], e1[s] = e1[r], e1[r] = o;
                    return e1;
                }, e1.default.prototype.sort = function(e1, t) {
                    var r = t ? e1.slice(0, Math.min(t, e1.length)) : e1, t = t ? e1.slice(Math.min(t, e1.length)) : [];
                    return (r = "string" == typeof r[0] ? r.sort() : r.sort(function(e1, t) {
                        return e1 - t;
                    })).concat(t);
                }, e1.default.prototype.splice = function(e1, t, r) {
                    return Array.prototype.splice.apply(e1, [
                        r,
                        0
                    ].concat(t)), e1;
                }, e1.default.prototype.subset = function(e1, t, r) {
                    return void 0 !== r ? e1.slice(t, t + r) : e1.slice(t, e1.length);
                };
                e1 = e1.default;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array-buffer.constructor": 150,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.array.splice": 166,
                "core-js/modules/es.object.to-string": 180
            }
        ],
        313: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.map"), e1("core-js/modules/es.number.constructor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.repeat"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.number.constructor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.repeat"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var o = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                o.default.prototype.float = function(e1) {
                    return e1 instanceof Array ? e1.map(parseFloat) : parseFloat(e1);
                }, o.default.prototype.int = function(e1) {
                    var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 10;
                    return e1 === 1 / 0 || "Infinity" === e1 ? 1 / 0 : e1 === -1 / 0 || "-Infinity" === e1 ? -1 / 0 : "string" == typeof e1 ? parseInt(e1, t) : "number" == typeof e1 ? 0 | e1 : "boolean" == typeof e1 ? e1 ? 1 : 0 : e1 instanceof Array ? e1.map(function(e1) {
                        return o.default.prototype.int(e1, t);
                    }) : void 0;
                }, o.default.prototype.str = function(e1) {
                    return e1 instanceof Array ? e1.map(o.default.prototype.str) : String(e1);
                }, o.default.prototype.boolean = function(e1) {
                    return "number" == typeof e1 ? 0 !== e1 : "string" == typeof e1 ? "true" === e1.toLowerCase() : "boolean" == typeof e1 ? e1 : e1 instanceof Array ? e1.map(o.default.prototype.boolean) : void 0;
                }, o.default.prototype.byte = function(e1) {
                    e1 = o.default.prototype.int(e1, 10);
                    return "number" == typeof e1 ? (e1 + 128) % 256 - 128 : e1 instanceof Array ? e1.map(o.default.prototype.byte) : void 0;
                }, o.default.prototype.char = function(e1) {
                    return "number" != typeof e1 || isNaN(e1) ? e1 instanceof Array ? e1.map(o.default.prototype.char) : "string" == typeof e1 ? o.default.prototype.char(parseInt(e1, 10)) : void 0 : String.fromCharCode(e1);
                }, o.default.prototype.unchar = function(e1) {
                    return "string" == typeof e1 && 1 === e1.length ? e1.charCodeAt(0) : e1 instanceof Array ? e1.map(o.default.prototype.unchar) : void 0;
                }, o.default.prototype.hex = function(e1, t) {
                    if (t = null == t ? 8 : t, e1 instanceof Array) return e1.map(function(e1) {
                        return o.default.prototype.hex(e1, t);
                    });
                    if (e1 === 1 / 0 || e1 === -1 / 0) return (e1 === 1 / 0 ? "F" : "0").repeat(t);
                    if ("number" == typeof e1) {
                        e1 < 0 && (e1 = 4294967295 + e1 + 1);
                        for(var r = Number(e1).toString(16).toUpperCase(); r.length < t;)r = "0".concat(r);
                        return r = r.length >= t ? r.substring(r.length - t, r.length) : r;
                    }
                }, o.default.prototype.unhex = function(e1) {
                    return e1 instanceof Array ? e1.map(o.default.prototype.unhex) : parseInt("0x".concat(e1), 16);
                };
                e1 = o.default;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.number.constructor": 171,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.repeat": 193
            }
        ],
        314: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.number.to-fixed"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.constructor"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.match"), e1("core-js/modules/es.string.pad-start"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.string.trim"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.filter"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.number.to-fixed"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.constructor"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.match"), e1("core-js/modules/es.string.pad-start"), e1("core-js/modules/es.string.replace"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.string.trim"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = (u = e1("../core/main")) && u.__esModule ? u : {
                    default: u
                };
                function i(e1, t) {
                    return function(e1) {
                        if (Array.isArray(e1)) return e1;
                    }(e1) || function(e1, t) {
                        if (Symbol.iterator in Object(e1) || "[object Arguments]" === Object.prototype.toString.call(e1)) {
                            var r = [], o = !0, n = !1, s = void 0;
                            try {
                                for(var i, a = e1[Symbol.iterator](); !(o = (i = a.next()).done) && (r.push(i.value), !t || r.length !== t); o = !0);
                            } catch (e1) {
                                n = !0, s = e1;
                            } finally{
                                try {
                                    o || null == a.return || a.return();
                                } finally{
                                    if (n) throw s;
                                }
                            }
                            return r;
                        }
                    }(e1, t) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance");
                    }();
                }
                function o(e1, t, r) {
                    var o = i(e1.toString().split("."), 2), n = o[0], o = o[1];
                    return void 0 === r ? (n = n.padStart(t, "0"), o ? n + "." + o : n) : (n = (e1 = i(e1.toFixed(r).toString().split("."), 2))[0], o = e1[1], (n = n.padStart(t, "0")) + "." + o);
                }
                function n(e1, t) {
                    var r = (e1 = e1.toString()).indexOf("."), o = -1 !== r ? e1.substring(r) : "", e1 = (e1 = -1 !== r ? e1.substring(0, r) : e1).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    if (0 === t) o = "";
                    else if (void 0 !== t) {
                        if (t > o.length) for(var n = t - (o += -1 === r ? "." : "").length + 1, s = 0; s < n; s++)o += "0";
                        else o = o.substring(0, t + 1);
                    }
                    return e1 + o;
                }
                function a(e1) {
                    return 0 < parseFloat(e1) ? "+".concat(e1.toString()) : e1.toString();
                }
                function l(e1) {
                    return 0 <= parseFloat(e1) ? " ".concat(e1.toString()) : e1.toString();
                }
                e1("../core/friendly_errors/validate_params"), e1("../core/friendly_errors/file_errors"), e1("../core/friendly_errors/fes_core"), s.default.prototype.join = function(e1, t) {
                    return s.default._validateParameters("join", arguments), e1.join(t);
                }, s.default.prototype.match = function(e1, t) {
                    return s.default._validateParameters("match", arguments), e1.match(t);
                }, s.default.prototype.matchAll = function(e1, t) {
                    s.default._validateParameters("matchAll", arguments);
                    for(var r = new RegExp(t, "g"), o = r.exec(e1), n = []; null !== o;)n.push(o), o = r.exec(e1);
                    return n;
                }, s.default.prototype.nf = function(e1, t, r) {
                    return s.default._validateParameters("nf", arguments), e1 instanceof Array ? e1.map(function(e1) {
                        return o(e1, t, r);
                    }) : "[object Arguments]" === Object.prototype.toString.call(e1) ? 3 === e1.length ? this.nf(e1[0], e1[1], e1[2]) : 2 === e1.length ? this.nf(e1[0], e1[1]) : this.nf(e1[0]) : o(e1, t, r);
                }, s.default.prototype.nfc = function(e1, t) {
                    return s.default._validateParameters("nfc", arguments), e1 instanceof Array ? e1.map(function(e1) {
                        return n(e1, t);
                    }) : n(e1, t);
                }, s.default.prototype.nfp = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    s.default._validateParameters("nfp", t);
                    var o = s.default.prototype.nf.apply(this, t);
                    return o instanceof Array ? o.map(a) : a(o);
                }, s.default.prototype.nfs = function() {
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    s.default._validateParameters("nfs", t);
                    var o = s.default.prototype.nf.apply(this, t);
                    return o instanceof Array ? o.map(l) : l(o);
                }, s.default.prototype.split = function(e1, t) {
                    return s.default._validateParameters("split", arguments), e1.split(t);
                }, s.default.prototype.splitTokens = function(e1, t) {
                    var r, o;
                    return s.default._validateParameters("splitTokens", arguments), o = void 0 !== t ? (o = /\]/g.exec(t), (r = /\[/g.exec(t)) && o ? (t = t.slice(0, o.index) + t.slice(o.index + 1), r = /\[/g.exec(t), t = t.slice(0, r.index) + t.slice(r.index + 1), new RegExp("[\\[".concat(t, "\\]]"), "g")) : o ? (t = t.slice(0, o.index) + t.slice(o.index + 1), new RegExp("[".concat(t, "\\]]"), "g")) : r ? (t = t.slice(0, r.index) + t.slice(r.index + 1), new RegExp("[".concat(t, "\\[]"), "g")) : new RegExp("[".concat(t, "]"), "g")) : /\s/g, e1.split(o).filter(function(e1) {
                        return e1;
                    });
                }, s.default.prototype.trim = function(e1) {
                    return s.default._validateParameters("trim", arguments), e1 instanceof Array ? e1.map(this.trim) : e1.trim();
                };
                var u = s.default;
                r.default = u;
            },
            {
                "../core/friendly_errors/fes_core": 264,
                "../core/friendly_errors/file_errors": 265,
                "../core/friendly_errors/validate_params": 268,
                "../core/main": 273,
                "core-js/modules/es.array.filter": 155,
                "core-js/modules/es.array.index-of": 159,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.join": 161,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.number.to-fixed": 173,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.constructor": 184,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.match": 191,
                "core-js/modules/es.string.pad-start": 192,
                "core-js/modules/es.string.replace": 194,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/es.string.trim": 199,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        315: [
            function(e1, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e1 = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                e1.default.prototype.day = function() {
                    return (new Date).getDate();
                }, e1.default.prototype.hour = function() {
                    return (new Date).getHours();
                }, e1.default.prototype.minute = function() {
                    return (new Date).getMinutes();
                }, e1.default.prototype.millis = function() {
                    return -1 === this._millisStart ? 0 : window.performance.now() - this._millisStart;
                }, e1.default.prototype.month = function() {
                    return (new Date).getMonth() + 1;
                }, e1.default.prototype.second = function() {
                    return (new Date).getSeconds();
                }, e1.default.prototype.year = function() {
                    return (new Date).getFullYear();
                };
                e1 = e1.default;
                r.default = e1;
            },
            {
                "../core/main": 273
            }
        ],
        316: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.math.hypot"), e1("core-js/modules/es.math.sign"), e1("core-js/modules/es.number.to-fixed"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.math.hypot"), e1("core-js/modules/es.math.sign"), e1("core-js/modules/es.number.to-fixed"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var S = (n = e1("../core/main")) && n.__esModule ? n : {
                    default: n
                }, _ = (e1("./p5.Geometry"), function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants")));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                S.default.prototype.plane = function(e1, t, r, o) {
                    this._assert3d("plane"), S.default._validateParameters("plane", arguments), void 0 === e1 && (e1 = 50), void 0 === t && (t = e1), void 0 === o && (o = 1);
                    var n, s = "plane|".concat(r = void 0 === r ? 1 : r, "|").concat(o);
                    return this._renderer.geometryInHash(s) || ((n = new S.default.Geometry(r, o, function() {
                        for(var e1, t, r = 0; r <= this.detailY; r++)for(var o = r / this.detailY, n = 0; n <= this.detailX; n++)e1 = n / this.detailX, t = new S.default.Vector(e1 - .5, o - .5, 0), this.vertices.push(t), this.uvs.push(e1, o);
                    })).computeFaces().computeNormals(), r <= 1 && o <= 1 ? n._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"), this._renderer.createBuffers(s, n)), this._renderer.drawBuffersScaled(s, e1, t, 1), this;
                }, S.default.prototype.box = function(e1, t, r, o, n) {
                    this._assert3d("box"), S.default._validateParameters("box", arguments), void 0 === e1 && (e1 = 50), void 0 === t && (t = e1), void 0 === r && (r = t);
                    var s, i = this._renderer.attributes && this._renderer.attributes.perPixelLighting, i = (void 0 === n && (n = i ? 1 : 4), "box|".concat(o = void 0 === o ? i ? 1 : 4 : o, "|").concat(n));
                    return this._renderer.geometryInHash(i) || ((s = new S.default.Geometry(o, n, function() {
                        var n = this;
                        this.edges = [
                            [
                                0,
                                1
                            ],
                            [
                                1,
                                3
                            ],
                            [
                                3,
                                2
                            ],
                            [
                                6,
                                7
                            ],
                            [
                                8,
                                9
                            ],
                            [
                                9,
                                11
                            ],
                            [
                                14,
                                15
                            ],
                            [
                                16,
                                17
                            ],
                            [
                                17,
                                19
                            ],
                            [
                                18,
                                19
                            ],
                            [
                                20,
                                21
                            ],
                            [
                                22,
                                23
                            ]
                        ], [
                            [
                                0,
                                4,
                                2,
                                6
                            ],
                            [
                                1,
                                3,
                                5,
                                7
                            ],
                            [
                                0,
                                1,
                                4,
                                5
                            ],
                            [
                                2,
                                6,
                                3,
                                7
                            ],
                            [
                                0,
                                2,
                                1,
                                3
                            ],
                            [
                                4,
                                5,
                                6,
                                7
                            ]
                        ].forEach(function(e1, t) {
                            for(var t = 4 * t, r = 0; r < 4; r++){
                                var o = e1[r], o = new S.default.Vector((2 * (1 & o) - 1) / 2, ((2 & o) - 1) / 2, ((4 & o) / 2 - 1) / 2);
                                n.vertices.push(o), n.uvs.push(1 & r, (2 & r) / 2);
                            }
                            n.faces.push([
                                t,
                                1 + t,
                                2 + t
                            ]), n.faces.push([
                                2 + t,
                                1 + t,
                                3 + t
                            ]);
                        });
                    })).computeNormals(), o <= 4 && n <= 4 ? s._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"), this._renderer.createBuffers(i, s)), this._renderer.drawBuffersScaled(i, e1, t, r), this;
                }, S.default.prototype.sphere = function(e1, t, r) {
                    return this._assert3d("sphere"), S.default._validateParameters("sphere", arguments), this.ellipsoid(e1 = void 0 === e1 ? 50 : e1, e1, e1, t = void 0 === t ? 24 : t, r = void 0 === r ? 16 : r), this;
                };
                function l(e1, t, r, o, n, s, i) {
                    e1 = e1 <= 0 ? 1 : e1, t = t < 0 ? 0 : t, r = r <= 0 ? e1 : r, o = o < 3 ? 3 : o;
                    for(var a, l, u = (s = void 0 === s || s) ? -2 : 0, c = (n = n < 1 ? 1 : n) + ((i = void 0 === i ? 0 !== t : i) ? 2 : 0), d = Math.atan2(e1 - t, r), f = Math.sin(d), h = Math.cos(d), p = u; p <= c; ++p){
                        var m = p / n, y = r * m, g = void 0, g = p < 0 ? (m = y = 0, e1) : n < p ? (y = r, m = 1, t) : e1 + (t - e1) * m;
                        for(-2 !== p && p !== n + 2 || (g = 0), y -= r / 2, a = 0; a < o; ++a){
                            var v = a / (o - 1), b = 2 * Math.PI * v, j = Math.sin(b), b = Math.cos(b), _ = (this.vertices.push(new S.default.Vector(j * g, y, b * g)), void 0), _ = p < 0 ? new S.default.Vector(0, -1, 0) : n < p && t ? new S.default.Vector(0, 1, 0) : new S.default.Vector(j * h, f, b * h);
                            this.vertexNormals.push(_), this.uvs.push(v, m);
                        }
                    }
                    var x = 0;
                    if (s) {
                        for(l = 0; l < o; ++l)this.faces.push([
                            x + l,
                            x + o + (l + 1) % o,
                            x + o + l
                        ]);
                        x += 2 * o;
                    }
                    for(p = 0; p < n; ++p){
                        for(a = 0; a < o; ++a){
                            var w = (a + 1) % o;
                            this.faces.push([
                                x + a,
                                x + w,
                                x + o + w
                            ]), this.faces.push([
                                x + a,
                                x + o + w,
                                x + o + a
                            ]);
                        }
                        x += o;
                    }
                    if (i) for(x += o, a = 0; a < o; ++a)this.faces.push([
                        x + a,
                        x + (a + 1) % o,
                        x + o
                    ]);
                }
                S.default.prototype.cylinder = function(e1, t, r, o, n, s) {
                    this._assert3d("cylinder"), S.default._validateParameters("cylinder", arguments), void 0 === e1 && (e1 = 50), void 0 === t && (t = e1), void 0 === o && (o = 1), void 0 === s && (s = !0), void 0 === n && (n = !0);
                    var i, a = "cylinder|".concat(r = void 0 === r ? 24 : r, "|").concat(o, "|").concat(n, "|").concat(s);
                    return this._renderer.geometryInHash(a) || (i = new S.default.Geometry(r, o), l.call(i, 1, 1, 1, r, o, n, s), r <= 24 && o <= 16 ? i._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(a, i)), this._renderer.drawBuffersScaled(a, e1, t, e1), this;
                }, S.default.prototype.cone = function(e1, t, r, o, n) {
                    this._assert3d("cone"), S.default._validateParameters("cone", arguments), void 0 === e1 && (e1 = 50), void 0 === t && (t = e1), void 0 === o && (o = 1), void 0 === n && (n = !0);
                    var s, i = "cone|".concat(r = void 0 === r ? 24 : r, "|").concat(o, "|").concat(n);
                    return this._renderer.geometryInHash(i) || (s = new S.default.Geometry(r, o), l.call(s, 1, 0, 1, r, o, n, !1), r <= 24 && o <= 16 ? s._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(i, s)), this._renderer.drawBuffersScaled(i, e1, t, e1), this;
                }, S.default.prototype.ellipsoid = function(e1, t, r, o, n) {
                    this._assert3d("ellipsoid"), S.default._validateParameters("ellipsoid", arguments), void 0 === e1 && (e1 = 50), void 0 === t && (t = e1), void 0 === r && (r = e1), void 0 === n && (n = 16);
                    var s, i = "ellipsoid|".concat(o = void 0 === o ? 24 : o, "|").concat(n);
                    return this._renderer.geometryInHash(i) || ((s = new S.default.Geometry(o, n, function() {
                        for(var e1 = 0; e1 <= this.detailY; e1++)for(var t = e1 / this.detailY, r = Math.PI * t - Math.PI / 2, o = Math.cos(r), n = Math.sin(r), s = 0; s <= this.detailX; s++){
                            var i = s / this.detailX, a = 2 * Math.PI * i, l = Math.cos(a), a = Math.sin(a), a = new S.default.Vector(o * a, n, o * l);
                            this.vertices.push(a), this.vertexNormals.push(a), this.uvs.push(i, t);
                        }
                    })).computeFaces(), o <= 24 && n <= 24 ? s._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"), this._renderer.createBuffers(i, s)), this._renderer.drawBuffersScaled(i, e1, t, r), this;
                }, S.default.prototype.torus = function(e1, t, r, o) {
                    if (this._assert3d("torus"), S.default._validateParameters("torus", arguments), void 0 === e1) e1 = 50;
                    else if (!e1) return;
                    if (void 0 === t) t = 10;
                    else if (!t) return;
                    void 0 === r && (r = 24), void 0 === o && (o = 16);
                    var n, d = (t / e1).toPrecision(4), t = "torus|".concat(d, "|").concat(r, "|").concat(o);
                    return this._renderer.geometryInHash(t) || ((n = new S.default.Geometry(r, o, function() {
                        for(var e1 = 0; e1 <= this.detailY; e1++)for(var t = e1 / this.detailY, r = 2 * Math.PI * t, o = Math.cos(r), n = Math.sin(r), s = 1 + d * o, i = 0; i <= this.detailX; i++){
                            var a = i / this.detailX, l = 2 * Math.PI * a, u = Math.cos(l), l = Math.sin(l), c = new S.default.Vector(s * u, s * l, d * n), u = new S.default.Vector(o * u, o * l, n);
                            this.vertices.push(c), this.vertexNormals.push(u), this.uvs.push(a, t);
                        }
                    })).computeFaces(), r <= 24 && o <= 16 ? n._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(t, n)), this._renderer.drawBuffersScaled(t, e1, e1, e1), this;
                }, S.default.RendererGL.prototype.point = function(e1, t, r) {
                    var o = [];
                    return o.push(new S.default.Vector(e1, t, r = void 0 === r ? 0 : r)), this._drawPoints(o, this.immediateMode.buffers.point), this;
                }, S.default.RendererGL.prototype.triangle = function(e1) {
                    var t = e1[0], r = e1[1], o = e1[2], n = e1[3], s = e1[4], e1 = e1[5], i = (this.geometryInHash("tri") || ((i = new S.default.Geometry(1, 1, function() {
                        var e1 = [];
                        e1.push(new S.default.Vector(0, 0, 0)), e1.push(new S.default.Vector(1, 0, 0)), e1.push(new S.default.Vector(0, 1, 0)), this.edges = [
                            [
                                0,
                                1
                            ],
                            [
                                1,
                                2
                            ],
                            [
                                2,
                                0
                            ]
                        ], this.vertices = e1, this.faces = [
                            [
                                0,
                                1,
                                2
                            ]
                        ], this.uvs = [
                            0,
                            0,
                            1,
                            0,
                            1,
                            1
                        ];
                    }))._edgesToVertices(), i.computeNormals(), this.createBuffers("tri", i)), this.uMVMatrix.copy());
                    try {
                        var a = Math.sign(t * n - o * r + o * e1 - s * n + s * r - t * e1), l = new S.default.Matrix([
                            o - t,
                            n - r,
                            0,
                            0,
                            s - t,
                            e1 - r,
                            0,
                            0,
                            0,
                            0,
                            a,
                            0,
                            t,
                            r,
                            0,
                            1
                        ]).mult(this.uMVMatrix);
                        this.uMVMatrix = l, this.drawBuffers("tri");
                    } finally{
                        this.uMVMatrix = i;
                    }
                    return this;
                }, S.default.RendererGL.prototype.ellipse = function(e1) {
                    this.arc(e1[0], e1[1], e1[2], e1[3], 0, _.TWO_PI, _.OPEN, e1[4]);
                }, S.default.RendererGL.prototype.arc = function(e1) {
                    var t, r = arguments[1], o = arguments[2], n = arguments[3], s = arguments[4], i = arguments[5], a = arguments[6], l = arguments[7] || 25, u = (Math.abs(i - s) >= _.TWO_PI ? "".concat(c = "ellipse", "|") : "".concat(c = "arc", "|").concat(s, "|").concat(i, "|").concat(a, "|")).concat(l, "|"), c = (this.geometryInHash(u) || ((t = new S.default.Geometry(l, 1, function() {
                        if (s.toFixed(10) !== i.toFixed(10)) {
                            a !== _.PIE && void 0 !== a || (this.vertices.push(new S.default.Vector(.5, .5, 0)), this.uvs.push([
                                .5,
                                .5
                            ]));
                            for(var e1 = 0; e1 <= l; e1++){
                                var t = (i - s) * (e1 / l) + s, r = .5 + Math.cos(t) / 2, t = .5 + Math.sin(t) / 2;
                                this.vertices.push(new S.default.Vector(r, t, 0)), this.uvs.push([
                                    r,
                                    t
                                ]), e1 < l - 1 && (this.faces.push([
                                    0,
                                    e1 + 1,
                                    e1 + 2
                                ]), this.edges.push([
                                    e1 + 1,
                                    e1 + 2
                                ]));
                            }
                            switch(a){
                                case _.PIE:
                                    this.faces.push([
                                        0,
                                        this.vertices.length - 2,
                                        this.vertices.length - 1
                                    ]), this.edges.push([
                                        0,
                                        1
                                    ]), this.edges.push([
                                        this.vertices.length - 2,
                                        this.vertices.length - 1
                                    ]), this.edges.push([
                                        0,
                                        this.vertices.length - 1
                                    ]);
                                    break;
                                case _.CHORD:
                                    this.edges.push([
                                        0,
                                        1
                                    ]), this.edges.push([
                                        0,
                                        this.vertices.length - 1
                                    ]);
                                    break;
                                case _.OPEN:
                                    this.edges.push([
                                        0,
                                        1
                                    ]);
                                    break;
                                default:
                                    this.faces.push([
                                        0,
                                        this.vertices.length - 2,
                                        this.vertices.length - 1
                                    ]), this.edges.push([
                                        this.vertices.length - 2,
                                        this.vertices.length - 1
                                    ]);
                            }
                        }
                    })).computeNormals(), l <= 50 ? t._edgesToVertices(t) : this._doStroke && console.log("Cannot apply a stroke to an ".concat(c, " with more than 50 detail")), this.createBuffers(u, t)), this.uMVMatrix.copy());
                    try {
                        this.uMVMatrix.translate([
                            e1,
                            r,
                            0
                        ]), this.uMVMatrix.scale(o, n, 1), this.drawBuffers(u);
                    } finally{
                        this.uMVMatrix = c;
                    }
                    return this;
                }, S.default.RendererGL.prototype.rect = function(e1) {
                    var t = e1[0], r = e1[1], o = e1[2], n = e1[3];
                    if (void 0 === e1[4]) {
                        var s = this._pInst._glAttributes.perPixelLighting, i = e1[4] || (s ? 1 : 24), a = e1[5] || (s ? 1 : 16), s = "rect|".concat(i, "|").concat(a), l = (this.geometryInHash(s) || ((l = new S.default.Geometry(i, a, function() {
                            for(var e1 = 0; e1 <= this.detailY; e1++)for(var t = e1 / this.detailY, r = 0; r <= this.detailX; r++){
                                var o = r / this.detailX, n = new S.default.Vector(o, t, 0);
                                this.vertices.push(n), this.uvs.push(o, t);
                            }
                            0 < i && 0 < a && (this.edges = [
                                [
                                    0,
                                    i
                                ],
                                [
                                    i,
                                    (i + 1) * (a + 1) - 1
                                ],
                                [
                                    (i + 1) * (a + 1) - 1,
                                    (i + 1) * a
                                ],
                                [
                                    (i + 1) * a,
                                    0
                                ]
                            ]);
                        })).computeFaces().computeNormals()._edgesToVertices(), this.createBuffers(s, l)), this.uMVMatrix.copy());
                        try {
                            this.uMVMatrix.translate([
                                t,
                                r,
                                0
                            ]), this.uMVMatrix.scale(o, n, 1), this.drawBuffers(s);
                        } finally{
                            this.uMVMatrix = l;
                        }
                    } else {
                        var s = e1[4], l = void 0 === e1[5] ? s : e1[5], u = void 0 === e1[6] ? l : e1[6], e1 = void 0 === e1[7] ? u : e1[7], c = o, d = n, f = ((c += t) < t && (f = t, t = c, c = f), (d += r) < r && (f = r, r = d, d = f), Math.min((c - t) / 2, (d - r) / 2)), h = (f < s && (s = f), f < l && (l = f), f < u && (u = f), f < e1 && (e1 = f), t), p = r, f = c, t = d, m = (this.beginShape(), 0 !== l ? (this.vertex(f - l, p), this.quadraticVertex(f, p, f, p + l)) : this.vertex(f, p), 0 !== u ? (this.vertex(f, t - u), this.quadraticVertex(f, t, f - u, t)) : this.vertex(f, t), 0 !== e1 ? (this.vertex(h + e1, t), this.quadraticVertex(h, t, h, t - e1)) : this.vertex(h, t), 0 !== s ? (this.vertex(h, p + s), this.quadraticVertex(h, p, h + s, p)) : this.vertex(h, p), this.immediateMode.geometry.uvs.length = 0, true), r = !1, c = void 0;
                        try {
                            for(var y, g = this.immediateMode.geometry.vertices[Symbol.iterator](); !(m = (y = g.next()).done); m = !0){
                                var v = y.value, b = (v.x - h) / o, j = (v.y - p) / n;
                                this.immediateMode.geometry.uvs.push(b, j);
                            }
                        } catch (e1) {
                            r = !0, c = e1;
                        } finally{
                            try {
                                m || null == g.return || g.return();
                            } finally{
                                if (r) throw c;
                            }
                        }
                        this.endShape(_.CLOSE);
                    }
                    return this;
                }, S.default.RendererGL.prototype.quad = function(i, a, l, u, c, d, f, h, p, m, y, g, e1, t) {
                    void 0 === e1 && (e1 = 2), void 0 === t && (t = 2);
                    var r = "quad|".concat(i, "|").concat(a, "|").concat(l, "|").concat(u, "|").concat(c, "|").concat(d, "|").concat(f, "|").concat(h, "|").concat(p, "|").concat(m, "|").concat(y, "|").concat(g, "|").concat(e1, "|").concat(t);
                    if (!this.geometryInHash(r)) {
                        var o = new S.default.Geometry(e1, t, function() {
                            for(var e1 = 1 / (this.detailX - 1), t = 1 / (this.detailY - 1), r = 0; r < this.detailY; r++)for(var o = 0; o < this.detailX; o++){
                                var n = o * e1, s = r * t;
                                this.vertices.push(new S.default.Vector((1 - n) * ((1 - s) * i + s * m) + n * ((1 - s) * u + s * f), (1 - n) * ((1 - s) * a + s * y) + n * ((1 - s) * c + s * h), (1 - n) * ((1 - s) * l + s * g) + n * ((1 - s) * d + s * p))), this.uvs.push([
                                    n,
                                    s
                                ]);
                            }
                        });
                        o.faces = [];
                        for(var n = 0; n < t - 1; n++)for(var s = 0; s < e1 - 1; s++){
                            var v = s + n * e1, b = s + 1 + (n + 1) * e1, j = s + (n + 1) * e1;
                            o.faces.push([
                                v,
                                s + 1 + n * e1,
                                b
                            ]), o.faces.push([
                                v,
                                b,
                                j
                            ]);
                        }
                        o.computeNormals()._makeTriangleEdges()._edgesToVertices(), this.createBuffers(r, o);
                    }
                    return this.drawBuffers(r), this;
                }, S.default.RendererGL.prototype.bezier = function(e1, t, r, o, n, s, i, a, l, u, c, d) {
                    8 === arguments.length && (c = a, u = i, a = s, i = n, n = o, o = r, r = s = l = d = 0);
                    var f = this._pInst._bezierDetail || 20;
                    this.beginShape();
                    for(var h = 0; h <= f; h++){
                        var p = Math.pow(1 - h / f, 3), m = h / f * 3 * Math.pow(1 - h / f, 2), y = 3 * Math.pow(h / f, 2) * (1 - h / f), g = Math.pow(h / f, 3);
                        this.vertex(e1 * p + o * m + i * y + u * g, t * p + n * m + a * y + c * g, r * p + s * m + l * y + d * g);
                    }
                    return this.endShape(), this;
                }, S.default.RendererGL.prototype.curve = function(e1, t, r, o, n, s, i, a, l, u, c, d) {
                    8 === arguments.length && (u = i, c = a, i = n, a = o, n = o = r, r = s = l = d = 0);
                    var f = this._pInst._curveDetail;
                    this.beginShape();
                    for(var h = 0; h <= f; h++){
                        var p = .5 * Math.pow(h / f, 3), m = .5 * Math.pow(h / f, 2), y = h / f * .5;
                        this.vertex(p * (3 * o - e1 - 3 * i + u) + m * (2 * e1 - 5 * o + 4 * i - u) + y * (-e1 + i) + 2 * o * .5, p * (3 * n - t - 3 * a + c) + m * (2 * t - 5 * n + 4 * a - c) + y * (-t + a) + 2 * n * .5, p * (3 * s - r - 3 * l + d) + m * (2 * r - 5 * s + 4 * l - d) + y * (-r + l) + 2 * s * .5);
                    }
                    return this.endShape(), this;
                }, S.default.RendererGL.prototype.line = function() {
                    return 6 === arguments.length ? (this.beginShape(_.LINES), this.vertex(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 2 ? void 0 : arguments[2]), this.vertex(arguments.length <= 3 ? void 0 : arguments[3], arguments.length <= 4 ? void 0 : arguments[4], arguments.length <= 5 ? void 0 : arguments[5]), this.endShape()) : 4 === arguments.length && (this.beginShape(_.LINES), this.vertex(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], 0), this.vertex(arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 3 ? void 0 : arguments[3], 0), this.endShape()), this;
                }, S.default.RendererGL.prototype.bezierVertex = function() {
                    if (0 === this.immediateMode._bezierVertex.length) throw Error("vertex() must be used once before calling bezierVertex()");
                    var e1, t, r, o, n, s, i = [], a = [], l = arguments.length;
                    if (0 === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
                        this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
                        for(var u = 1 / this._lutBezierDetail, c = 0, d = 1, f = 0; c < 1;){
                            if (s = parseFloat(c.toFixed(6)), this._lookUpTableBezier[f] = this._bezierCoefficients(s), d.toFixed(6) === u.toFixed(6)) {
                                s = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++f, this._lookUpTableBezier[f] = this._bezierCoefficients(s);
                                break;
                            }
                            c += u, d -= u, ++f;
                        }
                    }
                    for(var h = this._lookUpTableBezier.length, p = [], m = 0; m < 4; m++)p.push([]);
                    p[0] = this.immediateMode.geometry.vertexColors.slice(-4), p[3] = this.curFillColor.slice();
                    var y = [];
                    for(m = 0; m < 4; m++)y.push([]);
                    if (y[0] = this.immediateMode.geometry.vertexStrokeColors.slice(-4), y[3] = this.curStrokeColor.slice(), 6 === l) {
                        this.isBezier = !0;
                        var i = [
                            this.immediateMode._bezierVertex[0],
                            arguments.length <= 0 ? void 0 : arguments[0],
                            arguments.length <= 2 ? void 0 : arguments[2],
                            arguments.length <= 4 ? void 0 : arguments[4]
                        ], a = [
                            this.immediateMode._bezierVertex[1],
                            arguments.length <= 1 ? void 0 : arguments[1],
                            arguments.length <= 3 ? void 0 : arguments[3],
                            arguments.length <= 5 ? void 0 : arguments[5]
                        ], g = Math.hypot(i[0] - i[1], a[0] - a[1]), v = Math.hypot(i[1] - i[2], a[1] - a[2]), b = Math.hypot(i[2] - i[3], a[2] - a[3]), v = g + v + b;
                        for(g /= v, b /= v, n = 0; n < 4; n++)p[1].push(p[0][n] * (1 - g) + p[3][n] * g), p[2].push(p[0][n] * b + p[3][n] * (1 - b)), y[1].push(y[0][n] * (1 - g) + y[3][n] * g), y[2].push(y[0][n] * b + y[3][n] * (1 - b));
                        for(o = 0; o < h; o++){
                            for(this.curFillColor = [
                                0,
                                0,
                                0,
                                0
                            ], this.curStrokeColor = [
                                0,
                                0,
                                0,
                                0
                            ], m = e1 = t = 0; m < 4; m++){
                                for(n = 0; n < 4; n++)this.curFillColor[n] += this._lookUpTableBezier[o][m] * p[m][n], this.curStrokeColor[n] += this._lookUpTableBezier[o][m] * y[m][n];
                                e1 += i[m] * this._lookUpTableBezier[o][m], t += a[m] * this._lookUpTableBezier[o][m];
                            }
                            this.vertex(e1, t);
                        }
                        this.curFillColor = p[3], this.curStrokeColor = y[3], this.immediateMode._bezierVertex[0] = arguments.length <= 4 ? void 0 : arguments[4], this.immediateMode._bezierVertex[1] = arguments.length <= 5 ? void 0 : arguments[5];
                    } else if (9 === l) {
                        this.isBezier = !0, i = [
                            this.immediateMode._bezierVertex[0],
                            arguments.length <= 0 ? void 0 : arguments[0],
                            arguments.length <= 3 ? void 0 : arguments[3],
                            arguments.length <= 6 ? void 0 : arguments[6]
                        ], a = [
                            this.immediateMode._bezierVertex[1],
                            arguments.length <= 1 ? void 0 : arguments[1],
                            arguments.length <= 4 ? void 0 : arguments[4],
                            arguments.length <= 7 ? void 0 : arguments[7]
                        ];
                        var j = [
                            this.immediateMode._bezierVertex[2],
                            arguments.length <= 2 ? void 0 : arguments[2],
                            arguments.length <= 5 ? void 0 : arguments[5],
                            arguments.length <= 8 ? void 0 : arguments[8]
                        ], _ = Math.hypot(i[0] - i[1], a[0] - a[1], j[0] - j[1]), v = Math.hypot(i[1] - i[2], a[1] - a[2], j[1] - j[2]), x = Math.hypot(i[2] - i[3], a[2] - a[3], j[2] - j[3]), l = _ + v + x;
                        for(_ /= l, x /= l, n = 0; n < 4; n++)p[1].push(p[0][n] * (1 - _) + p[3][n] * _), p[2].push(p[0][n] * x + p[3][n] * (1 - x)), y[1].push(y[0][n] * (1 - _) + y[3][n] * _), y[2].push(y[0][n] * x + y[3][n] * (1 - x));
                        for(o = 0; o < h; o++){
                            for(this.curFillColor = [
                                0,
                                0,
                                0,
                                0
                            ], this.curStrokeColor = [
                                0,
                                0,
                                0,
                                0
                            ], m = e1 = t = r = 0; m < 4; m++){
                                for(n = 0; n < 4; n++)this.curFillColor[n] += this._lookUpTableBezier[o][m] * p[m][n], this.curStrokeColor[n] += this._lookUpTableBezier[o][m] * y[m][n];
                                e1 += i[m] * this._lookUpTableBezier[o][m], t += a[m] * this._lookUpTableBezier[o][m], r += j[m] * this._lookUpTableBezier[o][m];
                            }
                            this.vertex(e1, t, r);
                        }
                        this.curFillColor = p[3], this.curStrokeColor = y[3], this.immediateMode._bezierVertex[0] = arguments.length <= 6 ? void 0 : arguments[6], this.immediateMode._bezierVertex[1] = arguments.length <= 7 ? void 0 : arguments[7], this.immediateMode._bezierVertex[2] = arguments.length <= 8 ? void 0 : arguments[8];
                    }
                }, S.default.RendererGL.prototype.quadraticVertex = function() {
                    if (0 === this.immediateMode._quadraticVertex.length) throw Error("vertex() must be used once before calling quadraticVertex()");
                    var e1, t, r, o, n, s, i = [], a = [], l = arguments.length;
                    if (0 === this._lookUpTableQuadratic.length || this._lutQuadraticDetail !== this._pInst._curveDetail) {
                        this._lookUpTableQuadratic = [], this._lutQuadraticDetail = this._pInst._curveDetail;
                        for(var u = 1 / this._lutQuadraticDetail, c = 0, d = 1, f = 0; c < 1;){
                            if (s = parseFloat(c.toFixed(6)), this._lookUpTableQuadratic[f] = this._quadraticCoefficients(s), d.toFixed(6) === u.toFixed(6)) {
                                s = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++f, this._lookUpTableQuadratic[f] = this._quadraticCoefficients(s);
                                break;
                            }
                            c += u, d -= u, ++f;
                        }
                    }
                    for(var h = this._lookUpTableQuadratic.length, p = [], m = 0; m < 3; m++)p.push([]);
                    p[0] = this.immediateMode.geometry.vertexColors.slice(-4), p[2] = this.curFillColor.slice();
                    var y = [];
                    for(m = 0; m < 3; m++)y.push([]);
                    if (y[0] = this.immediateMode.geometry.vertexStrokeColors.slice(-4), y[2] = this.curStrokeColor.slice(), 4 === l) {
                        this.isQuadratic = !0;
                        var i = [
                            this.immediateMode._quadraticVertex[0],
                            arguments.length <= 0 ? void 0 : arguments[0],
                            arguments.length <= 2 ? void 0 : arguments[2]
                        ], a = [
                            this.immediateMode._quadraticVertex[1],
                            arguments.length <= 1 ? void 0 : arguments[1],
                            arguments.length <= 3 ? void 0 : arguments[3]
                        ], g = Math.hypot(i[0] - i[1], a[0] - a[1]);
                        for(g /= g + Math.hypot(i[1] - i[2], a[1] - a[2]), n = 0; n < 4; n++)p[1].push(p[0][n] * (1 - g) + p[2][n] * g), y[1].push(y[0][n] * (1 - g) + y[2][n] * g);
                        for(o = 0; o < h; o++){
                            for(this.curFillColor = [
                                0,
                                0,
                                0,
                                0
                            ], this.curStrokeColor = [
                                0,
                                0,
                                0,
                                0
                            ], m = e1 = t = 0; m < 3; m++){
                                for(n = 0; n < 4; n++)this.curFillColor[n] += this._lookUpTableQuadratic[o][m] * p[m][n], this.curStrokeColor[n] += this._lookUpTableQuadratic[o][m] * y[m][n];
                                e1 += i[m] * this._lookUpTableQuadratic[o][m], t += a[m] * this._lookUpTableQuadratic[o][m];
                            }
                            this.vertex(e1, t);
                        }
                        this.curFillColor = p[2], this.curStrokeColor = y[2], this.immediateMode._quadraticVertex[0] = arguments.length <= 2 ? void 0 : arguments[2], this.immediateMode._quadraticVertex[1] = arguments.length <= 3 ? void 0 : arguments[3];
                    } else if (6 === l) {
                        this.isQuadratic = !0, i = [
                            this.immediateMode._quadraticVertex[0],
                            arguments.length <= 0 ? void 0 : arguments[0],
                            arguments.length <= 3 ? void 0 : arguments[3]
                        ], a = [
                            this.immediateMode._quadraticVertex[1],
                            arguments.length <= 1 ? void 0 : arguments[1],
                            arguments.length <= 4 ? void 0 : arguments[4]
                        ];
                        var v = [
                            this.immediateMode._quadraticVertex[2],
                            arguments.length <= 2 ? void 0 : arguments[2],
                            arguments.length <= 5 ? void 0 : arguments[5]
                        ], b = Math.hypot(i[0] - i[1], a[0] - a[1], v[0] - v[1]);
                        for(b /= b + Math.hypot(i[1] - i[2], a[1] - a[2], v[1] - v[2]), n = 0; n < 4; n++)p[1].push(p[0][n] * (1 - b) + p[2][n] * b), y[1].push(y[0][n] * (1 - b) + y[2][n] * b);
                        for(o = 0; o < h; o++){
                            for(this.curFillColor = [
                                0,
                                0,
                                0,
                                0
                            ], this.curStrokeColor = [
                                0,
                                0,
                                0,
                                0
                            ], m = e1 = t = r = 0; m < 3; m++){
                                for(n = 0; n < 4; n++)this.curFillColor[n] += this._lookUpTableQuadratic[o][m] * p[m][n], this.curStrokeColor[n] += this._lookUpTableQuadratic[o][m] * y[m][n];
                                e1 += i[m] * this._lookUpTableQuadratic[o][m], t += a[m] * this._lookUpTableQuadratic[o][m], r += v[m] * this._lookUpTableQuadratic[o][m];
                            }
                            this.vertex(e1, t, r);
                        }
                        this.curFillColor = p[2], this.curStrokeColor = y[2], this.immediateMode._quadraticVertex[0] = arguments.length <= 3 ? void 0 : arguments[3], this.immediateMode._quadraticVertex[1] = arguments.length <= 4 ? void 0 : arguments[4], this.immediateMode._quadraticVertex[2] = arguments.length <= 5 ? void 0 : arguments[5];
                    }
                }, S.default.RendererGL.prototype.curveVertex = function() {
                    var e1, t, r, o, n, s, i = [], a = [], l = arguments.length;
                    if (0 === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
                        this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
                        for(var u = 1 / this._lutBezierDetail, c = 0, d = 1, f = 0; c < 1;){
                            if (s = parseFloat(c.toFixed(6)), this._lookUpTableBezier[f] = this._bezierCoefficients(s), d.toFixed(6) === u.toFixed(6)) {
                                s = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++f, this._lookUpTableBezier[f] = this._bezierCoefficients(s);
                                break;
                            }
                            c += u, d -= u, ++f;
                        }
                    }
                    var h = this._lookUpTableBezier.length;
                    if (2 === l) {
                        if (this.immediateMode._curveVertex.push(arguments.length <= 0 ? void 0 : arguments[0]), this.immediateMode._curveVertex.push(arguments.length <= 1 ? void 0 : arguments[1]), 8 === this.immediateMode._curveVertex.length) {
                            for(this.isCurve = !0, i = this._bezierToCatmull([
                                this.immediateMode._curveVertex[0],
                                this.immediateMode._curveVertex[2],
                                this.immediateMode._curveVertex[4],
                                this.immediateMode._curveVertex[6]
                            ]), a = this._bezierToCatmull([
                                this.immediateMode._curveVertex[1],
                                this.immediateMode._curveVertex[3],
                                this.immediateMode._curveVertex[5],
                                this.immediateMode._curveVertex[7]
                            ]), n = 0; n < h; n++)t = i[0] * this._lookUpTableBezier[n][0] + i[1] * this._lookUpTableBezier[n][1] + i[2] * this._lookUpTableBezier[n][2] + i[3] * this._lookUpTableBezier[n][3], r = a[0] * this._lookUpTableBezier[n][0] + a[1] * this._lookUpTableBezier[n][1] + a[2] * this._lookUpTableBezier[n][2] + a[3] * this._lookUpTableBezier[n][3], this.vertex(t, r);
                            for(n = 0; n < l; n++)this.immediateMode._curveVertex.shift();
                        }
                    } else if (3 === l && (this.immediateMode._curveVertex.push(arguments.length <= 0 ? void 0 : arguments[0]), this.immediateMode._curveVertex.push(arguments.length <= 1 ? void 0 : arguments[1]), this.immediateMode._curveVertex.push(arguments.length <= 2 ? void 0 : arguments[2]), 12 === this.immediateMode._curveVertex.length)) {
                        for(this.isCurve = !0, i = this._bezierToCatmull([
                            this.immediateMode._curveVertex[0],
                            this.immediateMode._curveVertex[3],
                            this.immediateMode._curveVertex[6],
                            this.immediateMode._curveVertex[9]
                        ]), a = this._bezierToCatmull([
                            this.immediateMode._curveVertex[1],
                            this.immediateMode._curveVertex[4],
                            this.immediateMode._curveVertex[7],
                            this.immediateMode._curveVertex[10]
                        ]), e1 = this._bezierToCatmull([
                            this.immediateMode._curveVertex[2],
                            this.immediateMode._curveVertex[5],
                            this.immediateMode._curveVertex[8],
                            this.immediateMode._curveVertex[11]
                        ]), n = 0; n < h; n++)t = i[0] * this._lookUpTableBezier[n][0] + i[1] * this._lookUpTableBezier[n][1] + i[2] * this._lookUpTableBezier[n][2] + i[3] * this._lookUpTableBezier[n][3], r = a[0] * this._lookUpTableBezier[n][0] + a[1] * this._lookUpTableBezier[n][1] + a[2] * this._lookUpTableBezier[n][2] + a[3] * this._lookUpTableBezier[n][3], o = e1[0] * this._lookUpTableBezier[n][0] + e1[1] * this._lookUpTableBezier[n][1] + e1[2] * this._lookUpTableBezier[n][2] + e1[3] * this._lookUpTableBezier[n][3], this.vertex(t, r, o);
                        for(n = 0; n < l; n++)this.immediateMode._curveVertex.shift();
                    }
                }, S.default.RendererGL.prototype.image = function(e1, t, r, o, n, s, i, a, l) {
                    this._isErasing && this.blendMode(this._cachedBlendMode), this._pInst.push(), this._pInst.noLights(), this._pInst.noStroke(), this._pInst.texture(e1), this._pInst.textureMode(_.NORMAL);
                    var u = 0, c = (t <= e1.width && (u = t / e1.width), 1), t = (t + o <= e1.width && (c = (t + o) / e1.width), 0), o = (r <= e1.height && (t = r / e1.height), 1);
                    r + n <= e1.height && (o = (r + n) / e1.height), this.beginShape(), this.vertex(s, i, 0, u, t), this.vertex(s + a, i, 0, c, t), this.vertex(s + a, i + l, 0, c, o), this.vertex(s, i + l, 0, u, o), this.endShape(_.CLOSE), this._pInst.pop(), this._isErasing && this.blendMode(_.REMOVE);
                };
                var n = S.default;
                r.default = n;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "./p5.Geometry": 323,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.for-each": 156,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.math.hypot": 169,
                "core-js/modules/es.math.sign": 170,
                "core-js/modules/es.number.to-fixed": 173,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        317: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.math.hypot"), e1("core-js/modules/es.math.sign"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.for-each"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.math.hypot"), e1("core-js/modules/es.math.sign"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.for-each"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var g = (s = e1("../core/main")) && s.__esModule ? s : {
                    default: s
                }, n = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== v(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = i();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants"));
                function i() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, i = function() {
                        return e1;
                    }, e1);
                }
                function v(e1) {
                    return (v = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                g.default.prototype.orbitControl = function(e1, t, r, o) {
                    var n = this, s = (this._assert3d("orbitControl"), g.default._validateParameters("orbitControl", arguments), this._renderer._curCamera);
                    void 0 === e1 && (e1 = 1), void 0 === t && (t = e1), void 0 === r && (r = 1), "object" !== v(o) && (o = {}), !0 !== this.contextMenuDisabled && (this.canvas.oncontextmenu = function() {
                        return !1;
                    }, this._setProperty("contextMenuDisabled", !0)), !0 !== this.wheelDefaultDisabled && (this.canvas.onwheel = function() {
                        return !1;
                    }, this._setProperty("wheelDefaultDisabled", !0));
                    var i = o.disableTouchActions;
                    !0 === this.touchActionsDisabled || void 0 !== i && !i || (this.canvas.style["touch-action"] = "none", this._setProperty("touchActionsDisabled", !0));
                    var a, l, u, i = o.freeRotation, o = void 0 !== i && i, c = [], i = (this.touches.forEach(function(t) {
                        n._renderer.prevTouches.forEach(function(e1) {
                            t.id === e1.id && (e1 = {
                                x: t.x,
                                y: t.y,
                                px: e1.x,
                                py: e1.y
                            }, c.push(e1));
                        });
                    }), this._renderer.prevTouches = this.touches, 0), d = 0, f = 0, h = 0, p = 0, m = this.height < this.width ? this.height : this.width, y = !1;
                    return 0 < c.length ? (y = 0 < c[0].x && c[0].x < this.width && 0 < c[0].y && c[0].y < this.height, 1 === c.length ? (d = -e1 * ((a = c[0]).x - a.px) / m, f = t * (a.y - a.py) / m) : (a = c[0], l = c[1], i = -(Math.hypot(a.x - l.x, a.y - l.y) - Math.hypot(a.px - l.px, a.py - l.py)) * r * 4e-4, h = .5 * (a.x + l.x) - .5 * (a.px + l.px), p = .5 * (a.y + l.y) - .5 * (a.py + l.py)), 0 < this.touches.length ? y && (this._renderer.executeRotateAndMove = !0, this._renderer.executeZoom = !0) : (this._renderer.executeRotateAndMove = !1, this._renderer.executeZoom = !1)) : (y = 0 < this.mouseX && this.mouseX < this.width && 0 < this.mouseY && this.mouseY < this.height, 0 !== this._mouseWheelDeltaY ? (i = Math.sign(this._mouseWheelDeltaY) * r, i *= .01, this._mouseWheelDeltaY = 0, y && (this._renderer.executeZoom = !0)) : this._renderer.zoomFlag = !1, this.mouseIsPressed ? (this.mouseButton === this.LEFT ? (d = -e1 * this.movedX / m, f = t * this.movedY / m) : this.mouseButton === this.RIGHT && (h = this.movedX, p = this.movedY), y && (this._renderer.executeRotateAndMove = !0)) : this._renderer.executeRotateAndMove = !1), 0 !== i && this._renderer.executeZoom && (this._renderer.zoomVelocity += i), .001 < Math.abs(this._renderer.zoomVelocity) ? (o ? s._orbitFree(0, 0, this._renderer.zoomVelocity) : s._orbit(0, 0, this._renderer.zoomVelocity), 0 !== s.projMatrix.mat4[15] && (s.projMatrix.mat4[0] *= Math.pow(10, -this._renderer.zoomVelocity), s.projMatrix.mat4[5] *= Math.pow(10, -this._renderer.zoomVelocity), this._renderer.uPMatrix.mat4[0] = s.projMatrix.mat4[0], this._renderer.uPMatrix.mat4[5] = s.projMatrix.mat4[5]), this._renderer.zoomVelocity *= .85) : this._renderer.zoomVelocity = 0, 0 === d && 0 === f || !this._renderer.executeRotateAndMove || this._renderer.rotateVelocity.add(.6 * d, .6 * f), 1e-6 < this._renderer.rotateVelocity.magSq() ? (o ? s._orbitFree(-this._renderer.rotateVelocity.x, this._renderer.rotateVelocity.y, 0) : s._orbit(this._renderer.rotateVelocity.x, this._renderer.rotateVelocity.y, 0), this._renderer.rotateVelocity.mult(.85)) : this._renderer.rotateVelocity.set(0, 0), 0 === h && 0 === p || !this._renderer.executeRotateAndMove || (a = 2 * h / this.width, l = 2 * -p / this.height, this._renderer.moveVelocity.add(.15 * a, .15 * l)), 1e-6 < this._renderer.moveVelocity.magSq() ? (r = s._getLocalAxes(), e1 = s.eyeX - s.centerX, t = s.eyeY - s.centerY, m = s.eyeZ - s.centerZ, y = Math.sqrt(e1 * e1 + t * t + m * m), i = new g.default.Vector(s.centerX, s.centerY, s.centerZ), i = s.cameraMatrix.multiplyPoint(i), (i = this._renderer.uPMatrix.multiplyAndNormalizePoint(i)).x -= this._renderer.moveVelocity.x, i.y -= this._renderer.moveVelocity.y, f = 0 === (d = this._renderer.uPMatrix.mat4)[15] ? (u = (d[8] + i.x) / d[0] * y, (d[9] + i.y) / d[5] * y) : (u = (i.x - d[12]) / d[0], (i.y - d[13]) / d[5]), s.setPosition(s.eyeX + u * r.x[0] + f * r.y[0], s.eyeY + u * r.x[1] + f * r.y[1], s.eyeZ + u * r.x[2] + f * r.y[2]), this._renderer.moveVelocity.mult(.85)) : this._renderer.moveVelocity.set(0, 0), this;
                }, g.default.prototype.debugMode = function() {
                    this._assert3d("debugMode");
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    g.default._validateParameters("debugMode", t);
                    for(var o = this._registeredMethods.post.length - 1; 0 <= o; o--)this._registeredMethods.post[o].toString() !== this._grid().toString() && this._registeredMethods.post[o].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(o, 1);
                    t[0] === n.GRID ? this.registerMethod("post", this._grid.call(this, t[1], t[2], t[3], t[4], t[5])) : t[0] === n.AXES ? this.registerMethod("post", this._axesIcon.call(this, t[1], t[2], t[3], t[4])) : (this.registerMethod("post", this._grid.call(this, t[0], t[1], t[2], t[3], t[4])), this.registerMethod("post", this._axesIcon.call(this, t[5], t[6], t[7], t[8])));
                }, g.default.prototype.noDebugMode = function() {
                    this._assert3d("noDebugMode");
                    for(var e1 = this._registeredMethods.post.length - 1; 0 <= e1; e1--)this._registeredMethods.post[e1].toString() !== this._grid().toString() && this._registeredMethods.post[e1].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(e1, 1);
                }, g.default.prototype._grid = function(e1, r, o, n, s) {
                    void 0 === e1 && (e1 = this.width / 2), void 0 === r && (r = Math.round(e1 / 30) < 4 ? 4 : Math.round(e1 / 30)), void 0 === o && (o = 0), void 0 === n && (n = 0), void 0 === s && (s = 0);
                    var i = e1 / r, a = e1 / 2;
                    return function() {
                        this.push(), this.stroke(255 * this._renderer.curStrokeColor[0], 255 * this._renderer.curStrokeColor[1], 255 * this._renderer.curStrokeColor[2]), this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]);
                        for(var e1 = 0; e1 <= r; e1++)this.beginShape(this.LINES), this.vertex(-a + o, n, e1 * i - a + s), this.vertex(a + o, n, e1 * i - a + s), this.endShape();
                        for(var t = 0; t <= r; t++)this.beginShape(this.LINES), this.vertex(t * i - a + o, n, -a + s), this.vertex(t * i - a + o, n, a + s), this.endShape();
                        this.pop();
                    };
                }, g.default.prototype._axesIcon = function(e1, t, r, o) {
                    return void 0 === e1 && (e1 = 40 < this.width / 20 ? this.width / 20 : 40), void 0 === t && (t = -this.width / 4), void 0 === r && (r = t), void 0 === o && (o = t), function() {
                        this.push(), this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]), this.strokeWeight(2), this.stroke(255, 0, 0), this.beginShape(this.LINES), this.vertex(t, r, o), this.vertex(t + e1, r, o), this.endShape(), this.stroke(0, 255, 0), this.beginShape(this.LINES), this.vertex(t, r, o), this.vertex(t, r + e1, o), this.endShape(), this.stroke(0, 0, 255), this.beginShape(this.LINES), this.vertex(t, r, o), this.vertex(t, r, o + e1), this.endShape(), this.pop();
                    };
                };
                var s = g.default;
                r.default = s;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "core-js/modules/es.array.for-each": 156,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.splice": 166,
                "core-js/modules/es.math.hypot": 169,
                "core-js/modules/es.math.sign": 170,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.for-each": 235,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        318: [
            function(e1, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var m = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                m.default.prototype.ambientLight = function(e1, t, r, o) {
                    this._assert3d("ambientLight"), m.default._validateParameters("ambientLight", arguments);
                    var n = this.color.apply(this, arguments);
                    return this._renderer.ambientLightColors.push(n._array[0], n._array[1], n._array[2]), this._renderer._enableLighting = !0, this;
                }, m.default.prototype.specularColor = function(e1, t, r) {
                    this._assert3d("specularColor"), m.default._validateParameters("specularColor", arguments);
                    var o = this.color.apply(this, arguments);
                    return this._renderer.specularColors = [
                        o._array[0],
                        o._array[1],
                        o._array[2]
                    ], this;
                }, m.default.prototype.directionalLight = function(e1, t, r, o, n, s) {
                    this._assert3d("directionalLight"), m.default._validateParameters("directionalLight", arguments), e1 = e1 instanceof m.default.Color ? e1 : this.color(e1, t, r);
                    var i, a, t = arguments[arguments.length - 1], r = "number" == typeof t ? (i = arguments[arguments.length - 3], a = arguments[arguments.length - 2], arguments[arguments.length - 1]) : (i = t.x, a = t.y, t.z), t = Math.sqrt(i * i + a * a + r * r);
                    return this._renderer.directionalLightDirections.push(i / t, a / t, r / t), this._renderer.directionalLightDiffuseColors.push(e1._array[0], e1._array[1], e1._array[2]), Array.prototype.push.apply(this._renderer.directionalLightSpecularColors, this._renderer.specularColors), this._renderer._enableLighting = !0, this;
                }, m.default.prototype.pointLight = function(e1, t, r, o, n, s) {
                    this._assert3d("pointLight"), m.default._validateParameters("pointLight", arguments), e1 = e1 instanceof m.default.Color ? e1 : this.color(e1, t, r);
                    var i, a, t = arguments[arguments.length - 1], r = "number" == typeof t ? (i = arguments[arguments.length - 3], a = arguments[arguments.length - 2], arguments[arguments.length - 1]) : (i = t.x, a = t.y, t.z);
                    return this._renderer.pointLightPositions.push(i, a, r), this._renderer.pointLightDiffuseColors.push(e1._array[0], e1._array[1], e1._array[2]), Array.prototype.push.apply(this._renderer.pointLightSpecularColors, this._renderer.specularColors), this._renderer._enableLighting = !0, this;
                }, m.default.prototype.lights = function() {
                    this._assert3d("lights");
                    var e1 = this.color("rgb(128,128,128)");
                    return this.ambientLight(e1), this.directionalLight(e1, 0, 0, -1), this;
                }, m.default.prototype.lightFalloff = function(e1, t, r) {
                    return this._assert3d("lightFalloff"), m.default._validateParameters("lightFalloff", arguments), e1 < 0 && (e1 = 0, console.warn("Value of constant argument in lightFalloff() should be never be negative. Set to 0.")), t < 0 && (t = 0, console.warn("Value of linear argument in lightFalloff() should be never be negative. Set to 0.")), r < 0 && (r = 0, console.warn("Value of quadratic argument in lightFalloff() should be never be negative. Set to 0.")), 0 === e1 && 0 === t && 0 === r && (e1 = 1, console.warn("Either one of the three arguments in lightFalloff() should be greater than zero. Set constant argument to 1.")), this._renderer.constantAttenuation = e1, this._renderer.linearAttenuation = t, this._renderer.quadraticAttenuation = r, this;
                }, m.default.prototype.spotLight = function(e1, t, r, o, n, s, i, a, l, u, c) {
                    this._assert3d("spotLight"), m.default._validateParameters("spotLight", arguments);
                    var d, f, h, p = arguments.length;
                    switch(p){
                        case 11:
                        case 10:
                            d = this.color(e1, t, r), f = new m.default.Vector(o, n, s), h = new m.default.Vector(i, a, l);
                            break;
                        case 9:
                            e1 instanceof m.default.Color ? (d = e1, f = new m.default.Vector(t, r, o), h = new m.default.Vector(n, s, i), u = a, c = l) : o instanceof m.default.Vector ? (d = this.color(e1, t, r), f = o, h = new m.default.Vector(n, s, i), u = a, c = l) : i instanceof m.default.Vector ? (d = this.color(e1, t, r), f = new m.default.Vector(o, n, s), h = i, u = a, c = l) : (d = this.color(e1, t, r), f = new m.default.Vector(o, n, s), h = new m.default.Vector(i, a, l));
                            break;
                        case 8:
                            u = (h = e1 instanceof m.default.Color ? (d = e1, f = new m.default.Vector(t, r, o), new m.default.Vector(n, s, i)) : o instanceof m.default.Vector ? (d = this.color(e1, t, r), f = o, new m.default.Vector(n, s, i)) : (d = this.color(e1, t, r), f = new m.default.Vector(o, n, s), i), a);
                            break;
                        case 7:
                            e1 instanceof m.default.Color && t instanceof m.default.Vector ? (d = e1, f = t, h = new m.default.Vector(r, o, n), u = s, c = i) : e1 instanceof m.default.Color && n instanceof m.default.Vector ? (d = e1, f = new m.default.Vector(t, r, o), h = n, u = s, c = i) : o instanceof m.default.Vector && n instanceof m.default.Vector ? (d = this.color(e1, t, r), f = o, h = n, u = s, c = i) : h = e1 instanceof m.default.Color ? (d = e1, f = new m.default.Vector(t, r, o), new m.default.Vector(n, s, i)) : o instanceof m.default.Vector ? (d = this.color(e1, t, r), f = o, new m.default.Vector(n, s, i)) : (d = this.color(e1, t, r), f = new m.default.Vector(o, n, s), i);
                            break;
                        case 6:
                            o instanceof m.default.Vector && n instanceof m.default.Vector ? (d = this.color(e1, t, r), f = o, h = n, u = s) : e1 instanceof m.default.Color && n instanceof m.default.Vector ? (d = e1, f = new m.default.Vector(t, r, o), h = n, u = s) : e1 instanceof m.default.Color && t instanceof m.default.Vector && (d = e1, f = t, h = new m.default.Vector(r, o, n), u = s);
                            break;
                        case 5:
                            e1 instanceof m.default.Color && t instanceof m.default.Vector && r instanceof m.default.Vector ? (d = e1, f = t, h = r, u = o, c = n) : o instanceof m.default.Vector && n instanceof m.default.Vector ? (d = this.color(e1, t, r), f = o, h = n) : e1 instanceof m.default.Color && n instanceof m.default.Vector ? (d = e1, f = new m.default.Vector(t, r, o), h = n) : e1 instanceof m.default.Color && t instanceof m.default.Vector && (d = e1, f = t, h = new m.default.Vector(r, o, n));
                            break;
                        case 4:
                            d = e1, f = t, h = r, u = o;
                            break;
                        case 3:
                            d = e1, f = t, h = r;
                            break;
                        default:
                            return console.warn("Sorry, input for spotlight() is not in prescribed format. Too ".concat(p < 3 ? "few" : "many", " arguments were provided")), this;
                    }
                    return this._renderer.spotLightDiffuseColors.push(d._array[0], d._array[1], d._array[2]), Array.prototype.push.apply(this._renderer.spotLightSpecularColors, this._renderer.specularColors), this._renderer.spotLightPositions.push(f.x, f.y, f.z), h.normalize(), this._renderer.spotLightDirections.push(h.x, h.y, h.z), void 0 === u && (u = Math.PI / 3), void 0 !== c && c < 1 ? (c = 1, console.warn("Value of concentration needs to be greater than 1. Setting it to 1")) : void 0 === c && (c = 100), u = this._renderer._pInst._toRadians(u), this._renderer.spotLightAngle.push(Math.cos(u)), this._renderer.spotLightConc.push(c), this._renderer._enableLighting = !0, this;
                }, m.default.prototype.noLights = function() {
                    this._assert3d("noLights");
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    return m.default._validateParameters("noLights", t), this._renderer._enableLighting = !1, this._renderer.ambientLightColors.length = 0, this._renderer.specularColors = [
                        1,
                        1,
                        1
                    ], this._renderer.directionalLightDirections.length = 0, this._renderer.directionalLightDiffuseColors.length = 0, this._renderer.directionalLightSpecularColors.length = 0, this._renderer.pointLightPositions.length = 0, this._renderer.pointLightDiffuseColors.length = 0, this._renderer.pointLightSpecularColors.length = 0, this._renderer.spotLightPositions.length = 0, this._renderer.spotLightDirections.length = 0, this._renderer.spotLightDiffuseColors.length = 0, this._renderer.spotLightSpecularColors.length = 0, this._renderer.spotLightAngle.length = 0, this._renderer.spotLightConc.length = 0, this._renderer.constantAttenuation = 1, this._renderer.linearAttenuation = 0, this._renderer.quadraticAttenuation = 0, this._renderer._useShininess = 1, this;
                };
                e1 = m.default;
                r.default = e1;
            },
            {
                "../core/main": 273
            }
        ],
        319: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.match"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.string.trim"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.array.splice"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.match"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.string.trim"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var x = (o = e1("../core/main")) && o.__esModule ? o : {
                    default: o
                };
                e1("./p5.Geometry"), x.default.prototype.loadModel = function(e1) {
                    x.default._validateParameters("loadModel", arguments);
                    var y, g, t, r = e1.slice(-4), v = ("boolean" == typeof arguments[1] ? (y = arguments[1], g = arguments[2], t = arguments[3], void 0 !== arguments[4] && (r = arguments[4])) : (y = !1, g = arguments[1], t = arguments[2], void 0 !== arguments[3] && (r = arguments[3])), new x.default.Geometry), b = (v.gid = "".concat(e1, "|").concat(y), this);
                    return r.match(/\.stl$/i) ? this.httpDo(e1, "GET", "arrayBuffer", function(e1) {
                        !function(e1, t) {
                            if (function(e1) {
                                for(var t = new DataView(e1), r = [
                                    115,
                                    111,
                                    108,
                                    105,
                                    100
                                ], o = 0; o < 5; o++)if (function(e1, t, r) {
                                    for(var o = 0, n = e1.length; o < n; o++)if (e1[o] !== t.getUint8(r + o, !1)) return;
                                    return 1;
                                }(r, t, o)) return;
                                return 1;
                            }(t)) !function(e1, t) {
                                for(var r, o, n, s, i, a, l, u = new DataView(t), c = u.getUint32(80, !0), d = !1, f = 0; f < 70; f++)1129270351 === u.getUint32(f, !1) && 82 === u.getUint8(f + 4) && 61 === u.getUint8(f + 5) && (d = !0, s = [], i = u.getUint8(f + 6) / 255, a = u.getUint8(f + 7) / 255, l = u.getUint8(f + 8) / 255);
                                for(var h = 0; h < c; h++){
                                    for(var p, m = 84 + 50 * h, y = u.getFloat32(m, !0), g = u.getFloat32(4 + m, !0), v = u.getFloat32(8 + m, !0), b = (d && (p = u.getUint16(48 + m, !0), n = 0 == (32768 & p) ? (r = (31 & p) / 31, o = (p >> 5 & 31) / 31, (p >> 10 & 31) / 31) : (r = i, o = a, l)), new x.default.Vector(y, g, v)), j = 1; j <= 3; j++){
                                        var _ = m + 12 * j, _ = new x.default.Vector(u.getFloat32(_, !0), u.getFloat32(4 + _, !0), u.getFloat32(8 + _, !0));
                                        e1.vertices.push(_), e1.vertexNormals.push(b), d && s.push(r, o, n);
                                    }
                                    e1.faces.push([
                                        3 * h,
                                        3 * h + 1,
                                        3 * h + 2
                                    ]), e1.uvs.push([
                                        0,
                                        0
                                    ], [
                                        0,
                                        0
                                    ], [
                                        0,
                                        0
                                    ]);
                                }
                            }(e1, t);
                            else {
                                t = new DataView(t);
                                if (!("TextDecoder" in window)) return console.warn("Sorry, ASCII STL loading only works in browsers that support TextDecoder (https://caniuse.com/#feat=textencoder)");
                                t = new TextDecoder("utf-8").decode(t).split("\n");
                                !function(e1, t) {
                                    for(var r, o, n = "", s = [], i = 0; i < t.length; ++i){
                                        for(var a = t[i].trim(), l = a.split(" "), u = 0; u < l.length; ++u)"" === l[u] && l.splice(u, 1);
                                        if (0 !== l.length) switch(n){
                                            case "":
                                                if ("solid" !== l[0]) return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "solid"'));
                                                n = "solid";
                                                break;
                                            case "solid":
                                                if ("facet" !== l[0] || "normal" !== l[1]) return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "facet normal"'));
                                                r = new x.default.Vector(parseFloat(l[2]), parseFloat(l[3]), parseFloat(l[4])), e1.vertexNormals.push(r, r, r), n = "facet normal";
                                                break;
                                            case "facet normal":
                                                if ("outer" !== l[0] || "loop" !== l[1]) return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "outer loop"'));
                                                n = "vertex";
                                                break;
                                            case "vertex":
                                                if ("vertex" === l[0]) o = new x.default.Vector(parseFloat(l[1]), parseFloat(l[2]), parseFloat(l[3])), e1.vertices.push(o), e1.uvs.push([
                                                    0,
                                                    0
                                                ]), s.push(e1.vertices.indexOf(o));
                                                else {
                                                    if ("endloop" !== l[0]) return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "vertex" or "endloop"'));
                                                    e1.faces.push(s), s = [], n = "endloop";
                                                }
                                                break;
                                            case "endloop":
                                                if ("endfacet" !== l[0]) return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "endfacet"'));
                                                n = "endfacet";
                                                break;
                                            case "endfacet":
                                                if ("endsolid" !== l[0]) {
                                                    if ("facet" !== l[0] || "normal" !== l[1]) return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "endsolid" or "facet normal"'));
                                                    r = new x.default.Vector(parseFloat(l[2]), parseFloat(l[3]), parseFloat(l[4])), e1.vertexNormals.push(r, r, r), n = "facet normal";
                                                }
                                                break;
                                            default:
                                                console.error('Invalid state "'.concat(n, '"'));
                                        }
                                    }
                                }(e1, t);
                            }
                        }(v, e1), y && v.normalize(), b._decrementPreload(), "function" == typeof g && g(v);
                    }, t) : r.match(/\.obj$/i) ? this.loadStrings(e1, function(e1) {
                        for(var t = v, r = e1, o = {
                            v: [],
                            vt: [],
                            vn: []
                        }, n = {}, s = 0; s < r.length; ++s){
                            var i = r[s].trim().split(/\b\s+/);
                            if (0 < i.length) {
                                if ("v" === i[0] || "vn" === i[0]) {
                                    var a = new x.default.Vector(parseFloat(i[1]), parseFloat(i[2]), parseFloat(i[3]));
                                    o[i[0]].push(a);
                                } else if ("vt" === i[0]) {
                                    a = [
                                        parseFloat(i[1]),
                                        1 - parseFloat(i[2])
                                    ];
                                    o[i[0]].push(a);
                                } else if ("f" === i[0]) for(var l = 3; l < i.length; ++l){
                                    for(var u = [], c = [
                                        1,
                                        l - 1,
                                        l
                                    ], d = 0; d < c.length; ++d){
                                        var f = i[c[d]], h = 0;
                                        if (void 0 !== n[f]) h = n[f];
                                        else {
                                            for(var p = f.split("/"), m = 0; m < p.length; m++)p[m] = parseInt(p[m]) - 1;
                                            h = n[f] = t.vertices.length, t.vertices.push(o.v[p[0]].copy()), o.vt[p[1]] ? t.uvs.push(o.vt[p[1]].slice()) : t.uvs.push([
                                                0,
                                                0
                                            ]), o.vn[p[2]] && t.vertexNormals.push(o.vn[p[2]].copy());
                                        }
                                        u.push(h);
                                    }
                                    u[0] !== u[1] && u[0] !== u[2] && u[1] !== u[2] && t.faces.push(u);
                                }
                            }
                        }
                        0 === t.vertexNormals.length && t.computeNormals(), y && v.normalize(), b._decrementPreload(), "function" == typeof g && g(v);
                    }, t) : (x.default._friendlyFileLoadError(3, e1), t ? t() : x.default._friendlyError("Sorry, the file type is invalid. Only OBJ and STL files are supported.")), v;
                }, x.default.prototype.model = function(e1) {
                    this._assert3d("model"), x.default._validateParameters("model", arguments), 0 < e1.vertices.length && (this._renderer.geometryInHash(e1.gid) || (0 === e1.edges.length && e1._makeTriangleEdges(), e1._edgesToVertices(), this._renderer.createBuffers(e1.gid, e1)), this._renderer.drawBuffers(e1.gid));
                };
                var o = x.default;
                r.default = o;
            },
            {
                "../core/main": 273,
                "./p5.Geometry": 323,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.index-of": 159,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.array.splice": 166,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.string.match": 191,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/es.string.trim": 199
            }
        ],
        320: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.join"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var u = (s = e1("../core/main")) && s.__esModule ? s : {
                    default: s
                }, n = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants"));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                e1("./p5.Texture"), u.default.prototype.loadShader = function(e1, t, r, o) {
                    u.default._validateParameters("loadShader", arguments), o = o || console.error;
                    function n() {
                        i._decrementPreload(), r && r(s);
                    }
                    var s = new u.default.Shader, i = this, a = !1, l = !1;
                    return this.loadStrings(e1, function(e1) {
                        s._vertSrc = e1.join("\n"), l = !0, a && n();
                    }, o), this.loadStrings(t, function(e1) {
                        s._fragSrc = e1.join("\n"), a = !0, l && n();
                    }, o), s;
                }, u.default.prototype.createShader = function(e1, t) {
                    return this._assert3d("createShader"), u.default._validateParameters("createShader", arguments), new u.default.Shader(this._renderer, e1, t);
                }, u.default.prototype.shader = function(e1) {
                    return this._assert3d("shader"), u.default._validateParameters("shader", arguments), void 0 === e1._renderer && (e1._renderer = this._renderer), e1.init(), e1.isStrokeShader() ? this._renderer.userStrokeShader = e1 : (this._renderer.userFillShader = e1, this._renderer._useNormalMaterial = !1), this;
                }, u.default.prototype.resetShader = function() {
                    return this._renderer.userFillShader = this._renderer.userStrokeShader = null, this;
                }, u.default.prototype.texture = function(e1) {
                    return this._assert3d("texture"), u.default._validateParameters("texture", arguments), e1.gifProperties && e1._animateGif(this), this._renderer.drawMode = n.TEXTURE, this._renderer._useNormalMaterial = !1, this._renderer._tex = e1, this._renderer._setProperty("_doFill", !0), this;
                }, u.default.prototype.textureMode = function(e1) {
                    e1 !== n.IMAGE && e1 !== n.NORMAL ? console.warn("You tried to set ".concat(e1, " textureMode only supports IMAGE & NORMAL ")) : this._renderer.textureMode = e1;
                }, u.default.prototype.textureWrap = function(e1) {
                    var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : e1, r = (this._renderer.textureWrapX = e1, this._renderer.textureWrapY = t, !0), o = !1, n = void 0;
                    try {
                        for(var s, i = this._renderer.textures.values()[Symbol.iterator](); !(r = (s = i.next()).done); r = !0)s.value.setWrapMode(e1, t);
                    } catch (e1) {
                        o = !0, n = e1;
                    } finally{
                        try {
                            r || null == i.return || i.return();
                        } finally{
                            if (o) throw n;
                        }
                    }
                }, u.default.prototype.normalMaterial = function() {
                    this._assert3d("normalMaterial");
                    for(var e1 = arguments.length, t = new Array(e1), r = 0; r < e1; r++)t[r] = arguments[r];
                    return u.default._validateParameters("normalMaterial", t), this._renderer.drawMode = n.FILL, this._renderer._useSpecularMaterial = !1, this._renderer._useEmissiveMaterial = !1, this._renderer._useNormalMaterial = !0, this._renderer.curFillColor = [
                        1,
                        1,
                        1,
                        1
                    ], this._renderer._setProperty("_doFill", !0), this.noStroke(), this;
                }, u.default.prototype.ambientMaterial = function(e1, t, r) {
                    this._assert3d("ambientMaterial"), u.default._validateParameters("ambientMaterial", arguments);
                    var o = u.default.prototype.color.apply(this, arguments);
                    return this._renderer._hasSetAmbient = !0, this._renderer.curAmbientColor = o._array, this._renderer._useNormalMaterial = !1, this._renderer._enableLighting = !0, this._renderer._setProperty("_doFill", !0), this;
                }, u.default.prototype.emissiveMaterial = function(e1, t, r, o) {
                    this._assert3d("emissiveMaterial"), u.default._validateParameters("emissiveMaterial", arguments);
                    var n = u.default.prototype.color.apply(this, arguments);
                    return this._renderer.curEmissiveColor = n._array, this._renderer._useEmissiveMaterial = !0, this._renderer._useNormalMaterial = !1, this._renderer._enableLighting = !0, this;
                }, u.default.prototype.specularMaterial = function(e1, t, r, o) {
                    this._assert3d("specularMaterial"), u.default._validateParameters("specularMaterial", arguments);
                    var n = u.default.prototype.color.apply(this, arguments);
                    return this._renderer.curSpecularColor = n._array, this._renderer._useSpecularMaterial = !0, this._renderer._useNormalMaterial = !1, this._renderer._enableLighting = !0, this;
                }, u.default.prototype.shininess = function(e1) {
                    return this._assert3d("shininess"), u.default._validateParameters("shininess", arguments), this._renderer._useShininess = e1 = e1 < 1 ? 1 : e1, this;
                }, u.default.RendererGL.prototype._applyColorBlend = function(e1) {
                    var t = this.GL, r = this.drawMode === n.TEXTURE, r = this.userFillShader || this.userStrokeShader || this.userPointShader || r || this.curBlendMode !== n.BLEND || e1[e1.length - 1] < 1 || this._isErasing;
                    return r !== this._isBlending && (r || this.curBlendMode !== n.BLEND && this.curBlendMode !== n.ADD ? t.enable(t.BLEND) : t.disable(t.BLEND), t.depthMask(!0), this._isBlending = r), this._applyBlendMode(), e1;
                }, u.default.RendererGL.prototype._applyBlendMode = function() {
                    if (this._cachedBlendMode !== this.curBlendMode) {
                        var e1 = this.GL;
                        switch(this.curBlendMode){
                            case n.BLEND:
                                e1.blendEquation(e1.FUNC_ADD), e1.blendFunc(e1.ONE, e1.ONE_MINUS_SRC_ALPHA);
                                break;
                            case n.ADD:
                                e1.blendEquation(e1.FUNC_ADD), e1.blendFunc(e1.ONE, e1.ONE);
                                break;
                            case n.REMOVE:
                                e1.blendEquation(e1.FUNC_ADD), e1.blendFunc(e1.ZERO, e1.ONE_MINUS_SRC_ALPHA);
                                break;
                            case n.MULTIPLY:
                                e1.blendEquation(e1.FUNC_ADD), e1.blendFunc(e1.DST_COLOR, e1.ONE_MINUS_SRC_ALPHA);
                                break;
                            case n.SCREEN:
                                e1.blendEquation(e1.FUNC_ADD), e1.blendFunc(e1.ONE, e1.ONE_MINUS_SRC_COLOR);
                                break;
                            case n.EXCLUSION:
                                e1.blendEquationSeparate(e1.FUNC_ADD, e1.FUNC_ADD), e1.blendFuncSeparate(e1.ONE_MINUS_DST_COLOR, e1.ONE_MINUS_SRC_COLOR, e1.ONE, e1.ONE);
                                break;
                            case n.REPLACE:
                                e1.blendEquation(e1.FUNC_ADD), e1.blendFunc(e1.ONE, e1.ZERO);
                                break;
                            case n.SUBTRACT:
                                e1.blendEquationSeparate(e1.FUNC_REVERSE_SUBTRACT, e1.FUNC_ADD), e1.blendFuncSeparate(e1.ONE, e1.ONE, e1.ONE, e1.ONE_MINUS_SRC_ALPHA);
                                break;
                            case n.DARKEST:
                                this.blendExt ? (e1.blendEquationSeparate(this.blendExt.MIN || this.blendExt.MIN_EXT, e1.FUNC_ADD), e1.blendFuncSeparate(e1.ONE, e1.ONE, e1.ONE, e1.ONE)) : console.warn("blendMode(DARKEST) does not work in your browser in WEBGL mode.");
                                break;
                            case n.LIGHTEST:
                                this.blendExt ? (e1.blendEquationSeparate(this.blendExt.MAX || this.blendExt.MAX_EXT, e1.FUNC_ADD), e1.blendFuncSeparate(e1.ONE, e1.ONE, e1.ONE, e1.ONE)) : console.warn("blendMode(LIGHTEST) does not work in your browser in WEBGL mode.");
                                break;
                            default:
                                console.error("Oops! Somehow RendererGL set curBlendMode to an unsupported mode.");
                        }
                        this._isErasing || (this._cachedBlendMode = this.curBlendMode);
                    }
                };
                var s = u.default;
                r.default = s;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "./p5.Texture": 330,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.join": 161,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        321: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.math.hypot"), e1("core-js/modules/es.string.sub"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.math.hypot"), e1("core-js/modules/es.string.sub"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var _ = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function n(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                _.default.prototype.camera = function() {
                    var e1;
                    this._assert3d("camera");
                    for(var t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return _.default._validateParameters("camera", r), (e1 = this._renderer._curCamera).camera.apply(e1, r), this;
                }, _.default.prototype.perspective = function() {
                    var e1;
                    this._assert3d("perspective");
                    for(var t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return _.default._validateParameters("perspective", r), (e1 = this._renderer._curCamera).perspective.apply(e1, r), this;
                }, _.default.prototype.ortho = function() {
                    var e1;
                    this._assert3d("ortho");
                    for(var t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return _.default._validateParameters("ortho", r), (e1 = this._renderer._curCamera).ortho.apply(e1, r), this;
                }, _.default.prototype.frustum = function() {
                    var e1;
                    this._assert3d("frustum");
                    for(var t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return _.default._validateParameters("frustum", r), (e1 = this._renderer._curCamera).frustum.apply(e1, r), this;
                }, _.default.prototype.createCamera = function() {
                    this._assert3d("createCamera");
                    var e1 = new _.default.Camera(this._renderer);
                    return e1._computeCameraDefaultSettings(), e1._setDefaultCamera(), this._renderer._curCamera = e1;
                }, _.default.Camera = function() {
                    function t(e1) {
                        if (!(this instanceof t)) throw new TypeError("Cannot call a class as a function");
                        this._renderer = e1, this.cameraType = "default", this.cameraMatrix = new _.default.Matrix, this.projMatrix = new _.default.Matrix, this.yScale = 1;
                    }
                    var e1, r, o;
                    return e1 = t, r = [
                        {
                            key: "perspective",
                            value: function(e1, t, r, o) {
                                this.cameraType = 0 < arguments.length ? "custom" : "default", void 0 === e1 ? (e1 = this.defaultCameraFOV, this.cameraFOV = e1) : this.cameraFOV = this._renderer._pInst._toRadians(e1), void 0 === t && (t = this.defaultAspectRatio), void 0 === r && (r = this.defaultCameraNear), void 0 === o && (o = this.defaultCameraFar), r <= 1e-4 && (r = .01, console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")), o < r && console.log("Perspective far plane value is less than near plane value. Nothing will be shown."), this.aspectRatio = t, this.cameraNear = r, this.cameraFar = o, this.projMatrix = _.default.Matrix.identity();
                                var e1 = 1 / Math.tan(this.cameraFOV / 2), n = 1 / (this.cameraNear - this.cameraFar);
                                this.projMatrix.set(e1 / t, 0, 0, 0, 0, -e1 * this.yScale, 0, 0, 0, 0, (o + r) * n, -1, 0, 0, 2 * o * r * n, 0), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]);
                            }
                        },
                        {
                            key: "ortho",
                            value: function(e1, t, r, o, n, s) {
                                void 0 === e1 && (e1 = -this._renderer.width / 2), void 0 === t && (t = +this._renderer.width / 2), void 0 === r && (r = -this._renderer.height / 2), void 0 === o && (o = +this._renderer.height / 2), void 0 === n && (n = 0), void 0 === s && (s = Math.max(this._renderer.width, this._renderer.height)), this.cameraNear = n;
                                var i = t - e1, a = o - r, l = (this.cameraFar = s) - n, u = 2 / i, c = 2 / a * this.yScale, d = -2 / l, t = -(t + e1) / i, e1 = -(o + r) / a, i = -(s + n) / l;
                                this.projMatrix = _.default.Matrix.identity(), this.projMatrix.set(u, 0, 0, 0, 0, -c, 0, 0, 0, 0, d, 0, t, e1, i, 1), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), this.cameraType = "custom";
                            }
                        },
                        {
                            key: "frustum",
                            value: function(e1, t, r, o, n, s) {
                                void 0 === e1 && (e1 = .05 * -this._renderer.width), void 0 === t && (t = .05 * +this._renderer.width), void 0 === r && (r = .05 * +this._renderer.height), void 0 === o && (o = .05 * -this._renderer.height), void 0 === n && (n = this.defaultCameraNear), void 0 === s && (s = this.defaultCameraFar), this.cameraNear = n;
                                var i = t - e1, a = o - r, l = (this.cameraFar = s) - n, u = 2 * n / i, c = 2 * n / a * this.yScale, d = -2 * s * n / l, t = (t + e1) / i, e1 = (o + r) / a, i = -(s + n) / l;
                                this.projMatrix = _.default.Matrix.identity(), this.projMatrix.set(u, 0, 0, 0, 0, -c, 0, 0, t, e1, i, -1, 0, 0, d, 0), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), this.cameraType = "custom";
                            }
                        },
                        {
                            key: "_rotateView",
                            value: function(e1, t, r, o) {
                                var n = this.centerX, s = this.centerY, i = this.centerZ, a = (n -= this.eyeX, s -= this.eyeY, i -= this.eyeZ, _.default.Matrix.identity(this._renderer._pInst)), e1 = (a.rotate(this._renderer._pInst._toRadians(e1), t, r, o), [
                                    n * a.mat4[0] + s * a.mat4[4] + i * a.mat4[8],
                                    n * a.mat4[1] + s * a.mat4[5] + i * a.mat4[9],
                                    n * a.mat4[2] + s * a.mat4[6] + i * a.mat4[10]
                                ]);
                                e1[0] += this.eyeX, e1[1] += this.eyeY, e1[2] += this.eyeZ, this.camera(this.eyeX, this.eyeY, this.eyeZ, e1[0], e1[1], e1[2], this.upX, this.upY, this.upZ);
                            }
                        },
                        {
                            key: "pan",
                            value: function(e1) {
                                var t = this._getLocalAxes();
                                this._rotateView(e1, t.y[0], t.y[1], t.y[2]);
                            }
                        },
                        {
                            key: "tilt",
                            value: function(e1) {
                                var t = this._getLocalAxes();
                                this._rotateView(e1, t.x[0], t.x[1], t.x[2]);
                            }
                        },
                        {
                            key: "lookAt",
                            value: function(e1, t, r) {
                                this.camera(this.eyeX, this.eyeY, this.eyeZ, e1, t, r, this.upX, this.upY, this.upZ);
                            }
                        },
                        {
                            key: "camera",
                            value: function(e1, t, r, o, n, s, i, a, l) {
                                void 0 === e1 && (e1 = this.defaultEyeX, t = this.defaultEyeY, r = this.defaultEyeZ, o = e1, n = t, a = 1, l = i = s = 0), this.eyeX = e1, this.eyeY = t, this.eyeZ = r, void 0 !== o && (this.centerX = o, this.centerY = n, this.centerZ = s), void 0 !== i && (this.upX = i, this.upY = a, this.upZ = l);
                                o = this._getLocalAxes(), this.cameraMatrix.set(o.x[0], o.y[0], o.z[0], 0, o.x[1], o.y[1], o.z[1], 0, o.x[2], o.y[2], o.z[2], 0, 0, 0, 0, 1), n = -e1;
                                return this.cameraMatrix.translate([
                                    n,
                                    -t,
                                    -r
                                ]), this._isActive() && this._renderer.uMVMatrix.set(this.cameraMatrix.mat4[0], this.cameraMatrix.mat4[1], this.cameraMatrix.mat4[2], this.cameraMatrix.mat4[3], this.cameraMatrix.mat4[4], this.cameraMatrix.mat4[5], this.cameraMatrix.mat4[6], this.cameraMatrix.mat4[7], this.cameraMatrix.mat4[8], this.cameraMatrix.mat4[9], this.cameraMatrix.mat4[10], this.cameraMatrix.mat4[11], this.cameraMatrix.mat4[12], this.cameraMatrix.mat4[13], this.cameraMatrix.mat4[14], this.cameraMatrix.mat4[15]), this;
                            }
                        },
                        {
                            key: "move",
                            value: function(e1, t, r) {
                                var o = this._getLocalAxes(), e1 = [
                                    o.x[0] * e1,
                                    o.x[1] * e1,
                                    o.x[2] * e1
                                ], t = [
                                    o.y[0] * t,
                                    o.y[1] * t,
                                    o.y[2] * t
                                ], o = [
                                    o.z[0] * r,
                                    o.z[1] * r,
                                    o.z[2] * r
                                ];
                                this.camera(this.eyeX + e1[0] + t[0] + o[0], this.eyeY + e1[1] + t[1] + o[1], this.eyeZ + e1[2] + t[2] + o[2], this.centerX + e1[0] + t[0] + o[0], this.centerY + e1[1] + t[1] + o[1], this.centerZ + e1[2] + t[2] + o[2], this.upX, this.upY, this.upZ);
                            }
                        },
                        {
                            key: "setPosition",
                            value: function(e1, t, r) {
                                var o = e1 - this.eyeX, n = t - this.eyeY, s = r - this.eyeZ;
                                this.camera(e1, t, r, this.centerX + o, this.centerY + n, this.centerZ + s, this.upX, this.upY, this.upZ);
                            }
                        },
                        {
                            key: "set",
                            value: function(e1) {
                                for(var t = 0, r = [
                                    "eyeX",
                                    "eyeY",
                                    "eyeZ",
                                    "centerX",
                                    "centerY",
                                    "centerZ",
                                    "upX",
                                    "upY",
                                    "upZ",
                                    "cameraFOV",
                                    "aspectRatio",
                                    "cameraNear",
                                    "cameraFar",
                                    "cameraType"
                                ]; t < r.length; t++){
                                    var o = r[t];
                                    this[o] = e1[o];
                                }
                                this.cameraMatrix = e1.cameraMatrix.copy(), this.projMatrix = e1.projMatrix.copy(), this._isActive() && (this._renderer.uMVMatrix.mat4 = this.cameraMatrix.mat4.slice(), this._renderer.uPMatrix.mat4 = this.projMatrix.mat4.slice());
                            }
                        },
                        {
                            key: "slerp",
                            value: function(e1, t, r) {
                                var o, n, s, i, a, l, u, c, d, f, h, p, m, y, g, v, b, j;
                                0 === r ? this.set(e1) : 1 === r ? this.set(t) : (0 !== this.projMatrix.mat4[15] && (this.projMatrix.mat4[0] = e1.projMatrix.mat4[0] * Math.pow(t.projMatrix.mat4[0] / e1.projMatrix.mat4[0], r), this.projMatrix.mat4[5] = e1.projMatrix.mat4[5] * Math.pow(t.projMatrix.mat4[5] / e1.projMatrix.mat4[5], r), this._isActive() && (this._renderer.uPMatrix.mat4 = this.projMatrix.mat4.slice())), i = new _.default.Vector(e1.eyeX, e1.eyeY, e1.eyeZ), a = new _.default.Vector(t.eyeX, t.eyeY, t.eyeZ), v = new _.default.Vector(e1.centerX, e1.centerY, e1.centerZ), j = new _.default.Vector(t.centerX, t.centerY, t.centerZ), s = _.default.Vector.dist(i, v), o = _.default.Vector.dist(a, j), o = s * Math.pow(o / s, r), s = _.default.Vector.sub(i, a), n = 1, 1e-6 < (b = (y = i.copy().sub(a).sub(v).add(j)).magSq()) && (n = _.default.Vector.dot(s, y) / b, n = Math.max(0, Math.min(n, 1))), s = _.default.Vector.lerp(_.default.Vector.lerp(i, v, n), _.default.Vector.lerp(a, j, n), r), y = e1.cameraMatrix.createSubMatrix3x3(), b = t.cameraMatrix.createSubMatrix3x3(), i = y.column(2), v = b.column(2), a = y.column(1), j = b.column(1), e1 = new _.default.Vector, t = new _.default.Vector, l = new _.default.Vector, u = new _.default.Vector, 1 - (c = .5 * ((y = (b = b.mult3x3(y.copy().transpose3x3())).diagonal())[0] + y[1] + y[2] - 1)) < 1e-7 ? (e1.set(_.default.Vector.lerp(i, v, r)).normalize(), l.set(e1).mult(n * o).add(s), u.set(e1).mult((n - 1) * o).add(s), t.set(_.default.Vector.lerp(a, j, r)).normalize()) : (v = 1 / (1 - c), j = Math.max(y[0], y[1], y[2]), p = b.mat3[1] + b.mat3[3], m = b.mat3[2] + b.mat3[6], g = b.mat3[5] + b.mat3[7], j = j === y[0] ? (f = .5 * p * (v /= d = Math.sqrt((y[0] - c) * v)), h = .5 * m * v, .5 * (b.mat3[7] - b.mat3[5]) / d) : j === y[1] ? (h = .5 * g * (v /= f = Math.sqrt((y[1] - c) * v)), d = .5 * p * v, .5 * (b.mat3[2] - b.mat3[6]) / f) : (d = .5 * m * (v /= h = Math.sqrt((y[2] - c) * v)), f = .5 * g * v, .5 * (b.mat3[3] - b.mat3[1]) / h), p = r * Math.atan2(j, c), m = Math.cos(p), y = Math.sin(p), (j = new _.default.Matrix("mat3", [
                                    m + (g = 1 - m) * d * d,
                                    g * (v = d * f) - y * h,
                                    g * (b = h * d) + y * f,
                                    g * v + y * h,
                                    m + g * f * f,
                                    g * (r = f * h) - y * d,
                                    g * b - y * f,
                                    g * r + y * d,
                                    m + g * h * h
                                ])).multiplyVec3(i, e1), l.set(e1).mult(n * o).add(s), u.set(e1).mult((n - 1) * o).add(s), j.multiplyVec3(a, t)), this.camera(l.x, l.y, l.z, u.x, u.y, u.z, t.x, t.y, t.z));
                            }
                        },
                        {
                            key: "_computeCameraDefaultSettings",
                            value: function() {
                                this.defaultCameraFOV = 60 / 180 * Math.PI, this.defaultAspectRatio = this._renderer.width / this._renderer.height, this.defaultEyeX = 0, this.defaultEyeY = 0, this.defaultEyeZ = this._renderer.height / 2 / Math.tan(this.defaultCameraFOV / 2), this.defaultCenterX = 0, this.defaultCenterY = 0, this.defaultCenterZ = 0, this.defaultCameraNear = .1 * this.defaultEyeZ, this.defaultCameraFar = 10 * this.defaultEyeZ;
                            }
                        },
                        {
                            key: "_setDefaultCamera",
                            value: function() {
                                this.cameraFOV = this.defaultCameraFOV, this.aspectRatio = this.defaultAspectRatio, this.eyeX = this.defaultEyeX, this.eyeY = this.defaultEyeY, this.eyeZ = this.defaultEyeZ, this.centerX = this.defaultCenterX, this.centerY = this.defaultCenterY, this.centerZ = this.defaultCenterZ, this.upX = 0, this.upY = 1, this.upZ = 0, this.cameraNear = this.defaultCameraNear, this.cameraFar = this.defaultCameraFar, this.perspective(), this.camera(), this.cameraType = "default";
                            }
                        },
                        {
                            key: "_resize",
                            value: function() {
                                "default" === this.cameraType ? (this._computeCameraDefaultSettings(), this._setDefaultCamera()) : this.perspective(this.cameraFOV, this._renderer.width / this._renderer.height);
                            }
                        },
                        {
                            key: "copy",
                            value: function() {
                                var e1 = new _.default.Camera(this._renderer);
                                return e1.cameraFOV = this.cameraFOV, e1.aspectRatio = this.aspectRatio, e1.eyeX = this.eyeX, e1.eyeY = this.eyeY, e1.eyeZ = this.eyeZ, e1.centerX = this.centerX, e1.centerY = this.centerY, e1.centerZ = this.centerZ, e1.upX = this.upX, e1.upY = this.upY, e1.upZ = this.upZ, e1.cameraNear = this.cameraNear, e1.cameraFar = this.cameraFar, e1.cameraType = this.cameraType, e1.cameraMatrix = this.cameraMatrix.copy(), e1.projMatrix = this.projMatrix.copy(), e1;
                            }
                        },
                        {
                            key: "_getLocalAxes",
                            value: function() {
                                var e1 = this.eyeX - this.centerX, t = this.eyeY - this.centerY, r = this.eyeZ - this.centerZ, o = Math.sqrt(e1 * e1 + t * t + r * r), o = (0 !== o && (e1 /= o, t /= o, r /= o), this.upX), n = (a = this.upY) * r - (l = this.upZ) * t, s = -o * r + l * e1, i = o * t - a * e1, o = t * i - r * s, a = -e1 * i + r * n, l = e1 * s - t * n, u = Math.sqrt(n * n + s * s + i * i), u = (0 !== u && (n /= u, s /= u, i /= u), Math.sqrt(o * o + a * a + l * l));
                                return 0 !== u && (o /= u, a /= u, l /= u), {
                                    x: [
                                        n,
                                        s,
                                        i
                                    ],
                                    y: [
                                        o,
                                        a,
                                        l
                                    ],
                                    z: [
                                        e1,
                                        t,
                                        r
                                    ]
                                };
                            }
                        },
                        {
                            key: "_orbit",
                            value: function(e1, t, r) {
                                var o = this.eyeX - this.centerX, n = this.eyeY - this.centerY, s = this.eyeZ - this.centerZ, i = Math.hypot(o, n, s), o = new _.default.Vector(o, n, s).normalize(), n = new _.default.Vector(this.upX, this.upY, this.upZ).normalize(), s = new _.default.Vector.cross(n, o).normalize(), a = new _.default.Vector.cross(s, n), r = ((i = (i *= Math.pow(10, r)) < this.cameraNear ? this.cameraNear : i) > this.cameraFar && (i = this.cameraFar), Math.acos(Math.max(-1, Math.min(1, _.default.Vector.dot(o, n)))) + t), t = e1;
                                (r <= 0 || r >= Math.PI) && (this.upX *= -1, this.upY *= -1, this.upZ *= -1), n.mult(Math.cos(r)), a.mult(Math.cos(t) * Math.sin(r)), s.mult(Math.sin(t) * Math.sin(r)), o.set(n).add(a).add(s), this.eyeX = i * o.x + this.centerX, this.eyeY = i * o.y + this.centerY, this.eyeZ = i * o.z + this.centerZ, this.camera(this.eyeX, this.eyeY, this.eyeZ, this.centerX, this.centerY, this.centerZ, this.upX, this.upY, this.upZ);
                            }
                        },
                        {
                            key: "_orbitFree",
                            value: function(e1, t, r) {
                                var o = this.eyeX - this.centerX, n = this.eyeY - this.centerY, s = this.eyeZ - this.centerZ, i = Math.hypot(o, n, s), o = new _.default.Vector(o, n, s).normalize(), n = new _.default.Vector(this.upX, this.upY, this.upZ), s = new _.default.Vector.cross(n, o).normalize(), a = new _.default.Vector.cross(o, s), l = Math.atan2(t, e1), l = (a.mult(Math.sin(l)), s.mult(Math.cos(l)).add(a), Math.sqrt(e1 * e1 + t * t)), a = new _.default.Vector.cross(o, s), e1 = ((i = (i *= Math.pow(10, r)) < this.cameraNear ? this.cameraNear : i) > this.cameraFar && (i = this.cameraFar), Math.cos(l)), t = Math.sin(l), r = n.dot(o), l = n.dot(s), u = r * e1 + l * t, r = -r * t + l * e1, l = n.dot(a);
                                n.x = u * o.x + r * s.x + l * a.x, n.y = u * o.y + r * s.y + l * a.y, n.z = u * o.z + r * s.z + l * a.z, s.mult(-t), o.mult(e1).add(s).mult(i), this.camera(o.x + this.centerX, o.y + this.centerY, o.z + this.centerZ, this.centerX, this.centerY, this.centerZ, n.x, n.y, n.z);
                            }
                        },
                        {
                            key: "_isActive",
                            value: function() {
                                return this === this._renderer._curCamera;
                            }
                        }
                    ], n(e1.prototype, r), o && n(e1, o), t;
                }(), _.default.prototype.setCamera = function(e1) {
                    this._renderer._curCamera = e1, this._renderer.uPMatrix.set(e1.projMatrix.mat4[0], e1.projMatrix.mat4[1], e1.projMatrix.mat4[2], e1.projMatrix.mat4[3], e1.projMatrix.mat4[4], e1.projMatrix.mat4[5], e1.projMatrix.mat4[6], e1.projMatrix.mat4[7], e1.projMatrix.mat4[8], e1.projMatrix.mat4[9], e1.projMatrix.mat4[10], e1.projMatrix.mat4[11], e1.projMatrix.mat4[12], e1.projMatrix.mat4[13], e1.projMatrix.mat4[14], e1.projMatrix.mat4[15]);
                };
                e1 = _.default.Camera;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.math.hypot": 169,
                "core-js/modules/es.string.sub": 198
            }
        ],
        322: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.reflect.get"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.typed-array.float32-array"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.uint8-clamped-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.reflect.get"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.typed-array.float32-array"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.uint8-clamped-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var h = (x = e1("../core/main")) && x.__esModule ? x : {
                    default: x
                }, i = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== c(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants")), n = e1("./p5.Texture"), p = e1("./p5.RendererGL");
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                function l(e1) {
                    return function(e1) {
                        if (Array.isArray(e1)) {
                            for(var t = 0, r = new Array(e1.length); t < e1.length; t++)r[t] = e1[t];
                            return r;
                        }
                    }(e1) || function(e1) {
                        if (Symbol.iterator in Object(e1) || "[object Arguments]" === Object.prototype.toString.call(e1)) return Array.from(e1);
                    }(e1) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                function u(e1, t) {
                    return function(e1) {
                        if (Array.isArray(e1)) return e1;
                    }(e1) || function(e1, t) {
                        if (Symbol.iterator in Object(e1) || "[object Arguments]" === Object.prototype.toString.call(e1)) {
                            var r = [], o = !0, n = !1, s = void 0;
                            try {
                                for(var i, a = e1[Symbol.iterator](); !(o = (i = a.next()).done) && (r.push(i.value), !t || r.length !== t); o = !0);
                            } catch (e1) {
                                n = !0, s = e1;
                            } finally{
                                try {
                                    o || null == a.return || a.return();
                                } finally{
                                    if (n) throw s;
                                }
                            }
                            return r;
                        }
                    }(e1, t) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance");
                    }();
                }
                function s(e1, t, r) {
                    return t in e1 ? Object.defineProperty(e1, t, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : e1[t] = r, e1;
                }
                function c(e1) {
                    return (c = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                function d(e1, t) {
                    if (!(e1 instanceof t)) throw new TypeError("Cannot call a class as a function");
                }
                function f(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                function m(e1, t, r) {
                    t && f(e1.prototype, t), r && f(e1, r);
                }
                function y(e1, t, r) {
                    return (y = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e1, t, r) {
                        var e1 = function(e1, t) {
                            for(; !Object.prototype.hasOwnProperty.call(e1, t) && null !== (e1 = b(e1)););
                            return e1;
                        }(e1, t);
                        if (e1) return (e1 = Object.getOwnPropertyDescriptor(e1, t)).get ? e1.get.call(r) : e1.value;
                    })(e1, t, r || e1);
                }
                function g(e1, t) {
                    return (g = Object.setPrototypeOf || function(e1, t) {
                        return e1.__proto__ = t, e1;
                    })(e1, t);
                }
                function v(r) {
                    return function() {
                        var e1, t = b(r), t = (e1 = function() {
                            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                                if ("function" == typeof Proxy) return 1;
                                try {
                                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), 1;
                                } catch (e1) {}
                            }
                        }() ? (e1 = b(this).constructor, Reflect.construct(t, arguments, e1)) : t.apply(this, arguments), this);
                        if (!e1 || "object" !== c(e1) && "function" != typeof e1) {
                            if (void 0 !== t) return t;
                            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        }
                        return e1;
                    };
                }
                function b(e1) {
                    return (b = Object.setPrototypeOf ? Object.getPrototypeOf : function(e1) {
                        return e1.__proto__ || Object.getPrototypeOf(e1);
                    })(e1);
                }
                var j = function(e1) {
                    var t = o;
                    if ("function" != typeof e1 && null !== e1) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e1 && e1.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e1 && g(t, e1);
                    var r = v(o);
                    function o(e1) {
                        var t;
                        return d(this, o), (t = r.call(this, e1.target._renderer)).fbo = e1, t.yScale = -1, t;
                    }
                    return m(o, [
                        {
                            key: "_computeCameraDefaultSettings",
                            value: function() {
                                y(b(o.prototype), "_computeCameraDefaultSettings", this).call(this), this.defaultAspectRatio = this.fbo.width / this.fbo.height, this.defaultEyeZ = this.fbo.height / 2 / Math.tan(this.defaultCameraFOV / 2), this.defaultCameraNear = .1 * this.defaultEyeZ, this.defaultCameraFar = 10 * this.defaultEyeZ;
                            }
                        },
                        {
                            key: "_resize",
                            value: function() {
                                "default" === this.cameraType ? (this._computeCameraDefaultSettings(), this._setDefaultCamera()) : this.perspective(this.cameraFOV, this.fbo.width / this.fbo.height);
                            }
                        }
                    ]), o;
                }(h.default.Camera), _ = (h.default.FramebufferCamera = j, function() {
                    function r(e1, t) {
                        d(this, r), this.framebuffer = e1, this.property = t;
                    }
                    return m(r, [
                        {
                            key: "rawTexture",
                            value: function() {
                                return this.framebuffer[this.property];
                            }
                        },
                        {
                            key: "width",
                            get: function() {
                                return this.framebuffer.width * this.framebuffer.density;
                            }
                        },
                        {
                            key: "height",
                            get: function() {
                                return this.framebuffer.height * this.framebuffer.density;
                            }
                        }
                    ]), r;
                }()), x = (h.default.FramebufferTexture = _, function() {
                    function r(e1) {
                        var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}, t = (d(this, r), this.target = e1, this.target._renderer.framebuffers.add(this), this.pixels = [], this.format = t.format || i.UNSIGNED_BYTE, this.channels = t.channels || (e1._renderer._pInst._glAttributes.alpha ? i.RGBA : i.RGB), this.useDepth = void 0 === t.depth || t.depth, this.depthFormat = t.depthFormat || i.FLOAT, this.textureFiltering = t.textureFiltering || i.LINEAR, void 0 === t.antialias ? this.antialiasSamples = e1._renderer._pInst._glAttributes.antialias ? 2 : 0 : "number" == typeof t.antialias ? this.antialiasSamples = t.antialias : this.antialiasSamples = t.antialias ? 2 : 0, this.antialias = 0 < this.antialiasSamples, this.antialias && e1.webglVersion !== i.WEBGL2 && (console.warn("Antialiasing is unsupported in a WebGL 1 context"), this.antialias = !1), t.width && t.height ? (this.width = t.width, this.height = t.height, this.autoSized = !1) : (void 0 === t.width != (void 0 === t.height) && console.warn("Please supply both width and height for a framebuffer to give it a size. Only one was given, so the framebuffer will match the size of its canvas."), this.width = e1.width, this.height = e1.height, this.autoSized = !0), this.density = t.density || e1.pixelDensity(), e1._renderer.GL);
                        if (this.gl = t, this._checkIfFormatsAvailable(), this.framebuffer = t.createFramebuffer(), !this.framebuffer) throw new Error("Unable to create a framebuffer");
                        if (this.antialias && (this.aaFramebuffer = t.createFramebuffer(), !this.aaFramebuffer)) throw new Error("Unable to create a framebuffer for antialiasing");
                        this._recreateTextures();
                        e1 = this.target._renderer._curCamera;
                        this.defaultCamera = this.createCamera(), this.target._renderer._curCamera = e1;
                    }
                    return m(r, [
                        {
                            key: "resize",
                            value: function(e1, t) {
                                this.autoSized = !1, this.width = e1, this.height = t, this._handleResize();
                            }
                        },
                        {
                            key: "pixelDensity",
                            value: function(e1) {
                                if (!e1) return this.density;
                                this.autoSized = !1, this.density = e1, this._handleResize();
                            }
                        },
                        {
                            key: "autoSized",
                            value: function(e1) {
                                if (void 0 === e1) return this.autoSized;
                                this.autoSized = e1, this._handleResize();
                            }
                        },
                        {
                            key: "_checkIfFormatsAvailable",
                            value: function() {
                                var e1 = this.gl, e1 = (this.useDepth && this.target.webglVersion === i.WEBGL && !e1.getExtension("WEBGL_depth_texture") && (console.warn("Unable to create depth textures in this environment. Falling back to a framebuffer without depth."), this.useDepth = !1), this.useDepth && this.target.webglVersion === i.WEBGL && this.depthFormat === i.FLOAT && (console.warn("FLOAT depth format is unavailable in WebGL 1. Defaulting to UNSIGNED_INT."), this.depthFormat = i.UNSIGNED_INT), [
                                    i.UNSIGNED_BYTE,
                                    i.FLOAT,
                                    i.HALF_FLOAT
                                ].includes(this.format) || (console.warn("Unknown Framebuffer format. Please use UNSIGNED_BYTE, FLOAT, or HALF_FLOAT. Defaulting to UNSIGNED_BYTE."), this.format = i.UNSIGNED_BYTE), this.useDepth && ![
                                    i.UNSIGNED_INT,
                                    i.FLOAT
                                ].includes(this.depthFormat) && (console.warn("Unknown Framebuffer depth format. Please use UNSIGNED_INT or FLOAT. Defaulting to FLOAT."), this.depthFormat = i.FLOAT), (0, n.checkWebGLCapabilities)(this.target._renderer));
                                e1.float || this.format !== i.FLOAT || (console.warn("This environment does not support FLOAT textures. Falling back to UNSIGNED_BYTE."), this.format = i.UNSIGNED_BYTE), this.useDepth && !e1.float && this.depthFormat === i.FLOAT && (console.warn("This environment does not support FLOAT depth textures. Falling back to UNSIGNED_INT."), this.depthFormat = i.UNSIGNED_INT), e1.halfFloat || this.format !== i.HALF_FLOAT || (console.warn("This environment does not support HALF_FLOAT textures. Falling back to UNSIGNED_BYTE."), this.format = i.UNSIGNED_BYTE), this.channels === i.RGB && [
                                    i.FLOAT,
                                    i.HALF_FLOAT
                                ].includes(this.format) && (console.warn("FLOAT and HALF_FLOAT formats do not work cross-platform with only RGB channels. Falling back to RGBA."), this.channels = i.RGBA);
                            }
                        },
                        {
                            key: "_recreateTextures",
                            value: function() {
                                var e1 = this.gl, t = (this._updateSize(), e1.getParameter(e1.TEXTURE_BINDING_2D)), r = e1.getParameter(e1.FRAMEBUFFER_BINDING), o = e1.createTexture();
                                if (!o) throw new Error("Unable to create color texture");
                                e1.bindTexture(e1.TEXTURE_2D, o);
                                var n = this._glColorFormat();
                                if (e1.texImage2D(e1.TEXTURE_2D, 0, n.internalFormat, this.width * this.density, this.height * this.density, 0, n.format, n.type, null), this.colorTexture = o, e1.bindFramebuffer(e1.FRAMEBUFFER, this.framebuffer), e1.framebufferTexture2D(e1.FRAMEBUFFER, e1.COLOR_ATTACHMENT0, e1.TEXTURE_2D, o, 0), this.useDepth) {
                                    var o = e1.createTexture();
                                    if (!o) throw new Error("Unable to create depth texture");
                                    var s = this._glDepthFormat();
                                    e1.bindTexture(e1.TEXTURE_2D, o), e1.texImage2D(e1.TEXTURE_2D, 0, s.internalFormat, this.width * this.density, this.height * this.density, 0, s.format, s.type, null), e1.framebufferTexture2D(e1.FRAMEBUFFER, e1.DEPTH_ATTACHMENT, e1.TEXTURE_2D, o, 0), this.depthTexture = o;
                                }
                                this.antialias && (this.colorRenderbuffer = e1.createRenderbuffer(), e1.bindRenderbuffer(e1.RENDERBUFFER, this.colorRenderbuffer), e1.renderbufferStorageMultisample(e1.RENDERBUFFER, Math.max(0, Math.min(this.antialiasSamples, e1.getParameter(e1.MAX_SAMPLES))), n.internalFormat, this.width * this.density, this.height * this.density), this.useDepth && (s = this._glDepthFormat(), this.depthRenderbuffer = e1.createRenderbuffer(), e1.bindRenderbuffer(e1.RENDERBUFFER, this.depthRenderbuffer), e1.renderbufferStorageMultisample(e1.RENDERBUFFER, Math.max(0, Math.min(this.antialiasSamples, e1.getParameter(e1.MAX_SAMPLES))), s.internalFormat, this.width * this.density, this.height * this.density)), e1.bindFramebuffer(e1.FRAMEBUFFER, this.aaFramebuffer), e1.framebufferRenderbuffer(e1.FRAMEBUFFER, e1.COLOR_ATTACHMENT0, e1.RENDERBUFFER, this.colorRenderbuffer), this.useDepth && e1.framebufferRenderbuffer(e1.FRAMEBUFFER, e1.DEPTH_ATTACHMENT, e1.RENDERBUFFER, this.depthRenderbuffer)), this.useDepth && (this.depth = new _(this, "depthTexture"), o = e1.NEAREST, this.depthP5Texture = new h.default.Texture(this.target._renderer, this.depth, {
                                    minFilter: o,
                                    magFilter: o
                                }), this.target._renderer.textures.set(this.depth, this.depthP5Texture)), this.color = new _(this, "colorTexture");
                                n = this.textureFiltering === i.LINEAR ? e1.LINEAR : e1.NEAREST;
                                this.colorP5Texture = new h.default.Texture(this.target._renderer, this.color, {
                                    glMinFilter: n,
                                    glMagFilter: n
                                }), this.target._renderer.textures.set(this.color, this.colorP5Texture), e1.bindTexture(e1.TEXTURE_2D, t), e1.bindFramebuffer(e1.FRAMEBUFFER, r);
                            }
                        },
                        {
                            key: "_glColorFormat",
                            value: function() {
                                var e1, t, r = this.gl, o = this.format === i.FLOAT ? r.FLOAT : this.format === i.HALF_FLOAT ? this.target.webglVersion === i.WEBGL2 ? r.HALF_FLOAT : r.getExtension("OES_texture_half_float").HALF_FLOAT_OES : r.UNSIGNED_BYTE, n = this.channels === i.RGBA ? r.RGBA : r.RGB;
                                return {
                                    internalFormat: this.target.webglVersion === i.WEBGL2 ? (s(t = {}, r.FLOAT, s({}, r.RGBA, r.RGBA32F)), s(t, r.HALF_FLOAT, s({}, r.RGBA, r.RGBA16F)), s(t, r.UNSIGNED_BYTE, (s(e1 = {}, r.RGBA, r.RGBA8), s(e1, r.RGB, r.RGB8), e1)), t[o][n]) : this.format === i.HALF_FLOAT ? r.RGBA : n,
                                    format: n,
                                    type: o
                                };
                            }
                        },
                        {
                            key: "_glDepthFormat",
                            value: function() {
                                var e1 = this.gl, t = this.depthFormat === i.FLOAT ? e1.FLOAT : e1.UNSIGNED_INT, r = e1.DEPTH_COMPONENT, e1 = this.target.webglVersion === i.WEBGL2 ? this.depthFormat === i.FLOAT ? e1.DEPTH_COMPONENT32F : e1.DEPTH_COMPONENT24 : e1.DEPTH_COMPONENT;
                                return {
                                    internalFormat: e1,
                                    format: r,
                                    type: t
                                };
                            }
                        },
                        {
                            key: "_updateSize",
                            value: function() {
                                this.autoSized && (this.width = this.target.width, this.height = this.target.height, this.density = this.target.pixelDensity());
                            }
                        },
                        {
                            key: "_canvasSizeChanged",
                            value: function() {
                                this.autoSized && this._handleResize();
                            }
                        },
                        {
                            key: "_handleResize",
                            value: function() {
                                var e1 = this.color, t = this.depth, r = this.colorRenderbuffer, o = this.depthRenderbuffer, e1 = (this._deleteTexture(e1), t && this._deleteTexture(t), this.gl);
                                r && e1.deleteRenderbuffer(r), o && e1.deleteRenderbuffer(o), this._recreateTextures(), this.defaultCamera._resize();
                            }
                        },
                        {
                            key: "createCamera",
                            value: function() {
                                var e1 = new j(this);
                                return e1._computeCameraDefaultSettings(), e1._setDefaultCamera(), this.target._renderer._curCamera = e1;
                            }
                        },
                        {
                            key: "_deleteTexture",
                            value: function(e1) {
                                this.gl.deleteTexture(e1.rawTexture()), this.target._renderer.textures.delete(e1);
                            }
                        },
                        {
                            key: "remove",
                            value: function() {
                                var e1 = this.gl;
                                this._deleteTexture(this.color), this.depth && this._deleteTexture(this.depth), e1.deleteFramebuffer(this.framebuffer), this.aaFramebuffer && e1.deleteFramebuffer(this.aaFramebuffer), this.depthRenderbuffer && e1.deleteRenderbuffer(this.depthRenderbuffer), this.colorRenderbuffer && e1.deleteRenderbuffer(this.colorRenderbuffer), this.target._renderer.framebuffers.delete(this);
                            }
                        },
                        {
                            key: "begin",
                            value: function() {
                                var e1 = this.gl;
                                this.prevFramebuffer = e1.getParameter(e1.FRAMEBUFFER_BINDING), this.antialias ? e1.bindFramebuffer(e1.FRAMEBUFFER, this.aaFramebuffer) : e1.bindFramebuffer(e1.FRAMEBUFFER, this.framebuffer), this.prevViewport = e1.getParameter(e1.VIEWPORT), e1.viewport(0, 0, this.width * this.density, this.height * this.density), this.target.push(), this.target.setCamera(this.defaultCamera), this.target._renderer.uMVMatrix.set(this.target._renderer._curCamera.cameraMatrix.mat4[0], this.target._renderer._curCamera.cameraMatrix.mat4[1], this.target._renderer._curCamera.cameraMatrix.mat4[2], this.target._renderer._curCamera.cameraMatrix.mat4[3], this.target._renderer._curCamera.cameraMatrix.mat4[4], this.target._renderer._curCamera.cameraMatrix.mat4[5], this.target._renderer._curCamera.cameraMatrix.mat4[6], this.target._renderer._curCamera.cameraMatrix.mat4[7], this.target._renderer._curCamera.cameraMatrix.mat4[8], this.target._renderer._curCamera.cameraMatrix.mat4[9], this.target._renderer._curCamera.cameraMatrix.mat4[10], this.target._renderer._curCamera.cameraMatrix.mat4[11], this.target._renderer._curCamera.cameraMatrix.mat4[12], this.target._renderer._curCamera.cameraMatrix.mat4[13], this.target._renderer._curCamera.cameraMatrix.mat4[14], this.target._renderer._curCamera.cameraMatrix.mat4[15]);
                            }
                        },
                        {
                            key: "end",
                            value: function() {
                                var e1 = this.gl;
                                if (this.antialias) {
                                    e1.bindFramebuffer(e1.READ_FRAMEBUFFER, this.aaFramebuffer), e1.bindFramebuffer(e1.DRAW_FRAMEBUFFER, this.framebuffer);
                                    var t = [
                                        [
                                            e1.COLOR_BUFFER_BIT,
                                            this.colorP5Texture.glMagFilter
                                        ]
                                    ];
                                    this.useDepth && t.push([
                                        e1.DEPTH_BUFFER_BIT,
                                        this.depthP5Texture.glMagFilter
                                    ]);
                                    for(var r = 0, o = t; r < o.length; r++){
                                        var n = u(o[r], 2), s = n[0], n = n[1];
                                        e1.blitFramebuffer(0, 0, this.width * this.density, this.height * this.density, 0, 0, this.width * this.density, this.height * this.density, s, n);
                                    }
                                }
                                e1.bindFramebuffer(e1.FRAMEBUFFER, this.prevFramebuffer), e1.viewport.apply(e1, l(this.prevViewport)), this.target.pop();
                            }
                        },
                        {
                            key: "draw",
                            value: function(e1) {
                                this.begin(), e1(), this.end();
                            }
                        },
                        {
                            key: "loadPixels",
                            value: function() {
                                var e1 = this.gl, t = e1.getParameter(e1.FRAMEBUFFER_BINDING), r = (e1.bindFramebuffer(e1.FRAMEBUFFER, this.framebuffer), this._glColorFormat());
                                this.pixels = (0, p.readPixelsWebGL)(this.pixels, e1, this.framebuffer, 0, 0, this.width * this.density, this.height * this.density, r.format, r.type), e1.bindFramebuffer(e1.FRAMEBUFFER, t);
                            }
                        },
                        {
                            key: "get",
                            value: function(e1, t, r, o) {
                                h.default._validateParameters("p5.Framebuffer.get", arguments);
                                var n = this._glColorFormat();
                                if (void 0 === e1 && void 0 === t) t = e1 = 0, r = this.width, o = this.height;
                                else if (void 0 === r && void 0 === o) return (e1 < 0 || t < 0 || e1 >= this.width || t >= this.height) && (console.warn("The x and y values passed to p5.Framebuffer.get are outside of its range and will be clamped."), e1 = this.target.constrain(e1, 0, this.width - 1), t = this.target.constrain(t, 0, this.height - 1)), (0, p.readPixelWebGL)(this.gl, this.framebuffer, e1 * this.density, t * this.density, n.format, n.type);
                                e1 = this.target.constrain(e1, 0, this.width - 1), t = this.target.constrain(t, 0, this.height - 1), r = this.target.constrain(r, 1, this.width - e1), o = this.target.constrain(o, 1, this.height - t);
                                for(var s = (0, p.readPixelsWebGL)(void 0, this.gl, this.framebuffer, e1 * this.density, t * this.density, r * this.density, o * this.density, n.format, n.type), i = new Uint8ClampedArray(r * o * this.density * this.density * 4), a = (i.fill(255), n.type === this.gl.RGB ? 3 : 4), l = 0; l < o * this.density; l++)for(var u = 0; u < r * this.density; u++)for(var c = 0; c < 4; c++){
                                    var d, f = 4 * (l * r * this.density + u) + c;
                                    c < a && (d = 4 == a ? f : (l * r * this.density + u) * a + c, i[f] = s[d]);
                                }
                                e1 = new h.default.Image(r * this.density, o * this.density);
                                return e1.imageData = e1.canvas.getContext("2d").createImageData(e1.width, e1.height), e1.imageData.data.set(i), e1.pixels = e1.imageData.data, e1.updatePixels(), 1 !== this.density && e1.resize(r, o), e1;
                            }
                        },
                        {
                            key: "updatePixels",
                            value: function() {
                                var e1 = this.gl, t = (this.colorP5Texture.bindTexture(), this._glColorFormat()), r = t.format === e1.RGBA ? 4 : 3, r = this.width * this.height * this.density * this.density * r, o = t.type === e1.UNSIGNED_BYTE ? Uint8Array : Float32Array;
                                if (!(this.pixels instanceof o) || this.pixels.length !== r) throw new Error("The pixels array has not been set correctly. Please call loadPixels() before updatePixels().");
                                e1.texImage2D(e1.TEXTURE_2D, 0, t.internalFormat, this.width * this.density, this.height * this.density, 0, t.format, t.type, this.pixels), this.colorP5Texture.unbindTexture(), this.prevFramebuffer = e1.getParameter(e1.FRAMEBUFFER_BINDING), this.antialias ? (this.begin(), this.target.push(), this.target.imageMode(this.target.CENTER), this.target.resetMatrix(), this.target.noStroke(), this.target.clear(), this.target.image(this, 0, 0), this.target.pop(), this.useDepth && (e1.clearDepth(1), e1.clear(e1.DEPTH_BUFFER_BIT)), this.end()) : (e1.bindFramebuffer(e1.FRAMEBUFFER, this.framebuffer), this.useDepth && (e1.clearDepth(1), e1.clear(e1.DEPTH_BUFFER_BIT)), e1.bindFramebuffer(e1.FRAMEBUFFER, this.prevFramebuffer));
                            }
                        }
                    ]), r;
                }()), e1 = h.default.Framebuffer = x;
                r.default = e1;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "./p5.RendererGL": 328,
                "./p5.Texture": 330,
                "core-js/modules/es.array.fill": 154,
                "core-js/modules/es.array.from": 157,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.get-prototype-of": 178,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.reflect.construct": 182,
                "core-js/modules/es.reflect.get": 183,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.includes": 189,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.typed-array.copy-within": 203,
                "core-js/modules/es.typed-array.every": 204,
                "core-js/modules/es.typed-array.fill": 205,
                "core-js/modules/es.typed-array.filter": 206,
                "core-js/modules/es.typed-array.find": 208,
                "core-js/modules/es.typed-array.find-index": 207,
                "core-js/modules/es.typed-array.float32-array": 209,
                "core-js/modules/es.typed-array.for-each": 211,
                "core-js/modules/es.typed-array.includes": 212,
                "core-js/modules/es.typed-array.index-of": 213,
                "core-js/modules/es.typed-array.iterator": 216,
                "core-js/modules/es.typed-array.join": 217,
                "core-js/modules/es.typed-array.last-index-of": 218,
                "core-js/modules/es.typed-array.map": 219,
                "core-js/modules/es.typed-array.reduce": 221,
                "core-js/modules/es.typed-array.reduce-right": 220,
                "core-js/modules/es.typed-array.reverse": 222,
                "core-js/modules/es.typed-array.set": 223,
                "core-js/modules/es.typed-array.slice": 224,
                "core-js/modules/es.typed-array.some": 225,
                "core-js/modules/es.typed-array.sort": 226,
                "core-js/modules/es.typed-array.subarray": 227,
                "core-js/modules/es.typed-array.to-locale-string": 228,
                "core-js/modules/es.typed-array.to-string": 229,
                "core-js/modules/es.typed-array.uint8-array": 232,
                "core-js/modules/es.typed-array.uint8-clamped-array": 233,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        323: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.string.sub"), e1("core-js/modules/web.dom-collections.for-each"), e1("core-js/modules/es.array.for-each"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.string.sub"), e1("core-js/modules/web.dom-collections.for-each"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function n(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                a.default.Geometry = function() {
                    function o(e1, t, r) {
                        if (this instanceof o) return this.vertices = [], this.lineVertices = [], this.lineTangentsIn = [], this.lineTangentsOut = [], this.lineSides = [], this.vertexNormals = [], this.faces = [], this.uvs = [], this.edges = [], this.vertexColors = [], this.vertexStrokeColors = [], this.lineVertexColors = [], this.detailX = void 0 !== e1 ? e1 : 1, this.detailY = void 0 !== t ? t : 1, this.dirtyFlags = {}, r instanceof Function && r.call(this), this;
                        throw new TypeError("Cannot call a class as a function");
                    }
                    var e1, t, r;
                    return e1 = o, t = [
                        {
                            key: "reset",
                            value: function() {
                                this.lineVertices.length = 0, this.lineTangentsIn.length = 0, this.lineTangentsOut.length = 0, this.lineSides.length = 0, this.vertices.length = 0, this.edges.length = 0, this.vertexColors.length = 0, this.vertexStrokeColors.length = 0, this.lineVertexColors.length = 0, this.vertexNormals.length = 0, this.uvs.length = 0, this.dirtyFlags = {};
                            }
                        },
                        {
                            key: "computeFaces",
                            value: function() {
                                this.faces.length = 0;
                                for(var e1, t, r, o = this.detailX + 1, n = 0; n < this.detailY; n++)for(var s = 0; s < this.detailX; s++)t = (n + 1) * o + s + 1, this.faces.push([
                                    n * o + s,
                                    e1 = n * o + s + 1,
                                    r = (n + 1) * o + s
                                ]), this.faces.push([
                                    r,
                                    e1,
                                    t
                                ]);
                                return this;
                            }
                        },
                        {
                            key: "_getFaceNormal",
                            value: function(e1) {
                                var e1 = this.faces[e1], t = this.vertices[e1[0]], r = this.vertices[e1[1]], e1 = this.vertices[e1[2]], r = a.default.Vector.sub(r, t), e1 = a.default.Vector.sub(e1, t), t = a.default.Vector.cross(r, e1), o = a.default.Vector.mag(t), r = o / (a.default.Vector.mag(r) * a.default.Vector.mag(e1));
                                return 0 === r || isNaN(r) ? (console.warn("p5.Geometry.prototype._getFaceNormal:", "face has colinear sides or a repeated vertex"), t) : (1 < r && (r = 1), t.mult(Math.asin(r) / o));
                            }
                        },
                        {
                            key: "computeNormals",
                            value: function() {
                                for(var s = this, i = this.vertexNormals, e1 = this.vertices, t = this.faces, r = i.length = 0; r < e1.length; ++r)i.push(new a.default.Vector);
                                for(t.forEach(function(e1, t) {
                                    for(var r = s._getFaceNormal(t), o = 0; o < 3; ++o){
                                        var n = e1[o];
                                        i[n].add(r);
                                    }
                                }), r = 0; r < e1.length; ++r)i[r].normalize();
                                return this;
                            }
                        },
                        {
                            key: "averageNormals",
                            value: function() {
                                for(var e1 = 0; e1 <= this.detailY; e1++){
                                    var t = this.detailX + 1, r = a.default.Vector.add(this.vertexNormals[e1 * t], this.vertexNormals[e1 * t + this.detailX]), r = a.default.Vector.div(r, 2);
                                    this.vertexNormals[e1 * t] = r, this.vertexNormals[e1 * t + this.detailX] = r;
                                }
                                return this;
                            }
                        },
                        {
                            key: "averagePoleNormals",
                            value: function() {
                                for(var e1 = new a.default.Vector(0, 0, 0), t = 0; t < this.detailX; t++)e1.add(this.vertexNormals[t]);
                                for(var e1 = a.default.Vector.div(e1, this.detailX), r = 0; r < this.detailX; r++)this.vertexNormals[r] = e1;
                                e1 = new a.default.Vector(0, 0, 0);
                                for(var o = this.vertices.length - 1; o > this.vertices.length - 1 - this.detailX; o--)e1.add(this.vertexNormals[o]);
                                e1 = a.default.Vector.div(e1, this.detailX);
                                for(var n = this.vertices.length - 1; n > this.vertices.length - 1 - this.detailX; n--)this.vertexNormals[n] = e1;
                                return this;
                            }
                        },
                        {
                            key: "_makeTriangleEdges",
                            value: function() {
                                for(var e1 = this.edges.length = 0; e1 < this.faces.length; e1++)this.edges.push([
                                    this.faces[e1][0],
                                    this.faces[e1][1]
                                ]), this.edges.push([
                                    this.faces[e1][1],
                                    this.faces[e1][2]
                                ]), this.edges.push([
                                    this.faces[e1][2],
                                    this.faces[e1][0]
                                ]);
                                return this;
                            }
                        },
                        {
                            key: "_edgesToVertices",
                            value: function() {
                                this.lineVertices.length = 0, this.lineTangentsIn.length = 0, this.lineTangentsOut.length = 0, this.lineSides.length = 0;
                                for(var e1, t = 1 < this.edges.length && this.edges[0][0] === this.edges[this.edges.length - 1][1], r = !1, o = 0; o < this.edges.length; o++){
                                    var n = this.edges[o - 1], s = this.edges[o], i = this.vertices[s[0]], a = this.vertices[s[1]], l = 0 < this.vertexStrokeColors.length ? this.vertexStrokeColors.slice(4 * s[0], 4 * (s[0] + 1)) : [
                                        0,
                                        0,
                                        0,
                                        0
                                    ], u = 0 < this.vertexStrokeColors.length ? this.vertexStrokeColors.slice(4 * s[1], 4 * (s[1] + 1)) : [
                                        0,
                                        0,
                                        0,
                                        0
                                    ], c = a.copy().sub(i).normalize(), d = 0 < c.magSq();
                                    d && this._addSegment(i, a, l, u, c), 0 < o && n[1] === s[0] ? (e1 && d && c.dot(e1) < 1 - 1e-8 && this._addJoin(i, e1, c, l), !d || r || t || (this._addCap(i, c.copy().mult(-1), l), r = !0)) : (r = !1, d && (!t || 0 < o) && (this._addCap(i, c.copy().mult(-1), l), r = !0), e1 && (!t || o < this.edges.length - 1) && (this._addCap(this.vertices[n[1]], e1, l), e1 = void 0)), o === this.edges.length - 1 && (t ? this._addJoin(a, c, this.vertices[this.edges[0][1]].copy().sub(a).normalize(), u) : this._addCap(a, c, u)), d && (e1 = c);
                                }
                                return this;
                            }
                        },
                        {
                            key: "_addSegment",
                            value: function(e1, t, r, o, n) {
                                var e1 = e1.array(), t = t.array(), s = n.array();
                                this.lineSides.push(1, -1, 1, 1, -1, -1);
                                for(var i = 0, a = [
                                    this.lineTangentsIn,
                                    this.lineTangentsOut
                                ]; i < a.length; i++)a[i].push(s, s, s, s, s, s);
                                return this.lineVertices.push(e1, e1, t, t, e1, t), this.lineVertexColors.push(r, r, o, o, r, o), this;
                            }
                        },
                        {
                            key: "_addCap",
                            value: function(e1, t, r) {
                                for(var o = e1.array(), n = t.array(), s = [
                                    0,
                                    0,
                                    0
                                ], i = 0; i < 6; i++)this.lineVertices.push(o), this.lineTangentsIn.push(n), this.lineTangentsOut.push(s), this.lineVertexColors.push(r);
                                return this.lineSides.push(-1, -2, 2, 2, 1, -1), this;
                            }
                        },
                        {
                            key: "_addJoin",
                            value: function(e1, t, r, o) {
                                for(var n = e1.array(), s = t.array(), i = r.array(), a = 0; a < 12; a++)this.lineVertices.push(n), this.lineTangentsIn.push(s), this.lineTangentsOut.push(i), this.lineVertexColors.push(o);
                                for(var l = 0, u = [
                                    -1,
                                    1
                                ]; l < u.length; l++){
                                    var c = u[l];
                                    this.lineSides.push(c, 2 * c, 3 * c, c, 3 * c, 0);
                                }
                                return this;
                            }
                        },
                        {
                            key: "normalize",
                            value: function() {
                                if (0 < this.vertices.length) {
                                    for(var e1 = this.vertices[0].copy(), t = this.vertices[0].copy(), r = 0; r < this.vertices.length; r++)e1.x = Math.max(e1.x, this.vertices[r].x), t.x = Math.min(t.x, this.vertices[r].x), e1.y = Math.max(e1.y, this.vertices[r].y), t.y = Math.min(t.y, this.vertices[r].y), e1.z = Math.max(e1.z, this.vertices[r].z), t.z = Math.min(t.z, this.vertices[r].z);
                                    for(var o = a.default.Vector.lerp(e1, t, .5), n = a.default.Vector.sub(e1, t), s = 200 / Math.max(Math.max(n.x, n.y), n.z), i = 0; i < this.vertices.length; i++)this.vertices[i].sub(o), this.vertices[i].mult(s);
                                }
                                return this;
                            }
                        }
                    ], n(e1.prototype, t), r && n(e1, r), o;
                }();
                e1 = a.default.Geometry;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.for-each": 156,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.string.sub": 198,
                "core-js/modules/web.dom-collections.for-each": 235
            }
        ],
        324: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.typed-array.float32-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.typed-array.float32-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var O = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function n(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                var s = Array, C = function(e1) {
                    return Array.isArray(e1);
                }, e1 = ("undefined" != typeof Float32Array && (s = Float32Array, C = function(e1) {
                    return Array.isArray(e1) || e1 instanceof Float32Array;
                }), O.default.Matrix = function() {
                    function r() {
                        var e1 = this, t = r;
                        if (e1 instanceof t) return arguments.length && ((e1 = arguments.length - 1) < 0 || arguments.length <= e1 ? void 0 : arguments[e1]) instanceof O.default && (this.p5 = (t = arguments.length - 1) < 0 || arguments.length <= t ? void 0 : arguments[t]), "mat3" === (arguments.length <= 0 ? void 0 : arguments[0]) ? this.mat3 = Array.isArray(arguments.length <= 1 ? void 0 : arguments[1]) ? arguments.length <= 1 ? void 0 : arguments[1] : new s([
                            1,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            1
                        ]) : this.mat4 = Array.isArray(arguments.length <= 0 ? void 0 : arguments[0]) ? arguments.length <= 0 ? void 0 : arguments[0] : new s([
                            1,
                            0,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            0,
                            1
                        ]), this;
                        throw new TypeError("Cannot call a class as a function");
                    }
                    var e1, t, o;
                    return e1 = r, o = [
                        {
                            key: "identity",
                            value: function(e1) {
                                return new O.default.Matrix(e1);
                            }
                        }
                    ], t = [
                        {
                            key: "set",
                            value: function(e1) {
                                return e1 instanceof O.default.Matrix ? this.mat4 = e1.mat4 : C(e1) ? this.mat4 = e1 : 16 === arguments.length && (this.mat4[0] = e1, this.mat4[1] = arguments[1], this.mat4[2] = arguments[2], this.mat4[3] = arguments[3], this.mat4[4] = arguments[4], this.mat4[5] = arguments[5], this.mat4[6] = arguments[6], this.mat4[7] = arguments[7], this.mat4[8] = arguments[8], this.mat4[9] = arguments[9], this.mat4[10] = arguments[10], this.mat4[11] = arguments[11], this.mat4[12] = arguments[12], this.mat4[13] = arguments[13], this.mat4[14] = arguments[14], this.mat4[15] = arguments[15]), this;
                            }
                        },
                        {
                            key: "get",
                            value: function() {
                                return new O.default.Matrix(this.mat4, this.p5);
                            }
                        },
                        {
                            key: "copy",
                            value: function() {
                                var e1;
                                return void 0 !== this.mat3 ? ((e1 = new O.default.Matrix("mat3", this.p5)).mat3[0] = this.mat3[0], e1.mat3[1] = this.mat3[1], e1.mat3[2] = this.mat3[2], e1.mat3[3] = this.mat3[3], e1.mat3[4] = this.mat3[4], e1.mat3[5] = this.mat3[5], e1.mat3[6] = this.mat3[6], e1.mat3[7] = this.mat3[7], e1.mat3[8] = this.mat3[8]) : ((e1 = new O.default.Matrix(this.p5)).mat4[0] = this.mat4[0], e1.mat4[1] = this.mat4[1], e1.mat4[2] = this.mat4[2], e1.mat4[3] = this.mat4[3], e1.mat4[4] = this.mat4[4], e1.mat4[5] = this.mat4[5], e1.mat4[6] = this.mat4[6], e1.mat4[7] = this.mat4[7], e1.mat4[8] = this.mat4[8], e1.mat4[9] = this.mat4[9], e1.mat4[10] = this.mat4[10], e1.mat4[11] = this.mat4[11], e1.mat4[12] = this.mat4[12], e1.mat4[13] = this.mat4[13], e1.mat4[14] = this.mat4[14], e1.mat4[15] = this.mat4[15]), e1;
                            }
                        },
                        {
                            key: "transpose",
                            value: function(e1) {
                                var t, r, o, n, s, i;
                                return e1 instanceof O.default.Matrix ? (t = e1.mat4[1], r = e1.mat4[2], o = e1.mat4[3], n = e1.mat4[6], s = e1.mat4[7], i = e1.mat4[11], this.mat4[0] = e1.mat4[0], this.mat4[1] = e1.mat4[4], this.mat4[2] = e1.mat4[8], this.mat4[3] = e1.mat4[12], this.mat4[4] = t, this.mat4[5] = e1.mat4[5], this.mat4[6] = e1.mat4[9], this.mat4[7] = e1.mat4[13], this.mat4[8] = r, this.mat4[9] = n, this.mat4[10] = e1.mat4[10], this.mat4[11] = e1.mat4[14], this.mat4[12] = o, this.mat4[13] = s, this.mat4[14] = i, this.mat4[15] = e1.mat4[15]) : C(e1) && (t = e1[1], r = e1[2], o = e1[3], n = e1[6], s = e1[7], i = e1[11], this.mat4[0] = e1[0], this.mat4[1] = e1[4], this.mat4[2] = e1[8], this.mat4[3] = e1[12], this.mat4[4] = t, this.mat4[5] = e1[5], this.mat4[6] = e1[9], this.mat4[7] = e1[13], this.mat4[8] = r, this.mat4[9] = n, this.mat4[10] = e1[10], this.mat4[11] = e1[14], this.mat4[12] = o, this.mat4[13] = s, this.mat4[14] = i, this.mat4[15] = e1[15]), this;
                            }
                        },
                        {
                            key: "invert",
                            value: function(e1) {
                                e1 instanceof O.default.Matrix ? (t = e1.mat4[0], r = e1.mat4[1], o = e1.mat4[2], n = e1.mat4[3], s = e1.mat4[4], i = e1.mat4[5], a = e1.mat4[6], l = e1.mat4[7], u = e1.mat4[8], c = e1.mat4[9], d = e1.mat4[10], f = e1.mat4[11], h = e1.mat4[12], p = e1.mat4[13], m = e1.mat4[14], y = e1.mat4[15]) : C(e1) && (t = e1[0], r = e1[1], o = e1[2], n = e1[3], s = e1[4], i = e1[5], a = e1[6], l = e1[7], u = e1[8], c = e1[9], d = e1[10], f = e1[11], h = e1[12], p = e1[13], m = e1[14], y = e1[15]);
                                var t, r, o, n, s, i, a, l, u, c, d, f, h, p, m, y, e1 = t * i - r * s, g = t * a - o * s, v = t * l - n * s, b = r * a - o * i, j = r * l - n * i, _ = o * l - n * a, x = u * p - c * h, w = u * m - d * h, S = u * y - f * h, E = c * m - d * p, M = c * y - f * p, T = d * y - f * m, k = e1 * T - g * M + v * E + b * S - j * w + _ * x;
                                return k ? (this.mat4[0] = (i * T - a * M + l * E) * (k = 1 / k), this.mat4[1] = (o * M - r * T - n * E) * k, this.mat4[2] = (p * _ - m * j + y * b) * k, this.mat4[3] = (d * j - c * _ - f * b) * k, this.mat4[4] = (a * S - s * T - l * w) * k, this.mat4[5] = (t * T - o * S + n * w) * k, this.mat4[6] = (m * v - h * _ - y * g) * k, this.mat4[7] = (u * _ - d * v + f * g) * k, this.mat4[8] = (s * M - i * S + l * x) * k, this.mat4[9] = (r * S - t * M - n * x) * k, this.mat4[10] = (h * j - p * v + y * e1) * k, this.mat4[11] = (c * v - u * j - f * e1) * k, this.mat4[12] = (i * w - s * E - a * x) * k, this.mat4[13] = (t * E - r * w + o * x) * k, this.mat4[14] = (p * g - h * b - m * e1) * k, this.mat4[15] = (u * b - c * g + d * e1) * k, this) : null;
                            }
                        },
                        {
                            key: "invert3x3",
                            value: function() {
                                var e1 = this.mat3[0], t = this.mat3[1], r = this.mat3[2], o = this.mat3[3], n = this.mat3[4], s = this.mat3[5], i = this.mat3[6], a = this.mat3[7], l = this.mat3[8], u = l * n - s * a, c = -l * o + s * i, d = a * o - n * i, f = e1 * u + t * c + r * d;
                                return f ? (this.mat3[0] = u * (f = 1 / f), this.mat3[1] = (-l * t + r * a) * f, this.mat3[2] = (s * t - r * n) * f, this.mat3[3] = c * f, this.mat3[4] = (l * e1 - r * i) * f, this.mat3[5] = (-s * e1 + r * o) * f, this.mat3[6] = d * f, this.mat3[7] = (-a * e1 + t * i) * f, this.mat3[8] = (n * e1 - t * o) * f, this) : null;
                            }
                        },
                        {
                            key: "transpose3x3",
                            value: function(e1) {
                                var t = (e1 = void 0 === e1 ? this.mat3 : e1)[1], r = e1[2], o = e1[5];
                                return this.mat3[0] = e1[0], this.mat3[1] = e1[3], this.mat3[2] = e1[6], this.mat3[3] = t, this.mat3[4] = e1[4], this.mat3[5] = e1[7], this.mat3[6] = r, this.mat3[7] = o, this.mat3[8] = e1[8], this;
                            }
                        },
                        {
                            key: "inverseTranspose",
                            value: function(e1) {
                                e1 = e1.mat4, void 0 === this.mat3 ? O.default._friendlyError("sorry, this function only works with mat3") : (this.mat3[0] = e1[0], this.mat3[1] = e1[1], this.mat3[2] = e1[2], this.mat3[3] = e1[4], this.mat3[4] = e1[5], this.mat3[5] = e1[6], this.mat3[6] = e1[8], this.mat3[7] = e1[9], this.mat3[8] = e1[10]), e1 = this.invert3x3();
                                if (e1) e1.transpose3x3(this.mat3);
                                else for(var t = 0; t < 9; t++)this.mat3[t] = 0;
                                return this;
                            }
                        },
                        {
                            key: "determinant",
                            value: function() {
                                var e1 = this.mat4[0] * this.mat4[5] - this.mat4[1] * this.mat4[4], t = this.mat4[0] * this.mat4[6] - this.mat4[2] * this.mat4[4], r = this.mat4[0] * this.mat4[7] - this.mat4[3] * this.mat4[4], o = this.mat4[1] * this.mat4[6] - this.mat4[2] * this.mat4[5], n = this.mat4[1] * this.mat4[7] - this.mat4[3] * this.mat4[5], s = this.mat4[2] * this.mat4[7] - this.mat4[3] * this.mat4[6], i = this.mat4[8] * this.mat4[13] - this.mat4[9] * this.mat4[12], a = this.mat4[8] * this.mat4[14] - this.mat4[10] * this.mat4[12], l = this.mat4[8] * this.mat4[15] - this.mat4[11] * this.mat4[12], u = this.mat4[9] * this.mat4[14] - this.mat4[10] * this.mat4[13], c = this.mat4[9] * this.mat4[15] - this.mat4[11] * this.mat4[13];
                                return e1 * (this.mat4[10] * this.mat4[15] - this.mat4[11] * this.mat4[14]) - t * c + r * u + o * l - n * a + s * i;
                            }
                        },
                        {
                            key: "mult",
                            value: function(e1) {
                                var t;
                                if (e1 === this || e1 === this.mat4) t = this.copy().mat4;
                                else if (e1 instanceof O.default.Matrix) t = e1.mat4;
                                else if (C(e1)) t = e1;
                                else {
                                    if (16 !== arguments.length) return;
                                    t = arguments;
                                }
                                var e1 = this.mat4[0], r = this.mat4[1], o = this.mat4[2], n = this.mat4[3];
                                return this.mat4[0] = e1 * t[0] + r * t[4] + o * t[8] + n * t[12], this.mat4[1] = e1 * t[1] + r * t[5] + o * t[9] + n * t[13], this.mat4[2] = e1 * t[2] + r * t[6] + o * t[10] + n * t[14], this.mat4[3] = e1 * t[3] + r * t[7] + o * t[11] + n * t[15], e1 = this.mat4[4], r = this.mat4[5], o = this.mat4[6], n = this.mat4[7], this.mat4[4] = e1 * t[0] + r * t[4] + o * t[8] + n * t[12], this.mat4[5] = e1 * t[1] + r * t[5] + o * t[9] + n * t[13], this.mat4[6] = e1 * t[2] + r * t[6] + o * t[10] + n * t[14], this.mat4[7] = e1 * t[3] + r * t[7] + o * t[11] + n * t[15], e1 = this.mat4[8], r = this.mat4[9], o = this.mat4[10], n = this.mat4[11], this.mat4[8] = e1 * t[0] + r * t[4] + o * t[8] + n * t[12], this.mat4[9] = e1 * t[1] + r * t[5] + o * t[9] + n * t[13], this.mat4[10] = e1 * t[2] + r * t[6] + o * t[10] + n * t[14], this.mat4[11] = e1 * t[3] + r * t[7] + o * t[11] + n * t[15], e1 = this.mat4[12], r = this.mat4[13], o = this.mat4[14], n = this.mat4[15], this.mat4[12] = e1 * t[0] + r * t[4] + o * t[8] + n * t[12], this.mat4[13] = e1 * t[1] + r * t[5] + o * t[9] + n * t[13], this.mat4[14] = e1 * t[2] + r * t[6] + o * t[10] + n * t[14], this.mat4[15] = e1 * t[3] + r * t[7] + o * t[11] + n * t[15], this;
                            }
                        },
                        {
                            key: "apply",
                            value: function(e1) {
                                var t;
                                if (e1 === this || e1 === this.mat4) t = this.copy().mat4;
                                else if (e1 instanceof O.default.Matrix) t = e1.mat4;
                                else if (C(e1)) t = e1;
                                else {
                                    if (16 !== arguments.length) return;
                                    t = arguments;
                                }
                                var e1 = this.mat4, r = e1[0], o = e1[4], n = e1[8], s = e1[12], r = (e1[0] = t[0] * r + t[1] * o + t[2] * n + t[3] * s, e1[4] = t[4] * r + t[5] * o + t[6] * n + t[7] * s, e1[8] = t[8] * r + t[9] * o + t[10] * n + t[11] * s, e1[12] = t[12] * r + t[13] * o + t[14] * n + t[15] * s, e1[1]), o = e1[5], n = e1[9], s = e1[13], r = (e1[1] = t[0] * r + t[1] * o + t[2] * n + t[3] * s, e1[5] = t[4] * r + t[5] * o + t[6] * n + t[7] * s, e1[9] = t[8] * r + t[9] * o + t[10] * n + t[11] * s, e1[13] = t[12] * r + t[13] * o + t[14] * n + t[15] * s, e1[2]), o = e1[6], n = e1[10], s = e1[14], r = (e1[2] = t[0] * r + t[1] * o + t[2] * n + t[3] * s, e1[6] = t[4] * r + t[5] * o + t[6] * n + t[7] * s, e1[10] = t[8] * r + t[9] * o + t[10] * n + t[11] * s, e1[14] = t[12] * r + t[13] * o + t[14] * n + t[15] * s, e1[3]), o = e1[7], n = e1[11], s = e1[15];
                                return e1[3] = t[0] * r + t[1] * o + t[2] * n + t[3] * s, e1[7] = t[4] * r + t[5] * o + t[6] * n + t[7] * s, e1[11] = t[8] * r + t[9] * o + t[10] * n + t[11] * s, e1[15] = t[12] * r + t[13] * o + t[14] * n + t[15] * s, this;
                            }
                        },
                        {
                            key: "scale",
                            value: function(e1, t, r) {
                                return e1 instanceof O.default.Vector ? (t = e1.y, r = e1.z, e1 = e1.x) : e1 instanceof Array && (t = e1[1], r = e1[2], e1 = e1[0]), this.mat4[0] *= e1, this.mat4[1] *= e1, this.mat4[2] *= e1, this.mat4[3] *= e1, this.mat4[4] *= t, this.mat4[5] *= t, this.mat4[6] *= t, this.mat4[7] *= t, this.mat4[8] *= r, this.mat4[9] *= r, this.mat4[10] *= r, this.mat4[11] *= r, this;
                            }
                        },
                        {
                            key: "rotate",
                            value: function(e1, t, r, o) {
                                t instanceof O.default.Vector ? (r = t.y, o = t.z, t = t.x) : t instanceof Array && (r = t[1], o = t[2], t = t[0]);
                                var n = Math.sqrt(t * t + r * r + o * o), n = (t *= 1 / n, r *= 1 / n, o *= 1 / n, this.mat4[0]), s = this.mat4[1], i = this.mat4[2], a = this.mat4[3], l = this.mat4[4], u = this.mat4[5], c = this.mat4[6], d = this.mat4[7], f = this.mat4[8], h = this.mat4[9], p = this.mat4[10], m = this.mat4[11], y = Math.sin(e1), e1 = Math.cos(e1), g = 1 - e1, v = t * t * g + e1, b = r * t * g + o * y, j = o * t * g - r * y, _ = t * r * g - o * y, x = r * r * g + e1, w = o * r * g + t * y, S = t * o * g + r * y, r = r * o * g - t * y, t = o * o * g + e1;
                                return this.mat4[0] = n * v + l * b + f * j, this.mat4[1] = s * v + u * b + h * j, this.mat4[2] = i * v + c * b + p * j, this.mat4[3] = a * v + d * b + m * j, this.mat4[4] = n * _ + l * x + f * w, this.mat4[5] = s * _ + u * x + h * w, this.mat4[6] = i * _ + c * x + p * w, this.mat4[7] = a * _ + d * x + m * w, this.mat4[8] = n * S + l * r + f * t, this.mat4[9] = s * S + u * r + h * t, this.mat4[10] = i * S + c * r + p * t, this.mat4[11] = a * S + d * r + m * t, this;
                            }
                        },
                        {
                            key: "translate",
                            value: function(e1) {
                                var t = e1[0], r = e1[1], e1 = e1[2] || 0;
                                this.mat4[12] += this.mat4[0] * t + this.mat4[4] * r + this.mat4[8] * e1, this.mat4[13] += this.mat4[1] * t + this.mat4[5] * r + this.mat4[9] * e1, this.mat4[14] += this.mat4[2] * t + this.mat4[6] * r + this.mat4[10] * e1, this.mat4[15] += this.mat4[3] * t + this.mat4[7] * r + this.mat4[11] * e1;
                            }
                        },
                        {
                            key: "rotateX",
                            value: function(e1) {
                                this.rotate(e1, 1, 0, 0);
                            }
                        },
                        {
                            key: "rotateY",
                            value: function(e1) {
                                this.rotate(e1, 0, 1, 0);
                            }
                        },
                        {
                            key: "rotateZ",
                            value: function(e1) {
                                this.rotate(e1, 0, 0, 1);
                            }
                        },
                        {
                            key: "perspective",
                            value: function(e1, t, r, o) {
                                var e1 = 1 / Math.tan(e1 / 2), n = 1 / (r - o);
                                return this.mat4[0] = e1 / t, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = e1, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = (o + r) * n, this.mat4[11] = -1, this.mat4[12] = 0, this.mat4[13] = 0, this.mat4[14] = 2 * o * r * n, this.mat4[15] = 0, this;
                            }
                        },
                        {
                            key: "ortho",
                            value: function(e1, t, r, o, n, s) {
                                var i = 1 / (e1 - t), a = 1 / (r - o), l = 1 / (n - s);
                                return this.mat4[0] = -2 * i, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = -2 * a, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = 2 * l, this.mat4[11] = 0, this.mat4[12] = (e1 + t) * i, this.mat4[13] = (o + r) * a, this.mat4[14] = (s + n) * l, this.mat4[15] = 1, this;
                            }
                        },
                        {
                            key: "multiplyVec4",
                            value: function(e1, t, r, o) {
                                var n = new Array(4), s = this.mat4;
                                return n[0] = s[0] * e1 + s[4] * t + s[8] * r + s[12] * o, n[1] = s[1] * e1 + s[5] * t + s[9] * r + s[13] * o, n[2] = s[2] * e1 + s[6] * t + s[10] * r + s[14] * o, n[3] = s[3] * e1 + s[7] * t + s[11] * r + s[15] * o, n;
                            }
                        },
                        {
                            key: "multiplyPoint",
                            value: function(e1) {
                                var t = e1.x, r = e1.y, e1 = e1.z, t = this.multiplyVec4(t, r, e1, 1);
                                return new O.default.Vector(t[0], t[1], t[2]);
                            }
                        },
                        {
                            key: "multiplyAndNormalizePoint",
                            value: function(e1) {
                                var t = e1.x, r = e1.y, e1 = e1.z, t = this.multiplyVec4(t, r, e1, 1);
                                return t[0] /= t[3], t[1] /= t[3], t[2] /= t[3], new O.default.Vector(t[0], t[1], t[2]);
                            }
                        },
                        {
                            key: "multiplyDirection",
                            value: function(e1) {
                                var t = e1.x, r = e1.y, e1 = e1.z, t = this.multiplyVec4(t, r, e1, 0);
                                return new O.default.Vector(t[0], t[1], t[2]);
                            }
                        },
                        {
                            key: "mult3x3",
                            value: function(e1) {
                                var t;
                                if (e1 === this || e1 === this.mat3) t = this.copy().mat3;
                                else if (e1 instanceof O.default.Matrix) t = e1.mat3;
                                else if (C(e1)) t = e1;
                                else {
                                    if (9 !== arguments.length) return;
                                    t = arguments;
                                }
                                var e1 = this.mat3[0], r = this.mat3[1], o = this.mat3[2];
                                return this.mat3[0] = e1 * t[0] + r * t[3] + o * t[6], this.mat3[1] = e1 * t[1] + r * t[4] + o * t[7], this.mat3[2] = e1 * t[2] + r * t[5] + o * t[8], e1 = this.mat3[3], r = this.mat3[4], o = this.mat3[5], this.mat3[3] = e1 * t[0] + r * t[3] + o * t[6], this.mat3[4] = e1 * t[1] + r * t[4] + o * t[7], this.mat3[5] = e1 * t[2] + r * t[5] + o * t[8], e1 = this.mat3[6], r = this.mat3[7], o = this.mat3[8], this.mat3[6] = e1 * t[0] + r * t[3] + o * t[6], this.mat3[7] = e1 * t[1] + r * t[4] + o * t[7], this.mat3[8] = e1 * t[2] + r * t[5] + o * t[8], this;
                            }
                        },
                        {
                            key: "column",
                            value: function(e1) {
                                return new O.default.Vector(this.mat3[e1], this.mat3[e1 + 3], this.mat3[e1 + 6]);
                            }
                        },
                        {
                            key: "row",
                            value: function(e1) {
                                return new O.default.Vector(this.mat3[3 * e1], this.mat3[3 * e1 + 1], this.mat3[3 * e1 + 2]);
                            }
                        },
                        {
                            key: "diagonal",
                            value: function() {
                                return void 0 !== this.mat3 ? [
                                    this.mat3[0],
                                    this.mat3[4],
                                    this.mat3[8]
                                ] : [
                                    this.mat4[0],
                                    this.mat4[5],
                                    this.mat4[10],
                                    this.mat4[15]
                                ];
                            }
                        },
                        {
                            key: "multiplyVec3",
                            value: function(e1, t) {
                                return (t = void 0 === t ? e1.copy() : t).x = this.row(0).dot(e1), t.y = this.row(1).dot(e1), t.z = this.row(2).dot(e1), t;
                            }
                        },
                        {
                            key: "createSubMatrix3x3",
                            value: function() {
                                var e1 = new O.default.Matrix("mat3");
                                return e1.mat3[0] = this.mat4[0], e1.mat3[1] = this.mat4[1], e1.mat3[2] = this.mat4[2], e1.mat3[3] = this.mat4[4], e1.mat3[4] = this.mat4[5], e1.mat3[5] = this.mat4[6], e1.mat3[6] = this.mat4[8], e1.mat3[7] = this.mat4[9], e1.mat3[8] = this.mat4[10], e1;
                            }
                        }
                    ], n(e1.prototype, t), o && n(e1, o), r;
                }(), O.default.Matrix);
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.typed-array.copy-within": 203,
                "core-js/modules/es.typed-array.every": 204,
                "core-js/modules/es.typed-array.fill": 205,
                "core-js/modules/es.typed-array.filter": 206,
                "core-js/modules/es.typed-array.find": 208,
                "core-js/modules/es.typed-array.find-index": 207,
                "core-js/modules/es.typed-array.float32-array": 209,
                "core-js/modules/es.typed-array.for-each": 211,
                "core-js/modules/es.typed-array.includes": 212,
                "core-js/modules/es.typed-array.index-of": 213,
                "core-js/modules/es.typed-array.iterator": 216,
                "core-js/modules/es.typed-array.join": 217,
                "core-js/modules/es.typed-array.last-index-of": 218,
                "core-js/modules/es.typed-array.map": 219,
                "core-js/modules/es.typed-array.reduce": 221,
                "core-js/modules/es.typed-array.reduce-right": 220,
                "core-js/modules/es.typed-array.reverse": 222,
                "core-js/modules/es.typed-array.set": 223,
                "core-js/modules/es.typed-array.slice": 224,
                "core-js/modules/es.typed-array.some": 225,
                "core-js/modules/es.typed-array.sort": 226,
                "core-js/modules/es.typed-array.subarray": 227,
                "core-js/modules/es.typed-array.to-locale-string": 228,
                "core-js/modules/es.typed-array.to-string": 229
            }
        ],
        325: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.map"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e1 = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function o(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                e1.default.RenderBuffer = function() {
                    function i(e1, t, r, o, n, s) {
                        if (!(this instanceof i)) throw new TypeError("Cannot call a class as a function");
                        this.size = e1, this.src = t, this.dst = r, this.attr = o, this._renderer = n, this.map = s;
                    }
                    var e1, t, r;
                    return e1 = i, t = [
                        {
                            key: "_prepareBuffer",
                            value: function(e1, t) {
                                var r, o, n, s = t.attributes, i = this._renderer.GL, a = e1.model || e1, s = s[this.attr];
                                s && (r = e1[this.dst], 0 < (o = a[this.src]).length ? ((n = !r) && (e1[this.dst] = r = i.createBuffer()), i.bindBuffer(i.ARRAY_BUFFER, r), !n && !1 === a.dirtyFlags[this.src] || (n = (e1 = this.map) ? e1(o) : o, this._renderer._bindBuffer(r, i.ARRAY_BUFFER, n), a.dirtyFlags[this.src] = !1), t.enableAttrib(s, this.size)) : -1 !== (e1 = s.location) && this._renderer.registerEnabled[e1] && (i.disableVertexAttribArray(e1), this._renderer.registerEnabled[e1] = !1));
                            }
                        }
                    ], o(e1.prototype, t), r && o(e1, r), i;
                }();
                e1 = e1.default.RenderBuffer;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.map": 163
            }
        ],
        326: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.map"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l = (n = e1("../core/main")) && n.__esModule ? n : {
                    default: n
                }, u = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants"));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                function c(e1) {
                    return function(e1) {
                        if (Array.isArray(e1)) {
                            for(var t = 0, r = new Array(e1.length); t < e1.length; t++)r[t] = e1[t];
                            return r;
                        }
                    }(e1) || function(e1) {
                        if (Symbol.iterator in Object(e1) || "[object Arguments]" === Object.prototype.toString.call(e1)) return Array.from(e1);
                    }(e1) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                e1("./p5.RenderBuffer"), l.default.RendererGL.prototype.beginShape = function(e1) {
                    return this.immediateMode.shapeMode = void 0 !== e1 ? e1 : u.TESS, this.immediateMode.geometry.reset(), this;
                };
                var d = {
                    vertices: 1,
                    vertexNormals: 1,
                    vertexColors: 4,
                    vertexStrokeColors: 4,
                    uvs: 2
                }, n = (l.default.RendererGL.prototype.vertex = function(e1, t) {
                    if (this.immediateMode.shapeMode === u.QUADS && this.immediateMode.geometry.vertices.length % 6 == 3) for(var r in d){
                        var o = d[r], r = this.immediateMode.geometry[r];
                        r.push.apply(r, c(r.slice(r.length - 3 * o, r.length - 2 * o)).concat(c(r.slice(r.length - o, r.length))));
                    }
                    var n, s, i = n = s = 0, a = (3 === arguments.length ? i = arguments[2] : 4 === arguments.length ? (n = arguments[2], s = arguments[3]) : 5 === arguments.length && (i = arguments[2], n = arguments[3], s = arguments[4]), new l.default.Vector(e1, t, i)), a = (this.immediateMode.geometry.vertices.push(a), this.immediateMode.geometry.vertexNormals.push(this._currentNormal), this.curFillColor || [
                        .5,
                        .5,
                        .5,
                        1
                    ]), a = (this.immediateMode.geometry.vertexColors.push(a[0], a[1], a[2], a[3]), this.curStrokeColor || [
                        .5,
                        .5,
                        .5,
                        1
                    ]);
                    return this.immediateMode.geometry.vertexStrokeColors.push(a[0], a[1], a[2], a[3]), this.textureMode === u.IMAGE && (null !== this._tex ? 0 < this._tex.width && 0 < this._tex.height && (n /= this._tex.width, s /= this._tex.height) : !this.isProcessingVertices && null === this._tex && 4 <= arguments.length && console.warn("You must first call texture() before using vertex() with image based u and v coordinates")), this.immediateMode.geometry.uvs.push(n, s), this.immediateMode._bezierVertex[0] = e1, this.immediateMode._bezierVertex[1] = t, this.immediateMode._bezierVertex[2] = i, this.immediateMode._quadraticVertex[0] = e1, this.immediateMode._quadraticVertex[1] = t, this.immediateMode._quadraticVertex[2] = i, this;
                }, l.default.RendererGL.prototype.normal = function(e1, t, r) {
                    return e1 instanceof l.default.Vector ? this._currentNormal = e1 : this._currentNormal = new l.default.Vector(e1, t, r), this;
                }, l.default.RendererGL.prototype.endShape = function(e1, t, r, o, n, s) {
                    return this.immediateMode.shapeMode === u.POINTS ? this._drawPoints(this.immediateMode.geometry.vertices, this.immediateMode.buffers.point) : (this.isProcessingVertices = !0, this._processVertices.apply(this, arguments), this.isProcessingVertices = !1, this._doFill && 1 < this.immediateMode.geometry.vertices.length && this._drawImmediateFill(), this._doStroke && 1 < this.immediateMode.geometry.lineVertices.length && this._drawImmediateStroke(), this.isBezier = !1, this.isQuadratic = !1, this.isCurve = !1, this.immediateMode._bezierVertex.length = 0, this.immediateMode._quadraticVertex.length = 0, this.immediateMode._curveVertex.length = 0), this;
                }, l.default.RendererGL.prototype._processVertices = function(e1) {
                    var t;
                    0 !== this.immediateMode.geometry.vertices.length && (t = this._doStroke, e1 = e1 === u.CLOSE, t && (this.immediateMode.geometry.edges = this._calculateEdges(this.immediateMode.shapeMode, this.immediateMode.geometry.vertices, e1), this.immediateMode.geometry._edgesToVertices()), t = this.immediateMode.shapeMode === u.TESS, this._doFill && (this.isBezier || this.isQuadratic || this.isCurve || t) && this.immediateMode.shapeMode !== u.LINES && this._tesselateShape());
                }, l.default.RendererGL.prototype._calculateEdges = function(e1, t, r) {
                    var o = [], n = 0;
                    switch(e1){
                        case u.TRIANGLE_STRIP:
                            for(n = 0; n < t.length - 2; n++)o.push([
                                n,
                                n + 1
                            ]), o.push([
                                n,
                                n + 2
                            ]);
                            o.push([
                                n,
                                n + 1
                            ]);
                            break;
                        case u.TRIANGLE_FAN:
                            for(n = 1; n < t.length - 1; n++)o.push([
                                0,
                                n
                            ]), o.push([
                                n,
                                n + 1
                            ]);
                            o.push([
                                0,
                                t.length - 1
                            ]);
                            break;
                        case u.TRIANGLES:
                            for(n = 0; n < t.length - 2; n += 3)o.push([
                                n,
                                n + 1
                            ]), o.push([
                                n + 1,
                                n + 2
                            ]), o.push([
                                n + 2,
                                n
                            ]);
                            break;
                        case u.LINES:
                            for(n = 0; n < t.length - 1; n += 2)o.push([
                                n,
                                n + 1
                            ]);
                            break;
                        case u.QUADS:
                            for(n = 0; n < t.length - 5; n += 6)o.push([
                                n,
                                n + 1
                            ]), o.push([
                                n + 1,
                                n + 2
                            ]), o.push([
                                n + 3,
                                n + 5
                            ]), o.push([
                                n + 4,
                                n + 5
                            ]);
                            break;
                        case u.QUAD_STRIP:
                            for(n = 0; n < t.length - 2; n += 2)o.push([
                                n,
                                n + 1
                            ]), o.push([
                                n,
                                n + 2
                            ]), o.push([
                                n + 1,
                                n + 3
                            ]);
                            o.push([
                                n,
                                n + 1
                            ]);
                            break;
                        default:
                            for(n = 0; n < t.length - 1; n++)o.push([
                                n,
                                n + 1
                            ]);
                    }
                    return r && o.push([
                        t.length - 1,
                        0
                    ]), o;
                }, l.default.RendererGL.prototype._tesselateShape = function() {
                    for(var r = this, e1 = (this.immediateMode.shapeMode = u.TRIANGLES, [
                        this._flatten(this.immediateMode.geometry.vertices.map(function(e1, t) {
                            return [
                                e1.x,
                                e1.y,
                                e1.z,
                                r.immediateMode.geometry.uvs[2 * t],
                                r.immediateMode.geometry.uvs[2 * t + 1],
                                r.immediateMode.geometry.vertexColors[4 * t],
                                r.immediateMode.geometry.vertexColors[4 * t + 1],
                                r.immediateMode.geometry.vertexColors[4 * t + 2],
                                r.immediateMode.geometry.vertexColors[4 * t + 3],
                                r.immediateMode.geometry.vertexNormals[t].x,
                                r.immediateMode.geometry.vertexNormals[t].y,
                                r.immediateMode.geometry.vertexNormals[t].z
                            ];
                        }))
                    ]), t = this._triangulate(e1), o = (this.immediateMode.geometry.vertices = [], this.immediateMode.geometry.vertexNormals = [], this.immediateMode.geometry.uvs = [], []), n = 0, s = t.length; n < s; n += l.default.RendererGL.prototype.tessyVertexSize)o.push.apply(o, c(t.slice(n + 5, n + 9))), this.normal.apply(this, c(t.slice(n + 9, n + 12))), this.vertex.apply(this, c(t.slice(n, n + 5)));
                    this.immediateMode.geometry.vertexColors = o;
                }, l.default.RendererGL.prototype._drawImmediateFill = function() {
                    var e1 = this.GL, t = (this._useVertexColor = 0 < this.immediateMode.geometry.vertexColors.length, this._getImmediateFillShader()), r = (this._setFillUniforms(t), !0), o = !1, n = void 0;
                    try {
                        for(var s, i = this.immediateMode.buffers.fill[Symbol.iterator](); !(r = (s = i.next()).done); r = !0)s.value._prepareBuffer(this.immediateMode.geometry, t);
                    } catch (e1) {
                        o = !0, n = e1;
                    } finally{
                        try {
                            r || null == i.return || i.return();
                        } finally{
                            if (o) throw n;
                        }
                    }
                    this.immediateMode.shapeMode !== u.LINE_STRIP && this.immediateMode.shapeMode !== u.LINES || (this.immediateMode.shapeMode = u.TRIANGLE_FAN), this.immediateMode.shapeMode === u.QUADS ? this.immediateMode.shapeMode = u.TRIANGLES : this.immediateMode.shapeMode === u.QUAD_STRIP && (this.immediateMode.shapeMode = u.TRIANGLE_STRIP), this._applyColorBlend(this.curFillColor), e1.drawArrays(this.immediateMode.shapeMode, 0, this.immediateMode.geometry.vertices.length), t.unbindShader();
                }, l.default.RendererGL.prototype._drawImmediateStroke = function() {
                    var e1 = this.GL, t = e1.isEnabled(e1.CULL_FACE), r = (e1.disable(e1.CULL_FACE), this._getImmediateStrokeShader()), o = (this._useLineColor = 0 < this.immediateMode.geometry.vertexStrokeColors.length, this._setStrokeUniforms(r), !0), n = !1, s = void 0;
                    try {
                        for(var i, a = this.immediateMode.buffers.stroke[Symbol.iterator](); !(o = (i = a.next()).done); o = !0)i.value._prepareBuffer(this.immediateMode.geometry, r);
                    } catch (e1) {
                        n = !0, s = e1;
                    } finally{
                        try {
                            o || null == a.return || a.return();
                        } finally{
                            if (n) throw s;
                        }
                    }
                    this._applyColorBlend(this.curStrokeColor), e1.drawArrays(e1.TRIANGLES, 0, this.immediateMode.geometry.lineVertices.length), t && e1.enable(e1.CULL_FACE), r.unbindShader();
                }, l.default.RendererGL);
                r.default = n;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "./p5.RenderBuffer": 325,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.fill": 154,
                "core-js/modules/es.array.from": 157,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.map": 163,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        327: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.some"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.typed-array.float32-array"), e1("core-js/modules/es.typed-array.uint16-array"), e1("core-js/modules/es.typed-array.uint32-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.some"), e1("core-js/modules/es.object.keys"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.typed-array.float32-array"), e1("core-js/modules/es.typed-array.uint16-array"), e1("core-js/modules/es.typed-array.uint32-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = (u = e1("../core/main")) && u.__esModule ? u : {
                    default: u
                }, n = (e1("./p5.RendererGL"), e1("./p5.RenderBuffer"), function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = l();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants")));
                function l() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, l = function() {
                        return e1;
                    }, e1);
                }
                var s = 0, u = (a.default.RendererGL.prototype._initBufferDefaults = function(e1) {
                    var t;
                    return this._freeBuffers(e1), 1e3 < ++s && (t = Object.keys(this.retainedMode.geometry)[0], delete this.retainedMode.geometry[t], s--), this.retainedMode.geometry[e1] = {};
                }, a.default.RendererGL.prototype._freeBuffers = function(e1) {
                    var a, l = this.retainedMode.geometry[e1];
                    function t(e1) {
                        var t = !0, r = !1, o = void 0;
                        try {
                            for(var n, s = e1[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                                var i = n.value;
                                l[i.dst] && (a.deleteBuffer(l[i.dst]), l[i.dst] = null);
                            }
                        } catch (e1) {
                            r = !0, o = e1;
                        } finally{
                            try {
                                t || null == s.return || s.return();
                            } finally{
                                if (r) throw o;
                            }
                        }
                    }
                    l && (delete this.retainedMode.geometry[e1], s--, a = this.GL, l.indexBuffer && a.deleteBuffer(l.indexBuffer), t(this.retainedMode.buffers.stroke), t(this.retainedMode.buffers.fill));
                }, a.default.RendererGL.prototype.createBuffers = function(e1, t) {
                    var r, o, n, s = this.GL, e1 = this._initBufferDefaults(e1), i = (e1.model = t, e1.indexBuffer);
                    return t.faces.length ? (i = i || (e1.indexBuffer = s.createBuffer()), n = (o = (r = a.default.RendererGL.prototype._flatten(t.faces)).some(function(e1) {
                        return 65535 < e1;
                    })) ? Uint32Array : Uint16Array, this._bindBuffer(i, s.ELEMENT_ARRAY_BUFFER, r, n), e1.indexBufferType = o ? s.UNSIGNED_INT : s.UNSIGNED_SHORT, e1.vertexCount = 3 * t.faces.length) : (i && (s.deleteBuffer(i), e1.indexBuffer = null), e1.vertexCount = t.vertices ? t.vertices.length : 0), e1.lineVertexCount = t.lineVertices ? t.lineVertices.length : 0, e1;
                }, a.default.RendererGL.prototype.drawBuffers = function(e1) {
                    var t = this.GL, r = this.retainedMode.geometry[e1];
                    if (this._doFill) {
                        this._useVertexColor = 0 < r.model.vertexColors.length;
                        var o = this._getRetainedFillShader(), n = (this._setFillUniforms(o), !0), s = !1, i = void 0;
                        try {
                            for(var a, l = this.retainedMode.buffers.fill[Symbol.iterator](); !(n = (a = l.next()).done); n = !0)a.value._prepareBuffer(r, o);
                        } catch (e1) {
                            s = !0, i = e1;
                        } finally{
                            try {
                                n || null == l.return || l.return();
                            } finally{
                                if (s) throw i;
                            }
                        }
                        r.indexBuffer && this._bindBuffer(r.indexBuffer, t.ELEMENT_ARRAY_BUFFER), this._applyColorBlend(this.curFillColor), this._drawElements(t.TRIANGLES, e1), o.unbindShader();
                    }
                    if (this._doStroke && 0 < r.lineVertexCount) {
                        var s = t.isEnabled(t.CULL_FACE), u = (t.disable(t.CULL_FACE), this._getRetainedStrokeShader()), c = (this._useLineColor = 0 < r.model.vertexStrokeColors.length, this._setStrokeUniforms(u), !0), i = !1, d = void 0;
                        try {
                            for(var f, h = this.retainedMode.buffers.stroke[Symbol.iterator](); !(c = (f = h.next()).done); c = !0)f.value._prepareBuffer(r, u);
                        } catch (e1) {
                            i = !0, d = e1;
                        } finally{
                            try {
                                c || null == h.return || h.return();
                            } finally{
                                if (i) throw d;
                            }
                        }
                        this._applyColorBlend(this.curStrokeColor), this._drawArrays(t.TRIANGLES, e1), s && t.enable(t.CULL_FACE), u.unbindShader();
                    }
                    return this;
                }, a.default.RendererGL.prototype.drawBuffersScaled = function(e1, t, r, o) {
                    var n = this.uMVMatrix.copy();
                    try {
                        this.uMVMatrix.scale(t, r, o), this.drawBuffers(e1);
                    } finally{
                        this.uMVMatrix = n;
                    }
                }, a.default.RendererGL.prototype._drawArrays = function(e1, t) {
                    return this.GL.drawArrays(e1, 0, this.retainedMode.geometry[t].lineVertexCount), this;
                }, a.default.RendererGL.prototype._drawElements = function(e1, t) {
                    var t = this.retainedMode.geometry[t], r = this.GL;
                    if (t.indexBuffer) {
                        if (this._pInst.webglVersion !== n.WEBGL2 && t.indexBufferType === r.UNSIGNED_INT && !r.getExtension("OES_element_index_uint")) throw new Error("Unable to render a 3d model with > 65535 triangles. Your web browser does not support the WebGL Extension OES_element_index_uint.");
                        r.drawElements(r.TRIANGLES, t.vertexCount, t.indexBufferType, 0);
                    } else r.drawArrays(e1 || r.TRIANGLES, 0, t.vertexCount);
                }, a.default.RendererGL.prototype._drawPoints = function(e1, t) {
                    var r = this.GL, o = this._getImmediatePointShader();
                    this._setPointUniforms(o), this._bindBuffer(t, r.ARRAY_BUFFER, this._vToNArray(e1), Float32Array, r.STATIC_DRAW), o.enableAttrib(o.attributes.aPosition, 3), this._applyColorBlend(this.curStrokeColor), r.drawArrays(r.Points, 0, e1.length), o.unbindShader();
                }, a.default.RendererGL);
                r.default = u;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "./p5.RenderBuffer": 325,
                "./p5.RendererGL": 328,
                "core-js/modules/es.array.fill": 154,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.some": 165,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.keys": 179,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.typed-array.copy-within": 203,
                "core-js/modules/es.typed-array.every": 204,
                "core-js/modules/es.typed-array.fill": 205,
                "core-js/modules/es.typed-array.filter": 206,
                "core-js/modules/es.typed-array.find": 208,
                "core-js/modules/es.typed-array.find-index": 207,
                "core-js/modules/es.typed-array.float32-array": 209,
                "core-js/modules/es.typed-array.for-each": 211,
                "core-js/modules/es.typed-array.includes": 212,
                "core-js/modules/es.typed-array.index-of": 213,
                "core-js/modules/es.typed-array.iterator": 216,
                "core-js/modules/es.typed-array.join": 217,
                "core-js/modules/es.typed-array.last-index-of": 218,
                "core-js/modules/es.typed-array.map": 219,
                "core-js/modules/es.typed-array.reduce": 221,
                "core-js/modules/es.typed-array.reduce-right": 220,
                "core-js/modules/es.typed-array.reverse": 222,
                "core-js/modules/es.typed-array.set": 223,
                "core-js/modules/es.typed-array.slice": 224,
                "core-js/modules/es.typed-array.some": 225,
                "core-js/modules/es.typed-array.sort": 226,
                "core-js/modules/es.typed-array.subarray": 227,
                "core-js/modules/es.typed-array.to-locale-string": 228,
                "core-js/modules/es.typed-array.to-string": 229,
                "core-js/modules/es.typed-array.uint16-array": 230,
                "core-js/modules/es.typed-array.uint32-array": 231,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        328: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.copy-within"), e1("core-js/modules/es.array.every"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.array.some"), e1("core-js/modules/es.map"), e1("core-js/modules/es.object.assign"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.set"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.typed-array.float32-array"), e1("core-js/modules/es.typed-array.float64-array"), e1("core-js/modules/es.typed-array.int16-array"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.uint16-array"), e1("core-js/modules/es.typed-array.uint32-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.concat"), e1("core-js/modules/es.array.copy-within"), e1("core-js/modules/es.array.every"), e1("core-js/modules/es.array.fill"), e1("core-js/modules/es.array.from"), e1("core-js/modules/es.array.includes"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.array.some"), e1("core-js/modules/es.map"), e1("core-js/modules/es.object.assign"), e1("core-js/modules/es.object.get-prototype-of"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.reflect.construct"), e1("core-js/modules/es.regexp.to-string"), e1("core-js/modules/es.set"), e1("core-js/modules/es.string.includes"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.typed-array.float32-array"), e1("core-js/modules/es.typed-array.float64-array"), e1("core-js/modules/es.typed-array.int16-array"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.uint16-array"), e1("core-js/modules/es.typed-array.uint32-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.readPixelsWebGL = w, r.readPixelWebGL = S, r.default = void 0;
                var g = n(e1("../core/main")), i = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== u(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = l();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants")), a = n(e1("libtess"));
                e1("./p5.Shader"), e1("./p5.Camera"), e1("../core/p5.Renderer"), e1("./p5.Matrix"), e1("path");
                function l() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, l = function() {
                        return e1;
                    }, e1);
                }
                function n(e1) {
                    return e1 && e1.__esModule ? e1 : {
                        default: e1
                    };
                }
                function u(e1) {
                    return (u = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                function c(e1) {
                    return function(e1) {
                        if (Array.isArray(e1)) {
                            for(var t = 0, r = new Array(e1.length); t < e1.length; t++)r[t] = e1[t];
                            return r;
                        }
                    }(e1) || function(e1) {
                        if (Symbol.iterator in Object(e1) || "[object Arguments]" === Object.prototype.toString.call(e1)) return Array.from(e1);
                    }(e1) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                function d(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                function f(e1, t) {
                    return (f = Object.setPrototypeOf || function(e1, t) {
                        return e1.__proto__ = t, e1;
                    })(e1, t);
                }
                function h(o) {
                    return function() {
                        var e1, t, r = s(o);
                        return e1 = function() {
                            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                                if ("function" == typeof Proxy) return 1;
                                try {
                                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), 1;
                                } catch (e1) {}
                            }
                        }() ? (e1 = s(this).constructor, Reflect.construct(r, arguments, e1)) : r.apply(this, arguments), r = this, !(t = e1) || "object" !== u(t) && "function" != typeof t ? p(r) : t;
                    };
                }
                function p(e1) {
                    if (void 0 === e1) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return e1;
                }
                function s(e1) {
                    return (s = Object.setPrototypeOf ? Object.getPrototypeOf : function(e1) {
                        return e1.__proto__ || Object.getPrototypeOf(e1);
                    })(e1);
                }
                function m(e1, t) {
                    j += "#define STROKE_CAP_".concat(e1, " ").concat(t, "\n"), v[i[e1]] = t;
                }
                function y(e1, t) {
                    j += "#define STROKE_JOIN_".concat(e1, " ").concat(t, "\n"), b[i[e1]] = t;
                }
                var v = {}, b = {}, j = "", e1 = (m("ROUND", 0), m("PROJECT", 1), m("SQUARE", 2), y("ROUND", 0), y("MITER", 1), y("BEVEL", 2), "precision highp float;\nprecision highp int;\n\nuniform mat4 uViewMatrix;\n\nuniform bool uUseLighting;\n\nuniform int uAmbientLightCount;\nuniform vec3 uAmbientColor[5];\n\nuniform int uDirectionalLightCount;\nuniform vec3 uLightingDirection[5];\nuniform vec3 uDirectionalDiffuseColors[5];\nuniform vec3 uDirectionalSpecularColors[5];\n\nuniform int uPointLightCount;\nuniform vec3 uPointLightLocation[5];\nuniform vec3 uPointLightDiffuseColors[5];	\nuniform vec3 uPointLightSpecularColors[5];\n\nuniform int uSpotLightCount;\nuniform float uSpotLightAngle[5];\nuniform float uSpotLightConc[5];\nuniform vec3 uSpotLightDiffuseColors[5];\nuniform vec3 uSpotLightSpecularColors[5];\nuniform vec3 uSpotLightLocation[5];\nuniform vec3 uSpotLightDirection[5];\n\nuniform bool uSpecular;\nuniform float uShininess;\n\nuniform float uConstantAttenuation;\nuniform float uLinearAttenuation;\nuniform float uQuadraticAttenuation;\n\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n  float specular;\n  float diffuse;\n};\n\nfloat _phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = reflect(lightDirection, surfaceNormal);\n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat _lambertDiffuse(vec3 lightDirection, vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult _light(vec3 viewDirection, vec3 normal, vec3 lightVector) {\n\n  vec3 lightDir = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  if (uSpecular)\n    lr.specular = _phongSpecular(lightDir, viewDirection, normal, uShininess);\n  lr.diffuse = _lambertDiffuse(lightDir, normal);\n  return lr;\n}\n\nvoid totalLight(\n  vec3 modelPosition,\n  vec3 normal,\n  out vec3 totalDiffuse,\n  out vec3 totalSpecular\n) {\n\n  totalSpecular = vec3(0.0);\n\n  if (!uUseLighting) {\n    totalDiffuse = vec3(1.0);\n    return;\n  }\n\n  totalDiffuse = vec3(0.0);\n\n  vec3 viewDirection = normalize(-modelPosition);\n\n  for (int j = 0; j < 5; j++) {\n    if (j < uDirectionalLightCount) {\n      vec3 lightVector = (uViewMatrix * vec4(uLightingDirection[j], 0.0)).xyz;\n      vec3 lightColor = uDirectionalDiffuseColors[j];\n      vec3 specularColor = uDirectionalSpecularColors[j];\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if (j < uPointLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      //calculate attenuation\n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n      vec3 lightColor = lightFalloff * uPointLightDiffuseColors[j];\n      vec3 specularColor = lightFalloff * uPointLightSpecularColors[j];\n\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if(j < uSpotLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uSpotLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n\n      vec3 lightDirection = (uViewMatrix * vec4(uSpotLightDirection[j], 0.0)).xyz;\n      float spotDot = dot(normalize(lightVector), normalize(lightDirection));\n      float spotFalloff;\n      if(spotDot < uSpotLightAngle[j]) {\n        spotFalloff = 0.0;\n      }\n      else {\n        spotFalloff = pow(spotDot, uSpotLightConc[j]);\n      }\n      lightFalloff *= spotFalloff;\n\n      vec3 lightColor = uSpotLightDiffuseColors[j];\n      vec3 specularColor = uSpotLightSpecularColors[j];\n     \n      LightResult result = _light(viewDirection, normal, lightVector);\n      \n      totalDiffuse += result.diffuse * lightColor * lightFalloff;\n      totalSpecular += result.specular * lightColor * specularColor * lightFalloff;\n    }\n  }\n\n  totalDiffuse *= diffuseFactor;\n  totalSpecular *= specularFactor;\n}\n"), _ = "#ifdef WEBGL2\n\n#define IN in\n#define OUT out\n\n#ifdef FRAGMENT_SHADER\nout vec4 outColor;\n#define OUT_COLOR outColor\n#endif\n#define TEXTURE texture\n\n#else\n\n#ifdef FRAGMENT_SHADER\n#define IN varying\n#else\n#define IN attribute\n#endif\n#define OUT varying\n#define TEXTURE texture2D\n\n#ifdef FRAGMENT_SHADER\n#define OUT_COLOR gl_FragColor\n#endif\n\n#endif\n", x = {
                    immediateVert: "attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nvarying vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n",
                    vertexColorVert: "attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n}\n",
                    vertexColorFrag: "precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vec4(vColor.rgb, 1.) * vColor.a;\n}\n",
                    normalVert: "attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nuniform vec4 uMaterialColor;\nuniform bool uUseVertexColor;\n\nvarying vec3 vVertexNormal;\nvarying highp vec2 vVertTexCoord;\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertTexCoord = aTexCoord;\n  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);\n}\n",
                    normalFrag: "precision mediump float;\nvarying vec3 vVertexNormal;\nvoid main(void) {\n  gl_FragColor = vec4(vVertexNormal, 1.0);\n}",
                    basicFrag: "precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vec4(vColor.rgb, 1.) * vColor.a;\n}\n",
                    lightVert: e1 + "// include lighting.glgl\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nuniform bool uUseVertexColor;\nuniform vec4 uMaterialColor;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\nvarying vec4 vColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * viewModelPosition;\n\n  vec3 vertexNormal = normalize(uNormalMatrix * aNormal);\n  vVertTexCoord = aTexCoord;\n\n  totalLight(viewModelPosition.xyz, vertexNormal, vDiffuseColor, vSpecularColor);\n\n  for (int i = 0; i < 8; i++) {\n    if (i < uAmbientLightCount) {\n      vDiffuseColor += uAmbientColor[i];\n    }\n  }\n  \n  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);\n}\n",
                    lightTextureFrag: "precision highp float;\n\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\nvarying vec4 vColor;\n\nvoid main(void) {\n  if(uEmissive && !isTexture) {\n    gl_FragColor = vColor;\n  }\n  else {\n    vec4 baseColor = isTexture\n      // Textures come in with premultiplied alpha. To apply tint and still have\n      // premultiplied alpha output, we need to multiply the RGB channels by the\n      // tint RGB, and all channels by the tint alpha.\n      ? texture2D(uSampler, vVertTexCoord) * vec4(uTint.rgb/255., 1.) * (uTint.a/255.)\n      // Colors come in with unmultiplied alpha, so we need to multiply the RGB\n      // channels by alpha to convert it to premultiplied alpha.\n      : vec4(vColor.rgb * vColor.a, vColor.a);\n    gl_FragColor = vec4(baseColor.rgb * vDiffuseColor + vSpecularColor, baseColor.a);\n  }\n}\n",
                    phongVert: "precision highp float;\nprecision highp int;\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\nattribute vec4 aVertexColor;\n\nuniform vec3 uAmbientColor[5];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nuniform bool uUseVertexColor;\nuniform vec4 uMaterialColor;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\nvarying vec4 vColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = uNormalMatrix * aNormal;\n  vTexCoord = aTexCoord;\n\n  // TODO: this should be a uniform\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 5; i++) {\n    if (i < uAmbientLightCount) {\n      vAmbientColor += uAmbientColor[i];\n    }\n  }\n  \n  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);\n}\n",
                    phongFrag: e1 + "// include lighting.glsl\nprecision highp float;\nprecision highp int;\n\nuniform bool uHasSetAmbient;\nuniform vec4 uSpecularMatColor;\nuniform vec4 uAmbientMatColor;\nuniform vec4 uEmissiveMatColor;\n\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\nvarying vec4 vColor;\n\nvoid main(void) {\n\n  vec3 diffuse;\n  vec3 specular;\n  totalLight(vViewPosition, normalize(vNormal), diffuse, specular);\n\n  // Calculating final color as result of all lights (plus emissive term).\n\n  vec4 baseColor = isTexture\n    // Textures come in with premultiplied alpha. To apply tint and still have\n    // premultiplied alpha output, we need to multiply the RGB channels by the\n    // tint RGB, and all channels by the tint alpha.\n    ? texture2D(uSampler, vTexCoord) * vec4(uTint.rgb/255., 1.) * (uTint.a/255.)\n    // Colors come in with unmultiplied alpha, so we need to multiply the RGB\n    // channels by alpha to convert it to premultiplied alpha.\n    : vec4(vColor.rgb * vColor.a, vColor.a);\n  gl_FragColor = vec4(diffuse * baseColor.rgb + \n                    vAmbientColor * (\n                      uHasSetAmbient ? uAmbientMatColor.rgb : baseColor.rgb\n                    ) + \n                    specular * uSpecularMatColor.rgb + \n                    uEmissiveMatColor.rgb, baseColor.a);\n}\n",
                    fontVert: _ + "IN vec3 aPosition;\nIN vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nOUT vec2 vTexCoord;\nOUT float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // Expand glyph bounding boxes by 1px on each side to give a bit of room\n  // for antialiasing\n  vec2 pixelScale = vec2(\n    1. / uModelViewMatrix[0][0],\n    1. / uModelViewMatrix[1][1]\n  );\n  vec2 offset = pixelScale * normalize(aTexCoord - vec2(0.5, 0.5)) * vec2(1., -1.);\n  vec2 textureOffset = offset * (1. / vec2(\n    uGlyphRect.z - uGlyphRect.x,\n    uGlyphRect.w - uGlyphRect.y\n  ));\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n\n  positionVec4.xy += offset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord + textureOffset;\n  w = gl_Position.w;\n}\n",
                    fontFrag: _ + "#ifndef WEBGL2\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n#if 0\n  // simulate integer math using floats\n	#define int float\n	#define ivec2 vec2\n	#define INT(x) float(x)\n\n	int ifloor(float v) { return floor(v); }\n	ivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n	precision highp int;\n	#define INT(x) x\n\n	int ifloor(float v) { return int(v); }\n	int ifloor(int v) { return v; }\n	ivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nIN vec2 vTexCoord;\n\n// some helper functions\nint ROUND(float v) { return ifloor(v + 0.5); }\nivec2 ROUND(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = ROUND(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return TEXTURE(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  OUT_COLOR = vec4(uMaterialColor.rgb, 1.) * uMaterialColor.a;\n  OUT_COLOR *= saturate(max(antialias, cover));\n}\n",
                    lineVert: j + "/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nprecision mediump float;\nprecision mediump int;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform bool uUseLineColor;\nuniform vec4 uMaterialColor;\n\nuniform vec4 uViewport;\nuniform int uPerspective;\nuniform int uStrokeJoin;\n\nattribute vec4 aPosition;\nattribute vec3 aTangentIn;\nattribute vec3 aTangentOut;\nattribute float aSide;\nattribute vec4 aVertexColor;\n\nvarying vec4 vColor;\nvarying vec2 vTangent;\nvarying vec2 vCenter;\nvarying vec2 vPosition;\nvarying float vMaxDist;\nvarying float vCap;\nvarying float vJoin;\n\nvec2 lineIntersection(vec2 aPoint, vec2 aDir, vec2 bPoint, vec2 bDir) {\n  // Rotate and translate so a starts at the origin and goes out to the right\n  bPoint -= aPoint;\n  vec2 rotatedBFrom = vec2(\n    bPoint.x*aDir.x + bPoint.y*aDir.y,\n    bPoint.y*aDir.x - bPoint.x*aDir.y\n  );\n  vec2 bTo = bPoint + bDir;\n  vec2 rotatedBTo = vec2(\n    bTo.x*aDir.x + bTo.y*aDir.y,\n    bTo.y*aDir.x - bTo.x*aDir.y\n  );\n  float intersectionDistance =\n    rotatedBTo.x + (rotatedBFrom.x - rotatedBTo.x) * rotatedBTo.y /\n    (rotatedBTo.y - rotatedBFrom.y);\n  return aPoint + aDir * intersectionDistance;\n}\n\nvoid main() {\n  // Caps have one of either the in or out tangent set to 0\n  vCap = (aTangentIn == vec3(0.)) != (aTangentOut == (vec3(0.)))\n    ? 1. : 0.;\n\n  // Joins have two unique, defined tangents\n  vJoin = (\n    aTangentIn != vec3(0.) &&\n    aTangentOut != vec3(0.) &&\n    aTangentIn != aTangentOut\n  ) ? 1. : 0.;\n\n  vec4 posp = uModelViewMatrix * aPosition;\n  vec4 posqIn = uModelViewMatrix * (aPosition + vec4(aTangentIn, 0));\n  vec4 posqOut = uModelViewMatrix * (aPosition + vec4(aTangentOut, 0));\n\n  float facingCamera = pow(\n    // The word space tangent's z value is 0 if it's facing the camera\n    abs(normalize(posqIn-posp).z),\n\n    // Using pow() here to ramp `facingCamera` up from 0 to 1 really quickly\n    // so most lines get scaled and don't get clipped\n    0.25\n  );\n\n  // using a scale <1 moves the lines towards the camera\n  // in order to prevent popping effects due to half of\n  // the line disappearing behind the geometry faces.\n  float scale = mix(1., 0.995, facingCamera);\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  posp.xyz = posp.xyz * scale;\n  posqIn.xyz = posqIn.xyz * scale;\n  posqOut.xyz = posqOut.xyz * scale;\n\n  vec4 p = uProjectionMatrix * posp;\n  vec4 qIn = uProjectionMatrix * posqIn;\n  vec4 qOut = uProjectionMatrix * posqOut;\n  vCenter = p.xy;\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangentIn = normalize((qIn.xy*p.w - p.xy*qIn.w) * uViewport.zw);\n  vec2 tangentOut = normalize((qOut.xy*p.w - p.xy*qOut.w) * uViewport.zw);\n\n  vec2 curPerspScale;\n  if(uPerspective == 1) {\n    // Perspective ---\n    // convert from world to clip by multiplying with projection scaling factor\n    // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n    // invert Y, projections in Processing invert Y\n    curPerspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;\n  } else {\n    // No Perspective ---\n    // multiply by W (to cancel out division by W later in the pipeline) and\n    // convert from screen to clip (derived from clip to screen above)\n    curPerspScale = p.w / (0.5 * uViewport.zw);\n  }\n\n  vec2 offset;\n  if (vJoin == 1.) {\n    vTangent = normalize(tangentIn + tangentOut);\n    vec2 normalIn = vec2(-tangentIn.y, tangentIn.x);\n    vec2 normalOut = vec2(-tangentOut.y, tangentOut.x);\n    float side = sign(aSide);\n    float sideEnum = abs(aSide);\n\n    // We generate vertices for joins on either side of the centerline, but\n    // the \"elbow\" side is the only one needing a join. By not setting the\n    // offset for the other side, all its vertices will end up in the same\n    // spot and not render, effectively discarding it.\n    if (sign(dot(tangentOut, vec2(-tangentIn.y, tangentIn.x))) != side) {\n      // Side enums:\n      //   1: the side going into the join\n      //   2: the middle of the join\n      //   3: the side going out of the join\n      if (sideEnum == 2.) {\n        // Calculate the position + tangent on either side of the join, and\n        // find where the lines intersect to find the elbow of the join\n        vec2 c = (posp.xy/posp.w + vec2(1.,1.)) * 0.5 * uViewport.zw;\n        vec2 intersection = lineIntersection(\n          c + (side * normalIn * uStrokeWeight / 2.) * curPerspScale,\n          tangentIn,\n          c + (side * normalOut * uStrokeWeight / 2.) * curPerspScale,\n          tangentOut\n        );\n        offset = (intersection - c);\n\n        // When lines are thick and the angle of the join approaches 180, the\n        // elbow might be really far from the center. We'll apply a limit to\n        // the magnitude to avoid lines going across the whole screen when this\n        // happens.\n        float mag = length(offset);\n        float maxMag = 3. * uStrokeWeight;\n        if (mag > maxMag) {\n          offset *= maxMag / mag;\n        }\n      } else if (sideEnum == 1.) {\n        offset = side * normalIn * curPerspScale * uStrokeWeight / 2.;\n      } else if (sideEnum == 3.) {\n        offset = side * normalOut * curPerspScale * uStrokeWeight / 2.;\n      }\n    }\n    if (uStrokeJoin == STROKE_JOIN_BEVEL) {\n      vec2 avgNormal = vec2(-vTangent.y, vTangent.x);\n      vMaxDist = abs(dot(avgNormal, normalIn * uStrokeWeight / 2.));\n    } else {\n      vMaxDist = uStrokeWeight / 2.;\n    }\n  } else {\n    vec2 tangent = aTangentIn == vec3(0.) ? tangentOut : tangentIn;\n    vTangent = tangent;\n    vec2 normal = vec2(-tangent.y, tangent.x);\n\n    float normalOffset = sign(aSide);\n    // Caps will have side values of -2 or 2 on the edge of the cap that\n    // extends out from the line\n    float tangentOffset = abs(aSide) - 1.;\n    offset = (normal * normalOffset + tangent * tangentOffset) *\n      uStrokeWeight * 0.5 * curPerspScale;\n    vMaxDist = uStrokeWeight / 2.;\n  }\n  vPosition = vCenter + offset / curPerspScale;\n\n  gl_Position.xy = p.xy + offset.xy;\n  gl_Position.zw = p.zw;\n  \n  vColor = (uUseLineColor ? aVertexColor : uMaterialColor);\n}\n",
                    lineFrag: j + "precision mediump float;\nprecision mediump int;\n\nuniform vec4 uMaterialColor;\nuniform int uStrokeCap;\nuniform int uStrokeJoin;\nuniform float uStrokeWeight;\n\nvarying vec4 vColor;\nvarying vec2 vTangent;\nvarying vec2 vCenter;\nvarying vec2 vPosition;\nvarying float vMaxDist;\nvarying float vCap;\nvarying float vJoin;\n\nfloat distSquared(vec2 a, vec2 b) {\n  vec2 aToB = b - a;\n  return dot(aToB, aToB);\n}\n\nvoid main() {\n  if (vCap > 0.) {\n    if (\n      uStrokeCap == STROKE_CAP_ROUND &&\n      distSquared(vPosition, vCenter) > uStrokeWeight * uStrokeWeight * 0.25\n    ) {\n      discard;\n    } else if (\n      uStrokeCap == STROKE_CAP_SQUARE &&\n      dot(vPosition - vCenter, vTangent) > 0.\n    ) {\n      discard;\n    }\n    // Use full area for PROJECT\n  } else if (vJoin > 0.) {\n    if (\n      uStrokeJoin == STROKE_JOIN_ROUND &&\n      distSquared(vPosition, vCenter) > uStrokeWeight * uStrokeWeight * 0.25\n    ) {\n      discard;\n    } else if (uStrokeJoin == STROKE_JOIN_BEVEL) {\n      vec2 normal = vec2(-vTangent.y, vTangent.x);\n      if (abs(dot(vPosition - vCenter, normal)) > vMaxDist) {\n        discard;\n      }\n    }\n    // Use full area for MITER\n  }\n  gl_FragColor = vec4(vColor.rgb, 1.) * vColor.a;\n}\n",
                    pointVert: "attribute vec3 aPosition;\nuniform float uPointSize;\nvarying float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvoid main() {\n	vec4 positionVec4 =  vec4(aPosition, 1.0);\n	gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n	gl_PointSize = uPointSize;\n	vStrokeWeight = uPointSize;\n}",
                    pointFrag: "precision mediump float;\nprecision mediump int;\nuniform vec4 uMaterialColor;\nvarying float vStrokeWeight;\n\nvoid main(){\n  float mask = 0.0;\n\n  // make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n  // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n  mask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n  // if strokeWeight is 1 or less lets just draw a square\n  // this prevents weird artifacting from carving circles when our points are really small\n  // if strokeWeight is larger than 1, we just use it as is\n\n  mask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n  // throw away the borders of the mask\n  // otherwise we get weird alpha blending issues\n\n  if(mask > 0.98){\n    discard;\n  }\n\n  gl_FragColor = vec4(uMaterialColor.rgb, 1.) * uMaterialColor.a;\n}\n"
                };
                function w(e1, t, r, o, n, s, i, a, l, u) {
                    var c = t.getParameter(t.FRAMEBUFFER_BINDING), r = (t.bindFramebuffer(t.FRAMEBUFFER, r), a === t.RGBA ? 4 : 3), d = s * i * r, f = l === t.UNSIGNED_BYTE ? Uint8Array : Float32Array;
                    if (e1 instanceof f && e1.length === d || (e1 = new f(d)), t.readPixels(o, u ? u - n - i : n, s, i, a, l, e1), t.bindFramebuffer(t.FRAMEBUFFER, c), u) for(var h = Math.floor(i / 2), p = new f(s * r), m = 0; m < h; m++){
                        var y = m * s * 4, g = (i - m - 1) * s * 4;
                        p.set(e1.subarray(y, y + 4 * s)), e1.copyWithin(y, g, g + 4 * s), e1.set(p, g);
                    }
                    return e1;
                }
                function S(e1, t, r, o, n, s, i) {
                    var a = e1.getParameter(e1.FRAMEBUFFER_BINDING), t = (e1.bindFramebuffer(e1.FRAMEBUFFER, t), n === e1.RGBA ? 4 : 3), t = new (s === e1.UNSIGNED_BYTE ? Uint8Array : Float32Array)(t);
                    return e1.readPixels(r, i ? i - o - 1 : o, 1, 1, n, s, t), e1.bindFramebuffer(e1.FRAMEBUFFER, a), Array.from(t);
                }
                g.default.prototype.setAttributes = function(e1, t) {
                    if (void 0 === this._glAttributes) console.log("You are trying to use setAttributes on a p5.Graphics object that does not use a WEBGL renderer.");
                    else {
                        var r = !0;
                        if (void 0 !== t ? (null === this._glAttributes && (this._glAttributes = {}), this._glAttributes[e1] !== t && (this._glAttributes[e1] = t, r = !1)) : e1 instanceof Object && this._glAttributes !== e1 && (this._glAttributes = e1, r = !1), this._renderer.isP3D && !r) {
                            if (!this._setupDone) {
                                for(var o in this._renderer.retainedMode.geometry)if (this._renderer.retainedMode.geometry.hasOwnProperty(o)) return void g.default._friendlyError("Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()");
                            }
                            this.push(), this._renderer._resetContext(), this.pop(), this._renderer._curCamera && (this._renderer._curCamera._renderer = this._renderer);
                        }
                    }
                }, g.default.RendererGL = function(e1) {
                    var t = s;
                    if ("function" != typeof e1 && null !== e1) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e1 && e1.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e1 && f(t, e1);
                    var r, n = h(s);
                    function s(e1, t, r, o) {
                        if (this instanceof s) return (e1 = n.call(this, e1, t, r))._setAttributeDefaults(t), e1._initContext(), e1.isP3D = !0, e1.GL = e1.drawingContext, e1._pInst._setProperty("drawingContext", e1.drawingContext), e1._isErasing = !1, e1._enableLighting = !1, e1.ambientLightColors = [], e1.specularColors = [
                            1,
                            1,
                            1
                        ], e1.directionalLightDirections = [], e1.directionalLightDiffuseColors = [], e1.directionalLightSpecularColors = [], e1.pointLightPositions = [], e1.pointLightDiffuseColors = [], e1.pointLightSpecularColors = [], e1.spotLightPositions = [], e1.spotLightDirections = [], e1.spotLightDiffuseColors = [], e1.spotLightSpecularColors = [], e1.spotLightAngle = [], e1.spotLightConc = [], e1.drawMode = i.FILL, e1.curFillColor = e1._cachedFillStyle = [
                            1,
                            1,
                            1,
                            1
                        ], e1.curAmbientColor = e1._cachedFillStyle = [
                            1,
                            1,
                            1,
                            1
                        ], e1.curSpecularColor = e1._cachedFillStyle = [
                            0,
                            0,
                            0,
                            0
                        ], e1.curEmissiveColor = e1._cachedFillStyle = [
                            0,
                            0,
                            0,
                            0
                        ], e1.curStrokeColor = e1._cachedStrokeStyle = [
                            0,
                            0,
                            0,
                            1
                        ], e1.curBlendMode = i.BLEND, e1._cachedBlendMode = void 0, e1.webglVersion === i.WEBGL2 ? e1.blendExt = e1.GL : e1.blendExt = e1.GL.getExtension("EXT_blend_minmax"), e1._isBlending = !1, e1._hasSetAmbient = !1, e1._useSpecularMaterial = !1, e1._useEmissiveMaterial = !1, e1._useNormalMaterial = !1, e1._useShininess = 1, e1._useLineColor = !1, e1._useVertexColor = !1, e1.registerEnabled = [], e1._tint = [
                            255,
                            255,
                            255,
                            255
                        ], e1.constantAttenuation = 1, e1.linearAttenuation = 0, e1.quadraticAttenuation = 0, e1.uMVMatrix = new g.default.Matrix, e1.uPMatrix = new g.default.Matrix, e1.uNMatrix = new g.default.Matrix("mat3"), e1._currentNormal = new g.default.Vector(0, 0, 1), e1._curCamera = new g.default.Camera(p(e1)), e1._curCamera._computeCameraDefaultSettings(), e1._curCamera._setDefaultCamera(), e1.prevTouches = [], e1.zoomVelocity = 0, e1.rotateVelocity = new g.default.Vector(0, 0), e1.moveVelocity = new g.default.Vector(0, 0), e1.executeZoom = !1, e1.executeRotateAndMove = !1, e1._defaultLightShader = void 0, e1._defaultImmediateModeShader = void 0, e1._defaultNormalShader = void 0, e1._defaultColorShader = void 0, e1._defaultPointShader = void 0, e1.userFillShader = void 0, e1.userStrokeShader = void 0, e1.userPointShader = void 0, e1.retainedMode = {
                            geometry: {},
                            buffers: {
                                stroke: [
                                    new g.default.RenderBuffer(4, "lineVertexColors", "lineColorBuffer", "aVertexColor", p(e1), e1._flatten),
                                    new g.default.RenderBuffer(3, "lineVertices", "lineVerticesBuffer", "aPosition", p(e1), e1._flatten),
                                    new g.default.RenderBuffer(3, "lineTangentsIn", "lineTangentsInBuffer", "aTangentIn", p(e1), e1._flatten),
                                    new g.default.RenderBuffer(3, "lineTangentsOut", "lineTangentsOutBuffer", "aTangentOut", p(e1), e1._flatten),
                                    new g.default.RenderBuffer(1, "lineSides", "lineSidesBuffer", "aSide", p(e1))
                                ],
                                fill: [
                                    new g.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", p(e1), e1._vToNArray),
                                    new g.default.RenderBuffer(3, "vertexNormals", "normalBuffer", "aNormal", p(e1), e1._vToNArray),
                                    new g.default.RenderBuffer(4, "vertexColors", "colorBuffer", "aVertexColor", p(e1)),
                                    new g.default.RenderBuffer(3, "vertexAmbients", "ambientBuffer", "aAmbientColor", p(e1)),
                                    new g.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", p(e1), e1._flatten)
                                ],
                                text: [
                                    new g.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", p(e1), e1._vToNArray),
                                    new g.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", p(e1), e1._flatten)
                                ]
                            }
                        }, e1.immediateMode = {
                            geometry: new g.default.Geometry,
                            shapeMode: i.TRIANGLE_FAN,
                            _bezierVertex: [],
                            _quadraticVertex: [],
                            _curveVertex: [],
                            buffers: {
                                fill: [
                                    new g.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", p(e1), e1._vToNArray),
                                    new g.default.RenderBuffer(3, "vertexNormals", "normalBuffer", "aNormal", p(e1), e1._vToNArray),
                                    new g.default.RenderBuffer(4, "vertexColors", "colorBuffer", "aVertexColor", p(e1)),
                                    new g.default.RenderBuffer(3, "vertexAmbients", "ambientBuffer", "aAmbientColor", p(e1)),
                                    new g.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", p(e1), e1._flatten)
                                ],
                                stroke: [
                                    new g.default.RenderBuffer(4, "lineVertexColors", "lineColorBuffer", "aVertexColor", p(e1), e1._flatten),
                                    new g.default.RenderBuffer(3, "lineVertices", "lineVerticesBuffer", "aPosition", p(e1), e1._flatten),
                                    new g.default.RenderBuffer(3, "lineTangentsIn", "lineTangentsInBuffer", "aTangentIn", p(e1), e1._flatten),
                                    new g.default.RenderBuffer(3, "lineTangentsOut", "lineTangentsOutBuffer", "aTangentOut", p(e1), e1._flatten),
                                    new g.default.RenderBuffer(1, "lineSides", "lineSidesBuffer", "aSide", p(e1))
                                ],
                                point: e1.GL.createBuffer()
                            }
                        }, e1.pointSize = 5, e1.curStrokeWeight = 1, e1.curStrokeCap = i.ROUND, e1.curStrokeJoin = i.ROUND, e1.textures = new Map, e1.framebuffers = new Set, e1.textureMode = i.IMAGE, e1.textureWrapX = i.CLAMP, e1.textureWrapY = i.CLAMP, e1._tex = null, e1._curveTightness = 6, e1._lookUpTableBezier = [], e1._lookUpTableQuadratic = [], e1._lutBezierDetail = 0, e1._lutQuadraticDetail = 0, e1.isProcessingVertices = !1, e1._tessy = e1._initTessy(), e1.fontInfos = {}, e1._curShader = void 0, e1;
                        throw new TypeError("Cannot call a class as a function");
                    }
                    return t = s, e1 = [
                        {
                            key: "_setAttributeDefaults",
                            value: function(e1) {
                                var t = {
                                    alpha: !0,
                                    depth: !0,
                                    stencil: !0,
                                    antialias: navigator.userAgent.toLowerCase().includes("safari"),
                                    premultipliedAlpha: !0,
                                    preserveDrawingBuffer: !0,
                                    perPixelLighting: !0,
                                    version: 2
                                };
                                null === e1._glAttributes ? e1._glAttributes = t : e1._glAttributes = Object.assign(t, e1._glAttributes);
                            }
                        },
                        {
                            key: "_initContext",
                            value: function() {
                                if (1 !== this._pInst._glAttributes.version && (this.drawingContext = this.canvas.getContext("webgl2", this._pInst._glAttributes)), this.webglVersion = this.drawingContext ? i.WEBGL2 : i.WEBGL, this._pInst._setProperty("webglVersion", this.webglVersion), this.drawingContext || (this.drawingContext = this.canvas.getContext("webgl", this._pInst._glAttributes) || this.canvas.getContext("experimental-webgl", this._pInst._glAttributes)), null === this.drawingContext) throw new Error("Error creating webgl context");
                                var e1 = this.drawingContext;
                                e1.enable(e1.DEPTH_TEST), e1.depthFunc(e1.LEQUAL), e1.viewport(0, 0, e1.drawingBufferWidth, e1.drawingBufferHeight), e1.pixelStorei(e1.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !0), this._viewport = this.drawingContext.getParameter(this.drawingContext.VIEWPORT);
                            }
                        },
                        {
                            key: "_resetContext",
                            value: function(e1, t) {
                                var r, o = this.width, n = this.height, s = this.canvas.id, i = this._pInst instanceof g.default.Graphics, s = (i ? ((r = this._pInst).canvas.parentNode.removeChild(r.canvas), r.canvas = document.createElement("canvas"), (r._pInst._userNode || document.body).appendChild(r.canvas), g.default.Element.call(r, r.canvas, r._pInst), r.width = o, r.height = n) : ((r = this.canvas) && r.parentNode.removeChild(r), (r = document.createElement("canvas")).id = s, (this._pInst._userNode || document.body).appendChild(r), this._pInst.canvas = r, this.canvas = r), new g.default.RendererGL(this._pInst.canvas, this._pInst, !i));
                                this._pInst._setProperty("_renderer", s), s.resize(o, n), s._applyDefaults(), i || this._pInst._elements.push(s), "function" == typeof t && setTimeout(function() {
                                    t.apply(window._renderer, e1);
                                }, 0);
                            }
                        },
                        {
                            key: "_update",
                            value: function() {
                                this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0], this._curCamera.cameraMatrix.mat4[1], this._curCamera.cameraMatrix.mat4[2], this._curCamera.cameraMatrix.mat4[3], this._curCamera.cameraMatrix.mat4[4], this._curCamera.cameraMatrix.mat4[5], this._curCamera.cameraMatrix.mat4[6], this._curCamera.cameraMatrix.mat4[7], this._curCamera.cameraMatrix.mat4[8], this._curCamera.cameraMatrix.mat4[9], this._curCamera.cameraMatrix.mat4[10], this._curCamera.cameraMatrix.mat4[11], this._curCamera.cameraMatrix.mat4[12], this._curCamera.cameraMatrix.mat4[13], this._curCamera.cameraMatrix.mat4[14], this._curCamera.cameraMatrix.mat4[15]), this.ambientLightColors.length = 0, this.specularColors = [
                                    1,
                                    1,
                                    1
                                ], this.directionalLightDirections.length = 0, this.directionalLightDiffuseColors.length = 0, this.directionalLightSpecularColors.length = 0, this.pointLightPositions.length = 0, this.pointLightDiffuseColors.length = 0, this.pointLightSpecularColors.length = 0, this.spotLightPositions.length = 0, this.spotLightDirections.length = 0, this.spotLightDiffuseColors.length = 0, this.spotLightSpecularColors.length = 0, this.spotLightAngle.length = 0, this.spotLightConc.length = 0, this._enableLighting = !1, this._tint = [
                                    255,
                                    255,
                                    255,
                                    255
                                ], this.GL.clear(this.GL.DEPTH_BUFFER_BIT);
                            }
                        },
                        {
                            key: "background",
                            value: function() {
                                var e1 = (e1 = this._pInst).color.apply(e1, arguments), t = e1.levels[0] / 255, r = e1.levels[1] / 255, o = e1.levels[2] / 255, e1 = e1.levels[3] / 255;
                                this.clear(t, r, o, e1);
                            }
                        },
                        {
                            key: "fill",
                            value: function(e1, t, r, o) {
                                var n = g.default.prototype.color.apply(this._pInst, arguments);
                                this.curFillColor = n._array, this.drawMode = i.FILL, this._useNormalMaterial = !1, this._tex = null;
                            }
                        },
                        {
                            key: "stroke",
                            value: function(e1, t, r, o) {
                                var n = g.default.prototype.color.apply(this._pInst, arguments);
                                this.curStrokeColor = n._array;
                            }
                        },
                        {
                            key: "strokeCap",
                            value: function(e1) {
                                this.curStrokeCap = e1;
                            }
                        },
                        {
                            key: "strokeJoin",
                            value: function(e1) {
                                this.curStrokeJoin = e1;
                            }
                        },
                        {
                            key: "filter",
                            value: function(e1) {
                                g.default._friendlyError("filter() does not work in WEBGL mode");
                            }
                        },
                        {
                            key: "blendMode",
                            value: function(e1) {
                                e1 === i.DARKEST || e1 === i.LIGHTEST || e1 === i.ADD || e1 === i.BLEND || e1 === i.SUBTRACT || e1 === i.SCREEN || e1 === i.EXCLUSION || e1 === i.REPLACE || e1 === i.MULTIPLY || e1 === i.REMOVE ? this.curBlendMode = e1 : e1 !== i.BURN && e1 !== i.OVERLAY && e1 !== i.HARD_LIGHT && e1 !== i.SOFT_LIGHT && e1 !== i.DODGE || console.warn("BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.");
                            }
                        },
                        {
                            key: "erase",
                            value: function(e1, t) {
                                this._isErasing || (this._applyBlendMode(i.REMOVE), this._isErasing = !0, this._cachedFillStyle = this.curFillColor.slice(), this.curFillColor = [
                                    1,
                                    1,
                                    1,
                                    e1 / 255
                                ], this._cachedStrokeStyle = this.curStrokeColor.slice(), this.curStrokeColor = [
                                    1,
                                    1,
                                    1,
                                    t / 255
                                ]);
                            }
                        },
                        {
                            key: "noErase",
                            value: function() {
                                this._isErasing && (this._isErasing = !1, this.curFillColor = this._cachedFillStyle.slice(), this.curStrokeColor = this._cachedStrokeStyle.slice(), this.blendMode(this._cachedBlendMode));
                            }
                        },
                        {
                            key: "strokeWeight",
                            value: function(e1) {
                                this.curStrokeWeight !== e1 && (this.pointSize = e1, this.curStrokeWeight = e1);
                            }
                        },
                        {
                            key: "_getPixel",
                            value: function(e1, t) {
                                var r = this.GL;
                                return S(r, null, e1, t, r.RGBA, r.UNSIGNED_BYTE, this._pInst.height * this._pInst.pixelDensity());
                            }
                        },
                        {
                            key: "loadPixels",
                            value: function() {
                                var e1, t, r = this._pixelsState;
                                !0 !== this._pInst._glAttributes.preserveDrawingBuffer ? console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.") : (e1 = this._pInst._pixelDensity, t = this.GL, r._setProperty("pixels", w(r.pixels, t, null, 0, 0, this.width * e1, this.height * e1, t.RGBA, t.UNSIGNED_BYTE, this.height * e1)));
                            }
                        },
                        {
                            key: "updatePixels",
                            value: function() {
                                var e1 = this._getTempFramebuffer();
                                e1.pixels = this._pixelsState.pixels, e1.updatePixels(), this._pInst.push(), this._pInst.resetMatrix(), this._pInst.clear(), this._pInst.imageMode(i.CENTER), this._pInst.image(e1, 0, 0), this._pInst.pop(), this.GL.clearDepth(1), this.GL.clear(this.GL.DEPTH_BUFFER_BIT);
                            }
                        },
                        {
                            key: "_getTempFramebuffer",
                            value: function() {
                                return this._tempFramebuffer || (this._tempFramebuffer = this._pInst.createFramebuffer({
                                    format: i.UNSIGNED_BYTE,
                                    useDepth: this._pInst._glAttributes.depth,
                                    depthFormat: i.UNSIGNED_INT,
                                    antialias: this._pInst._glAttributes.antialias
                                })), this._tempFramebuffer;
                            }
                        },
                        {
                            key: "geometryInHash",
                            value: function(e1) {
                                return void 0 !== this.retainedMode.geometry[e1];
                            }
                        },
                        {
                            key: "resize",
                            value: function(t, r) {
                                g.default.Renderer.prototype.resize.call(this, t, r), this.GL.viewport(0, 0, this.GL.drawingBufferWidth, this.GL.drawingBufferHeight), this._viewport = this.GL.getParameter(this.GL.VIEWPORT), this._curCamera._resize();
                                var t = this._pixelsState, e1 = (void 0 !== t.pixels && t._setProperty("pixels", new Uint8Array(this.GL.drawingBufferWidth * this.GL.drawingBufferHeight * 4)), !0), r = !1, t = void 0;
                                try {
                                    for(var o, n = this.framebuffers[Symbol.iterator](); !(e1 = (o = n.next()).done); e1 = !0)o.value._canvasSizeChanged();
                                } catch (e1) {
                                    r = !0, t = e1;
                                } finally{
                                    try {
                                        e1 || null == n.return || n.return();
                                    } finally{
                                        if (r) throw t;
                                    }
                                }
                            }
                        },
                        {
                            key: "clear",
                            value: function() {
                                var e1 = (arguments.length <= 0 ? void 0 : arguments[0]) || 0, t = (arguments.length <= 1 ? void 0 : arguments[1]) || 0, r = (arguments.length <= 2 ? void 0 : arguments[2]) || 0, o = (arguments.length <= 3 ? void 0 : arguments[3]) || 0;
                                this.GL.clearColor(e1 * o, t * o, r * o, o), this.GL.clearDepth(1), this.GL.clear(this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT);
                            }
                        },
                        {
                            key: "applyMatrix",
                            value: function(e1, t, r, o, n, s) {
                                16 === arguments.length ? g.default.Matrix.prototype.apply.apply(this.uMVMatrix, arguments) : this.uMVMatrix.apply([
                                    e1,
                                    t,
                                    0,
                                    0,
                                    r,
                                    o,
                                    0,
                                    0,
                                    0,
                                    0,
                                    1,
                                    0,
                                    n,
                                    s,
                                    0,
                                    1
                                ]);
                            }
                        },
                        {
                            key: "translate",
                            value: function(e1, t, r) {
                                return e1 instanceof g.default.Vector && (r = e1.z, t = e1.y, e1 = e1.x), this.uMVMatrix.translate([
                                    e1,
                                    t,
                                    r
                                ]), this;
                            }
                        },
                        {
                            key: "scale",
                            value: function(e1, t, r) {
                                return this.uMVMatrix.scale(e1, t, r), this;
                            }
                        },
                        {
                            key: "rotate",
                            value: function(e1, t) {
                                return void 0 === t ? this.rotateZ(e1) : (g.default.Matrix.prototype.rotate.apply(this.uMVMatrix, arguments), this);
                            }
                        },
                        {
                            key: "rotateX",
                            value: function(e1) {
                                return this.rotate(e1, 1, 0, 0), this;
                            }
                        },
                        {
                            key: "rotateY",
                            value: function(e1) {
                                return this.rotate(e1, 0, 1, 0), this;
                            }
                        },
                        {
                            key: "rotateZ",
                            value: function(e1) {
                                return this.rotate(e1, 0, 0, 1), this;
                            }
                        },
                        {
                            key: "push",
                            value: function() {
                                var e1 = g.default.Renderer.prototype.push.apply(this), t = e1.properties;
                                return t.uMVMatrix = this.uMVMatrix.copy(), t.uPMatrix = this.uPMatrix.copy(), t._curCamera = this._curCamera, this._curCamera = this._curCamera.copy(), t.ambientLightColors = this.ambientLightColors.slice(), t.specularColors = this.specularColors.slice(), t.directionalLightDirections = this.directionalLightDirections.slice(), t.directionalLightDiffuseColors = this.directionalLightDiffuseColors.slice(), t.directionalLightSpecularColors = this.directionalLightSpecularColors.slice(), t.pointLightPositions = this.pointLightPositions.slice(), t.pointLightDiffuseColors = this.pointLightDiffuseColors.slice(), t.pointLightSpecularColors = this.pointLightSpecularColors.slice(), t.spotLightPositions = this.spotLightPositions.slice(), t.spotLightDirections = this.spotLightDirections.slice(), t.spotLightDiffuseColors = this.spotLightDiffuseColors.slice(), t.spotLightSpecularColors = this.spotLightSpecularColors.slice(), t.spotLightAngle = this.spotLightAngle.slice(), t.spotLightConc = this.spotLightConc.slice(), t.userFillShader = this.userFillShader, t.userStrokeShader = this.userStrokeShader, t.userPointShader = this.userPointShader, t.pointSize = this.pointSize, t.curStrokeWeight = this.curStrokeWeight, t.curStrokeColor = this.curStrokeColor, t.curFillColor = this.curFillColor, t.curAmbientColor = this.curAmbientColor, t.curSpecularColor = this.curSpecularColor, t.curEmissiveColor = this.curEmissiveColor, t._hasSetAmbient = this._hasSetAmbient, t._useSpecularMaterial = this._useSpecularMaterial, t._useEmissiveMaterial = this._useEmissiveMaterial, t._useShininess = this._useShininess, t.constantAttenuation = this.constantAttenuation, t.linearAttenuation = this.linearAttenuation, t.quadraticAttenuation = this.quadraticAttenuation, t._enableLighting = this._enableLighting, t._useNormalMaterial = this._useNormalMaterial, t._tex = this._tex, t.drawMode = this.drawMode, t._currentNormal = this._currentNormal, t.curBlendMode = this.curBlendMode, e1;
                            }
                        },
                        {
                            key: "resetMatrix",
                            value: function() {
                                return this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0], this._curCamera.cameraMatrix.mat4[1], this._curCamera.cameraMatrix.mat4[2], this._curCamera.cameraMatrix.mat4[3], this._curCamera.cameraMatrix.mat4[4], this._curCamera.cameraMatrix.mat4[5], this._curCamera.cameraMatrix.mat4[6], this._curCamera.cameraMatrix.mat4[7], this._curCamera.cameraMatrix.mat4[8], this._curCamera.cameraMatrix.mat4[9], this._curCamera.cameraMatrix.mat4[10], this._curCamera.cameraMatrix.mat4[11], this._curCamera.cameraMatrix.mat4[12], this._curCamera.cameraMatrix.mat4[13], this._curCamera.cameraMatrix.mat4[14], this._curCamera.cameraMatrix.mat4[15]), this;
                            }
                        },
                        {
                            key: "_getImmediateStrokeShader",
                            value: function() {
                                var e1 = this.userStrokeShader;
                                return e1 && e1.isStrokeShader() ? e1 : this._getLineShader();
                            }
                        },
                        {
                            key: "_getRetainedStrokeShader",
                            value: function() {
                                return this._getImmediateStrokeShader();
                            }
                        },
                        {
                            key: "_getImmediateFillShader",
                            value: function() {
                                var e1 = this.userFillShader;
                                if (this._useNormalMaterial && (!e1 || !e1.isNormalShader())) return this._getNormalShader();
                                if (this._enableLighting) {
                                    if (!e1 || !e1.isLightShader()) return this._getLightShader();
                                } else if (this._tex) {
                                    if (!e1 || !e1.isTextureShader()) return this._getLightShader();
                                } else if (!e1) return this._getImmediateModeShader();
                                return e1;
                            }
                        },
                        {
                            key: "_getRetainedFillShader",
                            value: function() {
                                if (this._useNormalMaterial) return this._getNormalShader();
                                var e1 = this.userFillShader;
                                if (this._enableLighting) {
                                    if (!e1 || !e1.isLightShader()) return this._getLightShader();
                                } else if (this._tex) {
                                    if (!e1 || !e1.isTextureShader()) return this._getLightShader();
                                } else if (!e1) return this._getColorShader();
                                return e1;
                            }
                        },
                        {
                            key: "_getImmediatePointShader",
                            value: function() {
                                var e1 = this.userPointShader;
                                return e1 && e1.isPointShader() ? e1 : this._getPointShader();
                            }
                        },
                        {
                            key: "_getRetainedLineShader",
                            value: function() {
                                return this._getImmediateLineShader();
                            }
                        },
                        {
                            key: "_getLightShader",
                            value: function() {
                                return this._defaultLightShader || (this._pInst._glAttributes.perPixelLighting ? this._defaultLightShader = new g.default.Shader(this, x.phongVert, x.phongFrag) : this._defaultLightShader = new g.default.Shader(this, x.lightVert, x.lightTextureFrag)), this._defaultLightShader;
                            }
                        },
                        {
                            key: "_getImmediateModeShader",
                            value: function() {
                                return this._defaultImmediateModeShader || (this._defaultImmediateModeShader = new g.default.Shader(this, x.immediateVert, x.vertexColorFrag)), this._defaultImmediateModeShader;
                            }
                        },
                        {
                            key: "_getNormalShader",
                            value: function() {
                                return this._defaultNormalShader || (this._defaultNormalShader = new g.default.Shader(this, x.normalVert, x.normalFrag)), this._defaultNormalShader;
                            }
                        },
                        {
                            key: "_getColorShader",
                            value: function() {
                                return this._defaultColorShader || (this._defaultColorShader = new g.default.Shader(this, x.normalVert, x.basicFrag)), this._defaultColorShader;
                            }
                        },
                        {
                            key: "_getPointShader",
                            value: function() {
                                return this._defaultPointShader || (this._defaultPointShader = new g.default.Shader(this, x.pointVert, x.pointFrag)), this._defaultPointShader;
                            }
                        },
                        {
                            key: "_getLineShader",
                            value: function() {
                                return this._defaultLineShader || (this._defaultLineShader = new g.default.Shader(this, x.lineVert, x.lineFrag)), this._defaultLineShader;
                            }
                        },
                        {
                            key: "_getFontShader",
                            value: function() {
                                return this._defaultFontShader || (this.webglVersion === i.WEBGL && this.GL.getExtension("OES_standard_derivatives"), this._defaultFontShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "mediump") + x.fontVert, this._webGL2CompatibilityPrefix("frag", "mediump") + x.fontFrag)), this._defaultFontShader;
                            }
                        },
                        {
                            key: "_webGL2CompatibilityPrefix",
                            value: function(e1, t) {
                                var r = "";
                                return this.webglVersion === i.WEBGL2 && (r += "#version 300 es\n#define WEBGL2\n"), "vert" === e1 ? r += "#define VERTEX_SHADER\n" : "frag" === e1 && (r += "#define FRAGMENT_SHADER\n"), t && (r += "precision ".concat(t, " float;\n")), r;
                            }
                        },
                        {
                            key: "_getEmptyTexture",
                            value: function() {
                                var e1;
                                return this._emptyTexture || ((e1 = new g.default.Image(1, 1)).set(0, 0, 255), this._emptyTexture = new g.default.Texture(this, e1)), this._emptyTexture;
                            }
                        },
                        {
                            key: "getTexture",
                            value: function(e1) {
                                e1 instanceof g.default.Framebuffer && (e1 = e1.color);
                                var t = this.textures.get(e1);
                                return t || (t = new g.default.Texture(this, e1), this.textures.set(e1, t), t);
                            }
                        },
                        {
                            key: "createFramebuffer",
                            value: function(e1) {
                                return new g.default.Framebuffer(this, e1);
                            }
                        },
                        {
                            key: "_setStrokeUniforms",
                            value: function(e1) {
                                e1.bindShader(), e1.setUniform("uUseLineColor", this._useLineColor), e1.setUniform("uMaterialColor", this.curStrokeColor), e1.setUniform("uStrokeWeight", this.curStrokeWeight), e1.setUniform("uStrokeCap", v[this.curStrokeCap]), e1.setUniform("uStrokeJoin", b[this.curStrokeJoin]);
                            }
                        },
                        {
                            key: "_setFillUniforms",
                            value: function(e1) {
                                e1.bindShader(), e1.setUniform("uUseVertexColor", this._useVertexColor), e1.setUniform("uMaterialColor", this.curFillColor), e1.setUniform("isTexture", !!this._tex), this._tex && e1.setUniform("uSampler", this._tex), e1.setUniform("uTint", this._tint), e1.setUniform("uHasSetAmbient", this._hasSetAmbient), e1.setUniform("uAmbientMatColor", this.curAmbientColor), e1.setUniform("uSpecularMatColor", this.curSpecularColor), e1.setUniform("uEmissiveMatColor", this.curEmissiveColor), e1.setUniform("uSpecular", this._useSpecularMaterial), e1.setUniform("uEmissive", this._useEmissiveMaterial), e1.setUniform("uShininess", this._useShininess), e1.setUniform("uUseLighting", this._enableLighting);
                                var t = this.pointLightDiffuseColors.length / 3, t = (e1.setUniform("uPointLightCount", t), e1.setUniform("uPointLightLocation", this.pointLightPositions), e1.setUniform("uPointLightDiffuseColors", this.pointLightDiffuseColors), e1.setUniform("uPointLightSpecularColors", this.pointLightSpecularColors), this.directionalLightDiffuseColors.length / 3), t = (e1.setUniform("uDirectionalLightCount", t), e1.setUniform("uLightingDirection", this.directionalLightDirections), e1.setUniform("uDirectionalDiffuseColors", this.directionalLightDiffuseColors), e1.setUniform("uDirectionalSpecularColors", this.directionalLightSpecularColors), this.ambientLightColors.length / 3), t = (e1.setUniform("uAmbientLightCount", t), e1.setUniform("uAmbientColor", this.ambientLightColors), this.spotLightDiffuseColors.length / 3);
                                e1.setUniform("uSpotLightCount", t), e1.setUniform("uSpotLightAngle", this.spotLightAngle), e1.setUniform("uSpotLightConc", this.spotLightConc), e1.setUniform("uSpotLightDiffuseColors", this.spotLightDiffuseColors), e1.setUniform("uSpotLightSpecularColors", this.spotLightSpecularColors), e1.setUniform("uSpotLightLocation", this.spotLightPositions), e1.setUniform("uSpotLightDirection", this.spotLightDirections), e1.setUniform("uConstantAttenuation", this.constantAttenuation), e1.setUniform("uLinearAttenuation", this.linearAttenuation), e1.setUniform("uQuadraticAttenuation", this.quadraticAttenuation), e1.bindTextures();
                            }
                        },
                        {
                            key: "_setPointUniforms",
                            value: function(e1) {
                                e1.bindShader(), e1.setUniform("uMaterialColor", this.curStrokeColor), e1.setUniform("uPointSize", this.pointSize * this._pInst._pixelDensity);
                            }
                        },
                        {
                            key: "_bindBuffer",
                            value: function(e1, t, r, o, n) {
                                t = t || this.GL.ARRAY_BUFFER, this.GL.bindBuffer(t, e1), void 0 !== r && (e1 = new (o || Float32Array)(r), this.GL.bufferData(t, e1, n || this.GL.STATIC_DRAW));
                            }
                        },
                        {
                            key: "_arraysEqual",
                            value: function(e1, r) {
                                return e1.length === r.length && e1.every(function(e1, t) {
                                    return e1 === r[t];
                                });
                            }
                        },
                        {
                            key: "_isTypedArray",
                            value: function(t) {
                                return [
                                    Float32Array,
                                    Float64Array,
                                    Int16Array,
                                    Uint16Array,
                                    Uint32Array
                                ].some(function(e1) {
                                    return t instanceof e1;
                                });
                            }
                        },
                        {
                            key: "_flatten",
                            value: function(e1) {
                                if (0 === e1.length) return [];
                                var t;
                                if (2e4 < e1.length) {
                                    for(var r = [], o = e1.slice(), n = o.pop(); Array.isArray(n) ? o.push.apply(o, c(n)) : r.push(n), o.length && void 0 !== (n = o.pop()););
                                    return r.reverse(), r;
                                }
                                return (t = []).concat.apply(t, c(e1));
                            }
                        },
                        {
                            key: "_vToNArray",
                            value: function(e1) {
                                var t = [], r = !0, o = !1, n = void 0;
                                try {
                                    for(var s, i = e1[Symbol.iterator](); !(r = (s = i.next()).done); r = !0){
                                        var a = s.value;
                                        t.push(a.x, a.y, a.z);
                                    }
                                } catch (e1) {
                                    o = !0, n = e1;
                                } finally{
                                    try {
                                        r || null == i.return || i.return();
                                    } finally{
                                        if (o) throw n;
                                    }
                                }
                                return t;
                            }
                        },
                        {
                            key: "_bezierCoefficients",
                            value: function(e1) {
                                var t = e1 * e1, r = 1 - e1, o = r * r;
                                return [
                                    o * r,
                                    3 * o * e1,
                                    3 * r * t,
                                    t * e1
                                ];
                            }
                        },
                        {
                            key: "_quadraticCoefficients",
                            value: function(e1) {
                                var t = 1 - e1;
                                return [
                                    t * t,
                                    2 * t * e1,
                                    e1 * e1
                                ];
                            }
                        },
                        {
                            key: "_bezierToCatmull",
                            value: function(e1) {
                                return [
                                    e1[1],
                                    e1[1] + (e1[2] - e1[0]) / this._curveTightness,
                                    e1[2] - (e1[3] - e1[1]) / this._curveTightness,
                                    e1[2]
                                ];
                            }
                        },
                        {
                            key: "_initTessy",
                            value: function() {
                                var e1 = new a.default.GluTesselator;
                                return e1.gluTessCallback(a.default.gluEnum.GLU_TESS_VERTEX_DATA, function(e1, t) {
                                    for(var r = 0; r < e1.length; r++)t.push(e1[r]);
                                }), e1.gluTessCallback(a.default.gluEnum.GLU_TESS_BEGIN, function(e1) {
                                    e1 !== a.default.primitiveType.GL_TRIANGLES && console.log("expected TRIANGLES but got type: ".concat(e1));
                                }), e1.gluTessCallback(a.default.gluEnum.GLU_TESS_ERROR, function(e1) {
                                    console.log("error callback"), console.log("error number: ".concat(e1));
                                }), e1.gluTessCallback(a.default.gluEnum.GLU_TESS_COMBINE, function(e1, t, r) {
                                    for(var o = new Array(g.default.RendererGL.prototype.tessyVertexSize).fill(0), n = 0; n < r.length; n++)for(var s = 0; s < o.length; s++)0 !== r[n] && t[n] && (o[s] += t[n][s] * r[n]);
                                    return o;
                                }), e1.gluTessCallback(a.default.gluEnum.GLU_TESS_EDGE_FLAG, function(e1) {}), e1;
                            }
                        },
                        {
                            key: "_triangulate",
                            value: function(e1) {
                                var t = e1[0] ? e1[0][2] : void 0, r = !0, o = !0, n = !1, s = void 0;
                                try {
                                    for(var i, a = e1[Symbol.iterator](); !(o = (i = a.next()).done); o = !0)for(var l = i.value, u = 0; u < l.length; u += g.default.RendererGL.prototype.tessyVertexSize)if (l[u + 2] !== t) {
                                        r = !1;
                                        break;
                                    }
                                } catch (e1) {
                                    n = !0, s = e1;
                                } finally{
                                    try {
                                        o || null == a.return || a.return();
                                    } finally{
                                        if (n) throw s;
                                    }
                                }
                                r ? this._tessy.gluTessNormal(0, 0, 1) : this._tessy.gluTessNormal(0, 0, 0);
                                var n = [], c = (this._tessy.gluTessBeginPolygon(n), !0), s = !1, d = void 0;
                                try {
                                    for(var f, h = e1[Symbol.iterator](); !(c = (f = h.next()).done); c = !0){
                                        var p = f.value;
                                        this._tessy.gluTessBeginContour();
                                        for(var m = 0; m < p.length; m += g.default.RendererGL.prototype.tessyVertexSize){
                                            var y = p.slice(m, m + g.default.RendererGL.prototype.tessyVertexSize);
                                            this._tessy.gluTessVertex(y, y);
                                        }
                                        this._tessy.gluTessEndContour();
                                    }
                                } catch (e1) {
                                    s = !0, d = e1;
                                } finally{
                                    try {
                                        c || null == h.return || h.return();
                                    } finally{
                                        if (s) throw d;
                                    }
                                }
                                return this._tessy.gluTessEndPolygon(), n;
                            }
                        }
                    ], d(t.prototype, e1), r && d(t, r), s;
                }(g.default.Renderer), g.default.prototype._assert3d = function(e1) {
                    if (!this._renderer.isP3D) throw new Error("".concat(e1, "() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information."));
                }, g.default.RendererGL.prototype.tessyVertexSize = 12;
                e1 = g.default.RendererGL;
                r.default = e1;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "../core/p5.Renderer": 276,
                "./p5.Camera": 321,
                "./p5.Matrix": 324,
                "./p5.Shader": 329,
                "core-js/modules/es.array.concat": 151,
                "core-js/modules/es.array.copy-within": 152,
                "core-js/modules/es.array.every": 153,
                "core-js/modules/es.array.fill": 154,
                "core-js/modules/es.array.from": 157,
                "core-js/modules/es.array.includes": 158,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.array.some": 165,
                "core-js/modules/es.map": 168,
                "core-js/modules/es.object.assign": 174,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.get-prototype-of": 178,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.reflect.construct": 182,
                "core-js/modules/es.regexp.to-string": 186,
                "core-js/modules/es.set": 187,
                "core-js/modules/es.string.includes": 189,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.typed-array.copy-within": 203,
                "core-js/modules/es.typed-array.every": 204,
                "core-js/modules/es.typed-array.fill": 205,
                "core-js/modules/es.typed-array.filter": 206,
                "core-js/modules/es.typed-array.find": 208,
                "core-js/modules/es.typed-array.find-index": 207,
                "core-js/modules/es.typed-array.float32-array": 209,
                "core-js/modules/es.typed-array.float64-array": 210,
                "core-js/modules/es.typed-array.for-each": 211,
                "core-js/modules/es.typed-array.includes": 212,
                "core-js/modules/es.typed-array.index-of": 213,
                "core-js/modules/es.typed-array.int16-array": 214,
                "core-js/modules/es.typed-array.iterator": 216,
                "core-js/modules/es.typed-array.join": 217,
                "core-js/modules/es.typed-array.last-index-of": 218,
                "core-js/modules/es.typed-array.map": 219,
                "core-js/modules/es.typed-array.reduce": 221,
                "core-js/modules/es.typed-array.reduce-right": 220,
                "core-js/modules/es.typed-array.reverse": 222,
                "core-js/modules/es.typed-array.set": 223,
                "core-js/modules/es.typed-array.slice": 224,
                "core-js/modules/es.typed-array.some": 225,
                "core-js/modules/es.typed-array.sort": 226,
                "core-js/modules/es.typed-array.subarray": 227,
                "core-js/modules/es.typed-array.to-locale-string": 228,
                "core-js/modules/es.typed-array.to-string": 229,
                "core-js/modules/es.typed-array.uint16-array": 230,
                "core-js/modules/es.typed-array.uint32-array": 231,
                "core-js/modules/es.typed-array.uint8-array": 232,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236,
                libtess: 245,
                path: 248
            }
        ],
        329: [
            function(e1, t, r) {
                "use strict";
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.function.name"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.index-of"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.array.slice"), e1("core-js/modules/es.function.name"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = (e1 = e1("../core/main")) && e1.__esModule ? e1 : {
                    default: e1
                };
                function n(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                s.default.Shader = function() {
                    function o(e1, t, r) {
                        if (!(this instanceof o)) throw new TypeError("Cannot call a class as a function");
                        this._renderer = e1, this._vertSrc = t, this._fragSrc = r, this._vertShader = -1, this._fragShader = -1, this._glProgram = 0, this._loadedAttributes = !1, this.attributes = {}, this._loadedUniforms = !1, this.uniforms = {}, this._bound = !1, this.samplers = [];
                    }
                    var e1, t, r;
                    return e1 = o, t = [
                        {
                            key: "init",
                            value: function() {
                                if (0 === this._glProgram) {
                                    var e1 = this._renderer.GL;
                                    if (this._vertShader = e1.createShader(e1.VERTEX_SHADER), e1.shaderSource(this._vertShader, this._vertSrc), e1.compileShader(this._vertShader), !e1.getShaderParameter(this._vertShader, e1.COMPILE_STATUS)) return s.default._friendlyError("Yikes! An error occurred compiling the vertex shader:".concat(e1.getShaderInfoLog(this._vertShader))), null;
                                    if (this._fragShader = e1.createShader(e1.FRAGMENT_SHADER), e1.shaderSource(this._fragShader, this._fragSrc), e1.compileShader(this._fragShader), !e1.getShaderParameter(this._fragShader, e1.COMPILE_STATUS)) return s.default._friendlyError("Darn! An error occurred compiling the fragment shader:".concat(e1.getShaderInfoLog(this._fragShader))), null;
                                    this._glProgram = e1.createProgram(), e1.attachShader(this._glProgram, this._vertShader), e1.attachShader(this._glProgram, this._fragShader), e1.linkProgram(this._glProgram), e1.getProgramParameter(this._glProgram, e1.LINK_STATUS) || s.default._friendlyError("Snap! Error linking shader program: ".concat(e1.getProgramInfoLog(this._glProgram))), this._loadAttributes(), this._loadUniforms();
                                }
                                return this;
                            }
                        },
                        {
                            key: "_loadAttributes",
                            value: function() {
                                if (!this._loadedAttributes) {
                                    this.attributes = {};
                                    for(var e1 = this._renderer.GL, t = e1.getProgramParameter(this._glProgram, e1.ACTIVE_ATTRIBUTES), r = 0; r < t; ++r){
                                        var o = e1.getActiveAttrib(this._glProgram, r), n = o.name, s = e1.getAttribLocation(this._glProgram, n), i = {};
                                        i.name = n, i.location = s, i.index = r, i.type = o.type, i.size = o.size, this.attributes[n] = i;
                                    }
                                    this._loadedAttributes = !0;
                                }
                            }
                        },
                        {
                            key: "_loadUniforms",
                            value: function() {
                                if (!this._loadedUniforms) {
                                    for(var e1 = this._renderer.GL, t = e1.getProgramParameter(this._glProgram, e1.ACTIVE_UNIFORMS), r = 0, o = 0; o < t; ++o){
                                        var n = e1.getActiveUniform(this._glProgram, o), s = {}, i = (s.location = e1.getUniformLocation(this._glProgram, n.name), s.size = n.size, n.name);
                                        1 < n.size && (i = i.substring(0, i.indexOf("[0]"))), s.name = i, s.type = n.type, s._cachedData = void 0, s.type === e1.SAMPLER_2D && (s.samplerIndex = r, r++, this.samplers.push(s)), s.isArray = 1 < n.size || s.type === e1.FLOAT_MAT3 || s.type === e1.FLOAT_MAT4 || s.type === e1.FLOAT_VEC2 || s.type === e1.FLOAT_VEC3 || s.type === e1.FLOAT_VEC4 || s.type === e1.INT_VEC2 || s.type === e1.INT_VEC4 || s.type === e1.INT_VEC3, this.uniforms[i] = s;
                                    }
                                    this._loadedUniforms = !0;
                                }
                            }
                        },
                        {
                            key: "compile",
                            value: function() {}
                        },
                        {
                            key: "bindShader",
                            value: function() {
                                this.init(), this._bound || (this.useProgram(), this._bound = !0, this._setMatrixUniforms(), this.setUniform("uViewport", this._renderer._viewport));
                            }
                        },
                        {
                            key: "unbindShader",
                            value: function() {
                                return this._bound && (this.unbindTextures(), this._bound = !1), this;
                            }
                        },
                        {
                            key: "bindTextures",
                            value: function() {
                                var e1 = this._renderer.GL, t = !0, r = !1, o = void 0;
                                try {
                                    for(var n, s = this.samplers[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                                        var i = n.value, a = i.texture;
                                        void 0 === a && (a = this._renderer._getEmptyTexture()), e1.activeTexture(e1.TEXTURE0 + i.samplerIndex), a.bindTexture(), a.update(), e1.uniform1i(i.location, i.samplerIndex);
                                    }
                                } catch (e1) {
                                    r = !0, o = e1;
                                } finally{
                                    try {
                                        t || null == s.return || s.return();
                                    } finally{
                                        if (r) throw o;
                                    }
                                }
                            }
                        },
                        {
                            key: "updateTextures",
                            value: function() {
                                var e1 = !0, t = !1, r = void 0;
                                try {
                                    for(var o, n = this.samplers[Symbol.iterator](); !(e1 = (o = n.next()).done); e1 = !0){
                                        var s = o.value.texture;
                                        s && s.update();
                                    }
                                } catch (e1) {
                                    t = !0, r = e1;
                                } finally{
                                    try {
                                        e1 || null == n.return || n.return();
                                    } finally{
                                        if (t) throw r;
                                    }
                                }
                            }
                        },
                        {
                            key: "unbindTextures",
                            value: function() {
                                var e1 = !0, t = !1, r = void 0;
                                try {
                                    for(var o, n = this.samplers[Symbol.iterator](); !(e1 = (o = n.next()).done); e1 = !0){
                                        var s = o.value;
                                        this.setUniform(s.name, this._renderer._getEmptyTexture());
                                    }
                                } catch (e1) {
                                    t = !0, r = e1;
                                } finally{
                                    try {
                                        e1 || null == n.return || n.return();
                                    } finally{
                                        if (t) throw r;
                                    }
                                }
                            }
                        },
                        {
                            key: "_setMatrixUniforms",
                            value: function() {
                                var e1 = this._renderer._curCamera.cameraMatrix, t = this._renderer.uPMatrix, r = this._renderer.uMVMatrix, o = r.copy();
                                o.mult(t), this.isStrokeShader() && ("default" === this._renderer._curCamera.cameraType ? this.setUniform("uPerspective", 1) : this.setUniform("uPerspective", 0)), this.setUniform("uViewMatrix", e1.mat4), this.setUniform("uProjectionMatrix", t.mat4), this.setUniform("uModelViewMatrix", r.mat4), this.setUniform("uModelViewProjectionMatrix", o.mat4), this.uniforms.uNormalMatrix && (this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix), this.setUniform("uNormalMatrix", this._renderer.uNMatrix.mat3));
                            }
                        },
                        {
                            key: "useProgram",
                            value: function() {
                                var e1 = this._renderer.GL;
                                return this._renderer._curShader !== this && (e1.useProgram(this._glProgram), this._renderer._curShader = this), this;
                            }
                        },
                        {
                            key: "setUniform",
                            value: function(e1, t) {
                                var r = this.uniforms[e1];
                                if (r) {
                                    var o = this._renderer.GL;
                                    if (r.isArray) {
                                        if (r._cachedData && this._renderer._arraysEqual(r._cachedData, t)) return;
                                        r._cachedData = t.slice(0);
                                    } else {
                                        if (r._cachedData && r._cachedData === t) return;
                                        Array.isArray(t) ? r._cachedData = t.slice(0) : r._cachedData = t;
                                    }
                                    var n = r.location;
                                    switch(this.useProgram(), r.type){
                                        case o.BOOL:
                                            !0 === t ? o.uniform1i(n, 1) : o.uniform1i(n, 0);
                                            break;
                                        case o.INT:
                                            1 < r.size ? t.length && o.uniform1iv(n, t) : o.uniform1i(n, t);
                                            break;
                                        case o.FLOAT:
                                            1 < r.size ? t.length && o.uniform1fv(n, t) : o.uniform1f(n, t);
                                            break;
                                        case o.FLOAT_MAT3:
                                            o.uniformMatrix3fv(n, !1, t);
                                            break;
                                        case o.FLOAT_MAT4:
                                            o.uniformMatrix4fv(n, !1, t);
                                            break;
                                        case o.FLOAT_VEC2:
                                            1 < r.size ? t.length && o.uniform2fv(n, t) : o.uniform2f(n, t[0], t[1]);
                                            break;
                                        case o.FLOAT_VEC3:
                                            1 < r.size ? t.length && o.uniform3fv(n, t) : o.uniform3f(n, t[0], t[1], t[2]);
                                            break;
                                        case o.FLOAT_VEC4:
                                            1 < r.size ? t.length && o.uniform4fv(n, t) : o.uniform4f(n, t[0], t[1], t[2], t[3]);
                                            break;
                                        case o.INT_VEC2:
                                            1 < r.size ? t.length && o.uniform2iv(n, t) : o.uniform2i(n, t[0], t[1]);
                                            break;
                                        case o.INT_VEC3:
                                            1 < r.size ? t.length && o.uniform3iv(n, t) : o.uniform3i(n, t[0], t[1], t[2]);
                                            break;
                                        case o.INT_VEC4:
                                            1 < r.size ? t.length && o.uniform4iv(n, t) : o.uniform4i(n, t[0], t[1], t[2], t[3]);
                                            break;
                                        case o.SAMPLER_2D:
                                            o.activeTexture(o.TEXTURE0 + r.samplerIndex), r.texture = t instanceof s.default.Texture ? t : this._renderer.getTexture(t), o.uniform1i(n, r.samplerIndex), r.texture.src.gifProperties && r.texture.src._animateGif(this._renderer._pInst);
                                    }
                                    return this;
                                }
                            }
                        },
                        {
                            key: "isLightShader",
                            value: function() {
                                return void 0 !== this.attributes.aNormal || void 0 !== this.uniforms.uUseLighting || void 0 !== this.uniforms.uAmbientLightCount || void 0 !== this.uniforms.uDirectionalLightCount || void 0 !== this.uniforms.uPointLightCount || void 0 !== this.uniforms.uAmbientColor || void 0 !== this.uniforms.uDirectionalDiffuseColors || void 0 !== this.uniforms.uDirectionalSpecularColors || void 0 !== this.uniforms.uPointLightLocation || void 0 !== this.uniforms.uPointLightDiffuseColors || void 0 !== this.uniforms.uPointLightSpecularColors || void 0 !== this.uniforms.uLightingDirection || void 0 !== this.uniforms.uSpecular;
                            }
                        },
                        {
                            key: "isNormalShader",
                            value: function() {
                                return void 0 !== this.attributes.aNormal;
                            }
                        },
                        {
                            key: "isTextureShader",
                            value: function() {
                                return 0 < this.samplers.length;
                            }
                        },
                        {
                            key: "isColorShader",
                            value: function() {
                                return void 0 !== this.attributes.aVertexColor || void 0 !== this.uniforms.uMaterialColor;
                            }
                        },
                        {
                            key: "isTexLightShader",
                            value: function() {
                                return this.isLightShader() && this.isTextureShader();
                            }
                        },
                        {
                            key: "isStrokeShader",
                            value: function() {
                                return void 0 !== this.uniforms.uStrokeWeight;
                            }
                        },
                        {
                            key: "enableAttrib",
                            value: function(e1, t, r, o, n, s) {
                                var i;
                                return e1 && -1 !== (e1 = e1.location) && (i = this._renderer.GL, this._renderer.registerEnabled[e1] || (i.enableVertexAttribArray(e1), this._renderer.registerEnabled[e1] = !0), this._renderer.GL.vertexAttribPointer(e1, t, r || i.FLOAT, o || !1, n || 0, s || 0)), this;
                            }
                        }
                    ], n(e1.prototype, t), r && n(e1, r), o;
                }();
                e1 = s.default.Shader;
                r.default = e1;
            },
            {
                "../core/main": 273,
                "core-js/modules/es.array.index-of": 159,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.array.slice": 164,
                "core-js/modules/es.function.name": 167,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        330: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.typed-array.uint8-array"), e1("core-js/modules/es.typed-array.copy-within"), e1("core-js/modules/es.typed-array.every"), e1("core-js/modules/es.typed-array.fill"), e1("core-js/modules/es.typed-array.filter"), e1("core-js/modules/es.typed-array.find"), e1("core-js/modules/es.typed-array.find-index"), e1("core-js/modules/es.typed-array.for-each"), e1("core-js/modules/es.typed-array.includes"), e1("core-js/modules/es.typed-array.index-of"), e1("core-js/modules/es.typed-array.iterator"), e1("core-js/modules/es.typed-array.join"), e1("core-js/modules/es.typed-array.last-index-of"), e1("core-js/modules/es.typed-array.map"), e1("core-js/modules/es.typed-array.reduce"), e1("core-js/modules/es.typed-array.reduce-right"), e1("core-js/modules/es.typed-array.reverse"), e1("core-js/modules/es.typed-array.set"), e1("core-js/modules/es.typed-array.slice"), e1("core-js/modules/es.typed-array.some"), e1("core-js/modules/es.typed-array.sort"), e1("core-js/modules/es.typed-array.subarray"), e1("core-js/modules/es.typed-array.to-locale-string"), e1("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.checkWebGLCapabilities = c, r.default = void 0;
                var s = (n = e1("../core/main")) && n.__esModule ? n : {
                    default: n
                }, a = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = l();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants"));
                function l() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, l = function() {
                        return e1;
                    }, e1);
                }
                function u(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                function c(e1) {
                    var t = e1.GL, e1 = e1.webglVersion, r = e1 === a.WEBGL2 ? t.getExtension("EXT_color_buffer_float") && t.getExtension("EXT_float_blend") : t.getExtension("OES_texture_float"), o = r && t.getExtension("OES_texture_float_linear"), e1 = e1 === a.WEBGL2 ? t.getExtension("EXT_color_buffer_float") : t.getExtension("OES_texture_half_float");
                    return {
                        float: r,
                        floatLinear: o,
                        halfFloat: e1,
                        halfFloatLinear: e1 && t.getExtension("OES_texture_half_float_linear")
                    };
                }
                s.default.Texture = function() {
                    function n(e1, t, r) {
                        if (!(this instanceof n)) throw new TypeError("Cannot call a class as a function");
                        this._renderer = e1;
                        var o = this._renderer.GL, r = (r = r || {}, this.src = t, this.glTex = void 0, this.glTarget = o.TEXTURE_2D, this.glFormat = r.format || o.RGBA, this.mipmaps = !1, this.glMinFilter = r.minFilter || o.LINEAR, this.glMagFilter = r.magFilter || o.LINEAR, this.glWrapS = r.wrapS || o.CLAMP_TO_EDGE, this.glWrapT = r.wrapT || o.CLAMP_TO_EDGE, this.glDataType = r.dataType || o.UNSIGNED_BYTE, c(e1)), e1 = (this.glFormat !== o.HALF_FLOAT || r.halfFloat || (console.log("This device does not support dataType HALF_FLOAT. Falling back to FLOAT."), this.glDataType = o.FLOAT), this.glFormat !== o.HALF_FLOAT || this.glMinFilter !== o.LINEAR && this.glMagFilter !== o.LINEAR || r.halfFloatLinear || (console.log("This device does not support linear filtering for dataType FLOAT. Falling back to NEAREST."), this.glMinFilter === o.LINEAR && (this.glMinFilter = o.NEAREST), this.glMagFilter === o.LINEAR && (this.glMagFilter = o.NEAREST)), this.glFormat !== o.FLOAT || r.float || (console.log("This device does not support dataType FLOAT. Falling back to UNSIGNED_BYTE."), this.glDataType = o.UNSIGNED_BYTE), this.glFormat !== o.FLOAT || this.glMinFilter !== o.LINEAR && this.glMagFilter !== o.LINEAR || r.floatLinear || (console.log("This device does not support linear filtering for dataType FLOAT. Falling back to NEAREST."), this.glMinFilter === o.LINEAR && (this.glMinFilter = o.NEAREST), this.glMagFilter === o.LINEAR && (this.glMagFilter = o.NEAREST)), this.isSrcMediaElement = void 0 !== s.default.MediaElement && t instanceof s.default.MediaElement, this._videoPrevUpdateTime = 0, this.isSrcHTMLElement = void 0 !== s.default.Element && t instanceof s.default.Element && !(t instanceof s.default.Graphics) && !(t instanceof s.default.Renderer), this.isSrcP5Image = t instanceof s.default.Image, this.isSrcP5Graphics = t instanceof s.default.Graphics, this.isSrcP5Renderer = t instanceof s.default.Renderer, this.isImageData = "undefined" != typeof ImageData && t instanceof ImageData, this.isFramebufferTexture = t instanceof s.default.FramebufferTexture, this._getTextureDataFromSource());
                        return this.width = e1.width, this.height = e1.height, this.init(e1), this;
                    }
                    var e1, t, r;
                    return e1 = n, t = [
                        {
                            key: "_getTextureDataFromSource",
                            value: function() {
                                var e1;
                                return this.isFramebufferTexture ? e1 = this.src.rawTexture() : this.isSrcP5Image ? e1 = this.src.canvas : this.isSrcMediaElement || this.isSrcP5Graphics || this.isSrcP5Renderer || this.isSrcHTMLElement ? e1 = this.src.elt : this.isImageData && (e1 = this.src), e1;
                            }
                        },
                        {
                            key: "init",
                            value: function(e1) {
                                var t, r = this._renderer.GL;
                                this.isFramebufferTexture || (this.glTex = r.createTexture()), this.glWrapS = this._renderer.textureWrapX, this.glWrapT = this._renderer.textureWrapY, this.setWrapMode(this.glWrapS, this.glWrapT), this.bindTexture(), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MAG_FILTER, this.glMagFilter), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MIN_FILTER, this.glMinFilter), this.isFramebufferTexture || (0 === this.width || 0 === this.height || this.isSrcMediaElement && !this.src.loadedmetadata ? (t = new Uint8Array([
                                    1,
                                    1,
                                    1,
                                    1
                                ]), r.texImage2D(this.glTarget, 0, r.RGBA, 1, 1, 0, this.glFormat, this.glDataType, t)) : r.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, this.glDataType, e1));
                            }
                        },
                        {
                            key: "update",
                            value: function() {
                                var e1, t, r, o = this.src;
                                return 0 !== o.width && 0 !== o.height && !this.isFramebufferTexture && (e1 = this._getTextureDataFromSource(), t = !1, r = this._renderer.GL, e1.width !== this.width || e1.height !== this.height ? (t = !0, this.width = e1.width || o.width, this.height = e1.height || o.height, this.isSrcP5Image ? o.setModified(!1) : (this.isSrcMediaElement || this.isSrcHTMLElement) && o.setModified(!0)) : this.isSrcP5Image ? o.isModified() && o.setModified((t = !0, false)) : this.isSrcMediaElement ? o.isModified() ? o.setModified((t = !0, false)) : o.loadedmetadata && this._videoPrevUpdateTime !== o.time() && (this._videoPrevUpdateTime = o.time(), t = !0) : this.isImageData ? o._dirty && (t = (o._dirty = !1, true)) : t = !0, t && (this.bindTexture(), r.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, this.glDataType, e1)), t);
                            }
                        },
                        {
                            key: "bindTexture",
                            value: function() {
                                return this._renderer.GL.bindTexture(this.glTarget, this.getTexture()), this;
                            }
                        },
                        {
                            key: "unbindTexture",
                            value: function() {
                                this._renderer.GL.bindTexture(this.glTarget, null);
                            }
                        },
                        {
                            key: "getTexture",
                            value: function() {
                                return this.isFramebufferTexture ? this.src.rawTexture() : this.glTex;
                            }
                        },
                        {
                            key: "setInterpolation",
                            value: function(e1, t) {
                                var r = this._renderer.GL;
                                e1 === a.NEAREST ? this.glMinFilter = r.NEAREST : this.glMinFilter = r.LINEAR, t === a.NEAREST ? this.glMagFilter = r.NEAREST : this.glMagFilter = r.LINEAR, this.bindTexture(), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MIN_FILTER, this.glMinFilter), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MAG_FILTER, this.glMagFilter), this.unbindTexture();
                            }
                        },
                        {
                            key: "setWrapMode",
                            value: function(e1, t) {
                                function r(e1) {
                                    return 0 == (e1 & e1 - 1);
                                }
                                var o = this._renderer.GL, n = this._getTextureDataFromSource(), n = n.naturalWidth && n.naturalHeight ? (s = n.naturalWidth, n.naturalHeight) : (s = this.width, this.height), s = r(s), n = r(n);
                                e1 === a.REPEAT ? this._renderer.webglVersion === a.WEBGL2 || s && n ? this.glWrapS = o.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = o.CLAMP_TO_EDGE) : e1 === a.MIRROR ? this._renderer.webglVersion === a.WEBGL2 || s && n ? this.glWrapS = o.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = o.CLAMP_TO_EDGE) : this.glWrapS = o.CLAMP_TO_EDGE, t === a.REPEAT ? this._renderer.webglVersion === a.WEBGL2 || s && n ? this.glWrapT = o.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = o.CLAMP_TO_EDGE) : t === a.MIRROR ? this._renderer.webglVersion === a.WEBGL2 || s && n ? this.glWrapT = o.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = o.CLAMP_TO_EDGE) : this.glWrapT = o.CLAMP_TO_EDGE, this.bindTexture(), o.texParameteri(o.TEXTURE_2D, o.TEXTURE_WRAP_S, this.glWrapS), o.texParameteri(o.TEXTURE_2D, o.TEXTURE_WRAP_T, this.glWrapT), this.unbindTexture();
                            }
                        }
                    ], u(e1.prototype, t), r && u(e1, r), n;
                }();
                var n = s.default.Texture;
                r.default = n;
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.typed-array.copy-within": 203,
                "core-js/modules/es.typed-array.every": 204,
                "core-js/modules/es.typed-array.fill": 205,
                "core-js/modules/es.typed-array.filter": 206,
                "core-js/modules/es.typed-array.find": 208,
                "core-js/modules/es.typed-array.find-index": 207,
                "core-js/modules/es.typed-array.for-each": 211,
                "core-js/modules/es.typed-array.includes": 212,
                "core-js/modules/es.typed-array.index-of": 213,
                "core-js/modules/es.typed-array.iterator": 216,
                "core-js/modules/es.typed-array.join": 217,
                "core-js/modules/es.typed-array.last-index-of": 218,
                "core-js/modules/es.typed-array.map": 219,
                "core-js/modules/es.typed-array.reduce": 221,
                "core-js/modules/es.typed-array.reduce-right": 220,
                "core-js/modules/es.typed-array.reverse": 222,
                "core-js/modules/es.typed-array.set": 223,
                "core-js/modules/es.typed-array.slice": 224,
                "core-js/modules/es.typed-array.some": 225,
                "core-js/modules/es.typed-array.sort": 226,
                "core-js/modules/es.typed-array.subarray": 227,
                "core-js/modules/es.typed-array.to-locale-string": 228,
                "core-js/modules/es.typed-array.to-string": 229,
                "core-js/modules/es.typed-array.uint8-array": 232,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ],
        331: [
            function(e1, t, r) {
                "use strict";
                function o(e1) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e1) {
                        return typeof e1;
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : typeof e1;
                    })(e1);
                }
                function i(e1) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e1) {
                        return o(e1);
                    } : function(e1) {
                        return e1 && "function" == typeof Symbol && e1.constructor === Symbol && e1 !== Symbol.prototype ? "symbol" : o(e1);
                    })(e1);
                }
                e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.get-own-property-descriptor"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.string.sub"), e1("core-js/modules/es.weak-map"), e1("core-js/modules/web.dom-collections.iterator"), e1("core-js/modules/es.symbol"), e1("core-js/modules/es.symbol.description"), e1("core-js/modules/es.symbol.iterator"), e1("core-js/modules/es.array.iterator"), e1("core-js/modules/es.object.to-string"), e1("core-js/modules/es.regexp.exec"), e1("core-js/modules/es.string.iterator"), e1("core-js/modules/es.string.split"), e1("core-js/modules/es.string.sub"), e1("core-js/modules/web.dom-collections.iterator");
                var n, B = (n = e1("../core/main")) && n.__esModule ? n : {
                    default: n
                }, M = function(e1) {
                    if (e1 && e1.__esModule) return e1;
                    if (null === e1 || "object" !== i(e1) && "function" != typeof e1) return {
                        default: e1
                    };
                    var t = a();
                    if (t && t.has(e1)) return t.get(e1);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e1){
                        var s;
                        Object.prototype.hasOwnProperty.call(e1, r) && ((s = n ? Object.getOwnPropertyDescriptor(e1, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e1[r]);
                    }
                    o.default = e1, t && t.set(e1, o);
                    return o;
                }(e1("../core/constants"));
                function a() {
                    var e1;
                    return "function" != typeof WeakMap ? null : (e1 = new WeakMap, a = function() {
                        return e1;
                    }, e1);
                }
                function G(e1, t) {
                    if (!(e1 instanceof t)) throw new TypeError("Cannot call a class as a function");
                }
                function s(e1, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e1, o.key, o);
                    }
                }
                function V(e1, t, r) {
                    t && s(e1.prototype, t), r && s(e1, r);
                }
                e1("./p5.Shader"), e1("./p5.RendererGL.Retained"), B.default.RendererGL.prototype._applyTextProperties = function() {}, B.default.RendererGL.prototype.textWidth = function(e1) {
                    return this._isOpenType() ? this._textFont._textWidth(e1, this._textSize) : 0;
                };
                var l = function() {
                    function r(e1, t) {
                        G(this, r), this.width = e1, this.height = t, this.infos = [];
                    }
                    return V(r, [
                        {
                            key: "findImage",
                            value: function(e1) {
                                var t, r, o = this.width * this.height;
                                if (o < e1) throw new Error("font is too complex to render in 3D");
                                for(var n = this.infos.length - 1; 0 <= n; --n){
                                    var s = this.infos[n];
                                    if (s.index + e1 < o) {
                                        r = (t = s).imageData;
                                        break;
                                    }
                                }
                                if (!t) {
                                    try {
                                        r = new ImageData(this.width, this.height);
                                    } catch (e1) {
                                        var i = document.getElementsByTagName("canvas")[0], a = !i, l = (i || ((i = document.createElement("canvas")).style.display = "none", document.body.appendChild(i)), i.getContext("2d"));
                                        l && (r = l.createImageData(this.width, this.height)), a && document.body.removeChild(i);
                                    }
                                    this.infos.push(t = {
                                        index: 0,
                                        imageData: r
                                    });
                                }
                                l = t.index;
                                return t.index += e1, r._dirty = !0, {
                                    imageData: r,
                                    index: l
                                };
                            }
                        }
                    ]), r;
                }();
                function z(e1, t, r, o, n) {
                    var s = e1.imageData.data, e1 = 4 * e1.index++;
                    s[e1++] = t, s[e1++] = r, s[e1++] = o, s[+e1] = n;
                }
                var H = Math.sqrt(3), T = function() {
                    function t(e1) {
                        G(this, t), this.font = e1, this.strokeImageInfos = new l(64, 64), this.colDimImageInfos = new l(64, 64), this.rowDimImageInfos = new l(64, 64), this.colCellImageInfos = new l(64, 64), this.rowCellImageInfos = new l(64, 64), this.glyphInfos = {};
                    }
                    return V(t, [
                        {
                            key: "getGlyphInfo",
                            value: function(e1) {
                                var t = this.glyphInfos[e1.index];
                                if (!t) {
                                    var r = e1.getBoundingBox(), o = r.x1, n = r.y1, s = r.x2 - o, i = r.y2 - n, a = e1.path.commands;
                                    if (0 == s || 0 == i || !a.length) return this.glyphInfos[e1.index] = {};
                                    for(var u = [], c = [], d = [], l = 8; 0 <= l; --l)d.push([]);
                                    for(l = 8; 0 <= l; --l)c.push([]);
                                    var f, h, p, m, D = function() {
                                        function n(e1, t, r, o) {
                                            G(this, n), this.p0 = e1, this.c0 = t, this.c1 = r, this.p1 = o;
                                        }
                                        return V(n, [
                                            {
                                                key: "toQuadratic",
                                                value: function() {
                                                    return {
                                                        x: this.p0.x,
                                                        y: this.p0.y,
                                                        x1: this.p1.x,
                                                        y1: this.p1.y,
                                                        cx: (3 * (this.c0.x + this.c1.x) - (this.p0.x + this.p1.x)) / 4,
                                                        cy: (3 * (this.c0.y + this.c1.y) - (this.p0.y + this.p1.y)) / 4
                                                    };
                                                }
                                            },
                                            {
                                                key: "quadError",
                                                value: function() {
                                                    return B.default.Vector.sub(B.default.Vector.sub(this.p1, this.p0), B.default.Vector.mult(B.default.Vector.sub(this.c1, this.c0), 3)).mag() / 2;
                                                }
                                            },
                                            {
                                                key: "split",
                                                value: function(e1) {
                                                    var t = B.default.Vector.lerp(this.p0, this.c0, e1), r = B.default.Vector.lerp(this.c0, this.c1, e1), o = B.default.Vector.lerp(t, r, e1), r = (this.c1 = B.default.Vector.lerp(this.c1, this.p1, e1), this.c0 = B.default.Vector.lerp(r, this.c1, e1), B.default.Vector.lerp(o, this.c0, e1)), e1 = new n(this.p0, t, o, r);
                                                    return this.p0 = r, e1;
                                                }
                                            },
                                            {
                                                key: "splitInflections",
                                                value: function() {
                                                    var e1 = B.default.Vector.sub(this.c0, this.p0), t = B.default.Vector.sub(B.default.Vector.sub(this.c1, this.c0), e1), r = B.default.Vector.sub(B.default.Vector.sub(B.default.Vector.sub(this.p1, this.c1), e1), B.default.Vector.mult(t, 2)), o = [], n = t.x * r.y - t.y * r.x;
                                                    return 0 !== n && 0 <= (e1 = (r = e1.x * r.y - e1.y * r.x) * r - 4 * n * (e1.x * t.y - e1.y * t.x)) && (n < 0 && (n = -n, r = -r), e1 = (-r + (t = Math.sqrt(e1))) / (2 * n), 0 < (r = (-r - t) / (2 * n)) && r < 1 && (o.push(this.split(r)), e1 = 1 - (1 - e1) / (1 - r)), 0 < e1 && e1 < 1 && o.push(this.split(e1))), o.push(this), o;
                                                }
                                            }
                                        ]), n;
                                    }(), y = !0, g = !1, v = void 0;
                                    try {
                                        for(var b, j = a[Symbol.iterator](); !(y = (b = j.next()).done); y = !0){
                                            var _ = b.value, x = (_.x - o) / s, w = (_.y - n) / i;
                                            if (!U(f, h, x, w)) {
                                                switch(_.type){
                                                    case "M":
                                                        p = x, m = w;
                                                        break;
                                                    case "L":
                                                        I(f, h, x, w);
                                                        break;
                                                    case "Q":
                                                        var S = (_.x1 - o) / s, E = (_.y1 - n) / i;
                                                        L([
                                                            f,
                                                            x,
                                                            S
                                                        ], [
                                                            h,
                                                            w,
                                                            E
                                                        ], {
                                                            x: f,
                                                            y: h,
                                                            cx: S,
                                                            cy: E
                                                        });
                                                        break;
                                                    case "Z":
                                                        U(f, h, p, m) ? u.push({
                                                            x: f,
                                                            y: h
                                                        }) : (I(f, h, p, m), u.push({
                                                            x: p,
                                                            y: m
                                                        }));
                                                        break;
                                                    case "C":
                                                        for(var M = function(e1, t, r, o, n, s, i, a) {
                                                            var e1 = new D(new B.default.Vector(e1, t), new B.default.Vector(r, o), new B.default.Vector(n, s), new B.default.Vector(i, a)).splitInflections(), l = [], u = 30 / H, c = !0, t = !1, r = void 0;
                                                            try {
                                                                for(var d, f = e1[Symbol.iterator](); !(c = (d = f.next()).done); c = !0){
                                                                    for(var h = d.value, p = [], m = void 0; !(.125 <= (m = u / h.quadError()));){
                                                                        var y = Math.pow(m, 1 / 3), g = h.split(y), v = h.split(1 - y / (1 - y));
                                                                        l.push(g), p.push(h), h = v;
                                                                    }
                                                                    m < 1 && l.push(h.split(.5)), l.push(h), Array.prototype.push.apply(l, p.reverse());
                                                                }
                                                            } catch (e1) {
                                                                t = !0, r = e1;
                                                            } finally{
                                                                try {
                                                                    c || null == f.return || f.return();
                                                                } finally{
                                                                    if (t) throw r;
                                                                }
                                                            }
                                                            return l;
                                                        }(f, h, (_.x1 - o) / s, (_.y1 - n) / i, (_.x2 - o) / s, (_.y2 - n) / i, x, w), T = 0; T < M.length; T++){
                                                            var k = M[T].toQuadratic();
                                                            L([
                                                                k.x,
                                                                k.x1,
                                                                k.cx
                                                            ], [
                                                                k.y,
                                                                k.y1,
                                                                k.cy
                                                            ], k);
                                                        }
                                                        break;
                                                    default:
                                                        throw new Error("unknown command type: ".concat(_.type));
                                                }
                                                f = x, h = w;
                                            }
                                        }
                                    } catch (e1) {
                                        g = !0, v = e1;
                                    } finally{
                                        try {
                                            y || null == j.return || j.return();
                                        } finally{
                                            if (g) throw v;
                                        }
                                    }
                                    for(var O = u.length, C = this.strokeImageInfos.findImage(O), F = C.index, A = 0; A < O; ++A){
                                        var P = u[A];
                                        z(C, R(P.x), R(P.y), R(P.cx), R(P.cy));
                                    }
                                    (t = this.glyphInfos[e1.index] = {
                                        glyph: e1,
                                        uGlyphRect: [
                                            r.x1,
                                            -r.y1,
                                            r.x2,
                                            -r.y2
                                        ],
                                        strokeImageInfo: C,
                                        strokes: u,
                                        colInfo: N(d, this.colDimImageInfos, this.colCellImageInfos),
                                        rowInfo: N(c, this.rowDimImageInfos, this.rowCellImageInfos)
                                    }).uGridOffset = [
                                        t.colInfo.dimOffset,
                                        t.rowInfo.dimOffset
                                    ];
                                }
                                return t;
                                function L(e1, t, r) {
                                    var o = u.length;
                                    function n(e1, t, r) {
                                        for(var o = e1.length; 0 < o--;){
                                            var n = e1[o];
                                            n < t && (t = n), r < n && (r = n);
                                        }
                                        return {
                                            min: t,
                                            max: r
                                        };
                                    }
                                    u.push(r);
                                    for(var r = n(e1, 1, 0), e1 = Math.max(Math.floor(9 * r.min - .5), 0), s = Math.min(Math.ceil(9 * r.max + .5), 9), i = e1; i < s; ++i)d[i].push(o);
                                    for(var r = n(t, 1, 0), e1 = Math.max(Math.floor(9 * r.min - .5), 0), a = Math.min(Math.ceil(9 * r.max + .5), 9), l = e1; l < a; ++l)c[l].push(o);
                                }
                                function R(e1) {
                                    var t, r;
                                    return (e1 = (r = 255) * e1) < (t = 0) ? t : r < e1 ? r : e1;
                                }
                                function I(e1, t, r, o) {
                                    L([
                                        e1,
                                        r
                                    ], [
                                        t,
                                        o
                                    ], {
                                        x: e1,
                                        y: t,
                                        cx: (e1 + r) / 2,
                                        cy: (t + o) / 2
                                    });
                                }
                                function U(e1, t, r, o) {
                                    return Math.abs(r - e1) < 1e-5 && Math.abs(o - t) < 1e-5;
                                }
                                function N(e1, t, r) {
                                    for(var o = e1.length, n = t.findImage(o), t = n.index, s = 0, i = 0; i < o; ++i)s += e1[i].length;
                                    for(var a = r.findImage(s), l = 0; l < o; ++l){
                                        var u = e1[l], c = u.length, d = a.index;
                                        z(n, d >> 7, 127 & d, c >> 7, 127 & c);
                                        for(var f = 0; f < c; ++f){
                                            var h = u[f] + F;
                                            z(a, h >> 7, 127 & h, 0, 0);
                                        }
                                    }
                                    return {
                                        cellImageInfo: a,
                                        dimOffset: t,
                                        dimImageInfo: n
                                    };
                                }
                            }
                        }
                    ]), t;
                }();
                B.default.RendererGL.prototype._renderText = function(e1, t, r, o, n) {
                    if (this._textFont && "string" != typeof this._textFont) {
                        if (!(n <= o) && this._doFill) {
                            if (this._isOpenType()) {
                                e1.push();
                                var n = this._doStroke, s = this.drawMode, i = (this._doStroke = !1, this.drawMode = M.TEXTURE, this._textFont.font), a = (a = this._textFont._fontInfo) || (this._textFont._fontInfo = new T(i)), r = this._textFont._handleAlignment(this, t, r, o), o = this._textSize / i.unitsPerEm, l = (this.translate(r.x, r.y, 0), this.scale(o, o, 1), this.GL), r = !this._defaultFontShader, u = this._getFontShader(), c = (u.init(), u.bindShader(), r && (u.setUniform("uGridImageSize", [
                                    64,
                                    64
                                ]), u.setUniform("uCellsImageSize", [
                                    64,
                                    64
                                ]), u.setUniform("uStrokeImageSize", [
                                    64,
                                    64
                                ]), u.setUniform("uGridSize", [
                                    9,
                                    9
                                ])), this._applyColorBlend(this.curFillColor), this.retainedMode.geometry.glyph), d = (c || ((o = this._textGeom = new B.default.Geometry(1, 1, function() {
                                    for(var e1 = 0; e1 <= 1; e1++)for(var t = 0; t <= 1; t++)this.vertices.push(new B.default.Vector(t, e1, 0)), this.uvs.push(t, e1);
                                })).computeFaces().computeNormals(), c = this.createBuffers("glyph", o)), !0), r = !1, o = void 0;
                                try {
                                    for(var f, h = this.retainedMode.buffers.text[Symbol.iterator](); !(d = (f = h.next()).done); d = !0)f.value._prepareBuffer(c, u);
                                } catch (e1) {
                                    r = !0, o = e1;
                                } finally{
                                    try {
                                        d || null == h.return || h.return();
                                    } finally{
                                        if (r) throw o;
                                    }
                                }
                                this._bindBuffer(c.indexBuffer, l.ELEMENT_ARRAY_BUFFER), u.setUniform("uMaterialColor", this.curFillColor), l.pixelStorei(l.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !1);
                                try {
                                    var p = 0, m = null, y = i.stringToGlyphs(t), g = !0, v = !1, b = void 0;
                                    try {
                                        for(var j, _ = y[Symbol.iterator](); !(g = (j = _.next()).done); g = !0){
                                            var x, w, S = j.value, E = (m && (p += i.getKerningValue(m, S)), a.getGlyphInfo(S));
                                            E.uGlyphRect && (x = E.rowInfo, w = E.colInfo, u.setUniform("uSamplerStrokes", E.strokeImageInfo.imageData), u.setUniform("uSamplerRowStrokes", x.cellImageInfo.imageData), u.setUniform("uSamplerRows", x.dimImageInfo.imageData), u.setUniform("uSamplerColStrokes", w.cellImageInfo.imageData), u.setUniform("uSamplerCols", w.dimImageInfo.imageData), u.setUniform("uGridOffset", E.uGridOffset), u.setUniform("uGlyphRect", E.uGlyphRect), u.setUniform("uGlyphOffset", p), u.bindTextures(), l.drawElements(l.TRIANGLES, 6, this.GL.UNSIGNED_SHORT, 0)), p += S.advanceWidth, m = S;
                                        }
                                    } catch (e1) {
                                        v = !0, b = e1;
                                    } finally{
                                        try {
                                            g || null == _.return || _.return();
                                        } finally{
                                            if (v) throw b;
                                        }
                                    }
                                } finally{
                                    u.unbindShader(), this._doStroke = n, this.drawMode = s, l.pixelStorei(l.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !0), e1.pop();
                                }
                            } else console.log("WEBGL: only Opentype (.otf) and Truetype (.ttf) fonts are supported");
                            return e1;
                        }
                    } else console.log("WEBGL: you must load and set a font before drawing text. See `loadFont` and `textFont` for more details.");
                };
            },
            {
                "../core/constants": 262,
                "../core/main": 273,
                "./p5.RendererGL.Retained": 327,
                "./p5.Shader": 329,
                "core-js/modules/es.array.iterator": 160,
                "core-js/modules/es.object.get-own-property-descriptor": 176,
                "core-js/modules/es.object.to-string": 180,
                "core-js/modules/es.regexp.exec": 185,
                "core-js/modules/es.string.iterator": 190,
                "core-js/modules/es.string.split": 196,
                "core-js/modules/es.string.sub": 198,
                "core-js/modules/es.symbol": 202,
                "core-js/modules/es.symbol.description": 200,
                "core-js/modules/es.symbol.iterator": 201,
                "core-js/modules/es.weak-map": 234,
                "core-js/modules/web.dom-collections.iterator": 236
            }
        ]
    }, {}, [
        257
    ])(257);
});

},{}],"6ZafJ":[function(require,module,exports) {
// worker for client-side ajax requests
self.addEventListener("message", function(event) {
    const data = event.data;
    if (data.cmd === "sendArray") sendArrayToServer(data.array, data.bpm, data.temperatureValue, data.hitTolerance, data.isHttpConnected, data.httpIp, data.portInput, data.samplingStrategy);
});
// function sendArrayToServer(array, bpm, temperatureValue, hitTolerance, isHttpConnected, httpIp, portInput, samplingStrategy) {
//     if (!isHttpConnected) return;
//     const data_url = `http://${httpIp}:${portInput}/send_array`;
//     console.log("Sending request to:", data_url);
//     const payload = {
//         method: 'POST',
//         headers: {
//             'Content-Type': 'application/json'
//         },
//         body: JSON.stringify({
//             array: array,
//             bpm: bpm,
//             temp: temperatureValue,
//             thresh: hitTolerance,
//             samplingStrategy: samplingStrategy
//         })
//     };
//     fetch(data_url, payload)
//     .then(response => response.arrayBuffer())
//     .then(data => {
//         console.log("Processing tapped rhythms...");
//         // send a message back to the main thread if necessary
//         self.postMessage({type: 'arrayProcessed', data: data});
//     })
//     .catch(error => {
//         console.error("Error:", error);
//         self.postMessage({type: 'error', error: error});
//     });
// }
function sendArrayToServer(array, bpm, temperatureValue, hitTolerance, isHttpConnected, httpIp, portInput, samplingStrategy) {
    if (!isHttpConnected) return;
    const data_url = `http://${httpIp}:${portInput}/send_array`;
    console.log("Sending request to:", data_url);
    const payload = {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({
            array: array,
            bpm: bpm,
            temp: temperatureValue,
            thresh: hitTolerance,
            samplingStrategy: samplingStrategy
        })
    };
    fetch(data_url, payload).then((response)=>response.json()) // Process as JSON first
    // checking the success field of the response, and if it's true, you're converting the data field (base64 encoded string of the MIDI binary) 
    // back to a byte array, and then you're posting this byte array back to the main thread:
    .then((data)=>{
        if (data.success) {
            console.log("Processing tapped rhythms...");
            // const midiData = new Uint8Array(data.data);  // Convert base64 string to byte array
            const base64decoded = atob(data.data);
            const midiData = new Uint8Array(base64decoded.length).map((_, i)=>base64decoded.charCodeAt(i));
            console.log("Received MIDI data length:", midiData.length);
            self.postMessage({
                type: "arrayProcessed",
                data: midiData
            });
        } else {
            console.warn(data.message);
            self.postMessage({
                type: "error",
                error: new Error(data.message)
            });
        }
    }).catch((error)=>{
        console.error("Error:", error);
        self.postMessage({
            type: "error",
            error: error
        });
    });
}

},{}],"7u5lR":[function(require,module,exports) {
// dedicated thread for queueing up rhythms
let midiEvents = []; // This will hold the queued MIDI events
self.addEventListener("message", function(event) {
    const data = event.data;
    switch(data.cmd){
        case "enqueue":
            midiEvents.push(data.event);
            break;
        case "dequeue":
            // Logic to decide which event(s) should be sent next
            const nextEvent = midiEvents.shift(); // Simplified example
            self.postMessage({
                cmd: "broadcast",
                event: nextEvent
            });
            break;
    }
});

},{}]},["46McK","1SICI"], "1SICI", "parcelRequirefc44")

//# sourceMappingURL=index.18dbc454.js.map
