!/*! p5.js v1.7.0 July 10, 2023 */function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r;(r="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).p5=t()}}(function(){var define,module,exports;return(function(){function t(r,n,o){function a(l,c){if(!n[l]){if(!r[l]){var u="function"==typeof require&&void 0;if(!c&&u)return u(l,!0);if(s)return s(l,!0);var p=Error("Cannot find module '"+l+"'");throw p.code="MODULE_NOT_FOUND",p}var d=n[l]={exports:{}};r[l][0].call(d.exports,function(t){return a(r[l][1][t]||t)},d,d.exports,t,r,n,o)}return n[l].exports}for(var s="function"==typeof require&&void 0,l=0;l<o.length;l++)a(o[l]);return a}return t})()({1:[function(t,r,n){r.exports={p5:{describe:{name:"describe",params:[{name:"text",description:"<p>description of the canvas</p>\n",type:"String"},{name:"display",description:"<p>either LABEL or FALLBACK</p>\n",type:"Constant",optional:!0}],class:"p5",module:"Environment"},describeElement:{name:"describeElement",params:[{name:"name",description:"<p>name of the element</p>\n",type:"String"},{name:"text",description:"<p>description of the element</p>\n",type:"String"},{name:"display",description:"<p>either LABEL or FALLBACK</p>\n",type:"Constant",optional:!0}],class:"p5",module:"Environment"},textOutput:{name:"textOutput",params:[{name:"display",description:"<p>either FALLBACK or LABEL</p>\n",type:"Constant",optional:!0}],class:"p5",module:"Environment"},gridOutput:{name:"gridOutput",params:[{name:"display",description:"<p>either FALLBACK or LABEL</p>\n",type:"Constant",optional:!0}],class:"p5",module:"Environment"},alpha:{name:"alpha",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, array of\n                                        color components, or CSS color string.</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},blue:{name:"blue",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, array of\n                                        color components, or CSS color string.</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},brightness:{name:"brightness",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, array of\n                                        color components, or CSS color string.</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},color:{name:"color",class:"p5",module:"Color",overloads:[{params:[{name:"gray",description:"<p>number specifying value between white and black.</p>\n",type:"Number"},{name:"alpha",description:"<p>alpha value relative to current color range\n                                (default is 0-255).</p>\n",type:"Number",optional:!0}]},{params:[{name:"v1",description:"<p>red or hue value relative to\n                                the current color range.</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value\n                                relative to the current color range.</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value\n                                relative to the current color range.</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}]},{params:[{name:"value",description:"<p>a color string.</p>\n",type:"String"}]},{params:[{name:"values",description:"<p>an array containing the red, green, blue,\n                                and alpha components of the color.</p>\n",type:"Number[]"}]},{params:[{name:"color",description:"",type:"p5.Color"}]}]},green:{name:"green",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, array of\n                                        color components, or CSS color string.</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},hue:{name:"hue",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, array of\n                                        color components, or CSS color string.</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},lerpColor:{name:"lerpColor",params:[{name:"c1",description:"<p>interpolate from this color.</p>\n",type:"p5.Color"},{name:"c2",description:"<p>interpolate to this color.</p>\n",type:"p5.Color"},{name:"amt",description:"<p>number between 0 and 1.</p>\n",type:"Number"}],class:"p5",module:"Color"},lightness:{name:"lightness",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, array of\n                                        color components, or CSS color string.</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},red:{name:"red",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, array of\n                                        color components, or CSS color string.</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},saturation:{name:"saturation",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, array of\n                                        color components, or CSS color string.</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},background:{name:"background",class:"p5",module:"Color",overloads:[{params:[{name:"color",description:'<p>any value created by the <a href="#/p5/color">color()</a> function</p>\n',type:"p5.Color"}],chainable:1},{params:[{name:"colorstring",description:"<p>color string, possible formats include: integer\n                        rgb() or rgba(), percentage rgb() or rgba(),\n                        3-digit hex, 6-digit hex.</p>\n",type:"String"},{name:"a",description:"<p>opacity of the background relative to current\n                            color range (default is 0-255).</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"gray",description:"<p>specifies a value between white and black.</p>\n",type:"Number"},{name:"a",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"v1",description:"<p>red value if color mode is RGB, or hue value if color mode is HSB.</p>\n",type:"Number"},{name:"v2",description:"<p>green value if color mode is RGB, or saturation value if color mode is HSB.</p>\n",type:"Number"},{name:"v3",description:"<p>blue value if color mode is RGB, or brightness value if color mode is HSB.</p>\n",type:"Number"},{name:"a",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"values",description:"<p>an array containing the red, green, blue\n                                and alpha components of the color.</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"image",description:'<p>image created with <a href="#/p5/loadImage">loadImage()</a>\n                            or <a href="#/p5/createImage">createImage()</a>,\n                            to set as background.\n                            (must be same size as the sketch window).</p>\n',type:"p5.Image"},{name:"a",description:"",type:"Number",optional:!0}],chainable:1}]},clear:{name:"clear",params:[{name:"r",description:"<p>normalized red value.</p>\n",type:"Number"},{name:"g",description:"<p>normalized green value.</p>\n",type:"Number"},{name:"b",description:"<p>normalized blue value.</p>\n",type:"Number"},{name:"a",description:"<p>normalized alpha value.</p>\n",type:"Number"}],class:"p5",module:"Color"},colorMode:{name:"colorMode",class:"p5",module:"Color",overloads:[{params:[{name:"mode",description:"<p>either RGB, HSB or HSL, corresponding to\n                         Red/Green/Blue and Hue/Saturation/Brightness\n                         (or Lightness).</p>\n",type:"Constant"},{name:"max",description:"<p>range for all values.</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"mode",description:"",type:"Constant"},{name:"max1",description:"<p>range for the red or hue depending on the\n                             current color mode.</p>\n",type:"Number"},{name:"max2",description:"<p>range for the green or saturation depending\n                             on the current color mode.</p>\n",type:"Number"},{name:"max3",description:"<p>range for the blue or brightness/lightness\n                             depending on the current color mode.</p>\n",type:"Number"},{name:"maxA",description:"<p>range for the alpha.</p>\n",type:"Number",optional:!0}],chainable:1}]},fill:{name:"fill",class:"p5",module:"Color",overloads:[{params:[{name:"v1",description:"<p>red value if color mode is RGB or hue value if color mode is HSB.</p>\n",type:"Number"},{name:"v2",description:"<p>green value if color mode is RGB or saturation value if color mode is HSB.</p>\n",type:"Number"},{name:"v3",description:"<p>blue value if color mode is RGB or brightness value if color mode is HSB.</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"value",description:"<p>a color string.</p>\n",type:"String"}],chainable:1},{params:[{name:"gray",description:"<p>a grayscale value.</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"values",description:"<p>an array containing the red, green, blue &\n                                and alpha components of the color.</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"color",description:"<p>the fill color.</p>\n",type:"p5.Color"}],chainable:1}]},noFill:{name:"noFill",class:"p5",module:"Color"},noStroke:{name:"noStroke",class:"p5",module:"Color"},stroke:{name:"stroke",class:"p5",module:"Color",overloads:[{params:[{name:"v1",description:"<p>red value if color mode is RGB or hue value if color mode is HSB.</p>\n",type:"Number"},{name:"v2",description:"<p>green value if color mode is RGB or saturation value if color mode is HSB.</p>\n",type:"Number"},{name:"v3",description:"<p>blue value if color mode is RGB or brightness value if color mode is HSB.</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"value",description:"<p>a color string.</p>\n",type:"String"}],chainable:1},{params:[{name:"gray",description:"<p>a grayscale value.</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"values",description:"<p>an array containing the red, green, blue,\n                                and alpha components of the color.</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"color",description:"<p>the stroke color.</p>\n",type:"p5.Color"}],chainable:1}]},erase:{name:"erase",params:[{name:"strengthFill",description:"<p>a number (0-255) for the strength of erasing under a shape's interior.\n                                       Defaults to 255, which is full strength.</p>\n",type:"Number",optional:!0},{name:"strengthStroke",description:"<p>a number (0-255) for the strength of erasing under a shape's edge.\n                                       Defaults to 255, which is full strength.</p>\n",type:"Number",optional:!0}],class:"p5",module:"Color"},noErase:{name:"noErase",class:"p5",module:"Color"},arc:{name:"arc",params:[{name:"x",description:"<p>x-coordinate of the arc's ellipse.</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the arc's ellipse.</p>\n",type:"Number"},{name:"w",description:"<p>width of the arc's ellipse by default.</p>\n",type:"Number"},{name:"h",description:"<p>height of the arc's ellipse by default.</p>\n",type:"Number"},{name:"start",description:"<p>angle to start the arc, specified in radians.</p>\n",type:"Number"},{name:"stop",description:"<p>angle to stop the arc, specified in radians.</p>\n",type:"Number"},{name:"mode",description:"<p>optional parameter to determine the way of drawing\n                        the arc. either CHORD, PIE, or OPEN.</p>\n",type:"Constant",optional:!0},{name:"detail",description:"<p>optional parameter for WebGL mode only. This is to\n                        specify the number of vertices that makes up the\n                        perimeter of the arc. Default value is 25. Won't\n                        draw a stroke for a detail of more than 50.</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Shape"},ellipse:{name:"ellipse",class:"p5",module:"Shape",overloads:[{params:[{name:"x",description:"<p>x-coordinate of the center of the ellipse.</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the center of the ellipse.</p>\n",type:"Number"},{name:"w",description:"<p>width of the ellipse.</p>\n",type:"Number"},{name:"h",description:"<p>height of the ellipse.</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"w",description:"",type:"Number"},{name:"h",description:"",type:"Number"},{name:"detail",description:"<p>optional parameter for WebGL mode only. This is to\n                        specify the number of vertices that makes up the\n                        perimeter of the ellipse. Default value is 25. Won't\n                        draw a stroke for a detail of more than 50.</p>\n",type:"Integer",optional:!0}]}]},circle:{name:"circle",params:[{name:"x",description:"<p>x-coordinate of the center of the circle.</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the center of the circle.</p>\n",type:"Number"},{name:"d",description:"<p>diameter of the circle.</p>\n",type:"Number"}],class:"p5",module:"Shape"},line:{name:"line",class:"p5",module:"Shape",overloads:[{params:[{name:"x1",description:"<p>the x-coordinate of the first point.</p>\n",type:"Number"},{name:"y1",description:"<p>the y-coordinate of the first point.</p>\n",type:"Number"},{name:"x2",description:"<p>the x-coordinate of the second point.</p>\n",type:"Number"},{name:"y2",description:"<p>the y-coordinate of the second point.</p>\n",type:"Number"}],chainable:1},{params:[{name:"x1",description:"",type:"Number"},{name:"y1",description:"",type:"Number"},{name:"z1",description:"<p>the z-coordinate of the first point.</p>\n",type:"Number"},{name:"x2",description:"",type:"Number"},{name:"y2",description:"",type:"Number"},{name:"z2",description:"<p>the z-coordinate of the second point.</p>\n",type:"Number"}],chainable:1}]},point:{name:"point",class:"p5",module:"Shape",overloads:[{params:[{name:"x",description:"<p>the x-coordinate.</p>\n",type:"Number"},{name:"y",description:"<p>the y-coordinate.</p>\n",type:"Number"},{name:"z",description:"<p>the z-coordinate (for WebGL mode).</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"coordinateVector",description:"<p>the coordinate vector.</p>\n",type:"p5.Vector"}],chainable:1}]},quad:{name:"quad",class:"p5",module:"Shape",overloads:[{params:[{name:"x1",description:"<p>the x-coordinate of the first point.</p>\n",type:"Number"},{name:"y1",description:"<p>the y-coordinate of the first point.</p>\n",type:"Number"},{name:"x2",description:"<p>the x-coordinate of the second point.</p>\n",type:"Number"},{name:"y2",description:"<p>the y-coordinate of the second point.</p>\n",type:"Number"},{name:"x3",description:"<p>the x-coordinate of the third point.</p>\n",type:"Number"},{name:"y3",description:"<p>the y-coordinate of the third point.</p>\n",type:"Number"},{name:"x4",description:"<p>the x-coordinate of the fourth point.</p>\n",type:"Number"},{name:"y4",description:"<p>the y-coordinate of the fourth point.</p>\n",type:"Number"},{name:"detailX",description:"<p>number of segments in the x-direction.</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>number of segments in the y-direction.</p>\n",type:"Integer",optional:!0}],chainable:1},{params:[{name:"x1",description:"",type:"Number"},{name:"y1",description:"",type:"Number"},{name:"z1",description:"<p>the z-coordinate of the first point.</p>\n",type:"Number"},{name:"x2",description:"",type:"Number"},{name:"y2",description:"",type:"Number"},{name:"z2",description:"<p>the z-coordinate of the second point.</p>\n",type:"Number"},{name:"x3",description:"",type:"Number"},{name:"y3",description:"",type:"Number"},{name:"z3",description:"<p>the z-coordinate of the third point.</p>\n",type:"Number"},{name:"x4",description:"",type:"Number"},{name:"y4",description:"",type:"Number"},{name:"z4",description:"<p>the z-coordinate of the fourth point.</p>\n",type:"Number"},{name:"detailX",description:"",type:"Integer",optional:!0},{name:"detailY",description:"",type:"Integer",optional:!0}],chainable:1}]},rect:{name:"rect",class:"p5",module:"Shape",overloads:[{params:[{name:"x",description:"<p>x-coordinate of the rectangle.</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the rectangle.</p>\n",type:"Number"},{name:"w",description:"<p>width of the rectangle.</p>\n",type:"Number"},{name:"h",description:"<p>height of the rectangle.</p>\n",type:"Number",optional:!0},{name:"tl",description:"<p>optional radius of top-left corner.</p>\n",type:"Number",optional:!0},{name:"tr",description:"<p>optional radius of top-right corner.</p>\n",type:"Number",optional:!0},{name:"br",description:"<p>optional radius of bottom-right corner.</p>\n",type:"Number",optional:!0},{name:"bl",description:"<p>optional radius of bottom-left corner.</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"w",description:"",type:"Number"},{name:"h",description:"",type:"Number"},{name:"detailX",description:"<p>number of segments in the x-direction (for WebGL mode).</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>number of segments in the y-direction (for WebGL mode).</p>\n",type:"Integer",optional:!0}],chainable:1}]},square:{name:"square",params:[{name:"x",description:"<p>x-coordinate of the square.</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the square.</p>\n",type:"Number"},{name:"s",description:"<p>side size of the square.</p>\n",type:"Number"},{name:"tl",description:"<p>optional radius of top-left corner.</p>\n",type:"Number",optional:!0},{name:"tr",description:"<p>optional radius of top-right corner.</p>\n",type:"Number",optional:!0},{name:"br",description:"<p>optional radius of bottom-right corner.</p>\n",type:"Number",optional:!0},{name:"bl",description:"<p>optional radius of bottom-left corner.</p>\n",type:"Number",optional:!0}],class:"p5",module:"Shape"},triangle:{name:"triangle",params:[{name:"x1",description:"<p>x-coordinate of the first point.</p>\n",type:"Number"},{name:"y1",description:"<p>y-coordinate of the first point.</p>\n",type:"Number"},{name:"x2",description:"<p>x-coordinate of the second point.</p>\n",type:"Number"},{name:"y2",description:"<p>y-coordinate of the second point.</p>\n",type:"Number"},{name:"x3",description:"<p>x-coordinate of the third point.</p>\n",type:"Number"},{name:"y3",description:"<p>y-coordinate of the third point.</p>\n",type:"Number"}],class:"p5",module:"Shape"},ellipseMode:{name:"ellipseMode",params:[{name:"mode",description:"<p>either CENTER, RADIUS, CORNER, or CORNERS</p>\n",type:"Constant"}],class:"p5",module:"Shape"},noSmooth:{name:"noSmooth",class:"p5",module:"Shape"},rectMode:{name:"rectMode",params:[{name:"mode",description:"<p>either CORNER, CORNERS, CENTER, or RADIUS</p>\n",type:"Constant"}],class:"p5",module:"Shape"},smooth:{name:"smooth",class:"p5",module:"Shape"},strokeCap:{name:"strokeCap",params:[{name:"cap",description:"<p>either ROUND, SQUARE, or PROJECT</p>\n",type:"Constant"}],class:"p5",module:"Shape"},strokeJoin:{name:"strokeJoin",params:[{name:"join",description:"<p>either MITER, BEVEL, or ROUND</p>\n",type:"Constant"}],class:"p5",module:"Shape"},strokeWeight:{name:"strokeWeight",params:[{name:"weight",description:"<p>the weight of the stroke (in pixels).</p>\n",type:"Number"}],class:"p5",module:"Shape"},bezier:{name:"bezier",class:"p5",module:"Shape",overloads:[{params:[{name:"x1",description:"<p>x-coordinate for the first anchor point</p>\n",type:"Number"},{name:"y1",description:"<p>y-coordinate for the first anchor point</p>\n",type:"Number"},{name:"x2",description:"<p>x-coordinate for the first control point</p>\n",type:"Number"},{name:"y2",description:"<p>y-coordinate for the first control point</p>\n",type:"Number"},{name:"x3",description:"<p>x-coordinate for the second control point</p>\n",type:"Number"},{name:"y3",description:"<p>y-coordinate for the second control point</p>\n",type:"Number"},{name:"x4",description:"<p>x-coordinate for the second anchor point</p>\n",type:"Number"},{name:"y4",description:"<p>y-coordinate for the second anchor point</p>\n",type:"Number"}],chainable:1},{params:[{name:"x1",description:"",type:"Number"},{name:"y1",description:"",type:"Number"},{name:"z1",description:"<p>z-coordinate for the first anchor point</p>\n",type:"Number"},{name:"x2",description:"",type:"Number"},{name:"y2",description:"",type:"Number"},{name:"z2",description:"<p>z-coordinate for the first control point</p>\n",type:"Number"},{name:"x3",description:"",type:"Number"},{name:"y3",description:"",type:"Number"},{name:"z3",description:"<p>z-coordinate for the second control point</p>\n",type:"Number"},{name:"x4",description:"",type:"Number"},{name:"y4",description:"",type:"Number"},{name:"z4",description:"<p>z-coordinate for the second anchor point</p>\n",type:"Number"}],chainable:1}]},bezierDetail:{name:"bezierDetail",params:[{name:"detail",description:"<p>resolution of the curves</p>\n",type:"Number"}],class:"p5",module:"Shape"},bezierPoint:{name:"bezierPoint",params:[{name:"a",description:"<p>coordinate of first point on the curve</p>\n",type:"Number"},{name:"b",description:"<p>coordinate of first control point</p>\n",type:"Number"},{name:"c",description:"<p>coordinate of second control point</p>\n",type:"Number"},{name:"d",description:"<p>coordinate of second point on the curve</p>\n",type:"Number"},{name:"t",description:"<p>value between 0 and 1</p>\n",type:"Number"}],class:"p5",module:"Shape"},bezierTangent:{name:"bezierTangent",params:[{name:"a",description:"<p>coordinate of first point on the curve</p>\n",type:"Number"},{name:"b",description:"<p>coordinate of first control point</p>\n",type:"Number"},{name:"c",description:"<p>coordinate of second control point</p>\n",type:"Number"},{name:"d",description:"<p>coordinate of second point on the curve</p>\n",type:"Number"},{name:"t",description:"<p>value between 0 and 1</p>\n",type:"Number"}],class:"p5",module:"Shape"},curve:{name:"curve",class:"p5",module:"Shape",overloads:[{params:[{name:"x1",description:"<p>x-coordinate for the beginning control point</p>\n",type:"Number"},{name:"y1",description:"<p>y-coordinate for the beginning control point</p>\n",type:"Number"},{name:"x2",description:"<p>x-coordinate for the first point</p>\n",type:"Number"},{name:"y2",description:"<p>y-coordinate for the first point</p>\n",type:"Number"},{name:"x3",description:"<p>x-coordinate for the second point</p>\n",type:"Number"},{name:"y3",description:"<p>y-coordinate for the second point</p>\n",type:"Number"},{name:"x4",description:"<p>x-coordinate for the ending control point</p>\n",type:"Number"},{name:"y4",description:"<p>y-coordinate for the ending control point</p>\n",type:"Number"}],chainable:1},{params:[{name:"x1",description:"",type:"Number"},{name:"y1",description:"",type:"Number"},{name:"z1",description:"<p>z-coordinate for the beginning control point</p>\n",type:"Number"},{name:"x2",description:"",type:"Number"},{name:"y2",description:"",type:"Number"},{name:"z2",description:"<p>z-coordinate for the first point</p>\n",type:"Number"},{name:"x3",description:"",type:"Number"},{name:"y3",description:"",type:"Number"},{name:"z3",description:"<p>z-coordinate for the second point</p>\n",type:"Number"},{name:"x4",description:"",type:"Number"},{name:"y4",description:"",type:"Number"},{name:"z4",description:"<p>z-coordinate for the ending control point</p>\n",type:"Number"}],chainable:1}]},curveDetail:{name:"curveDetail",params:[{name:"resolution",description:"<p>resolution of the curves</p>\n",type:"Number"}],class:"p5",module:"Shape"},curveTightness:{name:"curveTightness",params:[{name:"amount",description:"<p>amount of deformation from the original vertices</p>\n",type:"Number"}],class:"p5",module:"Shape"},curvePoint:{name:"curvePoint",params:[{name:"a",description:"<p>coordinate of first control point of the curve</p>\n",type:"Number"},{name:"b",description:"<p>coordinate of first point</p>\n",type:"Number"},{name:"c",description:"<p>coordinate of second point</p>\n",type:"Number"},{name:"d",description:"<p>coordinate of second control point</p>\n",type:"Number"},{name:"t",description:"<p>value between 0 and 1</p>\n",type:"Number"}],class:"p5",module:"Shape"},curveTangent:{name:"curveTangent",params:[{name:"a",description:"<p>coordinate of first control point</p>\n",type:"Number"},{name:"b",description:"<p>coordinate of first point on the curve</p>\n",type:"Number"},{name:"c",description:"<p>coordinate of second point on the curve</p>\n",type:"Number"},{name:"d",description:"<p>coordinate of second conrol point</p>\n",type:"Number"},{name:"t",description:"<p>value between 0 and 1</p>\n",type:"Number"}],class:"p5",module:"Shape"},beginContour:{name:"beginContour",class:"p5",module:"Shape"},beginShape:{name:"beginShape",params:[{name:"kind",description:"<p>either POINTS, LINES, TRIANGLES, TRIANGLE_FAN\n                               TRIANGLE_STRIP, QUADS, QUAD_STRIP or TESS</p>\n",type:"Constant",optional:!0}],class:"p5",module:"Shape"},bezierVertex:{name:"bezierVertex",class:"p5",module:"Shape",overloads:[{params:[{name:"x2",description:"<p>x-coordinate for the first control point</p>\n",type:"Number"},{name:"y2",description:"<p>y-coordinate for the first control point</p>\n",type:"Number"},{name:"x3",description:"<p>x-coordinate for the second control point</p>\n",type:"Number"},{name:"y3",description:"<p>y-coordinate for the second control point</p>\n",type:"Number"},{name:"x4",description:"<p>x-coordinate for the anchor point</p>\n",type:"Number"},{name:"y4",description:"<p>y-coordinate for the anchor point</p>\n",type:"Number"}],chainable:1},{params:[{name:"x2",description:"",type:"Number"},{name:"y2",description:"",type:"Number"},{name:"z2",description:"<p>z-coordinate for the first control point (for WebGL mode)</p>\n",type:"Number"},{name:"x3",description:"",type:"Number"},{name:"y3",description:"",type:"Number"},{name:"z3",description:"<p>z-coordinate for the second control point (for WebGL mode)</p>\n",type:"Number"},{name:"x4",description:"",type:"Number"},{name:"y4",description:"",type:"Number"},{name:"z4",description:"<p>z-coordinate for the anchor point (for WebGL mode)</p>\n",type:"Number"}],chainable:1}]},curveVertex:{name:"curveVertex",class:"p5",module:"Shape",overloads:[{params:[{name:"x",description:"<p>x-coordinate of the vertex</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the vertex</p>\n",type:"Number"}],chainable:1},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"<p>z-coordinate of the vertex (for WebGL mode)</p>\n",type:"Number",optional:!0}],chainable:1}]},endContour:{name:"endContour",class:"p5",module:"Shape"},endShape:{name:"endShape",params:[{name:"mode",description:"<p>use CLOSE to close the shape</p>\n",type:"Constant",optional:!0}],class:"p5",module:"Shape"},quadraticVertex:{name:"quadraticVertex",class:"p5",module:"Shape",overloads:[{params:[{name:"cx",description:"<p>x-coordinate for the control point</p>\n",type:"Number"},{name:"cy",description:"<p>y-coordinate for the control point</p>\n",type:"Number"},{name:"x3",description:"<p>x-coordinate for the anchor point</p>\n",type:"Number"},{name:"y3",description:"<p>y-coordinate for the anchor point</p>\n",type:"Number"}],chainable:1},{params:[{name:"cx",description:"",type:"Number"},{name:"cy",description:"",type:"Number"},{name:"cz",description:"<p>z-coordinate for the control point (for WebGL mode)</p>\n",type:"Number"},{name:"x3",description:"",type:"Number"},{name:"y3",description:"",type:"Number"},{name:"z3",description:"<p>z-coordinate for the anchor point (for WebGL mode)</p>\n",type:"Number"}],chainable:1}]},vertex:{name:"vertex",class:"p5",module:"Shape",overloads:[{params:[{name:"x",description:"<p>x-coordinate of the vertex</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the vertex</p>\n",type:"Number"}],chainable:1},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"<p>z-coordinate of the vertex.\n                      Defaults to 0 if not specified.</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number",optional:!0},{name:"u",description:"<p>the vertex's texture u-coordinate</p>\n",type:"Number",optional:!0},{name:"v",description:"<p>the vertex's texture v-coordinate</p>\n",type:"Number",optional:!0}],chainable:1}]},normal:{name:"normal",class:"p5",module:"Shape",overloads:[{params:[{name:"vector",description:"<p>A p5.Vector representing the vertex normal.</p>\n",type:"Vector"}],chainable:1},{params:[{name:"x",description:"<p>The x component of the vertex normal.</p>\n",type:"Number"},{name:"y",description:"<p>The y component of the vertex normal.</p>\n",type:"Number"},{name:"z",description:"<p>The z component of the vertex normal.</p>\n",type:"Number"}],chainable:1}]},VERSION:{name:"VERSION",class:"p5",module:"Constants"},P2D:{name:"P2D",class:"p5",module:"Constants"},WEBGL:{name:"WEBGL",class:"p5",module:"Constants"},WEBGL2:{name:"WEBGL2",class:"p5",module:"Constants"},ARROW:{name:"ARROW",class:"p5",module:"Constants"},CROSS:{name:"CROSS",class:"p5",module:"Constants"},HAND:{name:"HAND",class:"p5",module:"Constants"},MOVE:{name:"MOVE",class:"p5",module:"Constants"},TEXT:{name:"TEXT",class:"p5",module:"Constants"},WAIT:{name:"WAIT",class:"p5",module:"Constants"},HALF_PI:{name:"HALF_PI",class:"p5",module:"Constants"},PI:{name:"PI",class:"p5",module:"Constants"},QUARTER_PI:{name:"QUARTER_PI",class:"p5",module:"Constants"},TAU:{name:"TAU",class:"p5",module:"Constants"},TWO_PI:{name:"TWO_PI",class:"p5",module:"Constants"},DEGREES:{name:"DEGREES",class:"p5",module:"Constants"},RADIANS:{name:"RADIANS",class:"p5",module:"Constants"},CORNER:{name:"CORNER",class:"p5",module:"Constants"},CORNERS:{name:"CORNERS",class:"p5",module:"Constants"},RADIUS:{name:"RADIUS",class:"p5",module:"Constants"},RIGHT:{name:"RIGHT",class:"p5",module:"Constants"},LEFT:{name:"LEFT",class:"p5",module:"Constants"},CENTER:{name:"CENTER",class:"p5",module:"Constants"},TOP:{name:"TOP",class:"p5",module:"Constants"},BOTTOM:{name:"BOTTOM",class:"p5",module:"Constants"},BASELINE:{name:"BASELINE",class:"p5",module:"Constants"},POINTS:{name:"POINTS",class:"p5",module:"Constants"},LINES:{name:"LINES",class:"p5",module:"Constants"},LINE_STRIP:{name:"LINE_STRIP",class:"p5",module:"Constants"},LINE_LOOP:{name:"LINE_LOOP",class:"p5",module:"Constants"},TRIANGLES:{name:"TRIANGLES",class:"p5",module:"Constants"},TRIANGLE_FAN:{name:"TRIANGLE_FAN",class:"p5",module:"Constants"},TRIANGLE_STRIP:{name:"TRIANGLE_STRIP",class:"p5",module:"Constants"},QUADS:{name:"QUADS",class:"p5",module:"Constants"},QUAD_STRIP:{name:"QUAD_STRIP",class:"p5",module:"Constants"},TESS:{name:"TESS",class:"p5",module:"Constants"},CLOSE:{name:"CLOSE",class:"p5",module:"Constants"},OPEN:{name:"OPEN",class:"p5",module:"Constants"},CHORD:{name:"CHORD",class:"p5",module:"Constants"},PIE:{name:"PIE",class:"p5",module:"Constants"},PROJECT:{name:"PROJECT",class:"p5",module:"Constants"},SQUARE:{name:"SQUARE",class:"p5",module:"Constants"},ROUND:{name:"ROUND",class:"p5",module:"Constants"},BEVEL:{name:"BEVEL",class:"p5",module:"Constants"},MITER:{name:"MITER",class:"p5",module:"Constants"},RGB:{name:"RGB",class:"p5",module:"Constants"},HSB:{name:"HSB",class:"p5",module:"Constants"},HSL:{name:"HSL",class:"p5",module:"Constants"},AUTO:{name:"AUTO",class:"p5",module:"Constants"},ALT:{name:"ALT",class:"p5",module:"Constants"},BACKSPACE:{name:"BACKSPACE",class:"p5",module:"Constants"},CONTROL:{name:"CONTROL",class:"p5",module:"Constants"},DELETE:{name:"DELETE",class:"p5",module:"Constants"},DOWN_ARROW:{name:"DOWN_ARROW",class:"p5",module:"Constants"},ENTER:{name:"ENTER",class:"p5",module:"Constants"},ESCAPE:{name:"ESCAPE",class:"p5",module:"Constants"},LEFT_ARROW:{name:"LEFT_ARROW",class:"p5",module:"Constants"},OPTION:{name:"OPTION",class:"p5",module:"Constants"},RETURN:{name:"RETURN",class:"p5",module:"Constants"},RIGHT_ARROW:{name:"RIGHT_ARROW",class:"p5",module:"Constants"},SHIFT:{name:"SHIFT",class:"p5",module:"Constants"},TAB:{name:"TAB",class:"p5",module:"Constants"},UP_ARROW:{name:"UP_ARROW",class:"p5",module:"Constants"},BLEND:{name:"BLEND",class:"p5",module:"Constants"},REMOVE:{name:"REMOVE",class:"p5",module:"Constants"},ADD:{name:"ADD",class:"p5",module:"Constants"},DARKEST:{name:"DARKEST",class:"p5",module:"Constants"},LIGHTEST:{name:"LIGHTEST",class:"p5",module:"Constants"},DIFFERENCE:{name:"DIFFERENCE",class:"p5",module:"Constants"},SUBTRACT:{name:"SUBTRACT",class:"p5",module:"Constants"},EXCLUSION:{name:"EXCLUSION",class:"p5",module:"Constants"},MULTIPLY:{name:"MULTIPLY",class:"p5",module:"Constants"},SCREEN:{name:"SCREEN",class:"p5",module:"Constants"},REPLACE:{name:"REPLACE",class:"p5",module:"Constants"},OVERLAY:{name:"OVERLAY",class:"p5",module:"Constants"},HARD_LIGHT:{name:"HARD_LIGHT",class:"p5",module:"Constants"},SOFT_LIGHT:{name:"SOFT_LIGHT",class:"p5",module:"Constants"},DODGE:{name:"DODGE",class:"p5",module:"Constants"},BURN:{name:"BURN",class:"p5",module:"Constants"},THRESHOLD:{name:"THRESHOLD",class:"p5",module:"Constants"},GRAY:{name:"GRAY",class:"p5",module:"Constants"},OPAQUE:{name:"OPAQUE",class:"p5",module:"Constants"},INVERT:{name:"INVERT",class:"p5",module:"Constants"},POSTERIZE:{name:"POSTERIZE",class:"p5",module:"Constants"},DILATE:{name:"DILATE",class:"p5",module:"Constants"},ERODE:{name:"ERODE",class:"p5",module:"Constants"},BLUR:{name:"BLUR",class:"p5",module:"Constants"},NORMAL:{name:"NORMAL",class:"p5",module:"Constants"},ITALIC:{name:"ITALIC",class:"p5",module:"Constants"},BOLD:{name:"BOLD",class:"p5",module:"Constants"},BOLDITALIC:{name:"BOLDITALIC",class:"p5",module:"Constants"},CHAR:{name:"CHAR",class:"p5",module:"Constants"},WORD:{name:"WORD",class:"p5",module:"Constants"},LINEAR:{name:"LINEAR",class:"p5",module:"Constants"},QUADRATIC:{name:"QUADRATIC",class:"p5",module:"Constants"},BEZIER:{name:"BEZIER",class:"p5",module:"Constants"},CURVE:{name:"CURVE",class:"p5",module:"Constants"},STROKE:{name:"STROKE",class:"p5",module:"Constants"},FILL:{name:"FILL",class:"p5",module:"Constants"},TEXTURE:{name:"TEXTURE",class:"p5",module:"Constants"},IMMEDIATE:{name:"IMMEDIATE",class:"p5",module:"Constants"},IMAGE:{name:"IMAGE",class:"p5",module:"Constants"},NEAREST:{name:"NEAREST",class:"p5",module:"Constants"},REPEAT:{name:"REPEAT",class:"p5",module:"Constants"},CLAMP:{name:"CLAMP",class:"p5",module:"Constants"},MIRROR:{name:"MIRROR",class:"p5",module:"Constants"},LANDSCAPE:{name:"LANDSCAPE",class:"p5",module:"Constants"},PORTRAIT:{name:"PORTRAIT",class:"p5",module:"Constants"},GRID:{name:"GRID",class:"p5",module:"Constants"},AXES:{name:"AXES",class:"p5",module:"Constants"},LABEL:{name:"LABEL",class:"p5",module:"Constants"},FALLBACK:{name:"FALLBACK",class:"p5",module:"Constants"},CONTAIN:{name:"CONTAIN",class:"p5",module:"Constants"},COVER:{name:"COVER",class:"p5",module:"Constants"},UNSIGNED_BYTE:{name:"UNSIGNED_BYTE",class:"p5",module:"Constants"},UNSIGNED_INT:{name:"UNSIGNED_INT",class:"p5",module:"Constants"},FLOAT:{name:"FLOAT",class:"p5",module:"Constants"},RGBA:{name:"RGBA",class:"p5",module:"Constants"},print:{name:"print",params:[{name:"contents",description:"<p>any combination of Number, String, Object, Boolean,\n                      Array to print</p>\n",type:"Any"}],class:"p5",module:"Environment"},frameCount:{name:"frameCount",class:"p5",module:"Environment"},deltaTime:{name:"deltaTime",class:"p5",module:"Environment"},focused:{name:"focused",class:"p5",module:"Environment"},cursor:{name:"cursor",params:[{name:"type",description:"<p>Built-In: either ARROW, CROSS, HAND, MOVE, TEXT and WAIT\n                              Native CSS properties: 'grab', 'progress', 'cell' etc.\n                              External: path for cursor's images\n                              (Allowed File extensions: .cur, .gif, .jpg, .jpeg, .png)\n                              For more information on Native CSS cursors and url visit:\n                              <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\">https://developer.mozilla.org/en-US/docs/Web/CSS/cursor</a></p>\n",type:"String|Constant"},{name:"x",description:"<p>the horizontal active spot of the cursor (must be less than 32)</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>the vertical active spot of the cursor (must be less than 32)</p>\n",type:"Number",optional:!0}],class:"p5",module:"Environment"},frameRate:{name:"frameRate",class:"p5",module:"Environment",overloads:[{params:[{name:"fps",description:"<p>number of frames to be displayed every second</p>\n",type:"Number"}],chainable:1},{params:[]}]},getTargetFrameRate:{name:"getTargetFrameRate",class:"p5",module:"Environment"},noCursor:{name:"noCursor",class:"p5",module:"Environment"},webglVersion:{name:"webglVersion",class:"p5",module:"Environment"},displayWidth:{name:"displayWidth",class:"p5",module:"Environment"},displayHeight:{name:"displayHeight",class:"p5",module:"Environment"},windowWidth:{name:"windowWidth",class:"p5",module:"Environment"},windowHeight:{name:"windowHeight",class:"p5",module:"Environment"},windowResized:{name:"windowResized",params:[{name:"event",description:"<p>optional Event callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Environment"},width:{name:"width",class:"p5",module:"Environment"},height:{name:"height",class:"p5",module:"Environment"},fullscreen:{name:"fullscreen",params:[{name:"val",description:"<p>whether the sketch should be in fullscreen mode\nor not</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"Environment"},pixelDensity:{name:"pixelDensity",class:"p5",module:"Environment",overloads:[{params:[{name:"val",description:"<p>whether or how much the sketch should scale</p>\n",type:"Number"}],chainable:1},{params:[]}]},displayDensity:{name:"displayDensity",class:"p5",module:"Environment"},getURL:{name:"getURL",class:"p5",module:"Environment"},getURLPath:{name:"getURLPath",class:"p5",module:"Environment"},getURLParams:{name:"getURLParams",class:"p5",module:"Environment"},preload:{name:"preload",class:"p5",module:"Structure"},setup:{name:"setup",class:"p5",module:"Structure"},draw:{name:"draw",class:"p5",module:"Structure"},remove:{name:"remove",class:"p5",module:"Structure"},disableFriendlyErrors:{name:"disableFriendlyErrors",class:"p5",module:"Structure"},let:{name:"let",class:"p5",module:"Foundation"},const:{name:"const",class:"p5",module:"Foundation"},"===":{name:"===",class:"p5",module:"Foundation"},">":{name:">",class:"p5",module:"Foundation"},">=":{name:">=",class:"p5",module:"Foundation"},"<":{name:"<",class:"p5",module:"Foundation"},"<=":{name:"<=",class:"p5",module:"Foundation"},"if-else":{name:"if-else",class:"p5",module:"Foundation"},function:{name:"function",class:"p5",module:"Foundation"},return:{name:"return",class:"p5",module:"Foundation"},boolean:{name:"boolean",params:[{name:"n",description:"<p>value to parse</p>\n",type:"String|Boolean|Number|Array"}],class:"p5",module:"Data"},string:{name:"string",class:"p5",module:"Foundation"},number:{name:"number",class:"p5",module:"Foundation"},object:{name:"object",class:"p5",module:"Foundation"},class:{name:"class",class:"p5",module:"Foundation"},for:{name:"for",class:"p5",module:"Foundation"},while:{name:"while",class:"p5",module:"Foundation"},createCanvas:{name:"createCanvas",class:"p5",module:"Rendering",overloads:[{params:[{name:"w",description:"<p>width of the canvas</p>\n",type:"Number"},{name:"h",description:"<p>height of the canvas</p>\n",type:"Number"},{name:"renderer",description:"<p>either P2D or WEBGL</p>\n",type:"Constant",optional:!0},{name:"canvas",description:"<p>existing html canvas element</p>\n",type:"Object",optional:!0}]},{params:[{name:"w",description:"",type:"Number"},{name:"h",description:"",type:"Number"},{name:"canvas",description:"",type:"Object",optional:!0}]}]},resizeCanvas:{name:"resizeCanvas",params:[{name:"w",description:"<p>width of the canvas</p>\n",type:"Number"},{name:"h",description:"<p>height of the canvas</p>\n",type:"Number"},{name:"noRedraw",description:"<p>don't redraw the canvas immediately</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"Rendering"},noCanvas:{name:"noCanvas",class:"p5",module:"Rendering"},createGraphics:{name:"createGraphics",class:"p5",module:"Rendering",overloads:[{params:[{name:"w",description:"<p>width of the offscreen graphics buffer</p>\n",type:"Number"},{name:"h",description:"<p>height of the offscreen graphics buffer</p>\n",type:"Number"},{name:"renderer",description:"<p>either P2D or WEBGL\n                              undefined defaults to p2d</p>\n",type:"Constant",optional:!0},{name:"canvas",description:"<p>existing html canvas element</p>\n",type:"Object",optional:!0}]},{params:[{name:"w",description:"",type:"Number"},{name:"h",description:"",type:"Number"},{name:"canvas",description:"",type:"Object",optional:!0}]}]},createFramebuffer:{name:"createFramebuffer",params:[{name:"options",description:"<p>An optional object with configuration</p>\n",type:"Object",optional:!0}],class:"p5",module:"Rendering"},blendMode:{name:"blendMode",params:[{name:"mode",description:"<p>blend mode to set for canvas.\n               either BLEND, DARKEST, LIGHTEST, DIFFERENCE, MULTIPLY,\n               EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,\n               SOFT_LIGHT, DODGE, BURN, ADD, REMOVE or SUBTRACT</p>\n",type:"Constant"}],class:"p5",module:"Rendering"},drawingContext:{name:"drawingContext",class:"p5",module:"Rendering"},noLoop:{name:"noLoop",class:"p5",module:"Structure"},loop:{name:"loop",class:"p5",module:"Structure"},isLooping:{name:"isLooping",class:"p5",module:"Structure"},push:{name:"push",class:"p5",module:"Structure"},pop:{name:"pop",class:"p5",module:"Structure"},redraw:{name:"redraw",params:[{name:"n",description:"<p>Redraw for n-times. The default value is 1.</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Structure"},p5:{name:"p5",params:[{name:"sketch",description:"<p>a function containing a p5.js sketch</p>\n",type:"Object"},{name:"node",description:"<p>ID or pointer to HTML DOM node to contain sketch in</p>\n",type:"String|Object"}],class:"p5",module:"Structure"},applyMatrix:{name:"applyMatrix",class:"p5",module:"Transform",overloads:[{params:[{name:"arr",description:"<p>an array of numbers - should be 6 or 16 length (2\xd73 or 4\xd74 matrix values)</p>\n",type:"Array"}],chainable:1},{params:[{name:"a",description:"<p>numbers which define the 2\xd73 or 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"b",description:"<p>numbers which define the 2\xd73 or 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"c",description:"<p>numbers which define the 2\xd73 or 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"d",description:"<p>numbers which define the 2\xd73 or 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"e",description:"<p>numbers which define the 2\xd73 or 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"f",description:"<p>numbers which define the 2\xd73 or 4\xd74 matrix to be multiplied</p>\n",type:"Number"}],chainable:1},{params:[{name:"a",description:"",type:"Number"},{name:"b",description:"",type:"Number"},{name:"c",description:"",type:"Number"},{name:"d",description:"",type:"Number"},{name:"e",description:"",type:"Number"},{name:"f",description:"",type:"Number"},{name:"g",description:"<p>numbers which define the 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"h",description:"<p>numbers which define the 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"i",description:"<p>numbers which define the 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"j",description:"<p>numbers which define the 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"k",description:"<p>numbers which define the 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"l",description:"<p>numbers which define the 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"m",description:"<p>numbers which define the 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"n",description:"<p>numbers which define the 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"o",description:"<p>numbers which define the 4\xd74 matrix to be multiplied</p>\n",type:"Number"},{name:"p",description:"<p>numbers which define the 4\xd74 matrix to be multiplied</p>\n",type:"Number"}],chainable:1}]},resetMatrix:{name:"resetMatrix",class:"p5",module:"Transform"},rotate:{name:"rotate",params:[{name:"angle",description:"<p>the angle of rotation, specified in radians\n                       or degrees, depending on current angleMode</p>\n",type:"Number"},{name:"axis",description:"<p>(in 3d) the axis to rotate around</p>\n",type:"p5.Vector|Number[]",optional:!0}],class:"p5",module:"Transform"},rotateX:{name:"rotateX",params:[{name:"angle",description:"<p>the angle of rotation, specified in radians\n                       or degrees, depending on current angleMode</p>\n",type:"Number"}],class:"p5",module:"Transform"},rotateY:{name:"rotateY",params:[{name:"angle",description:"<p>the angle of rotation, specified in radians\n                       or degrees, depending on current angleMode</p>\n",type:"Number"}],class:"p5",module:"Transform"},rotateZ:{name:"rotateZ",params:[{name:"angle",description:"<p>the angle of rotation, specified in radians\n                       or degrees, depending on current angleMode</p>\n",type:"Number"}],class:"p5",module:"Transform"},scale:{name:"scale",class:"p5",module:"Transform",overloads:[{params:[{name:"s",description:"<p>percent to scale the object, or percentage to\n                     scale the object in the x-axis if multiple arguments\n                     are given</p>\n",type:"Number|p5.Vector|Number[]"},{name:"y",description:"<p>percent to scale the object in the y-axis</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>percent to scale the object in the z-axis (webgl only)</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"scales",description:"<p>per-axis percents to scale the object</p>\n",type:"p5.Vector|Number[]"}],chainable:1}]},shearX:{name:"shearX",params:[{name:"angle",description:"<p>angle of shear specified in radians or degrees,\n                       depending on current angleMode</p>\n",type:"Number"}],class:"p5",module:"Transform"},shearY:{name:"shearY",params:[{name:"angle",description:"<p>angle of shear specified in radians or degrees,\n                       depending on current angleMode</p>\n",type:"Number"}],class:"p5",module:"Transform"},translate:{name:"translate",class:"p5",module:"Transform",overloads:[{params:[{name:"x",description:"<p>left/right translation</p>\n",type:"Number"},{name:"y",description:"<p>up/down translation</p>\n",type:"Number"},{name:"z",description:"<p>forward/backward translation (WEBGL only)</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"vector",description:"<p>the vector to translate by</p>\n",type:"p5.Vector"}],chainable:1}]},storeItem:{name:"storeItem",params:[{name:"key",description:"",type:"String"},{name:"value",description:"",type:"String|Number|Object|Boolean|p5.Color|p5.Vector"}],class:"p5",module:"Data"},getItem:{name:"getItem",params:[{name:"key",description:"<p>name that you wish to use to store in local storage</p>\n",type:"String"}],class:"p5",module:"Data"},clearStorage:{name:"clearStorage",class:"p5",module:"Data"},removeItem:{name:"removeItem",params:[{name:"key",description:"",type:"String"}],class:"p5",module:"Data"},createStringDict:{name:"createStringDict",class:"p5",module:"Data",overloads:[{params:[{name:"key",description:"",type:"String"},{name:"value",description:"",type:"String"}]},{params:[{name:"object",description:"<p>object</p>\n",type:"Object"}]}]},createNumberDict:{name:"createNumberDict",class:"p5",module:"Data",overloads:[{params:[{name:"key",description:"",type:"Number"},{name:"value",description:"",type:"Number"}]},{params:[{name:"object",description:"<p>object</p>\n",type:"Object"}]}]},select:{name:"select",params:[{name:"selectors",description:"<p>CSS selector string of element to search for</p>\n",type:"String"},{name:"container",description:'<p>CSS selector string, <a href="#/p5.Element">p5.Element</a>, or\n                                            HTML element to search within</p>\n',type:"String|p5.Element|HTMLElement",optional:!0}],class:"p5",module:"DOM"},selectAll:{name:"selectAll",params:[{name:"selectors",description:"<p>CSS selector string of elements to search for</p>\n",type:"String"},{name:"container",description:'<p>CSS selector string, <a href="#/p5.Element">p5.Element</a>\n                                            , or HTML element to search within</p>\n',type:"String|p5.Element|HTMLElement",optional:!0}],class:"p5",module:"DOM"},removeElements:{name:"removeElements",class:"p5",module:"DOM"},changed:{name:"changed",params:[{name:"fxn",description:"<p>function to be fired when the value of\n                               an element changes.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5",module:"DOM"},input:{name:"input",params:[{name:"fxn",description:"<p>function to be fired when any user input is\n                               detected within the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5",module:"DOM"},createDiv:{name:"createDiv",params:[{name:"html",description:"<p>inner HTML for element created</p>\n",type:"String",optional:!0}],class:"p5",module:"DOM"},createP:{name:"createP",params:[{name:"html",description:"<p>inner HTML for element created</p>\n",type:"String",optional:!0}],class:"p5",module:"DOM"},createSpan:{name:"createSpan",params:[{name:"html",description:"<p>inner HTML for element created</p>\n",type:"String",optional:!0}],class:"p5",module:"DOM"},createImg:{name:"createImg",class:"p5",module:"DOM",overloads:[{params:[{name:"src",description:"<p>src path or url for image</p>\n",type:"String"},{name:"alt",description:'<p><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Img#Attributes">alternate text</a> to be used if image does not load. You can use also an empty string (<code>""</code>) if that an image is not intended to be viewed.</p>\n',type:"String"}]},{params:[{name:"src",description:"",type:"String"},{name:"alt",description:"",type:"String"},{name:"crossOrigin",description:"<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes\">crossOrigin property</a> of the <code>img</code> element; use either 'anonymous' or 'use-credentials' to retrieve the image with cross-origin access (for later use with <code>canvas</code>. if an empty string(<code>\"\"</code>) is passed, CORS is not used</p>\n",type:"String"},{name:"successCallback",description:'<p>callback to be called once image data is loaded with the <a href="#/p5.Element">p5.Element</a> as argument</p>\n',type:"Function",optional:!0}]}]},createA:{name:"createA",params:[{name:"href",description:"<p>url of page to link to</p>\n",type:"String"},{name:"html",description:"<p>inner html of link element to display</p>\n",type:"String"},{name:"target",description:"<p>target where new link should open,\n                            could be _blank, _self, _parent, _top.</p>\n",type:"String",optional:!0}],class:"p5",module:"DOM"},createSlider:{name:"createSlider",params:[{name:"min",description:"<p>minimum value of the slider</p>\n",type:"Number"},{name:"max",description:"<p>maximum value of the slider</p>\n",type:"Number"},{name:"value",description:"<p>default value of the slider</p>\n",type:"Number",optional:!0},{name:"step",description:"<p>step size for each tick of the slider (if step is set to 0, the slider will move continuously from the minimum to the maximum value)</p>\n",type:"Number",optional:!0}],class:"p5",module:"DOM"},createButton:{name:"createButton",params:[{name:"label",description:"<p>label displayed on the button</p>\n",type:"String"},{name:"value",description:"<p>value of the button</p>\n",type:"String",optional:!0}],class:"p5",module:"DOM"},createCheckbox:{name:"createCheckbox",params:[{name:"label",description:"<p>label displayed after checkbox</p>\n",type:"String",optional:!0},{name:"value",description:"<p>value of the checkbox; checked is true, unchecked is false</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"DOM"},createSelect:{name:"createSelect",class:"p5",module:"DOM",overloads:[{params:[{name:"multiple",description:"<p>true if dropdown should support multiple selections</p>\n",type:"Boolean",optional:!0}]},{params:[{name:"existing",description:"<p>DOM select element</p>\n",type:"Object"}]}]},createRadio:{name:"createRadio",class:"p5",module:"DOM",overloads:[{params:[{name:"containerElement",description:"<p>A container HTML Element, either a div\nor span, inside which all existing radio inputs will be considered as options.</p>\n",type:"Object"},{name:"name",description:"<p>A name parameter for each Input Element.</p>\n",type:"String",optional:!0}]},{params:[{name:"name",description:"",type:"String"}]},{params:[]}]},createColorPicker:{name:"createColorPicker",params:[{name:"value",description:"<p>default color of element</p>\n",type:"String|p5.Color",optional:!0}],class:"p5",module:"DOM"},createInput:{name:"createInput",class:"p5",module:"DOM",overloads:[{params:[{name:"value",description:"<p>default value of the input box</p>\n",type:"String"},{name:"type",description:"<p>type of text, ie text, password etc. Defaults to text.\n  Needs a value to be specified first.</p>\n",type:"String",optional:!0}]},{params:[{name:"value",description:"",type:"String",optional:!0}]}]},createFileInput:{name:"createFileInput",params:[{name:"callback",description:"<p>callback function for when a file is loaded</p>\n",type:"Function"},{name:"multiple",description:"<p>optional, to allow multiple files to be selected</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"DOM"},createVideo:{name:"createVideo",params:[{name:"src",description:"<p>path to a video file, or array of paths for\n                            supporting different browsers</p>\n",type:"String|String[]"},{name:"callback",description:"<p>callback function to be called upon\n                            'canplaythrough' event fire, that is, when the\n                            browser can play the media, and estimates that\n                            enough data has been loaded to play the media\n                            up to its end without having to stop for\n                            further buffering of content</p>\n",type:"Function",optional:!0}],class:"p5",module:"DOM"},createAudio:{name:"createAudio",params:[{name:"src",description:"<p>path to an audio file, or array of paths\n                            for supporting different browsers</p>\n",type:"String|String[]",optional:!0},{name:"callback",description:"<p>callback function to be called upon\n                            'canplaythrough' event fire, that is, when the\n                            browser can play the media, and estimates that\n                            enough data has been loaded to play the media\n                            up to its end without having to stop for\n                            further buffering of content</p>\n",type:"Function",optional:!0}],class:"p5",module:"DOM"},createCapture:{name:"createCapture",params:[{name:"type",description:"<p>type of capture, either VIDEO or\n                                  AUDIO if none specified, default both,\n                                  or a Constraints object</p>\n",type:"String|Constant|Object"},{name:"callback",description:"<p>function to be called once\n                                  stream has loaded</p>\n",type:"Function",optional:!0}],class:"p5",module:"DOM"},createElement:{name:"createElement",params:[{name:"tag",description:"<p>tag for the new element</p>\n",type:"String"},{name:"content",description:"<p>html content to be inserted into the element</p>\n",type:"String",optional:!0}],class:"p5",module:"DOM"},deviceOrientation:{name:"deviceOrientation",class:"p5",module:"Events"},accelerationX:{name:"accelerationX",class:"p5",module:"Events"},accelerationY:{name:"accelerationY",class:"p5",module:"Events"},accelerationZ:{name:"accelerationZ",class:"p5",module:"Events"},pAccelerationX:{name:"pAccelerationX",class:"p5",module:"Events"},pAccelerationY:{name:"pAccelerationY",class:"p5",module:"Events"},pAccelerationZ:{name:"pAccelerationZ",class:"p5",module:"Events"},rotationX:{name:"rotationX",class:"p5",module:"Events"},rotationY:{name:"rotationY",class:"p5",module:"Events"},rotationZ:{name:"rotationZ",class:"p5",module:"Events"},pRotationX:{name:"pRotationX",class:"p5",module:"Events"},pRotationY:{name:"pRotationY",class:"p5",module:"Events"},pRotationZ:{name:"pRotationZ",class:"p5",module:"Events"},turnAxis:{name:"turnAxis",class:"p5",module:"Events"},setMoveThreshold:{name:"setMoveThreshold",params:[{name:"value",description:"<p>The threshold value</p>\n",type:"Number"}],class:"p5",module:"Events"},setShakeThreshold:{name:"setShakeThreshold",params:[{name:"value",description:"<p>The threshold value</p>\n",type:"Number"}],class:"p5",module:"Events"},deviceMoved:{name:"deviceMoved",class:"p5",module:"Events"},deviceTurned:{name:"deviceTurned",class:"p5",module:"Events"},deviceShaken:{name:"deviceShaken",class:"p5",module:"Events"},keyIsPressed:{name:"keyIsPressed",class:"p5",module:"Events"},key:{name:"key",class:"p5",module:"Events"},keyCode:{name:"keyCode",class:"p5",module:"Events"},keyPressed:{name:"keyPressed",params:[{name:"event",description:"<p>optional KeyboardEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},keyReleased:{name:"keyReleased",params:[{name:"event",description:"<p>optional KeyboardEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},keyTyped:{name:"keyTyped",params:[{name:"event",description:"<p>optional KeyboardEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},keyIsDown:{name:"keyIsDown",params:[{name:"code",description:"<p>The key to check for.</p>\n",type:"Number"}],class:"p5",module:"Events"},movedX:{name:"movedX",class:"p5",module:"Events"},movedY:{name:"movedY",class:"p5",module:"Events"},mouseX:{name:"mouseX",class:"p5",module:"Events"},mouseY:{name:"mouseY",class:"p5",module:"Events"},pmouseX:{name:"pmouseX",class:"p5",module:"Events"},pmouseY:{name:"pmouseY",class:"p5",module:"Events"},winMouseX:{name:"winMouseX",class:"p5",module:"Events"},winMouseY:{name:"winMouseY",class:"p5",module:"Events"},pwinMouseX:{name:"pwinMouseX",class:"p5",module:"Events"},pwinMouseY:{name:"pwinMouseY",class:"p5",module:"Events"},mouseButton:{name:"mouseButton",class:"p5",module:"Events"},mouseIsPressed:{name:"mouseIsPressed",class:"p5",module:"Events"},mouseMoved:{name:"mouseMoved",params:[{name:"event",description:"<p>optional MouseEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},mouseDragged:{name:"mouseDragged",params:[{name:"event",description:"<p>optional MouseEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},mousePressed:{name:"mousePressed",params:[{name:"event",description:"<p>optional MouseEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},mouseReleased:{name:"mouseReleased",params:[{name:"event",description:"<p>optional MouseEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},mouseClicked:{name:"mouseClicked",params:[{name:"event",description:"<p>optional MouseEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},doubleClicked:{name:"doubleClicked",params:[{name:"event",description:"<p>optional MouseEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},mouseWheel:{name:"mouseWheel",params:[{name:"event",description:"<p>optional WheelEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},requestPointerLock:{name:"requestPointerLock",class:"p5",module:"Events"},exitPointerLock:{name:"exitPointerLock",class:"p5",module:"Events"},touches:{name:"touches",class:"p5",module:"Events"},touchStarted:{name:"touchStarted",params:[{name:"event",description:"<p>optional TouchEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},touchMoved:{name:"touchMoved",params:[{name:"event",description:"<p>optional TouchEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},touchEnded:{name:"touchEnded",params:[{name:"event",description:"<p>optional TouchEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},createImage:{name:"createImage",params:[{name:"width",description:"<p>width in pixels</p>\n",type:"Integer"},{name:"height",description:"<p>height in pixels</p>\n",type:"Integer"}],class:"p5",module:"Image"},saveCanvas:{name:"saveCanvas",class:"p5",module:"Image",overloads:[{params:[{name:"selectedCanvas",description:"<p>a variable\n                                representing a specific html5 canvas (optional)</p>\n",type:"p5.Element|HTMLCanvasElement"},{name:"filename",description:"",type:"String",optional:!0},{name:"extension",description:"<p>'jpg' or 'png'</p>\n",type:"String",optional:!0}]},{params:[{name:"filename",description:"",type:"String",optional:!0},{name:"extension",description:"",type:"String",optional:!0}]}]},saveFrames:{name:"saveFrames",params:[{name:"filename",description:"",type:"String"},{name:"extension",description:"<p>'jpg' or 'png'</p>\n",type:"String"},{name:"duration",description:"<p>Duration in seconds to save the frames for. This parameter will be constrained to be less or equal to 15.</p>\n",type:"Number"},{name:"framerate",description:"<p>Framerate to save the frames in. This parameter will be constrained to be less or equal to 22.</p>\n",type:"Number"},{name:"callback",description:"<p>A callback function that will be executed\n                                to handle the image data. This function\n                                should accept an array as argument. The\n                                array will contain the specified number of\n                                frames of objects. Each object has three\n                                properties: imageData - an\n                                image/octet-stream, filename and extension.</p>\n",type:"Function(Array)",optional:!0}],class:"p5",module:"Image"},loadImage:{name:"loadImage",params:[{name:"path",description:"<p>Path of the image to be loaded</p>\n",type:"String"},{name:"successCallback",description:'<p>Function to be called once\n                               the image is loaded. Will be passed the\n                               <a href="#/p5.Image">p5.Image</a>.</p>\n',type:"function(p5.Image)",optional:!0},{name:"failureCallback",description:"<p>called with event error if\n                               the image fails to load.</p>\n",type:"Function(Event)",optional:!0}],class:"p5",module:"Image"},saveGif:{name:"saveGif",params:[{name:"filename",description:"<p>File name of your gif</p>\n",type:"String"},{name:"duration",description:"<p>Duration in seconds that you wish to capture from your sketch</p>\n",type:"Number"},{name:"options",description:"<p>An optional object that can contain five more arguments:\ndelay, specifying how much time we should wait before recording;\nunits, a string that can be either 'seconds' or 'frames'. By default it's 'seconds’;\nsilent, a boolean that defines presence of progress notifications. By default it’s false;\nnotificationDuration, a number that defines how long in seconds the final notification\nwill live. 0, the default value, means that the notification will never be removed;\nnotificationID, a string that specifies the notification DOM element id. By default it’s 'progressBar’.</p>\n",type:"Object"}],class:"p5",module:"Image"},image:{name:"image",class:"p5",module:"Image",overloads:[{params:[{name:"img",description:"<p>the image to display</p>\n",type:"p5.Image|p5.Element|p5.Texture|p5.Framebuffer|p5.FramebufferTexture"},{name:"x",description:"<p>the x-coordinate of the top-left corner of the image</p>\n",type:"Number"},{name:"y",description:"<p>the y-coordinate of the top-left corner of the image</p>\n",type:"Number"},{name:"width",description:"<p>the width to draw the image</p>\n",type:"Number",optional:!0},{name:"height",description:"<p>the height to draw the image</p>\n",type:"Number",optional:!0}]},{params:[{name:"img",description:"",type:"p5.Image|p5.Element|p5.Texture|p5.Framebuffer|p5.FramebufferTexture"},{name:"dx",description:"<p>the x-coordinate of the destination\n                          rectangle in which to draw the source image</p>\n",type:"Number"},{name:"dy",description:"<p>the y-coordinate of the destination\n                          rectangle in which to draw the source image</p>\n",type:"Number"},{name:"dWidth",description:"<p>the width of the destination rectangle</p>\n",type:"Number"},{name:"dHeight",description:"<p>the height of the destination rectangle</p>\n",type:"Number"},{name:"sx",description:"<p>the x-coordinate of the subsection of the source\nimage to draw into the destination rectangle</p>\n",type:"Number"},{name:"sy",description:"<p>the y-coordinate of the subsection of the source\nimage to draw into the destination rectangle</p>\n",type:"Number"},{name:"sWidth",description:"<p>the width of the subsection of the\n                          source image to draw into the destination\n                          rectangle</p>\n",type:"Number",optional:!0},{name:"sHeight",description:"<p>the height of the subsection of the\n                           source image to draw into the destination rectangle</p>\n",type:"Number",optional:!0},{name:"fit",description:"<p>either CONTAIN or COVER</p>\n",type:"Constant",optional:!0},{name:"xAlign",description:"<p>either LEFT, RIGHT or CENTER default is CENTER</p>\n",type:"Constant",optional:!0},{name:"yAlign",description:"<p>either TOP, BOTTOM or CENTER default is CENTER</p>\n",type:"Constant",optional:!0}]}]},tint:{name:"tint",class:"p5",module:"Image",overloads:[{params:[{name:"v1",description:"<p>red or hue value relative to\n                                the current color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value\n                                relative to the current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value\n                                relative to the current color range</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}]},{params:[{name:"value",description:"<p>a color string</p>\n",type:"String"}]},{params:[{name:"gray",description:"<p>a gray value</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}]},{params:[{name:"values",description:"<p>an array containing the red,green,blue &\n                                and alpha components of the color</p>\n",type:"Number[]"}]},{params:[{name:"color",description:"<p>the tint color</p>\n",type:"p5.Color"}]}]},noTint:{name:"noTint",class:"p5",module:"Image"},imageMode:{name:"imageMode",params:[{name:"mode",description:"<p>either CORNER, CORNERS, or CENTER</p>\n",type:"Constant"}],class:"p5",module:"Image"},pixels:{name:"pixels",class:"p5",module:"Image"},blend:{name:"blend",class:"p5",module:"Image",overloads:[{params:[{name:"srcImage",description:"<p>source image</p>\n",type:"p5.Image"},{name:"sx",description:"<p>X coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sy",description:"<p>Y coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sw",description:"<p>source image width</p>\n",type:"Integer"},{name:"sh",description:"<p>source image height</p>\n",type:"Integer"},{name:"dx",description:"<p>X coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dy",description:"<p>Y coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dw",description:"<p>destination image width</p>\n",type:"Integer"},{name:"dh",description:"<p>destination image height</p>\n",type:"Integer"},{name:"blendMode",description:"<p>the blend mode. either\n    BLEND, DARKEST, LIGHTEST, DIFFERENCE,\n    MULTIPLY, EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,\n    SOFT_LIGHT, DODGE, BURN, ADD or NORMAL.</p>\n",type:"Constant"}]},{params:[{name:"sx",description:"",type:"Integer"},{name:"sy",description:"",type:"Integer"},{name:"sw",description:"",type:"Integer"},{name:"sh",description:"",type:"Integer"},{name:"dx",description:"",type:"Integer"},{name:"dy",description:"",type:"Integer"},{name:"dw",description:"",type:"Integer"},{name:"dh",description:"",type:"Integer"},{name:"blendMode",description:"",type:"Constant"}]}]},copy:{name:"copy",class:"p5",module:"Image",overloads:[{params:[{name:"srcImage",description:"<p>source image</p>\n",type:"p5.Image|p5.Element"},{name:"sx",description:"<p>X coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sy",description:"<p>Y coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sw",description:"<p>source image width</p>\n",type:"Integer"},{name:"sh",description:"<p>source image height</p>\n",type:"Integer"},{name:"dx",description:"<p>X coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dy",description:"<p>Y coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dw",description:"<p>destination image width</p>\n",type:"Integer"},{name:"dh",description:"<p>destination image height</p>\n",type:"Integer"}]},{params:[{name:"sx",description:"",type:"Integer"},{name:"sy",description:"",type:"Integer"},{name:"sw",description:"",type:"Integer"},{name:"sh",description:"",type:"Integer"},{name:"dx",description:"",type:"Integer"},{name:"dy",description:"",type:"Integer"},{name:"dw",description:"",type:"Integer"},{name:"dh",description:"",type:"Integer"}]}]},filter:{name:"filter",params:[{name:"filterType",description:"<p>either THRESHOLD, GRAY, OPAQUE, INVERT,\n                               POSTERIZE, BLUR, ERODE, DILATE or BLUR.\n                               See Filters.js for docs on\n                               each available filter</p>\n",type:"Constant"},{name:"filterParam",description:"<p>an optional parameter unique\n                               to each filter, see above</p>\n",type:"Number",optional:!0}],class:"p5",module:"Image"},get:{name:"get",class:"p5",module:"Image",overloads:[{params:[{name:"x",description:"<p>x-coordinate of the pixel</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the pixel</p>\n",type:"Number"},{name:"w",description:"<p>width of the section to be returned</p>\n",type:"Number"},{name:"h",description:"<p>height of the section to be returned</p>\n",type:"Number"}]},{params:[]},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"}]}]},loadPixels:{name:"loadPixels",class:"p5",module:"Image"},set:{name:"set",params:[{name:"x",description:"<p>x-coordinate of the pixel</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the pixel</p>\n",type:"Number"},{name:"c",description:'<p>insert a grayscale value | a pixel array |\n                               a <a href="#/p5.Color">p5.Color</a> object | a <a href="#/p5.Image">p5.Image</a> to copy</p>\n',type:"Number|Number[]|Object"}],class:"p5",module:"Image"},updatePixels:{name:"updatePixels",params:[{name:"x",description:"<p>x-coordinate of the upper-left corner of region\n                        to update</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>y-coordinate of the upper-left corner of region\n                        to update</p>\n",type:"Number",optional:!0},{name:"w",description:"<p>width of region to update</p>\n",type:"Number",optional:!0},{name:"h",description:"<p>height of region to update</p>\n",type:"Number",optional:!0}],class:"p5",module:"Image"},loadJSON:{name:"loadJSON",class:"p5",module:"IO",overloads:[{params:[{name:"path",description:"<p>name of the file or url to load</p>\n",type:"String"},{name:"jsonpOptions",description:"<p>options object for jsonp related settings</p>\n",type:"Object",optional:!0},{name:"datatype",description:'<p>"json" or "jsonp"</p>\n',type:"String",optional:!0},{name:"callback",description:'<p>function to be executed after\n                                   <a href="#/p5/loadJSON">loadJSON()</a> completes, data is passed\n                                   in as first argument</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                                   there is an error, response is passed\n                                   in as first argument</p>\n",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"datatype",description:"",type:"String"},{name:"callback",description:"",type:"Function",optional:!0},{name:"errorCallback",description:"",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"callback",description:"",type:"Function"},{name:"errorCallback",description:"",type:"Function",optional:!0}]}]},loadStrings:{name:"loadStrings",params:[{name:"filename",description:"<p>name of the file or url to load</p>\n",type:"String"},{name:"callback",description:'<p>function to be executed after <a href="#/p5/loadStrings">loadStrings()</a>\n                              completes, Array is passed in as first\n                              argument</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                              there is an error, response is passed\n                              in as first argument</p>\n",type:"Function",optional:!0}],class:"p5",module:"IO"},loadTable:{name:"loadTable",params:[{name:"filename",description:"<p>name of the file or URL to load</p>\n",type:"String"},{name:"extension",description:'<p>parse the table by comma-separated values "csv", semicolon-separated\n                                     values "ssv", or tab-separated values "tsv"</p>\n',type:"String",optional:!0},{name:"header",description:'<p>"header" to indicate table has header row</p>\n',type:"String",optional:!0},{name:"callback",description:'<p>function to be executed after\n                                     <a href="#/p5/loadTable">loadTable()</a> completes. On success, the\n                                     <a href="#/p5.Table">Table</a> object is passed in as the\n                                     first argument.</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                                     there is an error, response is passed\n                                     in as first argument</p>\n",type:"Function",optional:!0}],class:"p5",module:"IO"},loadXML:{name:"loadXML",params:[{name:"filename",description:"<p>name of the file or URL to load</p>\n",type:"String"},{name:"callback",description:'<p>function to be executed after <a href="#/p5/loadXML">loadXML()</a>\n                              completes, XML object is passed in as\n                              first argument</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                              there is an error, response is passed\n                              in as first argument</p>\n",type:"Function",optional:!0}],class:"p5",module:"IO"},loadBytes:{name:"loadBytes",params:[{name:"file",description:"<p>name of the file or URL to load</p>\n",type:"String"},{name:"callback",description:'<p>function to be executed after <a href="#/p5/loadBytes">loadBytes()</a>\n                                   completes</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if there\n                                   is an error</p>\n",type:"Function",optional:!0}],class:"p5",module:"IO"},httpGet:{name:"httpGet",class:"p5",module:"IO",overloads:[{params:[{name:"path",description:"<p>name of the file or url to load</p>\n",type:"String"},{name:"datatype",description:'<p>"json", "jsonp", "binary", "arrayBuffer",\n                                   "xml", or "text"</p>\n',type:"String",optional:!0},{name:"data",description:"<p>param data passed sent with request</p>\n",type:"Object|Boolean",optional:!0},{name:"callback",description:'<p>function to be executed after\n                                   <a href="#/p5/httpGet">httpGet()</a> completes, data is passed in\n                                   as first argument</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                                   there is an error, response is passed\n                                   in as first argument</p>\n",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"data",description:"",type:"Object|Boolean"},{name:"callback",description:"",type:"Function",optional:!0},{name:"errorCallback",description:"",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"callback",description:"",type:"Function"},{name:"errorCallback",description:"",type:"Function",optional:!0}]}]},httpPost:{name:"httpPost",class:"p5",module:"IO",overloads:[{params:[{name:"path",description:"<p>name of the file or url to load</p>\n",type:"String"},{name:"datatype",description:'<p>"json", "jsonp", "xml", or "text".\n                                   If omitted, <a href="#/p5/httpPost">httpPost()</a> will guess.</p>\n',type:"String",optional:!0},{name:"data",description:"<p>param data passed sent with request</p>\n",type:"Object|Boolean",optional:!0},{name:"callback",description:'<p>function to be executed after\n                                   <a href="#/p5/httpPost">httpPost()</a> completes, data is passed in\n                                   as first argument</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                                   there is an error, response is passed\n                                   in as first argument</p>\n",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"data",description:"",type:"Object|Boolean"},{name:"callback",description:"",type:"Function",optional:!0},{name:"errorCallback",description:"",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"callback",description:"",type:"Function"},{name:"errorCallback",description:"",type:"Function",optional:!0}]}]},httpDo:{name:"httpDo",class:"p5",module:"IO",overloads:[{params:[{name:"path",description:"<p>name of the file or url to load</p>\n",type:"String"},{name:"method",description:'<p>either "GET", "POST", or "PUT",\n                                   defaults to "GET"</p>\n',type:"String",optional:!0},{name:"datatype",description:'<p>"json", "jsonp", "xml", or "text"</p>\n',type:"String",optional:!0},{name:"data",description:"<p>param data passed sent with request</p>\n",type:"Object",optional:!0},{name:"callback",description:'<p>function to be executed after\n                                   <a href="#/p5/httpGet">httpGet()</a> completes, data is passed in\n                                   as first argument</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                                   there is an error, response is passed\n                                   in as first argument</p>\n",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"options",description:'<p>Request object options as documented in the\n                                   "fetch" API\n<a href="https://developer.mozilla.org/en/docs/Web/API/Fetch_API">reference</a></p>\n',type:"Object"},{name:"callback",description:"",type:"Function",optional:!0},{name:"errorCallback",description:"",type:"Function",optional:!0}]}]},createWriter:{name:"createWriter",params:[{name:"name",description:"<p>name of the file to be created</p>\n",type:"String"},{name:"extension",description:"",type:"String",optional:!0}],class:"p5",module:"IO"},save:{name:"save",params:[{name:"objectOrFilename",description:"<p>If filename is provided, will\n                                           save canvas as an image with\n                                           either png or jpg extension\n                                           depending on the filename.\n                                           If object is provided, will\n                                           save depending on the object\n                                           and filename (see examples\n                                           above).</p>\n",type:"Object|String",optional:!0},{name:"filename",description:"<p>If an object is provided as the first\n                             parameter, then the second parameter\n                             indicates the filename,\n                             and should include an appropriate\n                             file extension (see examples above).</p>\n",type:"String",optional:!0},{name:"options",description:"<p>Additional options depend on\n                          filetype. For example, when saving JSON,\n                          <code>true</code> indicates that the\n                          output will be optimized for filesize,\n                          rather than readability.</p>\n",type:"Boolean|String",optional:!0}],class:"p5",module:"IO"},saveJSON:{name:"saveJSON",params:[{name:"json",description:"",type:"Array|Object"},{name:"filename",description:"",type:"String"},{name:"optimize",description:"<p>If true, removes line breaks\n                               and spaces from the output\n                               file to optimize filesize\n                               (but not readability).</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"IO"},saveStrings:{name:"saveStrings",params:[{name:"list",description:"<p>string array to be written</p>\n",type:"String[]"},{name:"filename",description:"<p>filename for output</p>\n",type:"String"},{name:"extension",description:"<p>the filename's extension</p>\n",type:"String",optional:!0},{name:"isCRLF",description:"<p>if true, change line-break to CRLF</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"IO"},saveTable:{name:"saveTable",params:[{name:"Table",description:'<p>the <a href="#/p5.Table">Table</a> object to save to a file</p>\n',type:"p5.Table"},{name:"filename",description:"<p>the filename to which the Table should be saved</p>\n",type:"String"},{name:"options",description:'<p>can be one of "tsv", "csv", or "html"</p>\n',type:"String",optional:!0}],class:"p5",module:"IO"},abs:{name:"abs",params:[{name:"n",description:"<p>number to compute</p>\n",type:"Number"}],class:"p5",module:"Math"},ceil:{name:"ceil",params:[{name:"n",description:"<p>number to round up</p>\n",type:"Number"}],class:"p5",module:"Math"},constrain:{name:"constrain",params:[{name:"n",description:"<p>number to constrain</p>\n",type:"Number"},{name:"low",description:"<p>minimum limit</p>\n",type:"Number"},{name:"high",description:"<p>maximum limit</p>\n",type:"Number"}],class:"p5",module:"Math"},dist:{name:"dist",class:"p5",module:"Math",overloads:[{params:[{name:"x1",description:"<p>x-coordinate of the first point</p>\n",type:"Number"},{name:"y1",description:"<p>y-coordinate of the first point</p>\n",type:"Number"},{name:"x2",description:"<p>x-coordinate of the second point</p>\n",type:"Number"},{name:"y2",description:"<p>y-coordinate of the second point</p>\n",type:"Number"}]},{params:[{name:"x1",description:"",type:"Number"},{name:"y1",description:"",type:"Number"},{name:"z1",description:"<p>z-coordinate of the first point</p>\n",type:"Number"},{name:"x2",description:"",type:"Number"},{name:"y2",description:"",type:"Number"},{name:"z2",description:"<p>z-coordinate of the second point</p>\n",type:"Number"}]}]},exp:{name:"exp",params:[{name:"n",description:"<p>exponent to raise</p>\n",type:"Number"}],class:"p5",module:"Math"},floor:{name:"floor",params:[{name:"n",description:"<p>number to round down</p>\n",type:"Number"}],class:"p5",module:"Math"},lerp:{name:"lerp",params:[{name:"start",description:"<p>first value</p>\n",type:"Number"},{name:"stop",description:"<p>second value</p>\n",type:"Number"},{name:"amt",description:"<p>number</p>\n",type:"Number"}],class:"p5",module:"Math"},log:{name:"log",params:[{name:"n",description:"<p>number greater than 0</p>\n",type:"Number"}],class:"p5",module:"Math"},mag:{name:"mag",params:[{name:"a",description:"<p>first value</p>\n",type:"Number"},{name:"b",description:"<p>second value</p>\n",type:"Number"}],class:"p5",module:"Math"},map:{name:"map",params:[{name:"value",description:"<p>the incoming value to be converted</p>\n",type:"Number"},{name:"start1",description:"<p>lower bound of the value's current range</p>\n",type:"Number"},{name:"stop1",description:"<p>upper bound of the value's current range</p>\n",type:"Number"},{name:"start2",description:"<p>lower bound of the value's target range</p>\n",type:"Number"},{name:"stop2",description:"<p>upper bound of the value's target range</p>\n",type:"Number"},{name:"withinBounds",description:"<p>constrain the value to the newly mapped range</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"Math"},max:{name:"max",class:"p5",module:"Math",overloads:[{params:[{name:"n0",description:"<p>Number to compare</p>\n",type:"Number"},{name:"n1",description:"<p>Number to compare</p>\n",type:"Number"}]},{params:[{name:"nums",description:"<p>Numbers to compare</p>\n",type:"Number[]"}]}]},min:{name:"min",class:"p5",module:"Math",overloads:[{params:[{name:"n0",description:"<p>Number to compare</p>\n",type:"Number"},{name:"n1",description:"<p>Number to compare</p>\n",type:"Number"}]},{params:[{name:"nums",description:"<p>Numbers to compare</p>\n",type:"Number[]"}]}]},norm:{name:"norm",params:[{name:"value",description:"<p>incoming value to be normalized</p>\n",type:"Number"},{name:"start",description:"<p>lower bound of the value's current range</p>\n",type:"Number"},{name:"stop",description:"<p>upper bound of the value's current range</p>\n",type:"Number"}],class:"p5",module:"Math"},pow:{name:"pow",params:[{name:"n",description:"<p>base of the exponential expression</p>\n",type:"Number"},{name:"e",description:"<p>power by which to raise the base</p>\n",type:"Number"}],class:"p5",module:"Math"},round:{name:"round",params:[{name:"n",description:"<p>number to round</p>\n",type:"Number"},{name:"decimals",description:"<p>number of decimal places to round to, default is 0</p>\n",type:"Number",optional:!0}],class:"p5",module:"Math"},sq:{name:"sq",params:[{name:"n",description:"<p>number to square</p>\n",type:"Number"}],class:"p5",module:"Math"},sqrt:{name:"sqrt",params:[{name:"n",description:"<p>non-negative number to square root</p>\n",type:"Number"}],class:"p5",module:"Math"},fract:{name:"fract",params:[{name:"num",description:"<p>Number whose fractional part needs to be found out</p>\n",type:"Number"}],class:"p5",module:"Math"},createVector:{name:"createVector",params:[{name:"x",description:"<p>x component of the vector</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>y component of the vector</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>z component of the vector</p>\n",type:"Number",optional:!0}],class:"p5",module:"Math"},noise:{name:"noise",params:[{name:"x",description:"<p>x-coordinate in noise space</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate in noise space</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>z-coordinate in noise space</p>\n",type:"Number",optional:!0}],class:"p5",module:"Math"},noiseDetail:{name:"noiseDetail",params:[{name:"lod",description:"<p>number of octaves to be used by the noise</p>\n",type:"Number"},{name:"falloff",description:"<p>falloff factor for each octave</p>\n",type:"Number"}],class:"p5",module:"Math"},noiseSeed:{name:"noiseSeed",params:[{name:"seed",description:"<p>the seed value</p>\n",type:"Number"}],class:"p5",module:"Math"},randomSeed:{name:"randomSeed",params:[{name:"seed",description:"<p>the seed value</p>\n",type:"Number"}],class:"p5",module:"Math"},random:{name:"random",class:"p5",module:"Math",overloads:[{params:[{name:"min",description:"<p>the lower bound (inclusive)</p>\n",type:"Number",optional:!0},{name:"max",description:"<p>the upper bound (exclusive)</p>\n",type:"Number",optional:!0}]},{params:[{name:"choices",description:"<p>the array to choose from</p>\n",type:"Array"}]}]},randomGaussian:{name:"randomGaussian",params:[{name:"mean",description:"<p>the mean</p>\n",type:"Number",optional:!0},{name:"sd",description:"<p>the standard deviation</p>\n",type:"Number",optional:!0}],class:"p5",module:"Math"},acos:{name:"acos",params:[{name:"value",description:"<p>the value whose arc cosine is to be returned</p>\n",type:"Number"}],class:"p5",module:"Math"},asin:{name:"asin",params:[{name:"value",description:"<p>the value whose arc sine is to be returned</p>\n",type:"Number"}],class:"p5",module:"Math"},atan:{name:"atan",params:[{name:"value",description:"<p>the value whose arc tangent is to be returned</p>\n",type:"Number"}],class:"p5",module:"Math"},atan2:{name:"atan2",params:[{name:"y",description:"<p>y-coordinate of the point</p>\n",type:"Number"},{name:"x",description:"<p>x-coordinate of the point</p>\n",type:"Number"}],class:"p5",module:"Math"},cos:{name:"cos",params:[{name:"angle",description:"<p>the angle</p>\n",type:"Number"}],class:"p5",module:"Math"},sin:{name:"sin",params:[{name:"angle",description:"<p>the angle</p>\n",type:"Number"}],class:"p5",module:"Math"},tan:{name:"tan",params:[{name:"angle",description:"<p>the angle</p>\n",type:"Number"}],class:"p5",module:"Math"},degrees:{name:"degrees",params:[{name:"radians",description:"<p>the radians value to convert to degrees</p>\n",type:"Number"}],class:"p5",module:"Math"},radians:{name:"radians",params:[{name:"degrees",description:"<p>the degree value to convert to radians</p>\n",type:"Number"}],class:"p5",module:"Math"},angleMode:{name:"angleMode",class:"p5",module:"Math",overloads:[{params:[{name:"mode",description:"<p>either RADIANS or DEGREES</p>\n",type:"Constant"}]},{params:[]}]},textAlign:{name:"textAlign",class:"p5",module:"Typography",overloads:[{params:[{name:"horizAlign",description:"<p>horizontal alignment, either LEFT,\n                           CENTER, or RIGHT</p>\n",type:"Constant"},{name:"vertAlign",description:"<p>vertical alignment, either TOP,\n                           BOTTOM, CENTER, or BASELINE</p>\n",type:"Constant",optional:!0}],chainable:1},{params:[]}]},textLeading:{name:"textLeading",class:"p5",module:"Typography",overloads:[{params:[{name:"leading",description:"<p>the size in pixels for spacing between lines</p>\n",type:"Number"}],chainable:1},{params:[]}]},textSize:{name:"textSize",class:"p5",module:"Typography",overloads:[{params:[{name:"theSize",description:"<p>the size of the letters in units of pixels</p>\n",type:"Number"}],chainable:1},{params:[]}]},textStyle:{name:"textStyle",class:"p5",module:"Typography",overloads:[{params:[{name:"theStyle",description:"<p>styling for text, either NORMAL,\n                           ITALIC, BOLD or BOLDITALIC</p>\n",type:"Constant"}],chainable:1},{params:[]}]},textWidth:{name:"textWidth",params:[{name:"theText",description:"<p>the String of characters to measure</p>\n",type:"String"}],class:"p5",module:"Typography"},textAscent:{name:"textAscent",class:"p5",module:"Typography"},textDescent:{name:"textDescent",class:"p5",module:"Typography"},textWrap:{name:"textWrap",params:[{name:"wrapStyle",description:"<p>text wrapping style, either WORD or CHAR</p>\n",type:"Constant"}],class:"p5",module:"Typography"},loadFont:{name:"loadFont",params:[{name:"path",description:"<p>name of the file or url to load</p>\n",type:"String"},{name:"callback",description:'<p>function to be executed after\n                                   <a href="#/p5/loadFont">loadFont()</a> completes</p>\n',type:"Function",optional:!0},{name:"onError",description:"<p>function to be executed if\n                                   an error occurs</p>\n",type:"Function",optional:!0}],class:"p5",module:"Typography"},text:{name:"text",params:[{name:"str",description:"<p>the alphanumeric\n                                            symbols to be displayed</p>\n",type:"String|Object|Array|Number|Boolean"},{name:"x",description:"<p>x-coordinate of text</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of text</p>\n",type:"Number"},{name:"x2",description:'<p>by default, the width of the text box,\n                    see <a href="#/p5/rectMode">rectMode()</a> for more info</p>\n',type:"Number",optional:!0},{name:"y2",description:'<p>by default, the height of the text box,\n                    see <a href="#/p5/rectMode">rectMode()</a> for more info</p>\n',type:"Number",optional:!0}],class:"p5",module:"Typography"},textFont:{name:"textFont",class:"p5",module:"Typography",overloads:[{params:[]},{params:[{name:"font",description:'<p>a font loaded via <a href="#/p5/loadFont">loadFont()</a>,\nor a String representing a <a href="https://mzl.la/2dOw8WD">web safe font</a>\n(a font that is generally available across all systems)</p>\n',type:"Object|String"},{name:"size",description:"<p>the font size to use</p>\n",type:"Number",optional:!0}],chainable:1}]},append:{name:"append",params:[{name:"array",description:"<p>Array to append</p>\n",type:"Array"},{name:"value",description:"<p>to be added to the Array</p>\n",type:"Any"}],class:"p5",module:"Data"},arrayCopy:{name:"arrayCopy",class:"p5",module:"Data",overloads:[{params:[{name:"src",description:"<p>the source Array</p>\n",type:"Array"},{name:"srcPosition",description:"<p>starting position in the source Array</p>\n",type:"Integer"},{name:"dst",description:"<p>the destination Array</p>\n",type:"Array"},{name:"dstPosition",description:"<p>starting position in the destination Array</p>\n",type:"Integer"},{name:"length",description:"<p>number of Array elements to be copied</p>\n",type:"Integer"}]},{params:[{name:"src",description:"",type:"Array"},{name:"dst",description:"",type:"Array"},{name:"length",description:"",type:"Integer",optional:!0}]}]},concat:{name:"concat",params:[{name:"a",description:"<p>first Array to concatenate</p>\n",type:"Array"},{name:"b",description:"<p>second Array to concatenate</p>\n",type:"Array"}],class:"p5",module:"Data"},reverse:{name:"reverse",params:[{name:"list",description:"<p>Array to reverse</p>\n",type:"Array"}],class:"p5",module:"Data"},shorten:{name:"shorten",params:[{name:"list",description:"<p>Array to shorten</p>\n",type:"Array"}],class:"p5",module:"Data"},shuffle:{name:"shuffle",params:[{name:"array",description:"<p>Array to shuffle</p>\n",type:"Array"},{name:"bool",description:"<p>modify passed array</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"Data"},sort:{name:"sort",params:[{name:"list",description:"<p>Array to sort</p>\n",type:"Array"},{name:"count",description:"<p>number of elements to sort, starting from 0</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Data"},splice:{name:"splice",params:[{name:"list",description:"<p>Array to splice into</p>\n",type:"Array"},{name:"value",description:"<p>value to be spliced in</p>\n",type:"Any"},{name:"position",description:"<p>in the array from which to insert data</p>\n",type:"Integer"}],class:"p5",module:"Data"},subset:{name:"subset",params:[{name:"list",description:"<p>Array to extract from</p>\n",type:"Array"},{name:"start",description:"<p>position to begin</p>\n",type:"Integer"},{name:"count",description:"<p>number of values to extract</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Data"},float:{name:"float",params:[{name:"str",description:"<p>float string to parse</p>\n",type:"String"}],class:"p5",module:"Data"},int:{name:"int",class:"p5",module:"Data",overloads:[{params:[{name:"n",description:"<p>value to parse</p>\n",type:"String|Boolean|Number"},{name:"radix",description:"<p>the radix to convert to (default: 10)</p>\n",type:"Integer",optional:!0}]},{params:[{name:"ns",description:"<p>values to parse</p>\n",type:"Array"},{name:"radix",description:"",type:"Integer",optional:!0}]}]},str:{name:"str",params:[{name:"n",description:"<p>value to parse</p>\n",type:"String|Boolean|Number|Array"}],class:"p5",module:"Data"},byte:{name:"byte",class:"p5",module:"Data",overloads:[{params:[{name:"n",description:"<p>value to parse</p>\n",type:"String|Boolean|Number"}]},{params:[{name:"ns",description:"<p>values to parse</p>\n",type:"Array"}]}]},char:{name:"char",class:"p5",module:"Data",overloads:[{params:[{name:"n",description:"<p>value to parse</p>\n",type:"String|Number"}]},{params:[{name:"ns",description:"<p>values to parse</p>\n",type:"Array"}]}]},unchar:{name:"unchar",class:"p5",module:"Data",overloads:[{params:[{name:"n",description:"<p>value to parse</p>\n",type:"String"}]},{params:[{name:"ns",description:"<p>values to parse</p>\n",type:"Array"}]}]},hex:{name:"hex",class:"p5",module:"Data",overloads:[{params:[{name:"n",description:"<p>value to parse</p>\n",type:"Number"},{name:"digits",description:"",type:"Number",optional:!0}]},{params:[{name:"ns",description:"<p>array of values to parse</p>\n",type:"Number[]"},{name:"digits",description:"",type:"Number",optional:!0}]}]},unhex:{name:"unhex",class:"p5",module:"Data",overloads:[{params:[{name:"n",description:"<p>value to parse</p>\n",type:"String"}]},{params:[{name:"ns",description:"<p>values to parse</p>\n",type:"Array"}]}]},join:{name:"join",params:[{name:"list",description:"<p>array of Strings to be joined</p>\n",type:"Array"},{name:"separator",description:"<p>String to be placed between each item</p>\n",type:"String"}],class:"p5",module:"Data"},match:{name:"match",params:[{name:"str",description:"<p>the String to be searched</p>\n",type:"String"},{name:"regexp",description:"<p>the regexp to be used for matching</p>\n",type:"String"}],class:"p5",module:"Data"},matchAll:{name:"matchAll",params:[{name:"str",description:"<p>the String to be searched</p>\n",type:"String"},{name:"regexp",description:"<p>the regexp to be used for matching</p>\n",type:"String"}],class:"p5",module:"Data"},nf:{name:"nf",class:"p5",module:"Data",overloads:[{params:[{name:"num",description:"<p>the Number to format</p>\n",type:"Number|String"},{name:"left",description:"<p>number of digits to the left of the\n                               decimal point</p>\n",type:"Integer|String",optional:!0},{name:"right",description:"<p>number of digits to the right of the\n                               decimal point</p>\n",type:"Integer|String",optional:!0}]},{params:[{name:"nums",description:"<p>the Numbers to format</p>\n",type:"Array"},{name:"left",description:"",type:"Integer|String",optional:!0},{name:"right",description:"",type:"Integer|String",optional:!0}]}]},nfc:{name:"nfc",class:"p5",module:"Data",overloads:[{params:[{name:"num",description:"<p>the Number to format</p>\n",type:"Number|String"},{name:"right",description:"<p>number of digits to the right of the\n                                 decimal point</p>\n",type:"Integer|String",optional:!0}]},{params:[{name:"nums",description:"<p>the Numbers to format</p>\n",type:"Array"},{name:"right",description:"",type:"Integer|String",optional:!0}]}]},nfp:{name:"nfp",class:"p5",module:"Data",overloads:[{params:[{name:"num",description:"<p>the Number to format</p>\n",type:"Number"},{name:"left",description:"<p>number of digits to the left of the decimal\n                               point</p>\n",type:"Integer",optional:!0},{name:"right",description:"<p>number of digits to the right of the\n                               decimal point</p>\n",type:"Integer",optional:!0}]},{params:[{name:"nums",description:"<p>the Numbers to format</p>\n",type:"Number[]"},{name:"left",description:"",type:"Integer",optional:!0},{name:"right",description:"",type:"Integer",optional:!0}]}]},nfs:{name:"nfs",class:"p5",module:"Data",overloads:[{params:[{name:"num",description:"<p>the Number to format</p>\n",type:"Number"},{name:"left",description:"<p>number of digits to the left of the decimal\n                               point</p>\n",type:"Integer",optional:!0},{name:"right",description:"<p>number of digits to the right of the\n                               decimal point</p>\n",type:"Integer",optional:!0}]},{params:[{name:"nums",description:"<p>the Numbers to format</p>\n",type:"Array"},{name:"left",description:"",type:"Integer",optional:!0},{name:"right",description:"",type:"Integer",optional:!0}]}]},split:{name:"split",params:[{name:"value",description:"<p>the String to be split</p>\n",type:"String"},{name:"delim",description:"<p>the String used to separate the data</p>\n",type:"String"}],class:"p5",module:"Data"},splitTokens:{name:"splitTokens",params:[{name:"value",description:"<p>the String to be split</p>\n",type:"String"},{name:"delim",description:"<p>list of individual Strings that will be used as\n                         separators</p>\n",type:"String",optional:!0}],class:"p5",module:"Data"},trim:{name:"trim",class:"p5",module:"Data",overloads:[{params:[{name:"str",description:"<p>a String to be trimmed</p>\n",type:"String"}]},{params:[{name:"strs",description:"<p>an Array of Strings to be trimmed</p>\n",type:"Array"}]}]},day:{name:"day",class:"p5",module:"IO"},hour:{name:"hour",class:"p5",module:"IO"},minute:{name:"minute",class:"p5",module:"IO"},millis:{name:"millis",class:"p5",module:"IO"},month:{name:"month",class:"p5",module:"IO"},second:{name:"second",class:"p5",module:"IO"},year:{name:"year",class:"p5",module:"IO"},plane:{name:"plane",params:[{name:"width",description:"<p>width of the plane</p>\n",type:"Number",optional:!0},{name:"height",description:"<p>height of the plane</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>Optional number of triangle\n                            subdivisions in x-dimension</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>Optional number of triangle\n                            subdivisions in y-dimension</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Shape"},box:{name:"box",params:[{name:"width",description:"<p>width of the box</p>\n",type:"Number",optional:!0},{name:"height",description:"<p>height of the box</p>\n",type:"Number",optional:!0},{name:"depth",description:"<p>depth of the box</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>Optional number of triangle\n                           subdivisions in x-dimension</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>Optional number of triangle\n                           subdivisions in y-dimension</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Shape"},sphere:{name:"sphere",params:[{name:"radius",description:"<p>radius of circle</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>optional number of subdivisions in x-dimension</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>optional number of subdivisions in y-dimension</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Shape"},cylinder:{name:"cylinder",params:[{name:"radius",description:"<p>radius of the surface</p>\n",type:"Number",optional:!0},{name:"height",description:"<p>height of the cylinder</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>number of subdivisions in x-dimension;\n                              default is 24</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>number of subdivisions in y-dimension;\n                              default is 1</p>\n",type:"Integer",optional:!0},{name:"bottomCap",description:"<p>whether to draw the bottom of the cylinder</p>\n",type:"Boolean",optional:!0},{name:"topCap",description:"<p>whether to draw the top of the cylinder</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"Shape"},cone:{name:"cone",params:[{name:"radius",description:"<p>radius of the bottom surface</p>\n",type:"Number",optional:!0},{name:"height",description:"<p>height of the cone</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>number of segments,\n                            the more segments the smoother geometry\n                            default is 24</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>number of segments,\n                            the more segments the smoother geometry\n                            default is 1</p>\n",type:"Integer",optional:!0},{name:"cap",description:"<p>whether to draw the base of the cone</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"Shape"},ellipsoid:{name:"ellipsoid",params:[{name:"radiusx",description:"<p>x-radius of ellipsoid</p>\n",type:"Number",optional:!0},{name:"radiusy",description:"<p>y-radius of ellipsoid</p>\n",type:"Number",optional:!0},{name:"radiusz",description:"<p>z-radius of ellipsoid</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>number of segments,\n                                   the more segments the smoother geometry\n                                   default is 24. Avoid detail number above\n                                   150, it may crash the browser.</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>number of segments,\n                                   the more segments the smoother geometry\n                                   default is 16. Avoid detail number above\n                                   150, it may crash the browser.</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Shape"},torus:{name:"torus",params:[{name:"radius",description:"<p>radius of the whole ring</p>\n",type:"Number",optional:!0},{name:"tubeRadius",description:"<p>radius of the tube</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>number of segments in x-dimension,\n                               the more segments the smoother geometry\n                               default is 24</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>number of segments in y-dimension,\n                               the more segments the smoother geometry\n                               default is 16</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Shape"},orbitControl:{name:"orbitControl",params:[{name:"sensitivityX",description:"<p>sensitivity to mouse movement along X axis</p>\n",type:"Number",optional:!0},{name:"sensitivityY",description:"<p>sensitivity to mouse movement along Y axis</p>\n",type:"Number",optional:!0},{name:"sensitivityZ",description:"<p>sensitivity to scroll movement along Z axis</p>\n",type:"Number",optional:!0},{name:"options",description:"<p>An optional object that can contain additional settings,\ndisableTouchActions - Boolean, default value is true.\nSetting this to true makes mobile interactions smoother by preventing\naccidental interactions with the page while orbiting. But if you're already\ndoing it via css or want the default touch actions, consider setting it to false.\nfreeRotation - Boolean, default value is false.\nBy default, horizontal movement of the mouse or touch pointer rotates the camera\naround the y-axis, and vertical movement rotates the camera around the x-axis.\nBut if setting this option to true, the camera always rotates in the direction\nthe pointer is moving. For zoom and move, the behavior is the same regardless of\ntrue/false.</p>\n",type:"Object",optional:!0}],class:"p5",module:"3D"},debugMode:{name:"debugMode",class:"p5",module:"3D",overloads:[{params:[]},{params:[{name:"mode",description:"<p>either GRID or AXES</p>\n",type:"Constant"}]},{params:[{name:"mode",description:"",type:"Constant"},{name:"gridSize",description:"<p>size of one side of the grid</p>\n",type:"Number",optional:!0},{name:"gridDivisions",description:"<p>number of divisions in the grid</p>\n",type:"Number",optional:!0},{name:"xOff",description:"<p>X axis offset from origin (0,0,0)</p>\n",type:"Number",optional:!0},{name:"yOff",description:"<p>Y axis offset from origin (0,0,0)</p>\n",type:"Number",optional:!0},{name:"zOff",description:"<p>Z axis offset from origin (0,0,0)</p>\n",type:"Number",optional:!0}]},{params:[{name:"mode",description:"",type:"Constant"},{name:"axesSize",description:"<p>size of axes icon</p>\n",type:"Number",optional:!0},{name:"xOff",description:"",type:"Number",optional:!0},{name:"yOff",description:"",type:"Number",optional:!0},{name:"zOff",description:"",type:"Number",optional:!0}]},{params:[{name:"gridSize",description:"",type:"Number",optional:!0},{name:"gridDivisions",description:"",type:"Number",optional:!0},{name:"gridXOff",description:"",type:"Number",optional:!0},{name:"gridYOff",description:"",type:"Number",optional:!0},{name:"gridZOff",description:"",type:"Number",optional:!0},{name:"axesSize",description:"",type:"Number",optional:!0},{name:"axesXOff",description:"",type:"Number",optional:!0},{name:"axesYOff",description:"",type:"Number",optional:!0},{name:"axesZOff",description:"",type:"Number",optional:!0}]}]},noDebugMode:{name:"noDebugMode",class:"p5",module:"3D"},ambientLight:{name:"ambientLight",class:"p5",module:"3D",overloads:[{params:[{name:"v1",description:"<p>red or hue value relative to\n                                  the current color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value\n                                  relative to the current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value\n                                  relative to the current color range</p>\n",type:"Number"},{name:"alpha",description:"<p>alpha value relative to current\n                                  color range (default is 0-255)</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"gray",description:"<p>number specifying value between\n                                 white and black</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"value",description:"<p>a color string</p>\n",type:"String"}],chainable:1},{params:[{name:"values",description:"<p>an array containing the red,green,blue &\n                                 and alpha components of the color</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"color",description:'<p>color as a <a href="#/p5.Color">p5.Color</a></p>\n',type:"p5.Color"}],chainable:1}]},specularColor:{name:"specularColor",class:"p5",module:"3D",overloads:[{params:[{name:"v1",description:"<p>red or hue value relative to\n                                 the current color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value\n                                 relative to the current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value\n                                 relative to the current color range</p>\n",type:"Number"}],chainable:1},{params:[{name:"gray",description:"<p>number specifying value between\n                                 white and black</p>\n",type:"Number"}],chainable:1},{params:[{name:"value",description:"<p>color as a CSS string</p>\n",type:"String"}],chainable:1},{params:[{name:"values",description:"<p>color as an array containing the\n                                 red, green, and blue components</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"color",description:'<p>color as a <a href="#/p5.Color">p5.Color</a></p>\n',type:"p5.Color"}],chainable:1}]},directionalLight:{name:"directionalLight",class:"p5",module:"3D",overloads:[{params:[{name:"v1",description:"<p>red or hue value relative to the current\n                                color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value relative to the\n                                current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value relative to the\n                                current color range</p>\n",type:"Number"},{name:"x",description:"<p>x component of direction (inclusive range of -1 to 1)</p>\n",type:"Number"},{name:"y",description:"<p>y component of direction (inclusive range of -1 to 1)</p>\n",type:"Number"},{name:"z",description:"<p>z component of direction (inclusive range of -1 to 1)</p>\n",type:"Number"}],chainable:1},{params:[{name:"v1",description:"",type:"Number"},{name:"v2",description:"",type:"Number"},{name:"v3",description:"",type:"Number"},{name:"direction",description:'<p>direction of light as a\n                                <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}],chainable:1},{params:[{name:"color",description:'<p>color as a <a href="#/p5.Color">p5.Color</a>,\n                                           as an array, or as a CSS string</p>\n',type:"p5.Color|Number[]|String"},{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number"}],chainable:1},{params:[{name:"color",description:"",type:"p5.Color|Number[]|String"},{name:"direction",description:"",type:"p5.Vector"}],chainable:1}]},pointLight:{name:"pointLight",class:"p5",module:"3D",overloads:[{params:[{name:"v1",description:"<p>red or hue value relative to the current\n                         color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value relative to the\n                         current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value relative to the\n                         current color range</p>\n",type:"Number"},{name:"x",description:"<p>x component of position</p>\n",type:"Number"},{name:"y",description:"<p>y component of position</p>\n",type:"Number"},{name:"z",description:"<p>z component of position</p>\n",type:"Number"}],chainable:1},{params:[{name:"v1",description:"",type:"Number"},{name:"v2",description:"",type:"Number"},{name:"v3",description:"",type:"Number"},{name:"position",description:'<p>of light as a <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}],chainable:1},{params:[{name:"color",description:'<p>color as a <a href="#/p5.Color">p5.Color</a>,\n                                           as an array, or as a CSS string</p>\n',type:"p5.Color|Number[]|String"},{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number"}],chainable:1},{params:[{name:"color",description:"",type:"p5.Color|Number[]|String"},{name:"position",description:"",type:"p5.Vector"}],chainable:1}]},lights:{name:"lights",class:"p5",module:"3D"},lightFalloff:{name:"lightFalloff",params:[{name:"constant",description:"<p>CONSTANT value for determining falloff</p>\n",type:"Number"},{name:"linear",description:"<p>LINEAR value for determining falloff</p>\n",type:"Number"},{name:"quadratic",description:"<p>QUADRATIC value for determining falloff</p>\n",type:"Number"}],class:"p5",module:"3D"},spotLight:{name:"spotLight",class:"p5",module:"3D",overloads:[{params:[{name:"v1",description:"<p>red or hue value relative to the current color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value relative to the current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value relative to the current color range</p>\n",type:"Number"},{name:"x",description:"<p>x component of position</p>\n",type:"Number"},{name:"y",description:"<p>y component of position</p>\n",type:"Number"},{name:"z",description:"<p>z component of position</p>\n",type:"Number"},{name:"rx",description:"<p>x component of light direction (inclusive range of -1 to 1)</p>\n",type:"Number"},{name:"ry",description:"<p>y component of light direction (inclusive range of -1 to 1)</p>\n",type:"Number"},{name:"rz",description:"<p>z component of light direction (inclusive range of -1 to 1)</p>\n",type:"Number"},{name:"angle",description:"<p>angle of cone. Defaults to PI/3</p>\n",type:"Number",optional:!0},{name:"concentration",description:"<p>concentration of cone. Defaults to 100</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"color",description:'<p>color as a <a href="#/p5.Color">p5.Color</a>,\n                                                    as an array, or as a CSS string</p>\n',type:"p5.Color|Number[]|String"},{name:"position",description:'<p>position of light as a <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"},{name:"direction",description:'<p>direction of light as a <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"},{name:"angle",description:"",type:"Number",optional:!0},{name:"concentration",description:"",type:"Number",optional:!0}]},{params:[{name:"v1",description:"",type:"Number"},{name:"v2",description:"",type:"Number"},{name:"v3",description:"",type:"Number"},{name:"position",description:"",type:"p5.Vector"},{name:"direction",description:"",type:"p5.Vector"},{name:"angle",description:"",type:"Number",optional:!0},{name:"concentration",description:"",type:"Number",optional:!0}]},{params:[{name:"color",description:"",type:"p5.Color|Number[]|String"},{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number"},{name:"direction",description:"",type:"p5.Vector"},{name:"angle",description:"",type:"Number",optional:!0},{name:"concentration",description:"",type:"Number",optional:!0}]},{params:[{name:"color",description:"",type:"p5.Color|Number[]|String"},{name:"position",description:"",type:"p5.Vector"},{name:"rx",description:"",type:"Number"},{name:"ry",description:"",type:"Number"},{name:"rz",description:"",type:"Number"},{name:"angle",description:"",type:"Number",optional:!0},{name:"concentration",description:"",type:"Number",optional:!0}]},{params:[{name:"v1",description:"",type:"Number"},{name:"v2",description:"",type:"Number"},{name:"v3",description:"",type:"Number"},{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number"},{name:"direction",description:"",type:"p5.Vector"},{name:"angle",description:"",type:"Number",optional:!0},{name:"concentration",description:"",type:"Number",optional:!0}]},{params:[{name:"v1",description:"",type:"Number"},{name:"v2",description:"",type:"Number"},{name:"v3",description:"",type:"Number"},{name:"position",description:"",type:"p5.Vector"},{name:"rx",description:"",type:"Number"},{name:"ry",description:"",type:"Number"},{name:"rz",description:"",type:"Number"},{name:"angle",description:"",type:"Number",optional:!0},{name:"concentration",description:"",type:"Number",optional:!0}]},{params:[{name:"color",description:"",type:"p5.Color|Number[]|String"},{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number"},{name:"rx",description:"",type:"Number"},{name:"ry",description:"",type:"Number"},{name:"rz",description:"",type:"Number"},{name:"angle",description:"",type:"Number",optional:!0},{name:"concentration",description:"",type:"Number",optional:!0}]}]},noLights:{name:"noLights",class:"p5",module:"3D"},loadModel:{name:"loadModel",class:"p5",module:"Shape",overloads:[{params:[{name:"path",description:"<p>Path of the model to be loaded</p>\n",type:"String"},{name:"normalize",description:"<p>If true, scale the model to a\n                                     standardized size when loading</p>\n",type:"Boolean"},{name:"successCallback",description:"<p>Function to be called\n                                    once the model is loaded. Will be passed\n                                    the 3D model object.</p>\n",type:"function(p5.Geometry)",optional:!0},{name:"failureCallback",description:"<p>called with event error if\n                                        the model fails to load.</p>\n",type:"Function(Event)",optional:!0},{name:"fileType",description:"<p>The file extension of the model\n                                     (<code>.stl</code>, <code>.obj</code>).</p>\n",type:"String",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"successCallback",description:"",type:"function(p5.Geometry)",optional:!0},{name:"failureCallback",description:"",type:"Function(Event)",optional:!0},{name:"fileType",description:"",type:"String",optional:!0}]}]},model:{name:"model",params:[{name:"model",description:"<p>Loaded 3d model to be rendered</p>\n",type:"p5.Geometry"}],class:"p5",module:"Shape"},loadShader:{name:"loadShader",params:[{name:"vertFilename",description:"<p>path to file containing vertex shader\nsource code</p>\n",type:"String"},{name:"fragFilename",description:"<p>path to file containing fragment shader\nsource code</p>\n",type:"String"},{name:"callback",description:"<p>callback to be executed after loadShader\ncompletes. On success, the p5.Shader object is passed as the first argument.</p>\n",type:"Function",optional:!0},{name:"errorCallback",description:"<p>callback to be executed when an error\noccurs inside loadShader. On error, the error is passed as the first\nargument.</p>\n",type:"Function",optional:!0}],class:"p5",module:"3D"},createShader:{name:"createShader",params:[{name:"vertSrc",description:"<p>source code for the vertex shader</p>\n",type:"String"},{name:"fragSrc",description:"<p>source code for the fragment shader</p>\n",type:"String"}],class:"p5",module:"3D"},shader:{name:"shader",params:[{name:"s",description:'<p>the <a href="#/p5.Shader">p5.Shader</a> object\nto use for rendering shapes.</p>\n',type:"p5.Shader"}],class:"p5",module:"3D"},resetShader:{name:"resetShader",class:"p5",module:"3D"},texture:{name:"texture",params:[{name:"tex",description:"<p>image to use as texture</p>\n",type:"p5.Image|p5.MediaElement|p5.Graphics|p5.Texture|p5.Framebuffer|p5.FramebufferTexture"}],class:"p5",module:"3D"},textureMode:{name:"textureMode",params:[{name:"mode",description:"<p>either IMAGE or NORMAL</p>\n",type:"Constant"}],class:"p5",module:"3D"},textureWrap:{name:"textureWrap",params:[{name:"wrapX",description:"<p>either CLAMP, REPEAT, or MIRROR</p>\n",type:"Constant"},{name:"wrapY",description:"<p>either CLAMP, REPEAT, or MIRROR</p>\n",type:"Constant",optional:!0}],class:"p5",module:"3D"},normalMaterial:{name:"normalMaterial",class:"p5",module:"3D"},ambientMaterial:{name:"ambientMaterial",class:"p5",module:"3D",overloads:[{params:[{name:"v1",description:"<p>red or hue value relative to the current\n                      color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value relative to the\n                      current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value relative to the\n                      current color range</p>\n",type:"Number"}],chainable:1},{params:[{name:"gray",description:"<p>number specifying value between\n                        white and black</p>\n",type:"Number"}],chainable:1},{params:[{name:"color",description:'<p>color as a <a href="#/p5.Color">p5.Color</a>,\n           as an array, or as a CSS string</p>\n',type:"p5.Color|Number[]|String"}],chainable:1}]},emissiveMaterial:{name:"emissiveMaterial",class:"p5",module:"3D",overloads:[{params:[{name:"v1",description:"<p>red or hue value relative to the current\n                           color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value relative to the\n                           current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value relative to the\n                           current color range</p>\n",type:"Number"},{name:"alpha",description:"<p>alpha value relative to current color\n                           range (default is 0-255)</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"gray",description:"<p>number specifying value between\n                        white and black</p>\n",type:"Number"}],chainable:1},{params:[{name:"color",description:'<p>color as a <a href="#/p5.Color">p5.Color</a>,\n           as an array, or as a CSS string</p>\n',type:"p5.Color|Number[]|String"}],chainable:1}]},specularMaterial:{name:"specularMaterial",class:"p5",module:"3D",overloads:[{params:[{name:"gray",description:"<p>number specifying value between white and black.</p>\n",type:"Number"},{name:"alpha",description:"<p>alpha value relative to current color range\n                                (default is 0-255)</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"v1",description:"<p>red or hue value relative to\n                                the current color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value\n                                relative to the current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value\n                                relative to the current color range</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"color",description:'<p>color as a <a href="#/p5.Color">p5.Color</a>,\n           as an array, or as a CSS string</p>\n',type:"p5.Color|Number[]|String"}],chainable:1}]},shininess:{name:"shininess",params:[{name:"shine",description:"<p>degree of shininess</p>\n",type:"Number"}],class:"p5",module:"3D"},camera:{name:"camera",params:[{name:"x",description:"<p>camera position value on x axis</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>camera position value on y axis</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>camera position value on z axis</p>\n",type:"Number",optional:!0},{name:"centerX",description:"<p>x coordinate representing center of the sketch</p>\n",type:"Number",optional:!0},{name:"centerY",description:"<p>y coordinate representing center of the sketch</p>\n",type:"Number",optional:!0},{name:"centerZ",description:"<p>z coordinate representing center of the sketch</p>\n",type:"Number",optional:!0},{name:"upX",description:"<p>x component of direction 'up' from camera</p>\n",type:"Number",optional:!0},{name:"upY",description:"<p>y component of direction 'up' from camera</p>\n",type:"Number",optional:!0},{name:"upZ",description:"<p>z component of direction 'up' from camera</p>\n",type:"Number",optional:!0}],class:"p5",module:"3D"},perspective:{name:"perspective",params:[{name:"fovy",description:'<p>camera frustum vertical field of view,\n                          from bottom to top of view, in <a href="#/p5/angleMode">angleMode</a> units</p>\n',type:"Number",optional:!0},{name:"aspect",description:"<p>camera frustum aspect ratio</p>\n",type:"Number",optional:!0},{name:"near",description:"<p>frustum near plane length</p>\n",type:"Number",optional:!0},{name:"far",description:"<p>frustum far plane length</p>\n",type:"Number",optional:!0}],class:"p5",module:"3D"},ortho:{name:"ortho",params:[{name:"left",description:"<p>camera frustum left plane</p>\n",type:"Number",optional:!0},{name:"right",description:"<p>camera frustum right plane</p>\n",type:"Number",optional:!0},{name:"bottom",description:"<p>camera frustum bottom plane</p>\n",type:"Number",optional:!0},{name:"top",description:"<p>camera frustum top plane</p>\n",type:"Number",optional:!0},{name:"near",description:"<p>camera frustum near plane</p>\n",type:"Number",optional:!0},{name:"far",description:"<p>camera frustum far plane</p>\n",type:"Number",optional:!0}],class:"p5",module:"3D"},frustum:{name:"frustum",params:[{name:"left",description:"<p>camera frustum left plane</p>\n",type:"Number",optional:!0},{name:"right",description:"<p>camera frustum right plane</p>\n",type:"Number",optional:!0},{name:"bottom",description:"<p>camera frustum bottom plane</p>\n",type:"Number",optional:!0},{name:"top",description:"<p>camera frustum top plane</p>\n",type:"Number",optional:!0},{name:"near",description:"<p>camera frustum near plane</p>\n",type:"Number",optional:!0},{name:"far",description:"<p>camera frustum far plane</p>\n",type:"Number",optional:!0}],class:"p5",module:"3D"},createCamera:{name:"createCamera",class:"p5",module:"3D"},setCamera:{name:"setCamera",params:[{name:"cam",description:"<p>p5.Camera object</p>\n",type:"p5.Camera"}],class:"p5",module:"3D"},vertexNormal:{name:"vertexNormal",params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number"},{name:"v",description:"",type:"Vector"}],class:"p5",module:"Shape"},setAttributes:{name:"setAttributes",class:"p5",module:"Rendering",overloads:[{params:[{name:"key",description:"<p>Name of attribute</p>\n",type:"String"},{name:"value",description:"<p>New value of named attribute</p>\n",type:"Boolean"}]},{params:[{name:"obj",description:"<p>object with key-value pairs</p>\n",type:"Object"}]}]},getAudioContext:{name:"getAudioContext",class:"p5",module:"p5.sound"},userStartAudio:{params:[{name:"elements",description:"<p>This argument can be an Element,\n                              Selector String, NodeList, p5.Element,\n                              jQuery Element, or an Array of any of those.</p>\n",type:"Element|Array",optional:!0},{name:"callback",description:"<p>Callback to invoke when the AudioContext\n                              has started</p>\n",type:"Function",optional:!0}],name:"userStartAudio",class:"p5",module:"p5.sound"},getOutputVolume:{name:"getOutputVolume",class:"p5",module:"p5.sound"},outputVolume:{name:"outputVolume",params:[{name:"volume",description:"<p>Volume (amplitude) between 0.0\n                                   and 1.0 or modulating signal/oscillator</p>\n",type:"Number|Object"},{name:"rampTime",description:"<p>Fade for t seconds</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>Schedule this event to happen at\n                               t seconds in the future</p>\n",type:"Number",optional:!0}],class:"p5",module:"p5.sound"},soundOut:{name:"soundOut",class:"p5",module:"p5.sound"},sampleRate:{name:"sampleRate",class:"p5",module:"p5.sound"},freqToMidi:{name:"freqToMidi",params:[{name:"frequency",description:'<p>A freqeuncy, for example, the "A"\n                           above Middle C is 440Hz</p>\n',type:"Number"}],class:"p5",module:"p5.sound"},midiToFreq:{name:"midiToFreq",params:[{name:"midiNote",description:"<p>The number of a MIDI note</p>\n",type:"Number"}],class:"p5",module:"p5.sound"},soundFormats:{name:"soundFormats",params:[{name:"formats",description:"<p>i.e. 'mp3', 'wav', 'ogg'</p>\n",type:"String",optional:!0,multiple:!0}],class:"p5",module:"p5.sound"},saveSound:{name:"saveSound",params:[{name:"soundFile",description:"<p>p5.SoundFile that you wish to save</p>\n",type:"p5.SoundFile"},{name:"fileName",description:"<p>name of the resulting .wav file.</p>\n",type:"String"}],class:"p5",module:"p5.sound"},loadSound:{name:"loadSound",params:[{name:"path",description:"<p>Path to the sound file, or an array with\n                                  paths to soundfiles in multiple formats\n                                  i.e. ['sound.ogg', 'sound.mp3'].\n                                  Alternately, accepts an object: either\n                                  from the HTML5 File API, or a p5.File.</p>\n",type:"String|Array"},{name:"successCallback",description:"<p>Name of a function to call once file loads</p>\n",type:"Function",optional:!0},{name:"errorCallback",description:"<p>Name of a function to call if there is\n                                    an error loading the file.</p>\n",type:"Function",optional:!0},{name:"whileLoading",description:"<p>Name of a function to call while file is loading.\n                               This function will receive the percentage loaded\n                               so far, from 0.0 to 1.0.</p>\n",type:"Function",optional:!0}],class:"p5",module:"p5.sound"},createConvolver:{name:"createConvolver",params:[{name:"path",description:"<p>path to a sound file</p>\n",type:"String"},{name:"callback",description:"<p>function to call if loading is successful.\n                              The object will be passed in as the argument\n                              to the callback function.</p>\n",type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to call if loading is not successful.\n                              A custom error will be passed in as the argument\n                              to the callback function.</p>\n",type:"Function",optional:!0}],class:"p5",module:"p5.sound"},setBPM:{name:"setBPM",params:[{name:"BPM",description:"<p>Beats Per Minute</p>\n",type:"Number"},{name:"rampTime",description:"<p>Seconds from now</p>\n",type:"Number"}],class:"p5",module:"p5.sound"}},"p5.Color":{toString:{name:"toString",params:[{name:"format",description:"<p>how the color string will be formatted.\nLeaving this empty formats the string as rgba(r, g, b, a).\n'#rgb' '#rgba' '#rrggbb' and '#rrggbbaa' format as hexadecimal color codes.\n'rgb' 'hsb' and 'hsl' return the color formatted in the specified color mode.\n'rgba' 'hsba' and 'hsla' are the same as above but with alpha channels.\n'rgb%' 'hsb%' 'hsl%' 'rgba%' 'hsba%' and 'hsla%' format as percentages.</p>\n",type:"String",optional:!0}],class:"p5.Color",module:"Color"},setRed:{name:"setRed",params:[{name:"red",description:"<p>the new red value.</p>\n",type:"Number"}],class:"p5.Color",module:"Color"},setGreen:{name:"setGreen",params:[{name:"green",description:"<p>the new green value.</p>\n",type:"Number"}],class:"p5.Color",module:"Color"},setBlue:{name:"setBlue",params:[{name:"blue",description:"<p>the new blue value.</p>\n",type:"Number"}],class:"p5.Color",module:"Color"},setAlpha:{name:"setAlpha",params:[{name:"alpha",description:"<p>the new alpha value.</p>\n",type:"Number"}],class:"p5.Color",module:"Color"}},"p5.Element":{elt:{name:"elt",class:"p5.Element",module:"DOM"},width:{name:"width",class:"p5.Element",module:"DOM"},height:{name:"height",class:"p5.Element",module:"DOM"},parent:{name:"parent",class:"p5.Element",module:"DOM",overloads:[{params:[{name:"parent",description:'<p>the ID, DOM node, or <a href="#/p5.Element">p5.Element</a>\n                         of desired parent element</p>\n',type:"String|p5.Element|Object"}],chainable:1},{params:[]}]},id:{name:"id",class:"p5.Element",module:"DOM",overloads:[{params:[{name:"id",description:"<p>ID of the element</p>\n",type:"String"}],chainable:1},{params:[]}]},class:{name:"class",class:"p5.Element",module:"DOM",overloads:[{params:[{name:"class",description:"<p>class to add</p>\n",type:"String"}],chainable:1},{params:[]}]},mousePressed:{name:"mousePressed",params:[{name:"fxn",description:"<p>function to be fired when mouse is\n                               pressed over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},doubleClicked:{name:"doubleClicked",params:[{name:"fxn",description:"<p>function to be fired when mouse is\n                               double clicked over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},mouseWheel:{name:"mouseWheel",params:[{name:"fxn",description:"<p>function to be fired when mouse is\n                               scrolled over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},mouseReleased:{name:"mouseReleased",params:[{name:"fxn",description:"<p>function to be fired when mouse is\n                               released over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},mouseClicked:{name:"mouseClicked",params:[{name:"fxn",description:"<p>function to be fired when mouse is\n                               clicked over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},mouseMoved:{name:"mouseMoved",params:[{name:"fxn",description:"<p>function to be fired when a mouse moves\n                               over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},mouseOver:{name:"mouseOver",params:[{name:"fxn",description:"<p>function to be fired when a mouse moves\n                               onto the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},mouseOut:{name:"mouseOut",params:[{name:"fxn",description:"<p>function to be fired when a mouse\n                               moves off of an element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},touchStarted:{name:"touchStarted",params:[{name:"fxn",description:"<p>function to be fired when a touch\n                               starts over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},touchMoved:{name:"touchMoved",params:[{name:"fxn",description:"<p>function to be fired when a touch moves over\n                               the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},touchEnded:{name:"touchEnded",params:[{name:"fxn",description:"<p>function to be fired when a touch ends\n                               over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},dragOver:{name:"dragOver",params:[{name:"fxn",description:"<p>function to be fired when a file is\n                               dragged over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},dragLeave:{name:"dragLeave",params:[{name:"fxn",description:"<p>function to be fired when a file is\n                               dragged off the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},addClass:{name:"addClass",params:[{name:"class",description:"<p>name of class to add</p>\n",type:"String"}],class:"p5.Element",module:"DOM"},removeClass:{name:"removeClass",params:[{name:"class",description:"<p>name of class to remove</p>\n",type:"String"}],class:"p5.Element",module:"DOM"},hasClass:{name:"hasClass",params:[{name:"c",description:"<p>class name of class to check</p>\n",type:"String"}],class:"p5.Element",module:"DOM"},toggleClass:{name:"toggleClass",params:[{name:"c",description:"<p>class name to toggle</p>\n",type:"String"}],class:"p5.Element",module:"DOM"},child:{name:"child",class:"p5.Element",module:"DOM",overloads:[{params:[]},{params:[{name:"child",description:'<p>the ID, DOM node, or <a href="#/p5.Element">p5.Element</a>\n                        to add to the current element</p>\n',type:"String|p5.Element",optional:!0}],chainable:1}]},center:{name:"center",params:[{name:"align",description:"<p>passing 'vertical', 'horizontal' aligns element accordingly</p>\n",type:"String",optional:!0}],class:"p5.Element",module:"DOM"},html:{name:"html",class:"p5.Element",module:"DOM",overloads:[{params:[]},{params:[{name:"html",description:"<p>the HTML to be placed inside the element</p>\n",type:"String",optional:!0},{name:"append",description:"<p>whether to append HTML to existing</p>\n",type:"Boolean",optional:!0}],chainable:1}]},position:{name:"position",class:"p5.Element",module:"DOM",overloads:[{params:[]},{params:[{name:"x",description:"<p>x-position relative to upper left of window (optional)</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>y-position relative to upper left of window (optional)</p>\n",type:"Number",optional:!0},{name:"positionType",description:"<p>it can be static, fixed, relative, sticky, initial or inherit (optional)</p>\n",type:"String",optional:!0}],chainable:1}]},style:{name:"style",class:"p5.Element",module:"DOM",overloads:[{params:[{name:"property",description:"<p>property to be set</p>\n",type:"String"}]},{params:[{name:"property",description:"",type:"String"},{name:"value",description:"<p>value to assign to property</p>\n",type:"String|p5.Color"}],chainable:1}]},attribute:{name:"attribute",class:"p5.Element",module:"DOM",overloads:[{params:[]},{params:[{name:"attr",description:"<p>attribute to set</p>\n",type:"String"},{name:"value",description:"<p>value to assign to attribute</p>\n",type:"String"}],chainable:1}]},removeAttribute:{name:"removeAttribute",params:[{name:"attr",description:"<p>attribute to remove</p>\n",type:"String"}],class:"p5.Element",module:"DOM"},value:{name:"value",class:"p5.Element",module:"DOM",overloads:[{params:[]},{params:[{name:"value",description:"",type:"String|Number"}],chainable:1}]},show:{name:"show",class:"p5.Element",module:"DOM"},hide:{name:"hide",class:"p5.Element",module:"DOM"},size:{name:"size",class:"p5.Element",module:"DOM",overloads:[{params:[]},{params:[{name:"w",description:"<p>width of the element, either AUTO, or a number</p>\n",type:"Number|Constant"},{name:"h",description:"<p>height of the element, either AUTO, or a number</p>\n",type:"Number|Constant",optional:!0}],chainable:1}]},remove:{name:"remove",class:"p5.Element",module:"DOM"},drop:{name:"drop",params:[{name:"callback",description:"<p>callback to receive loaded file, called for each file dropped.</p>\n",type:"Function"},{name:"fxn",description:"<p>callback triggered once when files are dropped with the drop event.</p>\n",type:"Function",optional:!0}],class:"p5.Element",module:"DOM"}},"p5.Graphics":{reset:{name:"reset",class:"p5.Graphics",module:"Rendering"},remove:{name:"remove",class:"p5.Graphics",module:"Rendering"},createFramebuffer:{name:"createFramebuffer",class:"p5.Graphics",module:"Rendering"}},JSON:{stringify:{name:"stringify",params:[{name:"object",description:"<p>:Javascript object that you would like to convert to JSON</p>\n",type:"Object"}],class:"JSON",module:"Foundation"}},console:{log:{name:"log",params:[{name:"message",description:"<p>:Message that you would like to print to the console</p>\n",type:"String|Expression|Object"}],class:"console",module:"Foundation"}},"p5.TypedDict":{size:{name:"size",class:"p5.TypedDict",module:"Data"},hasKey:{name:"hasKey",params:[{name:"key",description:"<p>that you want to look up</p>\n",type:"Number|String"}],class:"p5.TypedDict",module:"Data"},get:{name:"get",params:[{name:"the",description:"<p>key you want to access</p>\n",type:"Number|String"}],class:"p5.TypedDict",module:"Data"},set:{name:"set",params:[{name:"key",description:"",type:"Number|String"},{name:"value",description:"",type:"Number|String"}],class:"p5.TypedDict",module:"Data"},create:{name:"create",class:"p5.TypedDict",module:"Data",overloads:[{params:[{name:"key",description:"",type:"Number|String"},{name:"value",description:"",type:"Number|String"}]},{params:[{name:"obj",description:"<p>key/value pair</p>\n",type:"Object"}]}]},clear:{name:"clear",class:"p5.TypedDict",module:"Data"},remove:{name:"remove",params:[{name:"key",description:"<p>for the pair to remove</p>\n",type:"Number|String"}],class:"p5.TypedDict",module:"Data"},print:{name:"print",class:"p5.TypedDict",module:"Data"},saveTable:{name:"saveTable",class:"p5.TypedDict",module:"Data"},saveJSON:{name:"saveJSON",class:"p5.TypedDict",module:"Data"}},"p5.NumberDict":{add:{name:"add",params:[{name:"Key",description:"<p>for the value you wish to add to</p>\n",type:"Number"},{name:"Number",description:"<p>to add to the value</p>\n",type:"Number"}],class:"p5.NumberDict",module:"Data"},sub:{name:"sub",params:[{name:"Key",description:"<p>for the value you wish to subtract from</p>\n",type:"Number"},{name:"Number",description:"<p>to subtract from the value</p>\n",type:"Number"}],class:"p5.NumberDict",module:"Data"},mult:{name:"mult",params:[{name:"Key",description:"<p>for value you wish to multiply</p>\n",type:"Number"},{name:"Amount",description:"<p>to multiply the value by</p>\n",type:"Number"}],class:"p5.NumberDict",module:"Data"},div:{name:"div",params:[{name:"Key",description:"<p>for value you wish to divide</p>\n",type:"Number"},{name:"Amount",description:"<p>to divide the value by</p>\n",type:"Number"}],class:"p5.NumberDict",module:"Data"},minValue:{name:"minValue",class:"p5.NumberDict",module:"Data"},maxValue:{name:"maxValue",class:"p5.NumberDict",module:"Data"},minKey:{name:"minKey",class:"p5.NumberDict",module:"Data"},maxKey:{name:"maxKey",class:"p5.NumberDict",module:"Data"}},"p5.MediaElement":{src:{name:"src",class:"p5.MediaElement",module:"DOM"},play:{name:"play",class:"p5.MediaElement",module:"DOM"},stop:{name:"stop",class:"p5.MediaElement",module:"DOM"},pause:{name:"pause",class:"p5.MediaElement",module:"DOM"},loop:{name:"loop",class:"p5.MediaElement",module:"DOM"},noLoop:{name:"noLoop",class:"p5.MediaElement",module:"DOM"},autoplay:{name:"autoplay",params:[{name:"shouldAutoplay",description:"<p>whether the element should autoplay</p>\n",type:"Boolean"}],class:"p5.MediaElement",module:"DOM"},volume:{name:"volume",class:"p5.MediaElement",module:"DOM",overloads:[{params:[]},{params:[{name:"val",description:"<p>volume between 0.0 and 1.0</p>\n",type:"Number"}],chainable:1}]},speed:{name:"speed",class:"p5.MediaElement",module:"DOM",overloads:[{params:[]},{params:[{name:"speed",description:"<p>speed multiplier for element playback</p>\n",type:"Number"}],chainable:1}]},time:{name:"time",class:"p5.MediaElement",module:"DOM",overloads:[{params:[]},{params:[{name:"time",description:"<p>time to jump to (in seconds)</p>\n",type:"Number"}],chainable:1}]},duration:{name:"duration",class:"p5.MediaElement",module:"DOM"},onended:{name:"onended",params:[{name:"callback",description:"<p>function to call when the\n                            soundfile has ended. The\n                            media element will be passed\n                            in as the argument to the\n                            callback.</p>\n",type:"Function"}],class:"p5.MediaElement",module:"DOM"},connect:{name:"connect",params:[{name:"audioNode",description:"<p>AudioNode from the Web Audio API,\nor an object from the p5.sound library</p>\n",type:"AudioNode|Object"}],class:"p5.MediaElement",module:"DOM"},disconnect:{name:"disconnect",class:"p5.MediaElement",module:"DOM"},showControls:{name:"showControls",class:"p5.MediaElement",module:"DOM"},hideControls:{name:"hideControls",class:"p5.MediaElement",module:"DOM"},addCue:{name:"addCue",params:[{name:"time",description:"<p>Time in seconds, relative to this media\n                            element's playback. For example, to trigger\n                            an event every time playback reaches two\n                            seconds, pass in the number 2. This will be\n                            passed as the first parameter to\n                            the callback function.</p>\n",type:"Number"},{name:"callback",description:"<p>Name of a function that will be\n                            called at the given time. The callback will\n                            receive time and (optionally) param as its\n                            two parameters.</p>\n",type:"Function"},{name:"value",description:"<p>An object to be passed as the\n                            second parameter to the\n                            callback function.</p>\n",type:"Object",optional:!0}],class:"p5.MediaElement",module:"DOM"},removeCue:{name:"removeCue",params:[{name:"id",description:"<p>ID of the cue, as returned by addCue</p>\n",type:"Number"}],class:"p5.MediaElement",module:"DOM"},clearCues:{name:"clearCues",params:[{name:"id",description:"<p>ID of the cue, as returned by addCue</p>\n",type:"Number"}],class:"p5.MediaElement",module:"DOM"}},"p5.File":{file:{name:"file",class:"p5.File",module:"DOM"},type:{name:"type",class:"p5.File",module:"DOM"},subtype:{name:"subtype",class:"p5.File",module:"DOM"},name:{name:"name",class:"p5.File",module:"DOM"},size:{name:"size",class:"p5.File",module:"DOM"},data:{name:"data",class:"p5.File",module:"DOM"}},"p5.Image":{width:{name:"width",class:"p5.Image",module:"Image"},height:{name:"height",class:"p5.Image",module:"Image"},pixels:{name:"pixels",class:"p5.Image",module:"Image"},loadPixels:{name:"loadPixels",class:"p5.Image",module:"Image"},updatePixels:{name:"updatePixels",class:"p5.Image",module:"Image",overloads:[{params:[{name:"x",description:"<p>x-offset of the target update area for the\n                             underlying canvas</p>\n",type:"Integer"},{name:"y",description:"<p>y-offset of the target update area for the\n                             underlying canvas</p>\n",type:"Integer"},{name:"w",description:"<p>width of the target update area for the\n                             underlying canvas</p>\n",type:"Integer"},{name:"h",description:"<p>height of the target update area for the\n                             underlying canvas</p>\n",type:"Integer"}]},{params:[]}]},get:{name:"get",class:"p5.Image",module:"Image",overloads:[{params:[{name:"x",description:"<p>x-coordinate of the pixel</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the pixel</p>\n",type:"Number"},{name:"w",description:"<p>width</p>\n",type:"Number"},{name:"h",description:"<p>height</p>\n",type:"Number"}]},{params:[]},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"}]}]},set:{name:"set",params:[{name:"x",description:"<p>x-coordinate of the pixel</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the pixel</p>\n",type:"Number"},{name:"a",description:'<p>grayscale value | pixel array |\n                               a <a href="#/p5.Color">p5.Color</a> | image to copy</p>\n',type:"Number|Number[]|Object"}],class:"p5.Image",module:"Image"},resize:{name:"resize",params:[{name:"width",description:"<p>the resized image width</p>\n",type:"Number"},{name:"height",description:"<p>the resized image height</p>\n",type:"Number"}],class:"p5.Image",module:"Image"},copy:{name:"copy",class:"p5.Image",module:"Image",overloads:[{params:[{name:"srcImage",description:"<p>source image</p>\n",type:"p5.Image|p5.Element"},{name:"sx",description:"<p>X coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sy",description:"<p>Y coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sw",description:"<p>source image width</p>\n",type:"Integer"},{name:"sh",description:"<p>source image height</p>\n",type:"Integer"},{name:"dx",description:"<p>X coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dy",description:"<p>Y coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dw",description:"<p>destination image width</p>\n",type:"Integer"},{name:"dh",description:"<p>destination image height</p>\n",type:"Integer"}]},{params:[{name:"sx",description:"",type:"Integer"},{name:"sy",description:"",type:"Integer"},{name:"sw",description:"",type:"Integer"},{name:"sh",description:"",type:"Integer"},{name:"dx",description:"",type:"Integer"},{name:"dy",description:"",type:"Integer"},{name:"dw",description:"",type:"Integer"},{name:"dh",description:"",type:"Integer"}]}]},mask:{name:"mask",params:[{name:"srcImage",description:"<p>source image</p>\n",type:"p5.Image"}],class:"p5.Image",module:"Image"},filter:{name:"filter",params:[{name:"filterType",description:"<p>either THRESHOLD, GRAY, OPAQUE, INVERT,\n                               POSTERIZE, ERODE, DILATE or BLUR.\n                               See Filters.js for docs on\n                               each available filter</p>\n",type:"Constant"},{name:"filterParam",description:"<p>an optional parameter unique\n                               to each filter, see above</p>\n",type:"Number",optional:!0}],class:"p5.Image",module:"Image"},blend:{name:"blend",class:"p5.Image",module:"Image",overloads:[{params:[{name:"srcImage",description:"<p>source image</p>\n",type:"p5.Image"},{name:"sx",description:"<p>X coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sy",description:"<p>Y coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sw",description:"<p>source image width</p>\n",type:"Integer"},{name:"sh",description:"<p>source image height</p>\n",type:"Integer"},{name:"dx",description:"<p>X coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dy",description:"<p>Y coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dw",description:"<p>destination image width</p>\n",type:"Integer"},{name:"dh",description:"<p>destination image height</p>\n",type:"Integer"},{name:"blendMode",description:'<p>the blend mode. either\n    BLEND, DARKEST, LIGHTEST, DIFFERENCE,\n    MULTIPLY, EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,\n    SOFT_LIGHT, DODGE, BURN, ADD or NORMAL.</p>\n<p>Available blend modes are: normal | multiply | screen | overlay |\n           darken | lighten | color-dodge | color-burn | hard-light |\n           soft-light | difference | exclusion | hue | saturation |\n           color | luminosity</p>\n<p><a href="http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/">http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/</a></p>\n',type:"Constant"}]},{params:[{name:"sx",description:"",type:"Integer"},{name:"sy",description:"",type:"Integer"},{name:"sw",description:"",type:"Integer"},{name:"sh",description:"",type:"Integer"},{name:"dx",description:"",type:"Integer"},{name:"dy",description:"",type:"Integer"},{name:"dw",description:"",type:"Integer"},{name:"dh",description:"",type:"Integer"},{name:"blendMode",description:"",type:"Constant"}]}]},save:{name:"save",params:[{name:"filename",description:"<p>give your file a name</p>\n",type:"String"},{name:"extension",description:"<p>'png' or 'jpg'</p>\n",type:"String"}],class:"p5.Image",module:"Image"},reset:{name:"reset",class:"p5.Image",module:"Image"},getCurrentFrame:{name:"getCurrentFrame",class:"p5.Image",module:"Image"},setFrame:{name:"setFrame",params:[{name:"index",description:"<p>the index for the frame that should be displayed</p>\n",type:"Number"}],class:"p5.Image",module:"Image"},numFrames:{name:"numFrames",class:"p5.Image",module:"Image"},play:{name:"play",class:"p5.Image",module:"Image"},pause:{name:"pause",class:"p5.Image",module:"Image"},delay:{name:"delay",params:[{name:"d",description:"<p>the amount in milliseconds to delay between switching frames</p>\n",type:"Number"},{name:"index",description:"<p>the index of the frame that should have the new delay value {optional}</p>\n",type:"Number",optional:!0}],class:"p5.Image",module:"Image"}},"p5.PrintWriter":{write:{name:"write",params:[{name:"data",description:"<p>all data to be written by the PrintWriter</p>\n",type:"Array"}],class:"p5.PrintWriter",module:"IO"},print:{name:"print",params:[{name:"data",description:"<p>all data to be printed by the PrintWriter</p>\n",type:"Array"}],class:"p5.PrintWriter",module:"IO"},clear:{name:"clear",class:"p5.PrintWriter",module:"IO"},close:{name:"close",class:"p5.PrintWriter",module:"IO"}},"p5.Table":{columns:{name:"columns",class:"p5.Table",module:"IO"},rows:{name:"rows",class:"p5.Table",module:"IO"},addRow:{name:"addRow",params:[{name:"row",description:"<p>row to be added to the table</p>\n",type:"p5.TableRow",optional:!0}],class:"p5.Table",module:"IO"},removeRow:{name:"removeRow",params:[{name:"id",description:"<p>ID number of the row to remove</p>\n",type:"Integer"}],class:"p5.Table",module:"IO"},getRow:{name:"getRow",params:[{name:"rowID",description:"<p>ID number of the row to get</p>\n",type:"Integer"}],class:"p5.Table",module:"IO"},getRows:{name:"getRows",class:"p5.Table",module:"IO"},findRow:{name:"findRow",params:[{name:"value",description:"<p>The value to match</p>\n",type:"String"},{name:"column",description:"<p>ID number or title of the\n                               column to search</p>\n",type:"Integer|String"}],class:"p5.Table",module:"IO"},findRows:{name:"findRows",params:[{name:"value",description:"<p>The value to match</p>\n",type:"String"},{name:"column",description:"<p>ID number or title of the\n                               column to search</p>\n",type:"Integer|String"}],class:"p5.Table",module:"IO"},matchRow:{name:"matchRow",params:[{name:"regexp",description:"<p>The regular expression to match</p>\n",type:"String|RegExp"},{name:"column",description:"<p>The column ID (number) or\n                                 title (string)</p>\n",type:"String|Integer"}],class:"p5.Table",module:"IO"},matchRows:{name:"matchRows",params:[{name:"regexp",description:"<p>The regular expression to match</p>\n",type:"String"},{name:"column",description:"<p>The column ID (number) or\n                                 title (string)</p>\n",type:"String|Integer",optional:!0}],class:"p5.Table",module:"IO"},getColumn:{name:"getColumn",params:[{name:"column",description:"<p>String or Number of the column to return</p>\n",type:"String|Number"}],class:"p5.Table",module:"IO"},clearRows:{name:"clearRows",class:"p5.Table",module:"IO"},addColumn:{name:"addColumn",params:[{name:"title",description:"<p>title of the given column</p>\n",type:"String",optional:!0}],class:"p5.Table",module:"IO"},getColumnCount:{name:"getColumnCount",class:"p5.Table",module:"IO"},getRowCount:{name:"getRowCount",class:"p5.Table",module:"IO"},removeTokens:{name:"removeTokens",params:[{name:"chars",description:"<p>String listing characters to be removed</p>\n",type:"String"},{name:"column",description:"<p>Column ID (number)\n                                 or name (string)</p>\n",type:"String|Integer",optional:!0}],class:"p5.Table",module:"IO"},trim:{name:"trim",params:[{name:"column",description:"<p>Column ID (number)\n                                 or name (string)</p>\n",type:"String|Integer",optional:!0}],class:"p5.Table",module:"IO"},removeColumn:{name:"removeColumn",params:[{name:"column",description:"<p>columnName (string) or ID (number)</p>\n",type:"String|Integer"}],class:"p5.Table",module:"IO"},set:{name:"set",params:[{name:"row",description:"<p>row ID</p>\n",type:"Integer"},{name:"column",description:"<p>column ID (Number)\n                              or title (String)</p>\n",type:"String|Integer"},{name:"value",description:"<p>value to assign</p>\n",type:"String|Number"}],class:"p5.Table",module:"IO"},setNum:{name:"setNum",params:[{name:"row",description:"<p>row ID</p>\n",type:"Integer"},{name:"column",description:"<p>column ID (Number)\n                              or title (String)</p>\n",type:"String|Integer"},{name:"value",description:"<p>value to assign</p>\n",type:"Number"}],class:"p5.Table",module:"IO"},setString:{name:"setString",params:[{name:"row",description:"<p>row ID</p>\n",type:"Integer"},{name:"column",description:"<p>column ID (Number)\n                              or title (String)</p>\n",type:"String|Integer"},{name:"value",description:"<p>value to assign</p>\n",type:"String"}],class:"p5.Table",module:"IO"},get:{name:"get",params:[{name:"row",description:"<p>row ID</p>\n",type:"Integer"},{name:"column",description:"<p>columnName (string) or\n                                  ID (number)</p>\n",type:"String|Integer"}],class:"p5.Table",module:"IO"},getNum:{name:"getNum",params:[{name:"row",description:"<p>row ID</p>\n",type:"Integer"},{name:"column",description:"<p>columnName (string) or\n                                  ID (number)</p>\n",type:"String|Integer"}],class:"p5.Table",module:"IO"},getString:{name:"getString",params:[{name:"row",description:"<p>row ID</p>\n",type:"Integer"},{name:"column",description:"<p>columnName (string) or\n                                  ID (number)</p>\n",type:"String|Integer"}],class:"p5.Table",module:"IO"},getObject:{name:"getObject",params:[{name:"headerColumn",description:"<p>Name of the column which should be used to\n                             title each row object (optional)</p>\n",type:"String",optional:!0}],class:"p5.Table",module:"IO"},getArray:{name:"getArray",class:"p5.Table",module:"IO"}},"p5.TableRow":{set:{name:"set",params:[{name:"column",description:"<p>Column ID (Number)\n                              or Title (String)</p>\n",type:"String|Integer"},{name:"value",description:"<p>The value to be stored</p>\n",type:"String|Number"}],class:"p5.TableRow",module:"IO"},setNum:{name:"setNum",params:[{name:"column",description:"<p>Column ID (Number)\n                              or Title (String)</p>\n",type:"String|Integer"},{name:"value",description:"<p>The value to be stored\n                              as a Float</p>\n",type:"Number|String"}],class:"p5.TableRow",module:"IO"},setString:{name:"setString",params:[{name:"column",description:"<p>Column ID (Number)\n                              or Title (String)</p>\n",type:"String|Integer"},{name:"value",description:"<p>The value to be stored\n                              as a String</p>\n",type:"String|Number|Boolean|Object"}],class:"p5.TableRow",module:"IO"},get:{name:"get",params:[{name:"column",description:"<p>columnName (string) or\n                                 ID (number)</p>\n",type:"String|Integer"}],class:"p5.TableRow",module:"IO"},getNum:{name:"getNum",params:[{name:"column",description:"<p>columnName (string) or\n                                 ID (number)</p>\n",type:"String|Integer"}],class:"p5.TableRow",module:"IO"},getString:{name:"getString",params:[{name:"column",description:"<p>columnName (string) or\n                                 ID (number)</p>\n",type:"String|Integer"}],class:"p5.TableRow",module:"IO"}},"p5.XML":{getParent:{name:"getParent",class:"p5.XML",module:"IO"},getName:{name:"getName",class:"p5.XML",module:"IO"},setName:{name:"setName",params:[{name:"the",description:"<p>new name of the node</p>\n",type:"String"}],class:"p5.XML",module:"IO"},hasChildren:{name:"hasChildren",class:"p5.XML",module:"IO"},listChildren:{name:"listChildren",class:"p5.XML",module:"IO"},getChildren:{name:"getChildren",params:[{name:"name",description:"<p>element name</p>\n",type:"String",optional:!0}],class:"p5.XML",module:"IO"},getChild:{name:"getChild",params:[{name:"name",description:"<p>element name or index</p>\n",type:"String|Integer"}],class:"p5.XML",module:"IO"},addChild:{name:"addChild",params:[{name:"node",description:'<p>a <a href="#/p5.XML">p5.XML</a> Object which will be the child to be added</p>\n',type:"p5.XML"}],class:"p5.XML",module:"IO"},removeChild:{name:"removeChild",params:[{name:"name",description:"<p>element name or index</p>\n",type:"String|Integer"}],class:"p5.XML",module:"IO"},getAttributeCount:{name:"getAttributeCount",class:"p5.XML",module:"IO"},listAttributes:{name:"listAttributes",class:"p5.XML",module:"IO"},hasAttribute:{name:"hasAttribute",params:[{name:"the",description:"<p>attribute to be checked</p>\n",type:"String"}],class:"p5.XML",module:"IO"},getNum:{name:"getNum",params:[{name:"name",description:"<p>the non-null full name of the attribute</p>\n",type:"String"},{name:"defaultValue",description:"<p>the default value of the attribute</p>\n",type:"Number",optional:!0}],class:"p5.XML",module:"IO"},getString:{name:"getString",params:[{name:"name",description:"<p>the non-null full name of the attribute</p>\n",type:"String"},{name:"defaultValue",description:"<p>the default value of the attribute</p>\n",type:"Number",optional:!0}],class:"p5.XML",module:"IO"},setAttribute:{name:"setAttribute",params:[{name:"name",description:"<p>the full name of the attribute</p>\n",type:"String"},{name:"value",description:"<p>the value of the attribute</p>\n",type:"Number|String|Boolean"}],class:"p5.XML",module:"IO"},getContent:{name:"getContent",params:[{name:"defaultValue",description:"<p>value returned if no content is found</p>\n",type:"String",optional:!0}],class:"p5.XML",module:"IO"},setContent:{name:"setContent",params:[{name:"text",description:"<p>the new content</p>\n",type:"String"}],class:"p5.XML",module:"IO"},serialize:{name:"serialize",class:"p5.XML",module:"IO"}},"p5.Vector":{x:{name:"x",class:"p5.Vector",module:"Math"},y:{name:"y",class:"p5.Vector",module:"Math"},z:{name:"z",class:"p5.Vector",module:"Math"},toString:{name:"toString",class:"p5.Vector",module:"Math"},set:{name:"set",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>The x component of the vector</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>The y component of the vector</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>The z component of the vector</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"value",description:"<p>The vector to set</p>\n",type:"p5.Vector|Number[]"}],chainable:1}]},copy:{name:"copy",class:"p5.Vector",module:"Math",overloads:[{params:[]},{params:[{name:"v",description:'<p>the <a href="#/p5.Vector">p5.Vector</a> to create a copy of</p>\n',type:"p5.Vector"}],static:1}]},add:{name:"add",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>The x component of the vector to be added</p>\n",type:"Number"},{name:"y",description:"<p>The y component of the vector to be added</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>The z component of the vector to be added</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"value",description:"<p>The vector to add</p>\n",type:"p5.Vector|Number[]"}],chainable:1},{params:[{name:"v1",description:'<p>A <a href="#/p5.Vector">p5.Vector</a> to add</p>\n',type:"p5.Vector"},{name:"v2",description:'<p>A <a href="#/p5.Vector">p5.Vector</a> to add</p>\n',type:"p5.Vector"},{name:"target",description:"<p>The vector to receive the result</p>\n",type:"p5.Vector",optional:!0}],static:1}]},rem:{name:"rem",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>The x component of divisor vector</p>\n",type:"Number"},{name:"y",description:"<p>The y component of divisor vector</p>\n",type:"Number"},{name:"z",description:"<p>The z component of divisor vector</p>\n",type:"Number"}],chainable:1},{params:[{name:"value",description:"<p>The divisor vector</p>\n",type:"p5.Vector | Number[]"}],chainable:1},{params:[{name:"v1",description:'<p>The dividend <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"},{name:"v2",description:'<p>The divisor <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}],static:1},{params:[{name:"v1",description:"",type:"p5.Vector"},{name:"v2",description:"",type:"p5.Vector"}],static:1}]},sub:{name:"sub",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>The x component of the vector to subtract</p>\n",type:"Number"},{name:"y",description:"<p>The y component of the vector to subtract</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>The z component of the vector to subtract</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"value",description:"<p>the vector to subtract</p>\n",type:"p5.Vector|Number[]"}],chainable:1},{params:[{name:"v1",description:'<p>A <a href="#/p5.Vector">p5.Vector</a> to subtract from</p>\n',type:"p5.Vector"},{name:"v2",description:'<p>A <a href="#/p5.Vector">p5.Vector</a> to subtract</p>\n',type:"p5.Vector"},{name:"target",description:"<p>The vector to receive the result</p>\n",type:"p5.Vector",optional:!0}],static:1}]},mult:{name:"mult",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"n",description:"<p>The number to multiply with the vector</p>\n",type:"Number"}],chainable:1},{params:[{name:"x",description:"<p>The number to multiply with the x component of the vector</p>\n",type:"Number"},{name:"y",description:"<p>The number to multiply with the y component of the vector</p>\n",type:"Number"},{name:"z",description:"<p>The number to multiply with the z component of the vector</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"arr",description:"<p>The array to multiply with the components of the vector</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"v",description:"<p>The vector to multiply with the components of the original vector</p>\n",type:"p5.Vector"}],chainable:1},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number",optional:!0}],static:1},{params:[{name:"v",description:"",type:"p5.Vector"},{name:"n",description:"",type:"Number"},{name:"target",description:"<p>the vector to receive the result</p>\n",type:"p5.Vector",optional:!0}],static:1},{params:[{name:"v0",description:"",type:"p5.Vector"},{name:"v1",description:"",type:"p5.Vector"},{name:"target",description:"",type:"p5.Vector",optional:!0}],static:1},{params:[{name:"v0",description:"",type:"p5.Vector"},{name:"arr",description:"",type:"Number[]"},{name:"target",description:"",type:"p5.Vector",optional:!0}],static:1}]},div:{name:"div",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"n",description:"<p>The number to divide the vector by</p>\n",type:"Number"}],chainable:1},{params:[{name:"x",description:"<p>The number to divide with the x component of the vector</p>\n",type:"Number"},{name:"y",description:"<p>The number to divide with the y component of the vector</p>\n",type:"Number"},{name:"z",description:"<p>The number to divide with the z component of the vector</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"arr",description:"<p>The array to divide the components of the vector by</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"v",description:"<p>The vector to divide the components of the original vector by</p>\n",type:"p5.Vector"}],chainable:1},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number",optional:!0}],static:1},{params:[{name:"v",description:"",type:"p5.Vector"},{name:"n",description:"",type:"Number"},{name:"target",description:"<p>The vector to receive the result</p>\n",type:"p5.Vector",optional:!0}],static:1},{params:[{name:"v0",description:"",type:"p5.Vector"},{name:"v1",description:"",type:"p5.Vector"},{name:"target",description:"",type:"p5.Vector",optional:!0}],static:1},{params:[{name:"v0",description:"",type:"p5.Vector"},{name:"arr",description:"",type:"Number[]"},{name:"target",description:"",type:"p5.Vector",optional:!0}],static:1}]},mag:{name:"mag",class:"p5.Vector",module:"Math",overloads:[{params:[]},{params:[{name:"vecT",description:"<p>The vector to return the magnitude of</p>\n",type:"p5.Vector"}],static:1}]},magSq:{name:"magSq",class:"p5.Vector",module:"Math",overloads:[{params:[]},{params:[{name:"vecT",description:"<p>the vector to return the squared magnitude of</p>\n",type:"p5.Vector"}],static:1}]},dot:{name:"dot",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>The x component of the vector</p>\n",type:"Number"},{name:"y",description:"<p>The y component of the vector</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>The z component of the vector</p>\n",type:"Number",optional:!0}]},{params:[{name:"value",description:'<p>value component of the vector or a <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}]},{params:[{name:"v1",description:'<p>The first <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"},{name:"v2",description:'<p>The second <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}],static:1}]},cross:{name:"cross",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"v",description:'<p><a href="#/p5.Vector">p5.Vector</a> to be crossed</p>\n',type:"p5.Vector"}]},{params:[{name:"v1",description:'<p>The first <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"},{name:"v2",description:'<p>The second <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}],static:1}]},dist:{name:"dist",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"v",description:'<p>The x, y, and z coordinates of a <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}]},{params:[{name:"v1",description:'<p>The first <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"},{name:"v2",description:'<p>The second <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}],static:1}]},normalize:{name:"normalize",class:"p5.Vector",module:"Math",overloads:[{params:[]},{params:[{name:"v",description:"<p>The vector to normalize</p>\n",type:"p5.Vector"},{name:"target",description:"<p>The vector to receive the result</p>\n",type:"p5.Vector",optional:!0}],static:1}]},limit:{name:"limit",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"max",description:"<p>The maximum magnitude for the vector</p>\n",type:"Number"}],chainable:1},{params:[{name:"v",description:"<p>the vector to limit</p>\n",type:"p5.Vector"},{name:"max",description:"",type:"Number"},{name:"target",description:"<p>the vector to receive the result (Optional)</p>\n",type:"p5.Vector",optional:!0}],static:1}]},setMag:{name:"setMag",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"len",description:"<p>The new length for this vector</p>\n",type:"Number"}],chainable:1},{params:[{name:"v",description:"<p>the vector to set the magnitude of</p>\n",type:"p5.Vector"},{name:"len",description:"",type:"Number"},{name:"target",description:"<p>the vector to receive the result (Optional)</p>\n",type:"p5.Vector",optional:!0}],static:1}]},heading:{name:"heading",class:"p5.Vector",module:"Math",overloads:[{params:[]},{params:[{name:"v",description:"<p>the vector to find the angle of</p>\n",type:"p5.Vector"}],static:1}]},setHeading:{name:"setHeading",params:[{name:"angle",description:"<p>The angle of rotation</p>\n",type:"Number"}],class:"p5.Vector",module:"Math"},rotate:{name:"rotate",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"angle",description:"<p>The angle of rotation</p>\n",type:"Number"}],chainable:1},{params:[{name:"v",description:"",type:"p5.Vector"},{name:"angle",description:"",type:"Number"},{name:"target",description:"<p>The vector to receive the result</p>\n",type:"p5.Vector",optional:!0}],static:1}]},angleBetween:{name:"angleBetween",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"value",description:'<p>The x, y, and z components of a <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}]},{params:[{name:"v1",description:"<p>the first vector</p>\n",type:"p5.Vector"},{name:"v2",description:"<p>the second vector</p>\n",type:"p5.Vector"}],static:1}]},lerp:{name:"lerp",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>The x component</p>\n",type:"Number"},{name:"y",description:"<p>The y component</p>\n",type:"Number"},{name:"z",description:"<p>The z component</p>\n",type:"Number"},{name:"amt",description:"<p>The amount of interpolation; some value between 0.0\n                        (old vector) and 1.0 (new vector). 0.9 is very near\n                        the new vector. 0.5 is halfway in between.</p>\n",type:"Number"}],chainable:1},{params:[{name:"v",description:'<p>The <a href="#/p5.Vector">p5.Vector</a> to lerp to</p>\n',type:"p5.Vector"},{name:"amt",description:"",type:"Number"}],chainable:1},{params:[{name:"v1",description:"",type:"p5.Vector"},{name:"v2",description:"",type:"p5.Vector"},{name:"amt",description:"",type:"Number"},{name:"target",description:"<p>The vector to receive the result</p>\n",type:"p5.Vector",optional:!0}],static:1}]},slerp:{name:"slerp",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"v",description:"<p>the p5.Vector to slerp to</p>\n",type:"p5.Vector"},{name:"amt",description:"<p>The amount of interpolation. some value between 0.0\n                    (old vector) and 1.0 (new vector). 0.9 is very near\n                    the new vector. 0.5 is halfway in between.</p>\n",type:"Number"}]},{params:[{name:"v1",description:"<p>old vector</p>\n",type:"p5.Vector"},{name:"v2",description:"<p>new vectpr</p>\n",type:"p5.Vector"},{name:"amt",description:"",type:"Number"},{name:"target",description:"<p>The vector to receive the result</p>\n",type:"p5.Vector",optional:!0}],static:1}]},reflect:{name:"reflect",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"surfaceNormal",description:'<p>the <a href="#/p5.Vector">p5.Vector</a>\n                                   to reflect about.</p>\n',type:"p5.Vector"}],chainable:1},{params:[{name:"incidentVector",description:"<p>vector to be reflected</p>\n",type:"p5.Vector"},{name:"surfaceNormal",description:"",type:"p5.Vector"},{name:"target",description:"<p>the vector to receive the result (Optional)</p>\n",type:"p5.Vector",optional:!0}],static:1}]},array:{name:"array",class:"p5.Vector",module:"Math",overloads:[{params:[]},{params:[{name:"v",description:"<p>the vector to convert to an array</p>\n",type:"p5.Vector"}],static:1}]},equals:{name:"equals",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>The x component of the vector</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>The y component of the vector</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>The z component of the vector</p>\n",type:"Number",optional:!0}]},{params:[{name:"value",description:"<p>The vector to compare</p>\n",type:"p5.Vector|Array"}]},{params:[{name:"v1",description:"<p>the first vector to compare</p>\n",type:"p5.Vector|Array"},{name:"v2",description:"<p>the second vector to compare</p>\n",type:"p5.Vector|Array"}],static:1}]},fromAngle:{name:"fromAngle",params:[{name:"angle",description:'<p>The desired angle, in radians (unaffected by <a href="#/p5/angleMode">angleMode</a>)</p>\n',type:"Number"},{name:"length",description:"<p>The length of the new vector (defaults to 1)</p>\n",type:"Number",optional:!0}],class:"p5.Vector",module:"Math"},fromAngles:{name:"fromAngles",params:[{name:"theta",description:"<p>The polar angle, in radians (zero is up)</p>\n",type:"Number"},{name:"phi",description:"<p>The azimuthal angle, in radians\n                              (zero is out of the screen)</p>\n",type:"Number"},{name:"length",description:"<p>The length of the new vector (defaults to 1)</p>\n",type:"Number",optional:!0}],class:"p5.Vector",module:"Math"},random2D:{name:"random2D",class:"p5.Vector",module:"Math"},random3D:{name:"random3D",class:"p5.Vector",module:"Math"}},"p5.Font":{font:{name:"font",class:"p5.Font",module:"Typography"},textBounds:{name:"textBounds",params:[{name:"line",description:"<p>a line of text</p>\n",type:"String"},{name:"x",description:"<p>x-position</p>\n",type:"Number"},{name:"y",description:"<p>y-position</p>\n",type:"Number"},{name:"fontSize",description:"<p>font size to use (optional) Default is 12.</p>\n",type:"Number",optional:!0},{name:"options",description:"<p>opentype options (optional)\n                           opentype fonts contains alignment and baseline options.\n                           Default is 'LEFT' and 'alphabetic'</p>\n",type:"Object",optional:!0}],class:"p5.Font",module:"Typography"},textToPoints:{name:"textToPoints",params:[{name:"txt",description:"<p>a line of text</p>\n",type:"String"},{name:"x",description:"<p>x-position</p>\n",type:"Number"},{name:"y",description:"<p>y-position</p>\n",type:"Number"},{name:"fontSize",description:"<p>font size to use (optional)</p>\n",type:"Number"},{name:"options",description:"<p>an (optional) object that can contain:</p>\n<p><br>sampleFactor - the ratio of path-length to number of samples\n(default=.1); higher values yield more points and are therefore\nmore precise</p>\n<p><br>simplifyThreshold - if set to a non-zero value, collinear points will be\nbe removed from the polygon; the value represents the threshold angle to use\nwhen determining whether two edges are collinear</p>\n",type:"Object",optional:!0}],class:"p5.Font",module:"Typography"}},"p5.Camera":{eyeX:{name:"eyeX",class:"p5.Camera",module:"3D"},eyeY:{name:"eyeY",class:"p5.Camera",module:"3D"},eyeZ:{name:"eyeZ",class:"p5.Camera",module:"3D"},centerX:{name:"centerX",class:"p5.Camera",module:"3D"},centerY:{name:"centerY",class:"p5.Camera",module:"3D"},centerZ:{name:"centerZ",class:"p5.Camera",module:"3D"},upX:{name:"upX",class:"p5.Camera",module:"3D"},upY:{name:"upY",class:"p5.Camera",module:"3D"},upZ:{name:"upZ",class:"p5.Camera",module:"3D"},perspective:{name:"perspective",class:"p5.Camera",module:"3D"},ortho:{name:"ortho",class:"p5.Camera",module:"3D"},frustum:{name:"frustum",class:"p5.Camera",module:"3D"},pan:{name:"pan",params:[{name:"angle",description:'<p>amount to rotate camera in current\n<a href="#/p5/angleMode">angleMode</a> units.\nGreater than 0 values rotate counterclockwise (to the left).</p>\n',type:"Number"}],class:"p5.Camera",module:"3D"},tilt:{name:"tilt",params:[{name:"angle",description:'<p>amount to rotate camera in current\n<a href="#/p5/angleMode">angleMode</a> units.\nGreater than 0 values rotate counterclockwise (to the left).</p>\n',type:"Number"}],class:"p5.Camera",module:"3D"},lookAt:{name:"lookAt",params:[{name:"x",description:"<p>x position of a point in world space</p>\n",type:"Number"},{name:"y",description:"<p>y position of a point in world space</p>\n",type:"Number"},{name:"z",description:"<p>z position of a point in world space</p>\n",type:"Number"}],class:"p5.Camera",module:"3D"},camera:{name:"camera",class:"p5.Camera",module:"3D"},move:{name:"move",params:[{name:"x",description:"<p>amount to move along camera's left-right axis</p>\n",type:"Number"},{name:"y",description:"<p>amount to move along camera's up-down axis</p>\n",type:"Number"},{name:"z",description:"<p>amount to move along camera's forward-backward axis</p>\n",type:"Number"}],class:"p5.Camera",module:"3D"},setPosition:{name:"setPosition",params:[{name:"x",description:"<p>x position of a point in world space</p>\n",type:"Number"},{name:"y",description:"<p>y position of a point in world space</p>\n",type:"Number"},{name:"z",description:"<p>z position of a point in world space</p>\n",type:"Number"}],class:"p5.Camera",module:"3D"},set:{name:"set",params:[{name:"cam",description:"<p>source camera</p>\n",type:"p5.Camera"}],class:"p5.Camera",module:"3D"},slerp:{name:"slerp",params:[{name:"cam0",description:"<p>first p5.Camera</p>\n",type:"p5.Camera"},{name:"cam1",description:"<p>second p5.Camera</p>\n",type:"p5.Camera"},{name:"amt",description:"<p>amount to use for interpolation during slerp</p>\n",type:"Number"}],class:"p5.Camera",module:"3D"}},"p5.Framebuffer":{pixels:{name:"pixels",class:"p5.Framebuffer",module:"Rendering"},resize:{name:"resize",params:[{name:"width",description:"",type:"Number"},{name:"height",description:"",type:"Number"}],class:"p5.Framebuffer",module:"Rendering"},pixelDensity:{name:"pixelDensity",params:[{name:"density",description:"<p>A scaling factor for the number of pixels per\nside of the framebuffer</p>\n",type:"Number",optional:!0}],class:"p5.Framebuffer",module:"Rendering"},autoSized:{name:"autoSized",params:[{name:"autoSized",description:"<p>Whether or not the framebuffer should resize\nalong with the canvas it's attached to</p>\n",type:"Boolean",optional:!0}],class:"p5.Framebuffer",module:"Rendering"},createCamera:{name:"createCamera",class:"p5.Framebuffer",module:"Rendering"},remove:{name:"remove",class:"p5.Framebuffer",module:"Rendering"},begin:{name:"begin",class:"p5.Framebuffer",module:"Rendering"},end:{name:"end",class:"p5.Framebuffer",module:"Rendering"},draw:{name:"draw",params:[{name:"callback",description:"<p>A function to run that draws to the canvas. The\nfunction will immediately be run, but it will draw to the framebuffer\ninstead of the canvas.</p>\n",type:"Function"}],class:"p5.Framebuffer",module:"Rendering"},get:{name:"get",class:"p5.Framebuffer",module:"Rendering",overloads:[{params:[{name:"x",description:"<p>x-coordinate of the pixel</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the pixel</p>\n",type:"Number"},{name:"w",description:"<p>width of the section to be returned</p>\n",type:"Number"},{name:"h",description:"<p>height of the section to be returned</p>\n",type:"Number"}]},{params:[]},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"}]}]},color:{name:"color",class:"p5.Framebuffer",module:"Rendering"},depth:{name:"depth",class:"p5.Framebuffer",module:"Rendering"}},"p5.Geometry":{computeFaces:{name:"computeFaces",class:"p5.Geometry",module:"Shape"},computeNormals:{name:"computeNormals",class:"p5.Geometry",module:"Shape"},averageNormals:{name:"averageNormals",class:"p5.Geometry",module:"Shape"},averagePoleNormals:{name:"averagePoleNormals",class:"p5.Geometry",module:"Shape"},normalize:{name:"normalize",class:"p5.Geometry",module:"Shape"}},"p5.Shader":{setUniform:{name:"setUniform",params:[{name:"uniformName",description:"<p>the name of the uniform.\nMust correspond to the name used in the vertex and fragment shaders</p>\n",type:"String"},{name:"data",description:"<p>the data to associate with the uniform. The type can be\na boolean (true/false), a number, an array of numbers, or\nan image (p5.Image, p5.Graphics, p5.MediaElement, p5.Texture)</p>\n",type:"Boolean|Number|Number[]|p5.Image|p5.Graphics|p5.MediaElement|p5.Texture"}],class:"p5.Shader",module:"3D"}},"p5.SoundFile":{isLoaded:{name:"isLoaded",class:"p5.SoundFile",module:"p5.sound"},play:{name:"play",params:[{name:"startTime",description:"<p>(optional) schedule playback to start (in seconds from now).</p>\n",type:"Number",optional:!0},{name:"rate",description:"<p>(optional) playback rate</p>\n",type:"Number",optional:!0},{name:"amp",description:"<p>(optional) amplitude (volume)\n                                    of playback</p>\n",type:"Number",optional:!0},{name:"cueStart",description:"<p>(optional) cue start time in seconds</p>\n",type:"Number",optional:!0},{name:"duration",description:"<p>(optional) duration of playback in seconds</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},playMode:{name:"playMode",params:[{name:"str",description:"<p>'restart' or 'sustain' or 'untilDone'</p>\n",type:"String"}],class:"p5.SoundFile",module:"p5.sound"},pause:{name:"pause",params:[{name:"startTime",description:"<p>(optional) schedule event to occur\n                             seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},loop:{name:"loop",params:[{name:"startTime",description:"<p>(optional) schedule event to occur\n                            seconds from now</p>\n",type:"Number",optional:!0},{name:"rate",description:"<p>(optional) playback rate</p>\n",type:"Number",optional:!0},{name:"amp",description:"<p>(optional) playback volume</p>\n",type:"Number",optional:!0},{name:"cueLoopStart",description:"<p>(optional) startTime in seconds</p>\n",type:"Number",optional:!0},{name:"duration",description:"<p>(optional) loop duration in seconds</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},setLoop:{name:"setLoop",params:[{name:"Boolean",description:"<p>set looping to true or false</p>\n",type:"Boolean"}],class:"p5.SoundFile",module:"p5.sound"},isLooping:{name:"isLooping",class:"p5.SoundFile",module:"p5.sound"},isPlaying:{name:"isPlaying",class:"p5.SoundFile",module:"p5.sound"},isPaused:{name:"isPaused",class:"p5.SoundFile",module:"p5.sound"},stop:{name:"stop",params:[{name:"startTime",description:"<p>(optional) schedule event to occur\n                            in seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},pan:{name:"pan",params:[{name:"panValue",description:"<p>Set the stereo panner</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>schedule this event to happen\n                                seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},getPan:{name:"getPan",class:"p5.SoundFile",module:"p5.sound"},rate:{name:"rate",params:[{name:"playbackRate",description:"<p>Set the playback rate. 1.0 is normal,\n                                   .5 is half-speed, 2.0 is twice as fast.\n                                   Values less than zero play backwards.</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},setVolume:{name:"setVolume",params:[{name:"volume",description:"<p>Volume (amplitude) between 0.0\n                                   and 1.0 or modulating signal/oscillator</p>\n",type:"Number|Object"},{name:"rampTime",description:"<p>Fade for t seconds</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>Schedule this event to happen at\n                               t seconds in the future</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},duration:{name:"duration",class:"p5.SoundFile",module:"p5.sound"},currentTime:{name:"currentTime",class:"p5.SoundFile",module:"p5.sound"},jump:{name:"jump",params:[{name:"cueTime",description:"<p>cueTime of the soundFile in seconds.</p>\n",type:"Number"},{name:"duration",description:"<p>duration in seconds.</p>\n",type:"Number"}],class:"p5.SoundFile",module:"p5.sound"},channels:{name:"channels",class:"p5.SoundFile",module:"p5.sound"},sampleRate:{name:"sampleRate",class:"p5.SoundFile",module:"p5.sound"},frames:{name:"frames",class:"p5.SoundFile",module:"p5.sound"},getPeaks:{name:"getPeaks",params:[{name:"length",description:"<p>length is the size of the returned array.\n                         Larger length results in more precision.\n                         Defaults to 5*width of the browser window.</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},reverseBuffer:{name:"reverseBuffer",class:"p5.SoundFile",module:"p5.sound"},onended:{name:"onended",params:[{name:"callback",description:"<p>function to call when the\n                            soundfile has ended.</p>\n",type:"Function"}],class:"p5.SoundFile",module:"p5.sound"},connect:{name:"connect",params:[{name:"object",description:"<p>Audio object that accepts an input</p>\n",type:"Object",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.SoundFile",module:"p5.sound"},setPath:{name:"setPath",params:[{name:"path",description:"<p>path to audio file</p>\n",type:"String"},{name:"callback",description:"<p>Callback</p>\n",type:"Function"}],class:"p5.SoundFile",module:"p5.sound"},setBuffer:{name:"setBuffer",params:[{name:"buf",description:"<p>Array of Float32 Array(s). 2 Float32 Arrays\n                   will create a stereo source. 1 will create\n                   a mono source.</p>\n",type:"Array"}],class:"p5.SoundFile",module:"p5.sound"},addCue:{name:"addCue",params:[{name:"time",description:"<p>Time in seconds, relative to this media\n                           element's playback. For example, to trigger\n                           an event every time playback reaches two\n                           seconds, pass in the number 2. This will be\n                           passed as the first parameter to\n                           the callback function.</p>\n",type:"Number"},{name:"callback",description:"<p>Name of a function that will be\n                           called at the given time. The callback will\n                           receive time and (optionally) param as its\n                           two parameters.</p>\n",type:"Function"},{name:"value",description:"<p>An object to be passed as the\n                           second parameter to the\n                           callback function.</p>\n",type:"Object",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},removeCue:{name:"removeCue",params:[{name:"id",description:"<p>ID of the cue, as returned by addCue</p>\n",type:"Number"}],class:"p5.SoundFile",module:"p5.sound"},clearCues:{name:"clearCues",class:"p5.SoundFile",module:"p5.sound"},save:{name:"save",params:[{name:"fileName",description:"<p>name of the resulting .wav file.</p>\n",type:"String",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},getBlob:{name:"getBlob",class:"p5.SoundFile",module:"p5.sound"}},"p5.Amplitude":{setInput:{name:"setInput",params:[{name:"snd",description:"<p>set the sound source\n                                     (optional, defaults to\n                                     main output)</p>\n",type:"SoundObject|undefined",optional:!0},{name:"smoothing",description:"<p>a range between 0.0 and 1.0\n                                      to smooth amplitude readings</p>\n",type:"Number|undefined",optional:!0}],class:"p5.Amplitude",module:"p5.sound"},getLevel:{name:"getLevel",params:[{name:"channel",description:"<p>Optionally return only channel 0 (left) or 1 (right)</p>\n",type:"Number",optional:!0}],class:"p5.Amplitude",module:"p5.sound"},toggleNormalize:{name:"toggleNormalize",params:[{name:"boolean",description:"<p>set normalize to true (1) or false (0)</p>\n",type:"Boolean",optional:!0}],class:"p5.Amplitude",module:"p5.sound"},smooth:{name:"smooth",params:[{name:"set",description:"<p>smoothing from 0.0 <= 1</p>\n",type:"Number"}],class:"p5.Amplitude",module:"p5.sound"}},"p5.FFT":{setInput:{name:"setInput",params:[{name:"source",description:"<p>p5.sound object (or web audio API source node)</p>\n",type:"Object",optional:!0}],class:"p5.FFT",module:"p5.sound"},waveform:{name:"waveform",params:[{name:"bins",description:"<p>Must be a power of two between\n                          16 and 1024. Defaults to 1024.</p>\n",type:"Number",optional:!0},{name:"precision",description:"<p>If any value is provided, will return results\n                            in a Float32 Array which is more precise\n                            than a regular array.</p>\n",type:"String",optional:!0}],class:"p5.FFT",module:"p5.sound"},analyze:{name:"analyze",params:[{name:"bins",description:"<p>Must be a power of two between\n                           16 and 1024. Defaults to 1024.</p>\n",type:"Number",optional:!0},{name:"scale",description:'<p>If "dB," returns decibel\n                           float measurements between\n                           -140 and 0 (max).\n                           Otherwise returns integers from 0-255.</p>\n',type:"Number",optional:!0}],class:"p5.FFT",module:"p5.sound"},getEnergy:{name:"getEnergy",params:[{name:"frequency1",description:'<p>Will return a value representing\n                              energy at this frequency. Alternately,\n                              the strings "bass", "lowMid" "mid",\n                              "highMid", and "treble" will return\n                              predefined frequency ranges.</p>\n',type:"Number|String"},{name:"frequency2",description:"<p>If a second frequency is given,\n                              will return average amount of\n                              energy that exists between the\n                              two frequencies.</p>\n",type:"Number",optional:!0}],class:"p5.FFT",module:"p5.sound"},getCentroid:{name:"getCentroid",class:"p5.FFT",module:"p5.sound"},smooth:{name:"smooth",params:[{name:"smoothing",description:"<p>0.0 < smoothing < 1.0.\n                             Defaults to 0.8.</p>\n",type:"Number"}],class:"p5.FFT",module:"p5.sound"},linAverages:{name:"linAverages",params:[{name:"N",description:"<p>Number of returned frequency groups</p>\n",type:"Number"}],class:"p5.FFT",module:"p5.sound"},logAverages:{name:"logAverages",params:[{name:"octaveBands",description:"<p>Array of Octave Bands objects for grouping</p>\n",type:"Array"}],class:"p5.FFT",module:"p5.sound"},getOctaveBands:{name:"getOctaveBands",params:[{name:"N",description:"<p>Specifies the 1/N type of generated octave bands</p>\n",type:"Number"},{name:"fCtr0",description:"<p>Minimum central frequency for the lowest band</p>\n",type:"Number"}],class:"p5.FFT",module:"p5.sound"}},"p5.Oscillator":{start:{name:"start",params:[{name:"time",description:"<p>startTime in seconds from now.</p>\n",type:"Number",optional:!0},{name:"frequency",description:"<p>frequency in Hz.</p>\n",type:"Number",optional:!0}],class:"p5.Oscillator",module:"p5.sound"},stop:{name:"stop",params:[{name:"secondsFromNow",description:"<p>Time, in seconds from now.</p>\n",type:"Number"}],class:"p5.Oscillator",module:"p5.sound"},amp:{name:"amp",params:[{name:"vol",description:"<p>between 0 and 1.0\n                            or a modulating signal/oscillator</p>\n",type:"Number|Object"},{name:"rampTime",description:"<p>create a fade that lasts rampTime</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Oscillator",module:"p5.sound"},getAmp:{name:"getAmp",class:"p5.Oscillator",module:"p5.sound"},freq:{name:"freq",params:[{name:"Frequency",description:"<p>Frequency in Hz\n                                      or modulating signal/oscillator</p>\n",type:"Number|Object"},{name:"rampTime",description:"<p>Ramp time (in seconds)</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>Schedule this event to happen\n                                 at x seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Oscillator",module:"p5.sound"},getFreq:{name:"getFreq",class:"p5.Oscillator",module:"p5.sound"},setType:{name:"setType",params:[{name:"type",description:"<p>'sine', 'triangle', 'sawtooth' or 'square'.</p>\n",type:"String"}],class:"p5.Oscillator",module:"p5.sound"},getType:{name:"getType",class:"p5.Oscillator",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"<p>A p5.sound or Web Audio object</p>\n",type:"Object"}],class:"p5.Oscillator",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.Oscillator",module:"p5.sound"},pan:{name:"pan",params:[{name:"panning",description:"<p>Number between -1 and 1</p>\n",type:"Number"},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number"}],class:"p5.Oscillator",module:"p5.sound"},getPan:{name:"getPan",class:"p5.Oscillator",module:"p5.sound"},phase:{name:"phase",params:[{name:"phase",description:"<p>float between 0.0 and 1.0</p>\n",type:"Number"}],class:"p5.Oscillator",module:"p5.sound"},add:{name:"add",params:[{name:"number",description:"<p>Constant number to add</p>\n",type:"Number"}],class:"p5.Oscillator",module:"p5.sound"},mult:{name:"mult",params:[{name:"number",description:"<p>Constant number to multiply</p>\n",type:"Number"}],class:"p5.Oscillator",module:"p5.sound"},scale:{name:"scale",params:[{name:"inMin",description:"<p>input range minumum</p>\n",type:"Number"},{name:"inMax",description:"<p>input range maximum</p>\n",type:"Number"},{name:"outMin",description:"<p>input range minumum</p>\n",type:"Number"},{name:"outMax",description:"<p>input range maximum</p>\n",type:"Number"}],class:"p5.Oscillator",module:"p5.sound"}},"p5.Envelope":{attackTime:{name:"attackTime",class:"p5.Envelope",module:"p5.sound"},attackLevel:{name:"attackLevel",class:"p5.Envelope",module:"p5.sound"},decayTime:{name:"decayTime",class:"p5.Envelope",module:"p5.sound"},decayLevel:{name:"decayLevel",class:"p5.Envelope",module:"p5.sound"},releaseTime:{name:"releaseTime",class:"p5.Envelope",module:"p5.sound"},releaseLevel:{name:"releaseLevel",class:"p5.Envelope",module:"p5.sound"},set:{name:"set",params:[{name:"attackTime",description:"<p>Time (in seconds) before level\n                               reaches attackLevel</p>\n",type:"Number"},{name:"attackLevel",description:"<p>Typically an amplitude between\n                               0.0 and 1.0</p>\n",type:"Number"},{name:"decayTime",description:"<p>Time</p>\n",type:"Number"},{name:"decayLevel",description:"<p>Amplitude (In a standard ADSR envelope,\n                               decayLevel = sustainLevel)</p>\n",type:"Number"},{name:"releaseTime",description:"<p>Release Time (in seconds)</p>\n",type:"Number"},{name:"releaseLevel",description:"<p>Amplitude</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"},setADSR:{name:"setADSR",params:[{name:"attackTime",description:"<p>Time (in seconds before envelope\n                              reaches Attack Level</p>\n",type:"Number"},{name:"decayTime",description:"<p>Time (in seconds) before envelope\n                              reaches Decay/Sustain Level</p>\n",type:"Number",optional:!0},{name:"susRatio",description:"<p>Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,\n                              where 1.0 = attackLevel, 0.0 = releaseLevel.\n                              The susRatio determines the decayLevel and the level at which the\n                              sustain portion of the envelope will sustain.\n                              For example, if attackLevel is 0.4, releaseLevel is 0,\n                              and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is\n                              increased to 1.0 (using <code>setRange</code>),\n                              then decayLevel would increase proportionally, to become 0.5.</p>\n",type:"Number",optional:!0},{name:"releaseTime",description:"<p>Time in seconds from now (defaults to 0)</p>\n",type:"Number",optional:!0}],class:"p5.Envelope",module:"p5.sound"},setRange:{name:"setRange",params:[{name:"aLevel",description:"<p>attack level (defaults to 1)</p>\n",type:"Number"},{name:"rLevel",description:"<p>release level (defaults to 0)</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"},setInput:{name:"setInput",params:[{name:"inputs",description:"<p>A p5.sound object or\n                              Web Audio Param.</p>\n",type:"Object",optional:!0,multiple:!0}],class:"p5.Envelope",module:"p5.sound"},setExp:{name:"setExp",params:[{name:"isExp",description:"<p>true is exponential, false is linear</p>\n",type:"Boolean"}],class:"p5.Envelope",module:"p5.sound"},play:{name:"play",params:[{name:"unit",description:"<p>A p5.sound object or\n                              Web Audio Param.</p>\n",type:"Object"},{name:"startTime",description:"<p>time from now (in seconds) at which to play</p>\n",type:"Number",optional:!0},{name:"sustainTime",description:"<p>time to sustain before releasing the envelope</p>\n",type:"Number",optional:!0}],class:"p5.Envelope",module:"p5.sound"},triggerAttack:{name:"triggerAttack",params:[{name:"unit",description:"<p>p5.sound Object or Web Audio Param</p>\n",type:"Object"},{name:"secondsFromNow",description:"<p>time from now (in seconds)</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"},triggerRelease:{name:"triggerRelease",params:[{name:"unit",description:"<p>p5.sound Object or Web Audio Param</p>\n",type:"Object"},{name:"secondsFromNow",description:"<p>time to trigger the release</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"},ramp:{name:"ramp",params:[{name:"unit",description:"<p>p5.sound Object or Web Audio Param</p>\n",type:"Object"},{name:"secondsFromNow",description:"<p>When to trigger the ramp</p>\n",type:"Number"},{name:"v",description:"<p>Target value</p>\n",type:"Number"},{name:"v2",description:"<p>Second target value</p>\n",type:"Number",optional:!0}],class:"p5.Envelope",module:"p5.sound"},add:{name:"add",params:[{name:"number",description:"<p>Constant number to add</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"},mult:{name:"mult",params:[{name:"number",description:"<p>Constant number to multiply</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"},scale:{name:"scale",params:[{name:"inMin",description:"<p>input range minumum</p>\n",type:"Number"},{name:"inMax",description:"<p>input range maximum</p>\n",type:"Number"},{name:"outMin",description:"<p>input range minumum</p>\n",type:"Number"},{name:"outMax",description:"<p>input range maximum</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"}},"p5.Noise":{setType:{name:"setType",params:[{name:"type",description:"<p>'white', 'pink' or 'brown'</p>\n",type:"String",optional:!0}],class:"p5.Noise",module:"p5.sound"}},"p5.Pulse":{width:{name:"width",params:[{name:"width",description:"<p>Width between the pulses (0 to 1.0,\n                       defaults to 0)</p>\n",type:"Number",optional:!0}],class:"p5.Pulse",module:"p5.sound"}},"p5.AudioIn":{input:{name:"input",class:"p5.AudioIn",module:"p5.sound"},output:{name:"output",class:"p5.AudioIn",module:"p5.sound"},stream:{name:"stream",class:"p5.AudioIn",module:"p5.sound"},mediaStream:{name:"mediaStream",class:"p5.AudioIn",module:"p5.sound"},currentSource:{name:"currentSource",class:"p5.AudioIn",module:"p5.sound"},enabled:{name:"enabled",class:"p5.AudioIn",module:"p5.sound"},amplitude:{name:"amplitude",class:"p5.AudioIn",module:"p5.sound"},start:{name:"start",params:[{name:"successCallback",description:"<p>Name of a function to call on\n                                  success.</p>\n",type:"Function",optional:!0},{name:"errorCallback",description:"<p>Name of a function to call if\n                                  there was an error. For example,\n                                  some browsers do not support\n                                  getUserMedia.</p>\n",type:"Function",optional:!0}],class:"p5.AudioIn",module:"p5.sound"},stop:{name:"stop",class:"p5.AudioIn",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"<p>An object that accepts audio input,\n                        such as an FFT</p>\n",type:"Object",optional:!0}],class:"p5.AudioIn",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.AudioIn",module:"p5.sound"},getLevel:{name:"getLevel",params:[{name:"smoothing",description:"<p>Smoothing is 0.0 by default.\n                             Smooths values based on previous values.</p>\n",type:"Number",optional:!0}],class:"p5.AudioIn",module:"p5.sound"},amp:{name:"amp",params:[{name:"vol",description:"<p>between 0 and 1.0</p>\n",type:"Number"},{name:"time",description:"<p>ramp time (optional)</p>\n",type:"Number",optional:!0}],class:"p5.AudioIn",module:"p5.sound"},getSources:{name:"getSources",params:[{name:"successCallback",description:"<p>This callback function handles the sources when they\n                                     have been enumerated. The callback function\n                                     receives the deviceList array as its only argument</p>\n",type:"Function",optional:!0},{name:"errorCallback",description:"<p>This optional callback receives the error\n                                   message as its argument.</p>\n",type:"Function",optional:!0}],class:"p5.AudioIn",module:"p5.sound"},setSource:{name:"setSource",params:[{name:"num",description:"<p>position of input source in the array</p>\n",type:"Number"}],class:"p5.AudioIn",module:"p5.sound"}},"p5.Effect":{amp:{name:"amp",params:[{name:"vol",description:"<p>amplitude between 0 and 1.0</p>\n",type:"Number",optional:!0},{name:"rampTime",description:"<p>create a fade that lasts until rampTime</p>\n",type:"Number",optional:!0},{name:"tFromNow",description:"<p>schedule this event to happen in tFromNow seconds</p>\n",type:"Number",optional:!0}],class:"p5.Effect",module:"p5.sound"},chain:{name:"chain",params:[{name:"arguments",description:"<p>Chain together multiple sound objects</p>\n",type:"Object",optional:!0}],class:"p5.Effect",module:"p5.sound"},drywet:{name:"drywet",params:[{name:"fade",description:"<p>The desired drywet value (0 - 1.0)</p>\n",type:"Number",optional:!0}],class:"p5.Effect",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"",type:"Object"}],class:"p5.Effect",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.Effect",module:"p5.sound"}},"p5.Filter":{biquadFilter:{name:"biquadFilter",class:"p5.Filter",module:"p5.sound"},process:{name:"process",params:[{name:"Signal",description:"<p>An object that outputs audio</p>\n",type:"Object"},{name:"freq",description:"<p>Frequency in Hz, from 10 to 22050</p>\n",type:"Number",optional:!0},{name:"res",description:"<p>Resonance/Width of the filter frequency\n                      from 0.001 to 1000</p>\n",type:"Number",optional:!0}],class:"p5.Filter",module:"p5.sound"},set:{name:"set",params:[{name:"freq",description:"<p>Frequency in Hz, from 10 to 22050</p>\n",type:"Number",optional:!0},{name:"res",description:"<p>Resonance (Q) from 0.001 to 1000</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Filter",module:"p5.sound"},freq:{name:"freq",params:[{name:"freq",description:"<p>Filter Frequency</p>\n",type:"Number"},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Filter",module:"p5.sound"},res:{name:"res",params:[{name:"res",description:"<p>Resonance/Width of filter freq\n                     from 0.001 to 1000</p>\n",type:"Number"},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Filter",module:"p5.sound"},gain:{name:"gain",params:[{name:"gain",description:"",type:"Number"}],class:"p5.Filter",module:"p5.sound"},toggle:{name:"toggle",class:"p5.Filter",module:"p5.sound"},setType:{name:"setType",params:[{name:"t",description:"",type:"String"}],class:"p5.Filter",module:"p5.sound"}},"p5.EQ":{bands:{name:"bands",class:"p5.EQ",module:"p5.sound"},process:{name:"process",params:[{name:"src",description:"<p>Audio source</p>\n",type:"Object"}],class:"p5.EQ",module:"p5.sound"}},"p5.Panner3D":{panner:{name:"panner",class:"p5.Panner3D",module:"p5.sound"},process:{name:"process",params:[{name:"src",description:"<p>Input source</p>\n",type:"Object"}],class:"p5.Panner3D",module:"p5.sound"},set:{name:"set",params:[{name:"xVal",description:"",type:"Number"},{name:"yVal",description:"",type:"Number"},{name:"zVal",description:"",type:"Number"},{name:"time",description:"",type:"Number"}],class:"p5.Panner3D",module:"p5.sound"},positionX:{name:"positionX",class:"p5.Panner3D",module:"p5.sound"},positionY:{name:"positionY",class:"p5.Panner3D",module:"p5.sound"},positionZ:{name:"positionZ",class:"p5.Panner3D",module:"p5.sound"},orient:{name:"orient",params:[{name:"xVal",description:"",type:"Number"},{name:"yVal",description:"",type:"Number"},{name:"zVal",description:"",type:"Number"},{name:"time",description:"",type:"Number"}],class:"p5.Panner3D",module:"p5.sound"},orientX:{name:"orientX",class:"p5.Panner3D",module:"p5.sound"},orientY:{name:"orientY",class:"p5.Panner3D",module:"p5.sound"},orientZ:{name:"orientZ",class:"p5.Panner3D",module:"p5.sound"},setFalloff:{name:"setFalloff",params:[{name:"maxDistance",description:"",type:"Number",optional:!0},{name:"rolloffFactor",description:"",type:"Number",optional:!0}],class:"p5.Panner3D",module:"p5.sound"},maxDist:{name:"maxDist",params:[{name:"maxDistance",description:"",type:"Number"}],class:"p5.Panner3D",module:"p5.sound"},rollof:{name:"rollof",params:[{name:"rolloffFactor",description:"",type:"Number"}],class:"p5.Panner3D",module:"p5.sound"}},"p5.Delay":{leftDelay:{name:"leftDelay",class:"p5.Delay",module:"p5.sound"},rightDelay:{name:"rightDelay",class:"p5.Delay",module:"p5.sound"},process:{name:"process",params:[{name:"Signal",description:"<p>An object that outputs audio</p>\n",type:"Object"},{name:"delayTime",description:"<p>Time (in seconds) of the delay/echo.\n                             Some browsers limit delayTime to\n                             1 second.</p>\n",type:"Number",optional:!0},{name:"feedback",description:"<p>sends the delay back through itself\n                             in a loop that decreases in volume\n                             each time.</p>\n",type:"Number",optional:!0},{name:"lowPass",description:"<p>Cutoff frequency. Only frequencies\n                             below the lowPass will be part of the\n                             delay.</p>\n",type:"Number",optional:!0}],class:"p5.Delay",module:"p5.sound"},delayTime:{name:"delayTime",params:[{name:"delayTime",description:"<p>Time (in seconds) of the delay</p>\n",type:"Number"}],class:"p5.Delay",module:"p5.sound"},feedback:{name:"feedback",params:[{name:"feedback",description:"<p>0.0 to 1.0, or an object such as an\n                                Oscillator that can be used to\n                                modulate this param</p>\n",type:"Number|Object"}],class:"p5.Delay",module:"p5.sound"},filter:{name:"filter",params:[{name:"cutoffFreq",description:"<p>A lowpass filter will cut off any\n                            frequencies higher than the filter frequency.</p>\n",type:"Number|Object"},{name:"res",description:"<p>Resonance of the filter frequency\n                            cutoff, or an object (i.e. a p5.Oscillator)\n                            that can be used to modulate this parameter.\n                            High numbers (i.e. 15) will produce a resonance,\n                            low numbers (i.e. .2) will produce a slope.</p>\n",type:"Number|Object"}],class:"p5.Delay",module:"p5.sound"},setType:{name:"setType",params:[{name:"type",description:"<p>'pingPong' (1) or 'default' (0)</p>\n",type:"String|Number"}],class:"p5.Delay",module:"p5.sound"},amp:{name:"amp",params:[{name:"volume",description:"<p>amplitude between 0 and 1.0</p>\n",type:"Number"},{name:"rampTime",description:"<p>create a fade that lasts rampTime</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Delay",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"",type:"Object"}],class:"p5.Delay",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.Delay",module:"p5.sound"}},"p5.Reverb":{process:{name:"process",params:[{name:"src",description:"<p>p5.sound / Web Audio object with a sound\n                         output.</p>\n",type:"Object"},{name:"seconds",description:"<p>Duration of the reverb, in seconds.\n                         Min: 0, Max: 10. Defaults to 3.</p>\n",type:"Number",optional:!0},{name:"decayRate",description:"<p>Percentage of decay with each echo.\n                          Min: 0, Max: 100. Defaults to 2.</p>\n",type:"Number",optional:!0},{name:"reverse",description:"<p>Play the reverb backwards or forwards.</p>\n",type:"Boolean",optional:!0}],class:"p5.Reverb",module:"p5.sound"},set:{name:"set",params:[{name:"seconds",description:"<p>Duration of the reverb, in seconds.\n                         Min: 0, Max: 10. Defaults to 3.</p>\n",type:"Number",optional:!0},{name:"decayRate",description:"<p>Percentage of decay with each echo.\n                          Min: 0, Max: 100. Defaults to 2.</p>\n",type:"Number",optional:!0},{name:"reverse",description:"<p>Play the reverb backwards or forwards.</p>\n",type:"Boolean",optional:!0}],class:"p5.Reverb",module:"p5.sound"},amp:{name:"amp",params:[{name:"volume",description:"<p>amplitude between 0 and 1.0</p>\n",type:"Number"},{name:"rampTime",description:"<p>create a fade that lasts rampTime</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Reverb",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"",type:"Object"}],class:"p5.Reverb",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.Reverb",module:"p5.sound"}},"p5.Convolver":{convolverNode:{name:"convolverNode",class:"p5.Convolver",module:"p5.sound"},impulses:{name:"impulses",class:"p5.Convolver",module:"p5.sound"},process:{name:"process",params:[{name:"src",description:"<p>p5.sound / Web Audio object with a sound\n                         output.</p>\n",type:"Object"}],class:"p5.Convolver",module:"p5.sound"},addImpulse:{name:"addImpulse",params:[{name:"path",description:"<p>path to a sound file</p>\n",type:"String"},{name:"callback",description:"<p>function (optional)</p>\n",type:"Function"},{name:"errorCallback",description:"<p>function (optional)</p>\n",type:"Function"}],class:"p5.Convolver",module:"p5.sound"},resetImpulse:{name:"resetImpulse",params:[{name:"path",description:"<p>path to a sound file</p>\n",type:"String"},{name:"callback",description:"<p>function (optional)</p>\n",type:"Function"},{name:"errorCallback",description:"<p>function (optional)</p>\n",type:"Function"}],class:"p5.Convolver",module:"p5.sound"},toggleImpulse:{name:"toggleImpulse",params:[{name:"id",description:"<p>Identify the impulse by its original filename\n                          (String), or by its position in the\n                          <code>.impulses</code> Array (Number).</p>\n",type:"String|Number"}],class:"p5.Convolver",module:"p5.sound"}},"p5.Phrase":{sequence:{name:"sequence",class:"p5.Phrase",module:"p5.sound"}},"p5.Part":{setBPM:{name:"setBPM",params:[{name:"BPM",description:"<p>Beats Per Minute</p>\n",type:"Number"},{name:"rampTime",description:"<p>Seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Part",module:"p5.sound"},getBPM:{name:"getBPM",class:"p5.Part",module:"p5.sound"},start:{name:"start",params:[{name:"time",description:"<p>seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Part",module:"p5.sound"},loop:{name:"loop",params:[{name:"time",description:"<p>seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Part",module:"p5.sound"},noLoop:{name:"noLoop",class:"p5.Part",module:"p5.sound"},stop:{name:"stop",params:[{name:"time",description:"<p>seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Part",module:"p5.sound"},pause:{name:"pause",params:[{name:"time",description:"<p>seconds from now</p>\n",type:"Number"}],class:"p5.Part",module:"p5.sound"},addPhrase:{name:"addPhrase",params:[{name:"phrase",description:"<p>reference to a p5.Phrase</p>\n",type:"p5.Phrase"}],class:"p5.Part",module:"p5.sound"},removePhrase:{name:"removePhrase",params:[{name:"phraseName",description:"",type:"String"}],class:"p5.Part",module:"p5.sound"},getPhrase:{name:"getPhrase",params:[{name:"phraseName",description:"",type:"String"}],class:"p5.Part",module:"p5.sound"},replaceSequence:{name:"replaceSequence",params:[{name:"phraseName",description:"",type:"String"},{name:"sequence",description:"<p>Array of values to pass into the callback\n                          at each step of the phrase.</p>\n",type:"Array"}],class:"p5.Part",module:"p5.sound"},onStep:{name:"onStep",params:[{name:"callback",description:"<p>The name of the callback\n                            you want to fire\n                            on every beat/tatum.</p>\n",type:"Function"}],class:"p5.Part",module:"p5.sound"}},"p5.Score":{start:{name:"start",class:"p5.Score",module:"p5.sound"},stop:{name:"stop",class:"p5.Score",module:"p5.sound"},pause:{name:"pause",class:"p5.Score",module:"p5.sound"},loop:{name:"loop",class:"p5.Score",module:"p5.sound"},noLoop:{name:"noLoop",class:"p5.Score",module:"p5.sound"},setBPM:{name:"setBPM",params:[{name:"BPM",description:"<p>Beats Per Minute</p>\n",type:"Number"},{name:"rampTime",description:"<p>Seconds from now</p>\n",type:"Number"}],class:"p5.Score",module:"p5.sound"}},"p5.SoundLoop":{bpm:{name:"bpm",class:"p5.SoundLoop",module:"p5.sound"},timeSignature:{name:"timeSignature",class:"p5.SoundLoop",module:"p5.sound"},interval:{name:"interval",class:"p5.SoundLoop",module:"p5.sound"},iterations:{name:"iterations",class:"p5.SoundLoop",module:"p5.sound"},musicalTimeMode:{name:"musicalTimeMode",class:"p5.SoundLoop",module:"p5.sound"},maxIterations:{name:"maxIterations",class:"p5.SoundLoop",module:"p5.sound"},start:{name:"start",params:[{name:"timeFromNow",description:"<p>schedule a starting time</p>\n",type:"Number",optional:!0}],class:"p5.SoundLoop",module:"p5.sound"},stop:{name:"stop",params:[{name:"timeFromNow",description:"<p>schedule a stopping time</p>\n",type:"Number",optional:!0}],class:"p5.SoundLoop",module:"p5.sound"},pause:{name:"pause",params:[{name:"timeFromNow",description:"<p>schedule a pausing time</p>\n",type:"Number",optional:!0}],class:"p5.SoundLoop",module:"p5.sound"},syncedStart:{name:"syncedStart",params:[{name:"otherLoop",description:"<p>a p5.SoundLoop to sync with</p>\n",type:"Object"},{name:"timeFromNow",description:"<p>Start the loops in sync after timeFromNow seconds</p>\n",type:"Number",optional:!0}],class:"p5.SoundLoop",module:"p5.sound"}},"p5.Compressor":{compressor:{name:"compressor",class:"p5.Compressor",module:"p5.sound"},process:{name:"process",params:[{name:"src",description:"<p>Sound source to be connected</p>\n",type:"Object"},{name:"attack",description:"<p>The amount of time (in seconds) to reduce the gain by 10dB,\n                           default = .003, range 0 - 1</p>\n",type:"Number",optional:!0},{name:"knee",description:'<p>A decibel value representing the range above the\n                           threshold where the curve smoothly transitions to the "ratio" portion.\n                           default = 30, range 0 - 40</p>\n',type:"Number",optional:!0},{name:"ratio",description:"<p>The amount of dB change in input for a 1 dB change in output\n                           default = 12, range 1 - 20</p>\n",type:"Number",optional:!0},{name:"threshold",description:"<p>The decibel value above which the compression will start taking effect\n                           default = -24, range -100 - 0</p>\n",type:"Number",optional:!0},{name:"release",description:"<p>The amount of time (in seconds) to increase the gain by 10dB\n                           default = .25, range 0 - 1</p>\n",type:"Number",optional:!0}],class:"p5.Compressor",module:"p5.sound"},set:{name:"set",params:[{name:"attack",description:"<p>The amount of time (in seconds) to reduce the gain by 10dB,\n                           default = .003, range 0 - 1</p>\n",type:"Number"},{name:"knee",description:'<p>A decibel value representing the range above the\n                           threshold where the curve smoothly transitions to the "ratio" portion.\n                           default = 30, range 0 - 40</p>\n',type:"Number"},{name:"ratio",description:"<p>The amount of dB change in input for a 1 dB change in output\n                           default = 12, range 1 - 20</p>\n",type:"Number"},{name:"threshold",description:"<p>The decibel value above which the compression will start taking effect\n                           default = -24, range -100 - 0</p>\n",type:"Number"},{name:"release",description:"<p>The amount of time (in seconds) to increase the gain by 10dB\n                           default = .25, range 0 - 1</p>\n",type:"Number"}],class:"p5.Compressor",module:"p5.sound"},attack:{name:"attack",params:[{name:"attack",description:"<p>Attack is the amount of time (in seconds) to reduce the gain by 10dB,\n                         default = .003, range 0 - 1</p>\n",type:"Number",optional:!0},{name:"time",description:"<p>Assign time value to schedule the change in value</p>\n",type:"Number",optional:!0}],class:"p5.Compressor",module:"p5.sound"},knee:{name:"knee",params:[{name:"knee",description:'<p>A decibel value representing the range above the\n                       threshold where the curve smoothly transitions to the "ratio" portion.\n                       default = 30, range 0 - 40</p>\n',type:"Number",optional:!0},{name:"time",description:"<p>Assign time value to schedule the change in value</p>\n",type:"Number",optional:!0}],class:"p5.Compressor",module:"p5.sound"},ratio:{name:"ratio",params:[{name:"ratio",description:"<p>The amount of dB change in input for a 1 dB change in output\n                           default = 12, range 1 - 20</p>\n",type:"Number",optional:!0},{name:"time",description:"<p>Assign time value to schedule the change in value</p>\n",type:"Number",optional:!0}],class:"p5.Compressor",module:"p5.sound"},threshold:{name:"threshold",params:[{name:"threshold",description:"<p>The decibel value above which the compression will start taking effect\n                           default = -24, range -100 - 0</p>\n",type:"Number"},{name:"time",description:"<p>Assign time value to schedule the change in value</p>\n",type:"Number",optional:!0}],class:"p5.Compressor",module:"p5.sound"},release:{name:"release",params:[{name:"release",description:"<p>The amount of time (in seconds) to increase the gain by 10dB\n                           default = .25, range 0 - 1</p>\n",type:"Number"},{name:"time",description:"<p>Assign time value to schedule the change in value</p>\n",type:"Number",optional:!0}],class:"p5.Compressor",module:"p5.sound"},reduction:{name:"reduction",class:"p5.Compressor",module:"p5.sound"}},"p5.PeakDetect":{isDetected:{name:"isDetected",class:"p5.PeakDetect",module:"p5.sound"},update:{name:"update",params:[{name:"fftObject",description:"<p>A p5.FFT object</p>\n",type:"p5.FFT"}],class:"p5.PeakDetect",module:"p5.sound"},onPeak:{name:"onPeak",params:[{name:"callback",description:"<p>Name of a function that will\n                            be called when a peak is\n                            detected.</p>\n",type:"Function"},{name:"val",description:"<p>Optional value to pass\n                            into the function when\n                            a peak is detected.</p>\n",type:"Object",optional:!0}],class:"p5.PeakDetect",module:"p5.sound"}},"p5.SoundRecorder":{setInput:{name:"setInput",params:[{name:"unit",description:"<p>p5.sound object or a web audio unit\n                       that outputs sound</p>\n",type:"Object",optional:!0}],class:"p5.SoundRecorder",module:"p5.sound"},record:{name:"record",params:[{name:"soundFile",description:"<p>p5.SoundFile</p>\n",type:"p5.SoundFile"},{name:"duration",description:"<p>Time (in seconds)</p>\n",type:"Number",optional:!0},{name:"callback",description:"<p>The name of a function that will be\n                              called once the recording completes</p>\n",type:"Function",optional:!0}],class:"p5.SoundRecorder",module:"p5.sound"},stop:{name:"stop",class:"p5.SoundRecorder",module:"p5.sound"}},"p5.Distortion":{WaveShaperNode:{name:"WaveShaperNode",class:"p5.Distortion",module:"p5.sound"},process:{name:"process",params:[{name:"amount",description:"<p>Unbounded distortion amount.\n                               Normal values range from 0-1.</p>\n",type:"Number",optional:!0,optdefault:"0.25"},{name:"oversample",description:"<p>'none', '2x', or '4x'.</p>\n",type:"String",optional:!0,optdefault:"'none'"}],class:"p5.Distortion",module:"p5.sound"},set:{name:"set",params:[{name:"amount",description:"<p>Unbounded distortion amount.\n                               Normal values range from 0-1.</p>\n",type:"Number",optional:!0,optdefault:"0.25"},{name:"oversample",description:"<p>'none', '2x', or '4x'.</p>\n",type:"String",optional:!0,optdefault:"'none'"}],class:"p5.Distortion",module:"p5.sound"},getAmount:{name:"getAmount",class:"p5.Distortion",module:"p5.sound"},getOversample:{name:"getOversample",class:"p5.Distortion",module:"p5.sound"}},"p5.Gain":{setInput:{name:"setInput",params:[{name:"src",description:"<p>p5.sound / Web Audio object with a sound\n                         output.</p>\n",type:"Object"}],class:"p5.Gain",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"",type:"Object"}],class:"p5.Gain",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.Gain",module:"p5.sound"},amp:{name:"amp",params:[{name:"volume",description:"<p>amplitude between 0 and 1.0</p>\n",type:"Number"},{name:"rampTime",description:"<p>create a fade that lasts rampTime</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Gain",module:"p5.sound"}},"p5.AudioVoice":{connect:{name:"connect",params:[{name:"unit",description:"",type:"Object"}],class:"p5.AudioVoice",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.AudioVoice",module:"p5.sound"}},"p5.MonoSynth":{attack:{name:"attack",class:"p5.MonoSynth",module:"p5.sound"},decay:{name:"decay",class:"p5.MonoSynth",module:"p5.sound"},sustain:{name:"sustain",class:"p5.MonoSynth",module:"p5.sound"},release:{name:"release",class:"p5.MonoSynth",module:"p5.sound"},play:{name:"play",params:[{name:"note",description:'<p>the note you want to play, specified as a\n                               frequency in Hertz (Number) or as a midi\n                               value in Note/Octave format ("C4", "Eb3"...etc")\n                               See <a href = "https://github.com/Tonejs/Tone.js/wiki/Instruments">\n                               Tone</a>. Defaults to 440 hz.</p>\n',type:"String | Number"},{name:"velocity",description:"<p>velocity of the note to play (ranging from 0 to 1)</p>\n",type:"Number",optional:!0},{name:"secondsFromNow",description:"<p>time from now (in seconds) at which to play</p>\n",type:"Number",optional:!0},{name:"sustainTime",description:"<p>time to sustain before releasing the envelope. Defaults to 0.15 seconds.</p>\n",type:"Number",optional:!0}],class:"p5.MonoSynth",module:"p5.sound"},triggerAttack:{params:[{name:"note",description:'<p>the note you want to play, specified as a\n                               frequency in Hertz (Number) or as a midi\n                               value in Note/Octave format ("C4", "Eb3"...etc")\n                               See <a href = "https://github.com/Tonejs/Tone.js/wiki/Instruments">\n                               Tone</a>. Defaults to 440 hz</p>\n',type:"String | Number"},{name:"velocity",description:"<p>velocity of the note to play (ranging from 0 to 1)</p>\n",type:"Number",optional:!0},{name:"secondsFromNow",description:"<p>time from now (in seconds) at which to play</p>\n",type:"Number",optional:!0}],name:"triggerAttack",class:"p5.MonoSynth",module:"p5.sound"},triggerRelease:{params:[{name:"secondsFromNow",description:"<p>time to trigger the release</p>\n",type:"Number"}],name:"triggerRelease",class:"p5.MonoSynth",module:"p5.sound"},setADSR:{name:"setADSR",params:[{name:"attackTime",description:"<p>Time (in seconds before envelope\n                              reaches Attack Level</p>\n",type:"Number"},{name:"decayTime",description:"<p>Time (in seconds) before envelope\n                              reaches Decay/Sustain Level</p>\n",type:"Number",optional:!0},{name:"susRatio",description:"<p>Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,\n                              where 1.0 = attackLevel, 0.0 = releaseLevel.\n                              The susRatio determines the decayLevel and the level at which the\n                              sustain portion of the envelope will sustain.\n                              For example, if attackLevel is 0.4, releaseLevel is 0,\n                              and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is\n                              increased to 1.0 (using <code>setRange</code>),\n                              then decayLevel would increase proportionally, to become 0.5.</p>\n",type:"Number",optional:!0},{name:"releaseTime",description:"<p>Time in seconds from now (defaults to 0)</p>\n",type:"Number",optional:!0}],class:"p5.MonoSynth",module:"p5.sound"},amp:{name:"amp",params:[{name:"vol",description:"<p>desired volume</p>\n",type:"Number"},{name:"rampTime",description:"<p>Time to reach new volume</p>\n",type:"Number",optional:!0}],class:"p5.MonoSynth",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"<p>A p5.sound or Web Audio object</p>\n",type:"Object"}],class:"p5.MonoSynth",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.MonoSynth",module:"p5.sound"},dispose:{name:"dispose",class:"p5.MonoSynth",module:"p5.sound"}},"p5.PolySynth":{notes:{name:"notes",class:"p5.PolySynth",module:"p5.sound"},polyvalue:{name:"polyvalue",class:"p5.PolySynth",module:"p5.sound"},AudioVoice:{name:"AudioVoice",class:"p5.PolySynth",module:"p5.sound"},play:{name:"play",params:[{name:"note",description:"<p>midi note to play (ranging from 0 to 127 - 60 being a middle C)</p>\n",type:"Number",optional:!0},{name:"velocity",description:"<p>velocity of the note to play (ranging from 0 to 1)</p>\n",type:"Number",optional:!0},{name:"secondsFromNow",description:"<p>time from now (in seconds) at which to play</p>\n",type:"Number",optional:!0},{name:"sustainTime",description:"<p>time to sustain before releasing the envelope</p>\n",type:"Number",optional:!0}],class:"p5.PolySynth",module:"p5.sound"},noteADSR:{name:"noteADSR",params:[{name:"note",description:"<p>Midi note on which ADSR should be set.</p>\n",type:"Number",optional:!0},{name:"attackTime",description:"<p>Time (in seconds before envelope\n                              reaches Attack Level</p>\n",type:"Number",optional:!0},{name:"decayTime",description:"<p>Time (in seconds) before envelope\n                              reaches Decay/Sustain Level</p>\n",type:"Number",optional:!0},{name:"susRatio",description:"<p>Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,\n                              where 1.0 = attackLevel, 0.0 = releaseLevel.\n                              The susRatio determines the decayLevel and the level at which the\n                              sustain portion of the envelope will sustain.\n                              For example, if attackLevel is 0.4, releaseLevel is 0,\n                              and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is\n                              increased to 1.0 (using <code>setRange</code>),\n                              then decayLevel would increase proportionally, to become 0.5.</p>\n",type:"Number",optional:!0},{name:"releaseTime",description:"<p>Time in seconds from now (defaults to 0)</p>\n",type:"Number",optional:!0}],class:"p5.PolySynth",module:"p5.sound"},setADSR:{name:"setADSR",params:[{name:"attackTime",description:"<p>Time (in seconds before envelope\n                               reaches Attack Level</p>\n",type:"Number",optional:!0},{name:"decayTime",description:"<p>Time (in seconds) before envelope\n                               reaches Decay/Sustain Level</p>\n",type:"Number",optional:!0},{name:"susRatio",description:"<p>Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,\n                               where 1.0 = attackLevel, 0.0 = releaseLevel.\n                               The susRatio determines the decayLevel and the level at which the\n                               sustain portion of the envelope will sustain.\n                               For example, if attackLevel is 0.4, releaseLevel is 0,\n                               and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is\n                               increased to 1.0 (using <code>setRange</code>),\n                               then decayLevel would increase proportionally, to become 0.5.</p>\n",type:"Number",optional:!0},{name:"releaseTime",description:"<p>Time in seconds from now (defaults to 0)</p>\n",type:"Number",optional:!0}],class:"p5.PolySynth",module:"p5.sound"},noteAttack:{name:"noteAttack",params:[{name:"note",description:"<p>midi note on which attack should be triggered.</p>\n",type:"Number",optional:!0},{name:"velocity",description:"<p>velocity of the note to play (ranging from 0 to 1)/</p>\n",type:"Number",optional:!0},{name:"secondsFromNow",description:"<p>time from now (in seconds)</p>\n",type:"Number",optional:!0}],class:"p5.PolySynth",module:"p5.sound"},noteRelease:{name:"noteRelease",params:[{name:"note",description:"<p>midi note on which attack should be triggered.\n                                  If no value is provided, all notes will be released.</p>\n",type:"Number",optional:!0},{name:"secondsFromNow",description:"<p>time to trigger the release</p>\n",type:"Number",optional:!0}],class:"p5.PolySynth",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"<p>A p5.sound or Web Audio object</p>\n",type:"Object"}],class:"p5.PolySynth",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.PolySynth",module:"p5.sound"},dispose:{name:"dispose",class:"p5.PolySynth",module:"p5.sound"}}}},{}],2:[function(t,r,n){function o(t){if(Array.isArray(t))return t}r.exports=o},{}],3:[function(t,r,n){function o(t){if(Array.isArray(t)){for(var r=0,n=Array(t.length);r<t.length;r++)n[r]=t[r];return n}}r.exports=o},{}],4:[function(t,r,n){function o(t){if(void 0===t)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return t}r.exports=o},{}],5:[function(t,r,n){function o(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}r.exports=o},{}],6:[function(t,r,n){function o(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function a(t,r,n){return r&&o(t.prototype,r),n&&o(t,n),t}r.exports=a},{}],7:[function(t,r,n){function o(t,r,n){return r in t?Object.defineProperty(t,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[r]=n,t}r.exports=o},{}],8:[function(t,r,n){function o(t){return r.exports=o=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},o(t)}r.exports=o},{}],9:[function(t,r,n){var o=t("./setPrototypeOf");function a(t,r){if("function"!=typeof r&&null!==r)throw TypeError("Super expression must either be null or a function");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),r&&o(t,r)}r.exports=a},{"./setPrototypeOf":16}],10:[function(t,r,n){function o(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}r.exports=o},{}],11:[function(t,r,n){function o(t,r){var n=[],o=!0,a=!1,s=void 0;try{for(var l,c=t[Symbol.iterator]();!(o=(l=c.next()).done)&&(n.push(l.value),!r||n.length!==r);o=!0);}catch(t){a=!0,s=t}finally{try{o||null==c.return||c.return()}finally{if(a)throw s}}return n}r.exports=o},{}],12:[function(t,r,n){function o(){throw TypeError("Invalid attempt to destructure non-iterable instance")}r.exports=o},{}],13:[function(t,r,n){function o(){throw TypeError("Invalid attempt to spread non-iterable instance")}r.exports=o},{}],14:[function(t,r,n){var o=t("./defineProperty");function a(t){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),a.forEach(function(r){o(t,r,n[r])})}return t}r.exports=a},{"./defineProperty":7}],15:[function(t,r,n){var o=t("../helpers/typeof"),a=t("./assertThisInitialized");function s(t,r){return r&&("object"===o(r)||"function"==typeof r)?r:a(t)}r.exports=s},{"../helpers/typeof":19,"./assertThisInitialized":4}],16:[function(t,r,n){function o(t,n){return r.exports=o=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t},o(t,n)}r.exports=o},{}],17:[function(t,r,n){var o=t("./arrayWithHoles"),a=t("./iterableToArrayLimit"),s=t("./nonIterableRest");function l(t,r){return o(t)||a(t,r)||s()}r.exports=l},{"./arrayWithHoles":2,"./iterableToArrayLimit":11,"./nonIterableRest":12}],18:[function(t,r,n){var o=t("./arrayWithoutHoles"),a=t("./iterableToArray"),s=t("./nonIterableSpread");function l(t){return o(t)||a(t)||s()}r.exports=l},{"./arrayWithoutHoles":3,"./iterableToArray":10,"./nonIterableSpread":13}],19:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return"function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?r.exports=a=function(t){return o(t)}:r.exports=a=function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)},a(t)}r.exports=a},{}],20:[function(t,r,n){n.byteLength=d,n.toByteArray=f,n.fromByteArray=g;for(var o=[],a=[],s="undefined"!=typeof Uint8Array?Uint8Array:Array,l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",c=0,u=l.length;c<u;++c)o[c]=l[c],a[l.charCodeAt(c)]=c;// Support decoding URL-safe base64 strings, as Node.js does.
function p(t){var r=t.length;if(r%4>0)throw Error("Invalid string. Length must be a multiple of 4");// Trim off extra bytes after placeholder bytes are found
// See: https://github.com/beatgammit/base64-js/issues/42
var n=t.indexOf("=");-1===n&&(n=r);var o=n===r?0:4-n%4;return[n,o]}// base64 is 4/3 + up to two characters of the original data
function d(t){var r=p(t),n=r[0],o=r[1];return(n+o)*3/4-o}function m(t,r,n){return(r+n)*3/4-n}function f(t){var r,n,o=p(t),l=o[0],c=o[1],u=new s(m(t,l,c)),d=0,f=c>0?l-4:l;for(n=0;n<f;n+=4)r=a[t.charCodeAt(n)]<<18|a[t.charCodeAt(n+1)]<<12|a[t.charCodeAt(n+2)]<<6|a[t.charCodeAt(n+3)],u[d++]=r>>16&255,u[d++]=r>>8&255,u[d++]=255&r;return 2===c&&(r=a[t.charCodeAt(n)]<<2|a[t.charCodeAt(n+1)]>>4,u[d++]=255&r),1===c&&(r=a[t.charCodeAt(n)]<<10|a[t.charCodeAt(n+1)]<<4|a[t.charCodeAt(n+2)]>>2,u[d++]=r>>8&255,u[d++]=255&r),u}function h(t){return o[t>>18&63]+o[t>>12&63]+o[t>>6&63]+o[63&t]}function y(t,r,n){for(var o=[],a=r;a<n;a+=3)o.push(h((t[a]<<16&16711680)+(t[a+1]<<8&65280)+(255&t[a+2])));return o.join("")}function g(t){// go through the array every three bytes, we'll deal with trailing stuff later
for(var r,n=t.length,a=n%3,s=[],l=16383,c=0,u=n-a;c<u;c+=l)s.push(y(t,c,c+l>u?u:c+l));return 1===a?s.push(o[(r=t[n-1])>>2]+o[r<<4&63]+"=="):2===a&&s.push(o[(r=(t[n-2]<<8)+t[n-1])>>10]+o[r>>4&63]+o[r<<2&63]+"="),s.join("")}// See: https://en.wikipedia.org/wiki/Base64#URL_applications
a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},{}],21:[function(t,r,n){},{}],22:[function(t,r,n){(function(r){var o=t("base64-js"),a=t("ieee754"),s="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;n.Buffer=r,n.SlowBuffer=x,n.INSPECT_MAX_BYTES=50;var l=2147483647;function c(){// Can typed array instances can be augmented?
try{var t=new Uint8Array(1),r={foo:function(){return 42}};return Object.setPrototypeOf(r,Uint8Array.prototype),Object.setPrototypeOf(t,r),42===t.foo()}catch(t){return!1}}function u(t){if(t>l)throw RangeError('The value "'+t+'" is invalid for option "size"');// Return an augmented `Uint8Array` instance
var n=new Uint8Array(t);return Object.setPrototypeOf(n,r.prototype),n}/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */function r(t,r,n){// Common case.
if("number"==typeof t){if("string"==typeof r)throw TypeError('The "string" argument must be of type string. Received type number');return f(t)}return p(t,r,n)}// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
function p(t,n,o){if("string"==typeof t)return h(t,n);if(ArrayBuffer.isView(t))return y(t);if(null==t)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if($(t,ArrayBuffer)||t&&$(t.buffer,ArrayBuffer))return g(t,n,o);if("number"==typeof t)throw TypeError('The "value" argument must not be of type number. Received type number');var a=t.valueOf&&t.valueOf();if(null!=a&&a!==t)return r.from(a,n,o);var s=v(t);if(s)return s;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return r.from(t[Symbol.toPrimitive]("string"),n,o);throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/function d(t){if("number"!=typeof t)throw TypeError('"size" argument must be of type number');if(t<0)throw RangeError('The value "'+t+'" is invalid for option "size"')}function m(t,r,n){return(d(t),t<=0)?u(t):void 0!==r?"string"==typeof n?u(t).fill(r,n):u(t).fill(r):u(t)}/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/function f(t){return d(t),u(t<0?0:0|b(t))}/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */function h(t,n){if(("string"!=typeof n||""===n)&&(n="utf8"),!r.isEncoding(n))throw TypeError("Unknown encoding: "+n);var o=0|j(t,n),a=u(o),s=a.write(t,n);return s!==o&&// cause everything after the first invalid character to be ignored. (e.g.
// 'abxxcd' will be treated as 'ab')
(a=a.slice(0,s)),a}function y(t){for(var r=t.length<0?0:0|b(t.length),n=u(r),o=0;o<r;o+=1)n[o]=255&t[o];return n}function g(t,n,o){var a;if(n<0||t.byteLength<n)throw RangeError('"offset" is outside of buffer bounds');if(t.byteLength<n+(o||0))throw RangeError('"length" is outside of buffer bounds');return(// Return an augmented `Uint8Array` instance
Object.setPrototypeOf(a=void 0===n&&void 0===o?new Uint8Array(t):void 0===o?new Uint8Array(t,n):new Uint8Array(t,n,o),r.prototype),a)}function v(t){if(r.isBuffer(t)){var n=0|b(t.length),o=u(n);return 0===o.length||t.copy(o,0,0,n),o}return void 0!==t.length?"number"!=typeof t.length||ee(t.length)?u(0):y(t):"Buffer"===t.type&&Array.isArray(t.data)?y(t.data):void 0}function b(t){// Note: cannot use `length < K_MAX_LENGTH` here because that fails when
// length is NaN (which is otherwise coerced to zero.)
if(t>=l)throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+l.toString(16)+" bytes");return 0|t}function x(t){return+t!=t&&(t=0),r.alloc(+t)}function j(t,n){if(r.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||$(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);var o=t.length,a=arguments.length>2&&!0===arguments[2];if(!a&&0===o)return 0;// Use a for loop to avoid recursion
for(var s=!1;;)switch(n){case"ascii":case"latin1":case"binary":return o;case"utf8":case"utf-8":return Y(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*o;case"hex":return o>>>1;case"base64":return J(t).length;default:if(s)return a?-1:Y(t).length;// assume utf8
n=(""+n).toLowerCase(),s=!0}}function w(t,r,n){var o=!1;// No need to verify that "this.length <= MAX_UINT32" since it's a read-only
// Return early if start > this.length. Done here to prevent potential uint32
// coercion fail below.
if((void 0===r||r<0)&&(r=0),r>this.length||((void 0===n||n>this.length)&&(n=this.length),n<=0||// Force coersion to uint32. This will also coerce falsey/NaN values to 0.
(n>>>=0)<=(r>>>=0)))return"";for(t||(t="utf8");;)switch(t){case"hex":return U(this,r,n);case"utf8":case"utf-8":return L(this,r,n);case"ascii":return D(this,r,n);case"latin1":case"binary":return F(this,r,n);case"base64":return R(this,r,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return B(this,r,n);default:if(o)throw TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),o=!0}}// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
function _(t,r,n){var o=t[r];t[r]=t[n],t[n]=o}// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function S(t,n,o,a,s){// Empty buffer means no match
if(0===t.length)return -1;// Normalize byteOffset
if("string"==typeof o?(a=o,o=0):o>2147483647?o=2147483647:o<-2147483648&&(o=-2147483648),ee(o=+o)&&(o=s?0:t.length-1),o<0&&(o=t.length+o),o>=t.length){if(s)return -1;o=t.length-1}else if(o<0){if(!s)return -1;o=0}// Normalize val
// Finally, search either indexOf (if dir is true) or lastIndexOf
if("string"==typeof n&&(n=r.from(n,a)),r.isBuffer(n))return(// Special case: looking for empty string/buffer always fails
0===n.length?-1:E(t,n,o,a,s));if("number"==typeof n)return(n&=255,"function"==typeof Uint8Array.prototype.indexOf)?s?Uint8Array.prototype.indexOf.call(t,n,o):Uint8Array.prototype.lastIndexOf.call(t,n,o):E(t,[n],o,a,s);throw TypeError("val must be string, number or Buffer")}function E(t,r,n,o,a){var s,l=1,c=t.length,u=r.length;if(void 0!==o&&("ucs2"===(o=String(o).toLowerCase())||"ucs-2"===o||"utf16le"===o||"utf-16le"===o)){if(t.length<2||r.length<2)return -1;l=2,c/=2,u/=2,n/=2}function p(t,r){return 1===l?t[r]:t.readUInt16BE(r*l)}if(a){var d=-1;for(s=n;s<c;s++)if(p(t,s)===p(r,-1===d?0:s-d)){if(-1===d&&(d=s),s-d+1===u)return d*l}else -1!==d&&(s-=s-d),d=-1}else for(n+u>c&&(n=c-u),s=n;s>=0;s--){for(var m=!0,f=0;f<u;f++)if(p(t,s+f)!==p(r,f)){m=!1;break}if(m)return s}return -1}function T(t,r,n,o){n=Number(n)||0;var a=t.length-n;o?(o=Number(o))>a&&(o=a):o=a;var s=r.length;o>s/2&&(o=s/2);for(var l=0;l<o;++l){var c=parseInt(r.substr(2*l,2),16);if(ee(c))break;t[n+l]=c}return l}function M(t,r,n,o){return Q(Y(r,t.length-n),t,n,o)}function C(t,r,n,o){return Q(Z(r),t,n,o)}function O(t,r,n,o){return C(t,r,n,o)}function N(t,r,n,o){return Q(J(r),t,n,o)}function A(t,r,n,o){return Q(K(r,t.length-n),t,n,o)}function R(t,r,n){return 0===r&&n===t.length?o.fromByteArray(t):o.fromByteArray(t.slice(r,n))}function L(t,r,n){n=Math.min(t.length,n);for(var o=[],a=r;a<n;){var s,l,c,u,p=t[a],d=null,m=p>239?4:p>223?3:p>191?2:1;if(a+m<=n)switch(m){case 1:p<128&&(d=p);break;case 2:(192&(s=t[a+1]))==128&&(u=(31&p)<<6|63&s)>127&&(d=u);break;case 3:s=t[a+1],l=t[a+2],(192&s)==128&&(192&l)==128&&(u=(15&p)<<12|(63&s)<<6|63&l)>2047&&(u<55296||u>57343)&&(d=u);break;case 4:s=t[a+1],l=t[a+2],c=t[a+3],(192&s)==128&&(192&l)==128&&(192&c)==128&&(u=(15&p)<<18|(63&s)<<12|(63&l)<<6|63&c)>65535&&u<1114112&&(d=u)}null===d?(// we did not generate a valid codePoint so insert a
// replacement char (U+FFFD) and advance only 1 byte
d=65533,m=1):d>65535&&(// encode to utf16 (surrogate pair dance)
d-=65536,o.push(d>>>10&1023|55296),d=56320|1023&d),o.push(d),a+=m}return P(o)}// Based on http://stackoverflow.com/a/22747272/680742, the browser with
n.kMaxLength=l,/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */r.TYPED_ARRAY_SUPPORT=c(),r.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(r.prototype,"parent",{enumerable:!0,get:function(){if(r.isBuffer(this))return this.buffer}}),Object.defineProperty(r.prototype,"offset",{enumerable:!0,get:function(){if(r.isBuffer(this))return this.byteOffset}}),"undefined"!=typeof Symbol&&null!=Symbol.species&&r[Symbol.species]===r&&Object.defineProperty(r,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),r.poolSize=8192,r.from=function(t,r,n){return p(t,r,n)},// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(r.prototype,Uint8Array.prototype),Object.setPrototypeOf(r,Uint8Array),r.alloc=function(t,r,n){return m(t,r,n)},r.allocUnsafe=function(t){return f(t)},/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */r.allocUnsafeSlow=function(t){return f(t)},r.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==r.prototype;// so Buffer.isBuffer(Buffer.prototype) will be false
},r.compare=function(t,n){if($(t,Uint8Array)&&(t=r.from(t,t.offset,t.byteLength)),$(n,Uint8Array)&&(n=r.from(n,n.offset,n.byteLength)),!r.isBuffer(t)||!r.isBuffer(n))throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===n)return 0;for(var o=t.length,a=n.length,s=0,l=Math.min(o,a);s<l;++s)if(t[s]!==n[s]){o=t[s],a=n[s];break}return o<a?-1:a<o?1:0},r.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},r.concat=function(t,n){if(!Array.isArray(t))throw TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return r.alloc(0);if(void 0===n)for(o=0,n=0;o<t.length;++o)n+=t[o].length;var o,a=r.allocUnsafe(n),s=0;for(o=0;o<t.length;++o){var l=t[o];if($(l,Uint8Array)&&(l=r.from(l)),!r.isBuffer(l))throw TypeError('"list" argument must be an Array of Buffers');l.copy(a,s),s+=l.length}return a},r.byteLength=j,// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
r.prototype._isBuffer=!0,r.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw RangeError("Buffer size must be a multiple of 16-bits");for(var r=0;r<t;r+=2)_(this,r,r+1);return this},r.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw RangeError("Buffer size must be a multiple of 32-bits");for(var r=0;r<t;r+=4)_(this,r,r+3),_(this,r+1,r+2);return this},r.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw RangeError("Buffer size must be a multiple of 64-bits");for(var r=0;r<t;r+=8)_(this,r,r+7),_(this,r+1,r+6),_(this,r+2,r+5),_(this,r+3,r+4);return this},r.prototype.toString=function(){var t=this.length;return 0===t?"":0==arguments.length?L(this,0,t):w.apply(this,arguments)},r.prototype.toLocaleString=r.prototype.toString,r.prototype.equals=function(t){if(!r.isBuffer(t))throw TypeError("Argument must be a Buffer");return this===t||0===r.compare(this,t)},r.prototype.inspect=function(){var t="",r=n.INSPECT_MAX_BYTES;return t=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(t+=" ... "),"<Buffer "+t+">"},s&&(r.prototype[s]=r.prototype.inspect),r.prototype.compare=function(t,n,o,a,s){if($(t,Uint8Array)&&(t=r.from(t,t.offset,t.byteLength)),!r.isBuffer(t))throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===n&&(n=0),void 0===o&&(o=t?t.length:0),void 0===a&&(a=0),void 0===s&&(s=this.length),n<0||o>t.length||a<0||s>this.length)throw RangeError("out of range index");if(a>=s&&n>=o)return 0;if(a>=s)return -1;if(n>=o)return 1;if(n>>>=0,o>>>=0,a>>>=0,s>>>=0,this===t)return 0;for(var l=s-a,c=o-n,u=Math.min(l,c),p=this.slice(a,s),d=t.slice(n,o),m=0;m<u;++m)if(p[m]!==d[m]){l=p[m],c=d[m];break}return l<c?-1:c<l?1:0},r.prototype.includes=function(t,r,n){return -1!==this.indexOf(t,r,n)},r.prototype.indexOf=function(t,r,n){return S(this,t,r,n,!0)},r.prototype.lastIndexOf=function(t,r,n){return S(this,t,r,n,!1)},r.prototype.write=function(t,r,n,o){// Buffer#write(string)
if(void 0===r)o="utf8",n=this.length,r=0;else if(void 0===n&&"string"==typeof r)o=r,n=this.length,r=0;else if(isFinite(r))r>>>=0,isFinite(n)?(n>>>=0,void 0===o&&(o="utf8")):(o=n,n=void 0);else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");var a=this.length-r;if((void 0===n||n>a)&&(n=a),t.length>0&&(n<0||r<0)||r>this.length)throw RangeError("Attempt to write outside buffer bounds");o||(o="utf8");for(var s=!1;;)switch(o){case"hex":return T(this,t,r,n);case"utf8":case"utf-8":return M(this,t,r,n);case"ascii":return C(this,t,r,n);case"latin1":case"binary":return O(this,t,r,n);case"base64":// Warning: maxLength not taken into account in base64Write
return N(this,t,r,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,t,r,n);default:if(s)throw TypeError("Unknown encoding: "+o);o=(""+o).toLowerCase(),s=!0}},r.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var I=4096;function P(t){var r=t.length;if(r<=I)return String.fromCharCode.apply(String,t);// avoid extra slice()
for(// Decode in chunks to avoid "call stack size exceeded".
var n="",o=0;o<r;)n+=String.fromCharCode.apply(String,t.slice(o,o+=I));return n}function D(t,r,n){var o="";n=Math.min(t.length,n);for(var a=r;a<n;++a)o+=String.fromCharCode(127&t[a]);return o}function F(t,r,n){var o="";n=Math.min(t.length,n);for(var a=r;a<n;++a)o+=String.fromCharCode(t[a]);return o}function U(t,r,n){var o=t.length;(!r||r<0)&&(r=0),(!n||n<0||n>o)&&(n=o);for(var a="",s=r;s<n;++s)a+=et[t[s]];return a}function B(t,r,n){for(var o=t.slice(r,n),a="",s=0;s<o.length;s+=2)a+=String.fromCharCode(o[s]+256*o[s+1]);return a}/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */function G(t,r,n){if(t%1!=0||t<0)throw RangeError("offset is not uint");if(t+r>n)throw RangeError("Trying to access beyond buffer length")}function V(t,n,o,a,s,l){if(!r.isBuffer(t))throw TypeError('"buffer" argument must be a Buffer instance');if(n>s||n<l)throw RangeError('"value" argument is out of bounds');if(o+a>t.length)throw RangeError("Index out of range")}function z(t,r,n,o,a,s){if(n+o>t.length||n<0)throw RangeError("Index out of range")}function H(t,r,n,o,s){return r=+r,n>>>=0,s||z(t,r,n,4,34028234663852886e22,-34028234663852886e22),a.write(t,r,n,o,23,4),n+4}function W(t,r,n,o,s){return r=+r,n>>>=0,s||z(t,r,n,8,17976931348623157e292,-17976931348623157e292),a.write(t,r,n,o,52,8),n+8}r.prototype.slice=function(t,n){var o=this.length;t=~~t,n=void 0===n?o:~~n,t<0?(t+=o)<0&&(t=0):t>o&&(t=o),n<0?(n+=o)<0&&(n=0):n>o&&(n=o),n<t&&(n=t);var a=this.subarray(t,n);// Return an augmented `Uint8Array` instance
return Object.setPrototypeOf(a,r.prototype),a},r.prototype.readUIntLE=function(t,r,n){t>>>=0,r>>>=0,n||G(t,r,this.length);for(var o=this[t],a=1,s=0;++s<r&&(a*=256);)o+=this[t+s]*a;return o},r.prototype.readUIntBE=function(t,r,n){t>>>=0,r>>>=0,n||G(t,r,this.length);for(var o=this[t+--r],a=1;r>0&&(a*=256);)o+=this[t+--r]*a;return o},r.prototype.readUInt8=function(t,r){return t>>>=0,r||G(t,1,this.length),this[t]},r.prototype.readUInt16LE=function(t,r){return t>>>=0,r||G(t,2,this.length),this[t]|this[t+1]<<8},r.prototype.readUInt16BE=function(t,r){return t>>>=0,r||G(t,2,this.length),this[t]<<8|this[t+1]},r.prototype.readUInt32LE=function(t,r){return t>>>=0,r||G(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},r.prototype.readUInt32BE=function(t,r){return t>>>=0,r||G(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},r.prototype.readIntLE=function(t,r,n){t>>>=0,r>>>=0,n||G(t,r,this.length);for(var o=this[t],a=1,s=0;++s<r&&(a*=256);)o+=this[t+s]*a;return o>=(a*=128)&&(o-=Math.pow(2,8*r)),o},r.prototype.readIntBE=function(t,r,n){t>>>=0,r>>>=0,n||G(t,r,this.length);for(var o=r,a=1,s=this[t+--o];o>0&&(a*=256);)s+=this[t+--o]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*r)),s},r.prototype.readInt8=function(t,r){return(t>>>=0,r||G(t,1,this.length),128&this[t])?-((255-this[t]+1)*1):this[t]},r.prototype.readInt16LE=function(t,r){t>>>=0,r||G(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},r.prototype.readInt16BE=function(t,r){t>>>=0,r||G(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},r.prototype.readInt32LE=function(t,r){return t>>>=0,r||G(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},r.prototype.readInt32BE=function(t,r){return t>>>=0,r||G(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},r.prototype.readFloatLE=function(t,r){return t>>>=0,r||G(t,4,this.length),a.read(this,t,!0,23,4)},r.prototype.readFloatBE=function(t,r){return t>>>=0,r||G(t,4,this.length),a.read(this,t,!1,23,4)},r.prototype.readDoubleLE=function(t,r){return t>>>=0,r||G(t,8,this.length),a.read(this,t,!0,52,8)},r.prototype.readDoubleBE=function(t,r){return t>>>=0,r||G(t,8,this.length),a.read(this,t,!1,52,8)},r.prototype.writeUIntLE=function(t,r,n,o){if(t=+t,r>>>=0,n>>>=0,!o){var a=Math.pow(2,8*n)-1;V(this,t,r,n,a,0)}var s=1,l=0;for(this[r]=255&t;++l<n&&(s*=256);)this[r+l]=t/s&255;return r+n},r.prototype.writeUIntBE=function(t,r,n,o){if(t=+t,r>>>=0,n>>>=0,!o){var a=Math.pow(2,8*n)-1;V(this,t,r,n,a,0)}var s=n-1,l=1;for(this[r+s]=255&t;--s>=0&&(l*=256);)this[r+s]=t/l&255;return r+n},r.prototype.writeUInt8=function(t,r,n){return t=+t,r>>>=0,n||V(this,t,r,1,255,0),this[r]=255&t,r+1},r.prototype.writeUInt16LE=function(t,r,n){return t=+t,r>>>=0,n||V(this,t,r,2,65535,0),this[r]=255&t,this[r+1]=t>>>8,r+2},r.prototype.writeUInt16BE=function(t,r,n){return t=+t,r>>>=0,n||V(this,t,r,2,65535,0),this[r]=t>>>8,this[r+1]=255&t,r+2},r.prototype.writeUInt32LE=function(t,r,n){return t=+t,r>>>=0,n||V(this,t,r,4,4294967295,0),this[r+3]=t>>>24,this[r+2]=t>>>16,this[r+1]=t>>>8,this[r]=255&t,r+4},r.prototype.writeUInt32BE=function(t,r,n){return t=+t,r>>>=0,n||V(this,t,r,4,4294967295,0),this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t,r+4},r.prototype.writeIntLE=function(t,r,n,o){if(t=+t,r>>>=0,!o){var a=Math.pow(2,8*n-1);V(this,t,r,n,a-1,-a)}var s=0,l=1,c=0;for(this[r]=255&t;++s<n&&(l*=256);)t<0&&0===c&&0!==this[r+s-1]&&(c=1),this[r+s]=(t/l>>0)-c&255;return r+n},r.prototype.writeIntBE=function(t,r,n,o){if(t=+t,r>>>=0,!o){var a=Math.pow(2,8*n-1);V(this,t,r,n,a-1,-a)}var s=n-1,l=1,c=0;for(this[r+s]=255&t;--s>=0&&(l*=256);)t<0&&0===c&&0!==this[r+s+1]&&(c=1),this[r+s]=(t/l>>0)-c&255;return r+n},r.prototype.writeInt8=function(t,r,n){return t=+t,r>>>=0,n||V(this,t,r,1,127,-128),t<0&&(t=255+t+1),this[r]=255&t,r+1},r.prototype.writeInt16LE=function(t,r,n){return t=+t,r>>>=0,n||V(this,t,r,2,32767,-32768),this[r]=255&t,this[r+1]=t>>>8,r+2},r.prototype.writeInt16BE=function(t,r,n){return t=+t,r>>>=0,n||V(this,t,r,2,32767,-32768),this[r]=t>>>8,this[r+1]=255&t,r+2},r.prototype.writeInt32LE=function(t,r,n){return t=+t,r>>>=0,n||V(this,t,r,4,2147483647,-2147483648),this[r]=255&t,this[r+1]=t>>>8,this[r+2]=t>>>16,this[r+3]=t>>>24,r+4},r.prototype.writeInt32BE=function(t,r,n){return t=+t,r>>>=0,n||V(this,t,r,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t,r+4},r.prototype.writeFloatLE=function(t,r,n){return H(this,t,r,!0,n)},r.prototype.writeFloatBE=function(t,r,n){return H(this,t,r,!1,n)},r.prototype.writeDoubleLE=function(t,r,n){return W(this,t,r,!0,n)},r.prototype.writeDoubleBE=function(t,r,n){return W(this,t,r,!1,n)},r.prototype.copy=function(t,n,o,a){if(!r.isBuffer(t))throw TypeError("argument should be a Buffer");if(o||(o=0),a||0===a||(a=this.length),n>=t.length&&(n=t.length),n||(n=0),a>0&&a<o&&(a=o),a===o||0===t.length||0===this.length)return 0;if(n<0)throw RangeError("targetStart out of bounds");if(o<0||o>=this.length)throw RangeError("Index out of range");if(a<0)throw RangeError("sourceEnd out of bounds");// Are we oob?
a>this.length&&(a=this.length),t.length-n<a-o&&(a=t.length-n+o);var s=a-o;if(this===t&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(n,o,a);else if(this===t&&o<n&&n<a)for(var l=s-1;l>=0;--l)t[l+n]=this[l+o];else Uint8Array.prototype.set.call(t,this.subarray(o,a),n);return s},//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
r.prototype.fill=function(t,n,o,a){// Handle string cases:
if("string"==typeof t){if("string"==typeof n?(a=n,n=0,o=this.length):"string"==typeof o&&(a=o,o=this.length),void 0!==a&&"string"!=typeof a)throw TypeError("encoding must be a string");if("string"==typeof a&&!r.isEncoding(a))throw TypeError("Unknown encoding: "+a);if(1===t.length){var s,l=t.charCodeAt(0);("utf8"===a&&l<128||"latin1"===a)&&(t=l)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));// Invalid ranges are not set to a default, so can range check early.
if(n<0||this.length<n||this.length<o)throw RangeError("Out of range index");if(o<=n)return this;if(n>>>=0,o=void 0===o?this.length:o>>>0,t||(t=0),"number"==typeof t)for(s=n;s<o;++s)this[s]=t;else{var c=r.isBuffer(t)?t:r.from(t,a),u=c.length;if(0===u)throw TypeError('The value "'+t+'" is invalid for argument "value"');for(s=0;s<o-n;++s)this[s+n]=c[s%u]}return this};// ================
var q=/[^+/0-9A-Za-z-_]/g;function X(t){if((t=// Node takes equal signs as end of the Base64 encoding
(t=t.split("=")[0]).trim().replace(q,"")).length<2)return"";// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
for(;t.length%4!=0;)t+="=";return t}function Y(t,r){r=r||1/0;for(var n,o=t.length,a=null,s=[],l=0;l<o;++l){if((n=t.charCodeAt(l))>55295&&n<57344){// last char was a lead
if(!a){// no lead yet
if(n>56319||l+1===o){// unexpected trail
(r-=3)>-1&&s.push(239,191,189);continue}// valid lead
a=n;continue}// 2 leads in a row
if(n<56320){(r-=3)>-1&&s.push(239,191,189),a=n;continue}// valid surrogate pair
n=(a-55296<<10|n-56320)+65536}else a&&(r-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((r-=1)<0)break;s.push(n)}else if(n<2048){if((r-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((r-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else if(n<1114112){if((r-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}else throw Error("Invalid code point")}return s}function Z(t){for(var r=[],n=0;n<t.length;++n)r.push(255&t.charCodeAt(n));return r}function K(t,r){for(var n,o,a=[],s=0;s<t.length&&!((r-=2)<0);++s)o=(n=t.charCodeAt(s))>>8,a.push(n%256),a.push(o);return a}function J(t){return o.toByteArray(X(t))}function Q(t,r,n,o){for(var a=0;a<o&&!(a+n>=r.length)&&!(a>=t.length);++a)r[a+n]=t[a];return a}// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function $(t,r){return t instanceof r||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===r.name}function ee(t){// For IE11 support
return t!=t;// eslint-disable-line no-self-compare
}// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
var et=function(){for(var t="0123456789abcdef",r=Array(256),n=0;n<16;++n)for(var o=16*n,a=0;a<16;++a)r[o+a]=t[n]+t[a];return r}()}).call(this,t("buffer").Buffer)},{"base64-js":20,buffer:22,ieee754:266}],23:[function(t,r,n){r.exports=function(t){if("function"!=typeof t)throw TypeError(String(t)+" is not a function");return t}},{}],24:[function(t,r,n){var o=t("../internals/is-object");r.exports=function(t){if(!o(t)&&null!==t)throw TypeError("Can't set "+String(t)+" as a prototype");return t}},{"../internals/is-object":92}],25:[function(t,r,n){var o=t("../internals/well-known-symbol"),a=t("../internals/object-create"),s=t("../internals/object-define-property"),l=o("unscopables"),c=Array.prototype;void 0==c[l]&&s.f(c,l,{configurable:!0,value:a(null)}),// add a key to Array.prototype[@@unscopables]
r.exports=function(t){c[l][t]=!0}},{"../internals/object-create":108,"../internals/object-define-property":110,"../internals/well-known-symbol":166}],26:[function(t,r,n){var o=t("../internals/string-multibyte").charAt;// `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
r.exports=function(t,r,n){return r+(n?o(t,r).length:1)}},{"../internals/string-multibyte":141}],27:[function(t,r,n){r.exports=function(t,r,n){if(!(t instanceof r))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return t}},{}],28:[function(t,r,n){var o=t("../internals/is-object");r.exports=function(t){if(!o(t))throw TypeError(String(t)+" is not an object");return t}},{"../internals/is-object":92}],29:[function(t,r,n){r.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},{}],30:[function(t,r,n){var o,a=t("../internals/array-buffer-native"),s=t("../internals/descriptors"),l=t("../internals/global"),c=t("../internals/is-object"),u=t("../internals/has"),p=t("../internals/classof"),d=t("../internals/create-non-enumerable-property"),m=t("../internals/redefine"),f=t("../internals/object-define-property").f,h=t("../internals/object-get-prototype-of"),y=t("../internals/object-set-prototype-of"),g=t("../internals/well-known-symbol"),v=t("../internals/uid"),b=l.Int8Array,x=b&&b.prototype,j=l.Uint8ClampedArray,w=j&&j.prototype,_=b&&h(b),S=x&&h(x),E=Object.prototype,T=E.isPrototypeOf,M=g("toStringTag"),C=v("TYPED_ARRAY_TAG"),O=a&&!!y&&"Opera"!==p(l.opera),N=!1,A={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},R=function(t){var r=p(t);return"DataView"===r||u(A,r)},L=function(t){return c(t)&&u(A,p(t))},I=function(t){if(L(t))return t;throw TypeError("Target is not a typed array")},P=function(t){if(y){if(T.call(_,t))return t}else for(var r in A)if(u(A,o)){var n=l[r];if(n&&(t===n||T.call(n,t)))return t}throw TypeError("Target is not a typed array constructor")},D=function(t,r,n){if(s){if(n)for(var o in A){var a=l[o];a&&u(a.prototype,t)&&delete a.prototype[t]}(!S[t]||n)&&m(S,t,n?r:O&&x[t]||r)}},F=function(t,r,n){var o,a;if(s){if(y){if(n)for(o in A)(a=l[o])&&u(a,t)&&delete a[t];if(_[t]&&!n)return;try{return m(_,t,n?r:O&&b[t]||r)}catch(t){/* empty */}}for(o in A)(a=l[o])&&(!a[t]||n)&&m(a,t,r)}};for(o in A)l[o]||(O=!1);// WebKit bug - typed arrays constructors prototype is Object.prototype
if((!O||"function"!=typeof _||_===Function.prototype)&&(// eslint-disable-next-line no-shadow
_=function(){throw TypeError("Incorrect invocation")},O))for(o in A)l[o]&&y(l[o],_);if((!O||!S||S===E)&&(S=_.prototype,O))for(o in A)l[o]&&y(l[o].prototype,S);// WebKit bug - one more object in Uint8ClampedArray prototype chain
if(O&&h(w)!==S&&y(w,S),s&&!u(S,M))for(o in N=!0,f(S,M,{get:function(){return c(this)?this[C]:void 0}}),A)l[o]&&d(l[o],C,o);r.exports={NATIVE_ARRAY_BUFFER_VIEWS:O,TYPED_ARRAY_TAG:N&&C,aTypedArray:I,aTypedArrayConstructor:P,exportTypedArrayMethod:D,exportTypedArrayStaticMethod:F,isView:R,isTypedArray:L,TypedArray:_,TypedArrayPrototype:S}},{"../internals/array-buffer-native":29,"../internals/classof":47,"../internals/create-non-enumerable-property":56,"../internals/descriptors":61,"../internals/global":77,"../internals/has":78,"../internals/is-object":92,"../internals/object-define-property":110,"../internals/object-get-prototype-of":115,"../internals/object-set-prototype-of":119,"../internals/redefine":126,"../internals/uid":163,"../internals/well-known-symbol":166}],31:[function(t,r,n){var o=t("../internals/global"),a=t("../internals/descriptors"),s=t("../internals/array-buffer-native"),l=t("../internals/create-non-enumerable-property"),c=t("../internals/redefine-all"),u=t("../internals/fails"),p=t("../internals/an-instance"),d=t("../internals/to-integer"),m=t("../internals/to-length"),f=t("../internals/to-index"),h=t("../internals/ieee754"),y=t("../internals/object-get-prototype-of"),g=t("../internals/object-set-prototype-of"),v=t("../internals/object-get-own-property-names").f,b=t("../internals/object-define-property").f,x=t("../internals/array-fill"),j=t("../internals/set-to-string-tag"),w=t("../internals/internal-state"),_=w.get,S=w.set,E="ArrayBuffer",T="DataView",M="prototype",C="Wrong length",O="Wrong index",N=o[E],A=N,R=o[T],L=R&&R[M],I=Object.prototype,P=o.RangeError,D=h.pack,F=h.unpack,U=function(t){return[255&t]},B=function(t){return[255&t,t>>8&255]},G=function(t){return[255&t,t>>8&255,t>>16&255,t>>24&255]},V=function(t){return t[3]<<24|t[2]<<16|t[1]<<8|t[0]},z=function(t){return D(t,23,4)},H=function(t){return D(t,52,8)},W=function(t,r){b(t[M],r,{get:function(){return _(this)[r]}})},q=function(t,r,n,o){var a=f(n),s=_(t);if(a+r>s.byteLength)throw P(O);var l=_(s.buffer).bytes,c=a+s.byteOffset,u=l.slice(c,c+r);return o?u:u.reverse()},X=function(t,r,n,o,a,s){var l=f(n),c=_(t);if(l+r>c.byteLength)throw P(O);for(var u=_(c.buffer).bytes,p=l+c.byteOffset,d=o(+a),m=0;m<r;m++)u[p+m]=d[s?m:r-m-1]};if(s){if(!u(function(){N(1)})||!u(function(){new N(-1);// eslint-disable-line no-new
})||u(function(){return new N,new N(1.5),new N(NaN),N.name!=E})){for(var Y,Z=(A=function(t){return p(this,A),new N(f(t))})[M]=N[M],K=v(N),J=0;K.length>J;)(Y=K[J++])in A||l(A,Y,N[Y]);Z.constructor=A}// WebKit bug - the same parent prototype for typed arrays and data view
g&&y(L)!==I&&g(L,I);// iOS Safari 7.x bug
var Q=new R(new A(2)),$=L.setInt8;Q.setInt8(0,2147483648),Q.setInt8(1,2147483649),(Q.getInt8(0)||!Q.getInt8(1))&&c(L,{setInt8:function(t,r){$.call(this,t,r<<24>>24)},setUint8:function(t,r){$.call(this,t,r<<24>>24)}},{unsafe:!0})}else A=function(t){p(this,A,E);var r=f(t);S(this,{bytes:x.call(Array(r),0),byteLength:r}),a||(this.byteLength=r)},R=function(t,r,n){p(this,R,T),p(t,A,T);var o=_(t).byteLength,s=d(r);if(s<0||s>o)throw P("Wrong offset");if(n=void 0===n?o-s:m(n),s+n>o)throw P(C);S(this,{buffer:t,byteLength:n,byteOffset:s}),a||(this.buffer=t,this.byteLength=n,this.byteOffset=s)},a&&(W(A,"byteLength"),W(R,"buffer"),W(R,"byteLength"),W(R,"byteOffset")),c(R[M],{getInt8:function(t){return q(this,1,t)[0]<<24>>24},getUint8:function(t){return q(this,1,t)[0]},getInt16:function(t/* , littleEndian */){var r=q(this,2,t,arguments.length>1?arguments[1]:void 0);return(r[1]<<8|r[0])<<16>>16},getUint16:function(t/* , littleEndian */){var r=q(this,2,t,arguments.length>1?arguments[1]:void 0);return r[1]<<8|r[0]},getInt32:function(t/* , littleEndian */){return V(q(this,4,t,arguments.length>1?arguments[1]:void 0))},getUint32:function(t/* , littleEndian */){return V(q(this,4,t,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function(t/* , littleEndian */){return F(q(this,4,t,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function(t/* , littleEndian */){return F(q(this,8,t,arguments.length>1?arguments[1]:void 0),52)},setInt8:function(t,r){X(this,1,t,U,r)},setUint8:function(t,r){X(this,1,t,U,r)},setInt16:function(t,r/* , littleEndian */){X(this,2,t,B,r,arguments.length>2?arguments[2]:void 0)},setUint16:function(t,r/* , littleEndian */){X(this,2,t,B,r,arguments.length>2?arguments[2]:void 0)},setInt32:function(t,r/* , littleEndian */){X(this,4,t,G,r,arguments.length>2?arguments[2]:void 0)},setUint32:function(t,r/* , littleEndian */){X(this,4,t,G,r,arguments.length>2?arguments[2]:void 0)},setFloat32:function(t,r/* , littleEndian */){X(this,4,t,z,r,arguments.length>2?arguments[2]:void 0)},setFloat64:function(t,r/* , littleEndian */){X(this,8,t,H,r,arguments.length>2?arguments[2]:void 0)}});j(A,E),j(R,T),r.exports={ArrayBuffer:A,DataView:R}},{"../internals/an-instance":27,"../internals/array-buffer-native":29,"../internals/array-fill":33,"../internals/create-non-enumerable-property":56,"../internals/descriptors":61,"../internals/fails":69,"../internals/global":77,"../internals/ieee754":83,"../internals/internal-state":88,"../internals/object-define-property":110,"../internals/object-get-own-property-names":113,"../internals/object-get-prototype-of":115,"../internals/object-set-prototype-of":119,"../internals/redefine-all":125,"../internals/set-to-string-tag":135,"../internals/to-index":151,"../internals/to-integer":153,"../internals/to-length":154}],32:[function(t,r,n){var o=t("../internals/to-object"),a=t("../internals/to-absolute-index"),s=t("../internals/to-length"),l=Math.min;// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin
r.exports=[].copyWithin||function(t/* = 0 */,r/* = 0, end = @length */){var n=o(this),c=s(n.length),u=a(t,c),p=a(r,c),d=arguments.length>2?arguments[2]:void 0,m=l((void 0===d?c:a(d,c))-p,c-u),f=1;for(p<u&&u<p+m&&(f=-1,p+=m-1,u+=m-1);m-- >0;)p in n?n[u]=n[p]:delete n[u],u+=f,p+=f;return n}},{"../internals/to-absolute-index":150,"../internals/to-length":154,"../internals/to-object":155}],33:[function(t,r,n){var o=t("../internals/to-object"),a=t("../internals/to-absolute-index"),s=t("../internals/to-length");// https://tc39.github.io/ecma262/#sec-array.prototype.fill
r.exports=function(t/* , start = 0, end = @length */){for(var r=o(this),n=s(r.length),l=arguments.length,c=a(l>1?arguments[1]:void 0,n),u=l>2?arguments[2]:void 0,p=void 0===u?n:a(u,n);p>c;)r[c++]=t;return r}},{"../internals/to-absolute-index":150,"../internals/to-length":154,"../internals/to-object":155}],34:[function(t,r,n){var o=t("../internals/array-iteration").forEach,a=t("../internals/array-method-is-strict"),s=t("../internals/array-method-uses-to-length"),l=a("forEach"),c=s("forEach");// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
r.exports=l&&c?[].forEach:function(t/* , thisArg */){return o(this,t,arguments.length>1?arguments[1]:void 0)}},{"../internals/array-iteration":37,"../internals/array-method-is-strict":40,"../internals/array-method-uses-to-length":41}],35:[function(t,r,n){var o=t("../internals/function-bind-context"),a=t("../internals/to-object"),s=t("../internals/call-with-safe-iteration-closing"),l=t("../internals/is-array-iterator-method"),c=t("../internals/to-length"),u=t("../internals/create-property"),p=t("../internals/get-iterator-method");// https://tc39.github.io/ecma262/#sec-array.from
r.exports=function(t/* , mapfn = undefined, thisArg = undefined */){var r,n,d,m,f,h,y=a(t),g="function"==typeof this?this:Array,v=arguments.length,b=v>1?arguments[1]:void 0,x=void 0!==b,j=p(y),w=0;if(x&&(b=o(b,v>2?arguments[2]:void 0,2)),void 0==j||g==Array&&l(j))for(n=new g(r=c(y.length));r>w;w++)h=x?b(y[w],w):y[w],u(n,w,h);else for(f=(m=j.call(y)).next,n=new g;!(d=f.call(m)).done;w++)h=x?s(m,b,[d.value,w],!0):d.value,u(n,w,h);return n.length=w,n}},{"../internals/call-with-safe-iteration-closing":44,"../internals/create-property":58,"../internals/function-bind-context":72,"../internals/get-iterator-method":75,"../internals/is-array-iterator-method":89,"../internals/to-length":154,"../internals/to-object":155}],36:[function(t,r,n){var o=t("../internals/to-indexed-object"),a=t("../internals/to-length"),s=t("../internals/to-absolute-index"),l=function(t){return function(r,n,l){var c,u=o(r),p=a(u.length),d=s(l,p);// eslint-disable-next-line no-self-compare
if(t&&n!=n){for(;p>d;)if((c=u[d++])!=c)return!0;// Array#indexOf ignores holes, Array#includes - not
}else for(;p>d;d++)if((t||d in u)&&u[d]===n)return t||d||0;return!t&&-1}};r.exports={// `Array.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
includes:l(!0),// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
indexOf:l(!1)}},{"../internals/to-absolute-index":150,"../internals/to-indexed-object":152,"../internals/to-length":154}],37:[function(t,r,n){var o=t("../internals/function-bind-context"),a=t("../internals/indexed-object"),s=t("../internals/to-object"),l=t("../internals/to-length"),c=t("../internals/array-species-create"),u=[].push,p=function(t){var r=1==t,n=2==t,p=3==t,d=4==t,m=6==t,f=5==t||m;return function(h,y,g,v){for(var b,x,j=s(h),w=a(j),_=o(y,g,3),S=l(w.length),E=0,T=v||c,M=r?T(h,S):n?T(h,0):void 0;S>E;E++)if((f||E in w)&&(x=_(b=w[E],E,j),t)){if(r)M[E]=x;// map
else if(x)switch(t){case 3:return!0;// some
case 5:return b;// find
case 6:return E;// findIndex
case 2:u.call(M,b)}else if(d)return!1;// every
}return m?-1:p||d?d:M}};r.exports={// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
forEach:p(0),// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
map:p(1),// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
filter:p(2),// `Array.prototype.some` method
// https://tc39.github.io/ecma262/#sec-array.prototype.some
some:p(3),// `Array.prototype.every` method
// https://tc39.github.io/ecma262/#sec-array.prototype.every
every:p(4),// `Array.prototype.find` method
// https://tc39.github.io/ecma262/#sec-array.prototype.find
find:p(5),// `Array.prototype.findIndex` method
// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
findIndex:p(6)}},{"../internals/array-species-create":43,"../internals/function-bind-context":72,"../internals/indexed-object":84,"../internals/to-length":154,"../internals/to-object":155}],38:[function(t,r,n){var o=t("../internals/to-indexed-object"),a=t("../internals/to-integer"),s=t("../internals/to-length"),l=t("../internals/array-method-is-strict"),c=t("../internals/array-method-uses-to-length"),u=Math.min,p=[].lastIndexOf,d=!!p&&1/[1].lastIndexOf(1,-0)<0,m=l("lastIndexOf"),f=c("indexOf",{ACCESSORS:!0,1:0}),h=d||!m||!f;// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof
r.exports=h?function(t/* , fromIndex = @[*-1] */){// convert -0 to +0
if(d)return p.apply(this,arguments)||0;var r=o(this),n=s(r.length),l=n-1;for(arguments.length>1&&(l=u(l,a(arguments[1]))),l<0&&(l=n+l);l>=0;l--)if(l in r&&r[l]===t)return l||0;return -1}:p},{"../internals/array-method-is-strict":40,"../internals/array-method-uses-to-length":41,"../internals/to-indexed-object":152,"../internals/to-integer":153,"../internals/to-length":154}],39:[function(t,r,n){var o=t("../internals/fails"),a=t("../internals/well-known-symbol"),s=t("../internals/engine-v8-version"),l=a("species");r.exports=function(t){// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/677
return s>=51||!o(function(){var r=[];return(r.constructor={})[l]=function(){return{foo:1}},1!==r[t](Boolean).foo})}},{"../internals/engine-v8-version":66,"../internals/fails":69,"../internals/well-known-symbol":166}],40:[function(t,r,n){var o=t("../internals/fails");r.exports=function(t,r){var n=[][t];return!!n&&o(function(){// eslint-disable-next-line no-useless-call,no-throw-literal
n.call(null,r||function(){throw 1},1)})}},{"../internals/fails":69}],41:[function(t,r,n){var o=t("../internals/descriptors"),a=t("../internals/fails"),s=t("../internals/has"),l=Object.defineProperty,c={},u=function(t){throw t};r.exports=function(t,r){if(s(c,t))return c[t];r||(r={});var n=[][t],p=!!s(r,"ACCESSORS")&&r.ACCESSORS,d=s(r,0)?r[0]:u,m=s(r,1)?r[1]:void 0;return c[t]=!!n&&!a(function(){if(p&&!o)return!0;var t={length:-1};p?l(t,1,{enumerable:!0,get:u}):t[1]=1,n.call(t,d,m)})}},{"../internals/descriptors":61,"../internals/fails":69,"../internals/has":78}],42:[function(t,r,n){var o=t("../internals/a-function"),a=t("../internals/to-object"),s=t("../internals/indexed-object"),l=t("../internals/to-length"),c=function(t){return function(r,n,c,u){o(n);var p=a(r),d=s(p),m=l(p.length),f=t?m-1:0,h=t?-1:1;if(c<2)for(;;){if(f in d){u=d[f],f+=h;break}if(f+=h,t?f<0:m<=f)throw TypeError("Reduce of empty array with no initial value")}for(;t?f>=0:m>f;f+=h)f in d&&(u=n(u,d[f],f,p));return u}};r.exports={// `Array.prototype.reduce` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reduce
left:c(!1),// `Array.prototype.reduceRight` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reduceright
right:c(!0)}},{"../internals/a-function":23,"../internals/indexed-object":84,"../internals/to-length":154,"../internals/to-object":155}],43:[function(t,r,n){var o=t("../internals/is-object"),a=t("../internals/is-array"),s=t("../internals/well-known-symbol")("species");// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
r.exports=function(t,r){var n;return a(t)&&("function"==typeof(n=t.constructor)&&(n===Array||a(n.prototype))?n=void 0:o(n)&&null===(n=n[s])&&(n=void 0)),new(void 0===n?Array:n)(0===r?0:r)}},{"../internals/is-array":90,"../internals/is-object":92,"../internals/well-known-symbol":166}],44:[function(t,r,n){var o=t("../internals/an-object");// call something on iterator step with safe closing on error
r.exports=function(t,r,n,a){try{return a?r(o(n)[0],n[1]):r(n);// 7.4.6 IteratorClose(iterator, completion)
}catch(r){var s=t.return;throw void 0!==s&&o(s.call(t)),r}}},{"../internals/an-object":28}],45:[function(t,r,n){var o=t("../internals/well-known-symbol")("iterator"),a=!1;try{var s=0,l={next:function(){return{done:!!s++}},return:function(){a=!0}};l[o]=function(){return this},Array.from(l,function(){throw 2})}catch(t){/* empty */}r.exports=function(t,r){if(!r&&!a)return!1;var n=!1;try{var s={};s[o]=function(){return{next:function(){return{done:n=!0}}}},t(s)}catch(t){/* empty */}return n}},{"../internals/well-known-symbol":166}],46:[function(t,r,n){var o={}.toString;r.exports=function(t){return o.call(t).slice(8,-1)}},{}],47:[function(t,r,n){var o=t("../internals/to-string-tag-support"),a=t("../internals/classof-raw"),s=t("../internals/well-known-symbol")("toStringTag"),l="Arguments"==a(function(){return arguments}()),c=function(t,r){try{return t[r]}catch(t){/* empty */}};r.exports=o?a:function(t){var r,n,o;return void 0===t?"Undefined":null===t?"Null"// @@toStringTag case
:"string"==typeof(n=c(r=Object(t),s))?n// builtinTag case
:l?a(r)// ES3 arguments fallback
:"Object"==(o=a(r))&&"function"==typeof r.callee?"Arguments":o}},{"../internals/classof-raw":46,"../internals/to-string-tag-support":159,"../internals/well-known-symbol":166}],48:[function(t,r,n){var o=t("../internals/object-define-property").f,a=t("../internals/object-create"),s=t("../internals/redefine-all"),l=t("../internals/function-bind-context"),c=t("../internals/an-instance"),u=t("../internals/iterate"),p=t("../internals/define-iterator"),d=t("../internals/set-species"),m=t("../internals/descriptors"),f=t("../internals/internal-metadata").fastKey,h=t("../internals/internal-state"),y=h.set,g=h.getterFor;r.exports={getConstructor:function(t,r,n,p){var d=t(function(t,o){c(t,d,r),y(t,{type:r,index:a(null),first:void 0,last:void 0,size:0}),m||(t.size=0),void 0!=o&&u(o,t[p],t,n)}),h=g(r),v=function(t,r,n){var o,a,s=h(t),l=b(t,r);return l?l.value=n:(s.last=l={index:a=f(r,!0),key:r,value:n,previous:o=s.last,next:void 0,removed:!1},s.first||(s.first=l),o&&(o.next=l),m?s.size++:t.size++,"F"!==a&&(s.index[a]=l)),t},b=function(t,r){var n,o=h(t),a=f(r);// fast case
if("F"!==a)return o.index[a];// frozen object case
for(n=o.first;n;n=n.next)if(n.key==r)return n};return s(d.prototype,{// 23.1.3.1 Map.prototype.clear()
// 23.2.3.2 Set.prototype.clear()
clear:function(){for(var t=this,r=h(t),n=r.index,o=r.first;o;)o.removed=!0,o.previous&&(o.previous=o.previous.next=void 0),delete n[o.index],o=o.next;r.first=r.last=void 0,m?r.size=0:t.size=0},// 23.1.3.3 Map.prototype.delete(key)
// 23.2.3.4 Set.prototype.delete(value)
delete:function(t){var r=this,n=h(r),o=b(r,t);if(o){var a=o.next,s=o.previous;delete n.index[o.index],o.removed=!0,s&&(s.next=a),a&&(a.previous=s),n.first==o&&(n.first=a),n.last==o&&(n.last=s),m?n.size--:r.size--}return!!o},// 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
// 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
forEach:function(t/* , that = undefined */){for(var r,n=h(this),o=l(t,arguments.length>1?arguments[1]:void 0,3);r=r?r.next:n.first;)for(o(r.value,r.key,this);r&&r.removed;)r=r.previous},// 23.1.3.7 Map.prototype.has(key)
// 23.2.3.7 Set.prototype.has(value)
has:function(t){return!!b(this,t)}}),s(d.prototype,n?{// 23.1.3.6 Map.prototype.get(key)
get:function(t){var r=b(this,t);return r&&r.value},// 23.1.3.9 Map.prototype.set(key, value)
set:function(t,r){return v(this,0===t?0:t,r)}}:{// 23.2.3.1 Set.prototype.add(value)
add:function(t){return v(this,t=0===t?0:t,t)}}),m&&o(d.prototype,"size",{get:function(){return h(this).size}}),d},setStrong:function(t,r,n){var o=r+" Iterator",a=g(r),s=g(o);// 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
p(t,r,function(t,r){y(this,{type:o,target:t,state:a(t),kind:r,last:void 0})},function(){for(var t=s(this),r=t.kind,n=t.last;n&&n.removed;)n=n.previous;// get next entry
return t.target&&(t.last=n=n?n.next:t.state.first)?"keys"==r?{value:n.key,done:!1}:"values"==r?{value:n.value,done:!1}:{value:[n.key,n.value],done:!1}:(// or finish the iteration
t.target=void 0,{value:void 0,done:!0})// return step by kind
},n?"entries":"values",!n,!0),d(r)}}},{"../internals/an-instance":27,"../internals/define-iterator":59,"../internals/descriptors":61,"../internals/function-bind-context":72,"../internals/internal-metadata":87,"../internals/internal-state":88,"../internals/iterate":95,"../internals/object-create":108,"../internals/object-define-property":110,"../internals/redefine-all":125,"../internals/set-species":134}],49:[function(t,r,n){var o=t("../internals/redefine-all"),a=t("../internals/internal-metadata").getWeakData,s=t("../internals/an-object"),l=t("../internals/is-object"),c=t("../internals/an-instance"),u=t("../internals/iterate"),p=t("../internals/array-iteration"),d=t("../internals/has"),m=t("../internals/internal-state"),f=m.set,h=m.getterFor,y=p.find,g=p.findIndex,v=0,b=function(t){return t.frozen||(t.frozen=new x)},x=function(){this.entries=[]},j=function(t,r){return y(t.entries,function(t){return t[0]===r})};x.prototype={get:function(t){var r=j(this,t);if(r)return r[1]},has:function(t){return!!j(this,t)},set:function(t,r){var n=j(this,t);n?n[1]=r:this.entries.push([t,r])},delete:function(t){var r=g(this.entries,function(r){return r[0]===t});return~r&&this.entries.splice(r,1),!!~r}},r.exports={getConstructor:function(t,r,n,p){var m=t(function(t,o){c(t,m,r),f(t,{type:r,id:v++,frozen:void 0}),void 0!=o&&u(o,t[p],t,n)}),y=h(r),g=function(t,r,n){var o=y(t),l=a(s(r),!0);return!0===l?b(o).set(r,n):l[o.id]=n,t};return o(m.prototype,{// 23.3.3.2 WeakMap.prototype.delete(key)
// 23.4.3.3 WeakSet.prototype.delete(value)
delete:function(t){var r=y(this);if(!l(t))return!1;var n=a(t);return!0===n?b(r).delete(t):n&&d(n,r.id)&&delete n[r.id]},// 23.3.3.4 WeakMap.prototype.has(key)
// 23.4.3.4 WeakSet.prototype.has(value)
has:function(t){var r=y(this);if(!l(t))return!1;var n=a(t);return!0===n?b(r).has(t):n&&d(n,r.id)}}),o(m.prototype,n?{// 23.3.3.3 WeakMap.prototype.get(key)
get:function(t){var r=y(this);if(l(t)){var n=a(t);return!0===n?b(r).get(t):n?n[r.id]:void 0}},// 23.3.3.5 WeakMap.prototype.set(key, value)
set:function(t,r){return g(this,t,r)}}:{// 23.4.3.1 WeakSet.prototype.add(value)
add:function(t){return g(this,t,!0)}}),m}}},{"../internals/an-instance":27,"../internals/an-object":28,"../internals/array-iteration":37,"../internals/has":78,"../internals/internal-metadata":87,"../internals/internal-state":88,"../internals/is-object":92,"../internals/iterate":95,"../internals/redefine-all":125}],50:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/global"),s=t("../internals/is-forced"),l=t("../internals/redefine"),c=t("../internals/internal-metadata"),u=t("../internals/iterate"),p=t("../internals/an-instance"),d=t("../internals/is-object"),m=t("../internals/fails"),f=t("../internals/check-correctness-of-iteration"),h=t("../internals/set-to-string-tag"),y=t("../internals/inherit-if-required");r.exports=function(t,r,n){var g=-1!==t.indexOf("Map"),v=-1!==t.indexOf("Weak"),b=g?"set":"add",x=a[t],j=x&&x.prototype,w=x,_={},S=function(t){var r=j[t];l(j,t,"add"==t?function(t){return r.call(this,0===t?0:t),this}:"delete"==t?function(t){return(!v||!!d(t))&&r.call(this,0===t?0:t)}:"get"==t?function(t){return v&&!d(t)?void 0:r.call(this,0===t?0:t)}:"has"==t?function(t){return(!v||!!d(t))&&r.call(this,0===t?0:t)}:function(t,n){return r.call(this,0===t?0:t,n),this})};if(s(t,"function"!=typeof x||!(v||j.forEach&&!m(function(){new x().entries().next()}))))// create collection constructor
w=n.getConstructor(r,t,g,b),c.REQUIRED=!0;else if(s(t,!0)){var E=new w,T=E[b](v?{}:-0,1)!=E,M=m(function(){E.has(1)}),C=f(function(t){new x(t)}),O=!v&&m(function(){for(// V8 ~ Chromium 42- fails only with 5+ elements
var t=new x,r=5;r--;)t[b](r,r);return!t.has(-0)});// early implementations not supports chaining
C||((w=r(function(r,n){p(r,w,t);var o=y(new x,r,w);return void 0!=n&&u(n,o[b],o,g),o})).prototype=j,j.constructor=w),(M||O)&&(S("delete"),S("has"),g&&S("get")),(O||T)&&S(b),v&&j.clear&&delete j.clear}return _[t]=w,o({global:!0,forced:w!=x},_),h(w,t),v||n.setStrong(w,t,g),w}},{"../internals/an-instance":27,"../internals/check-correctness-of-iteration":45,"../internals/export":68,"../internals/fails":69,"../internals/global":77,"../internals/inherit-if-required":85,"../internals/internal-metadata":87,"../internals/is-forced":91,"../internals/is-object":92,"../internals/iterate":95,"../internals/redefine":126,"../internals/set-to-string-tag":135}],51:[function(t,r,n){var o=t("../internals/has"),a=t("../internals/own-keys"),s=t("../internals/object-get-own-property-descriptor"),l=t("../internals/object-define-property");r.exports=function(t,r){for(var n=a(r),c=l.f,u=s.f,p=0;p<n.length;p++){var d=n[p];o(t,d)||c(t,d,u(r,d))}}},{"../internals/has":78,"../internals/object-define-property":110,"../internals/object-get-own-property-descriptor":111,"../internals/own-keys":121}],52:[function(t,r,n){var o=t("../internals/well-known-symbol")("match");r.exports=function(t){var r=/./;try{"/./"[t](r)}catch(n){try{return r[o]=!1,"/./"[t](r)}catch(t){/* empty */}}return!1}},{"../internals/well-known-symbol":166}],53:[function(t,r,n){var o=t("../internals/fails");r.exports=!o(function(){function t(){/* empty */}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype})},{"../internals/fails":69}],54:[function(t,r,n){var o=t("../internals/require-object-coercible"),a=/"/g;// https://tc39.github.io/ecma262/#sec-createhtml
r.exports=function(t,r,n,s){var l=String(o(t)),c="<"+r;return""!==n&&(c+=" "+n+'="'+String(s).replace(a,"&quot;")+'"'),c+">"+l+"</"+r+">"}},{"../internals/require-object-coercible":131}],55:[function(t,r,n){var o=t("../internals/iterators-core").IteratorPrototype,a=t("../internals/object-create"),s=t("../internals/create-property-descriptor"),l=t("../internals/set-to-string-tag"),c=t("../internals/iterators"),u=function(){return this};r.exports=function(t,r,n){var p=r+" Iterator";return t.prototype=a(o,{next:s(1,n)}),l(t,p,!1,!0),c[p]=u,t}},{"../internals/create-property-descriptor":57,"../internals/iterators":97,"../internals/iterators-core":96,"../internals/object-create":108,"../internals/set-to-string-tag":135}],56:[function(t,r,n){var o=t("../internals/descriptors"),a=t("../internals/object-define-property"),s=t("../internals/create-property-descriptor");r.exports=o?function(t,r,n){return a.f(t,r,s(1,n))}:function(t,r,n){return t[r]=n,t}},{"../internals/create-property-descriptor":57,"../internals/descriptors":61,"../internals/object-define-property":110}],57:[function(t,r,n){r.exports=function(t,r){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:r}}},{}],58:[function(t,r,n){var o=t("../internals/to-primitive"),a=t("../internals/object-define-property"),s=t("../internals/create-property-descriptor");r.exports=function(t,r,n){var l=o(r);l in t?a.f(t,l,s(0,n)):t[l]=n}},{"../internals/create-property-descriptor":57,"../internals/object-define-property":110,"../internals/to-primitive":158}],59:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/create-iterator-constructor"),s=t("../internals/object-get-prototype-of"),l=t("../internals/object-set-prototype-of"),c=t("../internals/set-to-string-tag"),u=t("../internals/create-non-enumerable-property"),p=t("../internals/redefine"),d=t("../internals/well-known-symbol"),m=t("../internals/is-pure"),f=t("../internals/iterators"),h=t("../internals/iterators-core"),y=h.IteratorPrototype,g=h.BUGGY_SAFARI_ITERATORS,v=d("iterator"),b="keys",x="values",j="entries",w=function(){return this};r.exports=function(t,r,n,d,h,_,S){a(n,r,d);var E,T,M,C=function(t){if(t===h&&L)return L;if(!g&&t in A)return A[t];switch(t){case b:case x:case j:return function(){return new n(this,t)}}return function(){return new n(this)}},O=r+" Iterator",N=!1,A=t.prototype,R=A[v]||A["@@iterator"]||h&&A[h],L=!g&&R||C(h),I="Array"==r&&A.entries||R;if(I&&(E=s(I.call(new t)),y!==Object.prototype&&E.next&&(m||s(E)===y||(l?l(E,y):"function"!=typeof E[v]&&u(E,v,w)),c(E,O,!0,!0),m&&(f[O]=w))),h==x&&R&&R.name!==x&&(N=!0,L=function(){return R.call(this)}),(!m||S)&&A[v]!==L&&u(A,v,L),f[r]=L,h){if(T={values:C(x),keys:_?L:C(b),entries:C(j)},S)for(M in T)!g&&!N&&M in A||p(A,M,T[M]);else o({target:r,proto:!0,forced:g||N},T)}return T}},{"../internals/create-iterator-constructor":55,"../internals/create-non-enumerable-property":56,"../internals/export":68,"../internals/is-pure":93,"../internals/iterators":97,"../internals/iterators-core":96,"../internals/object-get-prototype-of":115,"../internals/object-set-prototype-of":119,"../internals/redefine":126,"../internals/set-to-string-tag":135,"../internals/well-known-symbol":166}],60:[function(t,r,n){var o=t("../internals/path"),a=t("../internals/has"),s=t("../internals/well-known-symbol-wrapped"),l=t("../internals/object-define-property").f;r.exports=function(t){var r=o.Symbol||(o.Symbol={});a(r,t)||l(r,t,{value:s.f(t)})}},{"../internals/has":78,"../internals/object-define-property":110,"../internals/path":122,"../internals/well-known-symbol-wrapped":165}],61:[function(t,r,n){var o=t("../internals/fails");// Thank's IE8 for his funny defineProperty
r.exports=!o(function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})},{"../internals/fails":69}],62:[function(t,r,n){var o=t("../internals/global"),a=t("../internals/is-object"),s=o.document,l=a(s)&&a(s.createElement);r.exports=function(t){return l?s.createElement(t):{}}},{"../internals/global":77,"../internals/is-object":92}],63:[function(t,r,n){// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
r.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},{}],64:[function(t,r,n){var o=t("../internals/engine-user-agent");r.exports=/(iphone|ipod|ipad).*applewebkit/i.test(o)},{"../internals/engine-user-agent":65}],65:[function(t,r,n){var o=t("../internals/get-built-in");r.exports=o("navigator","userAgent")||""},{"../internals/get-built-in":74}],66:[function(t,r,n){var o,a,s=t("../internals/global"),l=t("../internals/engine-user-agent"),c=s.process,u=c&&c.versions,p=u&&u.v8;p?a=(o=p.split("."))[0]+o[1]:l&&(!(o=l.match(/Edge\/(\d+)/))||o[1]>=74)&&(o=l.match(/Chrome\/(\d+)/))&&(a=o[1]),r.exports=a&&+a},{"../internals/engine-user-agent":65,"../internals/global":77}],67:[function(t,r,n){// IE8- don't enum bug keys
r.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},{}],68:[function(t,r,n){var o=t("../internals/global"),a=t("../internals/object-get-own-property-descriptor").f,s=t("../internals/create-non-enumerable-property"),l=t("../internals/redefine"),c=t("../internals/set-global"),u=t("../internals/copy-constructor-properties"),p=t("../internals/is-forced");/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/r.exports=function(t,r){var n,d,m,f,h,y=t.target,g=t.global,v=t.stat;if(n=g?o:v?o[y]||c(y,{}):(o[y]||{}).prototype)for(d in r){if(f=r[d],m=t.noTargetGet?(h=a(n,d))&&h.value:n[d],!p(g?d:y+(v?".":"#")+d,t.forced)&&void 0!==m){if(typeof f==typeof m)continue;u(f,m)}// add a flag to not completely full polyfills
(t.sham||m&&m.sham)&&s(f,"sham",!0),// extend global
l(n,d,f,t)}}},{"../internals/copy-constructor-properties":51,"../internals/create-non-enumerable-property":56,"../internals/global":77,"../internals/is-forced":91,"../internals/object-get-own-property-descriptor":111,"../internals/redefine":126,"../internals/set-global":133}],69:[function(t,r,n){r.exports=function(t){try{return!!t()}catch(t){return!0}}},{}],70:[function(t,r,n){t("../modules/es.regexp.exec");var o=t("../internals/redefine"),a=t("../internals/fails"),s=t("../internals/well-known-symbol"),l=t("../internals/regexp-exec"),c=t("../internals/create-non-enumerable-property"),u=s("species"),p=!a(function(){// #replace needs built-in support for named groups.
// #match works fine because it just return the exec results, even if it has
// a "grops" property.
var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")}),d=function(){return"$0"==="a".replace(/./,"$0")}(),m=s("replace"),f=function(){return!!/./[m]&&""===/./[m]("a","$0")}(),h=!a(function(){var t=/(?:)/,r=t.exec;t.exec=function(){return r.apply(this,arguments)};var n="ab".split(t);return 2!==n.length||"a"!==n[0]||"b"!==n[1]});r.exports=function(t,r,n,m){var y=s(t),g=!a(function(){// String methods call symbol-named RegEp methods
var r={};return r[y]=function(){return 7},7!=""[t](r)}),v=g&&!a(function(){// Symbol-named RegExp methods call .exec
var r=!1,n=/a/;return"split"===t&&(// a new one. We need to return the patched regex when creating the new one.
// We can't use real regex here since it causes deoptimization
// and serious performance degradation in V8
// https://github.com/zloirock/core-js/issues/306
(n={}).constructor={},n.constructor[u]=function(){return n},n.flags="",n[y]=/./[y]),n.exec=function(){return r=!0,null},n[y](""),!r});if(!g||!v||"replace"===t&&!(p&&d&&!f)||"split"===t&&!h){var b=/./[y],x=n(y,""[t],function(t,r,n,o,a){return r.exec===l?g&&!a?{done:!0,value:b.call(r,n,o)}:{done:!0,value:t.call(n,r,o)}:{done:!1}},{REPLACE_KEEPS_$0:d,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:f}),j=x[0],w=x[1];o(String.prototype,t,j),o(RegExp.prototype,y,2// 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
==r?function(t,r){return w.call(t,this,r)}// 21.2.5.6 RegExp.prototype[@@match](string)
:function(t){return w.call(t,this)})}m&&c(RegExp.prototype[y],"sham",!0)}},{"../internals/create-non-enumerable-property":56,"../internals/fails":69,"../internals/redefine":126,"../internals/regexp-exec":128,"../internals/well-known-symbol":166,"../modules/es.regexp.exec":203}],71:[function(t,r,n){var o=t("../internals/fails");r.exports=!o(function(){return Object.isExtensible(Object.preventExtensions({}))})},{"../internals/fails":69}],72:[function(t,r,n){var o=t("../internals/a-function");// optional / simple context binding
r.exports=function(t,r,n){if(o(t),void 0===r)return t;switch(n){case 0:return function(){return t.call(r)};case 1:return function(n){return t.call(r,n)};case 2:return function(n,o){return t.call(r,n,o)};case 3:return function(n,o,a){return t.call(r,n,o,a)}}return function()/* ...args */{return t.apply(r,arguments)}}},{"../internals/a-function":23}],73:[function(t,r,n){var o=t("../internals/a-function"),a=t("../internals/is-object"),s=[].slice,l={},c=function(t,r,n){if(!(r in l)){for(var o=[],a=0;a<r;a++)o[a]="a["+a+"]";// eslint-disable-next-line no-new-func
l[r]=Function("C,a","return new C("+o.join(",")+")")}return l[r](t,n)};// https://tc39.github.io/ecma262/#sec-function.prototype.bind
r.exports=Function.bind||function(t/* , ...args */){var r=o(this),n=s.call(arguments,1),l=function()/* args... */{var o=n.concat(s.call(arguments));return this instanceof l?c(r,o.length,o):r.apply(t,o)};return a(r.prototype)&&(l.prototype=r.prototype),l}},{"../internals/a-function":23,"../internals/is-object":92}],74:[function(t,r,n){var o=t("../internals/path"),a=t("../internals/global"),s=function(t){return"function"==typeof t?t:void 0};r.exports=function(t,r){return arguments.length<2?s(o[t])||s(a[t]):o[t]&&o[t][r]||a[t]&&a[t][r]}},{"../internals/global":77,"../internals/path":122}],75:[function(t,r,n){var o=t("../internals/classof"),a=t("../internals/iterators"),s=t("../internals/well-known-symbol")("iterator");r.exports=function(t){if(void 0!=t)return t[s]||t["@@iterator"]||a[o(t)]}},{"../internals/classof":47,"../internals/iterators":97,"../internals/well-known-symbol":166}],76:[function(t,r,n){var o=t("../internals/an-object"),a=t("../internals/get-iterator-method");r.exports=function(t){var r=a(t);if("function"!=typeof r)throw TypeError(String(t)+" is not iterable");return o(r.call(t))}},{"../internals/an-object":28,"../internals/get-iterator-method":75}],77:[function(t,r,n){(function(t){var n=function(t){return t&&t.Math==Math&&t};// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
r.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof t&&t)||// eslint-disable-next-line no-new-func
Function("return this")()}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],78:[function(t,r,n){var o={}.hasOwnProperty;r.exports=function(t,r){return o.call(t,r)}},{}],79:[function(t,r,n){r.exports={}},{}],80:[function(t,r,n){var o=t("../internals/global");r.exports=function(t,r){var n=o.console;n&&n.error&&(1==arguments.length?n.error(t):n.error(t,r))}},{"../internals/global":77}],81:[function(t,r,n){var o=t("../internals/get-built-in");r.exports=o("document","documentElement")},{"../internals/get-built-in":74}],82:[function(t,r,n){var o=t("../internals/descriptors"),a=t("../internals/fails"),s=t("../internals/document-create-element");r.exports=!o&&!a(function(){return 7!=Object.defineProperty(s("div"),"a",{get:function(){return 7}}).a})},{"../internals/descriptors":61,"../internals/document-create-element":62,"../internals/fails":69}],83:[function(t,r,n){// IEEE754 conversions based on https://github.com/feross/ieee754
// eslint-disable-next-line no-shadow-restricted-names
var o=1/0,a=Math.abs,s=Math.pow,l=Math.floor,c=Math.log,u=Math.LN2,p=function(t,r,n){var p,d,m,f=Array(n),h=8*n-r-1,y=(1<<h)-1,g=y>>1,v=23===r?s(2,-24)-s(2,-77):0,b=t<0||0===t&&1/t<0?1:0,x=0;for((t=a(t))!=t||t===o?(// eslint-disable-next-line no-self-compare
d=t!=t?1:0,p=y):(p=l(c(t)/u),t*(m=s(2,-p))<1&&(p--,m*=2),p+g>=1?t+=v/m:t+=v*s(2,1-g),t*m>=2&&(p++,m/=2),p+g>=y?(d=0,p=y):p+g>=1?(d=(t*m-1)*s(2,r),p+=g):(d=t*s(2,g-1)*s(2,r),p=0));r>=8;f[x++]=255&d,d/=256,r-=8);for(p=p<<r|d,h+=r;h>0;f[x++]=255&p,p/=256,h-=8);return f[--x]|=128*b,f},d=function(t,r){var n,a=t.length,l=8*a-r-1,c=(1<<l)-1,u=c>>1,p=l-7,d=a-1,m=t[d--],f=127&m;for(m>>=7;p>0;f=256*f+t[d],d--,p-=8);for(n=f&(1<<-p)-1,f>>=-p,p+=r;p>0;n=256*n+t[d],d--,p-=8);if(0===f)f=1-u;else{if(f===c)return n?NaN:m?-o:o;n+=s(2,r),f-=u}return(m?-1:1)*n*s(2,f-r)};r.exports={pack:p,unpack:d}},{}],84:[function(t,r,n){var o=t("../internals/fails"),a=t("../internals/classof-raw"),s="".split;r.exports=o(function(){// throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
// eslint-disable-next-line no-prototype-builtins
return!Object("z").propertyIsEnumerable(0)})?function(t){return"String"==a(t)?s.call(t,""):Object(t)}:Object},{"../internals/classof-raw":46,"../internals/fails":69}],85:[function(t,r,n){var o=t("../internals/is-object"),a=t("../internals/object-set-prototype-of");r.exports=function(t,r,n){var s,l;return a&&// we haven't completely correct pre-ES6 way for getting `new.target`, so use this
"function"==typeof(s=r.constructor)&&s!==n&&o(l=s.prototype)&&l!==n.prototype&&a(t,l),t}},{"../internals/is-object":92,"../internals/object-set-prototype-of":119}],86:[function(t,r,n){var o=t("../internals/shared-store"),a=Function.toString;"function"!=typeof o.inspectSource&&(o.inspectSource=function(t){return a.call(t)}),r.exports=o.inspectSource},{"../internals/shared-store":137}],87:[function(t,r,n){var o=t("../internals/hidden-keys"),a=t("../internals/is-object"),s=t("../internals/has"),l=t("../internals/object-define-property").f,c=t("../internals/uid"),u=t("../internals/freezing"),p=c("meta"),d=0,m=Object.isExtensible||function(){return!0},f=function(t){l(t,p,{value:{objectID:"O"+ ++d,// object ID
weakData:{}// weak collections IDs
}})},h=function(t,r){// return a primitive with prefix
if(!a(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!s(t,p)){// can't set metadata to uncaught frozen object
if(!m(t))return"F";// not necessary to add metadata
if(!r)return"E";// add missing metadata
f(t);// return object ID
}return t[p].objectID},y=function(t,r){if(!s(t,p)){// can't set metadata to uncaught frozen object
if(!m(t))return!0;// not necessary to add metadata
if(!r)return!1;// add missing metadata
f(t);// return the store of weak collections IDs
}return t[p].weakData},g=function(t){return u&&v.REQUIRED&&m(t)&&!s(t,p)&&f(t),t},v=r.exports={REQUIRED:!1,fastKey:h,getWeakData:y,onFreeze:g};o[p]=!0},{"../internals/freezing":71,"../internals/has":78,"../internals/hidden-keys":79,"../internals/is-object":92,"../internals/object-define-property":110,"../internals/uid":163}],88:[function(t,r,n){var o,a,s,l=t("../internals/native-weak-map"),c=t("../internals/global"),u=t("../internals/is-object"),p=t("../internals/create-non-enumerable-property"),d=t("../internals/has"),m=t("../internals/shared-key"),f=t("../internals/hidden-keys"),h=c.WeakMap,y=function(t){return s(t)?a(t):o(t,{})},g=function(t){return function(r){var n;if(!u(r)||(n=a(r)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return n}};if(l){var v=new h,b=v.get,x=v.has,j=v.set;o=function(t,r){return j.call(v,t,r),r},a=function(t){return b.call(v,t)||{}},s=function(t){return x.call(v,t)}}else{var w=m("state");f[w]=!0,o=function(t,r){return p(t,w,r),r},a=function(t){return d(t,w)?t[w]:{}},s=function(t){return d(t,w)}}r.exports={set:o,get:a,has:s,enforce:y,getterFor:g}},{"../internals/create-non-enumerable-property":56,"../internals/global":77,"../internals/has":78,"../internals/hidden-keys":79,"../internals/is-object":92,"../internals/native-weak-map":103,"../internals/shared-key":136}],89:[function(t,r,n){var o=t("../internals/well-known-symbol"),a=t("../internals/iterators"),s=o("iterator"),l=Array.prototype;r.exports=function(t){return void 0!==t&&(a.Array===t||l[s]===t)}},{"../internals/iterators":97,"../internals/well-known-symbol":166}],90:[function(t,r,n){var o=t("../internals/classof-raw");// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
r.exports=Array.isArray||function(t){return"Array"==o(t)}},{"../internals/classof-raw":46}],91:[function(t,r,n){var o=t("../internals/fails"),a=/#|\.prototype\./,s=function(t,r){var n=c[l(t)];return n==p||n!=u&&("function"==typeof r?o(r):!!r)},l=s.normalize=function(t){return String(t).replace(a,".").toLowerCase()},c=s.data={},u=s.NATIVE="N",p=s.POLYFILL="P";r.exports=s},{"../internals/fails":69}],92:[function(t,r,n){r.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},{}],93:[function(t,r,n){r.exports=!1},{}],94:[function(t,r,n){var o=t("../internals/is-object"),a=t("../internals/classof-raw"),s=t("../internals/well-known-symbol")("match");// https://tc39.github.io/ecma262/#sec-isregexp
r.exports=function(t){var r;return o(t)&&(void 0!==(r=t[s])?!!r:"RegExp"==a(t))}},{"../internals/classof-raw":46,"../internals/is-object":92,"../internals/well-known-symbol":166}],95:[function(t,r,n){var o=t("../internals/an-object"),a=t("../internals/is-array-iterator-method"),s=t("../internals/to-length"),l=t("../internals/function-bind-context"),c=t("../internals/get-iterator-method"),u=t("../internals/call-with-safe-iteration-closing"),p=function(t,r){this.stopped=t,this.result=r};(r.exports=function(t,r,n,d,m){var f,h,y,g,v,b,x,j=l(r,n,d?2:1);if(m)f=t;else{if("function"!=typeof(h=c(t)))throw TypeError("Target is not iterable");// optimisation for array iterators
if(a(h)){for(y=0,g=s(t.length);g>y;y++)if((v=d?j(o(x=t[y])[0],x[1]):j(t[y]))&&v instanceof p)return v;return new p(!1)}f=h.call(t)}for(b=f.next;!(x=b.call(f)).done;)if("object"==typeof(v=u(f,j,x.value,d))&&v&&v instanceof p)return v;return new p(!1)}).stop=function(t){return new p(!0,t)}},{"../internals/an-object":28,"../internals/call-with-safe-iteration-closing":44,"../internals/function-bind-context":72,"../internals/get-iterator-method":75,"../internals/is-array-iterator-method":89,"../internals/to-length":154}],96:[function(t,r,n){var o,a,s,l=t("../internals/object-get-prototype-of"),c=t("../internals/create-non-enumerable-property"),u=t("../internals/has"),p=t("../internals/well-known-symbol"),d=t("../internals/is-pure"),m=p("iterator"),f=!1,h=function(){return this};[].keys&&("next"in(s=[].keys())?(a=l(l(s)))!==Object.prototype&&(o=a):f=!0),void 0==o&&(o={}),d||u(o,m)||c(o,m,h),r.exports={IteratorPrototype:o,BUGGY_SAFARI_ITERATORS:f}},{"../internals/create-non-enumerable-property":56,"../internals/has":78,"../internals/is-pure":93,"../internals/object-get-prototype-of":115,"../internals/well-known-symbol":166}],97:[function(t,r,n){r.exports={}},{}],98:[function(t,r,n){// `Math.sign` method implementation
// https://tc39.github.io/ecma262/#sec-math.sign
r.exports=Math.sign||function(t){// eslint-disable-next-line no-self-compare
return 0==(t=+t)||t!=t?t:t<0?-1:1}},{}],99:[function(t,r,n){var o,a,s,l,c,u,p,d,m=t("../internals/global"),f=t("../internals/object-get-own-property-descriptor").f,h=t("../internals/classof-raw"),y=t("../internals/task").set,g=t("../internals/engine-is-ios"),v=m.MutationObserver||m.WebKitMutationObserver,b=m.process,x=m.Promise,j="process"==h(b),w=f(m,"queueMicrotask"),_=w&&w.value;_||(o=function(){var t,r;for(j&&(t=b.domain)&&t.exit();a;){r=a.fn,a=a.next;try{r()}catch(t){throw a?l():s=void 0,t}}s=void 0,t&&t.enter()},j?l=function(){b.nextTick(o)}:v&&!g?(c=!0,u=document.createTextNode(""),new v(o).observe(u,{characterData:!0}),l=function(){u.data=c=!c}):x&&x.resolve?(d=// Promise.resolve without an argument throws an error in LG WebOS 2
(p=x.resolve(void 0)).then,l=function(){d.call(p,o)}):l=function(){// strange IE + webpack dev server bug - use .call(global)
y.call(m,o)}),r.exports=_||function(t){var r={fn:t,next:void 0};s&&(s.next=r),a||(a=r,l()),s=r}},{"../internals/classof-raw":46,"../internals/engine-is-ios":64,"../internals/global":77,"../internals/object-get-own-property-descriptor":111,"../internals/task":148}],100:[function(t,r,n){var o=t("../internals/global");r.exports=o.Promise},{"../internals/global":77}],101:[function(t,r,n){var o=t("../internals/fails");r.exports=!!Object.getOwnPropertySymbols&&!o(function(){// Chrome 38 Symbol has incorrect toString conversion
// eslint-disable-next-line no-undef
return!String(Symbol())})},{"../internals/fails":69}],102:[function(t,r,n){var o=t("../internals/fails"),a=t("../internals/well-known-symbol"),s=t("../internals/is-pure"),l=a("iterator");r.exports=!o(function(){var t=new URL("b?a=1&b=2&c=3","http://a"),r=t.searchParams,n="";return t.pathname="c%20d",r.forEach(function(t,o){r.delete("b"),n+=o+t}),s&&!t.toJSON||!r.sort||"http://a/c%20d?a=1&c=3"!==t.href||"3"!==r.get("c")||"a=1"!==String(new URLSearchParams("?a=1"))||!r[l]// throws in Edge
||"a"!==new URL("https://a@b").username||"b"// not punycoded in Edge
!==new URLSearchParams(new URLSearchParams("a=b")).get("a")||"xn--e1aybc"// not escaped in Chrome 62-
!==new URL("http://тест").host||"#%D0%B1"// fails in Chrome 66-
!==new URL("http://a#б").hash||"a1c3"// throws in Safari
!==n||"x"!==new URL("http://x",void 0).host})},{"../internals/fails":69,"../internals/is-pure":93,"../internals/well-known-symbol":166}],103:[function(t,r,n){var o=t("../internals/global"),a=t("../internals/inspect-source"),s=o.WeakMap;r.exports="function"==typeof s&&/native code/.test(a(s))},{"../internals/global":77,"../internals/inspect-source":86}],104:[function(t,r,n){var o=t("../internals/a-function"),a=function(t){var r,n;this.promise=new t(function(t,o){if(void 0!==r||void 0!==n)throw TypeError("Bad Promise constructor");r=t,n=o}),this.resolve=o(r),this.reject=o(n)};r.exports.f=function(t){return new a(t)}},{"../internals/a-function":23}],105:[function(t,r,n){var o=t("../internals/is-regexp");r.exports=function(t){if(o(t))throw TypeError("The method doesn't accept regular expressions");return t}},{"../internals/is-regexp":94}],106:[function(t,r,n){var o=t("../internals/global").isFinite;// `Number.isFinite` method
// https://tc39.github.io/ecma262/#sec-number.isfinite
r.exports=Number.isFinite||function(t){return"number"==typeof t&&o(t)}},{"../internals/global":77}],107:[function(t,r,n){var o=t("../internals/descriptors"),a=t("../internals/fails"),s=t("../internals/object-keys"),l=t("../internals/object-get-own-property-symbols"),c=t("../internals/object-property-is-enumerable"),u=t("../internals/to-object"),p=t("../internals/indexed-object"),d=Object.assign,m=Object.defineProperty;// https://tc39.github.io/ecma262/#sec-object.assign
r.exports=!d||a(function(){// should have correct order of operations (Edge bug)
if(o&&1!==d({b:1},d(m({},"a",{enumerable:!0,get:function(){m(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;// should work with symbols and should have deterministic property order (V8 bug)
var t={},r={},n=Symbol(),a="abcdefghijklmnopqrst";return t[n]=7,a.split("").forEach(function(t){r[t]=t}),7!=d({},t)[n]||s(d({},r)).join("")!=a})?function(t,r){for(// eslint-disable-line no-unused-vars
var n=u(t),a=arguments.length,d=1,m=l.f,f=c.f;a>d;)for(var h,y=p(arguments[d++]),g=m?s(y).concat(m(y)):s(y),v=g.length,b=0;v>b;)h=g[b++],(!o||f.call(y,h))&&(n[h]=y[h]);return n}:d},{"../internals/descriptors":61,"../internals/fails":69,"../internals/indexed-object":84,"../internals/object-get-own-property-symbols":114,"../internals/object-keys":117,"../internals/object-property-is-enumerable":118,"../internals/to-object":155}],108:[function(t,r,n){var o,a=t("../internals/an-object"),s=t("../internals/object-define-properties"),l=t("../internals/enum-bug-keys"),c=t("../internals/hidden-keys"),u=t("../internals/html"),p=t("../internals/document-create-element"),d=t("../internals/shared-key"),m=">",f="<",h="prototype",y="script",g=d("IE_PROTO"),v=function(){/* empty */},b=function(t){return f+y+m+t+f+"/"+y+m},x=function(t){t.write(b("")),t.close();var r=t.parentWindow.Object;return t=null,r},j=function(){// Thrash, waste and sodomy: IE GC bug
var t,r=p("iframe"),n="java"+y+":";return r.style.display="none",u.appendChild(r),r.src=String(n),(t=r.contentWindow.document).open(),t.write(b("document.F=Object")),t.close(),t.F},w=function(){try{/* global ActiveXObject */o=document.domain&&new ActiveXObject("htmlfile")}catch(t){/* ignore */}w=o?x(o):j();for(var t=l.length;t--;)delete w[h][l[t]];return w()};c[g]=!0,// https://tc39.github.io/ecma262/#sec-object.create
r.exports=Object.create||function(t,r){var n;return null!==t?(v[h]=a(t),n=new v,v[h]=null,n[g]=t):n=w(),void 0===r?n:s(n,r)}},{"../internals/an-object":28,"../internals/document-create-element":62,"../internals/enum-bug-keys":67,"../internals/hidden-keys":79,"../internals/html":81,"../internals/object-define-properties":109,"../internals/shared-key":136}],109:[function(t,r,n){var o=t("../internals/descriptors"),a=t("../internals/object-define-property"),s=t("../internals/an-object"),l=t("../internals/object-keys");// https://tc39.github.io/ecma262/#sec-object.defineproperties
r.exports=o?Object.defineProperties:function(t,r){s(t);for(var n,o=l(r),c=o.length,u=0;c>u;)a.f(t,n=o[u++],r[n]);return t}},{"../internals/an-object":28,"../internals/descriptors":61,"../internals/object-define-property":110,"../internals/object-keys":117}],110:[function(t,r,n){var o=t("../internals/descriptors"),a=t("../internals/ie8-dom-define"),s=t("../internals/an-object"),l=t("../internals/to-primitive"),c=Object.defineProperty;// https://tc39.github.io/ecma262/#sec-object.defineproperty
n.f=o?c:function(t,r,n){if(s(t),r=l(r,!0),s(n),a)try{return c(t,r,n)}catch(t){/* empty */}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(t[r]=n.value),t}},{"../internals/an-object":28,"../internals/descriptors":61,"../internals/ie8-dom-define":82,"../internals/to-primitive":158}],111:[function(t,r,n){var o=t("../internals/descriptors"),a=t("../internals/object-property-is-enumerable"),s=t("../internals/create-property-descriptor"),l=t("../internals/to-indexed-object"),c=t("../internals/to-primitive"),u=t("../internals/has"),p=t("../internals/ie8-dom-define"),d=Object.getOwnPropertyDescriptor;// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
n.f=o?d:function(t,r){if(t=l(t),r=c(r,!0),p)try{return d(t,r)}catch(t){/* empty */}if(u(t,r))return s(!a.f.call(t,r),t[r])}},{"../internals/create-property-descriptor":57,"../internals/descriptors":61,"../internals/has":78,"../internals/ie8-dom-define":82,"../internals/object-property-is-enumerable":118,"../internals/to-indexed-object":152,"../internals/to-primitive":158}],112:[function(t,r,n){var o=t("../internals/to-indexed-object"),a=t("../internals/object-get-own-property-names").f,s={}.toString,l="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],c=function(t){try{return a(t)}catch(t){return l.slice()}};r.exports.f=function(t){return l&&"[object Window]"==s.call(t)?c(t):a(o(t))}},{"../internals/object-get-own-property-names":113,"../internals/to-indexed-object":152}],113:[function(t,r,n){var o=t("../internals/object-keys-internal"),a=t("../internals/enum-bug-keys").concat("length","prototype");// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
n.f=Object.getOwnPropertyNames||function(t){return o(t,a)}},{"../internals/enum-bug-keys":67,"../internals/object-keys-internal":116}],114:[function(t,r,n){n.f=Object.getOwnPropertySymbols},{}],115:[function(t,r,n){var o=t("../internals/has"),a=t("../internals/to-object"),s=t("../internals/shared-key"),l=t("../internals/correct-prototype-getter"),c=s("IE_PROTO"),u=Object.prototype;// https://tc39.github.io/ecma262/#sec-object.getprototypeof
r.exports=l?Object.getPrototypeOf:function(t){return o(t=a(t),c)?t[c]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?u:null}},{"../internals/correct-prototype-getter":53,"../internals/has":78,"../internals/shared-key":136,"../internals/to-object":155}],116:[function(t,r,n){var o=t("../internals/has"),a=t("../internals/to-indexed-object"),s=t("../internals/array-includes").indexOf,l=t("../internals/hidden-keys");r.exports=function(t,r){var n,c=a(t),u=0,p=[];for(n in c)!o(l,n)&&o(c,n)&&p.push(n);// Don't enum bug & hidden keys
for(;r.length>u;)o(c,n=r[u++])&&(~s(p,n)||p.push(n));return p}},{"../internals/array-includes":36,"../internals/has":78,"../internals/hidden-keys":79,"../internals/to-indexed-object":152}],117:[function(t,r,n){var o=t("../internals/object-keys-internal"),a=t("../internals/enum-bug-keys");// https://tc39.github.io/ecma262/#sec-object.keys
r.exports=Object.keys||function(t){return o(t,a)}},{"../internals/enum-bug-keys":67,"../internals/object-keys-internal":116}],118:[function(t,r,n){var o={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,s=a&&!o.call({1:2},1);// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
n.f=s?function(t){var r=a(this,t);return!!r&&r.enumerable}:o},{}],119:[function(t,r,n){var o=t("../internals/an-object"),a=t("../internals/a-possible-prototype");// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */r.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,r=!1,n={};try{(t=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),r=n instanceof Array}catch(t){/* empty */}return function(n,s){return o(n),a(s),r?t.call(n,s):n.__proto__=s,n}}():void 0)},{"../internals/a-possible-prototype":24,"../internals/an-object":28}],120:[function(t,r,n){var o=t("../internals/to-string-tag-support"),a=t("../internals/classof");// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
r.exports=o?({}).toString:function(){return"[object "+a(this)+"]"}},{"../internals/classof":47,"../internals/to-string-tag-support":159}],121:[function(t,r,n){var o=t("../internals/get-built-in"),a=t("../internals/object-get-own-property-names"),s=t("../internals/object-get-own-property-symbols"),l=t("../internals/an-object");r.exports=o("Reflect","ownKeys")||function(t){var r=a.f(l(t)),n=s.f;return n?r.concat(n(t)):r}},{"../internals/an-object":28,"../internals/get-built-in":74,"../internals/object-get-own-property-names":113,"../internals/object-get-own-property-symbols":114}],122:[function(t,r,n){var o=t("../internals/global");r.exports=o},{"../internals/global":77}],123:[function(t,r,n){r.exports=function(t){try{return{error:!1,value:t()}}catch(t){return{error:!0,value:t}}}},{}],124:[function(t,r,n){var o=t("../internals/an-object"),a=t("../internals/is-object"),s=t("../internals/new-promise-capability");r.exports=function(t,r){if(o(t),a(r)&&r.constructor===t)return r;var n=s.f(t);return(0,n.resolve)(r),n.promise}},{"../internals/an-object":28,"../internals/is-object":92,"../internals/new-promise-capability":104}],125:[function(t,r,n){var o=t("../internals/redefine");r.exports=function(t,r,n){for(var a in r)o(t,a,r[a],n);return t}},{"../internals/redefine":126}],126:[function(t,r,n){var o=t("../internals/global"),a=t("../internals/create-non-enumerable-property"),s=t("../internals/has"),l=t("../internals/set-global"),c=t("../internals/inspect-source"),u=t("../internals/internal-state"),p=u.get,d=u.enforce,m=String(String).split("String");(r.exports=function(t,r,n,c){var u=!!c&&!!c.unsafe,p=!!c&&!!c.enumerable,f=!!c&&!!c.noTargetGet;if("function"==typeof n&&("string"!=typeof r||s(n,"name")||a(n,"name",r),d(n).source=m.join("string"==typeof r?r:"")),t===o){p?t[r]=n:l(r,n);return}u?!f&&t[r]&&(p=!0):delete t[r],p?t[r]=n:a(t,r,n)})(Function.prototype,"toString",function(){return"function"==typeof this&&p(this).source||c(this)})},{"../internals/create-non-enumerable-property":56,"../internals/global":77,"../internals/has":78,"../internals/inspect-source":86,"../internals/internal-state":88,"../internals/set-global":133}],127:[function(t,r,n){var o=t("./classof-raw"),a=t("./regexp-exec");// https://tc39.github.io/ecma262/#sec-regexpexec
r.exports=function(t,r){var n=t.exec;if("function"==typeof n){var s=n.call(t,r);if("object"!=typeof s)throw TypeError("RegExp exec method returned something other than an Object or null");return s}if("RegExp"!==o(t))throw TypeError("RegExp#exec called on incompatible receiver");return a.call(t,r)}},{"./classof-raw":46,"./regexp-exec":128}],128:[function(t,r,n){var o=t("./regexp-flags"),a=t("./regexp-sticky-helpers"),s=RegExp.prototype.exec,l=String.prototype.replace,c=s,u=function(){var t=/a/,r=/b*/g;return s.call(t,"a"),s.call(r,"a"),0!==t.lastIndex||0!==r.lastIndex}(),p=a.UNSUPPORTED_Y||a.BROKEN_CARET,d=void 0!==/()??/.exec("")[1];(u||d||p)&&(c=function(t){var r,n,a,c,m=this,f=p&&m.sticky,h=o.call(m),y=m.source,g=0,v=t;return f&&(-1===(h=h.replace("y","")).indexOf("g")&&(h+="g"),v=String(t).slice(m.lastIndex),m.lastIndex>0&&(!m.multiline||m.multiline&&"\n"!==t[m.lastIndex-1])&&(y="(?: "+y+")",v=" "+v,g++),// simulate the 'y' flag.
n=RegExp("^(?:"+y+")",h)),d&&(n=RegExp("^"+y+"$(?!\\s)",h)),u&&(r=m.lastIndex),a=s.call(f?n:m,v),f?a?(a.input=a.input.slice(g),a[0]=a[0].slice(g),a.index=m.lastIndex,m.lastIndex+=a[0].length):m.lastIndex=0:u&&a&&(m.lastIndex=m.global?a.index+a[0].length:r),d&&a&&a.length>1&&// for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
l.call(a[0],n,function(){for(c=1;c<arguments.length-2;c++)void 0===arguments[c]&&(a[c]=void 0)}),a}),r.exports=c},{"./regexp-flags":129,"./regexp-sticky-helpers":130}],129:[function(t,r,n){var o=t("../internals/an-object");// `RegExp.prototype.flags` getter implementation
// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
r.exports=function(){var t=o(this),r="";return t.global&&(r+="g"),t.ignoreCase&&(r+="i"),t.multiline&&(r+="m"),t.dotAll&&(r+="s"),t.unicode&&(r+="u"),t.sticky&&(r+="y"),r}},{"../internals/an-object":28}],130:[function(t,r,n){var o=t("./fails");// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,
// so we use an intermediate function.
function a(t,r){return RegExp(t,r)}n.UNSUPPORTED_Y=o(function(){// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var t=a("a","y");return t.lastIndex=2,null!=t.exec("abcd")}),n.BROKEN_CARET=o(function(){// https://bugzilla.mozilla.org/show_bug.cgi?id=773687
var t=a("^r","gy");return t.lastIndex=2,null!=t.exec("str")})},{"./fails":69}],131:[function(t,r,n){// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
r.exports=function(t){if(void 0==t)throw TypeError("Can't call method on "+t);return t}},{}],132:[function(t,r,n){// `SameValue` abstract operation
// https://tc39.github.io/ecma262/#sec-samevalue
r.exports=Object.is||function(t,r){// eslint-disable-next-line no-self-compare
return t===r?0!==t||1/t==1/r:t!=t&&r!=r}},{}],133:[function(t,r,n){var o=t("../internals/global"),a=t("../internals/create-non-enumerable-property");r.exports=function(t,r){try{a(o,t,r)}catch(n){o[t]=r}return r}},{"../internals/create-non-enumerable-property":56,"../internals/global":77}],134:[function(t,r,n){var o=t("../internals/get-built-in"),a=t("../internals/object-define-property"),s=t("../internals/well-known-symbol"),l=t("../internals/descriptors"),c=s("species");r.exports=function(t){var r=o(t),n=a.f;l&&r&&!r[c]&&n(r,c,{configurable:!0,get:function(){return this}})}},{"../internals/descriptors":61,"../internals/get-built-in":74,"../internals/object-define-property":110,"../internals/well-known-symbol":166}],135:[function(t,r,n){var o=t("../internals/object-define-property").f,a=t("../internals/has"),s=t("../internals/well-known-symbol")("toStringTag");r.exports=function(t,r,n){t&&!a(t=n?t:t.prototype,s)&&o(t,s,{configurable:!0,value:r})}},{"../internals/has":78,"../internals/object-define-property":110,"../internals/well-known-symbol":166}],136:[function(t,r,n){var o=t("../internals/shared"),a=t("../internals/uid"),s=o("keys");r.exports=function(t){return s[t]||(s[t]=a(t))}},{"../internals/shared":138,"../internals/uid":163}],137:[function(t,r,n){var o=t("../internals/global"),a=t("../internals/set-global"),s="__core-js_shared__",l=o[s]||a(s,{});r.exports=l},{"../internals/global":77,"../internals/set-global":133}],138:[function(t,r,n){var o=t("../internals/is-pure"),a=t("../internals/shared-store");(r.exports=function(t,r){return a[t]||(a[t]=void 0!==r?r:{})})("versions",[]).push({version:"3.6.5",mode:o?"pure":"global",copyright:"\xa9 2020 Denis Pushkarev (zloirock.ru)"})},{"../internals/is-pure":93,"../internals/shared-store":137}],139:[function(t,r,n){var o=t("../internals/an-object"),a=t("../internals/a-function"),s=t("../internals/well-known-symbol")("species");// https://tc39.github.io/ecma262/#sec-speciesconstructor
r.exports=function(t,r){var n,l=o(t).constructor;return void 0===l||void 0==(n=o(l)[s])?r:a(n)}},{"../internals/a-function":23,"../internals/an-object":28,"../internals/well-known-symbol":166}],140:[function(t,r,n){var o=t("../internals/fails");// check the existence of a method, lowercase
// of a tag and escaping quotes in arguments
r.exports=function(t){return o(function(){var r=""[t]('"');return r!==r.toLowerCase()||r.split('"').length>3})}},{"../internals/fails":69}],141:[function(t,r,n){var o=t("../internals/to-integer"),a=t("../internals/require-object-coercible"),s=function(t){return function(r,n){var s,l,c=String(a(r)),u=o(n),p=c.length;return u<0||u>=p?t?"":void 0:(s=c.charCodeAt(u))<55296||s>56319||u+1===p||(l=c.charCodeAt(u+1))<56320||l>57343?t?c.charAt(u):s:t?c.slice(u,u+2):(s-55296<<10)+(l-56320)+65536}};r.exports={// `String.prototype.codePointAt` method
// https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
codeAt:s(!1),// `String.prototype.at` method
// https://github.com/mathiasbynens/String.prototype.at
charAt:s(!0)}},{"../internals/require-object-coercible":131,"../internals/to-integer":153}],142:[function(t,r,n){// https://github.com/zloirock/core-js/issues/280
var o=t("../internals/engine-user-agent");// eslint-disable-next-line unicorn/no-unsafe-regex
r.exports=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o)},{"../internals/engine-user-agent":65}],143:[function(t,r,n){// https://github.com/tc39/proposal-string-pad-start-end
var o=t("../internals/to-length"),a=t("../internals/string-repeat"),s=t("../internals/require-object-coercible"),l=Math.ceil,c=function(t){return function(r,n,c){var u,p,d=String(s(r)),m=d.length,f=void 0===c?" ":String(c),h=o(n);return h<=m||""==f?d:(u=h-m,(p=a.call(f,l(u/f.length))).length>u&&(p=p.slice(0,u)),t?d+p:p+d)}};r.exports={// `String.prototype.padStart` method
// https://tc39.github.io/ecma262/#sec-string.prototype.padstart
start:c(!1),// `String.prototype.padEnd` method
// https://tc39.github.io/ecma262/#sec-string.prototype.padend
end:c(!0)}},{"../internals/require-object-coercible":131,"../internals/string-repeat":145,"../internals/to-length":154}],144:[function(t,r,n){var o=2147483647,a=36,s=1,l=26,c=38,u=700,p=72,d=128,m="-",f=/[^\0-\u007E]/,h=/[.\u3002\uFF0E\uFF61]/g,y="Overflow: input needs wider integers to process",g=35,v=Math.floor,b=String.fromCharCode,x=function(t){for(var r=[],n=0,o=t.length;n<o;){var a=t.charCodeAt(n++);if(a>=55296&&a<=56319&&n<o){// It's a high surrogate, and there is a next character.
var s=t.charCodeAt(n++);(64512&s)==56320?r.push(((1023&a)<<10)+(1023&s)+65536):(// It's an unmatched surrogate; only append this code unit, in case the
// next code unit is the high surrogate of a surrogate pair.
r.push(a),n--)}else r.push(a)}return r},j=function(t){//  0..25 map to ASCII a..z or A..Z
// 26..35 map to ASCII 0..9
return t+22+75*(t<26)},w=function(t,r,n){var o=0;for(t=n?v(t/u):t>>1,t+=v(t/r);t>g*l>>1;o+=a)t=v(t/g);return v(o+(g+1)*t/(t+c))},_=function(t){var r,n,c=[],u=(t=x(t)).length,f=d,h=0,g=p;// Convert the input in UCS-2 to an array of Unicode code points.
for(r=0;r<t.length;r++)(n=t[r])<128&&c.push(b(n));var _=c.length,S=_;// number of basic code points.
// Main encoding loop:
for(_&&c.push(m);S<u;){// All non-basic code points < n have been handled already. Find the next larger one:
var E=o;for(r=0;r<t.length;r++)(n=t[r])>=f&&n<E&&(E=n);// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.
var T=S+1;if(E-f>v((o-h)/T))throw RangeError(y);for(h+=(E-f)*T,f=E,r=0;r<t.length;r++){if((n=t[r])<f&&++h>o)throw RangeError(y);if(n==f){for(var M=h,C=a;;C+=a){var O=C<=g?s:C>=g+l?l:C-g;if(M<O)break;var N=M-O,A=a-O;c.push(b(j(O+N%A))),M=v(N/A)}c.push(b(j(M))),g=w(h,T,S==_),h=0,++S}}++h,++f}return c.join("")};// aka. 0x7FFFFFFF or 2^31-1
r.exports=function(t){var r,n,o=[],a=t.toLowerCase().replace(h,".").split(".");for(r=0;r<a.length;r++)n=a[r],o.push(f.test(n)?"xn--"+_(n):n);return o.join(".")}},{}],145:[function(t,r,n){var o=t("../internals/to-integer"),a=t("../internals/require-object-coercible");// https://tc39.github.io/ecma262/#sec-string.prototype.repeat
r.exports="".repeat||function(t){var r=String(a(this)),n="",s=o(t);if(s<0||s==1/0)throw RangeError("Wrong number of repetitions");for(;s>0;(s>>>=1)&&(r+=r))1&s&&(n+=r);return n}},{"../internals/require-object-coercible":131,"../internals/to-integer":153}],146:[function(t,r,n){var o=t("../internals/fails"),a=t("../internals/whitespaces"),s="​\x85᠎";// of whitespaces and has a correct name
r.exports=function(t){return o(function(){return!!a[t]()||s[t]()!=s||a[t].name!==t})}},{"../internals/fails":69,"../internals/whitespaces":167}],147:[function(t,r,n){var o=t("../internals/require-object-coercible"),a="["+t("../internals/whitespaces")+"]",s=RegExp("^"+a+a+"*"),l=RegExp(a+a+"*$"),c=function(t){return function(r){var n=String(o(r));return 1&t&&(n=n.replace(s,"")),2&t&&(n=n.replace(l,"")),n}};r.exports={// `String.prototype.{ trimLeft, trimStart }` methods
// https://tc39.github.io/ecma262/#sec-string.prototype.trimstart
start:c(1),// `String.prototype.{ trimRight, trimEnd }` methods
// https://tc39.github.io/ecma262/#sec-string.prototype.trimend
end:c(2),// `String.prototype.trim` method
// https://tc39.github.io/ecma262/#sec-string.prototype.trim
trim:c(3)}},{"../internals/require-object-coercible":131,"../internals/whitespaces":167}],148:[function(t,r,n){var o,a,s,l=t("../internals/global"),c=t("../internals/fails"),u=t("../internals/classof-raw"),p=t("../internals/function-bind-context"),d=t("../internals/html"),m=t("../internals/document-create-element"),f=t("../internals/engine-is-ios"),h=l.location,y=l.setImmediate,g=l.clearImmediate,v=l.process,b=l.MessageChannel,x=l.Dispatch,j=0,w={},_="onreadystatechange",S=function(t){// eslint-disable-next-line no-prototype-builtins
if(w.hasOwnProperty(t)){var r=w[t];delete w[t],r()}},E=function(t){return function(){S(t)}},T=function(t){S(t.data)},M=function(t){// old engines have not location.origin
l.postMessage(t+"",h.protocol+"//"+h.host)};y&&g||(y=function(t){for(var r=[],n=1;arguments.length>n;)r.push(arguments[n++]);return w[++j]=function(){// eslint-disable-next-line no-new-func
("function"==typeof t?t:Function(t)).apply(void 0,r)},o(j),j},g=function(t){delete w[t]},"process"==u(v)?o=function(t){v.nextTick(E(t))}:x&&x.now?o=function(t){x.now(E(t))}:b&&!f?(s=(a=new b).port2,a.port1.onmessage=T,o=p(s.postMessage,s,1)):!l.addEventListener||"function"!=typeof postMessage||l.importScripts||c(M)||"file:"===h.protocol?o=_ in m("script")?function(t){d.appendChild(m("script"))[_]=function(){d.removeChild(this),S(t)}}:function(t){setTimeout(E(t),0)}:(o=M,l.addEventListener("message",T,!1))),r.exports={set:y,clear:g}},{"../internals/classof-raw":46,"../internals/document-create-element":62,"../internals/engine-is-ios":64,"../internals/fails":69,"../internals/function-bind-context":72,"../internals/global":77,"../internals/html":81}],149:[function(t,r,n){var o=t("../internals/classof-raw");// `thisNumberValue` abstract operation
// https://tc39.github.io/ecma262/#sec-thisnumbervalue
r.exports=function(t){if("number"!=typeof t&&"Number"!=o(t))throw TypeError("Incorrect invocation");return+t}},{"../internals/classof-raw":46}],150:[function(t,r,n){var o=t("../internals/to-integer"),a=Math.max,s=Math.min;// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
r.exports=function(t,r){var n=o(t);return n<0?a(n+r,0):s(n,r)}},{"../internals/to-integer":153}],151:[function(t,r,n){var o=t("../internals/to-integer"),a=t("../internals/to-length");// https://tc39.github.io/ecma262/#sec-toindex
r.exports=function(t){if(void 0===t)return 0;var r=o(t),n=a(r);if(r!==n)throw RangeError("Wrong length or index");return n}},{"../internals/to-integer":153,"../internals/to-length":154}],152:[function(t,r,n){// toObject with fallback for non-array-like ES3 strings
var o=t("../internals/indexed-object"),a=t("../internals/require-object-coercible");r.exports=function(t){return o(a(t))}},{"../internals/indexed-object":84,"../internals/require-object-coercible":131}],153:[function(t,r,n){var o=Math.ceil,a=Math.floor;// https://tc39.github.io/ecma262/#sec-tointeger
r.exports=function(t){return isNaN(t=+t)?0:(t>0?a:o)(t)}},{}],154:[function(t,r,n){var o=t("../internals/to-integer"),a=Math.min;// https://tc39.github.io/ecma262/#sec-tolength
r.exports=function(t){return t>0?a(o(t),9007199254740991):0;// 2 ** 53 - 1 == 9007199254740991
}},{"../internals/to-integer":153}],155:[function(t,r,n){var o=t("../internals/require-object-coercible");// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
r.exports=function(t){return Object(o(t))}},{"../internals/require-object-coercible":131}],156:[function(t,r,n){var o=t("../internals/to-positive-integer");r.exports=function(t,r){var n=o(t);if(n%r)throw RangeError("Wrong offset");return n}},{"../internals/to-positive-integer":157}],157:[function(t,r,n){var o=t("../internals/to-integer");r.exports=function(t){var r=o(t);if(r<0)throw RangeError("The argument can't be less than 0");return r}},{"../internals/to-integer":153}],158:[function(t,r,n){var o=t("../internals/is-object");// `ToPrimitive` abstract operation
// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
r.exports=function(t,r){var n,a;if(!o(t))return t;if(r&&"function"==typeof(n=t.toString)&&!o(a=n.call(t))||"function"==typeof(n=t.valueOf)&&!o(a=n.call(t))||!r&&"function"==typeof(n=t.toString)&&!o(a=n.call(t)))return a;throw TypeError("Can't convert object to primitive value")}},{"../internals/is-object":92}],159:[function(t,r,n){var o=t("../internals/well-known-symbol")("toStringTag"),a={};a[o]="z",r.exports="[object z]"===String(a)},{"../internals/well-known-symbol":166}],160:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/global"),s=t("../internals/descriptors"),l=t("../internals/typed-array-constructors-require-wrappers"),c=t("../internals/array-buffer-view-core"),u=t("../internals/array-buffer"),p=t("../internals/an-instance"),d=t("../internals/create-property-descriptor"),m=t("../internals/create-non-enumerable-property"),f=t("../internals/to-length"),h=t("../internals/to-index"),y=t("../internals/to-offset"),g=t("../internals/to-primitive"),v=t("../internals/has"),b=t("../internals/classof"),x=t("../internals/is-object"),j=t("../internals/object-create"),w=t("../internals/object-set-prototype-of"),_=t("../internals/object-get-own-property-names").f,S=t("../internals/typed-array-from"),E=t("../internals/array-iteration").forEach,T=t("../internals/set-species"),M=t("../internals/object-define-property"),C=t("../internals/object-get-own-property-descriptor"),O=t("../internals/internal-state"),N=t("../internals/inherit-if-required"),A=O.get,R=O.set,L=M.f,I=C.f,P=Math.round,D=a.RangeError,F=u.ArrayBuffer,U=u.DataView,B=c.NATIVE_ARRAY_BUFFER_VIEWS,G=c.TYPED_ARRAY_TAG,V=c.TypedArray,z=c.TypedArrayPrototype,H=c.aTypedArrayConstructor,W=c.isTypedArray,q="BYTES_PER_ELEMENT",X="Wrong length",Y=function(t,r){for(var n=0,o=r.length,a=new(H(t))(o);o>n;)a[n]=r[n++];return a},Z=function(t,r){L(t,r,{get:function(){return A(this)[r]}})},K=function(t){var r;return t instanceof F||"ArrayBuffer"==(r=b(t))||"SharedArrayBuffer"==r},J=function(t,r){return W(t)&&"symbol"!=typeof r&&r in t&&String(+r)==String(r)},Q=function(t,r){return J(t,r=g(r,!0))?d(2,t[r]):I(t,r)},$=function(t,r,n){return J(t,r=g(r,!0))&&x(n)&&v(n,"value")&&!v(n,"get")&&!v(n,"set")// TODO: add validation descriptor w/o calling accessors
&&!n.configurable&&(!v(n,"writable")||n.writable)&&(!v(n,"enumerable")||n.enumerable)?(t[r]=n.value,t):L(t,r,n)};s?(B||(C.f=Q,M.f=$,Z(z,"buffer"),Z(z,"byteOffset"),Z(z,"byteLength"),Z(z,"length")),o({target:"Object",stat:!0,forced:!B},{getOwnPropertyDescriptor:Q,defineProperty:$}),r.exports=function(t,r,n){var s=t.match(/\d+$/)[0]/8,c=t+(n?"Clamped":"")+"Array",u="get"+t,d="set"+t,g=a[c],v=g,b=v&&v.prototype,M={},C=function(t,r){var n=A(t);return n.view[u](r*s+n.byteOffset,!0)},O=function(t,r,o){var a=A(t);n&&(o=(o=P(o))<0?0:o>255?255:255&o),a.view[d](r*s+a.byteOffset,o,!0)},I=function(t,r){L(t,r,{get:function(){return C(this,r)},set:function(t){return O(this,r,t)},enumerable:!0})};B?l&&(v=r(function(t,r,n,o){return p(t,v,c),N(function(){return x(r)?K(r)?void 0!==o?new g(r,y(n,s),o):void 0!==n?new g(r,y(n,s)):new g(r):W(r)?Y(v,r):S.call(v,r):new g(h(r))}(),t,v)}),w&&w(v,V),E(_(g),function(t){t in v||m(v,t,g[t])}),v.prototype=b):(v=r(function(t,r,n,o){p(t,v,c);var a,l,u,d=0,m=0;if(x(r)){if(K(r)){a=r,m=y(n,s);var g=r.byteLength;if(void 0===o){if(g%s||(l=g-m)<0)throw D(X)}else if((l=f(o)*s)+m>g)throw D(X);u=l/s}else if(W(r))return Y(v,r);else return S.call(v,r)}else a=new F(l=(u=h(r))*s);for(R(t,{buffer:a,byteOffset:m,byteLength:l,length:u,view:new U(a)});d<u;)I(t,d++)}),w&&w(v,V),b=v.prototype=j(z)),b.constructor!==v&&m(b,"constructor",v),G&&m(b,G,c),M[c]=v,o({global:!0,forced:v!=g,sham:!B},M),q in v||m(v,q,s),q in b||m(b,q,s),T(c)}):r.exports=function(){/* empty */}},{"../internals/an-instance":27,"../internals/array-buffer":31,"../internals/array-buffer-view-core":30,"../internals/array-iteration":37,"../internals/classof":47,"../internals/create-non-enumerable-property":56,"../internals/create-property-descriptor":57,"../internals/descriptors":61,"../internals/export":68,"../internals/global":77,"../internals/has":78,"../internals/inherit-if-required":85,"../internals/internal-state":88,"../internals/is-object":92,"../internals/object-create":108,"../internals/object-define-property":110,"../internals/object-get-own-property-descriptor":111,"../internals/object-get-own-property-names":113,"../internals/object-set-prototype-of":119,"../internals/set-species":134,"../internals/to-index":151,"../internals/to-length":154,"../internals/to-offset":156,"../internals/to-primitive":158,"../internals/typed-array-constructors-require-wrappers":161,"../internals/typed-array-from":162}],161:[function(t,r,n){/* eslint-disable no-new */var o=t("../internals/global"),a=t("../internals/fails"),s=t("../internals/check-correctness-of-iteration"),l=t("../internals/array-buffer-view-core").NATIVE_ARRAY_BUFFER_VIEWS,c=o.ArrayBuffer,u=o.Int8Array;r.exports=!l||!a(function(){u(1)})||!a(function(){new u(-1)})||!s(function(t){new u,new u(null),new u(1.5),new u(t)},!0)||a(function(){// Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill
return 1!==new u(new c(2),1,void 0).length})},{"../internals/array-buffer-view-core":30,"../internals/check-correctness-of-iteration":45,"../internals/fails":69,"../internals/global":77}],162:[function(t,r,n){var o=t("../internals/to-object"),a=t("../internals/to-length"),s=t("../internals/get-iterator-method"),l=t("../internals/is-array-iterator-method"),c=t("../internals/function-bind-context"),u=t("../internals/array-buffer-view-core").aTypedArrayConstructor;r.exports=function(t/* , mapfn, thisArg */){var r,n,p,d,m,f,h=o(t),y=arguments.length,g=y>1?arguments[1]:void 0,v=void 0!==g,b=s(h);if(void 0!=b&&!l(b))for(f=(m=b.call(h)).next,h=[];!(d=f.call(m)).done;)h.push(d.value);for(v&&y>2&&(g=c(g,arguments[2],2)),n=a(h.length),p=new(u(this))(n),r=0;n>r;r++)p[r]=v?g(h[r],r):h[r];return p}},{"../internals/array-buffer-view-core":30,"../internals/function-bind-context":72,"../internals/get-iterator-method":75,"../internals/is-array-iterator-method":89,"../internals/to-length":154,"../internals/to-object":155}],163:[function(t,r,n){var o=0,a=Math.random();r.exports=function(t){return"Symbol("+String(void 0===t?"":t)+")_"+(++o+a).toString(36)}},{}],164:[function(t,r,n){var o=t("../internals/native-symbol");r.exports=o// eslint-disable-next-line no-undef
&&!Symbol.sham// eslint-disable-next-line no-undef
&&"symbol"==typeof Symbol.iterator},{"../internals/native-symbol":101}],165:[function(t,r,n){var o=t("../internals/well-known-symbol");n.f=o},{"../internals/well-known-symbol":166}],166:[function(t,r,n){var o=t("../internals/global"),a=t("../internals/shared"),s=t("../internals/has"),l=t("../internals/uid"),c=t("../internals/native-symbol"),u=t("../internals/use-symbol-as-uid"),p=a("wks"),d=o.Symbol,m=u?d:d&&d.withoutSetter||l;r.exports=function(t){return s(p,t)||(c&&s(d,t)?p[t]=d[t]:p[t]=m("Symbol."+t)),p[t]}},{"../internals/global":77,"../internals/has":78,"../internals/native-symbol":101,"../internals/shared":138,"../internals/uid":163,"../internals/use-symbol-as-uid":164}],167:[function(t,r,n){// a string of all valid unicode whitespaces
// eslint-disable-next-line max-len
r.exports="	\n\v\f\r \xa0              　\u2028\u2029\uFEFF"},{}],168:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/global"),s=t("../internals/array-buffer"),l=t("../internals/set-species"),c="ArrayBuffer",u=s[c];// https://tc39.github.io/ecma262/#sec-arraybuffer-constructor
o({global:!0,forced:a[c]!==u},{ArrayBuffer:u}),l(c)},{"../internals/array-buffer":31,"../internals/export":68,"../internals/global":77,"../internals/set-species":134}],169:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/fails"),s=t("../internals/is-array"),l=t("../internals/is-object"),c=t("../internals/to-object"),u=t("../internals/to-length"),p=t("../internals/create-property"),d=t("../internals/array-species-create"),m=t("../internals/array-method-has-species-support"),f=t("../internals/well-known-symbol"),h=t("../internals/engine-v8-version"),y=f("isConcatSpreadable"),g=9007199254740991,v="Maximum allowed index exceeded",b=h>=51||!a(function(){var t=[];return t[y]=!1,t.concat()[0]!==t}),x=m("concat"),j=function(t){if(!l(t))return!1;var r=t[y];return void 0!==r?!!r:s(t)};// https://tc39.github.io/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
o({target:"Array",proto:!0,forced:!b||!x},{concat:function(t){// eslint-disable-line no-unused-vars
var r,n,o,a,s,l=c(this),m=d(l,0),f=0;for(r=-1,o=arguments.length;r<o;r++)if(s=-1===r?l:arguments[r],j(s)){if(f+(a=u(s.length))>g)throw TypeError(v);for(n=0;n<a;n++,f++)n in s&&p(m,f,s[n])}else{if(f>=g)throw TypeError(v);p(m,f++,s)}return m.length=f,m}})},{"../internals/array-method-has-species-support":39,"../internals/array-species-create":43,"../internals/create-property":58,"../internals/engine-v8-version":66,"../internals/export":68,"../internals/fails":69,"../internals/is-array":90,"../internals/is-object":92,"../internals/to-length":154,"../internals/to-object":155,"../internals/well-known-symbol":166}],170:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/array-copy-within"),s=t("../internals/add-to-unscopables");// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin
o({target:"Array",proto:!0},{copyWithin:a}),s("copyWithin")},{"../internals/add-to-unscopables":25,"../internals/array-copy-within":32,"../internals/export":68}],171:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/array-iteration").every,s=t("../internals/array-method-is-strict"),l=t("../internals/array-method-uses-to-length"),c=s("every"),u=l("every");// https://tc39.github.io/ecma262/#sec-array.prototype.every
o({target:"Array",proto:!0,forced:!c||!u},{every:function(t/* , thisArg */){return a(this,t,arguments.length>1?arguments[1]:void 0)}})},{"../internals/array-iteration":37,"../internals/array-method-is-strict":40,"../internals/array-method-uses-to-length":41,"../internals/export":68}],172:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/array-fill"),s=t("../internals/add-to-unscopables");// https://tc39.github.io/ecma262/#sec-array.prototype.fill
o({target:"Array",proto:!0},{fill:a}),s("fill")},{"../internals/add-to-unscopables":25,"../internals/array-fill":33,"../internals/export":68}],173:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/array-iteration").filter,s=t("../internals/array-method-has-species-support"),l=t("../internals/array-method-uses-to-length"),c=s("filter"),u=l("filter");// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// with adding support of @@species
o({target:"Array",proto:!0,forced:!c||!u},{filter:function(t/* , thisArg */){return a(this,t,arguments.length>1?arguments[1]:void 0)}})},{"../internals/array-iteration":37,"../internals/array-method-has-species-support":39,"../internals/array-method-uses-to-length":41,"../internals/export":68}],174:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/array-for-each");// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
o({target:"Array",proto:!0,forced:[].forEach!=a},{forEach:a})},{"../internals/array-for-each":34,"../internals/export":68}],175:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/array-from");// https://tc39.github.io/ecma262/#sec-array.from
o({target:"Array",stat:!0,forced:!t("../internals/check-correctness-of-iteration")(function(t){Array.from(t)})},{from:a})},{"../internals/array-from":35,"../internals/check-correctness-of-iteration":45,"../internals/export":68}],176:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/array-includes").includes,s=t("../internals/add-to-unscopables");// https://tc39.github.io/ecma262/#sec-array.prototype.includes
o({target:"Array",proto:!0,forced:!t("../internals/array-method-uses-to-length")("indexOf",{ACCESSORS:!0,1:0})},{includes:function(t/* , fromIndex = 0 */){return a(this,t,arguments.length>1?arguments[1]:void 0)}}),s("includes")},{"../internals/add-to-unscopables":25,"../internals/array-includes":36,"../internals/array-method-uses-to-length":41,"../internals/export":68}],177:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/array-includes").indexOf,s=t("../internals/array-method-is-strict"),l=t("../internals/array-method-uses-to-length"),c=[].indexOf,u=!!c&&1/[1].indexOf(1,-0)<0,p=s("indexOf"),d=l("indexOf",{ACCESSORS:!0,1:0});// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
o({target:"Array",proto:!0,forced:u||!p||!d},{indexOf:function(t/* , fromIndex = 0 */){return u// convert -0 to +0
?c.apply(this,arguments)||0:a(this,t,arguments.length>1?arguments[1]:void 0)}})},{"../internals/array-includes":36,"../internals/array-method-is-strict":40,"../internals/array-method-uses-to-length":41,"../internals/export":68}],178:[function(t,r,n){var o=t("../internals/to-indexed-object"),a=t("../internals/add-to-unscopables"),s=t("../internals/iterators"),l=t("../internals/internal-state"),c=t("../internals/define-iterator"),u="Array Iterator",p=l.set,d=l.getterFor(u);// https://tc39.github.io/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.github.io/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.github.io/ecma262/#sec-createarrayiterator
r.exports=c(Array,"Array",function(t,r){p(this,{type:u,target:o(t),// target
index:0,// next index
kind:r// kind
});// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
},function(){var t=d(this),r=t.target,n=t.kind,o=t.index++;return!r||o>=r.length?(t.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:o,done:!1}:"values"==n?{value:r[o],done:!1}:{value:[o,r[o]],done:!1}},"values"),// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
s.Arguments=s.Array,a("keys"),a("values"),a("entries")},{"../internals/add-to-unscopables":25,"../internals/define-iterator":59,"../internals/internal-state":88,"../internals/iterators":97,"../internals/to-indexed-object":152}],179:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/indexed-object"),s=t("../internals/to-indexed-object"),l=t("../internals/array-method-is-strict"),c=[].join,u=a!=Object,p=l("join",",");// https://tc39.github.io/ecma262/#sec-array.prototype.join
o({target:"Array",proto:!0,forced:u||!p},{join:function(t){return c.call(s(this),void 0===t?",":t)}})},{"../internals/array-method-is-strict":40,"../internals/export":68,"../internals/indexed-object":84,"../internals/to-indexed-object":152}],180:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/array-last-index-of");// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof
o({target:"Array",proto:!0,forced:a!==[].lastIndexOf},{lastIndexOf:a})},{"../internals/array-last-index-of":38,"../internals/export":68}],181:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/array-iteration").map,s=t("../internals/array-method-has-species-support"),l=t("../internals/array-method-uses-to-length"),c=s("map"),u=l("map");// https://tc39.github.io/ecma262/#sec-array.prototype.map
// with adding support of @@species
o({target:"Array",proto:!0,forced:!c||!u},{map:function(t/* , thisArg */){return a(this,t,arguments.length>1?arguments[1]:void 0)}})},{"../internals/array-iteration":37,"../internals/array-method-has-species-support":39,"../internals/array-method-uses-to-length":41,"../internals/export":68}],182:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/is-object"),s=t("../internals/is-array"),l=t("../internals/to-absolute-index"),c=t("../internals/to-length"),u=t("../internals/to-indexed-object"),p=t("../internals/create-property"),d=t("../internals/well-known-symbol"),m=t("../internals/array-method-has-species-support"),f=t("../internals/array-method-uses-to-length"),h=m("slice"),y=f("slice",{ACCESSORS:!0,0:0,1:2}),g=d("species"),v=[].slice,b=Math.max;// https://tc39.github.io/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
o({target:"Array",proto:!0,forced:!h||!y},{slice:function(t,r){var n,o,d,m=u(this),f=c(m.length),h=l(t,f),y=l(void 0===r?f:r,f);if(s(m)&&("function"==typeof(n=m.constructor)&&(n===Array||s(n.prototype))?n=void 0:a(n)&&null===(n=n[g])&&(n=void 0),n===Array||void 0===n))return v.call(m,h,y);for(d=0,o=new(void 0===n?Array:n)(b(y-h,0));h<y;h++,d++)h in m&&p(o,d,m[h]);return o.length=d,o}})},{"../internals/array-method-has-species-support":39,"../internals/array-method-uses-to-length":41,"../internals/create-property":58,"../internals/export":68,"../internals/is-array":90,"../internals/is-object":92,"../internals/to-absolute-index":150,"../internals/to-indexed-object":152,"../internals/to-length":154,"../internals/well-known-symbol":166}],183:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/array-iteration").some,s=t("../internals/array-method-is-strict"),l=t("../internals/array-method-uses-to-length"),c=s("some"),u=l("some");// https://tc39.github.io/ecma262/#sec-array.prototype.some
o({target:"Array",proto:!0,forced:!c||!u},{some:function(t/* , thisArg */){return a(this,t,arguments.length>1?arguments[1]:void 0)}})},{"../internals/array-iteration":37,"../internals/array-method-is-strict":40,"../internals/array-method-uses-to-length":41,"../internals/export":68}],184:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/to-absolute-index"),s=t("../internals/to-integer"),l=t("../internals/to-length"),c=t("../internals/to-object"),u=t("../internals/array-species-create"),p=t("../internals/create-property"),d=t("../internals/array-method-has-species-support"),m=t("../internals/array-method-uses-to-length"),f=d("splice"),h=m("splice",{ACCESSORS:!0,0:0,1:2}),y=Math.max,g=Math.min,v=9007199254740991,b="Maximum allowed length exceeded";// https://tc39.github.io/ecma262/#sec-array.prototype.splice
// with adding support of @@species
o({target:"Array",proto:!0,forced:!f||!h},{splice:function(t,r/* , ...items */){var n,o,d,m,f,h,x=c(this),j=l(x.length),w=a(t,j),_=arguments.length;if(0===_?n=o=0:1===_?(n=0,o=j-w):(n=_-2,o=g(y(s(r),0),j-w)),j+n-o>v)throw TypeError(b);for(m=0,d=u(x,o);m<o;m++)(f=w+m)in x&&p(d,m,x[f]);if(d.length=o,n<o){for(m=w;m<j-o;m++)f=m+o,h=m+n,f in x?x[h]=x[f]:delete x[h];for(m=j;m>j-o+n;m--)delete x[m-1]}else if(n>o)for(m=j-o;m>w;m--)f=m+o-1,h=m+n-1,f in x?x[h]=x[f]:delete x[h];for(m=0;m<n;m++)x[m+w]=arguments[m+2];return x.length=j-o+n,d}})},{"../internals/array-method-has-species-support":39,"../internals/array-method-uses-to-length":41,"../internals/array-species-create":43,"../internals/create-property":58,"../internals/export":68,"../internals/to-absolute-index":150,"../internals/to-integer":153,"../internals/to-length":154,"../internals/to-object":155}],185:[function(t,r,n){var o=t("../internals/descriptors"),a=t("../internals/object-define-property").f,s=Function.prototype,l=s.toString,c=/^\s*function ([^ (]*)/,u="name";// https://tc39.github.io/ecma262/#sec-function-instances-name
!o||u in s||a(s,u,{configurable:!0,get:function(){try{return l.call(this).match(c)[1]}catch(t){return""}}})},{"../internals/descriptors":61,"../internals/object-define-property":110}],186:[function(t,r,n){var o=t("../internals/collection"),a=t("../internals/collection-strong");// https://tc39.github.io/ecma262/#sec-map-objects
r.exports=o("Map",function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}},a)},{"../internals/collection":50,"../internals/collection-strong":48}],187:[function(t,r,n){var o=t("../internals/export"),a=Math.hypot,s=Math.abs,l=Math.sqrt;// https://tc39.github.io/ecma262/#sec-math.hypot
o({target:"Math",stat:!0,forced:!!a&&a(1/0,NaN)!==1/0},{hypot:function(t,r){for(// eslint-disable-line no-unused-vars
var n,o,a=0,c=0,u=arguments.length,p=0;c<u;)n=s(arguments[c++]),p<n?(a=a*(o=p/n)*o+1,p=n):n>0?a+=(o=n/p)*o:a+=n;return p===1/0?1/0:p*l(a)}})},{"../internals/export":68}],188:[function(t,r,n){// https://tc39.github.io/ecma262/#sec-math.sign
t("../internals/export")({target:"Math",stat:!0},{sign:t("../internals/math-sign")})},{"../internals/export":68,"../internals/math-sign":98}],189:[function(t,r,n){var o=t("../internals/descriptors"),a=t("../internals/global"),s=t("../internals/is-forced"),l=t("../internals/redefine"),c=t("../internals/has"),u=t("../internals/classof-raw"),p=t("../internals/inherit-if-required"),d=t("../internals/to-primitive"),m=t("../internals/fails"),f=t("../internals/object-create"),h=t("../internals/object-get-own-property-names").f,y=t("../internals/object-get-own-property-descriptor").f,g=t("../internals/object-define-property").f,v=t("../internals/string-trim").trim,b="Number",x=a[b],j=x.prototype,w=u(f(j))==b,_=function(t){var r,n,o,a,s,l,c,u,p=d(t,!1);if("string"==typeof p&&p.length>2){if(43===(r=(p=v(p)).charCodeAt(0))||45===r){if(88===(n=p.charCodeAt(2))||120===n)return NaN;// Number('+0x1') should be NaN, old V8 fix
}else if(48===r){switch(p.charCodeAt(1)){case 66:case 98:o=2,a=49;break;// fast equal of /^0b[01]+$/i
case 79:case 111:o=8,a=55;break;// fast equal of /^0o[0-7]+$/i
default:return+p}for(c=0,l=(s=p.slice(2)).length;c<l;c++)// but ToNumber should return NaN if a string contains unavailable symbols
if((u=s.charCodeAt(c))<48||u>a)return NaN;return parseInt(s,o)}}return+p};// https://tc39.github.io/ecma262/#sec-number-constructor
if(s(b,!x(" 0o1")||!x("0b1")||x("+0x1"))){for(var S,E=function(t){var r=arguments.length<1?0:t,n=this;return n instanceof E// check on 1..constructor(foo) case
&&(w?m(function(){j.valueOf.call(n)}):u(n)!=b)?p(new x(_(r)),n,E):_(r)},T=o?h(x):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),M=0;T.length>M;M++)c(x,S=T[M])&&!c(E,S)&&g(E,S,y(x,S));E.prototype=j,j.constructor=E,l(a,b,E)}},{"../internals/classof-raw":46,"../internals/descriptors":61,"../internals/fails":69,"../internals/global":77,"../internals/has":78,"../internals/inherit-if-required":85,"../internals/is-forced":91,"../internals/object-create":108,"../internals/object-define-property":110,"../internals/object-get-own-property-descriptor":111,"../internals/object-get-own-property-names":113,"../internals/redefine":126,"../internals/string-trim":147,"../internals/to-primitive":158}],190:[function(t,r,n){// https://tc39.github.io/ecma262/#sec-number.isfinite
t("../internals/export")({target:"Number",stat:!0},{isFinite:t("../internals/number-is-finite")})},{"../internals/export":68,"../internals/number-is-finite":106}],191:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/to-integer"),s=t("../internals/this-number-value"),l=t("../internals/string-repeat"),c=t("../internals/fails"),u=1..toFixed,p=Math.floor,d=function(t,r,n){return 0===r?n:r%2==1?d(t,r-1,n*t):d(t*t,r/2,n)},m=function(t){for(var r=0,n=t;n>=4096;)r+=12,n/=4096;for(;n>=2;)r+=1,n/=2;return r};// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed
o({target:"Number",proto:!0,forced:!c(function(){// V8 ~ Android 4.3-
u.call({})})},{// eslint-disable-next-line max-statements
toFixed:function(t){var r,n,o,c,u=s(this),f=a(t),h=[0,0,0,0,0,0],y="",g="0",v=function(t,r){for(var n=-1,o=r;++n<6;)o+=t*h[n],h[n]=o%1e7,o=p(o/1e7)},b=function(t){for(var r=6,n=0;--r>=0;)n+=h[r],h[r]=p(n/t),n=n%t*1e7},x=function(){for(var t=6,r="";--t>=0;)if(""!==r||0===t||0!==h[t]){var n=String(h[t]);r=""===r?n:r+l.call("0",7-n.length)+n}return r};if(f<0||f>20)throw RangeError("Incorrect fraction digits");// eslint-disable-next-line no-self-compare
if(u!=u)return"NaN";if(u<=-1e21||u>=1e21)return String(u);if(u<0&&(y="-",u=-u),u>1e-21){if(n=((r=m(u*d(2,69,1))-69)<0?u*d(2,-r,1):u/d(2,r,1))*4503599627370496,(r=52-r)>0){for(v(0,n),o=f;o>=7;)v(1e7,0),o-=7;for(v(d(10,o,1),0),o=r-1;o>=23;)b(8388608),o-=23;b(1<<o),v(1,1),b(2),g=x()}else v(0,n),v(1<<-r,0),g=x()+l.call("0",f)}return f>0?y+((c=g.length)<=f?"0."+l.call("0",f-c)+g:g.slice(0,c-f)+"."+g.slice(c-f)):y+g}})},{"../internals/export":68,"../internals/fails":69,"../internals/string-repeat":145,"../internals/this-number-value":149,"../internals/to-integer":153}],192:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/object-assign");// https://tc39.github.io/ecma262/#sec-object.assign
o({target:"Object",stat:!0,forced:Object.assign!==a},{assign:a})},{"../internals/export":68,"../internals/object-assign":107}],193:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/iterate"),s=t("../internals/create-property");// https://github.com/tc39/proposal-object-from-entries
o({target:"Object",stat:!0},{fromEntries:function(t){var r={};return a(t,function(t,n){s(r,t,n)},void 0,!0),r}})},{"../internals/create-property":58,"../internals/export":68,"../internals/iterate":95}],194:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/fails"),s=t("../internals/to-indexed-object"),l=t("../internals/object-get-own-property-descriptor").f,c=t("../internals/descriptors"),u=a(function(){l(1)});// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
o({target:"Object",stat:!0,forced:!c||u,sham:!c},{getOwnPropertyDescriptor:function(t,r){return l(s(t),r)}})},{"../internals/descriptors":61,"../internals/export":68,"../internals/fails":69,"../internals/object-get-own-property-descriptor":111,"../internals/to-indexed-object":152}],195:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/fails"),s=t("../internals/object-get-own-property-names-external").f;// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
o({target:"Object",stat:!0,forced:a(function(){return!Object.getOwnPropertyNames(1)})},{getOwnPropertyNames:s})},{"../internals/export":68,"../internals/fails":69,"../internals/object-get-own-property-names-external":112}],196:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/fails"),s=t("../internals/to-object"),l=t("../internals/object-get-prototype-of"),c=t("../internals/correct-prototype-getter");// https://tc39.github.io/ecma262/#sec-object.getprototypeof
o({target:"Object",stat:!0,forced:a(function(){l(1)}),sham:!c},{getPrototypeOf:function(t){return l(s(t))}})},{"../internals/correct-prototype-getter":53,"../internals/export":68,"../internals/fails":69,"../internals/object-get-prototype-of":115,"../internals/to-object":155}],197:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/to-object"),s=t("../internals/object-keys");// https://tc39.github.io/ecma262/#sec-object.keys
o({target:"Object",stat:!0,forced:t("../internals/fails")(function(){s(1)})},{keys:function(t){return s(a(t))}})},{"../internals/export":68,"../internals/fails":69,"../internals/object-keys":117,"../internals/to-object":155}],198:[function(t,r,n){var o=t("../internals/to-string-tag-support"),a=t("../internals/redefine"),s=t("../internals/object-to-string");// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
o||a(Object.prototype,"toString",s,{unsafe:!0})},{"../internals/object-to-string":120,"../internals/redefine":126,"../internals/to-string-tag-support":159}],199:[function(t,r,n){var o,a,s,l,c=t("../internals/export"),u=t("../internals/is-pure"),p=t("../internals/global"),d=t("../internals/get-built-in"),m=t("../internals/native-promise-constructor"),f=t("../internals/redefine"),h=t("../internals/redefine-all"),y=t("../internals/set-to-string-tag"),g=t("../internals/set-species"),v=t("../internals/is-object"),b=t("../internals/a-function"),x=t("../internals/an-instance"),j=t("../internals/classof-raw"),w=t("../internals/inspect-source"),_=t("../internals/iterate"),S=t("../internals/check-correctness-of-iteration"),E=t("../internals/species-constructor"),T=t("../internals/task").set,M=t("../internals/microtask"),C=t("../internals/promise-resolve"),O=t("../internals/host-report-errors"),N=t("../internals/new-promise-capability"),A=t("../internals/perform"),R=t("../internals/internal-state"),L=t("../internals/is-forced"),I=t("../internals/well-known-symbol"),P=t("../internals/engine-v8-version"),D=I("species"),F="Promise",U=R.get,B=R.set,G=R.getterFor(F),V=m,z=p.TypeError,H=p.document,W=p.process,q=d("fetch"),X=N.f,Y=X,Z="process"==j(W),K=!!(H&&H.createEvent&&p.dispatchEvent),J="unhandledrejection",Q="rejectionhandled",$=0,ee=1,et=2,er=1,en=2,eo=L(F,function(){if(!(w(V)!==String(V))&&(66===P||!Z&&"function"!=typeof PromiseRejectionEvent)||u&&!V.prototype.finally)return!0;// Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
// We need Promise#finally in the pure version for preventing prototype pollution
// deoptimization and performance degradation
// https://github.com/zloirock/core-js/issues/679
if(P>=51&&/native code/.test(V))return!1;// Detect correctness of subclassing with @@species support
var t=V.resolve(1),r=function(t){t(function(){/* empty */},function(){/* empty */})};return(t.constructor={})[D]=r,!(t.then(function(){/* empty */}) instanceof r)}),ea=eo||!S(function(t){V.all(t).catch(function(){/* empty */})}),es=function(t){var r;return!!v(t)&&"function"==typeof(r=t.then)&&r},ei=function(t,r,n){if(!r.notified){r.notified=!0;var o=r.reactions;M(function(){for(var a=r.value,s=r.state==ee,l=0;o.length>l;){var c,u,p,d=o[l++],m=s?d.ok:d.fail,f=d.resolve,h=d.reject,y=d.domain;try{m?(s||(r.rejection===en&&ep(t,r),r.rejection=er),!0===m?c=a:(y&&y.enter(),c=m(a),y&&(y.exit(),p=!0)),c===d.promise?h(z("Promise-chain cycle")):(u=es(c))?u.call(c,f,h):f(c)):h(a)}catch(t){y&&!p&&y.exit(),h(t)}}r.reactions=[],r.notified=!1,n&&!r.rejection&&ec(t,r)})}},el=function(t,r,n){var o,a;K?((o=H.createEvent("Event")).promise=r,o.reason=n,o.initEvent(t,!1,!0),p.dispatchEvent(o)):o={promise:r,reason:n},(a=p["on"+t])?a(o):t===J&&O("Unhandled promise rejection",n)},ec=function(t,r){T.call(p,function(){var n,o=r.value;if(eu(r)&&(n=A(function(){Z?W.emit("unhandledRejection",o,t):el(J,t,o)}),r.rejection=Z||eu(r)?en:er,n.error))throw n.value})},eu=function(t){return t.rejection!==er&&!t.parent},ep=function(t,r){T.call(p,function(){Z?W.emit("rejectionHandled",t):el(Q,t,r.value)})},ed=function(t,r,n,o){return function(a){t(r,n,a,o)}},em=function(t,r,n,o){r.done||(r.done=!0,o&&(r=o),r.value=n,r.state=et,ei(t,r,!0))},ef=function(t,r,n,o){if(!r.done){r.done=!0,o&&(r=o);try{if(t===n)throw z("Promise can't be resolved itself");var a=es(n);a?M(function(){var o={done:!1};try{a.call(n,ed(ef,t,o,r),ed(em,t,o,r))}catch(n){em(t,o,n,r)}}):(r.value=n,r.state=ee,ei(t,r,!1))}catch(n){em(t,{done:!1},n,r)}}};eo&&(// 25.4.3.1 Promise(executor)
V=function(t){x(this,V,F),b(t),o.call(this);var r=U(this);try{t(ed(ef,this,r),ed(em,this,r))}catch(t){em(this,r,t)}},(o=function(t){B(this,{type:F,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:$,value:void 0})}).prototype=h(V.prototype,{// `Promise.prototype.then` method
// https://tc39.github.io/ecma262/#sec-promise.prototype.then
then:function(t,r){var n=G(this),o=X(E(this,V));return o.ok="function"!=typeof t||t,o.fail="function"==typeof r&&r,o.domain=Z?W.domain:void 0,n.parent=!0,n.reactions.push(o),n.state!=$&&ei(this,n,!1),o.promise},// `Promise.prototype.catch` method
// https://tc39.github.io/ecma262/#sec-promise.prototype.catch
catch:function(t){return this.then(void 0,t)}}),a=function(){var t=new o,r=U(t);this.promise=t,this.resolve=ed(ef,t,r),this.reject=ed(em,t,r)},N.f=X=function(t){return t===V||t===s?new a(t):Y(t)},u||"function"!=typeof m||(l=m.prototype.then,f(m.prototype,"then",function(t,r){var n=this;return new V(function(t,r){l.call(n,t,r)}).then(t,r);// https://github.com/zloirock/core-js/issues/640
},{unsafe:!0}),"function"==typeof q&&c({global:!0,enumerable:!0,forced:!0},{// eslint-disable-next-line no-unused-vars
fetch:function(t/* , init */){return C(V,q.apply(p,arguments))}}))),c({global:!0,wrap:!0,forced:eo},{Promise:V}),y(V,F,!1,!0),g(F),s=d(F),c({target:F,stat:!0,forced:eo},{// `Promise.reject` method
// https://tc39.github.io/ecma262/#sec-promise.reject
reject:function(t){var r=X(this);return r.reject.call(void 0,t),r.promise}}),c({target:F,stat:!0,forced:u||eo},{// `Promise.resolve` method
// https://tc39.github.io/ecma262/#sec-promise.resolve
resolve:function(t){return C(u&&this===s?V:this,t)}}),c({target:F,stat:!0,forced:ea},{// `Promise.all` method
// https://tc39.github.io/ecma262/#sec-promise.all
all:function(t){var r=this,n=X(r),o=n.resolve,a=n.reject,s=A(function(){var n=b(r.resolve),s=[],l=0,c=1;_(t,function(t){var u=l++,p=!1;s.push(void 0),c++,n.call(r,t).then(function(t){!p&&(p=!0,s[u]=t,--c||o(s))},a)}),--c||o(s)});return s.error&&a(s.value),n.promise},// `Promise.race` method
// https://tc39.github.io/ecma262/#sec-promise.race
race:function(t){var r=this,n=X(r),o=n.reject,a=A(function(){var a=b(r.resolve);_(t,function(t){a.call(r,t).then(n.resolve,o)})});return a.error&&o(a.value),n.promise}})},{"../internals/a-function":23,"../internals/an-instance":27,"../internals/check-correctness-of-iteration":45,"../internals/classof-raw":46,"../internals/engine-v8-version":66,"../internals/export":68,"../internals/get-built-in":74,"../internals/global":77,"../internals/host-report-errors":80,"../internals/inspect-source":86,"../internals/internal-state":88,"../internals/is-forced":91,"../internals/is-object":92,"../internals/is-pure":93,"../internals/iterate":95,"../internals/microtask":99,"../internals/native-promise-constructor":100,"../internals/new-promise-capability":104,"../internals/perform":123,"../internals/promise-resolve":124,"../internals/redefine":126,"../internals/redefine-all":125,"../internals/set-species":134,"../internals/set-to-string-tag":135,"../internals/species-constructor":139,"../internals/task":148,"../internals/well-known-symbol":166}],200:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/get-built-in"),s=t("../internals/a-function"),l=t("../internals/an-object"),c=t("../internals/is-object"),u=t("../internals/object-create"),p=t("../internals/function-bind"),d=t("../internals/fails"),m=a("Reflect","construct"),f=d(function(){function t(){/* empty */}return!(m(function(){/* empty */},[],t) instanceof t)}),h=!d(function(){m(function(){/* empty */})}),y=f||h;o({target:"Reflect",stat:!0,forced:y,sham:y},{construct:function(t,r/* , newTarget */){s(t),l(r);var n=arguments.length<3?t:s(arguments[2]);if(h&&!f)return m(t,r,n);if(t==n){// w/o altered newTarget, optimization for 0-4 arguments
switch(r.length){case 0:return new t;case 1:return new t(r[0]);case 2:return new t(r[0],r[1]);case 3:return new t(r[0],r[1],r[2]);case 4:return new t(r[0],r[1],r[2],r[3])}// w/o altered newTarget, lot of arguments case
var o=[null];return o.push.apply(o,r),new(p.apply(t,o))}// with altered newTarget, not support built-in constructors
var a=n.prototype,d=u(c(a)?a:Object.prototype),y=Function.apply.call(t,d,r);return c(y)?y:d}})},{"../internals/a-function":23,"../internals/an-object":28,"../internals/export":68,"../internals/fails":69,"../internals/function-bind":73,"../internals/get-built-in":74,"../internals/is-object":92,"../internals/object-create":108}],201:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/is-object"),s=t("../internals/an-object"),l=t("../internals/has"),c=t("../internals/object-get-own-property-descriptor"),u=t("../internals/object-get-prototype-of");// https://tc39.github.io/ecma262/#sec-reflect.get
function p(t,r/* , receiver */){var n,o,d=arguments.length<3?t:arguments[2];return s(t)===d?t[r]:(n=c.f(t,r))?l(n,"value")?n.value:void 0===n.get?void 0:n.get.call(d):a(o=u(t))?p(o,r,d):void 0}o({target:"Reflect",stat:!0},{get:p})},{"../internals/an-object":28,"../internals/export":68,"../internals/has":78,"../internals/is-object":92,"../internals/object-get-own-property-descriptor":111,"../internals/object-get-prototype-of":115}],202:[function(t,r,n){var o=t("../internals/descriptors"),a=t("../internals/global"),s=t("../internals/is-forced"),l=t("../internals/inherit-if-required"),c=t("../internals/object-define-property").f,u=t("../internals/object-get-own-property-names").f,p=t("../internals/is-regexp"),d=t("../internals/regexp-flags"),m=t("../internals/regexp-sticky-helpers"),f=t("../internals/redefine"),h=t("../internals/fails"),y=t("../internals/internal-state").set,g=t("../internals/set-species"),v=t("../internals/well-known-symbol")("match"),b=a.RegExp,x=b.prototype,j=/a/g,w=/a/g,_=new b(j)!==j,S=m.UNSUPPORTED_Y;// https://tc39.github.io/ecma262/#sec-regexp-constructor
if(o&&s("RegExp",!_||S||h(function(){return w[v]=!1,b(j)!=j||b(w)==w||"/a/i"!=b(j,"i")}))){for(var E=function(t,r){var n,o=this instanceof E,a=p(t),s=void 0===r;if(!o&&a&&t.constructor===E&&s)return t;_?a&&!s&&(t=t.source):t instanceof E&&(s&&(r=d.call(t)),t=t.source),S&&(n=!!r&&r.indexOf("y")>-1)&&(r=r.replace(/y/g,""));var c=l(_?new b(t,r):b(t,r),o?this:x,E);return S&&n&&y(c,{sticky:n}),c},T=function(t){(t in E)||c(E,t,{configurable:!0,get:function(){return b[t]},set:function(r){b[t]=r}})},M=u(b),C=0;M.length>C;)T(M[C++]);x.constructor=E,E.prototype=x,f(a,"RegExp",E)}// https://tc39.github.io/ecma262/#sec-get-regexp-@@species
g("RegExp")},{"../internals/descriptors":61,"../internals/fails":69,"../internals/global":77,"../internals/inherit-if-required":85,"../internals/internal-state":88,"../internals/is-forced":91,"../internals/is-regexp":94,"../internals/object-define-property":110,"../internals/object-get-own-property-names":113,"../internals/redefine":126,"../internals/regexp-flags":129,"../internals/regexp-sticky-helpers":130,"../internals/set-species":134,"../internals/well-known-symbol":166}],203:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/regexp-exec");o({target:"RegExp",proto:!0,forced:/./.exec!==a},{exec:a})},{"../internals/export":68,"../internals/regexp-exec":128}],204:[function(t,r,n){var o=t("../internals/redefine"),a=t("../internals/an-object"),s=t("../internals/fails"),l=t("../internals/regexp-flags"),c="toString",u=RegExp.prototype,p=u[c],d=s(function(){return"/a/b"!=p.call({source:"a",flags:"b"})}),m=p.name!=c;// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring
(d||m)&&o(RegExp.prototype,c,function(){var t=a(this),r=String(t.source),n=t.flags;return"/"+r+"/"+String(void 0===n&&t instanceof RegExp&&!("flags"in u)?l.call(t):n)},{unsafe:!0})},{"../internals/an-object":28,"../internals/fails":69,"../internals/redefine":126,"../internals/regexp-flags":129}],205:[function(t,r,n){var o=t("../internals/collection"),a=t("../internals/collection-strong");// https://tc39.github.io/ecma262/#sec-set-objects
r.exports=o("Set",function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}},a)},{"../internals/collection":50,"../internals/collection-strong":48}],206:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/object-get-own-property-descriptor").f,s=t("../internals/to-length"),l=t("../internals/not-a-regexp"),c=t("../internals/require-object-coercible"),u=t("../internals/correct-is-regexp-logic"),p=t("../internals/is-pure"),d="".endsWith,m=Math.min,f=u("endsWith");// https://tc39.github.io/ecma262/#sec-string.prototype.endswith
o({target:"String",proto:!0,forced:!(!p&&!f&&function(){var t=a(String.prototype,"endsWith");return t&&!t.writable}())&&!f},{endsWith:function(t/* , endPosition = @length */){var r=String(c(this));l(t);var n=arguments.length>1?arguments[1]:void 0,o=s(r.length),a=void 0===n?o:m(s(n),o),u=String(t);return d?d.call(r,u,a):r.slice(a-u.length,a)===u}})},{"../internals/correct-is-regexp-logic":52,"../internals/export":68,"../internals/is-pure":93,"../internals/not-a-regexp":105,"../internals/object-get-own-property-descriptor":111,"../internals/require-object-coercible":131,"../internals/to-length":154}],207:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/not-a-regexp"),s=t("../internals/require-object-coercible");// https://tc39.github.io/ecma262/#sec-string.prototype.includes
o({target:"String",proto:!0,forced:!t("../internals/correct-is-regexp-logic")("includes")},{includes:function(t/* , position = 0 */){return!!~String(s(this)).indexOf(a(t),arguments.length>1?arguments[1]:void 0)}})},{"../internals/correct-is-regexp-logic":52,"../internals/export":68,"../internals/not-a-regexp":105,"../internals/require-object-coercible":131}],208:[function(t,r,n){var o=t("../internals/string-multibyte").charAt,a=t("../internals/internal-state"),s=t("../internals/define-iterator"),l="String Iterator",c=a.set,u=a.getterFor(l);// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
s(String,"String",function(t){c(this,{type:l,string:String(t),index:0});// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
},function(){var t,r=u(this),n=r.string,a=r.index;return a>=n.length?{value:void 0,done:!0}:(t=o(n,a),r.index+=t.length,{value:t,done:!1})})},{"../internals/define-iterator":59,"../internals/internal-state":88,"../internals/string-multibyte":141}],209:[function(t,r,n){var o=t("../internals/fix-regexp-well-known-symbol-logic"),a=t("../internals/an-object"),s=t("../internals/to-length"),l=t("../internals/require-object-coercible"),c=t("../internals/advance-string-index"),u=t("../internals/regexp-exec-abstract");o("match",1,function(t,r,n){return[// https://tc39.github.io/ecma262/#sec-string.prototype.match
function(r){var n=l(this),o=void 0==r?void 0:r[t];return void 0!==o?o.call(r,n):new RegExp(r)[t](String(n))},// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
function(t){var o,l=n(r,t,this);if(l.done)return l.value;var p=a(t),d=String(this);if(!p.global)return u(p,d);var m=p.unicode;p.lastIndex=0;for(var f=[],h=0;null!==(o=u(p,d));){var y=String(o[0]);f[h]=y,""===y&&(p.lastIndex=c(d,s(p.lastIndex),m)),h++}return 0===h?null:f}]})},{"../internals/advance-string-index":26,"../internals/an-object":28,"../internals/fix-regexp-well-known-symbol-logic":70,"../internals/regexp-exec-abstract":127,"../internals/require-object-coercible":131,"../internals/to-length":154}],210:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/string-pad").start;// https://tc39.github.io/ecma262/#sec-string.prototype.padstart
o({target:"String",proto:!0,forced:t("../internals/string-pad-webkit-bug")},{padStart:function(t/* , fillString = ' ' */){return a(this,t,arguments.length>1?arguments[1]:void 0)}})},{"../internals/export":68,"../internals/string-pad":143,"../internals/string-pad-webkit-bug":142}],211:[function(t,r,n){// https://tc39.github.io/ecma262/#sec-string.prototype.repeat
t("../internals/export")({target:"String",proto:!0},{repeat:t("../internals/string-repeat")})},{"../internals/export":68,"../internals/string-repeat":145}],212:[function(t,r,n){var o=t("../internals/fix-regexp-well-known-symbol-logic"),a=t("../internals/an-object"),s=t("../internals/to-object"),l=t("../internals/to-length"),c=t("../internals/to-integer"),u=t("../internals/require-object-coercible"),p=t("../internals/advance-string-index"),d=t("../internals/regexp-exec-abstract"),m=Math.max,f=Math.min,h=Math.floor,y=/\$([$&'`]|\d\d?|<[^>]*>)/g,g=/\$([$&'`]|\d\d?)/g,v=function(t){return void 0===t?t:String(t)};o("replace",2,function(t,r,n,o){var b=o.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,x=o.REPLACE_KEEPS_$0,j=b?"$":"$0";return[// https://tc39.github.io/ecma262/#sec-string.prototype.replace
function(n,o){var a=u(this),s=void 0==n?void 0:n[t];return void 0!==s?s.call(n,a,o):r.call(String(a),n,o)},// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
function(t,o){if(!b&&x||"string"==typeof o&&-1===o.indexOf(j)){var s=n(r,t,this,o);if(s.done)return s.value}var u=a(t),h=String(this),y="function"==typeof o;y||(o=String(o));var g=u.global;if(g){var _=u.unicode;u.lastIndex=0}for(var S=[];;){var E=d(u,h);if(null===E||(S.push(E),!g))break;""===String(E[0])&&(u.lastIndex=p(h,l(u.lastIndex),_))}for(var T="",M=0,C=0;C<S.length;C++){//   captures = result.slice(1).map(maybeToString)
// but for some reason `nativeSlice.call(result, 1, result.length)` (called in
// the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
// causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
for(var O=String((E=S[C])[0]),N=m(f(c(E.index),h.length),0),A=[],R=1;R<E.length;R++)A.push(v(E[R]));var L=E.groups;if(y){var I=[O].concat(A,N,h);void 0!==L&&I.push(L);var P=String(o.apply(void 0,I))}else P=w(O,h,N,A,L,o);N>=M&&(T+=h.slice(M,N)+P,M=N+O.length)}return T+h.slice(M)}];// https://tc39.github.io/ecma262/#sec-getsubstitution
function w(t,n,o,a,l,c){var u=o+t.length,p=a.length,d=g;return void 0!==l&&(l=s(l),d=y),r.call(c,d,function(r,s){var c;switch(s.charAt(0)){case"$":return"$";case"&":return t;case"`":return n.slice(0,o);case"'":return n.slice(u);case"<":c=l[s.slice(1,-1)];break;default:// \d\d?
var d=+s;if(0===d)return r;if(d>p){var m=h(d/10);if(0===m)return r;if(m<=p)return void 0===a[m-1]?s.charAt(1):a[m-1]+s.charAt(1);return r}c=a[d-1]}return void 0===c?"":c})}})},{"../internals/advance-string-index":26,"../internals/an-object":28,"../internals/fix-regexp-well-known-symbol-logic":70,"../internals/regexp-exec-abstract":127,"../internals/require-object-coercible":131,"../internals/to-integer":153,"../internals/to-length":154,"../internals/to-object":155}],213:[function(t,r,n){var o=t("../internals/fix-regexp-well-known-symbol-logic"),a=t("../internals/an-object"),s=t("../internals/require-object-coercible"),l=t("../internals/same-value"),c=t("../internals/regexp-exec-abstract");o("search",1,function(t,r,n){return[// https://tc39.github.io/ecma262/#sec-string.prototype.search
function(r){var n=s(this),o=void 0==r?void 0:r[t];return void 0!==o?o.call(r,n):new RegExp(r)[t](String(n))},// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
function(t){var o=n(r,t,this);if(o.done)return o.value;var s=a(t),u=String(this),p=s.lastIndex;l(p,0)||(s.lastIndex=0);var d=c(s,u);return l(s.lastIndex,p)||(s.lastIndex=p),null===d?-1:d.index}]})},{"../internals/an-object":28,"../internals/fix-regexp-well-known-symbol-logic":70,"../internals/regexp-exec-abstract":127,"../internals/require-object-coercible":131,"../internals/same-value":132}],214:[function(t,r,n){var o=t("../internals/fix-regexp-well-known-symbol-logic"),a=t("../internals/is-regexp"),s=t("../internals/an-object"),l=t("../internals/require-object-coercible"),c=t("../internals/species-constructor"),u=t("../internals/advance-string-index"),p=t("../internals/to-length"),d=t("../internals/regexp-exec-abstract"),m=t("../internals/regexp-exec"),f=t("../internals/fails"),h=[].push,y=Math.min,g=4294967295,v=!f(function(){return!RegExp(g,"y")});o("split",2,function(t,r,n){var o;return o="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(t,n){var o,s,c,u=String(l(this)),p=void 0===n?g:n>>>0;if(0===p)return[];if(void 0===t)return[u];// If `separator` is not a regex, use native split
if(!a(t))return r.call(u,t,p);for(var d=[],f=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),y=0,v=RegExp(t.source,f+"g");(o=m.call(v,u))&&(!((s=v.lastIndex)>y)||(d.push(u.slice(y,o.index)),o.length>1&&o.index<u.length&&h.apply(d,o.slice(1)),c=o[0].length,y=s,!(d.length>=p)));)v.lastIndex===o.index&&v.lastIndex++;// Avoid an infinite loop
return y===u.length?(c||!v.test(""))&&d.push(""):d.push(u.slice(y)),d.length>p?d.slice(0,p):d}:"0".split(void 0,0).length?function(t,n){return void 0===t&&0===n?[]:r.call(this,t,n)}:r,[// https://tc39.github.io/ecma262/#sec-string.prototype.split
function(r,n){var a=l(this),s=void 0==r?void 0:r[t];return void 0!==s?s.call(r,a,n):o.call(String(a),r,n)},// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
//
// NOTE: This cannot be properly polyfilled in engines that don't support
// the 'y' flag.
function(t,a){var l=n(o,t,this,a,o!==r);if(l.done)return l.value;var m=s(t),f=String(this),h=c(m,RegExp),b=m.unicode,x=(m.ignoreCase?"i":"")+(m.multiline?"m":"")+(m.unicode?"u":"")+(v?"y":"g"),j=new h(v?m:"^(?:"+m.source+")",x),w=void 0===a?g:a>>>0;if(0===w)return[];if(0===f.length)return null===d(j,f)?[f]:[];for(var _=0,S=0,E=[];S<f.length;){j.lastIndex=v?S:0;var T,M=d(j,v?f:f.slice(S));if(null===M||(T=y(p(j.lastIndex+(v?0:S)),f.length))===_)S=u(f,S,b);else{if(E.push(f.slice(_,S)),E.length===w)return E;for(var C=1;C<=M.length-1;C++)if(E.push(M[C]),E.length===w)return E;S=_=T}}return E.push(f.slice(_)),E}]},!v)},{"../internals/advance-string-index":26,"../internals/an-object":28,"../internals/fails":69,"../internals/fix-regexp-well-known-symbol-logic":70,"../internals/is-regexp":94,"../internals/regexp-exec":128,"../internals/regexp-exec-abstract":127,"../internals/require-object-coercible":131,"../internals/species-constructor":139,"../internals/to-length":154}],215:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/object-get-own-property-descriptor").f,s=t("../internals/to-length"),l=t("../internals/not-a-regexp"),c=t("../internals/require-object-coercible"),u=t("../internals/correct-is-regexp-logic"),p=t("../internals/is-pure"),d="".startsWith,m=Math.min,f=u("startsWith");// https://tc39.github.io/ecma262/#sec-string.prototype.startswith
o({target:"String",proto:!0,forced:!(!p&&!f&&function(){var t=a(String.prototype,"startsWith");return t&&!t.writable}())&&!f},{startsWith:function(t/* , position = 0 */){var r=String(c(this));l(t);var n=s(m(arguments.length>1?arguments[1]:void 0,r.length)),o=String(t);return d?d.call(r,o,n):r.slice(n,n+o.length)===o}})},{"../internals/correct-is-regexp-logic":52,"../internals/export":68,"../internals/is-pure":93,"../internals/not-a-regexp":105,"../internals/object-get-own-property-descriptor":111,"../internals/require-object-coercible":131,"../internals/to-length":154}],216:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/create-html");// https://tc39.github.io/ecma262/#sec-string.prototype.sub
o({target:"String",proto:!0,forced:t("../internals/string-html-forced")("sub")},{sub:function(){return a(this,"sub","","")}})},{"../internals/create-html":54,"../internals/export":68,"../internals/string-html-forced":140}],217:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/string-trim").trim;// https://tc39.github.io/ecma262/#sec-string.prototype.trim
o({target:"String",proto:!0,forced:t("../internals/string-trim-forced")("trim")},{trim:function(){return a(this)}})},{"../internals/export":68,"../internals/string-trim":147,"../internals/string-trim-forced":146}],218:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/descriptors"),s=t("../internals/global"),l=t("../internals/has"),c=t("../internals/is-object"),u=t("../internals/object-define-property").f,p=t("../internals/copy-constructor-properties"),d=s.Symbol;if(a&&"function"==typeof d&&(!("description"in d.prototype)||// Safari 12 bug
void 0!==d().description)){var m={},f=function(){var t=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),r=this instanceof f?new d(t)// in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
:void 0===t?d():d(t);return""===t&&(m[r]=!0),r};// wrap Symbol constructor for correct work with undefined description
p(f,d);var h=f.prototype=d.prototype;h.constructor=f;var y=h.toString,g="Symbol(test)"==String(d("test")),v=/^Symbol\((.*)\)[^)]+$/;u(h,"description",{configurable:!0,get:function(){var t=c(this)?this.valueOf():this,r=y.call(t);if(l(m,t))return"";var n=g?r.slice(7,-1):r.replace(v,"$1");return""===n?void 0:n}}),o({global:!0,forced:!0},{Symbol:f})}},{"../internals/copy-constructor-properties":51,"../internals/descriptors":61,"../internals/export":68,"../internals/global":77,"../internals/has":78,"../internals/is-object":92,"../internals/object-define-property":110}],219:[function(t,r,n){// https://tc39.github.io/ecma262/#sec-symbol.iterator
t("../internals/define-well-known-symbol")("iterator")},{"../internals/define-well-known-symbol":60}],220:[function(t,r,n){var o=t("../internals/export"),a=t("../internals/global"),s=t("../internals/get-built-in"),l=t("../internals/is-pure"),c=t("../internals/descriptors"),u=t("../internals/native-symbol"),p=t("../internals/use-symbol-as-uid"),d=t("../internals/fails"),m=t("../internals/has"),f=t("../internals/is-array"),h=t("../internals/is-object"),y=t("../internals/an-object"),g=t("../internals/to-object"),v=t("../internals/to-indexed-object"),b=t("../internals/to-primitive"),x=t("../internals/create-property-descriptor"),j=t("../internals/object-create"),w=t("../internals/object-keys"),_=t("../internals/object-get-own-property-names"),S=t("../internals/object-get-own-property-names-external"),E=t("../internals/object-get-own-property-symbols"),T=t("../internals/object-get-own-property-descriptor"),M=t("../internals/object-define-property"),C=t("../internals/object-property-is-enumerable"),O=t("../internals/create-non-enumerable-property"),N=t("../internals/redefine"),A=t("../internals/shared"),R=t("../internals/shared-key"),L=t("../internals/hidden-keys"),I=t("../internals/uid"),P=t("../internals/well-known-symbol"),D=t("../internals/well-known-symbol-wrapped"),F=t("../internals/define-well-known-symbol"),U=t("../internals/set-to-string-tag"),B=t("../internals/internal-state"),G=t("../internals/array-iteration").forEach,V=R("hidden"),z="Symbol",H="prototype",W=P("toPrimitive"),q=B.set,X=B.getterFor(z),Y=Object[H],Z=a.Symbol,K=s("JSON","stringify"),J=T.f,Q=M.f,$=S.f,ee=C.f,et=A("symbols"),er=A("op-symbols"),en=A("string-to-symbol-registry"),eo=A("symbol-to-string-registry"),ea=A("wks"),es=a.QObject,ei=!es||!es[H]||!es[H].findChild,el=c&&d(function(){return 7!=j(Q({},"a",{get:function(){return Q(this,"a",{value:7}).a}})).a})?function(t,r,n){var o=J(Y,r);o&&delete Y[r],Q(t,r,n),o&&t!==Y&&Q(Y,r,o)}:Q,ec=function(t,r){var n=et[t]=j(Z[H]);return q(n,{type:z,tag:t,description:r}),c||(n.description=r),n},eu=p?function(t){return"symbol"==typeof t}:function(t){return Object(t) instanceof Z},ep=function(t,r,n){t===Y&&ep(er,r,n),y(t);var o=b(r,!0);return(y(n),m(et,o))?(n.enumerable?(m(t,V)&&t[V][o]&&(t[V][o]=!1),n=j(n,{enumerable:x(0,!1)})):(m(t,V)||Q(t,V,x(1,{})),t[V][o]=!0),el(t,o,n)):Q(t,o,n)},ed=function(t,r){y(t);var n=v(r);return G(w(n).concat(eg(n)),function(r){(!c||ef.call(n,r))&&ep(t,r,n[r])}),t},em=function(t,r){return void 0===r?j(t):ed(j(t),r)},ef=function(t){var r=b(t,!0),n=ee.call(this,r);return(!(this===Y&&m(et,r))||!!m(er,r))&&(!(n||!m(this,r)||!m(et,r)||m(this,V)&&this[V][r])||n)},eh=function(t,r){var n=v(t),o=b(r,!0);if(!(n===Y&&m(et,o))||m(er,o)){var a=J(n,o);return a&&m(et,o)&&!(m(n,V)&&n[V][o])&&(a.enumerable=!0),a}},ey=function(t){var r=$(v(t)),n=[];return G(r,function(t){m(et,t)||m(L,t)||n.push(t)}),n},eg=function(t){var r=t===Y,n=$(r?er:v(t)),o=[];return G(n,function(t){m(et,t)&&(!r||m(Y,t))&&o.push(et[t])}),o};u||(N((Z=function(){if(this instanceof Z)throw TypeError("Symbol is not a constructor");var t=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,r=I(t),n=function(t){this===Y&&n.call(er,t),m(this,V)&&m(this[V],r)&&(this[V][r]=!1),el(this,r,x(1,t))};return c&&ei&&el(Y,r,{configurable:!0,set:n}),ec(r,t)})[H],"toString",function(){return X(this).tag}),N(Z,"withoutSetter",function(t){return ec(I(t),t)}),C.f=ef,M.f=ep,T.f=eh,_.f=S.f=ey,E.f=eg,D.f=function(t){return ec(P(t),t)},c&&(// https://github.com/tc39/proposal-Symbol-description
Q(Z[H],"description",{configurable:!0,get:function(){return X(this).description}}),l||N(Y,"propertyIsEnumerable",ef,{unsafe:!0}))),o({global:!0,wrap:!0,forced:!u,sham:!u},{Symbol:Z}),G(w(ea),function(t){F(t)}),o({target:z,stat:!0,forced:!u},{// `Symbol.for` method
// https://tc39.github.io/ecma262/#sec-symbol.for
for:function(t){var r=String(t);if(m(en,r))return en[r];var n=Z(r);return en[r]=n,eo[n]=r,n},// `Symbol.keyFor` method
// https://tc39.github.io/ecma262/#sec-symbol.keyfor
keyFor:function(t){if(!eu(t))throw TypeError(t+" is not a symbol");if(m(eo,t))return eo[t]},useSetter:function(){ei=!0},useSimple:function(){ei=!1}}),o({target:"Object",stat:!0,forced:!u,sham:!c},{// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
create:em,// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
defineProperty:ep,// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
defineProperties:ed,// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
getOwnPropertyDescriptor:eh}),o({target:"Object",stat:!0,forced:!u},{// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
getOwnPropertyNames:ey,// `Object.getOwnPropertySymbols` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
getOwnPropertySymbols:eg}),// https://bugs.chromium.org/p/v8/issues/detail?id=3443
o({target:"Object",stat:!0,forced:d(function(){E.f(1)})},{getOwnPropertySymbols:function(t){return E.f(g(t))}}),K&&o({target:"JSON",stat:!0,forced:!u||d(function(){var t=Z();// MS Edge converts symbol values to JSON as {}
return"[null]"// WebKit converts symbol values to JSON as null
!=K([t])||"{}"// V8 throws on boxed symbols
!=K({a:t})||"{}"!=K(Object(t))})},{// eslint-disable-next-line no-unused-vars
stringify:function(t,r,n){for(var o,a=[t],s=1;arguments.length>s;)a.push(arguments[s++]);if(o=r,!(!h(r)&&void 0===t||eu(t)))return f(r)||(r=function(t,r){if("function"==typeof o&&(r=o.call(this,t,r)),!eu(r))return r}),a[1]=r,K.apply(null,a);// IE8 returns string on undefined
}}),Z[H][W]||O(Z[H],W,Z[H].valueOf),// `Symbol.prototype[@@toStringTag]` property
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag
U(Z,z),L[V]=!0},{"../internals/an-object":28,"../internals/array-iteration":37,"../internals/create-non-enumerable-property":56,"../internals/create-property-descriptor":57,"../internals/define-well-known-symbol":60,"../internals/descriptors":61,"../internals/export":68,"../internals/fails":69,"../internals/get-built-in":74,"../internals/global":77,"../internals/has":78,"../internals/hidden-keys":79,"../internals/internal-state":88,"../internals/is-array":90,"../internals/is-object":92,"../internals/is-pure":93,"../internals/native-symbol":101,"../internals/object-create":108,"../internals/object-define-property":110,"../internals/object-get-own-property-descriptor":111,"../internals/object-get-own-property-names":113,"../internals/object-get-own-property-names-external":112,"../internals/object-get-own-property-symbols":114,"../internals/object-keys":117,"../internals/object-property-is-enumerable":118,"../internals/redefine":126,"../internals/set-to-string-tag":135,"../internals/shared":138,"../internals/shared-key":136,"../internals/to-indexed-object":152,"../internals/to-object":155,"../internals/to-primitive":158,"../internals/uid":163,"../internals/use-symbol-as-uid":164,"../internals/well-known-symbol":166,"../internals/well-known-symbol-wrapped":165}],221:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-copy-within"),s=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.copywithin
(0,o.exportTypedArrayMethod)("copyWithin",function(t,r/* , end */){return a.call(s(this),t,r,arguments.length>2?arguments[2]:void 0)})},{"../internals/array-buffer-view-core":30,"../internals/array-copy-within":32}],222:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-iteration").every,s=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.every
(0,o.exportTypedArrayMethod)("every",function(t/* , thisArg */){return a(s(this),t,arguments.length>1?arguments[1]:void 0)})},{"../internals/array-buffer-view-core":30,"../internals/array-iteration":37}],223:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-fill"),s=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.fill
// eslint-disable-next-line no-unused-vars
(0,o.exportTypedArrayMethod)("fill",function(t/* , start, end */){return a.apply(s(this),arguments)})},{"../internals/array-buffer-view-core":30,"../internals/array-fill":33}],224:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-iteration").filter,s=t("../internals/species-constructor"),l=o.aTypedArray,c=o.aTypedArrayConstructor;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.filter
(0,o.exportTypedArrayMethod)("filter",function(t/* , thisArg */){for(var r=a(l(this),t,arguments.length>1?arguments[1]:void 0),n=s(this,this.constructor),o=0,u=r.length,p=new(c(n))(u);u>o;)p[o]=r[o++];return p})},{"../internals/array-buffer-view-core":30,"../internals/array-iteration":37,"../internals/species-constructor":139}],225:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-iteration").findIndex,s=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.findindex
(0,o.exportTypedArrayMethod)("findIndex",function(t/* , thisArg */){return a(s(this),t,arguments.length>1?arguments[1]:void 0)})},{"../internals/array-buffer-view-core":30,"../internals/array-iteration":37}],226:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-iteration").find,s=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.find
(0,o.exportTypedArrayMethod)("find",function(t/* , thisArg */){return a(s(this),t,arguments.length>1?arguments[1]:void 0)})},{"../internals/array-buffer-view-core":30,"../internals/array-iteration":37}],227:[function(t,r,n){// https://tc39.github.io/ecma262/#sec-typedarray-objects
t("../internals/typed-array-constructor")("Float32",function(t){return function(r,n,o){return t(this,r,n,o)}})},{"../internals/typed-array-constructor":160}],228:[function(t,r,n){// https://tc39.github.io/ecma262/#sec-typedarray-objects
t("../internals/typed-array-constructor")("Float64",function(t){return function(r,n,o){return t(this,r,n,o)}})},{"../internals/typed-array-constructor":160}],229:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-iteration").forEach,s=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.foreach
(0,o.exportTypedArrayMethod)("forEach",function(t/* , thisArg */){a(s(this),t,arguments.length>1?arguments[1]:void 0)})},{"../internals/array-buffer-view-core":30,"../internals/array-iteration":37}],230:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-includes").includes,s=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.includes
(0,o.exportTypedArrayMethod)("includes",function(t/* , fromIndex */){return a(s(this),t,arguments.length>1?arguments[1]:void 0)})},{"../internals/array-buffer-view-core":30,"../internals/array-includes":36}],231:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-includes").indexOf,s=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.indexof
(0,o.exportTypedArrayMethod)("indexOf",function(t/* , fromIndex */){return a(s(this),t,arguments.length>1?arguments[1]:void 0)})},{"../internals/array-buffer-view-core":30,"../internals/array-includes":36}],232:[function(t,r,n){// https://tc39.github.io/ecma262/#sec-typedarray-objects
t("../internals/typed-array-constructor")("Int16",function(t){return function(r,n,o){return t(this,r,n,o)}})},{"../internals/typed-array-constructor":160}],233:[function(t,r,n){// https://tc39.github.io/ecma262/#sec-typedarray-objects
t("../internals/typed-array-constructor")("Int32",function(t){return function(r,n,o){return t(this,r,n,o)}})},{"../internals/typed-array-constructor":160}],234:[function(t,r,n){var o=t("../internals/global"),a=t("../internals/array-buffer-view-core"),s=t("../modules/es.array.iterator"),l=t("../internals/well-known-symbol")("iterator"),c=o.Uint8Array,u=s.values,p=s.keys,d=s.entries,m=a.aTypedArray,f=a.exportTypedArrayMethod,h=c&&c.prototype[l],y=!!h&&("values"==h.name||void 0==h.name),g=function(){return u.call(m(this))};// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.entries
f("entries",function(){return d.call(m(this))}),// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.keys
f("keys",function(){return p.call(m(this))}),// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.values
f("values",g,!y),// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype-@@iterator
f(l,g,!y)},{"../internals/array-buffer-view-core":30,"../internals/global":77,"../internals/well-known-symbol":166,"../modules/es.array.iterator":178}],235:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=o.aTypedArray,s=o.exportTypedArrayMethod,l=[].join;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.join
// eslint-disable-next-line no-unused-vars
s("join",function(t){return l.apply(a(this),arguments)})},{"../internals/array-buffer-view-core":30}],236:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-last-index-of"),s=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.lastindexof
// eslint-disable-next-line no-unused-vars
(0,o.exportTypedArrayMethod)("lastIndexOf",function(t/* , fromIndex */){return a.apply(s(this),arguments)})},{"../internals/array-buffer-view-core":30,"../internals/array-last-index-of":38}],237:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-iteration").map,s=t("../internals/species-constructor"),l=o.aTypedArray,c=o.aTypedArrayConstructor;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.map
(0,o.exportTypedArrayMethod)("map",function(t/* , thisArg */){return a(l(this),t,arguments.length>1?arguments[1]:void 0,function(t,r){return new(c(s(t,t.constructor)))(r)})})},{"../internals/array-buffer-view-core":30,"../internals/array-iteration":37,"../internals/species-constructor":139}],238:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-reduce").right,s=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduceright
(0,o.exportTypedArrayMethod)("reduceRight",function(t/* , initialValue */){return a(s(this),t,arguments.length,arguments.length>1?arguments[1]:void 0)})},{"../internals/array-buffer-view-core":30,"../internals/array-reduce":42}],239:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-reduce").left,s=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduce
(0,o.exportTypedArrayMethod)("reduce",function(t/* , initialValue */){return a(s(this),t,arguments.length,arguments.length>1?arguments[1]:void 0)})},{"../internals/array-buffer-view-core":30,"../internals/array-reduce":42}],240:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=o.aTypedArray,s=o.exportTypedArrayMethod,l=Math.floor;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reverse
s("reverse",function(){for(var t,r=this,n=a(r).length,o=l(n/2),s=0;s<o;)t=r[s],r[s++]=r[--n],r[n]=t;return r})},{"../internals/array-buffer-view-core":30}],241:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/to-length"),s=t("../internals/to-offset"),l=t("../internals/to-object"),c=t("../internals/fails"),u=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.set
(0,o.exportTypedArrayMethod)("set",function(t/* , offset */){u(this);var r=s(arguments.length>1?arguments[1]:void 0,1),n=this.length,o=l(t),c=a(o.length),p=0;if(c+r>n)throw RangeError("Wrong length");for(;p<c;)this[r+p]=o[p++]},c(function(){// eslint-disable-next-line no-undef
new Int8Array(1).set({})}))},{"../internals/array-buffer-view-core":30,"../internals/fails":69,"../internals/to-length":154,"../internals/to-object":155,"../internals/to-offset":156}],242:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/species-constructor"),s=t("../internals/fails"),l=o.aTypedArray,c=o.aTypedArrayConstructor,u=o.exportTypedArrayMethod,p=[].slice;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.slice
u("slice",function(t,r){for(var n=p.call(l(this),t,r),o=a(this,this.constructor),s=0,u=n.length,d=new(c(o))(u);u>s;)d[s]=n[s++];return d},s(function(){// eslint-disable-next-line no-undef
new Int8Array(1).slice()}))},{"../internals/array-buffer-view-core":30,"../internals/fails":69,"../internals/species-constructor":139}],243:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/array-iteration").some,s=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.some
(0,o.exportTypedArrayMethod)("some",function(t/* , thisArg */){return a(s(this),t,arguments.length>1?arguments[1]:void 0)})},{"../internals/array-buffer-view-core":30,"../internals/array-iteration":37}],244:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=o.aTypedArray,s=o.exportTypedArrayMethod,l=[].sort;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.sort
s("sort",function(t){return l.call(a(this),t)})},{"../internals/array-buffer-view-core":30}],245:[function(t,r,n){var o=t("../internals/array-buffer-view-core"),a=t("../internals/to-length"),s=t("../internals/to-absolute-index"),l=t("../internals/species-constructor"),c=o.aTypedArray;// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.subarray
(0,o.exportTypedArrayMethod)("subarray",function(t,r){var n=c(this),o=n.length,u=s(t,o);return new(l(n,n.constructor))(n.buffer,n.byteOffset+u*n.BYTES_PER_ELEMENT,a((void 0===r?o:s(r,o))-u))})},{"../internals/array-buffer-view-core":30,"../internals/species-constructor":139,"../internals/to-absolute-index":150,"../internals/to-length":154}],246:[function(t,r,n){var o=t("../internals/global"),a=t("../internals/array-buffer-view-core"),s=t("../internals/fails"),l=o.Int8Array,c=a.aTypedArray,u=a.exportTypedArrayMethod,p=[].toLocaleString,d=[].slice,m=!!l&&s(function(){p.call(new l(1))});// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tolocalestring
u("toLocaleString",function(){return p.apply(m?d.call(c(this)):c(this),arguments)},s(function(){return[1,2].toLocaleString()!=new l([1,2]).toLocaleString()})||!s(function(){l.prototype.toLocaleString.call([1,2])}))},{"../internals/array-buffer-view-core":30,"../internals/fails":69,"../internals/global":77}],247:[function(t,r,n){var o=t("../internals/array-buffer-view-core").exportTypedArrayMethod,a=t("../internals/fails"),s=t("../internals/global").Uint8Array,l=s&&s.prototype||{},c=[].toString,u=[].join;a(function(){c.call({})})&&(c=function(){return u.call(this)});var p=l.toString!=c;// `%TypedArray%.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tostring
o("toString",c,p)},{"../internals/array-buffer-view-core":30,"../internals/fails":69,"../internals/global":77}],248:[function(t,r,n){// https://tc39.github.io/ecma262/#sec-typedarray-objects
t("../internals/typed-array-constructor")("Uint16",function(t){return function(r,n,o){return t(this,r,n,o)}})},{"../internals/typed-array-constructor":160}],249:[function(t,r,n){// https://tc39.github.io/ecma262/#sec-typedarray-objects
t("../internals/typed-array-constructor")("Uint32",function(t){return function(r,n,o){return t(this,r,n,o)}})},{"../internals/typed-array-constructor":160}],250:[function(t,r,n){// https://tc39.github.io/ecma262/#sec-typedarray-objects
t("../internals/typed-array-constructor")("Uint8",function(t){return function(r,n,o){return t(this,r,n,o)}})},{"../internals/typed-array-constructor":160}],251:[function(t,r,n){// https://tc39.github.io/ecma262/#sec-typedarray-objects
t("../internals/typed-array-constructor")("Uint8",function(t){return function(r,n,o){return t(this,r,n,o)}},!0)},{"../internals/typed-array-constructor":160}],252:[function(t,r,n){var o,a=t("../internals/global"),s=t("../internals/redefine-all"),l=t("../internals/internal-metadata"),c=t("../internals/collection"),u=t("../internals/collection-weak"),p=t("../internals/is-object"),d=t("../internals/internal-state").enforce,m=t("../internals/native-weak-map"),f=!a.ActiveXObject&&"ActiveXObject"in a,h=Object.isExtensible,y=function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}},g=r.exports=c("WeakMap",y,u);// We can't use feature detection because it crash some old IE builds
// https://github.com/zloirock/core-js/issues/485
if(m&&f){o=u.getConstructor(y,"WeakMap",!0),l.REQUIRED=!0;var v=g.prototype,b=v.delete,x=v.has,j=v.get,w=v.set;s(v,{delete:function(t){if(p(t)&&!h(t)){var r=d(this);return r.frozen||(r.frozen=new o),b.call(this,t)||r.frozen.delete(t)}return b.call(this,t)},has:function(t){if(p(t)&&!h(t)){var r=d(this);return r.frozen||(r.frozen=new o),x.call(this,t)||r.frozen.has(t)}return x.call(this,t)},get:function(t){if(p(t)&&!h(t)){var r=d(this);return r.frozen||(r.frozen=new o),x.call(this,t)?j.call(this,t):r.frozen.get(t)}return j.call(this,t)},set:function(t,r){if(p(t)&&!h(t)){var n=d(this);n.frozen||(n.frozen=new o),x.call(this,t)?w.call(this,t,r):n.frozen.set(t,r)}else w.call(this,t,r);return this}})}},{"../internals/collection":50,"../internals/collection-weak":49,"../internals/global":77,"../internals/internal-metadata":87,"../internals/internal-state":88,"../internals/is-object":92,"../internals/native-weak-map":103,"../internals/redefine-all":125}],253:[function(t,r,n){var o=t("../internals/global"),a=t("../internals/dom-iterables"),s=t("../internals/array-for-each"),l=t("../internals/create-non-enumerable-property");for(var c in a){var u=o[c],p=u&&u.prototype;if(p&&p.forEach!==s)try{l(p,"forEach",s)}catch(t){p.forEach=s}}},{"../internals/array-for-each":34,"../internals/create-non-enumerable-property":56,"../internals/dom-iterables":63,"../internals/global":77}],254:[function(t,r,n){var o=t("../internals/global"),a=t("../internals/dom-iterables"),s=t("../modules/es.array.iterator"),l=t("../internals/create-non-enumerable-property"),c=t("../internals/well-known-symbol"),u=c("iterator"),p=c("toStringTag"),d=s.values;for(var m in a){var f=o[m],h=f&&f.prototype;if(h){// some Chrome versions have non-configurable methods on DOMTokenList
if(h[u]!==d)try{l(h,u,d)}catch(t){h[u]=d}if(h[p]||l(h,p,m),a[m]){for(var y in s)// some Chrome versions have non-configurable methods on DOMTokenList
if(h[y]!==s[y])try{l(h,y,s[y])}catch(t){h[y]=s[y]}}}}},{"../internals/create-non-enumerable-property":56,"../internals/dom-iterables":63,"../internals/global":77,"../internals/well-known-symbol":166,"../modules/es.array.iterator":178}],255:[function(t,r,n){t("../modules/es.array.iterator");var o=t("../internals/export"),a=t("../internals/get-built-in"),s=t("../internals/native-url"),l=t("../internals/redefine"),c=t("../internals/redefine-all"),u=t("../internals/set-to-string-tag"),p=t("../internals/create-iterator-constructor"),d=t("../internals/internal-state"),m=t("../internals/an-instance"),f=t("../internals/has"),h=t("../internals/function-bind-context"),y=t("../internals/classof"),g=t("../internals/an-object"),v=t("../internals/is-object"),b=t("../internals/object-create"),x=t("../internals/create-property-descriptor"),j=t("../internals/get-iterator"),w=t("../internals/get-iterator-method"),_=t("../internals/well-known-symbol"),S=a("fetch"),E=a("Headers"),T=_("iterator"),M="URLSearchParams",C=M+"Iterator",O=d.set,N=d.getterFor(M),A=d.getterFor(C),R=/\+/g,L=[,,,,],I=function(t){return L[t-1]||(L[t-1]=RegExp("((?:%[\\da-f]{2}){"+t+"})","gi"))},P=function(t){try{return decodeURIComponent(t)}catch(r){return t}},D=function(t){var r=t.replace(R," "),n=4;try{return decodeURIComponent(r)}catch(t){for(;n;)r=r.replace(I(n--),P);return r}},F=/[!'()~]|%20/g,U={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"},B=function(t){return U[t]},G=function(t){return encodeURIComponent(t).replace(F,B)},V=function(t,r){if(r)for(var n,o,a=r.split("&"),s=0;s<a.length;)(n=a[s++]).length&&(o=n.split("="),t.push({key:D(o.shift()),value:D(o.join("="))}))},z=function(t){this.entries.length=0,V(this.entries,t)},H=function(t,r){if(t<r)throw TypeError("Not enough arguments")},W=p(function(t,r){O(this,{type:C,iterator:j(N(t).entries),kind:r})},"Iterator",function(){var t=A(this),r=t.kind,n=t.iterator.next(),o=n.value;return n.done||(n.value="keys"===r?o.key:"values"===r?o.value:[o.key,o.value]),n}),q=function()/* init */{m(this,q,M);var t,r,n,o,a,s,l,c,u,p=arguments.length>0?arguments[0]:void 0,d=this,h=[];if(O(d,{type:M,entries:h,updateURL:function(){/* empty */},updateSearchParams:z}),void 0!==p){if(v(p)){if("function"==typeof(t=w(p)))for(n=(r=t.call(p)).next;!(o=n.call(r)).done;){if((l=(s=(a=j(g(o.value))).next).call(a)).done||(c=s.call(a)).done||!s.call(a).done)throw TypeError("Expected sequence with length 2");h.push({key:l.value+"",value:c.value+""})}else for(u in p)f(p,u)&&h.push({key:u,value:p[u]+""})}else V(h,"string"==typeof p?"?"===p.charAt(0)?p.slice(1):p:p+"")}},X=q.prototype;c(X,{// `URLSearchParams.prototype.appent` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-append
append:function(t,r){H(arguments.length,2);var n=N(this);n.entries.push({key:t+"",value:r+""}),n.updateURL()},// `URLSearchParams.prototype.delete` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-delete
delete:function(t){H(arguments.length,1);for(var r=N(this),n=r.entries,o=t+"",a=0;a<n.length;)n[a].key===o?n.splice(a,1):a++;r.updateURL()},// `URLSearchParams.prototype.get` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-get
get:function(t){H(arguments.length,1);for(var r=N(this).entries,n=t+"",o=0;o<r.length;o++)if(r[o].key===n)return r[o].value;return null},// `URLSearchParams.prototype.getAll` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-getall
getAll:function(t){H(arguments.length,1);for(var r=N(this).entries,n=t+"",o=[],a=0;a<r.length;a++)r[a].key===n&&o.push(r[a].value);return o},// `URLSearchParams.prototype.has` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-has
has:function(t){H(arguments.length,1);for(var r=N(this).entries,n=t+"",o=0;o<r.length;)if(r[o++].key===n)return!0;return!1},// `URLSearchParams.prototype.set` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-set
set:function(t,r){H(arguments.length,1);for(var n,o=N(this),a=o.entries,s=!1,l=t+"",c=r+"",u=0;u<a.length;u++)(n=a[u]).key===l&&(s?a.splice(u--,1):(s=!0,n.value=c));s||a.push({key:l,value:c}),o.updateURL()},// `URLSearchParams.prototype.sort` method
// https://url.spec.whatwg.org/#dom-urlsearchparams-sort
sort:function(){var t,r,n,o=N(this),a=o.entries,s=a.slice();for(n=0,a.length=0;n<s.length;n++){for(r=0,t=s[n];r<n;r++)if(a[r].key>t.key){a.splice(r,0,t);break}r===n&&a.push(t)}o.updateURL()},// `URLSearchParams.prototype.forEach` method
forEach:function(t/* , thisArg */){for(var r,n=N(this).entries,o=h(t,arguments.length>1?arguments[1]:void 0,3),a=0;a<n.length;)o((r=n[a++]).value,r.key,this)},// `URLSearchParams.prototype.keys` method
keys:function(){return new W(this,"keys")},// `URLSearchParams.prototype.values` method
values:function(){return new W(this,"values")},// `URLSearchParams.prototype.entries` method
entries:function(){return new W(this,"entries")}},{enumerable:!0}),l(X,T,X.entries),// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior
l(X,"toString",function(){for(var t,r=N(this).entries,n=[],o=0;o<r.length;)n.push(G((t=r[o++]).key)+"="+G(t.value));return n.join("&")},{enumerable:!0}),u(q,M),o({global:!0,forced:!s},{URLSearchParams:q}),s||"function"!=typeof S||"function"!=typeof E||o({global:!0,enumerable:!0,forced:!0},{fetch:function(t/* , init */){var r,n,o,a=[t];return arguments.length>1&&(r=arguments[1],v(r)&&y(n=r.body)===M&&((o=r.headers?new E(r.headers):new E).has("content-type")||o.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"),r=b(r,{body:x(0,String(n)),headers:x(0,o)})),a.push(r)),S.apply(this,a)}}),r.exports={URLSearchParams:q,getState:N}},{"../internals/an-instance":27,"../internals/an-object":28,"../internals/classof":47,"../internals/create-iterator-constructor":55,"../internals/create-property-descriptor":57,"../internals/export":68,"../internals/function-bind-context":72,"../internals/get-built-in":74,"../internals/get-iterator":76,"../internals/get-iterator-method":75,"../internals/has":78,"../internals/internal-state":88,"../internals/is-object":92,"../internals/native-url":102,"../internals/object-create":108,"../internals/redefine":126,"../internals/redefine-all":125,"../internals/set-to-string-tag":135,"../internals/well-known-symbol":166,"../modules/es.array.iterator":178}],256:[function(t,r,n){t("../modules/es.string.iterator");var o,a=t("../internals/export"),s=t("../internals/descriptors"),l=t("../internals/native-url"),c=t("../internals/global"),u=t("../internals/object-define-properties"),p=t("../internals/redefine"),d=t("../internals/an-instance"),m=t("../internals/has"),f=t("../internals/object-assign"),h=t("../internals/array-from"),y=t("../internals/string-multibyte").codeAt,g=t("../internals/string-punycode-to-ascii"),v=t("../internals/set-to-string-tag"),b=t("../modules/web.url-search-params"),x=t("../internals/internal-state"),j=c.URL,w=b.URLSearchParams,_=b.getState,S=x.set,E=x.getterFor("URL"),T=Math.floor,M=Math.pow,C="Invalid authority",O="Invalid scheme",N="Invalid host",A="Invalid port",R=/[A-Za-z]/,L=/[\d+-.A-Za-z]/,I=/\d/,P=/^(0x|0X)/,D=/^[0-7]+$/,F=/^\d+$/,U=/^[\dA-Fa-f]+$/,B=/[\u0000\u0009\u000A\u000D #%/:?@[\\]]/,G=/[\u0000\u0009\u000A\u000D #/:?@[\\]]/,V=/^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g,z=/[\u0009\u000A\u000D]/g,H=function(t,r){var n,o,a;if("["==r.charAt(0)){if("]"!=r.charAt(r.length-1)||!(n=q(r.slice(1,-1))))return N;t.host=n;// opaque host
}else if(et(t)){if(r=g(r),B.test(r)||null===(n=W(r)))return N;t.host=n}else{if(G.test(r))return N;for(a=0,n="",o=h(r);a<o.length;a++)n+=$(o[a],Z);t.host=n}},W=function(t){var r,n,o,a,s,l,c,u=t.split(".");if(u.length&&""==u[u.length-1]&&u.pop(),(r=u.length)>4)return t;for(o=0,n=[];o<r;o++){if(""==(a=u[o]))return t;if(s=10,a.length>1&&"0"==a.charAt(0)&&(s=P.test(a)?16:8,a=a.slice(8==s?1:2)),""===a)l=0;else{if(!(10==s?F:8==s?D:U).test(a))return t;l=parseInt(a,s)}n.push(l)}for(o=0;o<r;o++)if(l=n[o],o==r-1){if(l>=M(256,5-r))return null}else if(l>255)return null;for(o=0,c=n.pop();o<n.length;o++)c+=n[o]*M(256,3-o);return c},q=function(t){var r,n,o,a,s,l,c,u=[0,0,0,0,0,0,0,0],p=0,d=null,m=0,f=function(){return t.charAt(m)};if(":"==f()){if(":"!=t.charAt(1))return;m+=2,d=++p}for(;f();){if(8==p)return;if(":"==f()){if(null!==d)return;m++,d=++p;continue}for(r=n=0;n<4&&U.test(f());)r=16*r+parseInt(f(),16),m++,n++;if("."==f()){if(0==n||(m-=n,p>6))return;for(o=0;f();){if(a=null,o>0){if("."!=f()||!(o<4))return;m++}if(!I.test(f()))return;for(;I.test(f());){if(s=parseInt(f(),10),null===a)a=s;else{if(0==a)return;a=10*a+s}if(a>255)return;m++}u[p]=256*u[p]+a,(2==++o||4==o)&&p++}if(4!=o)return;break}if(":"==f()){if(m++,!f())return}else if(f())return;u[p++]=r}if(null!==d)for(l=p-d,p=7;0!=p&&l>0;)c=u[p],u[p--]=u[d+l-1],u[d+--l]=c;else if(8!=p)return;return u},X=function(t){for(var r=null,n=1,o=null,a=0,s=0;s<8;s++)0!==t[s]?(a>n&&(r=o,n=a),o=null,a=0):(null===o&&(o=s),++a);return a>n&&(r=o,n=a),r},Y=function(t){var r,n,o,a;// ipv4
if("number"==typeof t){for(n=0,r=[];n<4;n++)r.unshift(t%256),t=T(t/256);return r.join(".");// ipv6
}if("object"==typeof t){for(n=0,r="",o=X(t);n<8;n++)(!a||0!==t[n])&&(a&&(a=!1),o===n?(r+=n?":":"::",a=!0):(r+=t[n].toString(16),n<7&&(r+=":")));return"["+r+"]"}return t},Z={},K=f({},Z,{" ":1,'"':1,"<":1,">":1,"`":1}),J=f({},K,{"#":1,"?":1,"{":1,"}":1}),Q=f({},J,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1}),$=function(t,r){var n=y(t,0);return n>32&&n<127&&!m(r,t)?t:encodeURIComponent(t)},ee={ftp:21,file:null,http:80,https:443,ws:80,wss:443},et=function(t){return m(ee,t.scheme)},er=function(t){return""!=t.username||""!=t.password},en=function(t){return!t.host||t.cannotBeABaseURL||"file"==t.scheme},eo=function(t,r){var n;return 2==t.length&&R.test(t.charAt(0))&&(":"==(n=t.charAt(1))||!r&&"|"==n)},ea=function(t){var r;return t.length>1&&eo(t.slice(0,2))&&(2==t.length||"/"===(r=t.charAt(2))||"\\"===r||"?"===r||"#"===r)},es=function(t){var r=t.path,n=r.length;n&&("file"!=t.scheme||1!=n||!eo(r[0],!0))&&r.pop()},ei=function(t){return"."===t||"%2e"===t.toLowerCase()},el=function(t){return".."===(t=t.toLowerCase())||"%2e."===t||".%2e"===t||"%2e%2e"===t},ec={},eu={},ep={},ed={},em={},ef={},eh={},ey={},eg={},ev={},eb={},ex={},ej={},ew={},e_={},eS={},eE={},eT={},ek={},eM={},eC={},eO=function(t,r,n,a){var s,l,c,u,p=n||ec,d=0,f="",y=!1,g=!1,v=!1;for(n||(t.scheme="",t.username="",t.password="",t.host=null,t.port=null,t.path=[],t.query=null,t.fragment=null,t.cannotBeABaseURL=!1,r=r.replace(V,"")),s=h(r=r.replace(z,""));d<=s.length;){switch(l=s[d],p){case ec:if(l&&R.test(l))f+=l.toLowerCase(),p=eu;else{if(n)return O;p=ep;continue}break;case eu:if(l&&(L.test(l)||"+"==l||"-"==l||"."==l))f+=l.toLowerCase();else if(":"==l){if(n&&(et(t)!=m(ee,f)||"file"==f&&(er(t)||null!==t.port)||"file"==t.scheme&&!t.host))return;if(t.scheme=f,n){et(t)&&ee[t.scheme]==t.port&&(t.port=null);return}f="","file"==t.scheme?p=ew:et(t)&&a&&a.scheme==t.scheme?p=ed:et(t)?p=ey:"/"==s[d+1]?(p=em,d++):(t.cannotBeABaseURL=!0,t.path.push(""),p=ek)}else{if(n)return O;f="",p=ep,d=0;continue}break;case ep:if(!a||a.cannotBeABaseURL&&"#"!=l)return O;if(a.cannotBeABaseURL&&"#"==l){t.scheme=a.scheme,t.path=a.path.slice(),t.query=a.query,t.fragment="",t.cannotBeABaseURL=!0,p=eC;break}p="file"==a.scheme?ew:ef;continue;case ed:if("/"==l&&"/"==s[d+1])p=eg,d++;else{p=ef;continue}break;case em:if("/"==l){p=ev;break}p=eT;continue;case ef:if(t.scheme=a.scheme,l==o)t.username=a.username,t.password=a.password,t.host=a.host,t.port=a.port,t.path=a.path.slice(),t.query=a.query;else if("/"==l||"\\"==l&&et(t))p=eh;else if("?"==l)t.username=a.username,t.password=a.password,t.host=a.host,t.port=a.port,t.path=a.path.slice(),t.query="",p=eM;else if("#"==l)t.username=a.username,t.password=a.password,t.host=a.host,t.port=a.port,t.path=a.path.slice(),t.query=a.query,t.fragment="",p=eC;else{t.username=a.username,t.password=a.password,t.host=a.host,t.port=a.port,t.path=a.path.slice(),t.path.pop(),p=eT;continue}break;case eh:if(et(t)&&("/"==l||"\\"==l))p=eg;else if("/"==l)p=ev;else{t.username=a.username,t.password=a.password,t.host=a.host,t.port=a.port,p=eT;continue}break;case ey:if(p=eg,"/"!=l||"/"!=f.charAt(d+1))continue;d++;break;case eg:if("/"!=l&&"\\"!=l){p=ev;continue}break;case ev:if("@"==l){y&&(f="%40"+f),y=!0,c=h(f);for(var b=0;b<c.length;b++){var x=c[b];if(":"==x&&!v){v=!0;continue}var j=$(x,Q);v?t.password+=j:t.username+=j}f=""}else if(l==o||"/"==l||"?"==l||"#"==l||"\\"==l&&et(t)){if(y&&""==f)return C;d-=h(f).length+1,f="",p=eb}else f+=l;break;case eb:case ex:if(n&&"file"==t.scheme){p=eS;continue}if(":"!=l||g){if(l==o||"/"==l||"?"==l||"#"==l||"\\"==l&&et(t)){if(et(t)&&""==f)return N;if(n&&""==f&&(er(t)||null!==t.port))return;if(u=H(t,f))return u;if(f="",p=eE,n)return;continue}"["==l?g=!0:"]"==l&&(g=!1),f+=l}else{if(""==f)return N;if(u=H(t,f))return u;if(f="",p=ej,n==ex)return}break;case ej:if(I.test(l))f+=l;else{if(!(l==o||"/"==l||"?"==l||"#"==l||"\\"==l&&et(t))&&!n)return A;if(""!=f){var w=parseInt(f,10);if(w>65535)return A;t.port=et(t)&&w===ee[t.scheme]?null:w,f=""}if(n)return;p=eE;continue}break;case ew:if(t.scheme="file","/"==l||"\\"==l)p=e_;else if(a&&"file"==a.scheme){if(l==o)t.host=a.host,t.path=a.path.slice(),t.query=a.query;else if("?"==l)t.host=a.host,t.path=a.path.slice(),t.query="",p=eM;else if("#"==l)t.host=a.host,t.path=a.path.slice(),t.query=a.query,t.fragment="",p=eC;else{ea(s.slice(d).join(""))||(t.host=a.host,t.path=a.path.slice(),es(t)),p=eT;continue}}else{p=eT;continue}break;case e_:if("/"==l||"\\"==l){p=eS;break}a&&"file"==a.scheme&&!ea(s.slice(d).join(""))&&(eo(a.path[0],!0)?t.path.push(a.path[0]):t.host=a.host),p=eT;continue;case eS:if(l==o||"/"==l||"\\"==l||"?"==l||"#"==l){if(!n&&eo(f))p=eT;else if(""==f){if(t.host="",n)return;p=eE}else{if(u=H(t,f))return u;if("localhost"==t.host&&(t.host=""),n)return;f="",p=eE}continue}f+=l;break;case eE:if(et(t)){if(p=eT,"/"!=l&&"\\"!=l)continue}else if(n||"?"!=l){if(n||"#"!=l){if(l!=o&&(p=eT,"/"!=l))continue}else t.fragment="",p=eC}else t.query="",p=eM;break;case eT:if(l==o||"/"==l||"\\"==l&&et(t)||!n&&("?"==l||"#"==l)){if(el(f)?(es(t),"/"==l||"\\"==l&&et(t)||t.path.push("")):ei(f)?"/"==l||"\\"==l&&et(t)||t.path.push(""):("file"==t.scheme&&!t.path.length&&eo(f)&&(t.host&&(t.host=""),f=f.charAt(0)+":"),t.path.push(f)),f="","file"==t.scheme&&(l==o||"?"==l||"#"==l))for(;t.path.length>1&&""===t.path[0];)t.path.shift();"?"==l?(t.query="",p=eM):"#"==l&&(t.fragment="",p=eC)}else f+=$(l,J);break;case ek:"?"==l?(t.query="",p=eM):"#"==l?(t.fragment="",p=eC):l!=o&&(t.path[0]+=$(l,Z));break;case eM:n||"#"!=l?l!=o&&("'"==l&&et(t)?t.query+="%27":"#"==l?t.query+="%23":t.query+=$(l,Z)):(t.fragment="",p=eC);break;case eC:l!=o&&(t.fragment+=$(l,K))}d++}},eN=function(t/* , base */){var r,n,o=d(this,eN,"URL"),a=arguments.length>1?arguments[1]:void 0,l=String(t),c=S(o,{type:"URL"});if(void 0!==a){if(a instanceof eN)r=E(a);else if(n=eO(r={},String(a)))throw TypeError(n)}if(n=eO(c,l,null,r))throw TypeError(n);var u=c.searchParams=new w,p=_(u);p.updateSearchParams(c.query),p.updateURL=function(){c.query=String(u)||null},s||(o.href=eR.call(o),o.origin=eL.call(o),o.protocol=eI.call(o),o.username=eP.call(o),o.password=eD.call(o),o.host=eF.call(o),o.hostname=eU.call(o),o.port=eB.call(o),o.pathname=eG.call(o),o.search=eV.call(o),o.searchParams=ez.call(o),o.hash=eH.call(o))},eA=eN.prototype,eR=function(){var t=E(this),r=t.scheme,n=t.username,o=t.password,a=t.host,s=t.port,l=t.path,c=t.query,u=t.fragment,p=r+":";return null!==a?(p+="//",er(t)&&(p+=n+(o?":"+o:"")+"@"),p+=Y(a),null!==s&&(p+=":"+s)):"file"==r&&(p+="//"),p+=t.cannotBeABaseURL?l[0]:l.length?"/"+l.join("/"):"",null!==c&&(p+="?"+c),null!==u&&(p+="#"+u),p},eL=function(){var t=E(this),r=t.scheme,n=t.port;if("blob"==r)try{return new URL(r.path[0]).origin}catch(t){return"null"}return"file"!=r&&et(t)?r+"://"+Y(t.host)+(null!==n?":"+n:""):"null"},eI=function(){return E(this).scheme+":"},eP=function(){return E(this).username},eD=function(){return E(this).password},eF=function(){var t=E(this),r=t.host,n=t.port;return null===r?"":null===n?Y(r):Y(r)+":"+n},eU=function(){var t=E(this).host;return null===t?"":Y(t)},eB=function(){var t=E(this).port;return null===t?"":String(t)},eG=function(){var t=E(this),r=t.path;return t.cannotBeABaseURL?r[0]:r.length?"/"+r.join("/"):""},eV=function(){var t=E(this).query;return t?"?"+t:""},ez=function(){return E(this).searchParams},eH=function(){var t=E(this).fragment;return t?"#"+t:""},eW=function(t,r){return{get:t,set:r,configurable:!0,enumerable:!0}};if(s&&u(eA,{// `URL.prototype.href` accessors pair
// https://url.spec.whatwg.org/#dom-url-href
href:eW(eR,function(t){var r=E(this),n=eO(r,String(t));if(n)throw TypeError(n);_(r.searchParams).updateSearchParams(r.query)}),// `URL.prototype.origin` getter
// https://url.spec.whatwg.org/#dom-url-origin
origin:eW(eL),// `URL.prototype.protocol` accessors pair
// https://url.spec.whatwg.org/#dom-url-protocol
protocol:eW(eI,function(t){eO(E(this),String(t)+":",ec)}),// `URL.prototype.username` accessors pair
// https://url.spec.whatwg.org/#dom-url-username
username:eW(eP,function(t){var r=E(this),n=h(String(t));if(!en(r)){r.username="";for(var o=0;o<n.length;o++)r.username+=$(n[o],Q)}}),// `URL.prototype.password` accessors pair
// https://url.spec.whatwg.org/#dom-url-password
password:eW(eD,function(t){var r=E(this),n=h(String(t));if(!en(r)){r.password="";for(var o=0;o<n.length;o++)r.password+=$(n[o],Q)}}),// `URL.prototype.host` accessors pair
// https://url.spec.whatwg.org/#dom-url-host
host:eW(eF,function(t){var r=E(this);r.cannotBeABaseURL||eO(r,String(t),eb)}),// `URL.prototype.hostname` accessors pair
// https://url.spec.whatwg.org/#dom-url-hostname
hostname:eW(eU,function(t){var r=E(this);r.cannotBeABaseURL||eO(r,String(t),ex)}),// `URL.prototype.port` accessors pair
// https://url.spec.whatwg.org/#dom-url-port
port:eW(eB,function(t){var r=E(this);en(r)||(""==(t=String(t))?r.port=null:eO(r,t,ej))}),// `URL.prototype.pathname` accessors pair
// https://url.spec.whatwg.org/#dom-url-pathname
pathname:eW(eG,function(t){var r=E(this);r.cannotBeABaseURL||(r.path=[],eO(r,t+"",eE))}),// `URL.prototype.search` accessors pair
// https://url.spec.whatwg.org/#dom-url-search
search:eW(eV,function(t){var r=E(this);""==(t=String(t))?r.query=null:("?"==t.charAt(0)&&(t=t.slice(1)),r.query="",eO(r,t,eM)),_(r.searchParams).updateSearchParams(r.query)}),// `URL.prototype.searchParams` getter
// https://url.spec.whatwg.org/#dom-url-searchparams
searchParams:eW(ez),// `URL.prototype.hash` accessors pair
// https://url.spec.whatwg.org/#dom-url-hash
hash:eW(eH,function(t){var r=E(this);if(""==(t=String(t))){r.fragment=null;return}"#"==t.charAt(0)&&(t=t.slice(1)),r.fragment="",eO(r,t,eC)})}),// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
p(eA,"toJSON",function(){return eR.call(this)},{enumerable:!0}),// https://url.spec.whatwg.org/#URL-stringification-behavior
p(eA,"toString",function(){return eR.call(this)},{enumerable:!0}),j){var eq=j.createObjectURL,eX=j.revokeObjectURL;eq&&p(eN,"createObjectURL",function(t){return eq.apply(j,arguments)}),eX&&p(eN,"revokeObjectURL",function(t){return eX.apply(j,arguments)})}v(eN,"URL"),a({global:!0,forced:!l,sham:!s},{URL:eN})},{"../internals/an-instance":27,"../internals/array-from":35,"../internals/descriptors":61,"../internals/export":68,"../internals/global":77,"../internals/has":78,"../internals/internal-state":88,"../internals/native-url":102,"../internals/object-assign":107,"../internals/object-define-properties":109,"../internals/redefine":126,"../internals/set-to-string-tag":135,"../internals/string-multibyte":141,"../internals/string-punycode-to-ascii":144,"../modules/es.string.iterator":208,"../modules/web.url-search-params":255}],257:[function(t,r,n){r.exports=t("./").polyfill()},{"./":258}],258:[function(t,r,n){(function(o,a){!/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   v4.2.8+1e68dce6
 */function(t,o){"object"==typeof n&&void 0!==r?r.exports=o():"function"==typeof define&&define.amd?define(o):t.ES6Promise=o()}(this,function(){function r(t){var r=typeof t;return null!==t&&("object"===r||"function"===r)}function n(t){return"function"==typeof t}var s=void 0,l=s=Array.isArray?Array.isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)},c=0,u=void 0,p=void 0,d=function(t,r){E[c]=t,E[c+1]=r,2===(c+=2)&&(p?p(T):C())};function m(t){p=t}function f(t){d=t}var h="undefined"!=typeof window?window:void 0,y=h||{},g=y.MutationObserver||y.WebKitMutationObserver,v="undefined"==typeof self&&void 0!==o&&"[object process]"===({}).toString.call(o),b="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function x(){// node version 0.10.x displays a deprecation warning when nextTick is used recursively
// see https://github.com/cujojs/when/issues/410 for details
return function(){return o.nextTick(T)}}// vertx
function j(){return void 0!==u?function(){u(T)}:S()}function w(){var t=0,r=new g(T),n=document.createTextNode("");return r.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}// web worker
function _(){var t=new MessageChannel;return t.port1.onmessage=T,function(){return t.port2.postMessage(0)}}function S(){// Store setTimeout reference so es6-promise will be unaffected by
// other code modifying setTimeout (like sinon.useFakeTimers())
var t=setTimeout;return function(){return t(T,1)}}var E=Array(1e3);function T(){for(var t=0;t<c;t+=2)(0,E[t])(E[t+1]),E[t]=void 0,E[t+1]=void 0;c=0}function M(){try{var t=Function("return this")().require("vertx");return u=t.runOnLoop||t.runOnContext,j()}catch(t){return S()}}var C=void 0;// Decide what async method to use to triggering processing of queued callbacks:
function O(t,r){var n=this,o=new this.constructor(R);void 0===o[A]&&$(o);var a=n._state;if(a){var s=arguments[a-1];d(function(){return Z(a,o,s,n._result)})}else X(n,o,t,r);return o}/**
    `Promise.resolve` returns a promise that will become resolved with the
    passed `value`. It is shorthand for the following:
  
    ```javascript
    let promise = new Promise(function(resolve, reject){
      resolve(1);
    });
  
    promise.then(function(value){
      // value === 1
    });
    ```
  
    Instead of writing the above, your code now simply becomes the following:
  
    ```javascript
    let promise = Promise.resolve(1);
  
    promise.then(function(value){
      // value === 1
    });
    ```
  
    @method resolve
    @static
    @param {Any} value value that the returned promise will be resolved with
    Useful for tooling.
    @return {Promise} a promise that will become fulfilled with the given
    `value`
  */function N(t){/*jshint validthis:true */var r=this;if(t&&"object"==typeof t&&t.constructor===r)return t;var n=new r(R);return z(n,t),n}C=v?x():g?w():b?_():void 0===h&&"function"==typeof t?M():S();var A=Math.random().toString(36).substring(2);function R(){}var L=void 0,I=1,P=2;function D(){return TypeError("You cannot resolve a promise with itself")}function F(){return TypeError("A promises callback cannot return that same promise.")}function U(t,r,n,o){try{t.call(r,n,o)}catch(t){return t}}function B(t,r,n){d(function(t){var o=!1,a=U(n,r,function(n){o||(o=!0,r!==n?z(t,n):W(t,n))},function(r){o||(o=!0,q(t,r))},"Settle: "+(t._label||" unknown promise"));!o&&a&&(o=!0,q(t,a))},t)}function G(t,r){r._state===I?W(t,r._result):r._state===P?q(t,r._result):X(r,void 0,function(r){return z(t,r)},function(r){return q(t,r)})}function V(t,r,o){r.constructor===t.constructor&&o===O&&r.constructor.resolve===N?G(t,r):void 0===o?W(t,r):n(o)?B(t,r,o):W(t,r)}function z(t,n){if(t===n)q(t,D());else if(r(n)){var o=void 0;try{o=n.then}catch(r){q(t,r);return}V(t,n,o)}else W(t,n)}function H(t){t._onerror&&t._onerror(t._result),Y(t)}function W(t,r){t._state===L&&(t._result=r,t._state=I,0!==t._subscribers.length&&d(Y,t))}function q(t,r){t._state===L&&(t._state=P,t._result=r,d(H,t))}function X(t,r,n,o){var a=t._subscribers,s=a.length;t._onerror=null,a[s]=r,a[s+I]=n,a[s+P]=o,0===s&&t._state&&d(Y,t)}function Y(t){var r=t._subscribers,n=t._state;if(0!==r.length){for(var o=void 0,a=void 0,s=t._result,l=0;l<r.length;l+=3)o=r[l],a=r[l+n],o?Z(n,o,a,s):a(s);t._subscribers.length=0}}function Z(t,r,o,a){var s=n(o),l=void 0,c=void 0,u=!0;if(s){try{l=o(a)}catch(t){u=!1,c=t}if(r===l){q(r,F());return}}else l=a;r._state!==L||(s&&u?z(r,l):!1===u?q(r,c):t===I?W(r,l):t===P&&q(r,l))}function K(t,r){try{r(function(r){z(t,r)},function(r){q(t,r)})}catch(r){q(t,r)}}var J=0;function Q(){return J++}function $(t){t[A]=J++,t._state=void 0,t._result=void 0,t._subscribers=[]}function ee(){return Error("Array Methods must be provided an Array")}var et=function(){function t(t,r){this._instanceConstructor=t,this.promise=new t(R),this.promise[A]||$(this.promise),l(r)?(this.length=r.length,this._remaining=r.length,this._result=Array(this.length),0===this.length?W(this.promise,this._result):(this.length=this.length||0,this._enumerate(r),0===this._remaining&&W(this.promise,this._result))):q(this.promise,ee())}return t.prototype._enumerate=function(t){for(var r=0;this._state===L&&r<t.length;r++)this._eachEntry(t[r],r)},t.prototype._eachEntry=function(t,r){var n=this._instanceConstructor,o=n.resolve;if(o===N){var a=void 0,s=void 0,l=!1;try{a=t.then}catch(t){l=!0,s=t}if(a===O&&t._state!==L)this._settledAt(t._state,r,t._result);else if("function"!=typeof a)this._remaining--,this._result[r]=t;else if(n===ei){var c=new n(R);l?q(c,s):V(c,t,a),this._willSettleAt(c,r)}else this._willSettleAt(new n(function(r){return r(t)}),r)}else this._willSettleAt(o(t),r)},t.prototype._settledAt=function(t,r,n){var o=this.promise;o._state===L&&(this._remaining--,t===P?q(o,n):this._result[r]=n),0===this._remaining&&W(o,this._result)},t.prototype._willSettleAt=function(t,r){var n=this;X(t,void 0,function(t){return n._settledAt(I,r,t)},function(t){return n._settledAt(P,r,t)})},t}();/**
    `Promise.all` accepts an array of promises, and returns a new promise which
    is fulfilled with an array of fulfillment values for the passed promises, or
    rejected with the reason of the first passed promise to be rejected. It casts all
    elements of the passed iterable to promises as it runs this algorithm.
  
    Example:
  
    ```javascript
    let promise1 = resolve(1);
    let promise2 = resolve(2);
    let promise3 = resolve(3);
    let promises = [ promise1, promise2, promise3 ];
  
    Promise.all(promises).then(function(array){
      // The array here would be [ 1, 2, 3 ];
    });
    ```
  
    If any of the `promises` given to `all` are rejected, the first promise
    that is rejected will be given as an argument to the returned promises's
    rejection handler. For example:
  
    Example:
  
    ```javascript
    let promise1 = resolve(1);
    let promise2 = reject(new Error("2"));
    let promise3 = reject(new Error("3"));
    let promises = [ promise1, promise2, promise3 ];
  
    Promise.all(promises).then(function(array){
      // Code here never runs because there are rejected promises!
    }, function(error) {
      // error.message === "2"
    });
    ```
  
    @method all
    @static
    @param {Array} entries array of promises
    @param {String} label optional string for labeling the promise.
    Useful for tooling.
    @return {Promise} promise that is fulfilled when all `promises` have been
    fulfilled, or rejected if any of them become rejected.
    @static
  */function er(t){return new et(this,t).promise}/**
    `Promise.race` returns a new promise which is settled in the same way as the
    first passed promise to settle.
  
    Example:
  
    ```javascript
    let promise1 = new Promise(function(resolve, reject){
      setTimeout(function(){
        resolve('promise 1');
      }, 200);
    });
  
    let promise2 = new Promise(function(resolve, reject){
      setTimeout(function(){
        resolve('promise 2');
      }, 100);
    });
  
    Promise.race([promise1, promise2]).then(function(result){
      // result === 'promise 2' because it was resolved before promise1
      // was resolved.
    });
    ```
  
    `Promise.race` is deterministic in that only the state of the first
    settled promise matters. For example, even if other promises given to the
    `promises` array argument are resolved, but the first settled promise has
    become rejected before the other promises became fulfilled, the returned
    promise will become rejected:
  
    ```javascript
    let promise1 = new Promise(function(resolve, reject){
      setTimeout(function(){
        resolve('promise 1');
      }, 200);
    });
  
    let promise2 = new Promise(function(resolve, reject){
      setTimeout(function(){
        reject(new Error('promise 2'));
      }, 100);
    });
  
    Promise.race([promise1, promise2]).then(function(result){
      // Code here never runs
    }, function(reason){
      // reason.message === 'promise 2' because promise 2 became rejected before
      // promise 1 became fulfilled
    });
    ```
  
    An example real-world use case is implementing timeouts:
  
    ```javascript
    Promise.race([ajax('foo.json'), timeout(5000)])
    ```
  
    @method race
    @static
    @param {Array} promises array of promises to observe
    Useful for tooling.
    @return {Promise} a promise which settles in the same way as the first passed
    promise to settle.
  */function en(t){/*jshint validthis:true */var r=this;return new r(l(t)?function(n,o){for(var a=t.length,s=0;s<a;s++)r.resolve(t[s]).then(n,o)}:function(t,r){return r(TypeError("You must pass an array to race."))})}/**
    `Promise.reject` returns a promise rejected with the passed `reason`.
    It is shorthand for the following:
  
    ```javascript
    let promise = new Promise(function(resolve, reject){
      reject(new Error('WHOOPS'));
    });
  
    promise.then(function(value){
      // Code here doesn't run because the promise is rejected!
    }, function(reason){
      // reason.message === 'WHOOPS'
    });
    ```
  
    Instead of writing the above, your code now simply becomes the following:
  
    ```javascript
    let promise = Promise.reject(new Error('WHOOPS'));
  
    promise.then(function(value){
      // Code here doesn't run because the promise is rejected!
    }, function(reason){
      // reason.message === 'WHOOPS'
    });
    ```
  
    @method reject
    @static
    @param {Any} reason value that the returned promise will be rejected with.
    Useful for tooling.
    @return {Promise} a promise rejected with the given `reason`.
  */function eo(t){/*jshint validthis:true */var r=this,n=new r(R);return q(n,t),n}function ea(){throw TypeError("You must pass a resolver function as the first argument to the promise constructor")}function es(){throw TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}/**
    Promise objects represent the eventual result of an asynchronous operation. The
    primary way of interacting with a promise is through its `then` method, which
    registers callbacks to receive either a promise's eventual value or the reason
    why the promise cannot be fulfilled.
  
    Terminology
    -----------
  
    - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
    - `thenable` is an object or function that defines a `then` method.
    - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
    - `exception` is a value that is thrown using the throw statement.
    - `reason` is a value that indicates why a promise was rejected.
    - `settled` the final resting state of a promise, fulfilled or rejected.
  
    A promise can be in one of three states: pending, fulfilled, or rejected.
  
    Promises that are fulfilled have a fulfillment value and are in the fulfilled
    state.  Promises that are rejected have a rejection reason and are in the
    rejected state.  A fulfillment value is never a thenable.
  
    Promises can also be said to *resolve* a value.  If this value is also a
    promise, then the original promise's settled state will match the value's
    settled state.  So a promise that *resolves* a promise that rejects will
    itself reject, and a promise that *resolves* a promise that fulfills will
    itself fulfill.
  
  
    Basic Usage:
    ------------
  
    ```js
    let promise = new Promise(function(resolve, reject) {
      // on success
      resolve(value);
  
      // on failure
      reject(reason);
    });
  
    promise.then(function(value) {
      // on fulfillment
    }, function(reason) {
      // on rejection
    });
    ```
  
    Advanced Usage:
    ---------------
  
    Promises shine when abstracting away asynchronous interactions such as
    `XMLHttpRequest`s.
  
    ```js
    function getJSON(url) {
      return new Promise(function(resolve, reject){
        let xhr = new XMLHttpRequest();
  
        xhr.open('GET', url);
        xhr.onreadystatechange = handler;
        xhr.responseType = 'json';
        xhr.setRequestHeader('Accept', 'application/json');
        xhr.send();
  
        function handler() {
          if (this.readyState === this.DONE) {
            if (this.status === 200) {
              resolve(this.response);
            } else {
              reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
            }
          }
        };
      });
    }
  
    getJSON('/posts.json').then(function(json) {
      // on fulfillment
    }, function(reason) {
      // on rejection
    });
    ```
  
    Unlike callbacks, promises are great composable primitives.
  
    ```js
    Promise.all([
      getJSON('/posts'),
      getJSON('/comments')
    ]).then(function(values){
      values[0] // => postsJSON
      values[1] // => commentsJSON
  
      return values;
    });
    ```
  
    @class Promise
    @param {Function} resolver
    Useful for tooling.
    @constructor
  */var ei=function(){function t(r){this[A]=Q(),this._result=this._state=void 0,this._subscribers=[],R!==r&&("function"!=typeof r&&ea(),this instanceof t?K(this,r):es())}/**
    The primary way of interacting with a promise is through its `then` method,
    which registers callbacks to receive either a promise's eventual value or the
    reason why the promise cannot be fulfilled.
     ```js
    findUser().then(function(user){
      // user is available
    }, function(reason){
      // user is unavailable, and you are given the reason why
    });
    ```
     Chaining
    --------
     The return value of `then` is itself a promise.  This second, 'downstream'
    promise is resolved with the return value of the first promise's fulfillment
    or rejection handler, or rejected if the handler throws an exception.
     ```js
    findUser().then(function (user) {
      return user.name;
    }, function (reason) {
      return 'default name';
    }).then(function (userName) {
      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
      // will be `'default name'`
    });
     findUser().then(function (user) {
      throw new Error('Found user, but still unhappy');
    }, function (reason) {
      throw new Error('`findUser` rejected and we're unhappy');
    }).then(function (value) {
      // never reached
    }, function (reason) {
      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
    });
    ```
    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.
     ```js
    findUser().then(function (user) {
      throw new PedagogicalException('Upstream error');
    }).then(function (value) {
      // never reached
    }).then(function (value) {
      // never reached
    }, function (reason) {
      // The `PedgagocialException` is propagated all the way down to here
    });
    ```
     Assimilation
    ------------
     Sometimes the value you want to propagate to a downstream promise can only be
    retrieved asynchronously. This can be achieved by returning a promise in the
    fulfillment or rejection handler. The downstream promise will then be pending
    until the returned promise is settled. This is called *assimilation*.
     ```js
    findUser().then(function (user) {
      return findCommentsByAuthor(user);
    }).then(function (comments) {
      // The user's comments are now available
    });
    ```
     If the assimliated promise rejects, then the downstream promise will also reject.
     ```js
    findUser().then(function (user) {
      return findCommentsByAuthor(user);
    }).then(function (comments) {
      // If `findCommentsByAuthor` fulfills, we'll have the value here
    }, function (reason) {
      // If `findCommentsByAuthor` rejects, we'll have the reason here
    });
    ```
     Simple Example
    --------------
     Synchronous Example
     ```javascript
    let result;
     try {
      result = findResult();
      // success
    } catch(reason) {
      // failure
    }
    ```
     Errback Example
     ```js
    findResult(function(result, err){
      if (err) {
        // failure
      } else {
        // success
      }
    });
    ```
     Promise Example;
     ```javascript
    findResult().then(function(result){
      // success
    }, function(reason){
      // failure
    });
    ```
     Advanced Example
    --------------
     Synchronous Example
     ```javascript
    let author, books;
     try {
      author = findAuthor();
      books  = findBooksByAuthor(author);
      // success
    } catch(reason) {
      // failure
    }
    ```
     Errback Example
     ```js
     function foundBooks(books) {
     }
     function failure(reason) {
     }
     findAuthor(function(author, err){
      if (err) {
        failure(err);
        // failure
      } else {
        try {
          findBoooksByAuthor(author, function(books, err) {
            if (err) {
              failure(err);
            } else {
              try {
                foundBooks(books);
              } catch(reason) {
                failure(reason);
              }
            }
          });
        } catch(error) {
          failure(err);
        }
        // success
      }
    });
    ```
     Promise Example;
     ```javascript
    findAuthor().
      then(findBooksByAuthor).
      then(function(books){
        // found books
    }).catch(function(reason){
      // something went wrong
    });
    ```
     @method then
    @param {Function} onFulfilled
    @param {Function} onRejected
    Useful for tooling.
    @return {Promise}
    */return(/**
    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
    as the catch block of a try/catch statement.
    ```js
    function findAuthor(){
    throw new Error('couldn't find that author');
    }
    // synchronous
    try {
    findAuthor();
    } catch(reason) {
    // something went wrong
    }
    // async with promises
    findAuthor().catch(function(reason){
    // something went wrong
    });
    ```
    @method catch
    @param {Function} onRejection
    Useful for tooling.
    @return {Promise}
    */t.prototype.catch=function(t){return this.then(null,t)},/**
      `finally` will be invoked regardless of the promise's fate just as native
      try/catch/finally behaves
    
      Synchronous example:
    
      ```js
      findAuthor() {
        if (Math.random() > 0.5) {
          throw new Error();
        }
        return new Author();
      }
    
      try {
        return findAuthor(); // succeed or fail
      } catch(error) {
        return findOtherAuther();
      } finally {
        // always runs
        // doesn't affect the return value
      }
      ```
    
      Asynchronous example:
    
      ```js
      findAuthor().catch(function(reason){
        return findOtherAuther();
      }).finally(function(){
        // author was either found, or not
      });
      ```
    
      @method finally
      @param {Function} callback
      @return {Promise}
    */t.prototype.finally=function(t){var r=this,o=r.constructor;return n(t)?r.then(function(r){return o.resolve(t()).then(function(){return r})},function(r){return o.resolve(t()).then(function(){throw r})}):r.then(t,t)},t)}();/*global self*/function el(){var t=void 0;if(void 0!==a)t=a;else if("undefined"!=typeof self)t=self;else try{t=Function("return this")()}catch(t){throw Error("polyfill failed because global object is unavailable in this environment")}var r=t.Promise;if(r){var n=null;try{n=Object.prototype.toString.call(r.resolve())}catch(t){}if("[object Promise]"===n&&!r.cast)return}t.Promise=ei}// Strange compat..
return ei.prototype.then=O,ei.all=er,ei.race=en,ei.resolve=N,ei.reject=eo,ei._setScheduler=m,ei._setAsap=f,ei._asap=d,ei.polyfill=el,ei.Promise=ei,ei})}).call(this,t("_process"),"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{_process:271}],259:[function(t,r,n){!function(t,o){if("function"==typeof define&&define.amd)define(["exports","module"],o);else if(void 0!==n&&void 0!==r)o(n,r);else{var a={exports:{}};o(a.exports,a),t.fetchJsonp=a.exports}}(this,function(t,r){var n={timeout:5e3,jsonpCallback:"callback"};function o(){return"jsonp_"+Date.now()+"_"+Math.ceil(1e5*Math.random())}function a(t){// IE8 throws an exception when you try to delete a property on window
// http://stackoverflow.com/a/1824228/751089
try{delete window[t]}catch(r){window[t]=void 0}}function s(t){var r=document.getElementById(t);r&&document.getElementsByTagName("head")[0].removeChild(r)}function l(t){var r=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],l=t,c=r.timeout||n.timeout,u=r.jsonpCallback||n.jsonpCallback,p=void 0;// to avoid param reassign
return new Promise(function(n,d){var m=r.jsonpCallbackFunction||o(),f=u+"_"+m;window[m]=function(t){n({ok:!0,// keep consistent with fetch API
json:function(){return Promise.resolve(t)}}),p&&clearTimeout(p),s(f),a(m)},l+=-1===l.indexOf("?")?"?":"&";var h=document.createElement("script");h.setAttribute("src",""+l+u+"="+m),r.charset&&h.setAttribute("charset",r.charset),h.id=f,document.getElementsByTagName("head")[0].appendChild(h),p=setTimeout(function(){d(Error("JSONP request to "+t+" timed out")),a(m),s(f),window[m]=function(){a(m)}},c),h.onerror=function(){d(Error("JSONP request to "+t+" failed")),a(m),s(f),p&&clearTimeout(p)}})}// export as global function
/*
  let local;
  if (typeof global !== 'undefined') {
    local = global;
  } else if (typeof self !== 'undefined') {
    local = self;
  } else {
    try {
      local = Function('return this')();
    } catch (e) {
      throw new Error('polyfill failed because global object is unavailable in this environment');
    }
  }
  local.fetchJsonp = fetchJsonp;
  */r.exports=l})},{}],260:[function(t,r,n){/* FileSaver.js
 * A saveAs() FileSaver implementation.
 * 1.3.2
 * 2016-06-16 18:25:19
 *
 * By Eli Grey, http://eligrey.com
 * License: MIT
 *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md
 *//*global self *//*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true *//*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */var o=o||function(t){if(!(void 0===t||"undefined"!=typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var r=t.document// only get URL when necessary in case Blob.js hasn't overridden it yet
,n=function(){return t.URL||t.webkitURL||t},o=r.createElementNS("http://www.w3.org/1999/xhtml","a"),a="download"in o,s=function(t){var r=new MouseEvent("click");t.dispatchEvent(r)},l=/constructor/i.test(t.HTMLElement)||t.safari,c=/CriOS\/[\d]+/.test(navigator.userAgent),u=function(r){(t.setImmediate||t.setTimeout)(function(){throw r},0)},p="application/octet-stream"// the Blob API is fundamentally broken as there is no "downloadfinished" event to subscribe to
,d=4e4// in ms
,m=function(t){setTimeout(function(){"string"==typeof t?n().revokeObjectURL(t):t.remove()},d)},f=function(t,r,n){for(var o=(r=[].concat(r)).length;o--;){var a=t["on"+r[o]];if("function"==typeof a)try{a.call(t,n||t)}catch(t){u(t)}}},h=function(t){return(// prepend BOM for UTF-8 XML and text/* types (including HTML)
// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF
/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type)?new Blob([String.fromCharCode(65279),t],{type:t.type}):t)},y=function(r,u,d){d||(r=h(r));// First try a.download, then web filesystem, then object URLs
var y,g=this,v=r.type===p,b=function(){f(g,"writestart progress write writeend".split(" "))}// on any filesys errors revert to saving with object URLs
,x=function(){if((c||v&&l)&&t.FileReader){// Safari doesn't allow downloading of blob urls
var o=new FileReader;o.onloadend=function(){var r=c?o.result:o.result.replace(/^data:[^;]*;/,"data:attachment/file;");t.open(r,"_blank")||(t.location.href=r),r=void 0,g.readyState=g.DONE,b()},o.readAsDataURL(r),g.readyState=g.INIT;return}// don't create more object URLs than needed
y||(y=n().createObjectURL(r)),v?t.location.href=y:t.open(y,"_blank")||(t.location.href=y),g.readyState=g.DONE,b(),m(y)};if(g.readyState=g.INIT,a){y=n().createObjectURL(r),setTimeout(function(){o.href=y,o.download=u,s(o),b(),m(y),g.readyState=g.DONE});return}x()},g=y.prototype,v=function(t,r,n){return new y(t,r||t.name||"download",n)};// IE 10+ (native saveAs)
return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(t,r,n){return r=r||t.name||"download",n||(t=h(t)),navigator.msSaveOrOpenBlob(t,r)}:(g.abort=function(){},g.readyState=g.INIT=0,g.WRITING=1,g.DONE=2,g.error=g.onwritestart=g.onprogress=g.onwrite=g.onabort=g.onerror=g.onwriteend=null,v)}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content);// `self` is undefined in Firefox for Android content script context
// while `this` is nsIContentFrameMessageManager
// with an attribute `content` that corresponds to the window
void 0!==r&&r.exports?r.exports.saveAs=o:null!=define&&null!==define.amd&&define("FileSaver.js",function(){return o})},{}],261:[function(t,r,n){var o=Object.defineProperty,a=(t,r)=>{for(var n in r)o(t,n,{get:r[n],enumerable:!0})};function s(t=256){let r=0,n=new Uint8Array(t);return{get buffer(){return n.buffer},reset(){r=0},bytesView:()=>n.subarray(0,r),bytes:()=>n.slice(0,r),writeByte(t){o(r+1),n[r]=t,r++},writeBytes(t,a=0,s=t.length){o(r+s);for(let o=0;o<s;o++)n[r++]=t[o+a]},writeBytesView(t,a=0,s=t.byteLength){o(r+s),n.set(t.subarray(a,a+s),r),r+=s}};function o(t){var o=n.length;if(o>=t)return;t=Math.max(t,o*(o<1048576?2:1.125)>>>0),0!=o&&(t=Math.max(t,256));let a=n;n=new Uint8Array(t),r>0&&n.set(a.subarray(0,r),0)}}// src/lzwEncode.js
o(n,"__esModule",{value:!0}),a(n,{GIFEncoder:()=>L,applyPalette:()=>E,default:()=>H,nearestColor:()=>R,nearestColorIndex:()=>N,nearestColorIndexWithDistance:()=>A,prequantize:()=>S,quantize:()=>x,snapColorsToPalette:()=>C});var l=12,c=5003,u=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],p=function(t,r,n,o,a=s(512),p=new Uint8Array(256),d=new Int32Array(c),m=new Int32Array(c)){let f=d.length,h=Math.max(2,o);p.fill(0),m.fill(0),d.fill(-1);let y=0,g=0,v=h+1,b=v,x=!1,j=b,w=(1<<j)-1,_=1<<v-1,S=_+1,E=_+2,T=0,M=n[0],C=0;for(let t=f;t<65536;t*=2)++C;C=8-C,a.writeByte(h),N(_);let O=n.length;for(let t=1;t<O;t++)e:{let r=n[t],o=(r<<l)+M,a=r<<C^M;if(d[a]===o){M=m[a];break e}let s=0===a?1:f-a;for(;d[a]>=0;)if((a-=s)<0&&(a+=f),d[a]===o){M=m[a];break e}N(M),M=r,E<1<<l?(m[a]=E++,d[a]=o):(d.fill(-1),E=_+2,x=!0,N(_))}return N(M),N(S),a.writeByte(0),a.bytesView();function N(t){for(y&=u[g],g>0?y|=t<<g:y=t,g+=j;g>=8;)p[T++]=255&y,T>=254&&(a.writeByte(T),a.writeBytesView(p,0,T),T=0),y>>=8,g-=8;if((E>w||x)&&(x?(w=(1<<(j=b))-1,x=!1):w=++j===l?1<<j:(1<<j)-1),t==S){for(;g>0;)p[T++]=255&y,T>=254&&(a.writeByte(T),a.writeBytesView(p,0,T),T=0),y>>=8,g-=8;T>0&&(a.writeByte(T),a.writeBytesView(p,0,T),T=0)}}};function d(t,r,n){return t<<8&63488|r<<2&992|n>>3}function m(t,r,n,o){return t>>4|240&r|(240&n)<<4|(240&o)<<8}function f(t,r,n){return t>>4<<8|240&r|n>>4}// src/pnnquant2.js
function h(t,r,n){return t<r?r:t>n?n:t}function y(t){return t*t}function g(t,r,n){var o=0,a=1e100;let s=t[r],l=s.cnt,c=s.ac,u=s.rc,p=s.gc,d=s.bc;for(var m=s.fw;0!=m;m=t[m].fw){let r=t[m],s=r.cnt,h=l*s/(l+s);if(!(h>=a)){var f=0;!(n&&(f+=h*y(r.ac-c))>=a||(f+=h*y(r.rc-u))>=a||(f+=h*y(r.gc-p))>=a)&&((f+=h*y(r.bc-d))>=a||(a=f,o=m))}}s.err=a,s.nn=o}function v(){return{ac:0,rc:0,gc:0,bc:0,cnt:0,nn:0,fw:0,bk:0,tm:0,mtm:0,err:0}}function b(t,r){let n="rgb444"===r?4096:65536,o=Array(n),a=t.length;if("rgba4444"===r)for(let r=0;r<a;++r){let n=t[r],a=n>>24&255,s=n>>16&255,l=n>>8&255,c=255&n,u=m(c,l,s,a),p=u in o?o[u]:o[u]=v();p.rc+=c,p.gc+=l,p.bc+=s,p.ac+=a,p.cnt++}else if("rgb444"===r)for(let r=0;r<a;++r){let n=t[r],a=n>>16&255,s=n>>8&255,l=255&n,c=f(l,s,a),u=c in o?o[c]:o[c]=v();u.rc+=l,u.gc+=s,u.bc+=a,u.cnt++}else for(let r=0;r<a;++r){let n=t[r],a=n>>16&255,s=n>>8&255,l=255&n,c=d(l,s,a),u=c in o?o[c]:o[c]=v();u.rc+=l,u.gc+=s,u.bc+=a,u.cnt++}return o}function x(t,r,n={}){let{format:o="rgb565",clearAlpha:a=!0,clearAlphaColor:s=0,clearAlphaThreshold:l=0,oneBitAlpha:c=!1}=n;if(!t||!t.buffer||!(t instanceof Uint8Array)&&!(t instanceof Uint8ClampedArray))throw Error("quantize() expected RGBA Uint8Array data");let u=new Uint32Array(t.buffer),p=!1!==n.useSqrt,d="rgba4444"===o,m=b(u,o),f=m.length,v=f-1,x=new Uint32Array(f+1);for(var w=0,_=0;_<f;++_){let t=m[_];if(null!=t){var S=1/t.cnt;d&&(t.ac*=S),t.rc*=S,t.gc*=S,t.bc*=S,m[w++]=t}}y(r)/w<.022&&(p=!1);for(var _=0;_<w-1;++_)m[_].fw=_+1,m[_+1].bk=_,p&&(m[_].cnt=Math.sqrt(m[_].cnt));for(p&&(m[_].cnt=Math.sqrt(m[_].cnt)),_=0;_<w;++_){g(m,_,!1);var E=m[_].err;for(C=++x[0];C>1&&!(m[M=x[O=C>>1]].err<=E);C=O)x[C]=M;x[C]=_}var T=w-r;for(_=0;_<T;){for(;;){var M,C,O,N,A=x[1];if((N=m[A]).tm>=N.mtm&&m[N.nn].mtm<=N.tm)break;N.mtm==v?A=x[1]=x[x[0]--]:(g(m,A,!1),N.tm=_);var E=m[A].err;for(C=1;(O=C+C)<=x[0]&&(O<x[0]&&m[x[O]].err>m[x[O+1]].err&&O++,!(E<=m[M=x[O]].err));C=O)x[C]=M;x[C]=A}var R=m[N.nn],L=N.cnt,I=R.cnt,S=1/(L+I);d&&(N.ac=S*(L*N.ac+I*R.ac)),N.rc=S*(L*N.rc+I*R.rc),N.gc=S*(L*N.gc+I*R.gc),N.bc=S*(L*N.bc+I*R.bc),N.cnt+=R.cnt,N.mtm=++_,m[R.bk].fw=R.fw,m[R.fw].bk=R.bk,R.mtm=v}let P=[];var D=0;for(_=0;;++D){let t=h(Math.round(m[_].rc),0,255),r=h(Math.round(m[_].gc),0,255),n=h(Math.round(m[_].bc),0,255),o=255;if(d){if(o=h(Math.round(m[_].ac),0,255),c){let t="number"==typeof c?c:127;o=o<=t?0:255}a&&o<=l&&(t=r=n=s,o=0)}let u=d?[t,r,n,o]:[t,r,n],p=j(P,u);if(p||P.push(u),0==(_=m[_].fw))break}return P}function j(t,r){for(let n=0;n<t.length;n++){let o=t[n],a=o[0]===r[0]&&o[1]===r[1]&&o[2]===r[2],s=!(o.length>=4)||!(r.length>=4)||o[3]===r[3];if(a&&s)return!0}return!1}// src/color.js
function w(t,r){var n,o=0;for(n=0;n<t.length;n++){let a=t[n]-r[n];o+=a*a}return o}// src/palettize.js
function _(t,r){return r>1?Math.round(t/r)*r:t}function S(t,{roundRGB:r=5,roundAlpha:n=10,oneBitAlpha:o=null}={}){let a=new Uint32Array(t.buffer);for(let t=0;t<a.length;t++){let s=a[t],l=s>>24&255,c=s>>16&255,u=s>>8&255,p=255&s;if(l=_(l,n),o){let t="number"==typeof o?o:127;l=l<=t?0:255}p=_(p,r),u=_(u,r),c=_(c,r),a[t]=l<<24|c<<16|u<<8|p<<0}}function E(t,r,n="rgb565"){if(!t||!t.buffer||!(t instanceof Uint8Array)&&!(t instanceof Uint8ClampedArray))throw Error("quantize() expected RGBA Uint8Array data");if(r.length>256)throw Error("applyPalette() only works with 256 colors or less");let o=new Uint32Array(t.buffer),a=o.length,s="rgb444"===n?4096:65536,l=new Uint8Array(a),c=Array(s);if("rgba4444"===n)for(let t=0;t<a;t++){let n=o[t],a=n>>24&255,s=n>>16&255,u=n>>8&255,p=255&n,d=m(p,u,s,a),f=d in c?c[d]:c[d]=T(p,u,s,a,r);l[t]=f}else{let t="rgb444"===n?f:d;for(let n=0;n<a;n++){let a=o[n],s=a>>16&255,u=a>>8&255,p=255&a,d=t(p,u,s),m=d in c?c[d]:c[d]=M(p,u,s,r);l[n]=m}}return l}function T(t,r,n,o,a){let s=0,l=1e100;for(let c=0;c<a.length;c++){let u=a[c],p=u[3],d=O(p-o);if(d>l)continue;let m=u[0];if((d+=O(m-t))>l)continue;let f=u[1];if((d+=O(f-r))>l)continue;let h=u[2];(d+=O(h-n))>l||(l=d,s=c)}return s}function M(t,r,n,o){let a=0,s=1e100;for(let l=0;l<o.length;l++){let c=o[l],u=c[0],p=O(u-t);if(p>s)continue;let d=c[1];if((p+=O(d-r))>s)continue;let m=c[2];(p+=O(m-n))>s||(s=p,a=l)}return a}function C(t,r,n=5){if(!t.length||!r.length)return;let o=t.map(t=>t.slice(0,3)),a=n*n,s=t[0].length;for(let n=0;n<r.length;n++){let l=r[n];l=l.length<s?[l[0],l[1],l[2],255]:l.length>s?l.slice(0,3):l.slice();let c=A(o,l.slice(0,3),w),u=c[0],p=c[1];p>0&&p<=a&&(t[u]=l)}}function O(t){return t*t}function N(t,r,n=w){let o=1/0,a=-1;for(let s=0;s<t.length;s++){let l=t[s],c=n(r,l);c<o&&(o=c,a=s)}return a}function A(t,r,n=w){let o=1/0,a=-1;for(let s=0;s<t.length;s++){let l=t[s],c=n(r,l);c<o&&(o=c,a=s)}return[a,o]}function R(t,r,n=w){return t[N(t,r,n)]}// src/index.js
function L(t={}){let{initialCapacity:r=4096,auto:n=!0}=t,o=s(r),a=5003,l=new Uint8Array(256),c=new Int32Array(a),u=new Int32Array(a),p=!1;return{reset(){o.reset(),p=!1},finish(){o.writeByte(59)},bytes:()=>o.bytes(),bytesView:()=>o.bytesView(),get buffer(){return o.buffer},get stream(){return o},writeHeader:d,writeFrame(t,r,a,s={}){let{transparent:m=!1,transparentIndex:f=0,delay:h=0,palette:y=null,repeat:g=0,colorDepth:v=8,dispose:b=-1}=s,x=!1;if(n?p||(x=!0,d(),p=!0):x=!!s.first,r=Math.max(0,Math.floor(r)),a=Math.max(0,Math.floor(a)),x){if(!y)throw Error("First frame must include a { palette } option");P(o,r,a,y,v),F(o,y),g>=0&&D(o,g)}let j=Math.round(h/10);I(o,b,j,m,f);let w=!!y&&!x;U(o,r,a,w?y:null),w&&F(o,y),B(o,t,r,a,v,l,c,u)}};function d(){V(o,"GIF89a")}}function I(t,r,n,o,a){var s,l;t.writeByte(33),t.writeByte(249),t.writeByte(4),a<0&&(a=0,o=!1),o?(s=1,l=2):(s=0,l=0),r>=0&&(l=7&r),l<<=2;let c=0;t.writeByte(0|l|c|s),G(t,n),t.writeByte(a||0),t.writeByte(0)}function P(t,r,n,o,a=8){let s=1,l=0,c=z(o.length)-1,u=s<<7|a-1<<4|l<<3|c,p=0,d=0;G(t,r),G(t,n),t.writeBytes([u,p,d])}function D(t,r){t.writeByte(33),t.writeByte(255),t.writeByte(11),V(t,"NETSCAPE2.0"),t.writeByte(3),t.writeByte(1),G(t,r),t.writeByte(0)}function F(t,r){let n=1<<z(r.length);for(let o=0;o<n;o++){let n=[0,0,0];o<r.length&&(n=r[o]),t.writeByte(n[0]),t.writeByte(n[1]),t.writeByte(n[2])}}function U(t,r,n,o){if(t.writeByte(44),G(t,0),G(t,0),G(t,r),G(t,n),o){let r=0,n=0,a=z(o.length)-1;t.writeByte(128|r|n|0|a)}else t.writeByte(0)}function B(t,r,n,o,a=8,s,l,c){p(n,o,r,a,t,s,l,c)}function G(t,r){t.writeByte(255&r),t.writeByte(r>>8&255)}function V(t,r){for(var n=0;n<r.length;n++)t.writeByte(r.charCodeAt(n))}function z(t){return Math.max(Math.ceil(Math.log2(t)),1)}var H=L},{}],262:[function(t,r,n){function o(t){return t&&"object"==typeof t&&"default"in t?t.default:t}var a,s=o(t("@babel/runtime/helpers/classCallCheck")),l=o(t("@babel/runtime/helpers/createClass")),c=[],u=c.forEach,p=c.slice;function d(t){return u.call(p.call(arguments,1),function(r){if(r)for(var n in r)void 0===t[n]&&(t[n]=r[n])}),t}var m={create:function(t,r,n,o){var a;if(n){var s=new Date;s.setTime(s.getTime()+6e4*n),a="; expires="+s.toGMTString()}else a="";o=o?"domain="+o+";":"",document.cookie=t+"="+r+a+";"+o+"path=/"},read:function(t){for(var r=t+"=",n=document.cookie.split(";"),o=0;o<n.length;o++){for(var a=n[o];" "===a.charAt(0);)a=a.substring(1,a.length);if(0===a.indexOf(r))return a.substring(r.length,a.length)}return null},remove:function(t){this.create(t,"",-1)}},f={name:"cookie",lookup:function(t){var r;if(t.lookupCookie&&"undefined"!=typeof document){var n=m.read(t.lookupCookie);n&&(r=n)}return r},cacheUserLanguage:function(t,r){r.lookupCookie&&"undefined"!=typeof document&&m.create(r.lookupCookie,t,r.cookieMinutes,r.cookieDomain)}},h={name:"querystring",lookup:function(t){var r;if("undefined"!=typeof window)for(var n=window.location.search.substring(1).split("&"),o=0;o<n.length;o++){var a=n[o].indexOf("=");a>0&&n[o].substring(0,a)===t.lookupQuerystring&&(r=n[o].substring(a+1))}return r}};try{a="undefined"!==window&&null!==window.localStorage;var y="i18next.translate.boo";window.localStorage.setItem(y,"foo"),window.localStorage.removeItem(y)}catch(t){a=!1}var g={name:"localStorage",lookup:function(t){var r;if(t.lookupLocalStorage&&a){var n=window.localStorage.getItem(t.lookupLocalStorage);n&&(r=n)}return r},cacheUserLanguage:function(t,r){r.lookupLocalStorage&&a&&window.localStorage.setItem(r.lookupLocalStorage,t)}},v={name:"navigator",lookup:function(t){var r=[];if("undefined"!=typeof navigator){if(navigator.languages)for(var n=0;n<navigator.languages.length;n++)r.push(navigator.languages[n]);navigator.userLanguage&&r.push(navigator.userLanguage),navigator.language&&r.push(navigator.language)}return r.length>0?r:void 0}},b={name:"htmlTag",lookup:function(t){var r,n=t.htmlTag||("undefined"!=typeof document?document.documentElement:null);return n&&"function"==typeof n.getAttribute&&(r=n.getAttribute("lang")),r}},x={name:"path",lookup:function(t){var r;if("undefined"!=typeof window){var n=window.location.pathname.match(/\/([a-zA-Z-]*)/g);if(n instanceof Array){if("number"==typeof t.lookupFromPathIndex){if("string"!=typeof n[t.lookupFromPathIndex])return;r=n[t.lookupFromPathIndex].replace("/","")}else r=n[0].replace("/","")}}return r}},j={name:"subdomain",lookup:function(t){var r;if("undefined"!=typeof window){var n=window.location.href.match(/(?:http[s]*\:\/\/)*(.*?)\.(?=[^\/]*\..{2,5})/gi);n instanceof Array&&(r="number"==typeof t.lookupFromSubdomainIndex?n[t.lookupFromSubdomainIndex].replace("http://","").replace("https://","").replace(".",""):n[0].replace("http://","").replace("https://","").replace(".",""))}return r}};function w(){return{order:["querystring","cookie","localStorage","navigator","htmlTag"],lookupQuerystring:"lng",lookupCookie:"i18next",lookupLocalStorage:"i18nextLng",// cache user language
caches:["localStorage"],excludeCacheFor:["cimode"],//cookieMinutes: 10,
//cookieDomain: 'myDomain'
checkWhitelist:!0}}var _=/*#__PURE__*/function(){function t(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};s(this,t),this.type="languageDetector",this.detectors={},this.init(r,n)}return l(t,[{key:"init",value:function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.services=t,this.options=d(r,this.options||{},w()),this.options.lookupFromUrlIndex&&(this.options.lookupFromPathIndex=this.options.lookupFromUrlIndex),this.i18nOptions=n,this.addDetector(f),this.addDetector(h),this.addDetector(g),this.addDetector(v),this.addDetector(b),this.addDetector(x),this.addDetector(j)}},{key:"addDetector",value:function(t){this.detectors[t.name]=t}},{key:"detect",value:function(t){var r,n=this;t||(t=this.options.order);var o=[];if(t.forEach(function(t){if(n.detectors[t]){var r=n.detectors[t].lookup(n.options);r&&"string"==typeof r&&(r=[r]),r&&(o=o.concat(r))}}),o.forEach(function(t){if(!r){var o=n.services.languageUtils.formatLanguageCode(t);(!n.options.checkWhitelist||n.services.languageUtils.isWhitelisted(o))&&(r=o)}}),!r){var a=this.i18nOptions.fallbackLng;"string"==typeof a&&(a=[a]),a||(a=[]),r="[object Array]"===Object.prototype.toString.apply(a)?a[0]:a[0]||a.default&&a.default[0]}return r}},{key:"cacheUserLanguage",value:function(t,r){var n=this;r||(r=this.options.caches),r&&(this.options.excludeCacheFor&&this.options.excludeCacheFor.indexOf(t)>-1||r.forEach(function(r){n.detectors[r]&&n.detectors[r].cacheUserLanguage(t,n.options)}))}}]),t}();_.type="languageDetector",r.exports=_},{"@babel/runtime/helpers/classCallCheck":263,"@babel/runtime/helpers/createClass":264}],263:[function(t,r,n){arguments[4][5][0].apply(n,arguments)},{dup:5}],264:[function(t,r,n){arguments[4][6][0].apply(n,arguments)},{dup:6}],265:[function(t,r,n){function o(t){return t&&"object"==typeof t&&"default"in t?t.default:t}var a=o(t("@babel/runtime/helpers/typeof")),s=o(t("@babel/runtime/helpers/objectSpread")),l=o(t("@babel/runtime/helpers/classCallCheck")),c=o(t("@babel/runtime/helpers/createClass")),u=o(t("@babel/runtime/helpers/possibleConstructorReturn")),p=o(t("@babel/runtime/helpers/getPrototypeOf")),d=o(t("@babel/runtime/helpers/assertThisInitialized")),m=o(t("@babel/runtime/helpers/inherits")),f=o(t("@babel/runtime/helpers/toConsumableArray")),h=o(t("@babel/runtime/helpers/slicedToArray")),y={type:"logger",log:function(t){this.output("log",t)},warn:function(t){this.output("warn",t)},error:function(t){this.output("error",t)},output:function(t,r){var n;/* eslint no-console: 0 */console&&console[t]&&(n=console)[t].apply(n,f(r))}},g=new/*#__PURE__*/(function(){function t(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};l(this,t),this.init(r,n)}return c(t,[{key:"init",value:function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.prefix=r.prefix||"i18next:",this.logger=t||y,this.options=r,this.debug=r.debug}},{key:"setDebug",value:function(t){this.debug=t}},{key:"log",value:function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return this.forward(r,"log","",!0)}},{key:"warn",value:function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return this.forward(r,"warn","",!0)}},{key:"error",value:function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return this.forward(r,"error","")}},{key:"deprecate",value:function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return this.forward(r,"warn","WARNING DEPRECATED: ",!0)}},{key:"forward",value:function(t,r,n,o){return o&&!this.debug?null:("string"==typeof t[0]&&(t[0]="".concat(n).concat(this.prefix," ").concat(t[0])),this.logger[r](t))}},{key:"create",value:function(r){return new t(this.logger,s({},{prefix:"".concat(this.prefix,":").concat(r,":")},this.options))}}]),t}()),v=/*#__PURE__*/function(){function t(){l(this,t),this.observers={}}return c(t,[{key:"on",value:function(t,r){var n=this;return t.split(" ").forEach(function(t){n.observers[t]=n.observers[t]||[],n.observers[t].push(r)}),this}},{key:"off",value:function(t,r){if(this.observers[t]){if(!r){delete this.observers[t];return}this.observers[t]=this.observers[t].filter(function(t){return t!==r})}}},{key:"emit",value:function(t){for(var r=arguments.length,n=Array(r>1?r-1:0),o=1;o<r;o++)n[o-1]=arguments[o];this.observers[t]&&[].concat(this.observers[t]).forEach(function(t){t.apply(void 0,n)}),this.observers["*"]&&[].concat(this.observers["*"]).forEach(function(r){r.apply(r,[t].concat(n))})}}]),t}();function b(){var t,r,n=new Promise(function(n,o){t=n,r=o});return n.resolve=t,n.reject=r,n}function x(t){return null==t?"":""+t}function j(t,r,n){t.forEach(function(t){r[t]&&(n[t]=r[t])})}function w(t,r,n){function o(t){return t&&t.indexOf("###")>-1?t.replace(/###/g,"."):t}function a(){return!t||"string"==typeof t}for(var s="string"!=typeof r?[].concat(r):r.split(".");s.length>1;){if(a())return{};var l=o(s.shift());!t[l]&&n&&(t[l]=new n),t=t[l]}return a()?{}:{obj:t,k:o(s.shift())}}function _(t,r,n){var o=w(t,r,Object);o.obj[o.k]=n}function S(t,r,n,o){var a=w(t,r,Object),s=a.obj,l=a.k;s[l]=s[l]||[],o&&(s[l]=s[l].concat(n)),o||s[l].push(n)}function E(t,r){var n=w(t,r),o=n.obj,a=n.k;if(o)return o[a]}function T(t,r,n){var o=E(t,n);return void 0!==o?o:E(r,n)}function M(t,r,n){/* eslint no-restricted-syntax: 0 */for(var o in r)o in t?"string"==typeof t[o]||t[o]instanceof String||"string"==typeof r[o]||r[o]instanceof String?n&&(t[o]=r[o]):M(t[o],r[o],n):t[o]=r[o];return t}function C(t){/* eslint no-useless-escape: 0 */return t.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}/* eslint-disable */var O={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};/* eslint-enable */function N(t){return"string"==typeof t?t.replace(/[&<>"'\/]/g,function(t){return O[t]}):t}var A=/*#__PURE__*/function(t){function r(t){var n,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{ns:["translation"],defaultNS:"translation"};return l(this,r),n=u(this,p(r).call(this)),v.call(d(n)),n.data=t||{},n.options=o,void 0===n.options.keySeparator&&(n.options.keySeparator="."),n}return m(r,t),c(r,[{key:"addNamespaces",value:function(t){0>this.options.ns.indexOf(t)&&this.options.ns.push(t)}},{key:"removeNamespaces",value:function(t){var r=this.options.ns.indexOf(t);r>-1&&this.options.ns.splice(r,1)}},{key:"getResource",value:function(t,r,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=void 0!==o.keySeparator?o.keySeparator:this.options.keySeparator,s=[t,r];return n&&"string"!=typeof n&&(s=s.concat(n)),n&&"string"==typeof n&&(s=s.concat(a?n.split(a):n)),t.indexOf(".")>-1&&(s=t.split(".")),E(this.data,s)}},{key:"addResource",value:function(t,r,n,o){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{silent:!1},s=this.options.keySeparator;void 0===s&&(s=".");var l=[t,r];n&&(l=l.concat(s?n.split(s):n)),t.indexOf(".")>-1&&(l=t.split("."),o=r,r=l[1]),this.addNamespaces(r),_(this.data,l,o),a.silent||this.emit("added",t,r,n,o)}},{key:"addResources",value:function(t,r,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{silent:!1};/* eslint no-restricted-syntax: 0 */for(var a in n)("string"==typeof n[a]||"[object Array]"===Object.prototype.toString.apply(n[a]))&&this.addResource(t,r,a,n[a],{silent:!0});o.silent||this.emit("added",t,r,n)}},{key:"addResourceBundle",value:function(t,r,n,o,a){var l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{silent:!1},c=[t,r];t.indexOf(".")>-1&&(c=t.split("."),o=n,n=r,r=c[1]),this.addNamespaces(r);var u=E(this.data,c)||{};o?M(u,n,a):u=s({},u,n),_(this.data,c,u),l.silent||this.emit("added",t,r,n)}},{key:"removeResourceBundle",value:function(t,r){this.hasResourceBundle(t,r)&&delete this.data[t][r],this.removeNamespaces(r),this.emit("removed",t,r)}},{key:"hasResourceBundle",value:function(t,r){return void 0!==this.getResource(t,r)}},{key:"getResourceBundle",value:function(t,r){return(r||(r=this.options.defaultNS),"v1"===this.options.compatibilityAPI)?s({},{},this.getResource(t,r)):this.getResource(t,r)}},{key:"getDataByLanguage",value:function(t){return this.data[t]}},{key:"toJSON",value:function(){return this.data}}]),r}(v),R={processors:{},addPostProcessor:function(t){this.processors[t.name]=t},handle:function(t,r,n,o,a){var s=this;return t.forEach(function(t){s.processors[t]&&(r=s.processors[t].process(r,n,o,a))}),r}},L={},I=/*#__PURE__*/function(t){function r(t){var n,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return l(this,r),n=u(this,p(r).call(this)),v.call(d(n)),j(["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"],t,d(n)),n.options=o,void 0===n.options.keySeparator&&(n.options.keySeparator="."),n.logger=g.create("translator"),n}return m(r,t),c(r,[{key:"changeLanguage",value:function(t){t&&(this.language=t)}},{key:"exists",value:function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}},n=this.resolve(t,r);return n&&void 0!==n.res}},{key:"extractFromKey",value:function(t,r){var n=r.nsSeparator||this.options.nsSeparator;void 0===n&&(n=":");var o=void 0!==r.keySeparator?r.keySeparator:this.options.keySeparator,a=r.ns||this.options.defaultNS;if(n&&t.indexOf(n)>-1){var s=t.split(n);(n!==o||n===o&&this.options.ns.indexOf(s[0])>-1)&&(a=s.shift()),t=s.join(o)}return"string"==typeof a&&(a=[a]),{key:t,namespaces:a}}},{key:"translate",value:function(t,r){var n=this;if("object"!==a(r)&&this.options.overloadTranslationOptionHandler&&/* eslint prefer-rest-params: 0 */(r=this.options.overloadTranslationOptionHandler(arguments)),r||(r={}),null==t)return"";Array.isArray(t)||(t=[String(t)]);var o=void 0!==r.keySeparator?r.keySeparator:this.options.keySeparator,l=this.extractFromKey(t[t.length-1],r),c=l.key,u=l.namespaces,p=u[u.length-1],d=r.lng||this.language,m=r.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;// get namespace(s)
if(d&&"cimode"===d.toLowerCase())return m?p+(r.nsSeparator||this.options.nsSeparator)+c:c;// resolve from store
var f=this.resolve(t,r),h=f&&f.res,y=f&&f.usedKey||c,g=f&&f.exactUsedKey||c,v=Object.prototype.toString.apply(h),b=["[object Number]","[object Function]","[object RegExp]"],x=void 0!==r.joinArrays?r.joinArrays:this.options.joinArrays,j=!this.i18nFormat||this.i18nFormat.handleAsObject,w="string"!=typeof h&&"boolean"!=typeof h&&"number"!=typeof h;if(j&&h&&w&&0>b.indexOf(v)&&!("string"==typeof x&&"[object Array]"===v)){if(!r.returnObjects&&!this.options.returnObjects)return this.logger.warn("accessing an object - but returnObjects options is not enabled!"),this.options.returnedObjectHandler?this.options.returnedObjectHandler(y,h,r):"key '".concat(c," (").concat(this.language,")' returned an object instead of string.");// if we got a separator we loop over children - else we just return object as is
// as having it set to false means no hierarchy so no lookup for nested values
if(o){var _="[object Array]"===v,S=_?[]:{},E=_?g:y;for(var T in h)if(Object.prototype.hasOwnProperty.call(h,T)){var M="".concat(E).concat(o).concat(T);S[T]=this.translate(M,s({},r,{joinArrays:!1,ns:u})),S[T]===M&&(S[T]=h[T])}h=S}}else if(j&&"string"==typeof x&&"[object Array]"===v)// array special treatment
(h=h.join(x))&&(h=this.extendTranslation(h,t,r));else{// string, empty or null
var C=!1,O=!1;if(!this.isValidLookup(h)&&void 0!==r.defaultValue){if(C=!0,void 0!==r.count){var N=this.pluralResolver.getSuffix(d,r.count);h=r["defaultValue".concat(N)]}h||(h=r.defaultValue)}this.isValidLookup(h)||(O=!0,h=c);var A=r.defaultValue&&r.defaultValue!==h&&this.options.updateMissing;if(O||C||A){this.logger.log(A?"updateKey":"missingKey",d,p,c,A?r.defaultValue:h);var R=[],L=this.languageUtils.getFallbackCodes(this.options.fallbackLng,r.lng||this.language);if("fallback"===this.options.saveMissingTo&&L&&L[0])for(var I=0;I<L.length;I++)R.push(L[I]);else"all"===this.options.saveMissingTo?R=this.languageUtils.toResolveHierarchy(r.lng||this.language):R.push(r.lng||this.language);var P=function(t,o){n.options.missingKeyHandler?n.options.missingKeyHandler(t,p,o,A?r.defaultValue:h,A,r):n.backendConnector&&n.backendConnector.saveMissing&&n.backendConnector.saveMissing(t,p,o,A?r.defaultValue:h,A,r),n.emit("missingKey",t,p,o,h)};if(this.options.saveMissing){var D=void 0!==r.count&&"string"!=typeof r.count;this.options.saveMissingPlurals&&D?R.forEach(function(t){n.pluralResolver.getPluralFormsOfKey(t,c).forEach(function(r){return P([t],r)})}):P(R,c)}}// extend
h=this.extendTranslation(h,t,r,f),O&&h===c&&this.options.appendNamespaceToMissingKey&&(h="".concat(p,":").concat(c)),O&&this.options.parseMissingKeyHandler&&(h=this.options.parseMissingKeyHandler(h))}// return
return h}},{key:"extendTranslation",value:function(t,r,n,o){var a=this;if(this.i18nFormat&&this.i18nFormat.parse)t=this.i18nFormat.parse(t,n,o.usedLng,o.usedNS,o.usedKey,{resolved:o});else if(!n.skipInterpolation){n.interpolation&&this.interpolator.init(s({},n,{interpolation:s({},this.options.interpolation,n.interpolation)}));var l=n.replace&&"string"!=typeof n.replace?n.replace:n;this.options.interpolation.defaultVariables&&(l=s({},this.options.interpolation.defaultVariables,l)),t=this.interpolator.interpolate(t,l,n.lng||this.language,n),!1!==n.nest&&(t=this.interpolator.nest(t,function(){return a.translate.apply(a,arguments)},n)),n.interpolation&&this.interpolator.reset()}// post process
var c=n.postProcess||this.options.postProcess,u="string"==typeof c?[c]:c;return null!=t&&u&&u.length&&!1!==n.applyPostProcessor&&(t=R.handle(u,t,r,this.options&&this.options.postProcessPassResolved?s({i18nResolved:o},n):n,this)),t}},{key:"resolve",value:function(t){var r,n,o,a,s,l=this,c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"string"==typeof t&&(t=[t]),t.forEach(function(t){if(!l.isValidLookup(r)){var u=l.extractFromKey(t,c),p=u.key;n=p;var d=u.namespaces;l.options.fallbackNS&&(d=d.concat(l.options.fallbackNS));var m=void 0!==c.count&&"string"!=typeof c.count,f=void 0!==c.context&&"string"==typeof c.context&&""!==c.context,h=c.lngs?c.lngs:l.languageUtils.toResolveHierarchy(c.lng||l.language,c.fallbackLng);d.forEach(function(t){l.isValidLookup(r)||(s=t,!L["".concat(h[0],"-").concat(t)]&&l.utils&&l.utils.hasLoadedNamespace&&!l.utils.hasLoadedNamespace(s)&&(L["".concat(h[0],"-").concat(t)]=!0,l.logger.warn('key "'.concat(n,'" for namespace "').concat(s,'" for languages "').concat(h.join(", "),"\" won't get resolved as namespace was not yet loaded"),"This means something IS WRONG in your application setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),h.forEach(function(n){if(!l.isValidLookup(r)){a=n;var s,u,d=p,h=[d];/* eslint no-cond-assign: 0 */for(l.i18nFormat&&l.i18nFormat.addLookupKeys?l.i18nFormat.addLookupKeys(h,p,n,t,c):(m&&(s=l.pluralResolver.getSuffix(n,c.count)),m&&f&&h.push(d+s),f&&h.push(d+="".concat(l.options.contextSeparator).concat(c.context)),m&&h.push(d+=s));u=h.pop();)l.isValidLookup(r)||(o=u,r=l.getResource(n,t,u,c))}}))})}}),{res:r,usedKey:n,exactUsedKey:o,usedLng:a,usedNS:s}}},{key:"isValidLookup",value:function(t){return void 0!==t&&!(!this.options.returnNull&&null===t)&&!(!this.options.returnEmptyString&&""===t)}},{key:"getResource",value:function(t,r,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(t,r,n,o):this.resourceStore.getResource(t,r,n,o)}}]),r}(v);function P(t){return t.charAt(0).toUpperCase()+t.slice(1)}var D=/*#__PURE__*/function(){function t(r){l(this,t),this.options=r,this.whitelist=this.options.whitelist||!1,this.logger=g.create("languageUtils")}return c(t,[{key:"getScriptPartFromCode",value:function(t){if(!t||0>t.indexOf("-"))return null;var r=t.split("-");return 2===r.length?null:(r.pop(),this.formatLanguageCode(r.join("-")))}},{key:"getLanguagePartFromCode",value:function(t){if(!t||0>t.indexOf("-"))return t;var r=t.split("-");return this.formatLanguageCode(r[0])}},{key:"formatLanguageCode",value:function(t){// http://www.iana.org/assignments/language-tags/language-tags.xhtml
if("string"==typeof t&&t.indexOf("-")>-1){var r=["hans","hant","latn","cyrl","cans","mong","arab"],n=t.split("-");return this.options.lowerCaseLng?n=n.map(function(t){return t.toLowerCase()}):2===n.length?(n[0]=n[0].toLowerCase(),n[1]=n[1].toUpperCase(),r.indexOf(n[1].toLowerCase())>-1&&(n[1]=P(n[1].toLowerCase()))):3===n.length&&(n[0]=n[0].toLowerCase(),2===n[1].length&&(n[1]=n[1].toUpperCase()),"sgn"!==n[0]&&2===n[2].length&&(n[2]=n[2].toUpperCase()),r.indexOf(n[1].toLowerCase())>-1&&(n[1]=P(n[1].toLowerCase())),r.indexOf(n[2].toLowerCase())>-1&&(n[2]=P(n[2].toLowerCase()))),n.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?t.toLowerCase():t}},{key:"isWhitelisted",value:function(t){return("languageOnly"===this.options.load||this.options.nonExplicitWhitelist)&&(t=this.getLanguagePartFromCode(t)),!this.whitelist||!this.whitelist.length||this.whitelist.indexOf(t)>-1}},{key:"getFallbackCodes",value:function(t,r){if(!t)return[];if("string"==typeof t&&(t=[t]),"[object Array]"===Object.prototype.toString.apply(t))return t;if(!r)return t.default||[];// asume we have an object defining fallbacks
var n=t[r];return n||(n=t[this.getScriptPartFromCode(r)]),n||(n=t[this.formatLanguageCode(r)]),n||(n=t.default),n||[]}},{key:"toResolveHierarchy",value:function(t,r){var n=this,o=this.getFallbackCodes(r||this.options.fallbackLng||[],t),a=[],s=function(t){t&&(n.isWhitelisted(t)?a.push(t):n.logger.warn("rejecting non-whitelisted language code: ".concat(t)))};return"string"==typeof t&&t.indexOf("-")>-1?("languageOnly"!==this.options.load&&s(this.formatLanguageCode(t)),"languageOnly"!==this.options.load&&"currentOnly"!==this.options.load&&s(this.getScriptPartFromCode(t)),"currentOnly"!==this.options.load&&s(this.getLanguagePartFromCode(t))):"string"==typeof t&&s(this.formatLanguageCode(t)),o.forEach(function(t){0>a.indexOf(t)&&s(n.formatLanguageCode(t))}),a}}]),t}(),F=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","id","ja","jbo","ka","kk","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he"],nr:[1,2,20,21],fc:22}],U={1:function(t){return Number(t>1)},2:function(t){return Number(1!=t)},3:function(t){return 0},4:function(t){return Number(t%10==1&&t%100!=11?0:t%10>=2&&t%10<=4&&(t%100<10||t%100>=20)?1:2)},5:function(t){return Number(0===t?0:1==t?1:2==t?2:t%100>=3&&t%100<=10?3:t%100>=11?4:5)},6:function(t){return Number(1==t?0:t>=2&&t<=4?1:2)},7:function(t){return Number(1==t?0:t%10>=2&&t%10<=4&&(t%100<10||t%100>=20)?1:2)},8:function(t){return Number(1==t?0:2==t?1:8!=t&&11!=t?2:3)},9:function(t){return Number(t>=2)},10:function(t){return Number(1==t?0:2==t?1:t<7?2:t<11?3:4)},11:function(t){return Number(1==t||11==t?0:2==t||12==t?1:t>2&&t<20?2:3)},12:function(t){return Number(t%10!=1||t%100==11)},13:function(t){return Number(0!==t)},14:function(t){return Number(1==t?0:2==t?1:3==t?2:3)},15:function(t){return Number(t%10==1&&t%100!=11?0:t%10>=2&&(t%100<10||t%100>=20)?1:2)},16:function(t){return Number(t%10==1&&t%100!=11?0:0!==t?1:2)},17:function(t){return Number(1==t||t%10==1?0:1)},18:function(t){return Number(0==t?0:1==t?1:2)},19:function(t){return Number(1==t?0:0===t||t%100>1&&t%100<11?1:t%100>10&&t%100<20?2:3)},20:function(t){return Number(1==t?0:0===t||t%100>0&&t%100<20?1:2)},21:function(t){return Number(t%100==1?1:t%100==2?2:t%100==3||t%100==4?3:0)},22:function(t){return Number(1===t?0:2===t?1:(t<0||t>10)&&t%10==0?2:3)}};/* eslint-enable */function B(){var t={};return F.forEach(function(r){r.lngs.forEach(function(n){t[n]={numbers:r.nr,plurals:U[r.fc]}})}),t}var G=/*#__PURE__*/function(){function t(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};l(this,t),this.languageUtils=r,this.options=n,this.logger=g.create("pluralResolver"),this.rules=B()}return c(t,[{key:"addRule",value:function(t,r){this.rules[t]=r}},{key:"getRule",value:function(t){return this.rules[t]||this.rules[this.languageUtils.getLanguagePartFromCode(t)]}},{key:"needsPlural",value:function(t){var r=this.getRule(t);return r&&r.numbers.length>1}},{key:"getPluralFormsOfKey",value:function(t,r){var n=this,o=[],a=this.getRule(t);return a&&a.numbers.forEach(function(a){var s=n.getSuffix(t,a);o.push("".concat(r).concat(s))}),o}},{key:"getSuffix",value:function(t,r){var n=this,o=this.getRule(t);if(o){// if (rule.numbers.length === 1) return ''; // only singular
var a=o.noAbs?o.plurals(r):o.plurals(Math.abs(r)),s=o.numbers[a];this.options.simplifyPluralSuffix&&2===o.numbers.length&&1===o.numbers[0]&&(2===s?s="plural":1===s&&(s=""));var l=function(){return n.options.prepend&&s.toString()?n.options.prepend+s.toString():s.toString()};// COMPATIBILITY JSON
return(// v1
"v1"===this.options.compatibilityJSON?1===s?"":"number"==typeof s?"_plural_".concat(s.toString()):l():/* v2 */"v2"===this.options.compatibilityJSON?l():/* v3 - gettext index */this.options.simplifyPluralSuffix&&2===o.numbers.length&&1===o.numbers[0]?l():this.options.prepend&&a.toString()?this.options.prepend+a.toString():a.toString())}return this.logger.warn("no plural rule found for: ".concat(t)),""}}]),t}(),V=/*#__PURE__*/function(){function t(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};l(this,t),this.logger=g.create("interpolator"),this.options=r,this.format=r.interpolation&&r.interpolation.format||function(t){return t},this.init(r)}/* eslint no-param-reassign: 0 */return c(t,[{key:"init",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};t.interpolation||(t.interpolation={escapeValue:!0});var r=t.interpolation;this.escape=void 0!==r.escape?r.escape:N,this.escapeValue=void 0===r.escapeValue||r.escapeValue,this.useRawValueToEscape=void 0!==r.useRawValueToEscape&&r.useRawValueToEscape,this.prefix=r.prefix?C(r.prefix):r.prefixEscaped||"{{",this.suffix=r.suffix?C(r.suffix):r.suffixEscaped||"}}",this.formatSeparator=r.formatSeparator?r.formatSeparator:r.formatSeparator||",",this.unescapePrefix=r.unescapeSuffix?"":r.unescapePrefix||"-",this.unescapeSuffix=this.unescapePrefix?"":r.unescapeSuffix||"",this.nestingPrefix=r.nestingPrefix?C(r.nestingPrefix):r.nestingPrefixEscaped||C("$t("),this.nestingSuffix=r.nestingSuffix?C(r.nestingSuffix):r.nestingSuffixEscaped||C(")"),this.maxReplaces=r.maxReplaces?r.maxReplaces:1e3,this.resetRegExp()}},{key:"reset",value:function(){this.options&&this.init(this.options)}},{key:"resetRegExp",value:function(){// the regexp
var t="".concat(this.prefix,"(.+?)").concat(this.suffix);this.regexp=RegExp(t,"g");var r="".concat(this.prefix).concat(this.unescapePrefix,"(.+?)").concat(this.unescapeSuffix).concat(this.suffix);this.regexpUnescape=RegExp(r,"g");var n="".concat(this.nestingPrefix,"(.+?)").concat(this.nestingSuffix);this.nestingRegexp=RegExp(n,"g")}},{key:"interpolate",value:function(t,r,n,o){var a,s,l,c=this,u=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function p(t){return t.replace(/\$/g,"$$$$")}var d=function(t){if(0>t.indexOf(c.formatSeparator))return T(r,u,t);var o=t.split(c.formatSeparator),a=o.shift().trim(),s=o.join(c.formatSeparator).trim();return c.format(T(r,u,a),s,n)};this.resetRegExp();var m=o&&o.missingInterpolationHandler||this.options.missingInterpolationHandler;/* eslint no-cond-assign: 0 */for(l=0;a=this.regexpUnescape.exec(t);){if(void 0===(s=d(a[1].trim()))){if("function"==typeof m){var f=m(t,a,o);s="string"==typeof f?f:""}else this.logger.warn("missed to pass in variable ".concat(a[1]," for interpolating ").concat(t)),s=""}else"string"==typeof s||this.useRawValueToEscape||(s=x(s));if(t=t.replace(a[0],p(s)),this.regexpUnescape.lastIndex=0,++l>=this.maxReplaces)break}for(l=0;a=this.regexp.exec(t);){if(void 0===(s=d(a[1].trim()))){if("function"==typeof m){var h=m(t,a,o);s="string"==typeof h?h:""}else this.logger.warn("missed to pass in variable ".concat(a[1]," for interpolating ").concat(t)),s=""}else"string"==typeof s||this.useRawValueToEscape||(s=x(s));if(s=p(this.escapeValue?this.escape(s):s),t=t.replace(a[0],s),this.regexp.lastIndex=0,++l>=this.maxReplaces)break}return t}},{key:"nest",value:function(t,r){var n,o,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},l=s({},a);// if value is something like "myKey": "lorem $(anotherKey, { "count": {{aValueInOptions}} })"
function c(t,r){if(0>t.indexOf(","))return t;var n=t.split(",");t=n.shift();var o=n.join(",");o=(o=this.interpolate(o,l)).replace(/'/g,'"');try{l=JSON.parse(o),r&&(l=s({},r,l))}catch(r){this.logger.error("failed parsing options string in nesting for key ".concat(t),r)}// assert we do not get a endless loop on interpolating defaultValue again and again
return delete l.defaultValue,t}// regular escape on demand
for(l.applyPostProcessor=!1,delete l.defaultValue;n=this.nestingRegexp.exec(t);){if((o=r(c.call(this,n[1].trim(),l),l))&&n[0]===t&&"string"!=typeof o)return o;// no string to include or empty
"string"!=typeof o&&(o=x(o)),o||(this.logger.warn("missed to resolve ".concat(n[1]," for nesting ").concat(t)),o=""),// value = this.escapeValue ? regexSafe(utils.escape(value)) : regexSafe(value);
t=t.replace(n[0],o),this.regexp.lastIndex=0}return t}}]),t}();function z(t,r){for(var n=t.indexOf(r);-1!==n;)t.splice(n,1),n=t.indexOf(r)}var H=/*#__PURE__*/function(t){function r(t,n,o){var a,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return l(this,r),a=u(this,p(r).call(this)),v.call(d(a)),a.backend=t,a.store=n,a.services=o,a.languageUtils=o.languageUtils,a.options=s,a.logger=g.create("backendConnector"),a.state={},a.queue=[],a.backend&&a.backend.init&&a.backend.init(o,s.backend,s),a}return m(r,t),c(r,[{key:"queueLoad",value:function(t,r,n,o){var a=this,s=[],l=[],c=[],u=[];// find what needs to be loaded
return t.forEach(function(t){var o=!0;r.forEach(function(r){var c="".concat(t,"|").concat(r);!n.reload&&a.store.hasResourceBundle(t,r)?a.state[c]=2:a.state[c]<0||(1===a.state[c]?0>l.indexOf(c)&&l.push(c):(a.state[c]=1,o=!1,0>l.indexOf(c)&&l.push(c),0>s.indexOf(c)&&s.push(c),0>u.indexOf(r)&&u.push(r)))}),o||c.push(t)}),(s.length||l.length)&&this.queue.push({pending:l,loaded:{},errors:[],callback:o}),{toLoad:s,pending:l,toLoadLanguages:c,toLoadNamespaces:u}}},{key:"loaded",value:function(t,r,n){var o=h(t.split("|"),2),a=o[0],s=o[1];r&&this.emit("failedLoading",a,s,r),n&&this.store.addResourceBundle(a,s,n),// set loaded
this.state[t]=r?-1:2;var l={};// callback if ready
this.queue.forEach(function(n){S(n.loaded,[a],s),z(n.pending,t),r&&n.errors.push(r),0!==n.pending.length||n.done||(// only do once per loaded -> this.emit('loaded', q.loaded);
Object.keys(n.loaded).forEach(function(t){l[t]||(l[t]=[]),n.loaded[t].length&&n.loaded[t].forEach(function(r){0>l[t].indexOf(r)&&l[t].push(r)})}),/* eslint no-param-reassign: 0 */n.done=!0,n.errors.length?n.callback(n.errors):n.callback())}),this.emit("loaded",l),this.queue=this.queue.filter(function(t){return!t.done})}},{key:"read",value:function(t,r,n){var o=this,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:250,l=arguments.length>5?arguments[5]:void 0;return t.length?this.backend[n](t,r,function(c,u){if(c&&u/* = retryFlag */&&a<5){setTimeout(function(){o.read.call(o,t,r,n,a+1,2*s,l)},s);return}l(c,u)}):l(null,{})// noting to load
}/* eslint consistent-return: 0 */},{key:"prepareLoading",value:function(t,r){var n=this,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),a&&a();"string"==typeof t&&(t=this.languageUtils.toResolveHierarchy(t)),"string"==typeof r&&(r=[r]);var s=this.queueLoad(t,r,o,a);if(!s.toLoad.length)return s.pending.length||a(),null;// pendings will trigger callback
s.toLoad.forEach(function(t){n.loadOne(t)})}},{key:"load",value:function(t,r,n){this.prepareLoading(t,r,{},n)}},{key:"reload",value:function(t,r,n){this.prepareLoading(t,r,{reload:!0},n)}},{key:"loadOne",value:function(t){var r=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",o=h(t.split("|"),2),a=o[0],s=o[1];this.read(a,s,"read",null,null,function(o,l){o&&r.logger.warn("".concat(n,"loading namespace ").concat(s," for language ").concat(a," failed"),o),!o&&l&&r.logger.log("".concat(n,"loaded namespace ").concat(s," for language ").concat(a),l),r.loaded(t,o,l)})}},{key:"saveMissing",value:function(t,r,n,o,a){var l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};if(this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(r)){this.logger.warn('did not save key "'.concat(n,'" for namespace "').concat(r,'" as the namespace was not yet loaded'),"This means something IS WRONG in your application setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");return}// ignore non valid keys
null!=n&&""!==n&&(this.backend&&this.backend.create&&this.backend.create(t,r,n,o,null,s({},l,{isUpdate:a})),t&&t[0]&&this.store.addResource(t[0],r,n,o))}}]),r}(v);function W(){return{debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,// string or array of namespaces
whitelist:!1,// array with whitelisted languages
nonExplicitWhitelist:!1,load:"all",// | currentOnly | languageOnly
preload:!1,// array with preload languages
simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,// allow bundling certain languages that are not remotely fetched
saveMissing:!1,// enable to send missing values
updateMissing:!1,// enable to update default values if different from translated value (only useful on initial development, or when keeping code as source of truth)
saveMissingTo:"fallback",// 'current' || 'all'
saveMissingPlurals:!0,// will save all forms not only singular key
missingKeyHandler:!1,// function(lng, ns, key, fallbackValue) -> override if prefer on handling
missingInterpolationHandler:!1,// function(str, match)
postProcess:!1,// string or array of postProcessor names
postProcessPassResolved:!1,// pass resolved object into 'options.i18nResolved' for postprocessor
returnNull:!0,// allows null value as valid translation
returnEmptyString:!0,// allows empty string value as valid translation
returnObjects:!1,joinArrays:!1,// or string to join array
returnedObjectHandler:!1,// function(key, value, options) triggered if key returns object but returnObjects is set to false
parseMissingKeyHandler:!1,// function(key) parsed a key that was not found in t() before returning
appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(t){var r={};if("object"===a(t[1])&&(r=t[1]),"string"==typeof t[1]&&(r.defaultValue=t[1]),"string"==typeof t[2]&&(r.tDescription=t[2]),"object"===a(t[2])||"object"===a(t[3])){var n=t[3]||t[2];Object.keys(n).forEach(function(t){r[t]=n[t]})}return r},interpolation:{escapeValue:!0,format:function(t,r,n){return t},prefix:"{{",suffix:"}}",formatSeparator:",",// prefixEscaped: '{{',
// suffixEscaped: '}}',
// unescapeSuffix: '',
unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",// nestingPrefixEscaped: '$t(',
// nestingSuffixEscaped: ')',
// defaultVariables: undefined // object that can have values to interpolate on - extends passed in interpolation data
maxReplaces:1e3// max replaces to prevent endless loop
}}}/* eslint no-param-reassign: 0 */function q(t){return"string"==typeof t.ns&&(t.ns=[t.ns]),"string"==typeof t.fallbackLng&&(t.fallbackLng=[t.fallbackLng]),"string"==typeof t.fallbackNS&&(t.fallbackNS=[t.fallbackNS]),t.whitelist&&0>t.whitelist.indexOf("cimode")&&(t.whitelist=t.whitelist.concat(["cimode"])),t}function X(){}var Y=new/*#__PURE__*/(function(t){function r(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1?arguments[1]:void 0;if(l(this,r),t=u(this,p(r).call(this)),v.call(d(t)),t.options=q(n),t.services={},t.logger=g,t.modules={external:[]},o&&!t.isInitialized&&!n.isClone){// https://github.com/i18next/i18next/issues/879
if(!t.options.initImmediate)return t.init(n,o),u(t,d(t));setTimeout(function(){t.init(n,o)},0)}return t}return m(r,t),c(r,[{key:"init",value:function(){var t=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;function o(t){return t?"function"==typeof t?new t:t:null}// init services
if("function"==typeof r&&(n=r,r={}),this.options=s({},W(),this.options,q(r)),this.format=this.options.interpolation.format,n||(n=X),!this.options.isClone){this.modules.logger?g.init(o(this.modules.logger),this.options):g.init(null,this.options);var a=new D(this.options);this.store=new A(this.options.resources,this.options);var l=this.services;l.logger=g,l.resourceStore=this.store,l.languageUtils=a,l.pluralResolver=new G(a,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),l.interpolator=new V(this.options),l.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},l.backendConnector=new H(o(this.modules.backend),l.resourceStore,l,this.options),l.backendConnector.on("*",function(r){for(var n=arguments.length,o=Array(n>1?n-1:0),a=1;a<n;a++)o[a-1]=arguments[a];t.emit.apply(t,[r].concat(o))}),this.modules.languageDetector&&(l.languageDetector=o(this.modules.languageDetector),l.languageDetector.init(l,this.options.detection,this.options)),this.modules.i18nFormat&&(l.i18nFormat=o(this.modules.i18nFormat),l.i18nFormat.init&&l.i18nFormat.init(this)),this.translator=new I(this.services,this.options),this.translator.on("*",function(r){for(var n=arguments.length,o=Array(n>1?n-1:0),a=1;a<n;a++)o[a-1]=arguments[a];t.emit.apply(t,[r].concat(o))}),this.modules.external.forEach(function(r){r.init&&r.init(t)})}// append api
["getResource","addResource","addResources","addResourceBundle","removeResourceBundle","hasResourceBundle","getResourceBundle","getDataByLanguage"].forEach(function(r){t[r]=function(){var n;return(n=t.store)[r].apply(n,arguments)}});var c=b(),u=function(){t.changeLanguage(t.options.lng,function(r,o){t.isInitialized=!0,t.logger.log("initialized",t.options),t.emit("initialized",t.options),c.resolve(o),n(r,o)})};return this.options.resources||!this.options.initImmediate?u():setTimeout(u,0),c}/* eslint consistent-return: 0 */},{key:"loadResources",value:function(t){var r=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:X,o=n,a="string"==typeof t?t:this.language;if("function"==typeof t&&(o=t),!this.options.resources||this.options.partialBundledLanguages){if(a&&"cimode"===a.toLowerCase())return o();// avoid loading resources for cimode
var s=[],l=function(t){if(t){var n=r.services.languageUtils.toResolveHierarchy(t);n.forEach(function(t){0>s.indexOf(t)&&s.push(t)})}};a?l(a):this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach(function(t){return l(t)}),this.options.preload&&this.options.preload.forEach(function(t){return l(t)}),this.services.backendConnector.load(s,this.options.ns,o)}else o(null)}},{key:"reloadResources",value:function(t,r,n){var o=b();return t||(t=this.languages),r||(r=this.options.ns),n||(n=X),this.services.backendConnector.reload(t,r,function(t){o.resolve(),n(t)}),o}},{key:"use",value:function(t){return"backend"===t.type&&(this.modules.backend=t),("logger"===t.type||t.log&&t.warn&&t.error)&&(this.modules.logger=t),"languageDetector"===t.type&&(this.modules.languageDetector=t),"i18nFormat"===t.type&&(this.modules.i18nFormat=t),"postProcessor"===t.type&&R.addPostProcessor(t),"3rdParty"===t.type&&this.modules.external.push(t),this}},{key:"changeLanguage",value:function(t,r){var n=this;this.isLanguageChangingTo=t;var o=b();this.emit("languageChanging",t);var a=function(t,a){a?(n.language=a,n.languages=n.services.languageUtils.toResolveHierarchy(a),n.translator.changeLanguage(a),n.isLanguageChangingTo=void 0,n.emit("languageChanged",a),n.logger.log("languageChanged",a)):n.isLanguageChangingTo=void 0,o.resolve(function(){return n.t.apply(n,arguments)}),r&&r(t,function(){return n.t.apply(n,arguments)})},s=function(t){t&&(n.language||(n.language=t,n.languages=n.services.languageUtils.toResolveHierarchy(t)),n.translator.language||n.translator.changeLanguage(t),n.services.languageDetector&&n.services.languageDetector.cacheUserLanguage(t)),n.loadResources(t,function(r){a(r,t)})};return t||!this.services.languageDetector||this.services.languageDetector.async?!t&&this.services.languageDetector&&this.services.languageDetector.async?this.services.languageDetector.detect(s):s(t):s(this.services.languageDetector.detect()),o}},{key:"getFixedT",value:function(t,r){var n=this,o=function t(r,o){var l;if("object"!==a(o)){for(var c=arguments.length,u=Array(c>2?c-2:0),p=2;p<c;p++)u[p-2]=arguments[p];l=n.options.overloadTranslationOptionHandler([r,o].concat(u))}else l=s({},o);return l.lng=l.lng||t.lng,l.lngs=l.lngs||t.lngs,l.ns=l.ns||t.ns,n.t(r,l)};return"string"==typeof t?o.lng=t:o.lngs=t,o.ns=r,o}},{key:"t",value:function(){var t;return this.translator&&(t=this.translator).translate.apply(t,arguments)}},{key:"exists",value:function(){var t;return this.translator&&(t=this.translator).exists.apply(t,arguments)}},{key:"setDefaultNamespace",value:function(t){this.options.defaultNS=t}},{key:"hasLoadedNamespace",value:function(t){var r=this;if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;var n=this.languages[0],o=!!this.options&&this.options.fallbackLng,a=this.languages[this.languages.length-1];if("cimode"===n.toLowerCase())return!0;var s=function(t,n){var o=r.services.backendConnector.state["".concat(t,"|").concat(n)];return -1===o||2===o};// loaded -> SUCCESS
return!!(this.hasResourceBundle(n,t)||!this.services.backendConnector.backend||s(n,t)&&(!o||s(a,t)))}},{key:"loadNamespaces",value:function(t,r){var n=this,o=b();return this.options.ns?("string"==typeof t&&(t=[t]),t.forEach(function(t){0>n.options.ns.indexOf(t)&&n.options.ns.push(t)}),this.loadResources(function(t){o.resolve(),r&&r(t)}),o):(r&&r(),Promise.resolve())}},{key:"loadLanguages",value:function(t,r){var n=b();"string"==typeof t&&(t=[t]);var o=this.options.preload||[],a=t.filter(function(t){return 0>o.indexOf(t)});return a.length?(this.options.preload=o.concat(a),this.loadResources(function(t){n.resolve(),r&&r(t)}),n):(r&&r(),Promise.resolve())}},{key:"dir",value:function(t){return(t||(t=this.languages&&this.languages.length>0?this.languages[0]:this.language),t)?["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam"].indexOf(this.services.languageUtils.getLanguagePartFromCode(t))>=0?"rtl":"ltr":"rtl"}/* eslint class-methods-use-this: 0 */},{key:"createInstance",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;return new r(t,n)}},{key:"cloneInstance",value:function(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:X,a=s({},this.options,n,{isClone:!0}),l=new r(a);return["store","services","language"].forEach(function(r){l[r]=t[r]}),l.translator=new I(l.services,l.options),l.translator.on("*",function(t){for(var r=arguments.length,n=Array(r>1?r-1:0),o=1;o<r;o++)n[o-1]=arguments[o];l.emit.apply(l,[t].concat(n))}),l.init(a,o),l.translator.options=l.options,l}}]),r}(v));r.exports=Y},{"@babel/runtime/helpers/assertThisInitialized":4,"@babel/runtime/helpers/classCallCheck":5,"@babel/runtime/helpers/createClass":6,"@babel/runtime/helpers/getPrototypeOf":8,"@babel/runtime/helpers/inherits":9,"@babel/runtime/helpers/objectSpread":14,"@babel/runtime/helpers/possibleConstructorReturn":15,"@babel/runtime/helpers/slicedToArray":17,"@babel/runtime/helpers/toConsumableArray":18,"@babel/runtime/helpers/typeof":19}],266:[function(t,r,n){n.read=function(t,r,n,o,a){var s,l,c=8*a-o-1,u=(1<<c)-1,p=u>>1,d=-7,m=n?a-1:0,f=n?-1:1,h=t[r+m];for(m+=f,s=h&(1<<-d)-1,h>>=-d,d+=c;d>0;s=256*s+t[r+m],m+=f,d-=8);for(l=s&(1<<-d)-1,s>>=-d,d+=o;d>0;l=256*l+t[r+m],m+=f,d-=8);if(0===s)s=1-p;else{if(s===u)return l?NaN:(h?-1:1)*(1/0);l+=Math.pow(2,o),s-=p}return(h?-1:1)*l*Math.pow(2,s-o)},n.write=function(t,r,n,o,a,s){var l,c,u,p=8*s-a-1,d=(1<<p)-1,m=d>>1,f=23===a?5960464477539062e-23:0,h=o?0:s-1,y=o?1:-1,g=r<0||0===r&&1/r<0?1:0;for(isNaN(r=Math.abs(r))||r===1/0?(c=isNaN(r)?1:0,l=d):(l=Math.floor(Math.log(r)/Math.LN2),r*(u=Math.pow(2,-l))<1&&(l--,u*=2),l+m>=1?r+=f/u:r+=f*Math.pow(2,1-m),r*u>=2&&(l++,u/=2),l+m>=d?(c=0,l=d):l+m>=1?(c=(r*u-1)*Math.pow(2,a),l+=m):(c=r*Math.pow(2,m-1)*Math.pow(2,a),l=0));a>=8;t[n+h]=255&c,h+=y,c/=256,a-=8);for(l=l<<a|c,p+=a;p>0;t[n+h]=255&l,h+=y,l/=256,p-=8);t[n+h-y]|=128*g}},{}],267:[function(t,r,n){function o(t,r){return t.b===r.b&&t.a===r.a}function a(t,r){return t.b<r.b||t.b===r.b&&t.a<=r.a}function s(t,r,n){var o=r.b-t.b,a=n.b-r.b;return 0<o+a?o<a?r.a-t.a+o/(o+a)*(t.a-n.a):r.a-n.a+a/(o+a)*(n.a-t.a):0}function l(t,r,n){var o=r.b-t.b,a=n.b-r.b;return 0<o+a?(r.a-n.a)*o+(r.a-t.a)*a:0}function c(t,r){return t.a<r.a||t.a===r.a&&t.b<=r.b}function u(t,r,n){var o=r.a-t.a,a=n.a-r.a;return 0<o+a?o<a?r.b-t.b+o/(o+a)*(t.b-n.b):r.b-n.b+a/(o+a)*(n.b-t.b):0}function p(t,r,n){var o=r.a-t.a,a=n.a-r.a;return 0<o+a?(r.b-n.b)*o+(r.b-t.b)*a:0}function d(t){return a(t.b.a,t.a)}function m(t){return a(t.a,t.b.a)}function f(t,r,n,o){return(t=0>t?0:t)<=(n=0>n?0:n)?0===n?(r+o)/2:r+t/(t+n)*(o-r):o+n/(t+n)*(r-o)}function h(t){var r=x(t.b);return w(r,t.c),w(r.b,t.c),_(r,t.a),r}function y(t,r){var n=!1,o=!1;t!==r&&(r.a!==t.a&&(o=!0,E(r.a,t.a)),r.d!==t.d&&(n=!0,T(r.d,t.d)),j(r,t),o||(w(r,t.a),t.a.c=t),n||(_(r,t.d),t.d.a=t))}function g(t){var r=t.b,n=!1;t.d!==t.b.d&&(n=!0,T(t.d,t.b.d)),t.c===t?E(t.a,null):(t.b.d.a=eo(t),t.a.c=t.c,j(t,eo(t)),n||_(t,t.d)),r.c===r?(E(r.a,null),T(r.d,null)):(t.d.a=eo(r),r.a.c=r.c,j(r,eo(r))),S(t)}function v(t){var r=x(t),n=r.b;return j(r,t.e),r.a=t.b.a,w(n,r.a),r.d=n.d=t.d,r=r.b,j(t.b,eo(t.b)),j(t.b,r),t.b.a=r.a,r.b.a.c=r.b,r.b.d=t.b.d,r.f=t.f,r.b.f=t.b.f,r}function b(t,r){var n=!1,o=x(t),a=o.b;return r.d!==t.d&&(n=!0,T(r.d,t.d)),j(o,t.e),j(a,r),o.a=t.b.a,a.a=r.a,o.d=a.d=t.d,t.d.a=a,n||_(o,t.d),o}function x(t){var r=new en,n=new en,o=t.b.h;return n.h=o,o.b.h=r,r.h=t,t.b.h=n,r.b=n,r.c=r,r.e=n,n.b=r,n.c=n,n.e=r}function j(t,r){var n=t.c,o=r.c;n.b.e=r,o.b.e=t,t.c=o,r.c=n}function w(t,r){var n=r.f,o=new es(r,n);n.e=o,r.f=o,n=o.c=t;do n.a=o,n=n.c;while(n!==t)}function _(t,r){var n=r.d,o=new er(r,n);n.b=o,r.d=o,o.a=t,o.c=r.c,n=t;do n.d=o,n=n.e;while(n!==t)}function S(t){var r=t.h;t=t.b.h,r.b.h=t,t.b.h=r}function E(t,r){var n=t.c,o=n;do o.a=r,o=o.c;while(o!==n)n=t.f,(o=t.e).f=n,n.e=o}function T(t,r){var n=t.a,o=n;do o.d=r,o=o.e;while(o!==n)n=t.d,(o=t.b).d=n,n.b=o}function M(t){var r=0;return Math.abs(t[1])>Math.abs(t[0])&&(r=1),Math.abs(t[2])>Math.abs(t[r])&&(r=2),r}var C,O=4*1e150;function N(t,r){t.f+=r.f,t.b.f+=r.b.f}function A(t,r,n){return(t=t.a,r=r.a,n=n.a,r.b.a===t)?n.b.a===t?a(r.a,n.a)?0>=l(n.b.a,r.a,n.a):0<=l(r.b.a,n.a,r.a):0>=l(n.b.a,t,n.a):n.b.a===t?0<=l(r.b.a,t,r.a):(r=s(r.b.a,t,r.a))>=(t=s(n.b.a,t,n.a))}function R(t){t.a.i=null;var r=t.e;r.a.c=r.c,r.c.a=r.a,t.e=null}function L(t,r){g(t.a),t.c=!1,t.a=r,r.i=t}function I(t){var r=t.a.a;do t=ex(t);while(t.a.a===r)return t.c&&(r=b(eb(t).a.b,t.a.e),L(t,r),t=ex(t)),t}function P(t,r,n){var o=new ev;return o.a=n,o.e=K(t.f,r.e,o),n.i=o}function D(t,r){switch(t.s){case 100130:return 0!=(1&r);case 100131:return 0!==r;case 100132:return 0<r;case 100133:return 0>r;case 100134:return 2<=r||-2>=r}return!1}function F(t){var r=t.a,n=r.d;n.c=t.d,n.a=r,R(t)}function U(t,r,n){for(t=r,r=r.a;t!==n;){t.c=!1;var o=eb(t),a=o.a;if(a.a!==r.a){if(!o.c){F(t);break}L(o,a=b(r.c.b,a.b))}r.c!==a&&(y(eo(a),a),y(r,a)),F(t),r=o.a,t=o}return r}function B(t,r,n,o,a,s){var l=!0;do P(t,r,n.b),n=n.c;while(n!==o)for(null===a&&(a=eb(r).a.b.c);(n=(o=eb(r)).a.b).a===a.a;)n.c!==a&&(y(eo(n),n),y(eo(a),n)),o.f=r.f-n.f,o.d=D(t,o.f),r.b=!0,!l&&H(t,r)&&(N(n,a),R(r),g(a)),l=!1,r=o,a=n;r.b=!0,s&&q(t,r)}function G(t,r,n,o,a){var s=[r.g[0],r.g[1],r.g[2]];r.d=null,r.d=t.o&&t.o(s,n,o,t.c)||null,null===r.d&&(a?t.n||(et(t,100156),t.n=!0):r.d=n[0])}function V(t,r,n){var o=[null,null,null,null];o[0]=r.a.d,o[1]=n.a.d,G(t,r.a,o,[.5,.5,0,0],!1),y(r,n)}function z(t,r,n,o,a){var s=Math.abs(r.b-t.b)+Math.abs(r.a-t.a),l=Math.abs(n.b-t.b)+Math.abs(n.a-t.a),c=a+1;o[a]=.5*l/(s+l),o[c]=.5*s/(s+l),t.g[0]+=o[a]*r.g[0]+o[c]*n.g[0],t.g[1]+=o[a]*r.g[1]+o[c]*n.g[1],t.g[2]+=o[a]*r.g[2]+o[c]*n.g[2]}function H(t,r){var n=eb(r),s=r.a,c=n.a;if(a(s.a,c.a)){if(0<l(c.b.a,s.a,c.a))return!1;if(o(s.a,c.a)){if(s.a!==c.a){var n=t.e,u=s.a.h;if(0<=u){var n=n.b,p=n.d,d=n.e,m=n.c,f=m[u];p[f]=p[n.a],m[p[f]]=f,f<=--n.a&&(1>=f?ey(n,f):a(d[p[f>>1]],d[p[f]])?ey(n,f):eg(n,f)),d[u]=null,m[u]=n.b,n.b=u}else for(n.c[-(u+1)]=null;0<n.a&&null===n.c[n.d[n.a-1]];)--n.a;V(t,eo(c),s)}}else v(c.b),y(s,eo(c)),r.b=n.b=!0}else{if(0>l(s.b.a,c.a,s.a))return!1;ex(r).b=r.b=!0,v(s.b),y(eo(c),s)}return!0}function W(t,r){var n=eb(r),d=r.a,m=n.a,h=d.a,g=m.a,b=d.b.a,x=m.b.a,j=new es;if(l(b,t.a,h),l(x,t.a,g),h===g||Math.min(h.a,b.a)>Math.max(g.a,x.a))return!1;if(a(h,g)){if(0<l(x,h,g))return!1}else if(0>l(b,g,h))return!1;var w,_,S=b,E=h,T=x,M=g;if(a(S,E)||(w=S,S=E,E=w),a(T,M)||(w=T,T=M,M=w),a(S,T)||(w=S,S=T,T=w,w=E,E=M,M=w),a(T,E)?a(E,M)?(0>(w=s(S,T,E))+(_=s(T,E,M))&&(w=-w,_=-_),j.b=f(w,T.b,_,E.b)):(0>(w=l(S,T,E))+(_=-l(S,M,E))&&(w=-w,_=-_),j.b=f(w,T.b,_,M.b)):j.b=(T.b+E.b)/2,c(S,E)||(w=S,S=E,E=w),c(T,M)||(w=T,T=M,M=w),c(S,T)||(w=S,S=T,T=w,w=E,E=M,M=w),c(T,E)?c(E,M)?(0>(w=u(S,T,E))+(_=u(T,E,M))&&(w=-w,_=-_),j.a=f(w,T.a,_,E.a)):(0>(w=p(S,T,E))+(_=-p(S,M,E))&&(w=-w,_=-_),j.a=f(w,T.a,_,M.a)):j.a=(T.a+E.a)/2,a(j,t.a)&&(j.b=t.a.b,j.a=t.a.a),S=a(h,g)?h:g,a(S,j)&&(j.b=S.b,j.a=S.a),o(j,h)||o(j,g))return H(t,r),!1;if(!o(b,t.a)&&0<=l(b,t.a,j)||!o(x,t.a)&&0>=l(x,t.a,j)){if(x===t.a)return v(d.b),y(m.b,d),d=eb(r=I(r)).a,U(t,eb(r),n),B(t,r,eo(d),d,d,!0),!0;if(b===t.a){v(m.b),y(d.e,eo(m)),g=(h=n=r).a.b.a;do h=ex(h);while(h.a.b.a===g)return h=eb(r=h).a.b.c,n.a=eo(m),m=U(t,n,null),B(t,r,m.c,d.b.c,h,!0),!0}return 0<=l(b,t.a,j)&&(ex(r).b=r.b=!0,v(d.b),d.a.b=t.a.b,d.a.a=t.a.a),0>=l(x,t.a,j)&&(r.b=n.b=!0,v(m.b),m.a.b=t.a.b,m.a.a=t.a.a),!1}return v(d.b),v(m.b),y(eo(m),d),d.a.b=j.b,d.a.a=j.a,d.a.h=ec(t.e,d.a),d=d.a,m=[0,0,0,0],j=[h.d,b.d,g.d,x.d],d.g[0]=d.g[1]=d.g[2]=0,z(d,h,b,m,0),z(d,g,x,m,2),G(t,d,j,m,!0),ex(r).b=r.b=n.b=!0,!1}function q(t,r){for(var n=eb(r);;){for(;n.b;)r=n,n=eb(n);if(!r.b&&(n=r,null===(r=ex(r))||!r.b))break;r.b=!1;var o,s=r.a,c=n.a;if(o=s.b.a!==c.b.a)t:{var u=eb(o=r),p=o.a,d=u.a,m=void 0;if(a(p.b.a,d.b.a)){if(0>l(p.b.a,d.b.a,p.a)){o=!1;break t}ex(o).b=o.b=!0,m=v(p),y(d.b,m),m.d.c=o.d}else{if(0<l(d.b.a,p.b.a,d.a)){o=!1;break t}o.b=u.b=!0,m=v(d),y(p.e,d.b),m.b.d.c=o.d}o=!0}if(o&&(n.c?(R(n),g(c),c=(n=eb(r)).a):r.c&&(R(r),g(s),s=(r=ex(n)).a)),s.a!==c.a){if(s.b.a===c.b.a||r.c||n.c||s.b.a!==t.a&&c.b.a!==t.a)H(t,r);else if(W(t,r))break}s.a===c.a&&s.b.a===c.b.a&&(N(c,s),R(r),g(s),r=ex(n))}}function X(t,r){t.a=r;for(var n=r.c;null===n.i;)if((n=n.c)===r.c){var n=t,s=r,c=new ev;c.a=s.c.b;var u=n.f,p=u.a;do p=p.a;while(null!==p.b&&!u.c(u.b,c,p.b))var u=p.b,d=eb(u),c=u.a,p=d.a;if(0===l(c.b.a,s,c.a))o((c=u.a).a,s)||o(c.b.a,s)||(v(c.b),u.c&&(g(c.c),u.c=!1),y(s.c,c),X(n,s));else{var m=a(p.b.a,c.b.a)?u:d,d=void 0;u.d||m.c?(d=m===u?b(s.c.b,c.e):b(p.b.c.b,s.c).b,m.c?L(m,d):(c=n,(u=P(n,u,d)).f=ex(u).f+u.a.f,u.d=D(c,u.f)),X(n,s)):B(n,u,s.c,s.c,null,!0)}return}if(u=(c=eb(n=I(n.i))).a,(c=U(t,c,null)).c===u){var u=c,c=u.c,p=eb(n),d=n.a,m=p.a,f=!1;d.b.a!==m.b.a&&W(t,n),o(d.a,t.a)&&(y(eo(c),d),c=eb(n=I(n)).a,U(t,eb(n),p),f=!0),o(m.a,t.a)&&(y(u,eo(m)),u=U(t,p,null),f=!0),f?B(t,n,u.c,c,c,!0):(s=a(m.a,d.a)?eo(m):d,B(t,n,s=b(u.c.b,s),s.c,s.c,!1),s.b.i.c=!0,q(t,n))}else B(t,n,c.c,u,u,!0)}function Y(t,r){var n=new ev,o=h(t.b);o.a.b=O,o.a.a=r,o.b.a.b=-O,o.b.a.a=r,t.a=o.b.a,n.a=o,n.f=0,n.d=!1,n.c=!1,n.h=!0,n.b=!1,o=K(o=t.f,o.a,n),n.e=o}function Z(t){this.a=new J,this.b=t,this.c=A}function K(t,r,n){do r=r.c;while(null!==r.b&&!t.c(t.b,r.b,n))return t=new J(n,r.a,r),r.a.c=t,r.a=t}function J(t,r,n){this.b=t||null,this.a=r||this,this.c=n||this}function Q(){this.d=$,this.p=this.b=this.q=null,this.j=[0,0,0],this.s=100130,this.n=!1,this.o=this.a=this.e=this.f=null,this.m=!1,this.c=this.r=this.i=this.k=this.l=this.h=null}var $=0;function ee(t,r){if(t.d!==r)for(;t.d!==r;)if(t.d<r)switch(t.d){case $:et(t,100151),t.u(null);break;case 1:et(t,100152),t.t()}else switch(t.d){case 2:et(t,100154),t.v();break;case 1:et(t,100153),t.w()}}function et(t,r){t.p&&t.p(r,t.c)}function er(t,r){this.b=t||this,this.d=r||this,this.a=null,this.c=!1}function en(){this.h=this,this.i=this.d=this.a=this.e=this.c=this.b=null,this.f=0}function eo(t){return t.b.e}function ea(){this.c=new es,this.a=new er,this.b=new en,this.d=new en,this.b.b=this.d,this.d.b=this.b}function es(t,r){this.e=t||this,this.f=r||this,this.d=this.c=null,this.g=[0,0,0],this.h=this.a=this.b=0}function ei(){this.c=[],this.d=null,this.a=0,this.e=!1,this.b=new ep}function el(t){t.d=[];for(var r=0;r<t.a;r++)t.d[r]=r;t.d.sort(function(t){return function(r,n){return a(t[r],t[n])?1:-1}}(t.c)),t.e=!0,em(t.b)}function ec(t,r){if(t.e){var n,o=t.b,a=++o.a;return 2*a>o.f&&(o.f*=2,o.c=ed(o.c,o.f+1)),0===o.b?n=a:(n=o.b,o.b=o.c[o.b]),o.e[n]=r,o.c[n]=a,o.d[a]=n,o.h&&eg(o,a),n}return o=t.a++,t.c[o]=r,-(o+1)}function eu(t){if(0===t.a)return eh(t.b);var r=t.c[t.d[t.a-1]];if(0!==t.b.a&&a(ef(t.b),r))return eh(t.b);do--t.a;while(0<t.a&&null===t.c[t.d[t.a-1]])return r}function ep(){this.d=ed([0],33),this.e=[null,null],this.c=[0,0],this.a=0,this.f=32,this.b=0,this.h=!1,this.d[1]=1}function ed(t,r){for(var n=Array(r),o=0;o<t.length;o++)n[o]=t[o];for(;o<r;o++)n[o]=0;return n}function em(t){for(var r=t.a;1<=r;--r)ey(t,r);t.h=!0}function ef(t){return t.e[t.d[1]]}function eh(t){var r=t.d,n=t.e,o=t.c,a=r[1],s=n[a];return 0<t.a&&(r[1]=r[t.a],o[r[1]]=1,n[a]=null,o[a]=t.b,t.b=a,0<--t.a&&ey(t,1)),s}function ey(t,r){for(var n=t.d,o=t.e,s=t.c,l=r,c=n[l];;){var u=l<<1;u<t.a&&a(o[n[u+1]],o[n[u]])&&(u+=1);var p=n[u];if(u>t.a||a(o[c],o[p])){n[l]=c,s[c]=l;break}n[l]=p,s[p]=l,l=u}}function eg(t,r){for(var n=t.d,o=t.e,s=t.c,l=r,c=n[l];;){var u=l>>1,p=n[u];if(0===u||a(o[p],o[c])){n[l]=c,s[c]=l;break}n[l]=p,s[p]=l,l=u}}function ev(){this.e=this.a=null,this.f=0,this.c=this.b=this.h=this.d=!1}function eb(t){return t.e.c.b}function ex(t){return t.e.a.b}(C=Q.prototype).x=function(){ee(this,$)},C.B=function(t,r){switch(t){case 100142:return;case 100140:switch(r){case 100130:case 100131:case 100132:case 100133:case 100134:this.s=r;return}break;case 100141:this.m=!!r;return;default:et(this,100900);return}et(this,100901)},C.y=function(t){switch(t){case 100142:return 0;case 100140:return this.s;case 100141:return this.m;default:et(this,100900)}return!1},C.A=function(t,r,n){this.j[0]=t,this.j[1]=r,this.j[2]=n},C.z=function(t,r){var n=r||null;switch(t){case 100100:case 100106:this.h=n;break;case 100104:case 100110:this.l=n;break;case 100101:case 100107:this.k=n;break;case 100102:case 100108:this.i=n;break;case 100103:case 100109:this.p=n;break;case 100105:case 100111:this.o=n;break;case 100112:this.r=n;break;default:et(this,100900)}},C.C=function(t,r){var n=!1,o=[0,0,0];ee(this,2);for(var a=0;3>a;++a){var s=t[a];-1e150>s&&(s=-1e150,n=!0),1e150<s&&(s=1e150,n=!0),o[a]=s}n&&et(this,100155),null===(n=this.q)?y(n=h(this.b),n.b):(v(n),n=n.e),n.a.d=r,n.a.g[0]=o[0],n.a.g[1]=o[1],n.a.g[2]=o[2],n.f=1,n.b.f=-1,this.q=n},C.u=function(t){ee(this,$),this.d=1,this.b=new ea,this.c=t},C.t=function(){ee(this,1),this.d=2,this.q=null},C.v=function(){ee(this,2),this.d=1},C.w=function(){ee(this,1),this.d=$;var t=this.j[0],r=this.j[1],n=this.j[2],s=!1,c=[t,r,n];if(0===t&&0===r&&0===n){for(var r=[-2*1e150,-2*1e150,-2*1e150],u=[2*1e150,2*1e150,2*1e150],n=[],p=[],s=this.b.c,t=s.e;t!==s;t=t.e)for(var f=0;3>f;++f){var h=t.g[f];h<u[f]&&(u[f]=h,p[f]=t),h>r[f]&&(r[f]=h,n[f]=t)}if(t=0,r[1]-u[1]>r[0]-u[0]&&(t=1),r[2]-u[2]>r[t]-u[t]&&(t=2),u[t]>=r[t])c[0]=0,c[1]=0,c[2]=1;else{for(r=0,u=p[t],n=n[t],p=[0,0,0],u=[u.g[0]-n.g[0],u.g[1]-n.g[1],u.g[2]-n.g[2]],f=[0,0,0],t=s.e;t!==s;t=t.e)f[0]=t.g[0]-n.g[0],f[1]=t.g[1]-n.g[1],f[2]=t.g[2]-n.g[2],p[0]=u[1]*f[2]-u[2]*f[1],p[1]=u[2]*f[0]-u[0]*f[2],p[2]=u[0]*f[1]-u[1]*f[0],(h=p[0]*p[0]+p[1]*p[1]+p[2]*p[2])>r&&(r=h,c[0]=p[0],c[1]=p[1],c[2]=p[2]);0>=r&&(c[0]=c[1]=c[2]=0,c[M(u)]=1)}s=!0}for(p=M(c),t=this.b.c,r=(p+1)%3,n=(p+2)%3,p=0<c[p]?1:-1,c=t.e;c!==t;c=c.e)c.b=c.g[r],c.a=p*c.g[n];if(s){for(c=0,t=(s=this.b.a).b;t!==s;t=t.b)if(!(0>=(r=t.a).f))do c+=(r.a.b-r.b.a.b)*(r.a.a+r.b.a.a),r=r.e;while(r!==t.a)if(0>c)for(s=(c=this.b.c).e;s!==c;s=s.e)s.a=-s.a}for(this.n=!1,t=(c=this.b.b).h;t!==c;t=s)s=t.h,r=t.e,o(t.a,t.b.a)&&t.e.e!==t&&(V(this,r,t),g(t),r=(t=r).e),r.e===t&&(r!==t&&((r===s||r===s.b)&&(s=s.h),g(r)),(t===s||t===s.b)&&(s=s.h),g(t));for(this.e=c=new ei,t=(s=this.b.c).e;t!==s;t=t.e)t.h=ec(c,t);for(el(c),this.f=new Z(this),Y(this,-O),Y(this,O);null!==(c=eu(this.e));){for(;;){t:if(0===(t=this.e).a)s=ef(t.b);else if(s=t.c[t.d[t.a-1]],0!==t.b.a&&a(t=ef(t.b),s)){s=t;break t}if(null===s||!o(s,c))break;s=eu(this.e),V(this,c.c,s.c)}X(this,c)}for(c=0,this.a=this.f.a.a.b.a.a;null!==(s=this.f.a.a.b);)s.h||++c,R(s);for(this.f=null,(c=this.e).b=null,c.d=null,this.e=c.c=null,t=(c=this.b).a.b;t!==c.a;t=s)s=t.b,(t=t.a).e.e===t&&(N(t.c,t),g(t));if(!this.n){if(c=this.b,this.m)for(t=c.b.h;t!==c.b;t=s)s=t.h,t.b.d.c!==t.d.c?t.f=t.d.c?1:-1:g(t);else for(t=c.a.b;t!==c.a;t=s)if(s=t.b,t.c){for(t=t.a;a(t.b.a,t.a);t=t.c.b);for(;a(t.a,t.b.a);t=t.e);for(r=t.c.b,n=void 0;t.e!==r;)if(a(t.b.a,r.a)){for(;r.e!==t&&(d(r.e)||0>=l(r.a,r.b.a,r.e.b.a));)r=(n=b(r.e,r)).b;r=r.c.b}else{for(;r.e!==t&&(m(t.c.b)||0<=l(t.b.a,t.a,t.c.b.a));)t=(n=b(t,t.c.b)).b;t=t.e}for(;r.e.e!==t;)r=(n=b(r.e,r)).b}if(this.h||this.i||this.k||this.l){if(this.m){for(s=(c=this.b).a.b;s!==c.a;s=s.b)if(s.c){this.h&&this.h(2,this.c),t=s.a;do this.k&&this.k(t.a.d,this.c),t=t.e;while(t!==s.a)this.i&&this.i(this.c)}}else{for(c=this.b,s=!!this.l,t=!1,r=-1,n=c.a.d;n!==c.a;n=n.d)if(n.c){t||(this.h&&this.h(4,this.c),t=!0),p=n.a;do s&&r!==(u=p.b.d.c?0:1)&&(r=u,this.l&&this.l(!!r,this.c)),this.k&&this.k(p.a.d,this.c),p=p.e;while(p!==n.a)}t&&this.i&&this.i(this.c)}}if(this.r){for(t=(c=this.b).a.b;t!==c.a;t=s)if(s=t.b,!t.c){n=(r=t.a).e,p=void 0;do n=(p=n).e,p.d=null,null===p.b.d&&(p.c===p?E(p.a,null):(p.a.c=p.c,j(p,eo(p))),(u=p.b).c===u?E(u.a,null):(u.a.c=u.c,j(u,eo(u))),S(p));while(p!==r)r=t.d,(t=t.b).d=r,r.b=t}this.r(this.b),this.c=this.b=null;return}}this.b=this.c=null},this.libtess={GluTesselator:Q,windingRule:{GLU_TESS_WINDING_ODD:100130,GLU_TESS_WINDING_NONZERO:100131,GLU_TESS_WINDING_POSITIVE:100132,GLU_TESS_WINDING_NEGATIVE:100133,GLU_TESS_WINDING_ABS_GEQ_TWO:100134},primitiveType:{GL_LINE_LOOP:2,GL_TRIANGLES:4,GL_TRIANGLE_STRIP:5,GL_TRIANGLE_FAN:6},errorType:{GLU_TESS_MISSING_BEGIN_POLYGON:100151,GLU_TESS_MISSING_END_POLYGON:100153,GLU_TESS_MISSING_BEGIN_CONTOUR:100152,GLU_TESS_MISSING_END_CONTOUR:100154,GLU_TESS_COORD_TOO_LARGE:100155,GLU_TESS_NEED_COMBINE_CALLBACK:100156},gluEnum:{GLU_TESS_MESH:100112,GLU_TESS_TOLERANCE:100142,GLU_TESS_WINDING_RULE:100140,GLU_TESS_BOUNDARY_ONLY:100141,GLU_INVALID_ENUM:100900,GLU_INVALID_VALUE:100901,GLU_TESS_BEGIN:100100,GLU_TESS_VERTEX:100101,GLU_TESS_END:100102,GLU_TESS_ERROR:100103,GLU_TESS_EDGE_FLAG:100104,GLU_TESS_COMBINE:100105,GLU_TESS_BEGIN_DATA:100106,GLU_TESS_VERTEX_DATA:100107,GLU_TESS_END_DATA:100108,GLU_TESS_ERROR_DATA:100109,GLU_TESS_EDGE_FLAG_DATA:100110,GLU_TESS_COMBINE_DATA:100111}},Q.prototype.gluDeleteTess=Q.prototype.x,Q.prototype.gluTessProperty=Q.prototype.B,Q.prototype.gluGetTessProperty=Q.prototype.y,Q.prototype.gluTessNormal=Q.prototype.A,Q.prototype.gluTessCallback=Q.prototype.z,Q.prototype.gluTessVertex=Q.prototype.C,Q.prototype.gluTessBeginPolygon=Q.prototype.u,Q.prototype.gluTessBeginContour=Q.prototype.t,Q.prototype.gluTessEndContour=Q.prototype.v,Q.prototype.gluTessEndPolygon=Q.prototype.w,void 0!==r&&(r.exports=this.libtess)},{}],268:[function(t,r,n){function o(t,r,n,o){var s=0,o=void 0===o?{}:o,l=void 0===o.loop?null:o.loop,c=void 0===o.palette?null:o.palette;if(r<=0||n<=0||r>65535||n>65535)throw Error("Width/Height invalid.");function u(t){var r=t.length;if(r<2||r>256||r&r-1)throw Error("Invalid code/color length, must be power of 2 and 2 .. 256.");return r}// - Header.
t[s++]=71,t[s++]=73,t[s++]=70,t[s++]=56,t[s++]=57,t[s++]=97;// Handling of Global Color Table (palette) and background index.
var p=0,d=0;if(null!==c){for(var m=u(c);m>>=1;)++p;if(m=1<<p,--p,void 0!==o.background){if((d=o.background)>=m)throw Error("Background index out of range.");// The GIF spec states that a background index of 0 should be ignored, so
// this is probably a mistake and you really want to set it to another
// slot in the palette.  But actually in the end most browsers, etc end
// up ignoring this almost completely (including for dispose background).
if(0===d)throw Error("Background index explicitly passed as 0.")}}// - Logical Screen Descriptor.
// - Global Color Table
if(// NOTE(deanm): w/h apparently ignored by implementations, but set anyway.
t[s++]=255&r,t[s++]=r>>8&255,t[s++]=255&n,t[s++]=n>>8&255,t[s++]=(null!==c?128:0)|// Global Color Table Flag.
p,t[s++]=d,t[s++]=0,null!==c)for(var f=0,h=c.length;f<h;++f){var y=c[f];t[s++]=y>>16&255,t[s++]=y>>8&255,t[s++]=255&y}if(null!==l){// Netscape block for looping.
if(l<0||l>65535)throw Error("Loop count invalid.");// Extension code, label, and length.
t[s++]=33,t[s++]=255,t[s++]=11,t[s++]=78,t[s++]=69,t[s++]=84,t[s++]=83,t[s++]=67,t[s++]=65,t[s++]=80,t[s++]=69,t[s++]=50,t[s++]=46,t[s++]=48,t[s++]=3,t[s++]=1,t[s++]=255&l,t[s++]=l>>8&255,t[s++]=0}var g=!1;this.addFrame=function(r,n,o,l,p,d){// canvas width/height, I imagine?
if(!0===g&&(--s,g=!1),d=void 0===d?{}:d,r<0||n<0||r>65535||n>65535)throw Error("x/y invalid.");if(o<=0||l<=0||o>65535||l>65535)throw Error("Width/Height invalid.");if(p.length<o*l)throw Error("Not enough pixels for the frame size.");var m=!0,f=d.palette;if(null==f&&(m=!1,f=c),null==f)throw Error("Must supply either a local or global palette.");for(var h=u(f),y=0;h>>=1;)++y;h=1<<y;var v=void 0===d.delay?0:d.delay,b=void 0===d.disposal?0:d.disposal;// From the spec:
if(b<0||b>3)throw Error("Disposal out of range.");var x=!1,j=0;if(void 0!==d.transparent&&null!==d.transparent&&(x=!0,(j=d.transparent)<0||j>=h))throw Error("Transparent color index.");if((0!==b||x||0!==v)&&(// - Graphics Control Extension
t[s++]=33,t[s++]=249,t[s++]=4,t[s++]=b<<2|(!0===x?1:0),t[s++]=255&v,t[s++]=v>>8&255,t[s++]=j,t[s++]=0),t[s++]=44,t[s++]=255&r,t[s++]=r>>8&255,t[s++]=255&n,t[s++]=n>>8&255,t[s++]=255&o,t[s++]=o>>8&255,t[s++]=255&l,t[s++]=l>>8&255,// TODO(deanm): Support interlace.
t[s++]=!0===m?128|y-1:0,!0===m)for(var w=0,_=f.length;w<_;++w){var S=f[w];t[s++]=S>>16&255,t[s++]=S>>8&255,t[s++]=255&S}return s=a(t,s,y<2?2:y,p)},this.end=function(){return!1===g&&(t[s++]=59,g=!0),s},this.getOutputBuffer=function(){return t},this.setOutputBuffer=function(r){t=r},this.getOutputBufferPosition=function(){return s},this.setOutputBufferPosition=function(t){s=t}}// Main compression routine, palette indexes -> LZW code stream.
// |index_stream| must have at least one entry.
function a(t,r,n,o){t[r++]=n;var a=r++,s=1<<n,l=s-1,c=s+1,u=c+1,p=n+1,d=0,m=0;// Pointing at the length field.
function f(n){for(;d>=n;)t[r++]=255&m,m>>=8,d-=8,r===a+256&&(// Finished a subblock.
t[a]=255,a=r++)}function h(t){m|=t<<d,d+=p,f(8)}// I am not an expert on the topic, and I don't want to write a thesis.
// However, it is good to outline here the basic algorithm and the few data
// structures and optimizations here that make this implementation fast.
// The basic idea behind LZW is to build a table of previously seen runs
// addressed by a short id (herein called output code).  All data is
// referenced by a code, which represents one or more values from the
// original input stream.  All input bytes can be referenced as the same
// value as an output code.  So if you didn't want any compression, you
// could more or less just output the original bytes as codes (there are
// some details to this, but it is the idea).  In order to achieve
// compression, values greater then the input range (codes can be up to
// 12-bit while input only 8-bit) represent a sequence of previously seen
// inputs.  The decompressor is able to build the same mapping while
// decoding, so there is always a shared common knowledge between the
// encoding and decoder, which is also important for "timing" aspects like
// how to handle variable bit width code encoding.
//
// One obvious but very important consequence of the table system is there
// is always a unique id (at most 12-bits) to map the runs.  'A' might be
// 4, then 'AA' might be 10, 'AAA' 11, 'AAAA' 12, etc.  This relationship
// can be used for an effecient lookup strategy for the code mapping.  We
// need to know if a run has been seen before, and be able to map that run
// to the output code.  Since we start with known unique ids (input bytes),
// and then from those build more unique ids (table entries), we can
// continue this chain (almost like a linked list) to always have small
// integer values that represent the current byte chains in the encoder.
// This means instead of tracking the input bytes (AAAABCD) to know our
// current state, we can track the table entry for AAAABC (it is guaranteed
// to exist by the nature of the algorithm) and the next character D.
// Therefor the tuple of (table_entry, byte) is guaranteed to also be
// unique.  This allows us to create a simple lookup key for mapping input
// sequences to codes (table indices) without having to store or search
// any of the code sequences.  So if 'AAAA' has a table entry of 12, the
// tuple of ('AAAA', K) for any input byte K will be unique, and can be our
// key.  This leads to a integer value at most 20-bits, which can always
// fit in an SMI value and be used as a fast sparse array / object key.
// Output code for the current contents of the index buffer.
var y=o[0]&l,g={};// Load first input index.
h(s);// First index already loaded, process the rest of the stream.
for(var v=1,b=o.length;v<b;++v){var x=o[v]&l,j=y<<8|x,w=g[j];// Check if we have to create a new code table entry.
if(void 0===w){for(// We don't have buffer + k.
// Emit index buffer (without k).
// This is an inline version of emit_code, because this is the core
// writing routine of the compressor (and V8 cannot inline emit_code
// because it is a closure here in a different context).  Additionally
// we can call emit_byte_to_buffer less often, because we can have
// 30-bits (from our 31-bit signed SMI), and we know our codes will only
// be 12-bits, so can safely have 18-bits there without overflow.
// emit_code(ib_code);
m|=y<<d,d+=p;d>=8;)t[r++]=255&m,m>>=8,d-=8,r===a+256&&(// Finished a subblock.
t[a]=255,a=r++);4096===u?(// Table full, need a clear.
h(s),u=c+1,p=n+1,g={}):(u>=1<<p&&++p,g[j]=u++),y=x}else y=w;// Index buffer to sequence in code table.
}return h(y),h(c),// Flush / finalize the sub-blocks stream to the buffer.
f(1),a+1===r?t[a]=0:(// Started and used, write length and additional terminator block.
t[a]=r-a-1,t[r++]=0),r}function s(t){var r=0;// - Header (GIF87a or GIF89a).
if(71!==t[r++]||73!==t[r++]||70!==t[r++]||56!==t[r++]||(t[r++]+1&253)!=56||97!==t[r++])throw Error("Invalid GIF 87a/89a header.");// - Logical Screen Descriptor.
var n=t[r++]|t[r++]<<8,o=t[r++]|t[r++]<<8,a=t[r++],s=a>>7,c=1<<(7&a)+1;t[r++],t[r++];var u=null,p=null;s&&(u=r,p=c,r+=3*c);var d=!0,m=[],f=0,h=null,y=0,g=null;for(this.width=n,this.height=o;d&&r<t.length;)switch(t[r++]){case 33:// Graphics Control Extension Block
switch(t[r++]){case 255:// Application specific block
// Try if it's a Netscape block (with animation loop counter).
if(11!==t[r]||// 21 FF already read, check block size.
// NETSCAPE2.0
78==t[r+1]&&69==t[r+2]&&84==t[r+3]&&83==t[r+4]&&67==t[r+5]&&65==t[r+6]&&80==t[r+7]&&69==t[r+8]&&50==t[r+9]&&46==t[r+10]&&48==t[r+11]&&// Sub-block
3==t[r+12]&&1==t[r+13]&&0==t[r+16])r+=14,g=t[r++]|t[r++]<<8,r++;else for(// We don't know what it is, just try to get past it.
r+=12;;){// Seek through subblocks.
var v=t[r++];// Bad block size (ex: undefined from an out of bounds read).
if(!(v>=0))throw Error("Invalid block size");if(0===v)break;// 0 size is terminator
r+=v}break;case 249:// Graphics Control Extension
if(4!==t[r++]||0!==t[r+4])throw Error("Invalid graphics extension block.");var b=t[r++];f=t[r++]|t[r++]<<8,h=t[r++],(1&b)==0&&(h=null),y=b>>2&7,r++;break;case 254:// Comment Extension.
for(;;){// Seek through subblocks.
var v=t[r++];// Bad block size (ex: undefined from an out of bounds read).
if(!(v>=0))throw Error("Invalid block size");if(0===v)break;// 0 size is terminator
// console.log(buf.slice(p, p+block_size).toString('ascii'));
r+=v}break;default:throw Error("Unknown graphic control label: 0x"+t[r-1].toString(16))}break;case 44:// Image Descriptor.
var x=t[r++]|t[r++]<<8,j=t[r++]|t[r++]<<8,w=t[r++]|t[r++]<<8,_=t[r++]|t[r++]<<8,S=t[r++],E=S>>7,T=S>>6&1,M=1<<(7&S)+1,C=u,O=p,N=!1;if(E){var N=!0;C=r,O=M,r+=3*M}var A=r;for(r++;;){var v=t[r++];// Bad block size (ex: undefined from an out of bounds read).
if(!(v>=0))throw Error("Invalid block size");if(0===v)break;// 0 size is terminator
r+=v}m.push({x:x,y:j,width:w,height:_,has_local_palette:N,palette_offset:C,palette_size:O,data_offset:A,data_length:r-A,transparent_index:h,interlaced:!!T,delay:f,disposal:y});break;case 59:// Trailer Marker (end of file).
d=!1;break;default:throw Error("Unknown gif block: 0x"+t[r-1].toString(16))}this.numFrames=function(){return m.length},this.loopCount=function(){return g},this.frameInfo=function(t){if(t<0||t>=m.length)throw Error("Frame index out of range.");return m[t]},this.decodeAndBlitFrameBGRA=function(r,o){var a=this.frameInfo(r),s=a.width*a.height,c=new Uint8Array(s);l(t,a.data_offset,c,s);var u=a.palette_offset,p=a.transparent_index;// NOTE(deanm): It seems to be much faster to compare index to 256 than
null===p&&(p=256);// We are possibly just blitting to a portion of the entire frame.
// That is a subrect within the framerect, so the additional pixels
// must be skipped over after we finished a scanline.
var d=a.width,m=n-d,f=d,h=(a.y*n+a.x)*4,y=((a.y+a.height)*n+a.x)*4,g=h,v=4*m;// 7 rows for the first two passes, then 3 then 1.
!0===a.interlaced&&(v+=28*n);// Pass 1.
for(var b=8,x=0,j=c.length;x<j;++x){var w=c[x];if(0===f&&(// Beginning of new scan line
g+=v,f=d,g>=y&&(// Catch the wrap to switch passes when interlacing.
v=4*m+4*n*(b-1),g=h+(d+m)*(b<<1),b>>=1)),w===p)g+=4;else{var _=t[u+3*w],S=t[u+3*w+1],E=t[u+3*w+2];o[g++]=E,o[g++]=S,o[g++]=_,o[g++]=255}--f}},this.decodeAndBlitFrameRGBA=function(r,o){var a=this.frameInfo(r),s=a.width*a.height,c=new Uint8Array(s);l(t,a.data_offset,c,s);var u=a.palette_offset,p=a.transparent_index;// NOTE(deanm): It seems to be much faster to compare index to 256 than
null===p&&(p=256);// We are possibly just blitting to a portion of the entire frame.
// That is a subrect within the framerect, so the additional pixels
// must be skipped over after we finished a scanline.
var d=a.width,m=n-d,f=d,h=(a.y*n+a.x)*4,y=((a.y+a.height)*n+a.x)*4,g=h,v=4*m;// 7 rows for the first two passes, then 3 then 1.
!0===a.interlaced&&(v+=28*n);// Pass 1.
for(var b=8,x=0,j=c.length;x<j;++x){var w=c[x];if(0===f&&(// Beginning of new scan line
g+=v,f=d,g>=y&&(// Catch the wrap to switch passes when interlacing.
v=4*m+4*n*(b-1),g=h+(d+m)*(b<<1),b>>=1)),w===p)g+=4;else{var _=t[u+3*w],S=t[u+3*w+1],E=t[u+3*w+2];o[g++]=_,o[g++]=S,o[g++]=E,o[g++]=255}--f}}}function l(t,r,n,o){for(var a=t[r++],s=1<<a,l=s+1,c=l+1,u=a+1,p=(1<<u)-1,d=0,m=0,f=0,h=t[r++],y=new Int32Array(4096),g=null;;){// Read up to two bytes, making sure we always 12-bits for max sized code.
for(;d<16&&0!==h// No more data to be read.
;)m|=t[r++]<<d,d+=8,1===h?h=t[r++]:--h;// TODO(deanm): We should never really get here, we should have received
// and EOI.
if(d<u)break;var v=m&p;// at least this is what you're supposed to do.  But actually our encoder
// now doesn't emit a clear code first anyway.
if(m>>=u,d-=u,v===s){// We don't actually have to clear the table.  This could be a good idea
// for greater error checking, but we don't really do any anyway.  We
// will just track it with next_code and overwrite old entries.
c=l+1,p=(1<<(u=a+1))-1,g=null;continue}if(v===l)break;for(// We have a similar situation as the decoder, where we want to store
// variable length entries (code table entries), but we want to do in a
// faster manner than an array of arrays.  The code below stores sort of a
// linked list within the code table, and then "chases" through it to
// construct the dictionary entries.  When a new entry is created, just the
// last byte is stored, and the rest (prefix) of the entry is only
// referenced by its table entry.  Then the code chases through the
// prefixes until it reaches a single byte code.  We have to chase twice,
// first to compute the length, and then to actually copy the data to the
// output (backwards, since we know the length).  The alternative would be
// storing something in an intermediate stack, but that doesn't make any
// more sense.  I implemented an approach where it also stored the length
// in the code table, although it's a bit tricky because you run out of
// bits (12 + 12 + 8), but I didn't measure much improvements (the table
// entries are generally not the long).  Even when I created benchmarks for
// very long table entries the complexity did not seem worth it.
// The code table stores the prefix entry in 12 bits and then the suffix
// byte in 8 bits, so each entry is 20 bits.
var b=v<c?v:g,x=0,j=b;j>s;)j=y[j]>>8,++x;var w=j;if(f+x+(b!==v?1:0)>o){console.log("Warning, gif stream longer than expected.");return}// Already have the first byte from the chase, might as well write it fast.
n[f++]=w;var _=f+=x;// Track pointer, writing backwards.
for(b!==v&&(n[f++]=w),j=b;x--;)j=y[j],n[--_]=255&j,j>>=8;null!==g&&c<4096&&(y[c++]=g<<8|w,c>=p+1&&u<12&&(++u,p=p<<1|1)),g=v}return f!==o&&console.log("Warning, gif stream shorter than expected."),n}// CommonJS.
try{n.GifWriter=o,n.GifReader=s}catch(t){}},{}],269:[function(t,r,n){(function(o){!/**
 * https://opentype.js.org v0.9.0 | (c) Frederik De Bleser and other contributors | MIT License | Uses tiny-inflate by Devon Govett and string.prototype.codepointat polyfill by Mathias Bynens
 */function(t,o){"object"==typeof n&&void 0!==r?o(n):"function"==typeof define&&define.amd?define(["exports"],o):o(t.opentype={})}(this,function(r){String.prototype.codePointAt||function(){var t=function(){// IE 8 only supports `Object.defineProperty` on DOM elements
try{var t={},r=Object.defineProperty,n=r(t,t,t)&&r}catch(t){}return n}(),r=function(t){if(this==null)throw TypeError();var r,n=String(this),o=n.length,a=t?Number(t):0;// Account for out-of-bounds indices:
if(a!=a&&(a=0),!(a<0)&&!(a>=o)){// Get the first code unit
var s=n.charCodeAt(a);return s>=55296&&s<=56319&&// high surrogate
o>a+1// there is a next code unit
&&(r=n.charCodeAt(a+1))>=56320&&r<=57343?(s-55296)*1024+r-56320+65536:s}};t?t(String.prototype,"codePointAt",{value:r,configurable:!0,writable:!0}):String.prototype.codePointAt=r}();var n,a,s,l,c,u=0,p=-3;function d(){this.table=new Uint16Array(16),/* table of code length counts */this.trans=new Uint16Array(288);/* code -> symbol translation table */}function m(t,r){this.source=t,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=r,this.destLen=0,this.ltree=new d,/* dynamic length/symbol tree */this.dtree=new d;/* dynamic distance tree */}/* --------------------------------------------------- *
   * -- uninitialized global data (static structures) -- *
   * --------------------------------------------------- */var f=new d,h=new d,y=new Uint8Array(30),g=new Uint16Array(30),v=new Uint8Array(30),b=new Uint16Array(30),x=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),j=new d,w=new Uint8Array(320);/* ----------------------- *
   * -- utility functions -- *
   * ----------------------- *//* build extra bits and base tables */function _(t,r,n,o){var a,s;/* build bits table */for(a=0;a<n;++a)t[a]=0;for(a=0;a<30-n;++a)t[a+n]=a/n|0;/* build base table */for(s=o,a=0;a<30;++a)r[a]=s,s+=1<<t[a]}/* build the fixed huffman trees */function S(t,r){var n;/* build fixed length tree */for(n=0;n<7;++n)t.table[n]=0;for(n=0,t.table[7]=24,t.table[8]=152,t.table[9]=112;n<24;++n)t.trans[n]=256+n;for(n=0;n<144;++n)t.trans[24+n]=n;for(n=0;n<8;++n)t.trans[168+n]=280+n;for(n=0;n<112;++n)t.trans[176+n]=144+n;/* build fixed distance tree */for(n=0;n<5;++n)r.table[n]=0;for(n=0,r.table[5]=32;n<32;++n)r.trans[n]=n}/* given an array of code lengths, build a tree */var E=new Uint16Array(16);function T(t,r,n,o){var a,s;/* clear code length count table */for(a=0;a<16;++a)t.table[a]=0;/* scan symbol lengths, and sum code length counts */for(a=0;a<o;++a)t.table[r[n+a]]++;/* compute offset table for distribution sort */for(s=0,t.table[0]=0,a=0;a<16;++a)E[a]=s,s+=t.table[a];/* create code->symbol translation table (symbols sorted by code) */for(a=0;a<o;++a)r[n+a]&&(t.trans[E[r[n+a]]++]=a)}/* ---------------------- *
   * -- decode functions -- *
   * ---------------------- *//* get one bit from source stream */function M(t){t.bitcount--||(/* load next tag */t.tag=t.source[t.sourceIndex++],t.bitcount=7);var r=1&t.tag;return t.tag>>>=1,r}/* read a num bit value from a stream and add base */function C(t,r,n){if(!r)return n;for(;t.bitcount<24;)t.tag|=t.source[t.sourceIndex++]<<t.bitcount,t.bitcount+=8;var o=t.tag&65535>>>16-r;return t.tag>>>=r,t.bitcount-=r,o+n}/* given a data stream and a tree, decode a symbol */function O(t,r){for(;t.bitcount<24;)t.tag|=t.source[t.sourceIndex++]<<t.bitcount,t.bitcount+=8;var n=0,o=0,a=0,s=t.tag;/* get more bits while code value is above sum */do o=2*o+(1&s),s>>>=1,++a,n+=r.table[a],o-=r.table[a];while(o>=0)return t.tag=s,t.bitcount-=a,r.trans[n+o]}/* given a data stream, decode dynamic trees from it */function N(t,r,n){for(l=0,/* get 5 bits HLIT (257-286) */o=C(t,5,257),/* get 5 bits HDIST (1-32) */a=C(t,5,1),/* get 4 bits HCLEN (4-19) */s=C(t,4,4);l<19;++l)w[l]=0;/* read code lengths for code length alphabet */for(l=0;l<s;++l){/* get 3 bits code length (0-7) */var o,a,s,l,c,u,p=C(t,3,0);w[x[l]]=p}/* build code length tree *//* decode code lengths for the dynamic trees */for(T(j,w,0,19),c=0;c<o+a;){var d=O(t,j);switch(d){case 16:/* copy previous code length 3-6 times (read 2 bits) */var m=w[c-1];for(u=C(t,2,3);u;--u)w[c++]=m;break;case 17:/* repeat code length 0 for 3-10 times (read 3 bits) */for(u=C(t,3,3);u;--u)w[c++]=0;break;case 18:/* repeat code length 0 for 11-138 times (read 7 bits) */for(u=C(t,7,11);u;--u)w[c++]=0;break;default:/* values 0-15 represent the actual code lengths */w[c++]=d}}/* build dynamic trees */T(r,w,0,o),T(n,w,o,a)}/* ----------------------------- *
   * -- block inflate functions -- *
   * ----------------------------- *//* given a stream and two trees, inflate a block of data */function A(t,r,n){for(;;){var o,a,s,l,c=O(t,r);/* check for end of block */if(256===c)return u;if(c<256)t.dest[t.destLen++]=c;else /* copy match */for(c-=257,/* possibly get more bits from length code */o=C(t,y[c],g[c]),a=O(t,n),l=/* possibly get more bits from distance code */s=t.destLen-C(t,v[a],b[a]);l<s+o;++l)t.dest[t.destLen++]=t.dest[l]}}/* inflate an uncompressed block of data */function R(t){/* unread from bitbuffer */for(var r,n,o;t.bitcount>8;)t.sourceIndex--,t.bitcount-=8;/* get length *//* check length */if((r=256*(r=t.source[t.sourceIndex+1])+t.source[t.sourceIndex])!==(65535&~(n=256*/* get one's complement of length */(n=t.source[t.sourceIndex+3])+t.source[t.sourceIndex+2])))return p;/* copy block */for(t.sourceIndex+=4,o=r;o;--o)t.dest[t.destLen++]=t.source[t.sourceIndex++];return(/* make sure we start next block on a byte boundary */t.bitcount=0,u)}/* inflate stream from source to dest */function L(t,r){var n,o,a=new m(t,r);do{/* decompress block */switch(/* read final block flag */n=M(a),C(a,2,0)){case 0:/* decompress uncompressed block */o=R(a);break;case 1:/* decompress block with fixed huffman trees */o=A(a,f,h);break;case 2:/* decompress block with dynamic huffman trees */N(a,a.ltree,a.dtree),o=A(a,a.ltree,a.dtree);break;default:o=p}if(o!==u)throw Error("Data error")}while(!n)return a.destLen<a.dest.length?"function"==typeof a.dest.slice?a.dest.slice(0,a.destLen):a.dest.subarray(0,a.destLen):a.dest}/* -------------------- *
   * -- initialization -- *
   * -------------------- *//* build fixed huffman trees */S(f,h),/* build extra bits and base tables */_(y,g,4,3),_(v,b,2,1),/* fix a special case */y[28]=0,g[28]=258;var I=L;// The Bounding Box object
function P(t,r,n,o,a){return Math.pow(1-a,3)*t+3*Math.pow(1-a,2)*a*r+3*(1-a)*Math.pow(a,2)*n+Math.pow(a,3)*o}/**
   * A bounding box is an enclosing box that describes the smallest measure within which all the points lie.
   * It is used to calculate the bounding box of a glyph or text path.
   *
   * On initialization, x1/y1/x2/y2 will be NaN. Check if the bounding box is empty using `isEmpty()`.
   *
   * @exports opentype.BoundingBox
   * @class
   * @constructor
   */function D(){this.x1=Number.NaN,this.y1=Number.NaN,this.x2=Number.NaN,this.y2=Number.NaN}/**
   * Returns true if the bounding box is empty, that is, no points have been added to the box yet.
   *//**
   * A bézier path containing a set of path commands similar to a SVG path.
   * Paths can be drawn on a context using `draw`.
   * @exports opentype.Path
   * @class
   * @constructor
   */function F(){this.commands=[],this.fill="black",this.stroke=null,this.strokeWidth=1}/**
   * @param  {number} x
   * @param  {number} y
   */function U(t){throw Error(t)}// Precondition function that checks if the given predicate is true.
// If not, it will throw an error.
function B(t,r){t||U(r)}D.prototype.isEmpty=function(){return isNaN(this.x1)||isNaN(this.y1)||isNaN(this.x2)||isNaN(this.y2)},/**
   * Add the point to the bounding box.
   * The x1/y1/x2/y2 coordinates of the bounding box will now encompass the given point.
   * @param {number} x - The X coordinate of the point.
   * @param {number} y - The Y coordinate of the point.
   */D.prototype.addPoint=function(t,r){"number"==typeof t&&((isNaN(this.x1)||isNaN(this.x2))&&(this.x1=t,this.x2=t),t<this.x1&&(this.x1=t),t>this.x2&&(this.x2=t)),"number"==typeof r&&((isNaN(this.y1)||isNaN(this.y2))&&(this.y1=r,this.y2=r),r<this.y1&&(this.y1=r),r>this.y2&&(this.y2=r))},/**
   * Add a X coordinate to the bounding box.
   * This extends the bounding box to include the X coordinate.
   * This function is used internally inside of addBezier.
   * @param {number} x - The X coordinate of the point.
   */D.prototype.addX=function(t){this.addPoint(t,null)},/**
   * Add a Y coordinate to the bounding box.
   * This extends the bounding box to include the Y coordinate.
   * This function is used internally inside of addBezier.
   * @param {number} y - The Y coordinate of the point.
   */D.prototype.addY=function(t){this.addPoint(null,t)},/**
   * Add a Bézier curve to the bounding box.
   * This extends the bounding box to include the entire Bézier.
   * @param {number} x0 - The starting X coordinate.
   * @param {number} y0 - The starting Y coordinate.
   * @param {number} x1 - The X coordinate of the first control point.
   * @param {number} y1 - The Y coordinate of the first control point.
   * @param {number} x2 - The X coordinate of the second control point.
   * @param {number} y2 - The Y coordinate of the second control point.
   * @param {number} x - The ending X coordinate.
   * @param {number} y - The ending Y coordinate.
   */D.prototype.addBezier=function(t,r,n,o,a,s,l,c){var u=this,p=[t,r],d=[n,o],m=[a,s],f=[l,c];// This code is based on http://nishiohirokazu.blogspot.com/2009/06/how-to-calculate-bezier-curves-bounding.html
this.addPoint(t,r),this.addPoint(l,c);for(var h=0;h<=1;h++){var y=6*p[h]-12*d[h]+6*m[h],g=-3*p[h]+9*d[h]-9*m[h]+3*f[h],v=3*d[h]-3*p[h];if(0===g){if(0===y)continue;var b=-v/y;0<b&&b<1&&(0===h&&u.addX(P(p[h],d[h],m[h],f[h],b)),1===h&&u.addY(P(p[h],d[h],m[h],f[h],b)));continue}var x=Math.pow(y,2)-4*v*g;if(!(x<0)){var j=(-y+Math.sqrt(x))/(2*g);0<j&&j<1&&(0===h&&u.addX(P(p[h],d[h],m[h],f[h],j)),1===h&&u.addY(P(p[h],d[h],m[h],f[h],j)));var w=(-y-Math.sqrt(x))/(2*g);0<w&&w<1&&(0===h&&u.addX(P(p[h],d[h],m[h],f[h],w)),1===h&&u.addY(P(p[h],d[h],m[h],f[h],w)))}}},/**
   * Add a quadratic curve to the bounding box.
   * This extends the bounding box to include the entire quadratic curve.
   * @param {number} x0 - The starting X coordinate.
   * @param {number} y0 - The starting Y coordinate.
   * @param {number} x1 - The X coordinate of the control point.
   * @param {number} y1 - The Y coordinate of the control point.
   * @param {number} x - The ending X coordinate.
   * @param {number} y - The ending Y coordinate.
   */D.prototype.addQuad=function(t,r,n,o,a,s){var l=t+2/3*(n-t),c=r+2/3*(o-r),u=l+1/3*(a-t),p=c+1/3*(s-r);this.addBezier(t,r,l,c,u,p,a,s)},F.prototype.moveTo=function(t,r){this.commands.push({type:"M",x:t,y:r})},/**
   * @param  {number} x
   * @param  {number} y
   */F.prototype.lineTo=function(t,r){this.commands.push({type:"L",x:t,y:r})},/**
   * Draws cubic curve
   * @function
   * curveTo
   * @memberof opentype.Path.prototype
   * @param  {number} x1 - x of control 1
   * @param  {number} y1 - y of control 1
   * @param  {number} x2 - x of control 2
   * @param  {number} y2 - y of control 2
   * @param  {number} x - x of path point
   * @param  {number} y - y of path point
   *//**
   * Draws cubic curve
   * @function
   * bezierCurveTo
   * @memberof opentype.Path.prototype
   * @param  {number} x1 - x of control 1
   * @param  {number} y1 - y of control 1
   * @param  {number} x2 - x of control 2
   * @param  {number} y2 - y of control 2
   * @param  {number} x - x of path point
   * @param  {number} y - y of path point
   * @see curveTo
   */F.prototype.curveTo=F.prototype.bezierCurveTo=function(t,r,n,o,a,s){this.commands.push({type:"C",x1:t,y1:r,x2:n,y2:o,x:a,y:s})},/**
   * Draws quadratic curve
   * @function
   * quadraticCurveTo
   * @memberof opentype.Path.prototype
   * @param  {number} x1 - x of control
   * @param  {number} y1 - y of control
   * @param  {number} x - x of path point
   * @param  {number} y - y of path point
   *//**
   * Draws quadratic curve
   * @function
   * quadTo
   * @memberof opentype.Path.prototype
   * @param  {number} x1 - x of control
   * @param  {number} y1 - y of control
   * @param  {number} x - x of path point
   * @param  {number} y - y of path point
   */F.prototype.quadTo=F.prototype.quadraticCurveTo=function(t,r,n,o){this.commands.push({type:"Q",x1:t,y1:r,x:n,y:o})},/**
   * Closes the path
   * @function closePath
   * @memberof opentype.Path.prototype
   *//**
   * Close the path
   * @function close
   * @memberof opentype.Path.prototype
   */F.prototype.close=F.prototype.closePath=function(){this.commands.push({type:"Z"})},/**
   * Add the given path or list of commands to the commands of this path.
   * @param  {Array} pathOrCommands - another opentype.Path, an opentype.BoundingBox, or an array of commands.
   */F.prototype.extend=function(t){if(t.commands)t=t.commands;else if(t instanceof D){var r=t;this.moveTo(r.x1,r.y1),this.lineTo(r.x2,r.y1),this.lineTo(r.x2,r.y2),this.lineTo(r.x1,r.y2),this.close();return}Array.prototype.push.apply(this.commands,t)},/**
   * Calculate the bounding box of the path.
   * @returns {opentype.BoundingBox}
   */F.prototype.getBoundingBox=function(){for(var t=this,r=new D,n=0,o=0,a=0,s=0,l=0;l<this.commands.length;l++){var c=t.commands[l];switch(c.type){case"M":r.addPoint(c.x,c.y),n=a=c.x,o=s=c.y;break;case"L":r.addPoint(c.x,c.y),a=c.x,s=c.y;break;case"Q":r.addQuad(a,s,c.x1,c.y1,c.x,c.y),a=c.x,s=c.y;break;case"C":r.addBezier(a,s,c.x1,c.y1,c.x2,c.y2,c.x,c.y),a=c.x,s=c.y;break;case"Z":a=n,s=o;break;default:throw Error("Unexpected path command "+c.type)}}return r.isEmpty()&&r.addPoint(0,0),r},/**
   * Draw the path to a 2D context.
   * @param {CanvasRenderingContext2D} ctx - A 2D drawing context.
   */F.prototype.draw=function(t){var r=this;t.beginPath();for(var n=0;n<this.commands.length;n+=1){var o=r.commands[n];"M"===o.type?t.moveTo(o.x,o.y):"L"===o.type?t.lineTo(o.x,o.y):"C"===o.type?t.bezierCurveTo(o.x1,o.y1,o.x2,o.y2,o.x,o.y):"Q"===o.type?t.quadraticCurveTo(o.x1,o.y1,o.x,o.y):"Z"===o.type&&t.closePath()}this.fill&&(t.fillStyle=this.fill,t.fill()),this.stroke&&(t.strokeStyle=this.stroke,t.lineWidth=this.strokeWidth,t.stroke())},/**
   * Convert the Path to a string of path data instructions
   * See http://www.w3.org/TR/SVG/paths.html#PathData
   * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values
   * @return {string}
   */F.prototype.toPathData=function(t){var r=this;function n(r){return Math.round(r)===r?""+Math.round(r):r.toFixed(t)}function o(){for(var t=arguments,r="",o=0;o<arguments.length;o+=1){var a=t[o];a>=0&&o>0&&(r+=" "),r+=n(a)}return r}t=void 0!==t?t:2;for(var a="",s=0;s<this.commands.length;s+=1){var l=r.commands[s];"M"===l.type?a+="M"+o(l.x,l.y):"L"===l.type?a+="L"+o(l.x,l.y):"C"===l.type?a+="C"+o(l.x1,l.y1,l.x2,l.y2,l.x,l.y):"Q"===l.type?a+="Q"+o(l.x1,l.y1,l.x,l.y):"Z"===l.type&&(a+="Z")}return a},/**
   * Convert the path to an SVG <path> element, as a string.
   * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values
   * @return {string}
   */F.prototype.toSVG=function(t){var r='<path d="';return r+=this.toPathData(t)+'"',this.fill&&"black"!==this.fill&&(null===this.fill?r+=' fill="none"':r+=' fill="'+this.fill+'"'),this.stroke&&(r+=' stroke="'+this.stroke+'" stroke-width="'+this.strokeWidth+'"'),r+="/>"},/**
   * Convert the path to a DOM element.
   * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values
   * @return {SVGPathElement}
   */F.prototype.toDOMElement=function(t){var r=this.toPathData(t),n=document.createElementNS("http://www.w3.org/2000/svg","path");return n.setAttribute("d",r),n};var G={fail:U,argument:B,assert:B},V=32768,z=2147483648,H={},W={},q={};// Data types used in the OpenType font file.
function X(t){return function(){return t}}// OpenType data types //////////////////////////////////////////////////////
/**
   * Convert an 8-bit unsigned integer to a list of 1 byte.
   * @param {number}
   * @returns {Array}
   */W.BYTE=function(t){return G.argument(t>=0&&t<=255,"Byte value should be between 0 and 255."),[t]},/**
   * @constant
   * @type {number}
   */q.BYTE=X(1),/**
   * Convert a 8-bit signed integer to a list of 1 byte.
   * @param {string}
   * @returns {Array}
   */W.CHAR=function(t){return[t.charCodeAt(0)]},/**
   * @constant
   * @type {number}
   */q.CHAR=X(1),/**
   * Convert an ASCII string to a list of bytes.
   * @param {string}
   * @returns {Array}
   */W.CHARARRAY=function(t){for(var r=[],n=0;n<t.length;n+=1)r[n]=t.charCodeAt(n);return r},/**
   * @param {Array}
   * @returns {number}
   */q.CHARARRAY=function(t){return t.length},/**
   * Convert a 16-bit unsigned integer to a list of 2 bytes.
   * @param {number}
   * @returns {Array}
   */W.USHORT=function(t){return[t>>8&255,255&t]},/**
   * @constant
   * @type {number}
   */q.USHORT=X(2),/**
   * Convert a 16-bit signed integer to a list of 2 bytes.
   * @param {number}
   * @returns {Array}
   */W.SHORT=function(t){return t>=V&&(t=-(2*V-t)),[t>>8&255,255&t]},/**
   * @constant
   * @type {number}
   */q.SHORT=X(2),/**
   * Convert a 24-bit unsigned integer to a list of 3 bytes.
   * @param {number}
   * @returns {Array}
   */W.UINT24=function(t){return[t>>16&255,t>>8&255,255&t]},/**
   * @constant
   * @type {number}
   */q.UINT24=X(3),/**
   * Convert a 32-bit unsigned integer to a list of 4 bytes.
   * @param {number}
   * @returns {Array}
   */W.ULONG=function(t){return[t>>24&255,t>>16&255,t>>8&255,255&t]},/**
   * @constant
   * @type {number}
   */q.ULONG=X(4),/**
   * Convert a 32-bit unsigned integer to a list of 4 bytes.
   * @param {number}
   * @returns {Array}
   */W.LONG=function(t){return t>=z&&(t=-(2*z-t)),[t>>24&255,t>>16&255,t>>8&255,255&t]},/**
   * @constant
   * @type {number}
   */q.LONG=X(4),W.FIXED=W.ULONG,q.FIXED=q.ULONG,W.FWORD=W.SHORT,q.FWORD=q.SHORT,W.UFWORD=W.USHORT,q.UFWORD=q.USHORT,/**
   * Convert a 32-bit Apple Mac timestamp integer to a list of 8 bytes, 64-bit timestamp.
   * @param {number}
   * @returns {Array}
   */W.LONGDATETIME=function(t){return[0,0,0,0,t>>24&255,t>>16&255,t>>8&255,255&t]},/**
   * @constant
   * @type {number}
   */q.LONGDATETIME=X(8),/**
   * Convert a 4-char tag to a list of 4 bytes.
   * @param {string}
   * @returns {Array}
   */W.TAG=function(t){return G.argument(4===t.length,"Tag should be exactly 4 ASCII characters."),[t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2),t.charCodeAt(3)]},/**
   * @constant
   * @type {number}
   */q.TAG=X(4),W.Card8=W.BYTE,q.Card8=q.BYTE,W.Card16=W.USHORT,q.Card16=q.USHORT,W.OffSize=W.BYTE,q.OffSize=q.BYTE,W.SID=W.USHORT,q.SID=q.USHORT,/**
   * Convert a numeric operand or charstring number to a variable-size list of bytes.
   * @param {number}
   * @returns {Array}
   */W.NUMBER=function(t){return t>=-107&&t<=107?[t+139]:t>=108&&t<=1131?[((t-=108)>>8)+247,255&t]:t>=-1131&&t<=-108?[((t=-t-108)>>8)+251,255&t]:t>=-32768&&t<=32767?W.NUMBER16(t):W.NUMBER32(t)},/**
   * @param {number}
   * @returns {number}
   */q.NUMBER=function(t){return W.NUMBER(t).length},/**
   * Convert a signed number between -32768 and +32767 to a three-byte value.
   * This ensures we always use three bytes, but is not the most compact format.
   * @param {number}
   * @returns {Array}
   */W.NUMBER16=function(t){return[28,t>>8&255,255&t]},/**
   * @constant
   * @type {number}
   */q.NUMBER16=X(3),/**
   * Convert a signed number between -(2^31) and +(2^31-1) to a five-byte value.
   * This is useful if you want to be sure you always use four bytes,
   * at the expense of wasting a few bytes for smaller numbers.
   * @param {number}
   * @returns {Array}
   */W.NUMBER32=function(t){return[29,t>>24&255,t>>16&255,t>>8&255,255&t]},/**
   * @constant
   * @type {number}
   */q.NUMBER32=X(5),/**
   * @param {number}
   * @returns {Array}
   */W.REAL=function(t){var r=t.toString(),n=/\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(r);// Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)
if(n){var o=parseFloat("1e"+((n[2]?+n[2]:0)+n[1].length));r=(Math.round(t*o)/o).toString()}for(var a="",s=0,l=r.length;s<l;s+=1){var c=r[s];"e"===c?a+="-"===r[++s]?"c":"b":"."===c?a+="a":"-"===c?a+="e":a+=c}a+=1&a.length?"f":"ff";for(var u=[30],p=0,d=a.length;p<d;p+=2)u.push(parseInt(a.substr(p,2),16));return u},/**
   * @param {number}
   * @returns {number}
   */q.REAL=function(t){return W.REAL(t).length},W.NAME=W.CHARARRAY,q.NAME=q.CHARARRAY,W.STRING=W.CHARARRAY,q.STRING=q.CHARARRAY,/**
   * @param {DataView} data
   * @param {number} offset
   * @param {number} numBytes
   * @returns {string}
   */H.UTF8=function(t,r,n){for(var o=[],a=n,s=0;s<a;s++,r+=1)o[s]=t.getUint8(r);return String.fromCharCode.apply(null,o)},/**
   * @param {DataView} data
   * @param {number} offset
   * @param {number} numBytes
   * @returns {string}
   */H.UTF16=function(t,r,n){for(var o=[],a=n/2,s=0;s<a;s++,r+=2)o[s]=t.getUint16(r);return String.fromCharCode.apply(null,o)},/**
   * Convert a JavaScript string to UTF16-BE.
   * @param {string}
   * @returns {Array}
   */W.UTF16=function(t){for(var r=[],n=0;n<t.length;n+=1){var o=t.charCodeAt(n);r[r.length]=o>>8&255,r[r.length]=255&o}return r},/**
   * @param {string}
   * @returns {number}
   */q.UTF16=function(t){return 2*t.length};// This representation is optimized for decoding; encoding is slower
// and needs more memory. The assumption is that all opentype.js users
// want to open fonts, but saving a font will be comparatively rare
// so it can be more expensive. Keyed by IANA character set name.
//
// Python script for generating these strings:
//
//     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])
//     print(s.encode('utf-8'))
/**
   * @private
   */var Y={"x-mac-croatian":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc†\xb0\xa2\xa3\xa7•\xb6\xdf\xaeŠ™\xb4\xa8≠Ž\xd8∞\xb1≤≥∆\xb5∂∑∏š∫\xaa\xbaΩž\xf8\xbf\xa1\xac√ƒ≈Ć\xabČ…\xa0\xc0\xc3\xd5ŒœĐ—“”‘’\xf7◊\xa9⁄€‹›\xc6\xbb–\xb7‚„‰\xc2ć\xc1č\xc8\xcd\xce\xcf\xcc\xd3\xd4đ\xd2\xda\xdb\xd9ıˆ˜\xafπ\xcb˚\xb8\xca\xe6ˇ","x-mac-cyrillic":"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†\xb0Ґ\xa3\xa7•\xb6І\xae\xa9™Ђђ≠Ѓѓ∞\xb1≤≥і\xb5ґЈЄєЇїЉљЊњјЅ\xac√ƒ≈∆\xab\xbb…\xa0ЋћЌќѕ–—“”‘’\xf7„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю","x-mac-gaelic":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc†\xb0\xa2\xa3\xa7•\xb6\xdf\xae\xa9™\xb4\xa8≠\xc6\xd8Ḃ\xb1≤≥ḃĊċḊḋḞḟĠġṀ\xe6\xf8ṁṖṗɼƒſṠ\xab\xbb…\xa0\xc0\xc3\xd5Œœ–—“”‘’ṡẛ\xffŸṪ€‹›Ŷŷṫ\xb7Ỳỳ⁊\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4♣\xd2\xda\xdb\xd9ı\xdd\xfdŴŵẄẅẀẁẂẃ","x-mac-greek":"\xc4\xb9\xb2\xc9\xb3\xd6\xdc΅\xe0\xe2\xe4΄\xa8\xe7\xe9\xe8\xea\xeb\xa3™\xee\xef•\xbd‰\xf4\xf6\xa6€\xf9\xfb\xfc†ΓΔΘΛΞΠ\xdf\xae\xa9ΣΪ\xa7≠\xb0\xb7Α\xb1≤≥\xa5ΒΕΖΗΙΚΜΦΫΨΩάΝ\xacΟΡ≈Τ\xab\xbb…\xa0ΥΧΆΈœ–―“”‘’\xf7ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\xad","x-mac-icelandic":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\xdd\xb0\xa2\xa3\xa7•\xb6\xdf\xae\xa9™\xb4\xa8≠\xc6\xd8∞\xb1≤≥\xa5\xb5∂∑∏π∫\xaa\xbaΩ\xe6\xf8\xbf\xa1\xac√ƒ≈∆\xab\xbb…\xa0\xc0\xc3\xd5Œœ–—“”‘’\xf7◊\xffŸ⁄€\xd0\xf0\xde\xfe\xfd\xb7‚„‰\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\xd2\xda\xdb\xd9ıˆ˜\xaf˘˙˚\xb8˝˛ˇ","x-mac-inuit":"ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ\xb0ᒡᒥᒦ•\xb6ᒧ\xae\xa9™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ…\xa0ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł","x-mac-ce":"\xc4Āā\xc9Ą\xd6\xdc\xe1ąČ\xe4čĆć\xe9ŹźĎ\xedďĒēĖ\xf3ė\xf4\xf6\xf5\xfaĚě\xfc†\xb0Ę\xa3\xa7•\xb6\xdf\xae\xa9™ę\xa8≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ\xac√ńŇ∆\xab\xbb…\xa0ňŐ\xd5őŌ–—“”‘’\xf7◊ōŔŕŘ‹›řŖŗŠ‚„šŚś\xc1Ťť\xcdŽžŪ\xd3\xd4ūŮ\xdaůŰűŲų\xdd\xfdķŻŁżĢˇ",macintosh:"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc†\xb0\xa2\xa3\xa7•\xb6\xdf\xae\xa9™\xb4\xa8≠\xc6\xd8∞\xb1≤≥\xa5\xb5∂∑∏π∫\xaa\xbaΩ\xe6\xf8\xbf\xa1\xac√ƒ≈∆\xab\xbb…\xa0\xc0\xc3\xd5Œœ–—“”‘’\xf7◊\xffŸ⁄€‹›ﬁﬂ‡\xb7‚„‰\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\xd2\xda\xdb\xd9ıˆ˜\xaf˘˙˚\xb8˝˛ˇ","x-mac-romanian":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc†\xb0\xa2\xa3\xa7•\xb6\xdf\xae\xa9™\xb4\xa8≠ĂȘ∞\xb1≤≥\xa5\xb5∂∑∏π∫\xaa\xbaΩăș\xbf\xa1\xac√ƒ≈∆\xab\xbb…\xa0\xc0\xc3\xd5Œœ–—“”‘’\xf7◊\xffŸ⁄€‹›Țț‡\xb7‚„‰\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\xd2\xda\xdb\xd9ıˆ˜\xaf˘˙˚\xb8˝˛ˇ","x-mac-turkish":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc†\xb0\xa2\xa3\xa7•\xb6\xdf\xae\xa9™\xb4\xa8≠\xc6\xd8∞\xb1≤≥\xa5\xb5∂∑∏π∫\xaa\xbaΩ\xe6\xf8\xbf\xa1\xac√ƒ≈∆\xab\xbb…\xa0\xc0\xc3\xd5Œœ–—“”‘’\xf7◊\xffŸĞğİıŞş‡\xb7‚„‰\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\xd2\xda\xdb\xd9ˆ˜\xaf˘˙˚\xb8˝˛ˇ"};/**
   * Decodes an old-style Macintosh string. Returns either a Unicode JavaScript
   * string, or 'undefined' if the encoding is unsupported. For example, we do
   * not support Chinese, Japanese or Korean because these would need large
   * mapping tables.
   * @param {DataView} dataView
   * @param {number} offset
   * @param {number} dataLength
   * @param {string} encoding
   * @returns {string}
   */H.MACSTRING=function(t,r,n,o){var a=Y[o];if(void 0!==a){for(var s="",l=0;l<n;l++){var c=t.getUint8(r+l);// In all eight-bit Mac encodings, the characters 0x00..0x7F are
// mapped to U+0000..U+007F; we only need to look up the others.
c<=127?s+=String.fromCharCode(c):s+=a[127&c]}return s}};// Unicode character codes to their 8-bit MacOS equivalent. This table
// is not exactly a super cheap data structure, but we do not care because
// encoding Macintosh strings is only rarely needed in typical applications.
var Z="function"==typeof WeakMap&&new WeakMap,K=function(t){// Since we use encoding as a cache key for WeakMap, it has to be
// a String object and not a literal. And at least on NodeJS 2.10.1,
// WeakMap requires that the same String instance is passed for cache hits.
if(!n)for(var r in n={},Y)/*jshint -W053 */n[r]=new String(r);var o=n[t];if(void 0!==o){// We can't do "if (cache.has(key)) {return cache.get(key)}" here:
// since garbage collection may run at any time, it could also kick in
// between the calls to cache.has() and cache.get(). In that case,
// we would return 'undefined' even though we do support the encoding.
if(Z){var a=Z.get(o);if(void 0!==a)return a}var s=Y[t];if(void 0!==s){for(var l={},c=0;c<s.length;c++)l[s.charCodeAt(c)]=c+128;return Z&&Z.set(o,l),l}}};function J(t){return t>=-128&&t<=127}// Helper for encode.VARDELTAS
function Q(t,r,n){for(var o=0,a=t.length;r<a&&o<64&&0===t[r];)++r,++o;return n.push(128|o-1),r}// Helper for encode.VARDELTAS
function $(t,r,n){for(var o=0,a=t.length,s=r;s<a&&o<64;){var l=t[s];if(!J(l)||0===l&&s+1<a&&0===t[s+1])break;++s,++o}n.push(o-1);for(var c=r;c<s;++c)n.push(t[c]+256&255);return s}// Helper for encode.VARDELTAS
function ee(t,r,n){for(var o=0,a=t.length,s=r;s<a&&o<64;){var l=t[s];// Within a word-encoded run of deltas, it is easiest to start
// a new run (with a different encoding) whenever we encounter
// a zero value. For example, the sequence [0x6666, 0, 0x7777]
// needs 7 bytes when storing the zero inside the current run
// (42 66 66 00 00 77 77), and equally 7 bytes when starting a
// new run (40 66 66 80 40 77 77).
if(0===l||J(l)&&s+1<a&&J(t[s+1]))break;++s,++o}n.push(64|o-1);for(var c=r;c<s;++c){var u=t[c];n.push(u+65536>>8&255,u+256&255)}return s}/**
   * Encode a list of variation adjustment deltas.
   *
   * Variation adjustment deltas are used in ‘gvar’ and ‘cvar’ tables.
   * They indicate how points (in ‘gvar’) or values (in ‘cvar’) get adjusted
   * when generating instances of variation fonts.
   *
   * @see https://www.microsoft.com/typography/otspec/gvar.htm
   * @see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6gvar.html
   * @param {Array}
   * @return {Array}
   *//**
   * Encodes an old-style Macintosh string. Returns a byte array upon success.
   * If the requested encoding is unsupported, or if the input string contains
   * a character that cannot be expressed in the encoding, the function returns
   * 'undefined'.
   * @param {string} str
   * @param {string} encoding
   * @returns {Array}
   */W.MACSTRING=function(t,r){var n=K(r);if(void 0!==n){for(var o=[],a=0;a<t.length;a++){var s=t.charCodeAt(a);// In all eight-bit Mac encodings, the characters 0x00..0x7F are
// mapped to U+0000..U+007F; we only need to look up the others.
if(s>=128&&void 0===(s=n[s]))// in the requested encoding.
return;o[a]=s;// result.push(c);
}return o}},/**
   * @param {string} str
   * @param {string} encoding
   * @returns {number}
   */q.MACSTRING=function(t,r){var n=W.MACSTRING(t,r);return void 0!==n?n.length:0},W.VARDELTAS=function(t){for(var r=0,n=[];r<t.length;){var o=t[r];r=0===o?Q(t,r,n):o>=-128&&o<=127?$(t,r,n):ee(t,r,n)}return n},// The values should be objects containing name / type / value.
/**
   * @param {Array} l
   * @returns {Array}
   */W.INDEX=function(t){for(var r=1,n=[1],o=[],a=0;a<t.length;a+=1){var s=W.OBJECT(t[a]);Array.prototype.push.apply(o,s),r+=s.length,n.push(r)}if(0===o.length)return[0,0];for(var l=[],c=1+Math.floor(Math.log(r)/Math.log(2))/8|0,u=[void 0,W.BYTE,W.USHORT,W.UINT24,W.ULONG][c],p=0;p<n.length;p+=1){var d=u(n[p]);Array.prototype.push.apply(l,d)}return Array.prototype.concat(W.Card16(t.length),W.OffSize(c),l,o)},/**
   * @param {Array}
   * @returns {number}
   */q.INDEX=function(t){return W.INDEX(t).length},/**
   * Convert an object to a CFF DICT structure.
   * The keys should be numeric.
   * The values should be objects containing name / type / value.
   * @param {Object} m
   * @returns {Array}
   */W.DICT=function(t){for(var r=[],n=Object.keys(t),o=n.length,a=0;a<o;a+=1){// Object.keys() return string keys, but our keys are always numeric.
var s=parseInt(n[a],0),l=t[s];r=(r=r.concat(W.OPERAND(l.value,l.type))).concat(W.OPERATOR(s))}return r},/**
   * @param {Object}
   * @returns {number}
   */q.DICT=function(t){return W.DICT(t).length},/**
   * @param {number}
   * @returns {Array}
   */W.OPERATOR=function(t){return t<1200?[t]:[12,t-1200]},/**
   * @param {Array} v
   * @param {string}
   * @returns {Array}
   */W.OPERAND=function(t,r){var n=[];if(Array.isArray(r))for(var o=0;o<r.length;o+=1)G.argument(t.length===r.length,"Not enough arguments given for type"+r),n=n.concat(W.OPERAND(t[o],r[o]));else if("SID"===r)n=n.concat(W.NUMBER(t));else if("offset"===r)// 4 bytes. This makes offset calculation for the top dict easier.
n=n.concat(W.NUMBER32(t));else if("number"===r)n=n.concat(W.NUMBER(t));else if("real"===r)n=n.concat(W.REAL(t));else throw Error("Unknown operand type "+r);// FIXME Add support for booleans
return n},W.OP=W.BYTE,q.OP=q.BYTE;var et="function"==typeof WeakMap&&new WeakMap;/**
   * @exports opentype.Table
   * @class
   * @param {string} tableName
   * @param {Array} fields
   * @param {Object} options
   * @constructor
   */function er(t,r,n){for(var o=this,a=0;a<r.length;a+=1){var s=r[a];o[s.name]=s.value}if(this.tableName=t,this.fields=r,n)for(var l=Object.keys(n),c=0;c<l.length;c+=1){var u=l[c],p=n[u];void 0!==o[u]&&(o[u]=p)}}/**
   * Encodes the table and returns an array of bytes
   * @return {Array}
   *//**
   * @private
   */function en(t,r,n){void 0===n&&(n=r.length);var o=Array(r.length+1);o[0]={name:t+"Count",type:"USHORT",value:n};for(var a=0;a<r.length;a++)o[a+1]={name:t+a,type:"USHORT",value:r[a]};return o}/**
   * @private
   */function eo(t,r,n){var o=r.length,a=Array(o+1);a[0]={name:t+"Count",type:"USHORT",value:o};for(var s=0;s<o;s++)a[s+1]={name:t+s,type:"TABLE",value:n(r[s],s)};return a}/**
   * @private
   */function ea(t,r,n){var o=r.length,a=[];a[0]={name:t+"Count",type:"USHORT",value:o};for(var s=0;s<o;s++)a=a.concat(n(r[s],s));return a}// Common Layout Tables
/**
   * @exports opentype.Coverage
   * @class
   * @param {opentype.Table}
   * @constructor
   * @extends opentype.Table
   */function es(t){1===t.format?er.call(this,"coverageTable",[{name:"coverageFormat",type:"USHORT",value:1}].concat(en("glyph",t.glyphs))):G.assert(!1,"Can't create coverage table format 2 yet.")}function ei(t){er.call(this,"scriptListTable",ea("scriptRecord",t,function(t,r){var n=t.script,o=n.defaultLangSys;return G.assert(!!o,"Unable to write GSUB: script "+t.tag+" has no default language system."),[{name:"scriptTag"+r,type:"TAG",value:t.tag},{name:"script"+r,type:"TABLE",value:new er("scriptTable",[{name:"defaultLangSys",type:"TABLE",value:new er("defaultLangSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:o.reqFeatureIndex}].concat(en("featureIndex",o.featureIndexes)))}].concat(ea("langSys",n.langSysRecords,function(t,r){var n=t.langSys;return[{name:"langSysTag"+r,type:"TAG",value:t.tag},{name:"langSys"+r,type:"TABLE",value:new er("langSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:n.reqFeatureIndex}].concat(en("featureIndex",n.featureIndexes)))}]})))}]}))}/**
   * @exports opentype.FeatureList
   * @class
   * @param {opentype.Table}
   * @constructor
   * @extends opentype.Table
   */function el(t){er.call(this,"featureListTable",ea("featureRecord",t,function(t,r){var n=t.feature;return[{name:"featureTag"+r,type:"TAG",value:t.tag},{name:"feature"+r,type:"TABLE",value:new er("featureTable",[{name:"featureParams",type:"USHORT",value:n.featureParams}].concat(en("lookupListIndex",n.lookupListIndexes)))}]}))}/**
   * @exports opentype.LookupList
   * @class
   * @param {opentype.Table}
   * @param {Object}
   * @constructor
   * @extends opentype.Table
   */function ec(t,r){er.call(this,"lookupListTable",eo("lookup",t,function(t){var n=r[t.lookupType];return G.assert(!!n,"Unable to write GSUB lookup type "+t.lookupType+" tables."),new er("lookupTable",[{name:"lookupType",type:"USHORT",value:t.lookupType},{name:"lookupFlag",type:"USHORT",value:t.lookupFlag}].concat(eo("subtable",t.subtables,n)))}))}/**
   * Convert a list of CharString operations to bytes.
   * @param {Array}
   * @returns {Array}
   */W.CHARSTRING=function(t){// See encode.MACSTRING for why we don't do "if (wmm && wmm.has(ops))".
if(et){var r=et.get(t);if(void 0!==r)return r}for(var n=[],o=t.length,a=0;a<o;a+=1){var s=t[a];n=n.concat(W[s.type](s.value))}return et&&et.set(t,n),n},/**
   * @param {Array}
   * @returns {number}
   */q.CHARSTRING=function(t){return W.CHARSTRING(t).length},/**
   * Convert an object containing name / type / value to bytes.
   * @param {Object}
   * @returns {Array}
   */W.OBJECT=function(t){var r=W[t.type];return G.argument(void 0!==r,"No encoding function for type "+t.type),r(t.value)},/**
   * @param {Object}
   * @returns {number}
   */q.OBJECT=function(t){var r=q[t.type];return G.argument(void 0!==r,"No sizeOf function for type "+t.type),r(t.value)},/**
   * Convert a table object to bytes.
   * A table contains a list of fields containing the metadata (name, type and default value).
   * The table itself has the field values set as attributes.
   * @param {opentype.Table}
   * @returns {Array}
   */W.TABLE=function(t){for(var r=[],n=t.fields.length,o=[],a=[],s=0;s<n;s+=1){var l=t.fields[s],c=W[l.type];G.argument(void 0!==c,"No encoding function for field type "+l.type+" ("+l.name+")");var u=t[l.name];void 0===u&&(u=l.value);var p=c(u);"TABLE"===l.type?(a.push(r.length),r=r.concat([0,0]),o.push(p)):r=r.concat(p)}for(var d=0;d<o.length;d+=1){var m=a[d],f=r.length;G.argument(f<65536,"Table "+t.tableName+" too big."),r[m]=f>>8,r[m+1]=255&f,r=r.concat(o[d])}return r},/**
   * @param {opentype.Table}
   * @returns {number}
   */q.TABLE=function(t){for(var r=0,n=t.fields.length,o=0;o<n;o+=1){var a=t.fields[o],s=q[a.type];G.argument(void 0!==s,"No sizeOf function for field type "+a.type+" ("+a.name+")");var l=t[a.name];void 0===l&&(l=a.value),r+=s(l),"TABLE"===a.type&&(r+=2)}return r},W.RECORD=W.TABLE,q.RECORD=q.TABLE,W.LITERAL=function(t){return t},q.LITERAL=function(t){return t.length},er.prototype.encode=function(){return W.TABLE(this)},/**
   * Get the size of the table.
   * @return {number}
   */er.prototype.sizeOf=function(){return q.TABLE(this)},es.prototype=Object.create(er.prototype),es.prototype.constructor=es,ei.prototype=Object.create(er.prototype),ei.prototype.constructor=ei,el.prototype=Object.create(er.prototype),el.prototype.constructor=el,ec.prototype=Object.create(er.prototype),ec.prototype.constructor=ec;// Don't use offsets inside Records (probable bug), only in Tables.
var eu={Table:er,Record:er,Coverage:es,ScriptList:ei,FeatureList:el,LookupList:ec,ushortList:en,tableList:eo,recordList:ea};// Parsing utility functions
// Retrieve an unsigned byte from the DataView.
function ep(t,r){return t.getUint8(r)}// Retrieve an unsigned 16-bit short from the DataView.
// The value is stored in big endian.
function ed(t,r){return t.getUint16(r,!1)}// Retrieve a signed 16-bit short from the DataView.
// The value is stored in big endian.
function em(t,r){return t.getInt16(r,!1)}// Retrieve an unsigned 32-bit long from the DataView.
// The value is stored in big endian.
function ef(t,r){return t.getUint32(r,!1)}// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.
// The value is stored in big endian.
function eh(t,r){return t.getInt16(r,!1)+t.getUint16(r+2,!1)/65535}// Retrieve a 4-character tag from the DataView.
// Tags are used to identify tables.
function ey(t,r){for(var n="",o=r;o<r+4;o+=1)n+=String.fromCharCode(t.getInt8(o));return n}// Retrieve an offset from the DataView.
// Offsets are 1 to 4 bytes in length, depending on the offSize argument.
function eg(t,r,n){for(var o=0,a=0;a<n;a+=1)o<<=8,o+=t.getUint8(r+a);return o}// Retrieve a number of bytes from start offset to the end offset from the DataView.
function ev(t,r,n){for(var o=[],a=r;a<n;a+=1)o.push(t.getUint8(a));return o}// Convert the list of bytes to a string.
function eb(t){for(var r="",n=0;n<t.length;n+=1)r+=String.fromCharCode(t[n]);return r}var ex={byte:1,uShort:2,short:2,uLong:4,fixed:4,longDateTime:8,tag:4};// A stateful parser that changes the offset whenever a value is retrieved.
// The data is a DataView.
function ej(t,r){this.data=t,this.offset=r,this.relativeOffset=0}ej.prototype.parseByte=function(){var t=this.data.getUint8(this.offset+this.relativeOffset);return this.relativeOffset+=1,t},ej.prototype.parseChar=function(){var t=this.data.getInt8(this.offset+this.relativeOffset);return this.relativeOffset+=1,t},ej.prototype.parseCard8=ej.prototype.parseByte,ej.prototype.parseUShort=function(){var t=this.data.getUint16(this.offset+this.relativeOffset);return this.relativeOffset+=2,t},ej.prototype.parseCard16=ej.prototype.parseUShort,ej.prototype.parseSID=ej.prototype.parseUShort,ej.prototype.parseOffset16=ej.prototype.parseUShort,ej.prototype.parseShort=function(){var t=this.data.getInt16(this.offset+this.relativeOffset);return this.relativeOffset+=2,t},ej.prototype.parseF2Dot14=function(){var t=this.data.getInt16(this.offset+this.relativeOffset)/16384;return this.relativeOffset+=2,t},ej.prototype.parseULong=function(){var t=ef(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,t},ej.prototype.parseOffset32=ej.prototype.parseULong,ej.prototype.parseFixed=function(){var t=eh(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,t},ej.prototype.parseString=function(t){var r=this.data,n=this.offset+this.relativeOffset,o="";this.relativeOffset+=t;for(var a=0;a<t;a++)o+=String.fromCharCode(r.getUint8(n+a));return o},ej.prototype.parseTag=function(){return this.parseString(4)},// JavaScript and unix timestamps traditionally use 32 bits, so we
// only take the last 32 bits.
// + Since until 2038 those bits will be filled by zeros we can ignore them.
ej.prototype.parseLongDateTime=function(){var t=ef(this.data,this.offset+this.relativeOffset+4);// Subtract seconds between 01/01/1904 and 01/01/1970
return(// to convert Apple Mac timestamp to Standard Unix timestamp
t-=2082844800,this.relativeOffset+=8,t)},ej.prototype.parseVersion=function(t){var r=ed(this.data,this.offset+this.relativeOffset),n=ed(this.data,this.offset+this.relativeOffset+2);// How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1
return this.relativeOffset+=4,void 0===t&&(t=4096),r+n/t/10},ej.prototype.skip=function(t,r){void 0===r&&(r=1),this.relativeOffset+=ex[t]*r},// Parse a list of 32 bit unsigned integers.
ej.prototype.parseULongList=function(t){void 0===t&&(t=this.parseULong());for(var r=Array(t),n=this.data,o=this.offset+this.relativeOffset,a=0;a<t;a++)r[a]=n.getUint32(o),o+=4;return this.relativeOffset+=4*t,r},// or provided as an argument.
ej.prototype.parseOffset16List=ej.prototype.parseUShortList=function(t){void 0===t&&(t=this.parseUShort());for(var r=Array(t),n=this.data,o=this.offset+this.relativeOffset,a=0;a<t;a++)r[a]=n.getUint16(o),o+=2;return this.relativeOffset+=2*t,r},ej.prototype.parseShortList=function(t){for(var r=Array(t),n=this.data,o=this.offset+this.relativeOffset,a=0;a<t;a++)r[a]=n.getInt16(o),o+=2;return this.relativeOffset+=2*t,r},ej.prototype.parseByteList=function(t){for(var r=Array(t),n=this.data,o=this.offset+this.relativeOffset,a=0;a<t;a++)r[a]=n.getUint8(o++);return this.relativeOffset+=t,r},/**
   * Parse a list of items.
   * Record count is optional, if omitted it is read from the stream.
   * itemCallback is one of the Parser methods.
   */ej.prototype.parseList=function(t,r){var n=this;r||(r=t,t=this.parseUShort());for(var o=Array(t),a=0;a<t;a++)o[a]=r.call(n);return o},ej.prototype.parseList32=function(t,r){var n=this;r||(r=t,t=this.parseULong());for(var o=Array(t),a=0;a<t;a++)o[a]=r.call(n);return o},/**
   * Parse a list of records.
   * Record count is optional, if omitted it is read from the stream.
   * Example of recordDescription: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }
   */ej.prototype.parseRecordList=function(t,r){var n=this;// If the count argument is absent, read it in the stream.
r||(r=t,t=this.parseUShort());for(var o=Array(t),a=Object.keys(r),s=0;s<t;s++){for(var l={},c=0;c<a.length;c++){var u=a[c],p=r[u];l[u]=p.call(n)}o[s]=l}return o},ej.prototype.parseRecordList32=function(t,r){var n=this;// If the count argument is absent, read it in the stream.
r||(r=t,t=this.parseULong());for(var o=Array(t),a=Object.keys(r),s=0;s<t;s++){for(var l={},c=0;c<a.length;c++){var u=a[c],p=r[u];l[u]=p.call(n)}o[s]=l}return o},// Example of description: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }
ej.prototype.parseStruct=function(t){var r=this;if("function"==typeof t)return t.call(this);for(var n=Object.keys(t),o={},a=0;a<n.length;a++){var s=n[a],l=t[s];o[s]=l.call(r)}return o},/**
   * Parse a GPOS valueRecord
   * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record
   * valueFormat is optional, if omitted it is read from the stream.
   */ej.prototype.parseValueRecord=function(t){if(void 0===t&&(t=this.parseUShort()),0!==t){var r={};return 1&t&&(r.xPlacement=this.parseShort()),2&t&&(r.yPlacement=this.parseShort()),4&t&&(r.xAdvance=this.parseShort()),8&t&&(r.yAdvance=this.parseShort()),16&t&&(r.xPlaDevice=void 0,this.parseShort()),32&t&&(r.yPlaDevice=void 0,this.parseShort()),64&t&&(r.xAdvDevice=void 0,this.parseShort()),128&t&&(r.yAdvDevice=void 0,this.parseShort()),r}},/**
   * Parse a list of GPOS valueRecords
   * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record
   * valueFormat and valueCount are read from the stream.
   */ej.prototype.parseValueRecordList=function(){for(var t=this,r=this.parseUShort(),n=this.parseUShort(),o=Array(n),a=0;a<n;a++)o[a]=t.parseValueRecord(r);return o},ej.prototype.parsePointer=function(t){var r=this.parseOffset16();if(r>0)return new ej(this.data,this.offset+r).parseStruct(t)},ej.prototype.parsePointer32=function(t){var r=this.parseOffset32();if(r>0)return new ej(this.data,this.offset+r).parseStruct(t)},/**
   * Parse a list of offsets to lists of 16-bit integers,
   * or a list of offsets to lists of offsets to any kind of items.
   * If itemCallback is not provided, a list of list of UShort is assumed.
   * If provided, itemCallback is called on each item and must parse the item.
   * See examples in tables/gsub.js
   */ej.prototype.parseListOfLists=function(t){for(var r=this,n=this.parseOffset16List(),o=n.length,a=this.relativeOffset,s=Array(o),l=0;l<o;l++){var c=n[l];if(0===c){// NULL offset
// Add i as owned property to list. Convenient with assert.
s[l]=void 0;continue}if(r.relativeOffset=c,t){for(var u=r.parseOffset16List(),p=Array(u.length),d=0;d<u.length;d++)r.relativeOffset=c+u[d],p[d]=t.call(r);s[l]=p}else s[l]=r.parseUShortList()}return this.relativeOffset=a,s},// Parse a coverage table in a GSUB, GPOS or GDEF table.
// https://www.microsoft.com/typography/OTSPEC/chapter2.htm
// parser.offset must point to the start of the table containing the coverage.
ej.prototype.parseCoverage=function(){var t=this,r=this.offset+this.relativeOffset,n=this.parseUShort(),o=this.parseUShort();if(1===n)return{format:1,glyphs:this.parseUShortList(o)};if(2===n){for(var a=Array(o),s=0;s<o;s++)a[s]={start:t.parseUShort(),end:t.parseUShort(),index:t.parseUShort()};return{format:2,ranges:a}}throw Error("0x"+r.toString(16)+": Coverage format must be 1 or 2.")},// https://www.microsoft.com/typography/OTSPEC/chapter2.htm
ej.prototype.parseClassDef=function(){var t=this.offset+this.relativeOffset,r=this.parseUShort();if(1===r)return{format:1,startGlyph:this.parseUShort(),classes:this.parseUShortList()};if(2===r)return{format:2,ranges:this.parseRecordList({start:ej.uShort,end:ej.uShort,classId:ej.uShort})};throw Error("0x"+t.toString(16)+": ClassDef format must be 1 or 2.")},// These convenience methods can be used as callbacks and should be called with "this" context set to a Parser instance.
ej.list=function(t,r){return function(){return this.parseList(t,r)}},ej.list32=function(t,r){return function(){return this.parseList32(t,r)}},ej.recordList=function(t,r){return function(){return this.parseRecordList(t,r)}},ej.recordList32=function(t,r){return function(){return this.parseRecordList32(t,r)}},ej.pointer=function(t){return function(){return this.parsePointer(t)}},ej.pointer32=function(t){return function(){return this.parsePointer32(t)}},ej.tag=ej.prototype.parseTag,ej.byte=ej.prototype.parseByte,ej.uShort=ej.offset16=ej.prototype.parseUShort,ej.uShortList=ej.prototype.parseUShortList,ej.uLong=ej.offset32=ej.prototype.parseULong,ej.uLongList=ej.prototype.parseULongList,ej.struct=ej.prototype.parseStruct,ej.coverage=ej.prototype.parseCoverage,ej.classDef=ej.prototype.parseClassDef;// https://www.microsoft.com/typography/OTSPEC/chapter2.htm
var ew={reserved:ej.uShort,reqFeatureIndex:ej.uShort,featureIndexes:ej.uShortList};ej.prototype.parseScriptList=function(){return this.parsePointer(ej.recordList({tag:ej.tag,script:ej.pointer({defaultLangSys:ej.pointer(ew),langSysRecords:ej.recordList({tag:ej.tag,langSys:ej.pointer(ew)})})}))||[]},ej.prototype.parseFeatureList=function(){return this.parsePointer(ej.recordList({tag:ej.tag,feature:ej.pointer({featureParams:ej.offset16,lookupListIndexes:ej.uShortList})}))||[]},ej.prototype.parseLookupList=function(t){return this.parsePointer(ej.list(ej.pointer(function(){var r=this.parseUShort();G.argument(1<=r&&r<=9,"GPOS/GSUB lookup type "+r+" unknown.");var n=this.parseUShort(),o=16&n;return{lookupType:r,lookupFlag:n,subtables:this.parseList(ej.pointer(t[r])),markFilteringSet:o?this.parseUShort():void 0}})))||[]},ej.prototype.parseFeatureVariationsList=function(){return this.parsePointer32(function(){var t=this.parseUShort(),r=this.parseUShort();return G.argument(1===t&&r<1,"GPOS/GSUB feature variations table unknown."),this.parseRecordList32({conditionSetOffset:ej.offset32,featureTableSubstitutionOffset:ej.offset32})})||[]};var e_={getByte:ep,getCard8:ep,getUShort:ed,getCard16:ed,getShort:em,getULong:ef,getFixed:eh,getTag:ey,getOffset:eg,getBytes:ev,bytesToString:eb,Parser:ej};// The `cmap` table stores the mappings from characters to glyphs.
function eS(t,r){//Skip reserved.
r.parseUShort(),t.length=r.parseULong(),t.language=r.parseULong(),t.groupCount=n=r.parseULong(),t.glyphIndexMap={};for(var n,o=0;o<n;o+=1)for(var a=r.parseULong(),s=r.parseULong(),l=r.parseULong(),c=a;c<=s;c+=1)t.glyphIndexMap[c]=l,l++}function eE(t,r,n,o,a){// Length in bytes of the sub-tables.
t.length=r.parseUShort(),t.language=r.parseUShort(),t.segCount=s=r.parseUShort()>>1,r.skip("uShort",3),t.glyphIndexMap={};for(var s,l=new e_.Parser(n,o+a+14),c=new e_.Parser(n,o+a+16+2*s),u=new e_.Parser(n,o+a+16+4*s),p=new e_.Parser(n,o+a+16+6*s),d=o+a+16+8*s,m=0;m<s-1;m+=1)for(var f=void 0,h=l.parseUShort(),y=c.parseUShort(),g=u.parseShort(),v=p.parseUShort(),b=y;b<=h;b+=1)0!==v?(d=p.offset+p.relativeOffset-2+v+(b-y)*2,0!==(f=e_.getUShort(n,d))&&(f=f+g&65535)):f=b+g&65535,t.glyphIndexMap[b]=f}// Parse the `cmap` table. This table stores the mappings from characters to glyphs.
function eT(t,r,n){t.segments.push({end:r,start:r,delta:-(r-n),offset:0,glyphIndex:n})}function ek(t){t.segments.push({end:65535,start:65535,delta:1,offset:0})}// Make cmap table, format 4 by default, 12 if needed only
var eM={parse:// There are many available formats, but we only support the Windows format 4 and 12.
// This function returns a `CmapEncoding` object or null if no supported format could be found.
function(t,r){var n={};n.version=e_.getUShort(t,r),G.argument(0===n.version,"cmap table version should be 0."),// We're only interested in a "platform 0" (Unicode format) and "platform 3" (Windows format) table.
n.numTables=e_.getUShort(t,r+2);for(var o=-1,a=n.numTables-1;a>=0;a-=1){var s=e_.getUShort(t,r+4+8*a),l=e_.getUShort(t,r+4+8*a+2);if(3===s&&(0===l||1===l||10===l)||0===s&&(0===l||1===l||2===l||3===l||4===l)){o=e_.getULong(t,r+4+8*a+4);break}}if(-1===o)throw Error("No valid cmap sub-tables found.");var c=new e_.Parser(t,r+o);if(n.format=c.parseUShort(),12===n.format)eS(n,c);else if(4===n.format)eE(n,c,t,r,o);else throw Error("Only format 4 and 12 cmap tables are supported (found format "+n.format+").");return n},make:function(t){// Plan 0 is the base Unicode Plan but emojis, for example are on another plan, and needs cmap 12 format (with 32bit)
var r,n=!0;for(r=t.length-1;r>0;r-=1)if(t.get(r).unicode>65535){console.log("Adding CMAP format 12 (needed!)"),n=!1;break}var o=[{name:"version",type:"USHORT",value:0},{name:"numTables",type:"USHORT",value:n?1:2},{name:"platformID",type:"USHORT",value:3},{name:"encodingID",type:"USHORT",value:1},{name:"offset",type:"ULONG",value:n?12:20}];n||(o=o.concat([{name:"cmap12PlatformID",type:"USHORT",value:3},{name:"cmap12EncodingID",type:"USHORT",value:10},{name:"cmap12Offset",type:"ULONG",value:0}])),o=o.concat([{name:"format",type:"USHORT",value:4},{name:"cmap4Length",type:"USHORT",value:0},{name:"language",type:"USHORT",value:0},{name:"segCountX2",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);var a=new eu.Table("cmap",o);for(r=0,a.segments=[];r<t.length;r+=1){for(var s=t.get(r),l=0;l<s.unicodes.length;l+=1)eT(a,s.unicodes[l],r);a.segments=a.segments.sort(function(t,r){return t.start-r.start})}ek(a);var c=a.segments.length,u=0,p=[],d=[],m=[],f=[],h=[],y=[];// The specification -> find suites of characters and make a group
// Here we're doing one group for each letter
// Doing as the spec can save 8 times (or more) space
for(r=0;r<c;r+=1){var g=a.segments[r];// CMAP 4
g.end<=65535&&g.start<=65535?(p=p.concat({name:"end_"+r,type:"USHORT",value:g.end}),d=d.concat({name:"start_"+r,type:"USHORT",value:g.start}),m=m.concat({name:"idDelta_"+r,type:"SHORT",value:g.delta}),f=f.concat({name:"idRangeOffset_"+r,type:"USHORT",value:g.offset}),void 0!==g.glyphId&&(h=h.concat({name:"glyph_"+r,type:"USHORT",value:g.glyphId}))):u+=1,n||void 0===g.glyphIndex||(y=(y=(y=y.concat({name:"cmap12Start_"+r,type:"ULONG",value:g.start})).concat({name:"cmap12End_"+r,type:"ULONG",value:g.end})).concat({name:"cmap12Glyph_"+r,type:"ULONG",value:g.glyphIndex}))}// CMAP 4 Subtable
if(a.segCountX2=(c-u)*2,a.searchRange=2*Math.pow(2,Math.floor(Math.log(c-u)/Math.log(2))),a.entrySelector=Math.log(a.searchRange/2)/Math.log(2),a.rangeShift=a.segCountX2-a.searchRange,a.fields=a.fields.concat(p),a.fields.push({name:"reservedPad",type:"USHORT",value:0}),a.fields=a.fields.concat(d),a.fields=a.fields.concat(m),a.fields=a.fields.concat(f),a.fields=a.fields.concat(h),a.cmap4Length=14+// Subtable header
2*p.length+2+// reservedPad
2*d.length+2*m.length+2*f.length+2*h.length,!n){// CMAP 12 Subtable
var v=16+// Subtable header
4*y.length;a.cmap12Offset=20+a.cmap4Length,a.fields=a.fields.concat([{name:"cmap12Format",type:"USHORT",value:12},{name:"cmap12Reserved",type:"USHORT",value:0},{name:"cmap12Length",type:"ULONG",value:v},{name:"cmap12Language",type:"ULONG",value:0},{name:"cmap12nGroups",type:"ULONG",value:y.length/3}]),a.fields=a.fields.concat(y)}return a}},eC=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","266 ff","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"],eO=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],eN=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],eA=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];// Glyph encoding
/**
   * This is the encoding used for fonts created from scratch.
   * It loops through all glyphs and finds the appropriate unicode value.
   * Since it's linear time, other encodings will be faster.
   * @exports opentype.DefaultEncoding
   * @class
   * @constructor
   * @param {opentype.Font}
   */function eR(t){this.font=t}/**
   * @exports opentype.CmapEncoding
   * @class
   * @constructor
   * @param {Object} cmap - a object with the cmap encoded data
   */function eL(t){this.cmap=t}/**
   * @param  {string} c - the character
   * @return {number} The glyph index.
   *//**
   * @exports opentype.CffEncoding
   * @class
   * @constructor
   * @param {string} encoding - The encoding
   * @param {Array} charset - The character set.
   */function eI(t,r){this.encoding=t,this.charset=r}/**
   * @param  {string} s - The character
   * @return {number} The index.
   *//**
   * @exports opentype.GlyphNames
   * @class
   * @constructor
   * @param {Object} post
   */function eP(t){var r=this;switch(t.version){case 1:this.names=eA.slice();break;case 2:this.names=Array(t.numberOfGlyphs);for(var n=0;n<t.numberOfGlyphs;n++)t.glyphNameIndex[n]<eA.length?r.names[n]=eA[t.glyphNameIndex[n]]:r.names[n]=t.names[t.glyphNameIndex[n]-eA.length];break;case 2.5:this.names=Array(t.numberOfGlyphs);for(var o=0;o<t.numberOfGlyphs;o++)r.names[o]=eA[o+t.glyphNameIndex[o]];break;default:this.names=[]}}/**
   * Gets the index of a glyph by name.
   * @param  {string} name - The glyph name
   * @return {number} The index
   *//**
   * @alias opentype.addGlyphNames
   * @param {opentype.Font}
   */function eD(t){for(var r,n=t.tables.cmap.glyphIndexMap,o=Object.keys(n),a=0;a<o.length;a+=1){var s=o[a],l=n[s];(r=t.glyphs.get(l)).addUnicode(parseInt(s))}for(var c=0;c<t.glyphs.length;c+=1)r=t.glyphs.get(c),t.cffEncoding?t.isCIDFont?r.name="gid"+c:r.name=t.cffEncoding.charset[c]:t.glyphNames.names&&(r.name=t.glyphNames.glyphIndexToName(c))}// Drawing utility functions.
eR.prototype.charToGlyphIndex=function(t){var r=t.codePointAt(0),n=this.font.glyphs;if(n){for(var o=0;o<n.length;o+=1)for(var a=n.get(o),s=0;s<a.unicodes.length;s+=1)if(a.unicodes[s]===r)return o}return null},eL.prototype.charToGlyphIndex=function(t){return this.cmap.glyphIndexMap[t.codePointAt(0)]||0},eI.prototype.charToGlyphIndex=function(t){var r=t.codePointAt(0),n=this.encoding[r];return this.charset.indexOf(n)},eP.prototype.nameToGlyphIndex=function(t){return this.names.indexOf(t)},/**
   * @param  {number} gid
   * @return {string}
   */eP.prototype.glyphIndexToName=function(t){return this.names[t]};var eF={line:// Draw a line on the given context from point `x1,y1` to point `x2,y2`.
function(t,r,n,o,a){t.beginPath(),t.moveTo(r,n),t.lineTo(o,a),t.stroke()}};// The Glyph object
// import glyf from './tables/glyf' Can't be imported here, because it's a circular dependency
function eU(t,r){var n=r||new F;return{configurable:!0,get:function(){return"function"==typeof n&&(n=n()),n},set:function(t){n=t}}}/**
   * @typedef GlyphOptions
   * @type Object
   * @property {string} [name] - The glyph name
   * @property {number} [unicode]
   * @property {Array} [unicodes]
   * @property {number} [xMin]
   * @property {number} [yMin]
   * @property {number} [xMax]
   * @property {number} [yMax]
   * @property {number} [advanceWidth]
   */// A Glyph is an individual mark that often corresponds to a character.
// Some glyphs, such as ligatures, are a combination of many characters.
// Glyphs are the basic building blocks of a font.
//
// The `Glyph` class contains utility methods for drawing the path and its points.
/**
   * @exports opentype.Glyph
   * @class
   * @param {GlyphOptions}
   * @constructor
   */function eB(t){// By putting all the code on a prototype function (which is only declared once)
// we reduce the memory requirements for larger fonts by some 2%
this.bindConstructorValues(t)}/**
   * @param  {GlyphOptions}
   */// Define a property on the glyph that depends on the path being loaded.
function eG(t,r,n){Object.defineProperty(t,r,{get:function(){return(// Request the path property to make sure the path is loaded.
t.path,t[n])},set:function(r){t[n]=r},enumerable:!0,configurable:!0})}/**
   * A GlyphSet represents all glyphs available in the font, but modelled using
   * a deferred glyph loader, for retrieving glyphs only once they are absolutely
   * necessary, to keep the memory footprint down.
   * @exports opentype.GlyphSet
   * @class
   * @param {opentype.Font}
   * @param {Array}
   */function eV(t,r){var n=this;if(this.font=t,this.glyphs={},Array.isArray(r))for(var o=0;o<r.length;o++)n.glyphs[o]=r[o];this.length=r&&r.length||0}/**
   * @param  {number} index
   * @return {opentype.Glyph}
   */eB.prototype.bindConstructorValues=function(t){this.index=t.index||0,this.name=t.name||null,this.unicode=t.unicode||void 0,this.unicodes=t.unicodes||void 0!==t.unicode?[t.unicode]:[],t.xMin&&(this.xMin=t.xMin),t.yMin&&(this.yMin=t.yMin),t.xMax&&(this.xMax=t.xMax),t.yMax&&(this.yMax=t.yMax),t.advanceWidth&&(this.advanceWidth=t.advanceWidth),// The path for a glyph is the most memory intensive, and is bound as a value
// with a getter/setter to ensure we actually do path parsing only once the
// path is actually needed by anything.
Object.defineProperty(this,"path",eU(this,t.path))},/**
   * @param {number}
   */eB.prototype.addUnicode=function(t){0===this.unicodes.length&&(this.unicode=t),this.unicodes.push(t)},/**
   * Calculate the minimum bounding box for this glyph.
   * @return {opentype.BoundingBox}
   */eB.prototype.getBoundingBox=function(){return this.path.getBoundingBox()},/**
   * Convert the glyph to a Path we can draw on a drawing context.
   * @param  {number} [x=0] - Horizontal position of the beginning of the text.
   * @param  {number} [y=0] - Vertical position of the *baseline* of the text.
   * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.
   * @param  {Object=} options - xScale, yScale to stretch the glyph.
   * @param  {opentype.Font} if hinting is to be used, the font
   * @return {opentype.Path}
   */eB.prototype.getPath=function(t,r,n,o,a){t=void 0!==t?t:0,r=void 0!==r?r:0,n=void 0!==n?n:72,o||(o={});var s,l,c=o.xScale,u=o.yScale;if(o.hinting&&a&&a.hinting&&// of scaling the points (not the path) before hinting.
(l=this.path&&a.hinting.exec(this,n)),l)// Call font.hinting.getCommands instead of `glyf.getPath(hPoints).commands` to avoid a circular dependency
s=a.hinting.getCommands(l),t=Math.round(t),r=Math.round(r),c=u=1;else{s=this.path.commands;var p=1/this.path.unitsPerEm*n;void 0===c&&(c=p),void 0===u&&(u=p)}for(var d=new F,m=0;m<s.length;m+=1){var f=s[m];"M"===f.type?d.moveTo(t+f.x*c,r+-f.y*u):"L"===f.type?d.lineTo(t+f.x*c,r+-f.y*u):"Q"===f.type?d.quadraticCurveTo(t+f.x1*c,r+-f.y1*u,t+f.x*c,r+-f.y*u):"C"===f.type?d.curveTo(t+f.x1*c,r+-f.y1*u,t+f.x2*c,r+-f.y2*u,t+f.x*c,r+-f.y*u):"Z"===f.type&&d.closePath()}return d},/**
   * Split the glyph into contours.
   * This function is here for backwards compatibility, and to
   * provide raw access to the TrueType glyph outlines.
   * @return {Array}
   */eB.prototype.getContours=function(){var t=this;if(void 0===this.points)return[];for(var r=[],n=[],o=0;o<this.points.length;o+=1){var a=t.points[o];n.push(a),a.lastPointOfContour&&(r.push(n),n=[])}return G.argument(0===n.length,"There are still points left in the current contour."),r},/**
   * Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.
   * @return {Object}
   */eB.prototype.getMetrics=function(){for(var t=this.path.commands,r=[],n=[],o=0;o<t.length;o+=1){var a=t[o];"Z"!==a.type&&(r.push(a.x),n.push(a.y)),("Q"===a.type||"C"===a.type)&&(r.push(a.x1),n.push(a.y1)),"C"===a.type&&(r.push(a.x2),n.push(a.y2))}var s={xMin:Math.min.apply(null,r),yMin:Math.min.apply(null,n),xMax:Math.max.apply(null,r),yMax:Math.max.apply(null,n),leftSideBearing:this.leftSideBearing};return isFinite(s.xMin)||(s.xMin=0),isFinite(s.xMax)||(s.xMax=this.advanceWidth),isFinite(s.yMin)||(s.yMin=0),isFinite(s.yMax)||(s.yMax=0),s.rightSideBearing=this.advanceWidth-s.leftSideBearing-(s.xMax-s.xMin),s},/**
   * Draw the glyph on the given context.
   * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.
   * @param  {number} [x=0] - Horizontal position of the beginning of the text.
   * @param  {number} [y=0] - Vertical position of the *baseline* of the text.
   * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.
   * @param  {Object=} options - xScale, yScale to stretch the glyph.
   */eB.prototype.draw=function(t,r,n,o,a){this.getPath(r,n,o,a).draw(t)},/**
   * Draw the points of the glyph.
   * On-curve points will be drawn in blue, off-curve points will be drawn in red.
   * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.
   * @param  {number} [x=0] - Horizontal position of the beginning of the text.
   * @param  {number} [y=0] - Vertical position of the *baseline* of the text.
   * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.
   */eB.prototype.drawPoints=function(t,r,n,o){function a(r,n,o,a){var s=2*Math.PI;t.beginPath();for(var l=0;l<r.length;l+=1)t.moveTo(n+r[l].x*a,o+r[l].y*a),t.arc(n+r[l].x*a,o+r[l].y*a,2,0,s,!1);t.closePath(),t.fill()}r=void 0!==r?r:0,n=void 0!==n?n:0,o=void 0!==o?o:24;for(var s=1/this.path.unitsPerEm*o,l=[],c=[],u=this.path,p=0;p<u.commands.length;p+=1){var d=u.commands[p];void 0!==d.x&&l.push({x:d.x,y:-d.y}),void 0!==d.x1&&c.push({x:d.x1,y:-d.y1}),void 0!==d.x2&&c.push({x:d.x2,y:-d.y2})}t.fillStyle="blue",a(l,r,n,s),t.fillStyle="red",a(c,r,n,s)},/**
   * Draw lines indicating important font measurements.
   * Black lines indicate the origin of the coordinate system (point 0,0).
   * Blue lines indicate the glyph bounding box.
   * Green line indicates the advance width of the glyph.
   * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.
   * @param  {number} [x=0] - Horizontal position of the beginning of the text.
   * @param  {number} [y=0] - Vertical position of the *baseline* of the text.
   * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.
   */eB.prototype.drawMetrics=function(t,r,n,o){r=void 0!==r?r:0,n=void 0!==n?n:0,o=void 0!==o?o:24,a=1/this.path.unitsPerEm*o,t.lineWidth=1,t.strokeStyle="black",eF.line(t,r,-1e4,r,1e4),eF.line(t,-1e4,n,1e4,n);// defaults in the constructor, we save a notable amount of memory.
var a,s=this.xMin||0,l=this.yMin||0,c=this.xMax||0,u=this.yMax||0,p=this.advanceWidth||0;t.strokeStyle="blue",eF.line(t,r+s*a,-1e4,r+s*a,1e4),eF.line(t,r+c*a,-1e4,r+c*a,1e4),eF.line(t,-1e4,n+-l*a,1e4,n+-l*a),eF.line(t,-1e4,n+-u*a,1e4,n+-u*a),t.strokeStyle="green",eF.line(t,r+p*a,-1e4,r+p*a,1e4)},eV.prototype.get=function(t){return"function"==typeof this.glyphs[t]&&(this.glyphs[t]=this.glyphs[t]()),this.glyphs[t]},/**
   * @param  {number} index
   * @param  {Object}
   */eV.prototype.push=function(t,r){this.glyphs[t]=r,this.length++};var ez={GlyphSet:eV,glyphLoader:/**
   * @alias opentype.glyphLoader
   * @param  {opentype.Font} font
   * @param  {number} index
   * @return {opentype.Glyph}
   */function(t,r){return new eB({index:r,font:t})}/**
   * Generate a stub glyph that can be filled with all metadata *except*
   * the "points" and "path" properties, which must be loaded only once
   * the glyph's path is actually requested for text shaping.
   * @alias opentype.ttfGlyphLoader
   * @param  {opentype.Font} font
   * @param  {number} index
   * @param  {Function} parseGlyph
   * @param  {Object} data
   * @param  {number} position
   * @param  {Function} buildPath
   * @return {opentype.Glyph}
   */,ttfGlyphLoader:function(t,r,n,o,a,s){return function(){var l=new eB({index:r,font:t});return l.path=function(){n(l,o,a);var r=s(t.glyphs,l);return r.unitsPerEm=t.unitsPerEm,r},eG(l,"xMin","_xMin"),eG(l,"xMax","_xMax"),eG(l,"yMin","_yMin"),eG(l,"yMax","_yMax"),l}}/**
   * @alias opentype.cffGlyphLoader
   * @param  {opentype.Font} font
   * @param  {number} index
   * @param  {Function} parseCFFCharstring
   * @param  {string} charstring
   * @return {opentype.Glyph}
   */,cffGlyphLoader:function(t,r,n,o){return function(){var a=new eB({index:r,font:t});return a.path=function(){var r=n(t,a,o);return r.unitsPerEm=t.unitsPerEm,r},a}}};// The `CFF` table contains the glyph outlines in PostScript format.
// Custom equals function that can also check lists.
function eH(t,r){if(t===r)return!0;if(!(Array.isArray(t)&&Array.isArray(r))||t.length!==r.length)return!1;for(var n=0;n<t.length;n+=1)if(!eH(t[n],r[n]))return!1;return!0}// Subroutines are encoded using the negative half of the number space.
// See type 2 chapter 4.7 "Subroutine operators".
function eW(t){return t.length<1240?107:t.length<33900?1131:32768}// Parse a `CFF` INDEX array.
// An index array consists of a list of offsets, then a list of objects at those offsets.
function eq(t,r,n){var o,a,s=[],l=[],c=e_.getCard16(t,r);if(0!==c){var u=e_.getByte(t,r+2);o=r+(c+1)*u+2;for(var p=r+3,d=0;d<c+1;d+=1)s.push(e_.getOffset(t,p,u)),p+=u;// The total size of the index array is 4 header bytes + the value of the last offset.
a=o+s[c]}else a=r+2;for(var m=0;m<s.length-1;m+=1){var f=e_.getBytes(t,o+s[m],o+s[m+1]);n&&(f=n(f)),l.push(f)}return{objects:l,startOffset:r,endOffset:a}}// Parse a `CFF` DICT real value.
function eX(t){for(var r="",n=15,o=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"];;){var a=t.parseByte(),s=a>>4,l=15&a;if(s===n||(r+=o[s],l===n))break;r+=o[l]}return parseFloat(r)}// Parse a `CFF` DICT operand.
function eY(t,r){var n,o;if(28===r)return(n=t.parseByte())<<8|(o=t.parseByte());if(29===r)return n=t.parseByte(),n<<24|(o=t.parseByte())<<16|t.parseByte()<<8|t.parseByte();if(30===r)return eX(t);if(r>=32&&r<=246)return r-139;if(r>=247&&r<=250)return(r-247)*256+(n=t.parseByte())+108;if(r>=251&&r<=254)return-(256*(r-251))-(n=t.parseByte())-108;throw Error("Invalid b0 "+r)}// Convert the entries returned by `parseDict` to a proper dictionary.
// If a value is a list of one, it is unpacked.
function eZ(t){for(var r={},n=0;n<t.length;n+=1){var o=t[n][0],a=t[n][1],s=void 0;if(s=1===a.length?a[0]:a,r.hasOwnProperty(o)&&!isNaN(r[o]))throw Error("Object "+r+" already has key "+o);r[o]=s}return r}// Parse a `CFF` DICT object.
// A dictionary contains key-value pairs in a compact tokenized format.
function eK(t,r,n){r=void 0!==r?r:0;var o=new e_.Parser(t,r),a=[],s=[];for(n=void 0!==n?n:t.length;o.relativeOffset<n;){var l=o.parseByte();// The first byte for each dict item distinguishes between operator (key) and operand (value).
// Values <= 21 are operators.
l<=21?(12===l&&(l=1200+o.parseByte()),a.push([l,s]),s=[]):// until we encounter an operator.
s.push(eY(o,l))}return eZ(a)}// Given a String Index (SID), return the value of the string.
// Strings below index 392 are standard CFF strings and are not encoded in the font.
function eJ(t,r){return r=r<=390?eC[r]:t[r-391]}// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.
// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.
function eQ(t,r,n){// and lookup values in the dict.
for(var o,a={},s=0;s<r.length;s+=1){var l=r[s];if(Array.isArray(l.type)){var c=[];c.length=l.type.length;for(var u=0;u<l.type.length;u++)void 0===(o=void 0!==t[l.op]?t[l.op][u]:void 0)&&(o=void 0!==l.value&&void 0!==l.value[u]?l.value[u]:null),"SID"===l.type[u]&&(o=eJ(n,o)),c[u]=o;a[l.name]=c}else void 0===(o=t[l.op])&&(o=void 0!==l.value?l.value:null),"SID"===l.type&&(o=eJ(n,o)),a[l.name]=o}return a}// Parse the CFF header.
function e$(t,r){var n={};return n.formatMajor=e_.getCard8(t,r),n.formatMinor=e_.getCard8(t,r+1),n.size=e_.getCard8(t,r+2),n.offsetSize=e_.getCard8(t,r+3),n.startOffset=r,n.endOffset=r+4,n}var e0=[{name:"version",op:0,type:"SID"},{name:"notice",op:1,type:"SID"},{name:"copyright",op:1200,type:"SID"},{name:"fullName",op:2,type:"SID"},{name:"familyName",op:3,type:"SID"},{name:"weight",op:4,type:"SID"},{name:"isFixedPitch",op:1201,type:"number",value:0},{name:"italicAngle",op:1202,type:"number",value:0},{name:"underlinePosition",op:1203,type:"number",value:-100},{name:"underlineThickness",op:1204,type:"number",value:50},{name:"paintType",op:1205,type:"number",value:0},{name:"charstringType",op:1206,type:"number",value:2},{name:"fontMatrix",op:1207,type:["real","real","real","real","real","real"],value:[.001,0,0,.001,0,0]},{name:"uniqueId",op:13,type:"number"},{name:"fontBBox",op:5,type:["number","number","number","number"],value:[0,0,0,0]},{name:"strokeWidth",op:1208,type:"number",value:0},{name:"xuid",op:14,type:[],value:null},{name:"charset",op:15,type:"offset",value:0},{name:"encoding",op:16,type:"offset",value:0},{name:"charStrings",op:17,type:"offset",value:0},{name:"private",op:18,type:["number","offset"],value:[0,0]},{name:"ros",op:1230,type:["SID","SID","number"]},{name:"cidFontVersion",op:1231,type:"number",value:0},{name:"cidFontRevision",op:1232,type:"number",value:0},{name:"cidFontType",op:1233,type:"number",value:0},{name:"cidCount",op:1234,type:"number",value:8720},{name:"uidBase",op:1235,type:"number"},{name:"fdArray",op:1236,type:"offset"},{name:"fdSelect",op:1237,type:"offset"},{name:"fontName",op:1238,type:"SID"}],e1=[{name:"subrs",op:19,type:"offset",value:0},{name:"defaultWidthX",op:20,type:"number",value:0},{name:"nominalWidthX",op:21,type:"number",value:0}];// The top dictionary contains the essential metadata for the font, together with the private dictionary.
function e2(t,r){return eQ(eK(t,0,t.byteLength),e0,r)}// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.
function e5(t,r,n,o){return eQ(eK(t,r,n),e1,o)}// Returns a list of "Top DICT"s found using an INDEX list.
// Used to read both the usual high-level Top DICTs and also the FDArray
// discovered inside CID-keyed fonts.  When a Top DICT has a reference to
// a Private DICT that is read and saved into the Top DICT.
//
// In addition to the expected/optional values as outlined in TOP_DICT_META
// the following values might be saved into the Top DICT.
//
//    _subrs []        array of local CFF subroutines from Private DICT
//    _subrsBias       bias value computed from number of subroutines
//                      (see calcCFFSubroutineBias() and parseCFFCharstring())
//    _defaultWidthX   default widths for CFF characters
//    _nominalWidthX   bias added to width embedded within glyph description
//
//    _privateDict     saved copy of parsed Private DICT from Top DICT
function e3(t,r,n,o){for(var a=[],s=0;s<n.length;s+=1){var l=e2(new DataView(new Uint8Array(n[s]).buffer),o);l._subrs=[],l._subrsBias=0;var c=l.private[0],u=l.private[1];if(0!==c&&0!==u){var p=e5(t,u+r,c,o);if(l._defaultWidthX=p.defaultWidthX,l._nominalWidthX=p.nominalWidthX,0!==p.subrs){var d=eq(t,u+p.subrs+r);l._subrs=d.objects,l._subrsBias=eW(l._subrs)}l._privateDict=p}a.push(l)}return a}// Parse the CFF charset table, which contains internal names for all the glyphs.
// This function will return a list of glyph names.
// See Adobe TN #5176 chapter 13, "Charsets".
function e4(t,r,n,o){var a,s,l=new e_.Parser(t,r);// The .notdef glyph is not included, so subtract 1.
n-=1;var c=[".notdef"],u=l.parseCard8();if(0===u)for(var p=0;p<n;p+=1)a=l.parseSID(),c.push(eJ(o,a));else if(1===u)for(;c.length<=n;){a=l.parseSID(),s=l.parseCard8();for(var d=0;d<=s;d+=1)c.push(eJ(o,a)),a+=1}else if(2===u)for(;c.length<=n;){a=l.parseSID(),s=l.parseCard16();for(var m=0;m<=s;m+=1)c.push(eJ(o,a)),a+=1}else throw Error("Unknown charset format "+u);return c}// Parse the CFF encoding data. Only one encoding can be specified per font.
// See Adobe TN #5176 chapter 12, "Encodings".
function e8(t,r,n){var o,a={},s=new e_.Parser(t,r),l=s.parseCard8();if(0===l)for(var c=s.parseCard8(),u=0;u<c;u+=1)a[o=s.parseCard8()]=u;else if(1===l){var p=s.parseCard8();o=1;for(var d=0;d<p;d+=1)for(var m=s.parseCard8(),f=s.parseCard8(),h=m;h<=m+f;h+=1)a[h]=o,o+=1}else throw Error("Unknown encoding format "+l);return new eI(a,n)}// Take in charstring code and return a Glyph object.
// The encoding is described in the Type 2 Charstring Format
// https://www.microsoft.com/typography/OTSPEC/charstr2.htm
function e6(t,r,n){var o,a,s,l,c,u,p,d,m=new F,f=[],h=0,y=!1,g=!1,v=0,b=0;if(t.isCIDFont){var x=t.tables.cff.topDict._fdSelect[r.index],j=t.tables.cff.topDict._fdArray[x];c=j._subrs,u=j._subrsBias,p=j._defaultWidthX,d=j._nominalWidthX}else c=t.tables.cff.topDict._subrs,u=t.tables.cff.topDict._subrsBias,p=t.tables.cff.topDict._defaultWidthX,d=t.tables.cff.topDict._nominalWidthX;var w=p;function _(t,r){g&&m.closePath(),m.moveTo(t,r),g=!0}function S(){f.length%2==0||y||(w=f.shift()+d),h+=f.length>>1,f.length=0,y=!0}function E(n){for(var p,x,j,T,M,C,O,N,A,R,L,I,P=0;P<n.length;){var D=n[P];switch(P+=1,D){case 1:case 3:case 18:case 23:// hstem
S();break;case 4:f.length>1&&!y&&(w=f.shift()+d,y=!0),b+=f.pop(),_(v,b);break;case 5:// rlineto
for(;f.length>0;)v+=f.shift(),b+=f.shift(),m.lineTo(v,b);break;case 6:// hlineto
for(;f.length>0&&(v+=f.shift(),m.lineTo(v,b),0!==f.length);)b+=f.shift(),m.lineTo(v,b);break;case 7:// vlineto
for(;f.length>0&&(b+=f.shift(),m.lineTo(v,b),0!==f.length);)v+=f.shift(),m.lineTo(v,b);break;case 8:// rrcurveto
for(;f.length>0;)o=v+f.shift(),a=b+f.shift(),s=o+f.shift(),l=a+f.shift(),v=s+f.shift(),b=l+f.shift(),m.curveTo(o,a,s,l,v,b);break;case 10:(C=c[// callsubr
M=f.pop()+u])&&E(C);break;case 11:// return
return;case 12:switch(// flex operators
D=n[P],P+=1,D){case 35:// flex
// |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-
o=v+f.shift(),a=b+f.shift(),s=o+f.shift(),l=a+f.shift(),O=s+f.shift(),N=l+f.shift(),A=O+f.shift(),R=N+f.shift(),L=A+f.shift(),I=R+f.shift(),v=L+f.shift(),b=I+f.shift(),f.shift(),m.curveTo(o,a,s,l,O,N),m.curveTo(A,R,L,I,v,b);break;case 34:// hflex
// |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-
o=v+f.shift(),a=b,s=o+f.shift(),l=a+f.shift(),O=s+f.shift(),N=l,A=O+f.shift(),R=l,L=A+f.shift(),I=b,v=L+f.shift(),m.curveTo(o,a,s,l,O,N),m.curveTo(A,R,L,I,v,b);break;case 36:// hflex1
// |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-
o=v+f.shift(),a=b+f.shift(),s=o+f.shift(),l=a+f.shift(),O=s+f.shift(),N=l,A=O+f.shift(),R=l,L=A+f.shift(),I=R+f.shift(),v=L+f.shift(),m.curveTo(o,a,s,l,O,N),m.curveTo(A,R,L,I,v,b);break;case 37:// flex1
// |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-
o=v+f.shift(),a=b+f.shift(),s=o+f.shift(),l=a+f.shift(),O=s+f.shift(),N=l+f.shift(),A=O+f.shift(),R=N+f.shift(),L=A+f.shift(),I=R+f.shift(),Math.abs(L-v)>Math.abs(I-b)?v=L+f.shift():b=I+f.shift(),m.curveTo(o,a,s,l,O,N),m.curveTo(A,R,L,I,v,b);break;default:console.log("Glyph "+r.index+": unknown operator 1200"+D),f.length=0}break;case 14:f.length>0&&!y&&(w=f.shift()+d,y=!0),g&&(m.closePath(),g=!1);break;case 19:case 20:// cntrmask
S(),P+=h+7>>3;break;case 21:f.length>2&&!y&&(w=f.shift()+d,y=!0),b+=f.pop(),_(v+=f.pop(),b);break;case 22:f.length>1&&!y&&(w=f.shift()+d,y=!0),_(v+=f.pop(),b);break;case 24:// rcurveline
for(;f.length>2;)o=v+f.shift(),a=b+f.shift(),s=o+f.shift(),l=a+f.shift(),v=s+f.shift(),b=l+f.shift(),m.curveTo(o,a,s,l,v,b);v+=f.shift(),b+=f.shift(),m.lineTo(v,b);break;case 25:// rlinecurve
for(;f.length>6;)v+=f.shift(),b+=f.shift(),m.lineTo(v,b);o=v+f.shift(),a=b+f.shift(),s=o+f.shift(),l=a+f.shift(),v=s+f.shift(),b=l+f.shift(),m.curveTo(o,a,s,l,v,b);break;case 26:for(f.length%2&&(v+=f.shift());f.length>0;)o=v,a=b+f.shift(),s=o+f.shift(),l=a+f.shift(),v=s,b=l+f.shift(),m.curveTo(o,a,s,l,v,b);break;case 27:for(f.length%2&&(b+=f.shift());f.length>0;)o=v+f.shift(),a=b,s=o+f.shift(),l=a+f.shift(),v=s+f.shift(),b=l,m.curveTo(o,a,s,l,v,b);break;case 28:// shortint
p=n[P],x=n[P+1],f.push((p<<24|x<<16)>>16),P+=2;break;case 29:// callgsubr
M=f.pop()+t.gsubrsBias,(C=t.gsubrs[M])&&E(C);break;case 30:// vhcurveto
for(;f.length>0&&(o=v,a=b+f.shift(),s=o+f.shift(),l=a+f.shift(),v=s+f.shift(),b=l+(1===f.length?f.shift():0),m.curveTo(o,a,s,l,v,b),0!==f.length);)o=v+f.shift(),a=b,s=o+f.shift(),b=(l=a+f.shift())+f.shift(),v=s+(1===f.length?f.shift():0),m.curveTo(o,a,s,l,v,b);break;case 31:// hvcurveto
for(;f.length>0&&(o=v+f.shift(),a=b,s=o+f.shift(),b=(l=a+f.shift())+f.shift(),v=s+(1===f.length?f.shift():0),m.curveTo(o,a,s,l,v,b),0!==f.length);)o=v,a=b+f.shift(),s=o+f.shift(),l=a+f.shift(),v=s+f.shift(),b=l+(1===f.length?f.shift():0),m.curveTo(o,a,s,l,v,b);break;default:D<32?console.log("Glyph "+r.index+": unknown operator "+D):D<247?f.push(D-139):D<251?(p=n[P],P+=1,f.push((D-247)*256+p+108)):D<255?(p=n[P],P+=1,f.push(-(256*(D-251))-p-108)):(p=n[P],x=n[P+1],j=n[P+2],T=n[P+3],P+=4,f.push((p<<24|x<<16|j<<8|T)/65536))}}}return E(n),r.advanceWidth=w,m}function e9(t,r,n,o){var a=[],s=new e_.Parser(t,r),l=s.parseCard8();if(0===l)for(var c=0;c<n;c++){if((u=s.parseCard8())>=o)throw Error("CFF table CID Font FDSelect has bad FD index value "+u+" (FD count "+o+")");a.push(u)}else if(3===l){// Ranges
var u,p,d=s.parseCard16(),m=s.parseCard16();if(0!==m)throw Error("CFF Table CID Font FDSelect format 3 range has bad initial GID "+m);for(var f=0;f<d;f++){if(u=s.parseCard8(),p=s.parseCard16(),u>=o)throw Error("CFF table CID Font FDSelect has bad FD index value "+u+" (FD count "+o+")");if(p>n)throw Error("CFF Table CID Font FDSelect format 3 range has bad GID "+p);for(;m<p;m++)a.push(u);m=p}if(p!==n)throw Error("CFF Table CID Font FDSelect format 3 range has bad final GID "+p)}else throw Error("CFF Table CID Font FDSelect table has unsupported format "+l);return a}// Parse the `CFF` table, which contains the glyph outlines in PostScript format.
// The list of strings is modified in place.
function e7(t,r){var n,o=eC.indexOf(t);return o>=0&&(n=o),// Is the string already in the string index?
(o=r.indexOf(t))>=0?n=o+eC.length:(n=eC.length+r.length,r.push(t)),n}function te(){return new eu.Record("Header",[{name:"major",type:"Card8",value:1},{name:"minor",type:"Card8",value:0},{name:"hdrSize",type:"Card8",value:4},{name:"major",type:"Card8",value:1}])}function tt(t){var r=new eu.Record("Name INDEX",[{name:"names",type:"INDEX",value:[]}]);r.names=[];for(var n=0;n<t.length;n+=1)r.names.push({name:"name_"+n,type:"NAME",value:t[n]});return r}// Given a dictionary's metadata, create a DICT structure.
function tr(t,r,n){for(var o={},a=0;a<t.length;a+=1){var s=t[a],l=r[s.name];void 0===l||eH(l,s.value)||("SID"===s.type&&(l=e7(l,n)),o[s.op]={name:s.name,type:s.type,value:l})}return o}// The Top DICT houses the global font attributes.
function tn(t,r){var n=new eu.Record("Top DICT",[{name:"dict",type:"DICT",value:{}}]);return n.dict=tr(e0,t,r),n}function to(t){var r=new eu.Record("Top DICT INDEX",[{name:"topDicts",type:"INDEX",value:[]}]);return r.topDicts=[{name:"topDict_0",type:"TABLE",value:t}],r}function ta(t){var r=new eu.Record("String INDEX",[{name:"strings",type:"INDEX",value:[]}]);r.strings=[];for(var n=0;n<t.length;n+=1)r.strings.push({name:"string_"+n,type:"STRING",value:t[n]});return r}function ts(){// Currently we don't use subroutines.
return new eu.Record("Global Subr INDEX",[{name:"subrs",type:"INDEX",value:[]}])}function ti(t,r){for(var n=new eu.Record("Charsets",[{name:"format",type:"Card8",value:0}]),o=0;o<t.length;o+=1){var a=e7(t[o],r);n.fields.push({name:"glyph_"+o,type:"SID",value:a})}return n}function tl(t){var r=[],n=t.path;r.push({name:"width",type:"NUMBER",value:t.advanceWidth});for(var o=0,a=0,s=0;s<n.commands.length;s+=1){var l=void 0,c=void 0,u=n.commands[s];if("Q"===u.type){// CFF only supports bézier curves, so convert the quad to a bézier.
var p=1/3,d=2/3;u={type:"C",x:u.x,y:u.y,x1:p*o+d*u.x1,y1:p*a+d*u.y1,x2:p*u.x+d*u.x1,y2:p*u.y+d*u.y1}}if("M"===u.type)l=Math.round(u.x-o),c=Math.round(u.y-a),r.push({name:"dx",type:"NUMBER",value:l}),r.push({name:"dy",type:"NUMBER",value:c}),r.push({name:"rmoveto",type:"OP",value:21}),o=Math.round(u.x),a=Math.round(u.y);else if("L"===u.type)l=Math.round(u.x-o),c=Math.round(u.y-a),r.push({name:"dx",type:"NUMBER",value:l}),r.push({name:"dy",type:"NUMBER",value:c}),r.push({name:"rlineto",type:"OP",value:5}),o=Math.round(u.x),a=Math.round(u.y);else if("C"===u.type){var m=Math.round(u.x1-o),f=Math.round(u.y1-a),h=Math.round(u.x2-u.x1),y=Math.round(u.y2-u.y1);l=Math.round(u.x-u.x2),c=Math.round(u.y-u.y2),r.push({name:"dx1",type:"NUMBER",value:m}),r.push({name:"dy1",type:"NUMBER",value:f}),r.push({name:"dx2",type:"NUMBER",value:h}),r.push({name:"dy2",type:"NUMBER",value:y}),r.push({name:"dx",type:"NUMBER",value:l}),r.push({name:"dy",type:"NUMBER",value:c}),r.push({name:"rrcurveto",type:"OP",value:8}),o=Math.round(u.x),a=Math.round(u.y)}// Contours are closed automatically.
}return r.push({name:"endchar",type:"OP",value:14}),r}function tc(t){for(var r=new eu.Record("CharStrings INDEX",[{name:"charStrings",type:"INDEX",value:[]}]),n=0;n<t.length;n+=1){var o=t.get(n),a=tl(o);r.charStrings.push({name:o.name,type:"CHARSTRING",value:a})}return r}function tu(t,r){var n=new eu.Record("Private DICT",[{name:"dict",type:"DICT",value:{}}]);return n.dict=tr(e1,t,r),n}var tp={parse:function(t,r,n){n.tables.cff={};var o=e$(t,r),a=eq(t,o.endOffset,e_.bytesToString),s=eq(t,a.endOffset),l=eq(t,s.endOffset,e_.bytesToString),c=eq(t,l.endOffset);n.gsubrs=c.objects,n.gsubrsBias=eW(n.gsubrs);var u=e3(t,r,s.objects,l.objects);if(1!==u.length)throw Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = "+u.length);var p=u[0];if(n.tables.cff.topDict=p,p._privateDict&&(n.defaultWidthX=p._privateDict.defaultWidthX,n.nominalWidthX=p._privateDict.nominalWidthX),void 0!==p.ros[0]&&void 0!==p.ros[1]&&(n.isCIDFont=!0),n.isCIDFont){var d=p.fdArray,m=p.fdSelect;if(0===d||0===m)throw Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");var f=eq(t,d+=r),h=e3(t,r,f.objects,l.objects);p._fdArray=h,m+=r,p._fdSelect=e9(t,m,n.numGlyphs,h.length)}var y=r+p.private[1],g=e5(t,y,p.private[0],l.objects);if(n.defaultWidthX=g.defaultWidthX,n.nominalWidthX=g.nominalWidthX,0!==g.subrs){var v=eq(t,y+g.subrs);n.subrs=v.objects,n.subrsBias=eW(n.subrs)}else n.subrs=[],n.subrsBias=0;// Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.
var b=eq(t,r+p.charStrings);n.nGlyphs=b.objects.length;var x=e4(t,r+p.charset,n.nGlyphs,l.objects);0===p.encoding?n.cffEncoding=new eI(eO,x):1===p.encoding?n.cffEncoding=new eI(eN,x):n.cffEncoding=e8(t,r+p.encoding,x),// Prefer the CMAP encoding to the CFF encoding.
n.encoding=n.encoding||n.cffEncoding,n.glyphs=new ez.GlyphSet(n);for(var j=0;j<n.nGlyphs;j+=1){var w=b.objects[j];n.glyphs.push(j,ez.cffGlyphLoader(n,j,e6,w))}}// Convert a string to a String ID (SID).
,make:function(t,r){for(var n,o=new eu.Table("CFF ",[{name:"header",type:"RECORD"},{name:"nameIndex",type:"RECORD"},{name:"topDictIndex",type:"RECORD"},{name:"stringIndex",type:"RECORD"},{name:"globalSubrIndex",type:"RECORD"},{name:"charsets",type:"RECORD"},{name:"charStringsIndex",type:"RECORD"},{name:"privateDict",type:"RECORD"}]),a=1/r.unitsPerEm,s={version:r.version,fullName:r.fullName,familyName:r.familyName,weight:r.weightName,fontBBox:r.fontBBox||[0,0,0,0],fontMatrix:[a,0,0,a,0,0],charset:999,encoding:0,charStrings:999,private:[0,999]},l={},c=[],u=1;u<t.length;u+=1)n=t.get(u),c.push(n.name);var p=[];o.header=te(),o.nameIndex=tt([r.postScriptName]);var d=tn(s,p);o.topDictIndex=to(d),o.globalSubrIndex=ts(),o.charsets=ti(c,p),o.charStringsIndex=tc(t),o.privateDict=tu(l,p),o.stringIndex=ta(p);var m=o.header.sizeOf()+o.nameIndex.sizeOf()+o.topDictIndex.sizeOf()+o.stringIndex.sizeOf()+o.globalSubrIndex.sizeOf();return s.charset=m,s.encoding=0,s.charStrings=s.charset+o.charsets.sizeOf(),s.private[1]=s.charStrings+o.charStringsIndex.sizeOf(),d=tn(s,p),o.topDictIndex=to(d),o}},td={parse:// Parse the header `head` table
function(t,r){var n={},o=new e_.Parser(t,r);return n.version=o.parseVersion(),n.fontRevision=Math.round(1e3*o.parseFixed())/1e3,n.checkSumAdjustment=o.parseULong(),n.magicNumber=o.parseULong(),G.argument(1594834165===n.magicNumber,"Font header has wrong magic number."),n.flags=o.parseUShort(),n.unitsPerEm=o.parseUShort(),n.created=o.parseLongDateTime(),n.modified=o.parseLongDateTime(),n.xMin=o.parseShort(),n.yMin=o.parseShort(),n.xMax=o.parseShort(),n.yMax=o.parseShort(),n.macStyle=o.parseUShort(),n.lowestRecPPEM=o.parseUShort(),n.fontDirectionHint=o.parseShort(),n.indexToLocFormat=o.parseShort(),n.glyphDataFormat=o.parseShort(),n},make:function(t){// Apple Mac timestamp epoch is 01/01/1904 not 01/01/1970
var r=Math.round(new Date().getTime()/1e3)+2082844800,n=r;return t.createdTimestamp&&(n=t.createdTimestamp+2082844800),new eu.Table("head",[{name:"version",type:"FIXED",value:65536},{name:"fontRevision",type:"FIXED",value:65536},{name:"checkSumAdjustment",type:"ULONG",value:0},{name:"magicNumber",type:"ULONG",value:1594834165},{name:"flags",type:"USHORT",value:0},{name:"unitsPerEm",type:"USHORT",value:1e3},{name:"created",type:"LONGDATETIME",value:n},{name:"modified",type:"LONGDATETIME",value:r},{name:"xMin",type:"SHORT",value:0},{name:"yMin",type:"SHORT",value:0},{name:"xMax",type:"SHORT",value:0},{name:"yMax",type:"SHORT",value:0},{name:"macStyle",type:"USHORT",value:0},{name:"lowestRecPPEM",type:"USHORT",value:0},{name:"fontDirectionHint",type:"SHORT",value:2},{name:"indexToLocFormat",type:"SHORT",value:0},{name:"glyphDataFormat",type:"SHORT",value:0}],t)}},tm={parse:// Parse the horizontal header `hhea` table
function(t,r){var n={},o=new e_.Parser(t,r);return n.version=o.parseVersion(),n.ascender=o.parseShort(),n.descender=o.parseShort(),n.lineGap=o.parseShort(),n.advanceWidthMax=o.parseUShort(),n.minLeftSideBearing=o.parseShort(),n.minRightSideBearing=o.parseShort(),n.xMaxExtent=o.parseShort(),n.caretSlopeRise=o.parseShort(),n.caretSlopeRun=o.parseShort(),n.caretOffset=o.parseShort(),o.relativeOffset+=8,n.metricDataFormat=o.parseShort(),n.numberOfHMetrics=o.parseUShort(),n},make:function(t){return new eu.Table("hhea",[{name:"version",type:"FIXED",value:65536},{name:"ascender",type:"FWORD",value:0},{name:"descender",type:"FWORD",value:0},{name:"lineGap",type:"FWORD",value:0},{name:"advanceWidthMax",type:"UFWORD",value:0},{name:"minLeftSideBearing",type:"FWORD",value:0},{name:"minRightSideBearing",type:"FWORD",value:0},{name:"xMaxExtent",type:"FWORD",value:0},{name:"caretSlopeRise",type:"SHORT",value:1},{name:"caretSlopeRun",type:"SHORT",value:0},{name:"caretOffset",type:"SHORT",value:0},{name:"reserved1",type:"SHORT",value:0},{name:"reserved2",type:"SHORT",value:0},{name:"reserved3",type:"SHORT",value:0},{name:"reserved4",type:"SHORT",value:0},{name:"metricDataFormat",type:"SHORT",value:0},{name:"numberOfHMetrics",type:"USHORT",value:0}],t)}},tf={parse:// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.
// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.
function(t,r,n,o,a){for(var s,l,c=new e_.Parser(t,r),u=0;u<o;u+=1){u<n&&(s=c.parseUShort(),l=c.parseShort());var p=a.get(u);p.advanceWidth=s,p.leftSideBearing=l}},make:function(t){for(var r=new eu.Table("hmtx",[]),n=0;n<t.length;n+=1){var o=t.get(n),a=o.advanceWidth||0,s=o.leftSideBearing||0;r.fields.push({name:"advanceWidth_"+n,type:"USHORT",value:a}),r.fields.push({name:"leftSideBearing_"+n,type:"SHORT",value:s})}return r}},th={make:function(t){for(var r=new eu.Table("ltag",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"numTags",type:"ULONG",value:t.length}]),n="",o=12+4*t.length,a=0;a<t.length;++a){var s=n.indexOf(t[a]);s<0&&(s=n.length,n+=t[a]),r.fields.push({name:"offset "+a,type:"USHORT",value:o+s}),r.fields.push({name:"length "+a,type:"USHORT",value:t[a].length})}return r.fields.push({name:"stringPool",type:"CHARARRAY",value:n}),r},parse:function(t,r){var n=new e_.Parser(t,r),o=n.parseULong();G.argument(1===o,"Unsupported ltag table version."),n.skip("uLong",1);for(var a=n.parseULong(),s=[],l=0;l<a;l++){for(var c="",u=r+n.parseUShort(),p=n.parseUShort(),d=u;d<u+p;++d)c+=String.fromCharCode(t.getInt8(d));s.push(c)}return s}},ty={parse:// Parse the maximum profile `maxp` table.
function(t,r){var n={},o=new e_.Parser(t,r);return n.version=o.parseVersion(),n.numGlyphs=o.parseUShort(),1===n.version&&(n.maxPoints=o.parseUShort(),n.maxContours=o.parseUShort(),n.maxCompositePoints=o.parseUShort(),n.maxCompositeContours=o.parseUShort(),n.maxZones=o.parseUShort(),n.maxTwilightPoints=o.parseUShort(),n.maxStorage=o.parseUShort(),n.maxFunctionDefs=o.parseUShort(),n.maxInstructionDefs=o.parseUShort(),n.maxStackElements=o.parseUShort(),n.maxSizeOfInstructions=o.parseUShort(),n.maxComponentElements=o.parseUShort(),n.maxComponentDepth=o.parseUShort()),n},make:function(t){return new eu.Table("maxp",[{name:"version",type:"FIXED",value:20480},{name:"numGlyphs",type:"USHORT",value:t}])}},tg=["copyright","fontFamily","fontSubfamily","uniqueID","fullName","version","postScriptName","trademark","manufacturer","designer","description","manufacturerURL","designerURL","license","licenseURL","reserved","preferredFamily","preferredSubfamily","compatibleFullName","sampleText","postScriptFindFontName","wwsFamily","wwsSubfamily"// 22
],tv={0:"en",1:"fr",2:"de",3:"it",4:"nl",5:"sv",6:"es",7:"da",8:"pt",9:"no",10:"he",11:"ja",12:"ar",13:"fi",14:"el",15:"is",16:"mt",17:"tr",18:"hr",19:"zh-Hant",20:"ur",21:"hi",22:"th",23:"ko",24:"lt",25:"pl",26:"hu",27:"es",28:"lv",29:"se",30:"fo",31:"fa",32:"ru",33:"zh",34:"nl-BE",35:"ga",36:"sq",37:"ro",38:"cz",39:"sk",40:"si",41:"yi",42:"sr",43:"mk",44:"bg",45:"uk",46:"be",47:"uz",48:"kk",49:"az-Cyrl",50:"az-Arab",51:"hy",52:"ka",53:"mo",54:"ky",55:"tg",56:"tk",57:"mn-CN",58:"mn",59:"ps",60:"ks",61:"ku",62:"sd",63:"bo",64:"ne",65:"sa",66:"mr",67:"bn",68:"as",69:"gu",70:"pa",71:"or",72:"ml",73:"kn",74:"ta",75:"te",76:"si",77:"my",78:"km",79:"lo",80:"vi",81:"id",82:"tl",83:"ms",84:"ms-Arab",85:"am",86:"ti",87:"om",88:"so",89:"sw",90:"rw",91:"rn",92:"ny",93:"mg",94:"eo",128:"cy",129:"eu",130:"ca",131:"la",132:"qu",133:"gn",134:"ay",135:"tt",136:"ug",137:"dz",138:"jv",139:"su",140:"gl",141:"af",142:"br",143:"iu",144:"gd",145:"gv",146:"ga",147:"to",148:"el-polyton",149:"kl",150:"az",151:"nn"},tb={0:0,// langEnglish → smRoman
1:0,// langFrench → smRoman
2:0,// langGerman → smRoman
3:0,// langItalian → smRoman
4:0,// langDutch → smRoman
5:0,// langSwedish → smRoman
6:0,// langSpanish → smRoman
7:0,// langDanish → smRoman
8:0,// langPortuguese → smRoman
9:0,// langNorwegian → smRoman
10:5,// langHebrew → smHebrew
11:1,// langJapanese → smJapanese
12:4,// langArabic → smArabic
13:0,// langFinnish → smRoman
14:6,// langGreek → smGreek
15:0,// langIcelandic → smRoman (modified)
16:0,// langMaltese → smRoman
17:0,// langTurkish → smRoman (modified)
18:0,// langCroatian → smRoman (modified)
19:2,// langTradChinese → smTradChinese
20:4,// langUrdu → smArabic
21:9,// langHindi → smDevanagari
22:21,// langThai → smThai
23:3,// langKorean → smKorean
24:29,// langLithuanian → smCentralEuroRoman
25:29,// langPolish → smCentralEuroRoman
26:29,// langHungarian → smCentralEuroRoman
27:29,// langEstonian → smCentralEuroRoman
28:29,// langLatvian → smCentralEuroRoman
29:0,// langSami → smRoman
30:0,// langFaroese → smRoman (modified)
31:4,// langFarsi → smArabic (modified)
32:7,// langRussian → smCyrillic
33:25,// langSimpChinese → smSimpChinese
34:0,// langFlemish → smRoman
35:0,// langIrishGaelic → smRoman (modified)
36:0,// langAlbanian → smRoman
37:0,// langRomanian → smRoman (modified)
38:29,// langCzech → smCentralEuroRoman
39:29,// langSlovak → smCentralEuroRoman
40:0,// langSlovenian → smRoman (modified)
41:5,// langYiddish → smHebrew
42:7,// langSerbian → smCyrillic
43:7,// langMacedonian → smCyrillic
44:7,// langBulgarian → smCyrillic
45:7,// langUkrainian → smCyrillic (modified)
46:7,// langByelorussian → smCyrillic
47:7,// langUzbek → smCyrillic
48:7,// langKazakh → smCyrillic
49:7,// langAzerbaijani → smCyrillic
50:4,// langAzerbaijanAr → smArabic
51:24,// langArmenian → smArmenian
52:23,// langGeorgian → smGeorgian
53:7,// langMoldavian → smCyrillic
54:7,// langKirghiz → smCyrillic
55:7,// langTajiki → smCyrillic
56:7,// langTurkmen → smCyrillic
57:27,// langMongolian → smMongolian
58:7,// langMongolianCyr → smCyrillic
59:4,// langPashto → smArabic
60:4,// langKurdish → smArabic
61:4,// langKashmiri → smArabic
62:4,// langSindhi → smArabic
63:26,// langTibetan → smTibetan
64:9,// langNepali → smDevanagari
65:9,// langSanskrit → smDevanagari
66:9,// langMarathi → smDevanagari
67:13,// langBengali → smBengali
68:13,// langAssamese → smBengali
69:11,// langGujarati → smGujarati
70:10,// langPunjabi → smGurmukhi
71:12,// langOriya → smOriya
72:17,// langMalayalam → smMalayalam
73:16,// langKannada → smKannada
74:14,// langTamil → smTamil
75:15,// langTelugu → smTelugu
76:18,// langSinhalese → smSinhalese
77:19,// langBurmese → smBurmese
78:20,// langKhmer → smKhmer
79:22,// langLao → smLao
80:30,// langVietnamese → smVietnamese
81:0,// langIndonesian → smRoman
82:0,// langTagalog → smRoman
83:0,// langMalayRoman → smRoman
84:4,// langMalayArabic → smArabic
85:28,// langAmharic → smEthiopic
86:28,// langTigrinya → smEthiopic
87:28,// langOromo → smEthiopic
88:0,// langSomali → smRoman
89:0,// langSwahili → smRoman
90:0,// langKinyarwanda → smRoman
91:0,// langRundi → smRoman
92:0,// langNyanja → smRoman
93:0,// langMalagasy → smRoman
94:0,// langEsperanto → smRoman
128:0,// langWelsh → smRoman (modified)
129:0,// langBasque → smRoman
130:0,// langCatalan → smRoman
131:0,// langLatin → smRoman
132:0,// langQuechua → smRoman
133:0,// langGuarani → smRoman
134:0,// langAymara → smRoman
135:7,// langTatar → smCyrillic
136:4,// langUighur → smArabic
137:26,// langDzongkha → smTibetan
138:0,// langJavaneseRom → smRoman
139:0,// langSundaneseRom → smRoman
140:0,// langGalician → smRoman
141:0,// langAfrikaans → smRoman
142:0,// langBreton → smRoman (modified)
143:28,// langInuktitut → smEthiopic (modified)
144:0,// langScottishGaelic → smRoman (modified)
145:0,// langManxGaelic → smRoman (modified)
146:0,// langIrishGaelicScript → smRoman (modified)
147:0,// langTongan → smRoman
148:6,// langGreekAncient → smRoman
149:0,// langGreenlandic → smRoman
150:0,// langAzerbaijanRoman → smRoman
151:0// langNynorsk → smRoman
},tx={1078:"af",1052:"sq",1156:"gsw",1118:"am",5121:"ar-DZ",15361:"ar-BH",3073:"ar",2049:"ar-IQ",11265:"ar-JO",13313:"ar-KW",12289:"ar-LB",4097:"ar-LY",6145:"ary",8193:"ar-OM",16385:"ar-QA",1025:"ar-SA",10241:"ar-SY",7169:"aeb",14337:"ar-AE",9217:"ar-YE",1067:"hy",1101:"as",2092:"az-Cyrl",1068:"az",1133:"ba",1069:"eu",1059:"be",2117:"bn",1093:"bn-IN",8218:"bs-Cyrl",5146:"bs",1150:"br",1026:"bg",1027:"ca",3076:"zh-HK",5124:"zh-MO",2052:"zh",4100:"zh-SG",1028:"zh-TW",1155:"co",1050:"hr",4122:"hr-BA",1029:"cs",1030:"da",1164:"prs",1125:"dv",2067:"nl-BE",1043:"nl",3081:"en-AU",10249:"en-BZ",4105:"en-CA",9225:"en-029",16393:"en-IN",6153:"en-IE",8201:"en-JM",17417:"en-MY",5129:"en-NZ",13321:"en-PH",18441:"en-SG",7177:"en-ZA",11273:"en-TT",2057:"en-GB",1033:"en",12297:"en-ZW",1061:"et",1080:"fo",1124:"fil",1035:"fi",2060:"fr-BE",3084:"fr-CA",1036:"fr",5132:"fr-LU",6156:"fr-MC",4108:"fr-CH",1122:"fy",1110:"gl",1079:"ka",3079:"de-AT",1031:"de",5127:"de-LI",4103:"de-LU",2055:"de-CH",1032:"el",1135:"kl",1095:"gu",1128:"ha",1037:"he",1081:"hi",1038:"hu",1039:"is",1136:"ig",1057:"id",1117:"iu",2141:"iu-Latn",2108:"ga",1076:"xh",1077:"zu",1040:"it",2064:"it-CH",1041:"ja",1099:"kn",1087:"kk",1107:"km",1158:"quc",1159:"rw",1089:"sw",1111:"kok",1042:"ko",1088:"ky",1108:"lo",1062:"lv",1063:"lt",2094:"dsb",1134:"lb",1071:"mk",2110:"ms-BN",1086:"ms",1100:"ml",1082:"mt",1153:"mi",1146:"arn",1102:"mr",1148:"moh",1104:"mn",2128:"mn-CN",1121:"ne",1044:"nb",2068:"nn",1154:"oc",1096:"or",1123:"ps",1045:"pl",1046:"pt",2070:"pt-PT",1094:"pa",1131:"qu-BO",2155:"qu-EC",3179:"qu",1048:"ro",1047:"rm",1049:"ru",9275:"smn",4155:"smj-NO",5179:"smj",3131:"se-FI",1083:"se",2107:"se-SE",8251:"sms",6203:"sma-NO",7227:"sms",1103:"sa",7194:"sr-Cyrl-BA",3098:"sr",6170:"sr-Latn-BA",2074:"sr-Latn",1132:"nso",1074:"tn",1115:"si",1051:"sk",1060:"sl",11274:"es-AR",16394:"es-BO",13322:"es-CL",9226:"es-CO",5130:"es-CR",7178:"es-DO",12298:"es-EC",17418:"es-SV",4106:"es-GT",18442:"es-HN",2058:"es-MX",19466:"es-NI",6154:"es-PA",15370:"es-PY",10250:"es-PE",20490:"es-PR",// Microsoft has defined two different language codes for
// “Spanish with modern sorting” and “Spanish with traditional
// sorting”. This makes sense for collation APIs, and it would be
// possible to express this in BCP 47 language tags via Unicode
// extensions (eg., es-u-co-trad is Spanish with traditional
// sorting). However, for storing names in fonts, the distinction
// does not make sense, so we give “es” in both cases.
3082:"es",1034:"es",21514:"es-US",14346:"es-UY",8202:"es-VE",2077:"sv-FI",1053:"sv",1114:"syr",1064:"tg",2143:"tzm",1097:"ta",1092:"tt",1098:"te",1054:"th",1105:"bo",1055:"tr",1090:"tk",1152:"ug",1058:"uk",1070:"hsb",1056:"ur",2115:"uz-Cyrl",1091:"uz",1066:"vi",1106:"cy",1160:"wo",1157:"sah",1144:"ii",1130:"yo"};// The `head` table contains global information about the font.
// for 'Chinese in the traditional script'.
function tj(t,r,n){switch(t){case 0:// Unicode
if(65535===r)return"und";if(n)return n[r];break;case 1:// Macintosh
return tv[r];case 3:// Windows
return tx[r]}}var tw="utf-16",t_={0:"macintosh",// smRoman
1:"x-mac-japanese",// smJapanese
2:"x-mac-chinesetrad",// smTradChinese
3:"x-mac-korean",// smKorean
6:"x-mac-greek",// smGreek
7:"x-mac-cyrillic",// smCyrillic
9:"x-mac-devanagai",// smDevanagari
10:"x-mac-gurmukhi",// smGurmukhi
11:"x-mac-gujarati",// smGujarati
12:"x-mac-oriya",// smOriya
13:"x-mac-bengali",// smBengali
14:"x-mac-tamil",// smTamil
15:"x-mac-telugu",// smTelugu
16:"x-mac-kannada",// smKannada
17:"x-mac-malayalam",// smMalayalam
18:"x-mac-sinhalese",// smSinhalese
19:"x-mac-burmese",// smBurmese
20:"x-mac-khmer",// smKhmer
21:"x-mac-thai",// smThai
22:"x-mac-lao",// smLao
23:"x-mac-georgian",// smGeorgian
24:"x-mac-armenian",// smArmenian
25:"x-mac-chinesesimp",// smSimpChinese
26:"x-mac-tibetan",// smTibetan
27:"x-mac-mongolian",// smMongolian
28:"x-mac-ethiopic",// smEthiopic
29:"x-mac-ce",// smCentralEuroRoman
30:"x-mac-vietnamese",// smVietnamese
31:"x-mac-extarabic"// smExtArabic
},tS={15:"x-mac-icelandic",// langIcelandic
17:"x-mac-turkish",// langTurkish
18:"x-mac-croatian",// langCroatian
24:"x-mac-ce",// langLithuanian
25:"x-mac-ce",// langPolish
26:"x-mac-ce",// langHungarian
27:"x-mac-ce",// langEstonian
28:"x-mac-ce",// langLatvian
30:"x-mac-icelandic",// langFaroese
37:"x-mac-romanian",// langRomanian
38:"x-mac-ce",// langCzech
39:"x-mac-ce",// langSlovak
40:"x-mac-ce",// langSlovenian
143:"x-mac-inuit",// langInuktitut
146:"x-mac-gaelic"// langIrishGaelicScript
};// MacOS script ID → encoding. This table stores the default case,
function tE(t,r,n){switch(t){case 0:// Unicode
return tw;case 1:// Apple Macintosh
return tS[n]||t_[r];case 3:// Microsoft Windows
if(1===r||10===r)return tw}}// Parse the naming `name` table.
// ['bar', 'baz'] → {'bar': 0, 'baz': 1}
function tT(t){var r={};for(var n in t)r[t[n]]=parseInt(n);return r}function tk(t,r,n,o,a,s){return new eu.Record("NameRecord",[{name:"platformID",type:"USHORT",value:t},{name:"encodingID",type:"USHORT",value:r},{name:"languageID",type:"USHORT",value:n},{name:"nameID",type:"USHORT",value:o},{name:"length",type:"USHORT",value:a},{name:"offset",type:"USHORT",value:s}])}// Finds the position of needle in haystack, or -1 if not there.
// Like String.indexOf(), but for arrays.
function tM(t,r){var n=t.length,o=r.length-n+1;r:for(var a=0;a<o;a++)for(;a<o;a++){for(var s=0;s<n;s++)if(r[a+s]!==t[s])continue r;return a}return -1}function tC(t,r){var n=tM(t,r);if(n<0){n=r.length;for(var o=0,a=t.length;o<a;++o)r.push(t[o])}return n}var tO={parse:// FIXME: Format 1 additional fields are not supported yet.
// ltag is the content of the `ltag' table, such as ['en', 'zh-Hans', 'de-CH-1904'].
function(t,r,n){for(var o={},a=new e_.Parser(t,r),s=a.parseUShort(),l=a.parseUShort(),c=a.offset+a.parseUShort(),u=0;u<l;u++){var p=a.parseUShort(),d=a.parseUShort(),m=a.parseUShort(),f=a.parseUShort(),h=tg[f]||f,y=a.parseUShort(),g=a.parseUShort(),v=tj(p,m,n),b=tE(p,d,m);if(void 0!==b&&void 0!==v){var x=void 0;if(x=b===tw?H.UTF16(t,c+g,y):H.MACSTRING(t,c+g,y,b)){var j=o[h];void 0===j&&(j=o[h]={}),j[v]=x}}}var w=0;return 1===s&&(w=a.parseUShort()),o}// {23: 'foo'} → {'foo': 23}
,make:function(t,r){var n,o=[],a={},s=tT(tg);for(var l in t){var c=s[l];if(void 0===c&&(c=l),isNaN(n=parseInt(c)))throw Error('Name table entry "'+l+'" does not exist, see nameTableNames for complete list.');a[n]=t[l],o.push(n)}for(var u=tT(tv),p=tT(tx),d=[],m=[],f=0;f<o.length;f++){var h=a[n=o[f]];for(var y in h){var g=h[y],v=1,b=u[y],x=tb[b],j=tE(v,x,b),w=W.MACSTRING(g,j);// For MacOS, we try to emit the name in the form that was introduced
void 0===w&&(v=0,(b=r.indexOf(y))<0&&(b=r.length,r.push(y)),x=4,w=W.UTF16(g));var _=tC(w,m);d.push(tk(v,x,b,n,w.length,_));var S=p[y];if(void 0!==S){var E=W.UTF16(g),T=tC(E,m);d.push(tk(3,1,S,n,E.length,T))}}}d.sort(function(t,r){return t.platformID-r.platformID||t.encodingID-r.encodingID||t.languageID-r.languageID||t.nameID-r.nameID});for(var M=new eu.Table("name",[{name:"format",type:"USHORT",value:0},{name:"count",type:"USHORT",value:d.length},{name:"stringOffset",type:"USHORT",value:6+12*d.length}]),C=0;C<d.length;C++)M.fields.push({name:"record_"+C,type:"RECORD",value:d[C]});return M.fields.push({name:"strings",type:"LITERAL",value:m}),M}},tN=[{begin:0,end:127},{begin:128,end:255},{begin:256,end:383},{begin:384,end:591},{begin:592,end:687},{begin:688,end:767},{begin:768,end:879},{begin:880,end:1023},{begin:11392,end:11519},{begin:1024,end:1279},{begin:1328,end:1423},{begin:1424,end:1535},{begin:42240,end:42559},{begin:1536,end:1791},{begin:1984,end:2047},{begin:2304,end:2431},{begin:2432,end:2559},{begin:2560,end:2687},{begin:2688,end:2815},{begin:2816,end:2943},{begin:2944,end:3071},{begin:3072,end:3199},{begin:3200,end:3327},{begin:3328,end:3455},{begin:3584,end:3711},{begin:3712,end:3839},{begin:4256,end:4351},{begin:6912,end:7039},{begin:4352,end:4607},{begin:7680,end:7935},{begin:7936,end:8191},{begin:8192,end:8303},{begin:8304,end:8351},{begin:8352,end:8399},{begin:8400,end:8447},{begin:8448,end:8527},{begin:8528,end:8591},{begin:8592,end:8703},{begin:8704,end:8959},{begin:8960,end:9215},{begin:9216,end:9279},{begin:9280,end:9311},{begin:9312,end:9471},{begin:9472,end:9599},{begin:9600,end:9631},{begin:9632,end:9727},{begin:9728,end:9983},{begin:9984,end:10175},{begin:12288,end:12351},{begin:12352,end:12447},{begin:12448,end:12543},{begin:12544,end:12591},{begin:12592,end:12687},{begin:43072,end:43135},{begin:12800,end:13055},{begin:13056,end:13311},{begin:44032,end:55215},{begin:55296,end:57343},{begin:67840,end:67871},{begin:19968,end:40959},{begin:57344,end:63743},{begin:12736,end:12783},{begin:64256,end:64335},{begin:64336,end:65023},{begin:65056,end:65071},{begin:65040,end:65055},{begin:65104,end:65135},{begin:65136,end:65279},{begin:65280,end:65519},{begin:65520,end:65535},{begin:3840,end:4095},{begin:1792,end:1871},{begin:1920,end:1983},{begin:3456,end:3583},{begin:4096,end:4255},{begin:4608,end:4991},{begin:5024,end:5119},{begin:5120,end:5759},{begin:5760,end:5791},{begin:5792,end:5887},{begin:6016,end:6143},{begin:6144,end:6319},{begin:10240,end:10495},{begin:40960,end:42127},{begin:5888,end:5919},{begin:66304,end:66351},{begin:66352,end:66383},{begin:66560,end:66639},{begin:118784,end:119039},{begin:119808,end:120831},{begin:1044480,end:1048573},{begin:65024,end:65039},{begin:917504,end:917631},{begin:6400,end:6479},{begin:6480,end:6527},{begin:6528,end:6623},{begin:6656,end:6687},{begin:11264,end:11359},{begin:11568,end:11647},{begin:19904,end:19967},{begin:43008,end:43055},{begin:65536,end:65663},{begin:65856,end:65935},{begin:66432,end:66463},{begin:66464,end:66527},{begin:66640,end:66687},{begin:66688,end:66735},{begin:67584,end:67647},{begin:68096,end:68191},{begin:119552,end:119647},{begin:73728,end:74751},{begin:119648,end:119679},{begin:7040,end:7103},{begin:7168,end:7247},{begin:7248,end:7295},{begin:43136,end:43231},{begin:43264,end:43311},{begin:43312,end:43359},{begin:43520,end:43615},{begin:65936,end:65999},{begin:66e3,end:66047},{begin:66208,end:66271},{begin:127024,end:127135}// Domino Tiles
];// The `OS/2` table contains metrics required in OpenType fonts.
function tA(t){for(var r=0;r<tN.length;r+=1){var n=tN[r];if(t>=n.begin&&t<n.end)return r}return -1}// Parse the OS/2 and Windows metrics `OS/2` table
var tR={parse:function(t,r){var n={},o=new e_.Parser(t,r);n.version=o.parseUShort(),n.xAvgCharWidth=o.parseShort(),n.usWeightClass=o.parseUShort(),n.usWidthClass=o.parseUShort(),n.fsType=o.parseUShort(),n.ySubscriptXSize=o.parseShort(),n.ySubscriptYSize=o.parseShort(),n.ySubscriptXOffset=o.parseShort(),n.ySubscriptYOffset=o.parseShort(),n.ySuperscriptXSize=o.parseShort(),n.ySuperscriptYSize=o.parseShort(),n.ySuperscriptXOffset=o.parseShort(),n.ySuperscriptYOffset=o.parseShort(),n.yStrikeoutSize=o.parseShort(),n.yStrikeoutPosition=o.parseShort(),n.sFamilyClass=o.parseShort(),n.panose=[];for(var a=0;a<10;a++)n.panose[a]=o.parseByte();return n.ulUnicodeRange1=o.parseULong(),n.ulUnicodeRange2=o.parseULong(),n.ulUnicodeRange3=o.parseULong(),n.ulUnicodeRange4=o.parseULong(),n.achVendID=String.fromCharCode(o.parseByte(),o.parseByte(),o.parseByte(),o.parseByte()),n.fsSelection=o.parseUShort(),n.usFirstCharIndex=o.parseUShort(),n.usLastCharIndex=o.parseUShort(),n.sTypoAscender=o.parseShort(),n.sTypoDescender=o.parseShort(),n.sTypoLineGap=o.parseShort(),n.usWinAscent=o.parseUShort(),n.usWinDescent=o.parseUShort(),n.version>=1&&(n.ulCodePageRange1=o.parseULong(),n.ulCodePageRange2=o.parseULong()),n.version>=2&&(n.sxHeight=o.parseShort(),n.sCapHeight=o.parseShort(),n.usDefaultChar=o.parseUShort(),n.usBreakChar=o.parseUShort(),n.usMaxContent=o.parseUShort()),n},make:function(t){return new eu.Table("OS/2",[{name:"version",type:"USHORT",value:3},{name:"xAvgCharWidth",type:"SHORT",value:0},{name:"usWeightClass",type:"USHORT",value:0},{name:"usWidthClass",type:"USHORT",value:0},{name:"fsType",type:"USHORT",value:0},{name:"ySubscriptXSize",type:"SHORT",value:650},{name:"ySubscriptYSize",type:"SHORT",value:699},{name:"ySubscriptXOffset",type:"SHORT",value:0},{name:"ySubscriptYOffset",type:"SHORT",value:140},{name:"ySuperscriptXSize",type:"SHORT",value:650},{name:"ySuperscriptYSize",type:"SHORT",value:699},{name:"ySuperscriptXOffset",type:"SHORT",value:0},{name:"ySuperscriptYOffset",type:"SHORT",value:479},{name:"yStrikeoutSize",type:"SHORT",value:49},{name:"yStrikeoutPosition",type:"SHORT",value:258},{name:"sFamilyClass",type:"SHORT",value:0},{name:"bFamilyType",type:"BYTE",value:0},{name:"bSerifStyle",type:"BYTE",value:0},{name:"bWeight",type:"BYTE",value:0},{name:"bProportion",type:"BYTE",value:0},{name:"bContrast",type:"BYTE",value:0},{name:"bStrokeVariation",type:"BYTE",value:0},{name:"bArmStyle",type:"BYTE",value:0},{name:"bLetterform",type:"BYTE",value:0},{name:"bMidline",type:"BYTE",value:0},{name:"bXHeight",type:"BYTE",value:0},{name:"ulUnicodeRange1",type:"ULONG",value:0},{name:"ulUnicodeRange2",type:"ULONG",value:0},{name:"ulUnicodeRange3",type:"ULONG",value:0},{name:"ulUnicodeRange4",type:"ULONG",value:0},{name:"achVendID",type:"CHARARRAY",value:"XXXX"},{name:"fsSelection",type:"USHORT",value:0},{name:"usFirstCharIndex",type:"USHORT",value:0},{name:"usLastCharIndex",type:"USHORT",value:0},{name:"sTypoAscender",type:"SHORT",value:0},{name:"sTypoDescender",type:"SHORT",value:0},{name:"sTypoLineGap",type:"SHORT",value:0},{name:"usWinAscent",type:"USHORT",value:0},{name:"usWinDescent",type:"USHORT",value:0},{name:"ulCodePageRange1",type:"ULONG",value:0},{name:"ulCodePageRange2",type:"ULONG",value:0},{name:"sxHeight",type:"SHORT",value:0},{name:"sCapHeight",type:"SHORT",value:0},{name:"usDefaultChar",type:"USHORT",value:0},{name:"usBreakChar",type:"USHORT",value:0},{name:"usMaxContext",type:"USHORT",value:0}],t)},unicodeRanges:tN,getUnicodeRange:tA},tL={parse:// Parse the PostScript `post` table
function(t,r){var n={},o=new e_.Parser(t,r);switch(n.version=o.parseVersion(),n.italicAngle=o.parseFixed(),n.underlinePosition=o.parseShort(),n.underlineThickness=o.parseShort(),n.isFixedPitch=o.parseULong(),n.minMemType42=o.parseULong(),n.maxMemType42=o.parseULong(),n.minMemType1=o.parseULong(),n.maxMemType1=o.parseULong(),n.version){case 1:n.names=eA.slice();break;case 2:n.numberOfGlyphs=o.parseUShort(),n.glyphNameIndex=Array(n.numberOfGlyphs);for(var a=0;a<n.numberOfGlyphs;a++)n.glyphNameIndex[a]=o.parseUShort();n.names=[];for(var s=0;s<n.numberOfGlyphs;s++)if(n.glyphNameIndex[s]>=eA.length){var l=o.parseChar();n.names.push(o.parseString(l))}break;case 2.5:n.numberOfGlyphs=o.parseUShort(),n.offset=Array(n.numberOfGlyphs);for(var c=0;c<n.numberOfGlyphs;c++)n.offset[c]=o.parseChar()}return n},make:function(){return new eu.Table("post",[{name:"version",type:"FIXED",value:196608},{name:"italicAngle",type:"FIXED",value:0},{name:"underlinePosition",type:"FWORD",value:0},{name:"underlineThickness",type:"FWORD",value:0},{name:"isFixedPitch",type:"ULONG",value:0},{name:"minMemType42",type:"ULONG",value:0},{name:"maxMemType42",type:"ULONG",value:0},{name:"minMemType1",type:"ULONG",value:0},{name:"maxMemType1",type:"ULONG",value:0}])}},tI=Array(9);// The `post` table stores additional PostScript information, such as glyph names.
// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#SS
tI[1]=function(){var t=this.offset+this.relativeOffset,r=this.parseUShort();return 1===r?{substFormat:1,coverage:this.parsePointer(ej.coverage),deltaGlyphId:this.parseUShort()}:2===r?{substFormat:2,coverage:this.parsePointer(ej.coverage),substitute:this.parseOffset16List()}:void G.assert(!1,"0x"+t.toString(16)+": lookup type 1 format must be 1 or 2.")},tI[2]=function(){var t=this.parseUShort();return G.argument(1===t,"GSUB Multiple Substitution Subtable identifier-format must be 1"),{substFormat:t,coverage:this.parsePointer(ej.coverage),sequences:this.parseListOfLists()}},tI[3]=function(){var t=this.parseUShort();return G.argument(1===t,"GSUB Alternate Substitution Subtable identifier-format must be 1"),{substFormat:t,coverage:this.parsePointer(ej.coverage),alternateSets:this.parseListOfLists()}},tI[4]=function(){var t=this.parseUShort();return G.argument(1===t,"GSUB ligature table identifier-format must be 1"),{substFormat:t,coverage:this.parsePointer(ej.coverage),ligatureSets:this.parseListOfLists(function(){return{ligGlyph:this.parseUShort(),components:this.parseUShortList(this.parseUShort()-1)}})}};var tP={sequenceIndex:ej.uShort,lookupListIndex:ej.uShort};// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CSF
function tD(t,r){var n=new ej(t,r=r||0),o=n.parseVersion(1);return(G.argument(1===o||1.1===o,"Unsupported GSUB table version."),1===o)?{version:o,scripts:n.parseScriptList(),features:n.parseFeatureList(),lookups:n.parseLookupList(tI)}:{version:o,scripts:n.parseScriptList(),features:n.parseFeatureList(),lookups:n.parseLookupList(tI),variations:n.parseFeatureVariationsList()}}// GSUB Writing //////////////////////////////////////////////
tI[5]=function(){var t=this.offset+this.relativeOffset,r=this.parseUShort();if(1===r)return{substFormat:r,coverage:this.parsePointer(ej.coverage),ruleSets:this.parseListOfLists(function(){var t=this.parseUShort(),r=this.parseUShort();return{input:this.parseUShortList(t-1),lookupRecords:this.parseRecordList(r,tP)}})};if(2===r)return{substFormat:r,coverage:this.parsePointer(ej.coverage),classDef:this.parsePointer(ej.classDef),classSets:this.parseListOfLists(function(){var t=this.parseUShort(),r=this.parseUShort();return{classes:this.parseUShortList(t-1),lookupRecords:this.parseRecordList(r,tP)}})};if(3===r){var n=this.parseUShort(),o=this.parseUShort();return{substFormat:r,coverages:this.parseList(n,ej.pointer(ej.coverage)),lookupRecords:this.parseRecordList(o,tP)}}G.assert(!1,"0x"+t.toString(16)+": lookup type 5 format must be 1, 2 or 3.")},tI[6]=function(){var t=this.offset+this.relativeOffset,r=this.parseUShort();return 1===r?{substFormat:1,coverage:this.parsePointer(ej.coverage),chainRuleSets:this.parseListOfLists(function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(tP)}})}:2===r?{substFormat:2,coverage:this.parsePointer(ej.coverage),backtrackClassDef:this.parsePointer(ej.classDef),inputClassDef:this.parsePointer(ej.classDef),lookaheadClassDef:this.parsePointer(ej.classDef),chainClassSet:this.parseListOfLists(function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(tP)}})}:3===r?{substFormat:3,backtrackCoverage:this.parseList(ej.pointer(ej.coverage)),inputCoverage:this.parseList(ej.pointer(ej.coverage)),lookaheadCoverage:this.parseList(ej.pointer(ej.coverage)),lookupRecords:this.parseRecordList(tP)}:void G.assert(!1,"0x"+t.toString(16)+": lookup type 6 format must be 1, 2 or 3.")},tI[7]=function(){// Extension Substitution subtable
var t=this.parseUShort();G.argument(1===t,"GSUB Extension Substitution subtable identifier-format must be 1");var r=this.parseUShort(),n=new ej(this.data,this.offset+this.parseULong());return{substFormat:1,lookupType:r,extension:tI[r].call(n)}},tI[8]=function(){var t=this.parseUShort();return G.argument(1===t,"GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"),{substFormat:t,coverage:this.parsePointer(ej.coverage),backtrackCoverage:this.parseList(ej.pointer(ej.coverage)),lookaheadCoverage:this.parseList(ej.pointer(ej.coverage)),substitutes:this.parseUShortList()}};var tF=Array(9);tF[1]=function(t){return 1===t.substFormat?new eu.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new eu.Coverage(t.coverage)},{name:"deltaGlyphID",type:"USHORT",value:t.deltaGlyphId}]):new eu.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:2},{name:"coverage",type:"TABLE",value:new eu.Coverage(t.coverage)}].concat(eu.ushortList("substitute",t.substitute)))},tF[3]=function(t){return G.assert(1===t.substFormat,"Lookup type 3 substFormat must be 1."),new eu.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new eu.Coverage(t.coverage)}].concat(eu.tableList("altSet",t.alternateSets,function(t){return new eu.Table("alternateSetTable",eu.ushortList("alternate",t))})))},tF[4]=function(t){return G.assert(1===t.substFormat,"Lookup type 4 substFormat must be 1."),new eu.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new eu.Coverage(t.coverage)}].concat(eu.tableList("ligSet",t.ligatureSets,function(t){return new eu.Table("ligatureSetTable",eu.tableList("ligature",t,function(t){return new eu.Table("ligatureTable",[{name:"ligGlyph",type:"USHORT",value:t.ligGlyph}].concat(eu.ushortList("component",t.components,t.components.length+1)))}))})))};var tU={parse:tD,make:function(t){return new eu.Table("GSUB",[{name:"version",type:"ULONG",value:65536},{name:"scripts",type:"TABLE",value:new eu.ScriptList(t.scripts)},{name:"features",type:"TABLE",value:new eu.FeatureList(t.features)},{name:"lookups",type:"TABLE",value:new eu.LookupList(t.lookups,tF)}])}},tB={parse:// Parse the metadata `meta` table.
// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6meta.html
function(t,r){var n=new e_.Parser(t,r),o=n.parseULong();G.argument(1===o,"Unsupported META table version."),n.parseULong(),n.parseULong();for(var a=n.parseULong(),s={},l=0;l<a;l++){var c=n.parseTag(),u=n.parseULong(),p=n.parseULong(),d=H.UTF8(t,r+u,p);s[c]=d}return s},make:function(t){var r=Object.keys(t).length,n="",o=16+12*r,a=new eu.Table("meta",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"offset",type:"ULONG",value:o},{name:"numTags",type:"ULONG",value:r}]);for(var s in t){var l=n.length;n+=t[s],a.fields.push({name:"tag "+s,type:"TAG",value:s}),a.fields.push({name:"offset "+s,type:"ULONG",value:o+l}),a.fields.push({name:"length "+s,type:"ULONG",value:t[s].length})}return a.fields.push({name:"stringPool",type:"CHARARRAY",value:n}),a}};// The `GPOS` table contains kerning pairs, among other things.
function tG(t){return Math.log(t)/Math.log(2)|0}function tV(t){for(;t.length%4!=0;)t.push(0);for(var r=0,n=0;n<t.length;n+=4)r+=(t[n]<<24)+(t[n+1]<<16)+(t[n+2]<<8)+t[n+3];return r%4294967296}function tz(t,r,n,o){return new eu.Record("Table Record",[{name:"tag",type:"TAG",value:void 0!==t?t:""},{name:"checkSum",type:"ULONG",value:void 0!==r?r:0},{name:"offset",type:"ULONG",value:void 0!==n?n:0},{name:"length",type:"ULONG",value:void 0!==o?o:0}])}function tH(t){var r=new eu.Table("sfnt",[{name:"version",type:"TAG",value:"OTTO"},{name:"numTables",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);r.tables=t,r.numTables=t.length;var n=Math.pow(2,tG(r.numTables));r.searchRange=16*n,r.entrySelector=tG(n),r.rangeShift=16*r.numTables-r.searchRange;for(var o=[],a=[],s=r.sizeOf()+tz().sizeOf()*r.numTables;s%4!=0;)s+=1,a.push({name:"padding",type:"BYTE",value:0});for(var l=0;l<t.length;l+=1){var c=t[l];G.argument(4===c.tableName.length,"Table name"+c.tableName+" is invalid.");var u=c.sizeOf(),p=tz(c.tableName,tV(c.encode()),s,u);for(o.push({name:p.tag+" Table Record",type:"RECORD",value:p}),a.push({name:c.tableName+" table",type:"RECORD",value:c}),s+=u,G.argument(!isNaN(s),"Something went wrong calculating the offset.");s%4!=0;)s+=1,a.push({name:"padding",type:"BYTE",value:0})}// Table records need to be sorted alphabetically.
return o.sort(function(t,r){return t.value.tag>r.value.tag?1:-1}),r.fields=r.fields.concat(o),r.fields=r.fields.concat(a),r}// Get the metrics for a character. If the string has more than one character
// this function returns metrics for the first available character.
// You can provide optional fallback metrics if no characters are available.
function tW(t,r,n){for(var o=0;o<r.length;o+=1){var a=t.charToGlyphIndex(r[o]);if(a>0)return t.glyphs.get(a).getMetrics()}return n}function tq(t){for(var r=0,n=0;n<t.length;n+=1)r+=t[n];return r/t.length}// Convert the font object to a SFNT data structure.
// This structure contains all the necessary tables and metadata to create a binary OTF file.
function tX(t){for(var r,n=[],o=[],a=[],s=[],l=[],c=[],u=[],p=0,d=0,m=0,f=0,h=0,y=0;y<t.glyphs.length;y+=1){var g=t.glyphs.get(y),v=0|g.unicode;if(isNaN(g.advanceWidth))throw Error("Glyph "+g.name+" ("+y+"): advanceWidth is not a number.");(r>v||void 0===r)&&v>0&&(r=v),p<v&&(p=v);var b=tR.getUnicodeRange(v);if(b<32)d|=1<<b;else if(b<64)m|=1<<b-32;else if(b<96)f|=1<<b-64;else if(b<123)h|=1<<b-96;else throw Error("Unicode ranges bits > 123 are reserved for internal usage");// Skip non-important characters.
if(".notdef"!==g.name){var x=g.getMetrics();n.push(x.xMin),o.push(x.yMin),a.push(x.xMax),s.push(x.yMax),c.push(x.leftSideBearing),u.push(x.rightSideBearing),l.push(g.advanceWidth)}}var j={xMin:Math.min.apply(null,n),yMin:Math.min.apply(null,o),xMax:Math.max.apply(null,a),yMax:Math.max.apply(null,s),advanceWidthMax:Math.max.apply(null,l),advanceWidthAvg:tq(l),minLeftSideBearing:Math.min.apply(null,c),maxLeftSideBearing:Math.max.apply(null,c),minRightSideBearing:Math.min.apply(null,u)};j.ascender=t.ascender,j.descender=t.descender;var w=td.make({flags:3,// 00000011 (baseline for font at y=0; left sidebearing point at x=0)
unitsPerEm:t.unitsPerEm,xMin:j.xMin,yMin:j.yMin,xMax:j.xMax,yMax:j.yMax,lowestRecPPEM:3,createdTimestamp:t.createdTimestamp}),_=tm.make({ascender:j.ascender,descender:j.descender,advanceWidthMax:j.advanceWidthMax,minLeftSideBearing:j.minLeftSideBearing,minRightSideBearing:j.minRightSideBearing,xMaxExtent:j.maxLeftSideBearing+(j.xMax-j.xMin),numberOfHMetrics:t.glyphs.length}),S=ty.make(t.glyphs.length),E=tR.make({xAvgCharWidth:Math.round(j.advanceWidthAvg),usWeightClass:t.tables.os2.usWeightClass,usWidthClass:t.tables.os2.usWidthClass,usFirstCharIndex:r,usLastCharIndex:p,ulUnicodeRange1:d,ulUnicodeRange2:m,ulUnicodeRange3:f,ulUnicodeRange4:h,fsSelection:t.tables.os2.fsSelection,// REGULAR
// See http://typophile.com/node/13081 for more info on vertical metrics.
// We get metrics for typical characters (such as "x" for xHeight).
// We provide some fallback characters if characters are unavailable: their
// ordering was chosen experimentally.
sTypoAscender:j.ascender,sTypoDescender:j.descender,sTypoLineGap:0,usWinAscent:j.yMax,usWinDescent:Math.abs(j.yMin),ulCodePageRange1:1,// FIXME: hard-code Latin 1 support for now
sxHeight:tW(t,"xyvw",{yMax:Math.round(j.ascender/2)}).yMax,sCapHeight:tW(t,"HIKLEFJMNTZBDPRAGOQSUVWXY",j).yMax,usDefaultChar:t.hasChar(" ")?32:0,// Use space as the default character, if available.
usBreakChar:t.hasChar(" ")?32:0// Use space as the break character, if available.
}),T=function(t){for(var r=new eu.Table("hmtx",[]),n=0;n<t.length;n+=1){var o=t.get(n),a=o.advanceWidth||0,s=o.leftSideBearing||0;r.fields.push({name:"advanceWidth_"+n,type:"USHORT",value:a}),r.fields.push({name:"leftSideBearing_"+n,type:"SHORT",value:s})}return r}(t.glyphs),M=eM.make(t.glyphs),C=t.getEnglishName("fontFamily"),O=t.getEnglishName("fontSubfamily"),N=C+" "+O,A=t.getEnglishName("postScriptName");A||(A=C.replace(/\s/g,"")+"-"+O);var R={};for(var L in t.names)R[L]=t.names[L];R.uniqueID||(R.uniqueID={en:t.getEnglishName("manufacturer")+":"+N}),R.postScriptName||(R.postScriptName={en:A}),R.preferredFamily||(R.preferredFamily=t.names.fontFamily),R.preferredSubfamily||(R.preferredSubfamily=t.names.fontSubfamily);var I=[],P=tO.make(R,I),D=I.length>0?th.make(I):void 0,F=tL.make(),U=tp.make(t.glyphs,{version:t.getEnglishName("version"),fullName:N,familyName:C,weightName:O,postScriptName:A,unitsPerEm:t.unitsPerEm,fontBBox:[0,j.yMin,j.ascender,j.advanceWidthMax]}),B=t.metas&&Object.keys(t.metas).length>0?tB.make(t.metas):void 0,G=[w,_,S,E,P,M,F,U,T];D&&G.push(D),t.tables.gsub&&G.push(tU.make(t.tables.gsub)),B&&G.push(B);for(var V=tH(G),z=tV(V.encode()),H=V.fields,W=!1,q=0;q<H.length;q+=1)if("head table"===H[q].name){H[q].value.checkSumAdjustment=2981146554-z,W=!0;break}if(!W)throw Error("Could not find head table with checkSum to adjust.");return V}var tY={make:tH,fontToTable:tX,computeCheckSum:tV};// The Layout object is the prototype of Substitution objects, and provides
function tZ(t,r){for(/* jshint bitwise: false */var n=0,o=t.length-1;n<=o;){var a=n+o>>>1,s=t[a].tag;if(s===r)return a;s<r?n=a+1:o=a-1}// Not found: return -1-insertion point
return-n-1}function tK(t,r){for(/* jshint bitwise: false */var n=0,o=t.length-1;n<=o;){var a=n+o>>>1,s=t[a];if(s===r)return a;s<r?n=a+1:o=a-1}// Not found: return -1-insertion point
return-n-1}// binary search in a list of ranges (coverage, class definition)
function tJ(t,r){for(var n,o=0,a=t.length-1;o<=a;){var s=o+a>>>1,l=(n=t[s]).start;if(l===r)return n;l<r?o=s+1:a=s-1}if(o>0)return r>(n=t[o-1]).end?0:n}/**
   * @exports opentype.Layout
   * @class
   */function tQ(t,r){this.font=t,this.tableName=r}/**
   * @exports opentype.Position
   * @class
   * @extends opentype.Layout
   * @param {opentype.Font}
   * @constructor
   */function t$(t){tQ.call(this,t,"gpos")}/**
   * @exports opentype.Substitution
   * @class
   * @extends opentype.Layout
   * @param {opentype.Font}
   * @constructor
   */function t0(t){tQ.call(this,t,"gsub")}// Check if 2 arrays of primitives are equal.
function t1(t,r){var n=t.length;if(n!==r.length)return!1;for(var o=0;o<n;o++)if(t[o]!==r[o])return!1;return!0}// Find the first subtable of a lookup table in a particular format.
function t2(t,r,n){for(var o=t.subtables,a=0;a<o.length;a++){var s=o[a];if(s.substFormat===r)return s}if(n)return o.push(n),n}function t5(){return"undefined"!=typeof window}function t3(t){for(var r=new ArrayBuffer(t.length),n=new Uint8Array(r),o=0;o<t.length;++o)n[o]=t[o];return r}function t4(t){for(var r=new o(t.byteLength),n=new Uint8Array(t),a=0;a<r.length;++a)r[a]=n[a];return r}function t8(t,r){if(!t)throw r}// The `glyf` table describes the glyphs in TrueType outline format.
// Parse the coordinate data for a glyph.
function t6(t,r,n,o,a){var s;return(r&o)>0?(// The coordinate is 1 byte long.
s=t.parseByte(),(r&a)==0&&(s=-s),s=n+s):s=(r&a)>0?n:n+t.parseShort(),s}// Parse a TrueType glyph.
function t9(t,r,n){var o=new e_.Parser(r,n);if(t.numberOfContours=o.parseShort(),t._xMin=o.parseShort(),t._yMin=o.parseShort(),t._xMax=o.parseShort(),t._yMax=o.parseShort(),t.numberOfContours>0){for(var a=t.endPointIndices=[],s=0;s<t.numberOfContours;s+=1)a.push(o.parseUShort());t.instructionLength=o.parseUShort(),t.instructions=[];for(var l=0;l<t.instructionLength;l+=1)t.instructions.push(o.parseByte());var c=a[a.length-1]+1;m=[];for(var u=0;u<c;u+=1)if(f=o.parseByte(),m.push(f),(8&f)>0)for(var p=o.parseByte(),d=0;d<p;d+=1)m.push(f),u+=1;if(G.argument(m.length===c,"Bad flags."),a.length>0){var m,f,h,y=[];if(c>0){for(var g=0;g<c;g+=1)f=m[g],(h={}).onCurve=!!(1&f),h.lastPointOfContour=a.indexOf(g)>=0,y.push(h);for(var v=0,b=0;b<c;b+=1)f=m[b],(h=y[b]).x=t6(o,f,v,2,16),v=h.x;for(var x=0,j=0;j<c;j+=1)f=m[j],(h=y[j]).y=t6(o,f,x,4,32),x=h.y}t.points=y}else t.points=[]}else if(0===t.numberOfContours)t.points=[];else{t.isComposite=!0,t.points=[],t.components=[];for(var w=!0;w;){m=o.parseUShort();var _={glyphIndex:o.parseUShort(),xScale:1,scale01:0,scale10:0,yScale:1,dx:0,dy:0};(1&m)>0?(2&m)>0?(// values are offset
_.dx=o.parseShort(),_.dy=o.parseShort()):_.matchedPoints=[o.parseUShort(),o.parseUShort()]:(2&m)>0?(// values are offset
_.dx=o.parseChar(),_.dy=o.parseChar()):_.matchedPoints=[o.parseByte(),o.parseByte()],(8&m)>0?_.xScale=_.yScale=o.parseF2Dot14():(64&m)>0?(// We have an X / Y scale
_.xScale=o.parseF2Dot14(),_.yScale=o.parseF2Dot14()):(128&m)>0&&(// We have a 2x2 transformation
_.xScale=o.parseF2Dot14(),_.scale01=o.parseF2Dot14(),_.scale10=o.parseF2Dot14(),_.yScale=o.parseF2Dot14()),t.components.push(_),w=!!(32&m)}if(256&m){// We have instructions
t.instructionLength=o.parseUShort(),t.instructions=[];for(var S=0;S<t.instructionLength;S+=1)t.instructions.push(o.parseByte())}}}// Transform an array of points and return a new array.
function t7(t,r){for(var n=[],o=0;o<t.length;o+=1){var a=t[o],s={x:r.xScale*a.x+r.scale01*a.y+r.dx,y:r.scale10*a.x+r.yScale*a.y+r.dy,onCurve:a.onCurve,lastPointOfContour:a.lastPointOfContour};n.push(s)}return n}function re(t){for(var r=[],n=[],o=0;o<t.length;o+=1){var a=t[o];n.push(a),a.lastPointOfContour&&(r.push(n),n=[])}return G.argument(0===n.length,"There are still points left in the current contour."),r}// Convert the TrueType glyph outline to a Path.
function rt(t){var r=new F;if(!t)return r;for(var n=re(t),o=0;o<n.length;++o){var a=n[o],s=null,l=a[a.length-1],c=a[0];if(l.onCurve)r.moveTo(l.x,l.y);else if(c.onCurve)r.moveTo(c.x,c.y);else{// If both first and last points are off-curve, start at their middle.
var u={x:(l.x+c.x)*.5,y:(l.y+c.y)*.5};r.moveTo(u.x,u.y)}for(var p=0;p<a.length;++p)if(s=l,l=c,c=a[(p+1)%a.length],l.onCurve)r.lineTo(l.x,l.y);else{var d=s,m=c;s.onCurve||(d={x:(l.x+s.x)*.5,y:(l.y+s.y)*.5}),c.onCurve||(m={x:(l.x+c.x)*.5,y:(l.y+c.y)*.5}),r.quadraticCurveTo(l.x,l.y,m.x,m.y)}r.closePath()}return r}function rr(t,r){if(r.isComposite)for(var n=0;n<r.components.length;n+=1){var o=r.components[n],a=t.get(o.glyphIndex);if(a.getPath(),a.points){var s=void 0;if(void 0===o.matchedPoints)s=t7(a.points,o);else{// component positioned by matched points
if(o.matchedPoints[0]>r.points.length-1||o.matchedPoints[1]>a.points.length-1)throw Error("Matched points out of range in "+r.name);var l=r.points[o.matchedPoints[0]],c=a.points[o.matchedPoints[1]],u={xScale:o.xScale,scale01:o.scale01,scale10:o.scale10,yScale:o.yScale,dx:0,dy:0};c=t7([c],u)[0],u.dx=l.x-c.x,u.dy=l.y-c.y,s=t7(a.points,u)}r.points=r.points.concat(s)}}return rt(r.points)}// Parse all the glyphs according to the offsets from the `loca` table.
tQ.prototype={/**
     * Binary search an object by "tag" property
     * @instance
     * @function searchTag
     * @memberof opentype.Layout
     * @param  {Array} arr
     * @param  {string} tag
     * @return {number}
     */searchTag:tZ,/**
     * Binary search in a list of numbers
     * @instance
     * @function binSearch
     * @memberof opentype.Layout
     * @param  {Array} arr
     * @param  {number} value
     * @return {number}
     */binSearch:tK,/**
     * Get or create the Layout table (GSUB, GPOS etc).
     * @param  {boolean} create - Whether to create a new one.
     * @return {Object} The GSUB or GPOS table.
     */getTable:function(t){var r=this.font.tables[this.tableName];return!r&&t&&(r=this.font.tables[this.tableName]=this.createDefaultTable()),r},/**
     * Returns all scripts in the substitution table.
     * @instance
     * @return {Array}
     */getScriptNames:function(){var t=this.getTable();return t?t.scripts.map(function(t){return t.tag}):[]},/**
     * Returns the best bet for a script name.
     * Returns 'DFLT' if it exists.
     * If not, returns 'latn' if it exists.
     * If neither exist, returns undefined.
     */getDefaultScriptName:function(){var t=this.getTable();if(t){for(var r=!1,n=0;n<t.scripts.length;n++){var o=t.scripts[n].tag;if("DFLT"===o)return o;"latn"===o&&(r=!0)}if(r)return"latn"}},/**
     * Returns all LangSysRecords in the given script.
     * @instance
     * @param {string} [script='DFLT']
     * @param {boolean} create - forces the creation of this script table if it doesn't exist.
     * @return {Object} An object with tag and script properties.
     */getScriptTable:function(t,r){var n=this.getTable(r);if(n){t=t||"DFLT";var o=n.scripts,a=tZ(n.scripts,t);if(a>=0)return o[a].script;if(r){var s={tag:t,script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}};return o.splice(-1-a,0,s),s.script}}},/**
     * Returns a language system table
     * @instance
     * @param {string} [script='DFLT']
     * @param {string} [language='dlft']
     * @param {boolean} create - forces the creation of this langSysTable if it doesn't exist.
     * @return {Object}
     */getLangSysTable:function(t,r,n){var o=this.getScriptTable(t,n);if(o){if(!r||"dflt"===r||"DFLT"===r)return o.defaultLangSys;var a=tZ(o.langSysRecords,r);if(a>=0)return o.langSysRecords[a].langSys;if(n){var s={tag:r,langSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]}};return o.langSysRecords.splice(-1-a,0,s),s.langSys}}},/**
     * Get a specific feature table.
     * @instance
     * @param {string} [script='DFLT']
     * @param {string} [language='dlft']
     * @param {string} feature - One of the codes listed at https://www.microsoft.com/typography/OTSPEC/featurelist.htm
     * @param {boolean} create - forces the creation of the feature table if it doesn't exist.
     * @return {Object}
     */getFeatureTable:function(t,r,n,o){var a=this.getLangSysTable(t,r,o);if(a){// even if allFeatures is sorted alphabetically by feature tag.
for(var s,l=a.featureIndexes,c=this.font.tables[this.tableName].features,u=0;u<l.length;u++)if((s=c[l[u]]).tag===n)return s.feature;if(o){var p=c.length;// Automatic ordering of features would require to shift feature indexes in the script list.
return G.assert(0===p||n>=c[p-1].tag,"Features must be added in alphabetical order."),s={tag:n,feature:{params:0,lookupListIndexes:[]}},c.push(s),l.push(p),s.feature}}},/**
     * Get the lookup tables of a given type for a script/language/feature.
     * @instance
     * @param {string} [script='DFLT']
     * @param {string} [language='dlft']
     * @param {string} feature - 4-letter feature code
     * @param {number} lookupType - 1 to 9
     * @param {boolean} create - forces the creation of the lookup table if it doesn't exist, with no subtables.
     * @return {Object[]}
     */getLookupTables:function(t,r,n,o,a){var s=this.getFeatureTable(t,r,n,a),l=[];if(s){for(var c,u=s.lookupListIndexes,p=this.font.tables[this.tableName].lookups,d=0;d<u.length;d++)(c=p[u[d]]).lookupType===o&&l.push(c);if(0===l.length&&a){c={lookupType:o,lookupFlag:0,subtables:[],markFilteringSet:void 0};var m=p.length;return p.push(c),u.push(m),[c]}}return l},/**
     * Find a glyph in a class definition table
     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#class-definition-table
     * @param {object} classDefTable - an OpenType Layout class definition table
     * @param {number} glyphIndex - the index of the glyph to find
     * @returns {number} -1 if not found
     */getGlyphClass:function(t,r){switch(t.format){case 1:if(t.startGlyph<=r&&r<t.startGlyph+t.classes.length)return t.classes[r-t.startGlyph];return 0;case 2:var n=tJ(t.ranges,r);return n?n.classId:0}},/**
     * Find a glyph in a coverage table
     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#coverage-table
     * @param {object} coverageTable - an OpenType Layout coverage table
     * @param {number} glyphIndex - the index of the glyph to find
     * @returns {number} -1 if not found
     */getCoverageIndex:function(t,r){switch(t.format){case 1:var n=tK(t.glyphs,r);return n>=0?n:-1;case 2:var o=tJ(t.ranges,r);return o?o.index+r-o.start:-1}},/**
     * Returns the list of glyph indexes of a coverage table.
     * Format 1: the list is stored raw
     * Format 2: compact list as range records.
     * @instance
     * @param  {Object} coverageTable
     * @return {Array}
     */expandCoverage:function(t){if(1===t.format)return t.glyphs;for(var r=[],n=t.ranges,o=0;o<n.length;o++)for(var a=n[o],s=a.start,l=a.end,c=s;c<=l;c++)r.push(c);return r}},t$.prototype=tQ.prototype,/**
   * Init some data for faster and easier access later.
   */t$.prototype.init=function(){var t=this.getDefaultScriptName();this.defaultKerningTables=this.getKerningTables(t)},/**
   * Find a glyph pair in a list of lookup tables of type 2 and retrieve the xAdvance kerning value.
   *
   * @param {integer} leftIndex - left glyph index
   * @param {integer} rightIndex - right glyph index
   * @returns {integer}
   */t$.prototype.getKerningValue=function(t,r,n){for(var o=this,a=0;a<t.length;a++)for(var s=t[a].subtables,l=0;l<s.length;l++){var c=s[l],u=o.getCoverageIndex(c.coverage,r);if(!(u<0))switch(c.posFormat){case 1:for(var p=c.pairSets[u],d=0;d<p.length;d++){var m=p[d];if(m.secondGlyph===n)return m.value1&&m.value1.xAdvance||0}break;// left glyph found, not right glyph - try next subtable
case 2:// Search Pair Adjustment Positioning Format 2
var f=o.getGlyphClass(c.classDef1,r),h=o.getGlyphClass(c.classDef2,n),y=c.classRecords[f][h];return y.value1&&y.value1.xAdvance||0}}return 0},/**
   * List all kerning lookup tables.
   *
   * @param {string} [script='DFLT'] - use font.position.getDefaultScriptName() for a better default value
   * @param {string} [language='dflt']
   * @return {object[]} The list of kerning lookup tables (may be empty), or undefined if there is no GPOS table (and we should use the kern table)
   */t$.prototype.getKerningTables=function(t,r){if(this.font.tables.gpos)return this.getLookupTables(t,r,"kern",2)},t0.prototype=tQ.prototype,/**
   * Create a default GSUB table.
   * @return {Object} gsub - The GSUB table.
   */t0.prototype.createDefaultTable=function(){// Generate a default empty GSUB table with just a DFLT script and dflt lang sys.
return{version:1,scripts:[{tag:"DFLT",script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}}],features:[],lookups:[]}},/**
   * List all single substitutions (lookup type 1) for a given script, language, and feature.
   * @param {string} [script='DFLT']
   * @param {string} [language='dflt']
   * @param {string} feature - 4-character feature name ('aalt', 'salt', 'ss01'...)
   * @return {Array} substitutions - The list of substitutions.
   */t0.prototype.getSingle=function(t,r,n){for(var o=this,a=[],s=this.getLookupTables(r,n,t,1),l=0;l<s.length;l++)for(var c=s[l].subtables,u=0;u<c.length;u++){var p=c[u],d=o.expandCoverage(p.coverage),m=void 0;if(1===p.substFormat){var f=p.deltaGlyphId;for(m=0;m<d.length;m++){var h=d[m];a.push({sub:h,by:h+f})}}else{var y=p.substitute;for(m=0;m<d.length;m++)a.push({sub:d[m],by:y[m]})}}return a},/**
   * List all alternates (lookup type 3) for a given script, language, and feature.
   * @param {string} [script='DFLT']
   * @param {string} [language='dflt']
   * @param {string} feature - 4-character feature name ('aalt', 'salt'...)
   * @return {Array} alternates - The list of alternates
   */t0.prototype.getAlternates=function(t,r,n){for(var o=this,a=[],s=this.getLookupTables(r,n,t,3),l=0;l<s.length;l++)for(var c=s[l].subtables,u=0;u<c.length;u++)for(var p=c[u],d=o.expandCoverage(p.coverage),m=p.alternateSets,f=0;f<d.length;f++)a.push({sub:d[f],by:m[f]});return a},/**
   * List all ligatures (lookup type 4) for a given script, language, and feature.
   * The result is an array of ligature objects like { sub: [ids], by: id }
   * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)
   * @param {string} [script='DFLT']
   * @param {string} [language='dflt']
   * @return {Array} ligatures - The list of ligatures.
   */t0.prototype.getLigatures=function(t,r,n){for(var o=this,a=[],s=this.getLookupTables(r,n,t,4),l=0;l<s.length;l++)for(var c=s[l].subtables,u=0;u<c.length;u++)for(var p=c[u],d=o.expandCoverage(p.coverage),m=p.ligatureSets,f=0;f<d.length;f++)for(var h=d[f],y=m[f],g=0;g<y.length;g++){var v=y[g];a.push({sub:[h].concat(v.components),by:v.ligGlyph})}return a},/**
   * Add or modify a single substitution (lookup type 1)
   * Format 2, more flexible, is always used.
   * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)
   * @param {Object} substitution - { sub: id, delta: number } for format 1 or { sub: id, by: id } for format 2.
   * @param {string} [script='DFLT']
   * @param {string} [language='dflt']
   */t0.prototype.addSingle=function(t,r,n,o){var a=t2(this.getLookupTables(n,o,t,1,!0)[0],2,{// lookup type 1 subtable, format 2, coverage format 1
substFormat:2,coverage:{format:1,glyphs:[]},substitute:[]});G.assert(1===a.coverage.format,"Ligature: unable to modify coverage table format "+a.coverage.format);var s=r.sub,l=this.binSearch(a.coverage.glyphs,s);l<0&&(l=-1-l,a.coverage.glyphs.splice(l,0,s),a.substitute.splice(l,0,0)),a.substitute[l]=r.by},/**
   * Add or modify an alternate substitution (lookup type 1)
   * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)
   * @param {Object} substitution - { sub: id, by: [ids] }
   * @param {string} [script='DFLT']
   * @param {string} [language='dflt']
   */t0.prototype.addAlternate=function(t,r,n,o){var a=t2(this.getLookupTables(n,o,t,3,!0)[0],1,{// lookup type 3 subtable, format 1, coverage format 1
substFormat:1,coverage:{format:1,glyphs:[]},alternateSets:[]});G.assert(1===a.coverage.format,"Ligature: unable to modify coverage table format "+a.coverage.format);var s=r.sub,l=this.binSearch(a.coverage.glyphs,s);l<0&&(l=-1-l,a.coverage.glyphs.splice(l,0,s),a.alternateSets.splice(l,0,0)),a.alternateSets[l]=r.by},/**
   * Add a ligature (lookup type 4)
   * Ligatures with more components must be stored ahead of those with fewer components in order to be found
   * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)
   * @param {Object} ligature - { sub: [ids], by: id }
   * @param {string} [script='DFLT']
   * @param {string} [language='dflt']
   */t0.prototype.addLigature=function(t,r,n,o){var a=this.getLookupTables(n,o,t,4,!0)[0],s=a.subtables[0];s||(s={// lookup type 4 subtable, format 1, coverage format 1
substFormat:1,coverage:{format:1,glyphs:[]},ligatureSets:[]},a.subtables[0]=s),G.assert(1===s.coverage.format,"Ligature: unable to modify coverage table format "+s.coverage.format);var l=r.sub[0],c=r.sub.slice(1),u={ligGlyph:r.by,components:c},p=this.binSearch(s.coverage.glyphs,l);if(p>=0){for(var d=s.ligatureSets[p],m=0;m<d.length;m++)// If ligature already exists, return.
if(t1(d[m].components,c))return;// ligature does not exist: add it.
d.push(u)}else // Create a new ligatureSet and add coverage for the first glyph.
p=-1-p,s.coverage.glyphs.splice(p,0,l),s.ligatureSets.splice(p,0,[u])},/**
   * List all feature data for a given script and language.
   * @param {string} feature - 4-letter feature name
   * @param {string} [script='DFLT']
   * @param {string} [language='dflt']
   * @return {Array} substitutions - The list of substitutions.
   */t0.prototype.getFeature=function(t,r,n){if(/ss\d\d/.test(t))return this.getSingle(t,r,n);switch(t){case"aalt":case"salt":return this.getSingle(t,r,n).concat(this.getAlternates(t,r,n));case"dlig":case"liga":case"rlig":return this.getLigatures(t,r,n)}},/**
   * Add a substitution to a feature for a given script and language.
   * @param {string} feature - 4-letter feature name
   * @param {Object} sub - the substitution to add (an object like { sub: id or [ids], by: id or [ids] })
   * @param {string} [script='DFLT']
   * @param {string} [language='dflt']
   */t0.prototype.add=function(t,r,n,o){if(/ss\d\d/.test(t))return this.addSingle(t,r,n,o);switch(t){case"aalt":case"salt":if("number"==typeof r.by)return this.addSingle(t,r,n,o);return this.addAlternate(t,r,n,o);case"dlig":case"liga":case"rlig":return this.addLigature(t,r,n,o)}};var rn={getPath:rt,parse:function(t,r,n,o){for(var a=new ez.GlyphSet(o),s=0;s<n.length-1;s+=1){var l=n[s];l!==n[s+1]?a.push(s,ez.ttfGlyphLoader(o,s,t9,t,r+l,rr)):a.push(s,ez.glyphLoader(o,s))}return a}};/*
  * Creates a hinting object.
  *
  * There ought to be exactly one
  * for each truetype font that is used for hinting.
  */function ro(t){// the font this hinting object is for
this.font=t,this.getCommands=function(t){return rn.getPath(t).commands},this._fpgmState=this._prepState=void 0,// 0 ... all okay
// 1 ... had an error in a glyf,
//       continue working but stop spamming
//       the console
// 2 ... error at prep, stop hinting at this ppem
// 3 ... error at fpeg, stop hinting for this font at all
this._errorState=0}/*
  * Not rounding.
  */function ra(t){return t}/*
  * Rounding to grid.
  */function rs(t){//Rounding in TT is supposed to "symmetrical around zero"
return Math.sign(t)*Math.round(Math.abs(t))}/*
  * Rounding to double grid.
  */function ri(t){return Math.sign(t)*Math.round(Math.abs(2*t))/2}/*
  * Rounding to half grid.
  */function rl(t){return Math.sign(t)*(Math.round(Math.abs(t)+.5)-.5)}/*
  * Rounding to up to grid.
  */function rc(t){return Math.sign(t)*Math.ceil(Math.abs(t))}/*
  * Rounding to down to grid.
  */function ru(t){return Math.sign(t)*Math.floor(Math.abs(t))}/*
  * Super rounding.
  */var rp=function(t){var r=this.srPeriod,n=this.srPhase,o=this.srThreshold,a=1;return(t<0&&(t=-t,a=-1),t+=o-n,(t=Math.trunc(t/r)*r+n)<0)?n*a:t*a},rd={x:1,y:0,axis:"x",// Gets the projected distance between two points.
// o1/o2 ... if true, respective original position is used.
distance:function(t,r,n,o){return(n?t.xo:t.x)-(o?r.xo:r.x)},// Moves point p so the moved position has the same relative
// position to the moved positions of rp1 and rp2 than the
// original positions had.
//
// See APPENDIX on INTERPOLATE at the bottom of this file.
interpolate:function(t,r,n,o){var a,s,l,c,u,p,d;if(!o||o===this){if(a=t.xo-r.xo,s=t.xo-n.xo,u=r.x-r.xo,p=n.x-n.xo,0===(d=(l=Math.abs(a))+(c=Math.abs(s)))){t.x=t.xo+(u+p)/2;return}t.x=t.xo+(u*c+p*l)/d;return}if(a=o.distance(t,r,!0,!0),s=o.distance(t,n,!0,!0),u=o.distance(r,r,!1,!0),p=o.distance(n,n,!1,!0),0===(d=(l=Math.abs(a))+(c=Math.abs(s)))){rd.setRelative(t,t,(u+p)/2,o,!0);return}rd.setRelative(t,t,(u*c+p*l)/d,o,!0)},// Slope of line normal to this
normalSlope:Number.NEGATIVE_INFINITY,// Sets the point 'p' relative to point 'rp'
// by the distance 'd'.
//
// See APPENDIX on SETRELATIVE at the bottom of this file.
//
// p   ... point to set
// rp  ... reference point
// d   ... distance on projection vector
// pv  ... projection vector (undefined = this)
// org ... if true, uses the original position of rp as reference.
setRelative:function(t,r,n,o,a){if(!o||o===this){t.x=(a?r.xo:r.x)+n;return}var s=a?r.xo:r.x,l=a?r.yo:r.y,c=s+n*o.x,u=l+n*o.y;t.x=c+(t.y-u)/o.normalSlope},// Slope of vector line.
slope:0,// Touches the point p.
touch:function(t){t.xTouched=!0},// Tests if a point p is touched.
touched:function(t){return t.xTouched},// Untouches the point p.
untouch:function(t){t.xTouched=!1}},rm={x:0,y:1,axis:"y",// Gets the projected distance between two points.
// o1/o2 ... if true, respective original position is used.
distance:function(t,r,n,o){return(n?t.yo:t.y)-(o?r.yo:r.y)},// Moves point p so the moved position has the same relative
// position to the moved positions of rp1 and rp2 than the
// original positions had.
//
// See APPENDIX on INTERPOLATE at the bottom of this file.
interpolate:function(t,r,n,o){var a,s,l,c,u,p,d;if(!o||o===this){if(a=t.yo-r.yo,s=t.yo-n.yo,u=r.y-r.yo,p=n.y-n.yo,0===(d=(l=Math.abs(a))+(c=Math.abs(s)))){t.y=t.yo+(u+p)/2;return}t.y=t.yo+(u*c+p*l)/d;return}if(a=o.distance(t,r,!0,!0),s=o.distance(t,n,!0,!0),u=o.distance(r,r,!1,!0),p=o.distance(n,n,!1,!0),0===(d=(l=Math.abs(a))+(c=Math.abs(s)))){rm.setRelative(t,t,(u+p)/2,o,!0);return}rm.setRelative(t,t,(u*c+p*l)/d,o,!0)},// Slope of line normal to this.
normalSlope:0,// Sets the point 'p' relative to point 'rp'
// by the distance 'd'
//
// See APPENDIX on SETRELATIVE at the bottom of this file.
//
// p   ... point to set
// rp  ... reference point
// d   ... distance on projection vector
// pv  ... projection vector (undefined = this)
// org ... if true, uses the original position of rp as reference.
setRelative:function(t,r,n,o,a){if(!o||o===this){t.y=(a?r.yo:r.y)+n;return}var s=a?r.xo:r.x,l=a?r.yo:r.y,c=s+n*o.x,u=l+n*o.y;t.y=u+o.normalSlope*(t.x-c)},// Slope of vector line.
slope:Number.POSITIVE_INFINITY,// Touches the point p.
touch:function(t){t.yTouched=!0},// Tests if a point p is touched.
touched:function(t){return t.yTouched},// Untouches the point p.
untouch:function(t){t.yTouched=!1}};/*
  * Creates a unit vector that is not x- or y-axis.
  */function rf(t,r){this.x=t,this.y=r,this.axis=void 0,this.slope=r/t,this.normalSlope=-t/r,Object.freeze(this)}/*
  * Gets the projected distance between two points.
  * o1/o2 ... if true, respective original position is used.
  *//*
  * Returns a unit vector with x/y coordinates.
  */function rh(t,r){var n=Math.sqrt(t*t+r*r);return(t/=n,r/=n,1===t&&0===r)?rd:0===t&&1===r?rm:new rf(t,r)}/*
  * Creates a point in the hinting engine.
  */function ry(t,r,n,o){this.x=this.xo=Math.round(64*t)/64,this.y=this.yo=Math.round(64*r)/64,this.lastPointOfContour=n,this.onCurve=o,this.prevPointOnContour=void 0,this.nextPointOnContour=void 0,this.xTouched=!1,this.yTouched=!1,Object.preventExtensions(this)}/*
  * Returns the next touched point on the contour.
  *
  * v  ... unit vector to test touch axis.
  */Object.freeze(rd),Object.freeze(rm),rf.prototype.distance=function(t,r,n,o){return this.x*rd.distance(t,r,n,o)+this.y*rm.distance(t,r,n,o)},/*
  * Moves point p so the moved position has the same relative
  * position to the moved positions of rp1 and rp2 than the
  * original positions had.
  *
  * See APPENDIX on INTERPOLATE at the bottom of this file.
  */rf.prototype.interpolate=function(t,r,n,o){var a,s,l,c,u,p,d;if(l=o.distance(t,r,!0,!0),c=o.distance(t,n,!0,!0),a=o.distance(r,r,!1,!0),s=o.distance(n,n,!1,!0),0===(d=(u=Math.abs(l))+(p=Math.abs(c)))){this.setRelative(t,t,(a+s)/2,o,!0);return}this.setRelative(t,t,(a*p+s*u)/d,o,!0)},/*
  * Sets the point 'p' relative to point 'rp'
  * by the distance 'd'
  *
  * See APPENDIX on SETRELATIVE at the bottom of this file.
  *
  * p   ...  point to set
  * rp  ... reference point
  * d   ... distance on projection vector
  * pv  ... projection vector (undefined = this)
  * org ... if true, uses the original position of rp as reference.
  */rf.prototype.setRelative=function(t,r,n,o,a){o=o||this;var s=a?r.xo:r.x,l=a?r.yo:r.y,c=s+n*o.x,u=l+n*o.y,p=o.normalSlope,d=this.slope,m=t.x,f=t.y;t.x=(d*m-p*c+u-f)/(d-p),t.y=d*(t.x-m)+f},/*
  * Touches the point p.
  */rf.prototype.touch=function(t){t.xTouched=!0,t.yTouched=!0},ry.prototype.nextTouched=function(t){for(var r=this.nextPointOnContour;!t.touched(r)&&r!==this;)r=r.nextPointOnContour;return r},/*
  * Returns the previous touched point on the contour
  *
  * v  ... unit vector to test touch axis.
  */ry.prototype.prevTouched=function(t){for(var r=this.prevPointOnContour;!t.touched(r)&&r!==this;)r=r.prevPointOnContour;return r};/*
  * The zero point.
  */var rg=Object.freeze(new ry(0,0)),rv={cvCutIn:17/16,// control value cut in
deltaBase:9,deltaShift:.125,loop:1,// loops some instructions
minDis:1,// minimum distance
autoFlip:!0};/*
  * The current state of the interpreter.
  *
  * env  ... 'fpgm' or 'prep' or 'glyf'
  * prog ... the program
  */function rb(t,r){switch(this.env=t,this.stack=[],this.prog=r,t){case"glyf":this.zp0=this.zp1=this.zp2=1,this.rp0=this.rp1=this.rp2=0;/* fall through */case"prep":this.fv=this.pv=this.dpv=rd,this.round=rs}}/*
  * Executes a glyph program.
  *
  * This does the hinting for each glyph.
  *
  * Returns an array of moved points.
  *
  * glyph: the glyph to hint
  * ppem: the size the glyph is rendered for
  *//*
  * Initializes the twilight zone.
  *
  * This is only done if a SZPx instruction
  * refers to the twilight zone.
  */function rx(t){for(var r=t.tZone=Array(t.gZone.length),n=0;n<r.length;n++)r[n]=new ry(0,0)}/*
  * Skips the instruction pointer ahead over an IF/ELSE block.
  * handleElse .. if true breaks on matching ELSE
  */function rj(t,r){var n,o=t.prog,a=t.ip,s=1;do if(88===(n=o[++a]))s++;else if(89===n)s--;else if(64===n)a+=o[a+1]+1;else if(65===n)a+=2*o[a+1]+1;else if(n>=176&&n<=183)a+=n-176+1;else if(n>=184&&n<=191)a+=(n-184+1)*2;else if(r&&1===s&&27===n)break;while(s>0)t.ip=a}/*----------------------------------------------------------*
  *          And then a lot of instructions...                *
  *----------------------------------------------------------*/// SVTCA[a] Set freedom and projection Vectors To Coordinate Axis
// 0x00-0x01
function rw(t,n){r.DEBUG&&console.log(n.step,"SVTCA["+t.axis+"]"),n.fv=n.pv=n.dpv=t}// SPVTCA[a] Set Projection Vector to Coordinate Axis
// 0x02-0x03
function r_(t,n){r.DEBUG&&console.log(n.step,"SPVTCA["+t.axis+"]"),n.pv=n.dpv=t}// SFVTCA[a] Set Freedom Vector to Coordinate Axis
// 0x04-0x05
function rS(t,n){r.DEBUG&&console.log(n.step,"SFVTCA["+t.axis+"]"),n.fv=t}// SPVTL[a] Set Projection Vector To Line
// 0x06-0x07
function rE(t,n){var o,a,s=n.stack,l=s.pop(),c=s.pop(),u=n.z2[l],p=n.z1[c];r.DEBUG&&console.log("SPVTL["+t+"]",l,c),t?(o=u.y-p.y,a=p.x-u.x):(o=p.x-u.x,a=p.y-u.y),n.pv=n.dpv=rh(o,a)}// SFVTL[a] Set Freedom Vector To Line
// 0x08-0x09
function rT(t,n){var o,a,s=n.stack,l=s.pop(),c=s.pop(),u=n.z2[l],p=n.z1[c];r.DEBUG&&console.log("SFVTL["+t+"]",l,c),t?(o=u.y-p.y,a=p.x-u.x):(o=p.x-u.x,a=p.y-u.y),n.fv=rh(o,a)}// SPVFS[] Set Projection Vector From Stack
// 0x0A
function rk(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"SPVFS[]",o,a),t.pv=t.dpv=rh(a,o)}// SFVFS[] Set Freedom Vector From Stack
// 0x0B
function rM(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"SPVFS[]",o,a),t.fv=rh(a,o)}// GPV[] Get Projection Vector
// 0x0C
function rC(t){var n=t.stack,o=t.pv;r.DEBUG&&console.log(t.step,"GPV[]"),n.push(16384*o.x),n.push(16384*o.y)}// GFV[] Get Freedom Vector
// 0x0C
function rO(t){var n=t.stack,o=t.fv;r.DEBUG&&console.log(t.step,"GFV[]"),n.push(16384*o.x),n.push(16384*o.y)}// SFVTPV[] Set Freedom Vector To Projection Vector
// 0x0E
function rN(t){t.fv=t.pv,r.DEBUG&&console.log(t.step,"SFVTPV[]")}// ISECT[] moves point p to the InterSECTion of two lines
// 0x0F
function rA(t){var n=t.stack,o=n.pop(),a=n.pop(),s=n.pop(),l=n.pop(),c=n.pop(),u=t.z0,p=t.z1,d=u[o],m=u[a],f=p[s],h=p[l],y=t.z2[c];r.DEBUG&&console.log("ISECT[], ",o,a,s,l,c);// math from
// en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line
var g=d.x,v=d.y,b=m.x,x=m.y,j=f.x,w=f.y,_=h.x,S=h.y,E=(g-b)*(w-S)-(v-x)*(j-_),T=g*x-v*b,M=j*S-w*_;y.x=(T*(j-_)-M*(g-b))/E,y.y=(T*(w-S)-M*(v-x))/E}// SRP0[] Set Reference Point 0
// 0x10
function rR(t){t.rp0=t.stack.pop(),r.DEBUG&&console.log(t.step,"SRP0[]",t.rp0)}// SRP1[] Set Reference Point 1
// 0x11
function rL(t){t.rp1=t.stack.pop(),r.DEBUG&&console.log(t.step,"SRP1[]",t.rp1)}// SRP1[] Set Reference Point 2
// 0x12
function rI(t){t.rp2=t.stack.pop(),r.DEBUG&&console.log(t.step,"SRP2[]",t.rp2)}// SZP0[] Set Zone Pointer 0
// 0x13
function rP(t){var n=t.stack.pop();switch(r.DEBUG&&console.log(t.step,"SZP0[]",n),t.zp0=n,n){case 0:t.tZone||rx(t),t.z0=t.tZone;break;case 1:t.z0=t.gZone;break;default:throw Error("Invalid zone pointer")}}// SZP1[] Set Zone Pointer 1
// 0x14
function rD(t){var n=t.stack.pop();switch(r.DEBUG&&console.log(t.step,"SZP1[]",n),t.zp1=n,n){case 0:t.tZone||rx(t),t.z1=t.tZone;break;case 1:t.z1=t.gZone;break;default:throw Error("Invalid zone pointer")}}// SZP2[] Set Zone Pointer 2
// 0x15
function rF(t){var n=t.stack.pop();switch(r.DEBUG&&console.log(t.step,"SZP2[]",n),t.zp2=n,n){case 0:t.tZone||rx(t),t.z2=t.tZone;break;case 1:t.z2=t.gZone;break;default:throw Error("Invalid zone pointer")}}// SZPS[] Set Zone PointerS
// 0x16
function rU(t){var n=t.stack.pop();switch(r.DEBUG&&console.log(t.step,"SZPS[]",n),t.zp0=t.zp1=t.zp2=n,n){case 0:t.tZone||rx(t),t.z0=t.z1=t.z2=t.tZone;break;case 1:t.z0=t.z1=t.z2=t.gZone;break;default:throw Error("Invalid zone pointer")}}// SLOOP[] Set LOOP variable
// 0x17
function rB(t){t.loop=t.stack.pop(),r.DEBUG&&console.log(t.step,"SLOOP[]",t.loop)}// RTG[] Round To Grid
// 0x18
function rG(t){r.DEBUG&&console.log(t.step,"RTG[]"),t.round=rs}// RTHG[] Round To Half Grid
// 0x19
function rV(t){r.DEBUG&&console.log(t.step,"RTHG[]"),t.round=rl}// SMD[] Set Minimum Distance
// 0x1A
function rz(t){var n=t.stack.pop();r.DEBUG&&console.log(t.step,"SMD[]",n),t.minDis=n/64}// ELSE[] ELSE clause
// 0x1B
function rH(t){r.DEBUG&&console.log(t.step,"ELSE[]"),rj(t,!1)}// JMPR[] JuMP Relative
// 0x1C
function rW(t){var n=t.stack.pop();r.DEBUG&&console.log(t.step,"JMPR[]",n),// A jump by 1 would do nothing.
t.ip+=n-1}// SCVTCI[] Set Control Value Table Cut-In
// 0x1D
function rq(t){var n=t.stack.pop();r.DEBUG&&console.log(t.step,"SCVTCI[]",n),t.cvCutIn=n/64}// DUP[] DUPlicate top stack element
// 0x20
function rX(t){var n=t.stack;r.DEBUG&&console.log(t.step,"DUP[]"),n.push(n[n.length-1])}// POP[] POP top stack element
// 0x21
function rY(t){r.DEBUG&&console.log(t.step,"POP[]"),t.stack.pop()}// CLEAR[] CLEAR the stack
// 0x22
function rZ(t){r.DEBUG&&console.log(t.step,"CLEAR[]"),t.stack.length=0}// SWAP[] SWAP the top two elements on the stack
// 0x23
function rK(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"SWAP[]"),n.push(o),n.push(a)}// DEPTH[] DEPTH of the stack
// 0x24
function rJ(t){var n=t.stack;r.DEBUG&&console.log(t.step,"DEPTH[]"),n.push(n.length)}// LOOPCALL[] LOOPCALL function
// 0x2A
function rQ(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"LOOPCALL[]",o,a);// saves callers program
var l=t.ip,c=t.prog;t.prog=t.funcs[o];for(var u=0;u<a;u++)s(t),r.DEBUG&&console.log(++t.step,u+1<a?"next loopcall":"done loopcall",u);// restores the callers program
t.ip=l,t.prog=c}// CALL[] CALL function
// 0x2B
function r$(t){var n=t.stack.pop();r.DEBUG&&console.log(t.step,"CALL[]",n);// saves callers program
var o=t.ip,a=t.prog;t.prog=t.funcs[n],s(t),t.ip=o,t.prog=a,r.DEBUG&&console.log(++t.step,"returning from",n)}// CINDEX[] Copy the INDEXed element to the top of the stack
// 0x25
function r0(t){var n=t.stack,o=n.pop();r.DEBUG&&console.log(t.step,"CINDEX[]",o),// In case of k == 1, it copies the last element after popping
// thus stack.length - k.
n.push(n[n.length-o])}// MINDEX[] Move the INDEXed element to the top of the stack
// 0x26
function r1(t){var n=t.stack,o=n.pop();r.DEBUG&&console.log(t.step,"MINDEX[]",o),n.push(n.splice(n.length-o,1)[0])}// FDEF[] Function DEFinition
// 0x2C
function r2(t){if("fpgm"!==t.env)throw Error("FDEF not allowed here");var n=t.stack,o=t.prog,a=t.ip,s=n.pop(),l=a;for(r.DEBUG&&console.log(t.step,"FDEF[]",s);45!==o[++a];);t.ip=a,t.funcs[s]=o.slice(l+1,a)}// MDAP[a] Move Direct Absolute Point
// 0x2E-0x2F
function r5(t,n){var o=n.stack.pop(),a=n.z0[o],s=n.fv,l=n.pv;r.DEBUG&&console.log(n.step,"MDAP["+t+"]",o);var c=l.distance(a,rg);t&&(c=n.round(c)),s.setRelative(a,rg,c,l),s.touch(a),n.rp0=n.rp1=o}// IUP[a] Interpolate Untouched Points through the outline
// 0x30
function r3(t,n){var o,a,s,l=n.z2,c=l.length-2;r.DEBUG&&console.log(n.step,"IUP["+t.axis+"]");for(var u=0;u<c;u++)// if this point has been touched go on
o=l[u],t.touched(o)||(a=o.prevTouched(t))===o||(a===(s=o.nextTouched(t))&&// so simply moves the point like that
t.setRelative(o,o,t.distance(a,a,!1,!0),t,!0),t.interpolate(o,a,s,t))}// SHP[] SHift Point using reference point
// 0x32-0x33
function r4(t,n){for(var o=n.stack,a=t?n.rp1:n.rp2,s=(t?n.z0:n.z1)[a],l=n.fv,c=n.pv,u=n.loop,p=n.z2;u--;){var d=o.pop(),m=p[d],f=c.distance(s,s,!1,!0);l.setRelative(m,m,f,c),l.touch(m),r.DEBUG&&console.log(n.step,(n.loop>1?"loop "+(n.loop-u)+": ":"")+"SHP["+(t?"rp1":"rp2")+"]",d)}n.loop=1}// SHC[] SHift Contour using reference point
// 0x36-0x37
function r8(t,n){var o=n.stack,a=t?n.rp1:n.rp2,s=(t?n.z0:n.z1)[a],l=n.fv,c=n.pv,u=o.pop(),p=n.z2[n.contours[u]],d=p;r.DEBUG&&console.log(n.step,"SHC["+t+"]",u);var m=c.distance(s,s,!1,!0);do d!==s&&l.setRelative(d,d,m,c),d=d.nextPointOnContour;while(d!==p)}// SHZ[] SHift Zone using reference point
// 0x36-0x37
function r6(t,n){var o,a,s=n.stack,l=t?n.rp1:n.rp2,c=(t?n.z0:n.z1)[l],u=n.fv,p=n.pv,d=s.pop();switch(r.DEBUG&&console.log(n.step,"SHZ["+t+"]",d),d){case 0:o=n.tZone;break;case 1:o=n.gZone;break;default:throw Error("Invalid zone")}for(var m=p.distance(c,c,!1,!0),f=o.length-2,h=0;h<f;h++)a=o[h],u.setRelative(a,a,m,p)}// SHPIX[] SHift point by a PIXel amount
// 0x38
function r9(t){for(var n=t.stack,o=t.loop,a=t.fv,s=n.pop()/64,l=t.z2;o--;){var c=n.pop(),u=l[c];r.DEBUG&&console.log(t.step,(t.loop>1?"loop "+(t.loop-o)+": ":"")+"SHPIX[]",c,s),a.setRelative(u,u,s),a.touch(u)}t.loop=1}// IP[] Interpolate Point
// 0x39
function r7(t){for(var n=t.stack,o=t.rp1,a=t.rp2,s=t.loop,l=t.z0[o],c=t.z1[a],u=t.fv,p=t.dpv,d=t.z2;s--;){var m=n.pop(),f=d[m];r.DEBUG&&console.log(t.step,(t.loop>1?"loop "+(t.loop-s)+": ":"")+"IP[]",m,o,"<->",a),u.interpolate(f,l,c,p),u.touch(f)}t.loop=1}// MSIRP[a] Move Stack Indirect Relative Point
// 0x3A-0x3B
function ne(t,n){var o=n.stack,a=o.pop()/64,s=o.pop(),l=n.z1[s],c=n.z0[n.rp0],u=n.fv,p=n.pv;u.setRelative(l,c,a,p),u.touch(l),r.DEBUG&&console.log(n.step,"MSIRP["+t+"]",a,s),n.rp1=n.rp0,n.rp2=s,t&&(n.rp0=s)}// ALIGNRP[] Align to reference point.
// 0x3C
function nt(t){for(var n=t.stack,o=t.rp0,a=t.z0[o],s=t.loop,l=t.fv,c=t.pv,u=t.z1;s--;){var p=n.pop(),d=u[p];r.DEBUG&&console.log(t.step,(t.loop>1?"loop "+(t.loop-s)+": ":"")+"ALIGNRP[]",p),l.setRelative(d,a,0,c),l.touch(d)}t.loop=1}// RTG[] Round To Double Grid
// 0x3D
function nr(t){r.DEBUG&&console.log(t.step,"RTDG[]"),t.round=ri}// MIAP[a] Move Indirect Absolute Point
// 0x3E-0x3F
function nn(t,n){var o=n.stack,a=o.pop(),s=o.pop(),l=n.z0[s],c=n.fv,u=n.pv,p=n.cvt[a];r.DEBUG&&console.log(n.step,"MIAP["+t+"]",a,"(",p,")",s);var d=u.distance(l,rg);t&&(Math.abs(d-p)<n.cvCutIn&&(d=p),d=n.round(d)),c.setRelative(l,rg,d,u),0===n.zp0&&(l.xo=l.x,l.yo=l.y),c.touch(l),n.rp0=n.rp1=s}// NPUSB[] PUSH N Bytes
// 0x40
function no(t){var n=t.prog,o=t.ip,a=t.stack,s=n[++o];r.DEBUG&&console.log(t.step,"NPUSHB[]",s);for(var l=0;l<s;l++)a.push(n[++o]);t.ip=o}// NPUSHW[] PUSH N Words
// 0x41
function na(t){var n=t.ip,o=t.prog,a=t.stack,s=o[++n];r.DEBUG&&console.log(t.step,"NPUSHW[]",s);for(var l=0;l<s;l++){var c=o[++n]<<8|o[++n];32768&c&&(c=-((65535^c)+1)),a.push(c)}t.ip=n}// WS[] Write Store
// 0x42
function ns(t){var n=t.stack,o=t.store;o||(o=t.store=[]);var a=n.pop(),s=n.pop();r.DEBUG&&console.log(t.step,"WS",a,s),o[s]=a}// RS[] Read Store
// 0x43
function ni(t){var n=t.stack,o=t.store,a=n.pop();r.DEBUG&&console.log(t.step,"RS",a);var s=o&&o[a]||0;n.push(s)}// WCVTP[] Write Control Value Table in Pixel units
// 0x44
function nl(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"WCVTP",o,a),t.cvt[a]=o/64}// RCVT[] Read Control Value Table entry
// 0x45
function nc(t){var n=t.stack,o=n.pop();r.DEBUG&&console.log(t.step,"RCVT",o),n.push(64*t.cvt[o])}// GC[] Get Coordinate projected onto the projection vector
// 0x46-0x47
function nu(t,n){var o=n.stack,a=o.pop(),s=n.z2[a];r.DEBUG&&console.log(n.step,"GC["+t+"]",a),o.push(64*n.dpv.distance(s,rg,t,!1))}// MD[a] Measure Distance
// 0x49-0x4A
function np(t,n){var o=n.stack,a=o.pop(),s=o.pop(),l=n.z1[a],c=n.z0[s],u=n.dpv.distance(c,l,t,t);r.DEBUG&&console.log(n.step,"MD["+t+"]",a,s,"->",u),n.stack.push(Math.round(64*u))}// MPPEM[] Measure Pixels Per EM
// 0x4B
function nd(t){r.DEBUG&&console.log(t.step,"MPPEM[]"),t.stack.push(t.ppem)}// FLIPON[] set the auto FLIP Boolean to ON
// 0x4D
function nm(t){r.DEBUG&&console.log(t.step,"FLIPON[]"),t.autoFlip=!0}// LT[] Less Than
// 0x50
function nf(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"LT[]",o,a),n.push(a<o?1:0)}// LTEQ[] Less Than or EQual
// 0x53
function nh(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"LTEQ[]",o,a),n.push(a<=o?1:0)}// GTEQ[] Greater Than
// 0x52
function ny(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"GT[]",o,a),n.push(a>o?1:0)}// GTEQ[] Greater Than or EQual
// 0x53
function ng(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"GTEQ[]",o,a),n.push(a>=o?1:0)}// EQ[] EQual
// 0x54
function nv(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"EQ[]",o,a),n.push(o===a?1:0)}// NEQ[] Not EQual
// 0x55
function nb(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"NEQ[]",o,a),n.push(o!==a?1:0)}// ODD[] ODD
// 0x56
function nx(t){var n=t.stack,o=n.pop();r.DEBUG&&console.log(t.step,"ODD[]",o),n.push(Math.trunc(o)%2?1:0)}// EVEN[] EVEN
// 0x57
function nj(t){var n=t.stack,o=n.pop();r.DEBUG&&console.log(t.step,"EVEN[]",o),n.push(Math.trunc(o)%2?0:1)}// IF[] IF test
// 0x58
function nw(t){var n=t.stack.pop();r.DEBUG&&console.log(t.step,"IF[]",n),!n&&(rj(t,!0),r.DEBUG&&console.log(t.step,"EIF[]"))}// EIF[] End IF
// 0x59
function n_(t){// this can be reached normally when
// executing an else branch.
// -> just ignore it
r.DEBUG&&console.log(t.step,"EIF[]")}// AND[] logical AND
// 0x5A
function nS(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"AND[]",o,a),n.push(o&&a?1:0)}// OR[] logical OR
// 0x5B
function nE(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"OR[]",o,a),n.push(o||a?1:0)}// NOT[] logical NOT
// 0x5C
function nT(t){var n=t.stack,o=n.pop();r.DEBUG&&console.log(t.step,"NOT[]",o),n.push(o?0:1)}// DELTAP1[] DELTA exception P1
// DELTAP2[] DELTA exception P2
// DELTAP3[] DELTA exception P3
// 0x5D, 0x71, 0x72
function nk(t,n){var o=n.stack,a=o.pop(),s=n.fv,l=n.pv,c=n.ppem,u=n.deltaBase+(t-1)*16,p=n.deltaShift,d=n.z0;r.DEBUG&&console.log(n.step,"DELTAP["+t+"]",a,o);for(var m=0;m<a;m++){var f=o.pop(),h=o.pop();if(u+((240&h)>>4)===c){var y=(15&h)-8;y>=0&&y++,r.DEBUG&&console.log(n.step,"DELTAPFIX",f,"by",y*p);var g=d[f];s.setRelative(g,g,y*p,l)}}}// SDB[] Set Delta Base in the graphics state
// 0x5E
function nM(t){var n=t.stack.pop();r.DEBUG&&console.log(t.step,"SDB[]",n),t.deltaBase=n}// SDS[] Set Delta Shift in the graphics state
// 0x5F
function nC(t){var n=t.stack.pop();r.DEBUG&&console.log(t.step,"SDS[]",n),t.deltaShift=Math.pow(.5,n)}// ADD[] ADD
// 0x60
function nO(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"ADD[]",o,a),n.push(a+o)}// SUB[] SUB
// 0x61
function nN(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"SUB[]",o,a),n.push(a-o)}// DIV[] DIV
// 0x62
function nA(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"DIV[]",o,a),n.push(64*a/o)}// MUL[] MUL
// 0x63
function nR(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"MUL[]",o,a),n.push(a*o/64)}// ABS[] ABSolute value
// 0x64
function nL(t){var n=t.stack,o=n.pop();r.DEBUG&&console.log(t.step,"ABS[]",o),n.push(Math.abs(o))}// NEG[] NEGate
// 0x65
function nI(t){var n=t.stack,o=n.pop();r.DEBUG&&console.log(t.step,"NEG[]",o),n.push(-o)}// FLOOR[] FLOOR
// 0x66
function nP(t){var n=t.stack,o=n.pop();r.DEBUG&&console.log(t.step,"FLOOR[]",o),n.push(64*Math.floor(o/64))}// CEILING[] CEILING
// 0x67
function nD(t){var n=t.stack,o=n.pop();r.DEBUG&&console.log(t.step,"CEILING[]",o),n.push(64*Math.ceil(o/64))}// ROUND[ab] ROUND value
// 0x68-0x6B
function nF(t,n){var o=n.stack,a=o.pop();r.DEBUG&&console.log(n.step,"ROUND[]"),o.push(64*n.round(a/64))}// WCVTF[] Write Control Value Table in Funits
// 0x70
function nU(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"WCVTF[]",o,a),t.cvt[a]=o*t.ppem/t.font.unitsPerEm}// DELTAC1[] DELTA exception C1
// DELTAC2[] DELTA exception C2
// DELTAC3[] DELTA exception C3
// 0x73, 0x74, 0x75
function nB(t,n){var o=n.stack,a=o.pop(),s=n.ppem,l=n.deltaBase+(t-1)*16,c=n.deltaShift;r.DEBUG&&console.log(n.step,"DELTAC["+t+"]",a,o);for(var u=0;u<a;u++){var p=o.pop(),d=o.pop();if(l+((240&d)>>4)===s){var m=(15&d)-8;m>=0&&m++;var f=m*c;r.DEBUG&&console.log(n.step,"DELTACFIX",p,"by",f),n.cvt[p]+=f}}}// SROUND[] Super ROUND
// 0x76
function nG(t){var n,o=t.stack.pop();switch(r.DEBUG&&console.log(t.step,"SROUND[]",o),t.round=rp,192&o){case 0:n=.5;break;case 64:n=1;break;case 128:n=2;break;default:throw Error("invalid SROUND value")}switch(t.srPeriod=n,48&o){case 0:t.srPhase=0;break;case 16:t.srPhase=.25*n;break;case 32:t.srPhase=.5*n;break;case 48:t.srPhase=.75*n;break;default:throw Error("invalid SROUND value")}0==(o&=15)?t.srThreshold=0:t.srThreshold=(o/8-.5)*n}// S45ROUND[] Super ROUND 45 degrees
// 0x77
function nV(t){var n,o=t.stack.pop();switch(r.DEBUG&&console.log(t.step,"S45ROUND[]",o),t.round=rp,192&o){case 0:n=Math.sqrt(2)/2;break;case 64:n=Math.sqrt(2);break;case 128:n=2*Math.sqrt(2);break;default:throw Error("invalid S45ROUND value")}switch(t.srPeriod=n,48&o){case 0:t.srPhase=0;break;case 16:t.srPhase=.25*n;break;case 32:t.srPhase=.5*n;break;case 48:t.srPhase=.75*n;break;default:throw Error("invalid S45ROUND value")}0==(o&=15)?t.srThreshold=0:t.srThreshold=(o/8-.5)*n}// ROFF[] Round Off
// 0x7A
function nz(t){r.DEBUG&&console.log(t.step,"ROFF[]"),t.round=ra}// RUTG[] Round Up To Grid
// 0x7C
function nH(t){r.DEBUG&&console.log(t.step,"RUTG[]"),t.round=rc}// RDTG[] Round Down To Grid
// 0x7D
function nW(t){r.DEBUG&&console.log(t.step,"RDTG[]"),t.round=ru}// SCANCTRL[] SCAN conversion ConTRoL
// 0x85
function nq(t){var n=t.stack.pop();// ignored by opentype.js
r.DEBUG&&console.log(t.step,"SCANCTRL[]",n)}// SDPVTL[a] Set Dual Projection Vector To Line
// 0x86-0x87
function nX(t,n){var o,a,s=n.stack,l=s.pop(),c=s.pop(),u=n.z2[l],p=n.z1[c];r.DEBUG&&console.log(n.step,"SDPVTL["+t+"]",l,c),t?(o=u.y-p.y,a=p.x-u.x):(o=p.x-u.x,a=p.y-u.y),n.dpv=rh(o,a)}// GETINFO[] GET INFOrmation
// 0x88
function nY(t){var n=t.stack,o=n.pop(),a=0;r.DEBUG&&console.log(t.step,"GETINFO[]",o),1&o&&(a=35),32&o&&(a|=4096),n.push(a)}// ROLL[] ROLL the top three stack elements
// 0x8A
function nZ(t){var n=t.stack,o=n.pop(),a=n.pop(),s=n.pop();r.DEBUG&&console.log(t.step,"ROLL[]"),n.push(a),n.push(o),n.push(s)}// MAX[] MAXimum of top two stack elements
// 0x8B
function nK(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"MAX[]",o,a),n.push(Math.max(a,o))}// MIN[] MINimum of top two stack elements
// 0x8C
function nJ(t){var n=t.stack,o=n.pop(),a=n.pop();r.DEBUG&&console.log(t.step,"MIN[]",o,a),n.push(Math.min(a,o))}// SCANTYPE[] SCANTYPE
// 0x8D
function nQ(t){var n=t.stack.pop();// ignored by opentype.js
r.DEBUG&&console.log(t.step,"SCANTYPE[]",n)}// INSTCTRL[] INSTCTRL
// 0x8D
function n$(t){var n=t.stack.pop(),o=t.stack.pop();switch(r.DEBUG&&console.log(t.step,"INSTCTRL[]",n,o),n){case 1:t.inhibitGridFit=!!o;return;case 2:t.ignoreCvt=!!o;return;default:throw Error("invalid INSTCTRL[] selector")}}// PUSHB[abc] PUSH Bytes
// 0xB0-0xB7
function n0(t,n){var o=n.stack,a=n.prog,s=n.ip;r.DEBUG&&console.log(n.step,"PUSHB["+t+"]");for(var l=0;l<t;l++)o.push(a[++s]);n.ip=s}// PUSHW[abc] PUSH Words
// 0xB8-0xBF
function n1(t,n){var o=n.ip,a=n.prog,s=n.stack;r.DEBUG&&console.log(n.ip,"PUSHW["+t+"]");for(var l=0;l<t;l++){var c=a[++o]<<8|a[++o];32768&c&&(c=-((65535^c)+1)),s.push(c)}n.ip=o}// MDRP[abcde] Move Direct Relative Point
// 0xD0-0xEF
// (if indirect is 0)
//
// and
//
// MIRP[abcde] Move Indirect Relative Point
// 0xE0-0xFF
// (if indirect is 1)
function n2(t,n,o,a,s,l){var c,u,p,d,m=l.stack,f=t&&m.pop(),h=m.pop(),y=l.rp0,g=l.z0[y],v=l.z1[h],b=l.minDis,x=l.fv,j=l.dpv;p=(u=c=j.distance(v,g,!0,!0))>=0?1:-1,// TODO consider autoFlip
u=Math.abs(u),t&&(d=l.cvt[f],a&&Math.abs(u-d)<l.cvCutIn&&(u=d)),o&&u<b&&(u=b),a&&(u=l.round(u)),x.setRelative(v,g,p*u,j),x.touch(v),r.DEBUG&&console.log(l.step,(t?"MIRP[":"MDRP[")+(n?"M":"m")+(o?">":"_")+(a?"R":"_")+(0===s?"Gr":1===s?"Bl":2===s?"Wh":"")+"]",t?f+"("+l.cvt[f]+","+d+")":"",h,"(d =",c,"->",p*u,")"),l.rp1=l.rp0,l.rp2=h,n&&(l.rp0=h)}/*
  * The instruction table.
  */ro.prototype.exec=function(t,n){if("number"!=typeof n)throw Error("Point size is not a number!");// Received a fatal error, don't do any hinting anymore.
if(!(this._errorState>2)){var o=this.font,a=this._prepState;if(!a||a.ppem!==n){var c=this._fpgmState;if(!c){// Executes the fpgm state.
// This is used by fonts to define functions.
rb.prototype=rv,(c=this._fpgmState=new rb("fpgm",o.tables.fpgm)).funcs=[],c.font=o,r.DEBUG&&(console.log("---EXEC FPGM---"),c.step=-1);try{s(c)}catch(t){console.log("Hinting error in FPGM:"+t),this._errorState=3;return}}// Executes the prep program for this ppem setting.
// This is used by fonts to set cvt values
// depending on to be rendered font size.
rb.prototype=c,(a=this._prepState=new rb("prep",o.tables.prep)).ppem=n;// and scales it to the current ppem setting.
var u=o.tables.cvt;if(u)for(var p=a.cvt=Array(u.length),d=n/o.unitsPerEm,m=0;m<u.length;m++)p[m]=u[m]*d;else a.cvt=[];r.DEBUG&&(console.log("---EXEC PREP---"),a.step=-1);try{s(a)}catch(t){this._errorState<2&&console.log("Hinting error in PREP:"+t),this._errorState=2}}if(!(this._errorState>1))try{return l(t,a)}catch(t){this._errorState<1&&(console.log("Hinting error:"+t),console.log("Note: further hinting errors are silenced")),this._errorState=1;return}}},/*
  * Executes the hinting program for a glyph.
  */l=function(t,n){// original point positions
var o,a,l,u=n.ppem/n.font.unitsPerEm,p=u,d=t.components;if(rb.prototype=n,d){var m=n.font;a=[],o=[];for(var f=0;f<d.length;f++){var h=d[f],y=m.glyphs.get(h.glyphIndex);l=new rb("glyf",y.instructions),r.DEBUG&&(console.log("---EXEC COMP "+f+"---"),l.step=-1),c(y,l,u,p);for(var g=Math.round(h.dx*u),v=Math.round(h.dy*p),b=l.gZone,x=l.contours,j=0;j<b.length;j++){var w=b[j];w.xTouched=w.yTouched=!1,w.xo=w.x=w.x+g,w.yo=w.y=w.y+v}// post processes the component points
var _=a.length;a.push.apply(a,b);for(var S=0;S<x.length;S++)o.push(x[S]+_)}t.instructions&&!l.inhibitGridFit&&(// the composite has instructions on its own
(l=new rb("glyf",t.instructions)).gZone=l.z0=l.z1=l.z2=a,l.contours=o,//       the point might be modified
a.push(new ry(0,0),new ry(Math.round(t.advanceWidth*u),0)),r.DEBUG&&(console.log("---EXEC COMPOSITE---"),l.step=-1),s(l),a.length-=2)}else l=new rb("glyf",t.instructions),r.DEBUG&&(console.log("---EXEC GLYPH---"),l.step=-1),c(t,l,u,p),a=l.gZone;return a},/*
  * Executes the hinting program for a component of a multi-component glyph
  * or of the glyph itself for a non-component glyph.
  */c=function(t,n,o,a){for(var l,c,u,p=t.points||[],d=p.length,m=n.gZone=n.z0=n.z1=n.z2=[],f=n.contours=[],h=0;h<d;h++)l=p[h],m[h]=new ry(l.x*o,l.y*a,l.lastPointOfContour,l.onCurve);// Chain links the contours.
for(var y=0;y<d;y++)l=m[y],c||(c=l,f.push(y)),l.lastPointOfContour?(l.nextPointOnContour=c,c.prevPointOnContour=l,c=void 0):(u=m[y+1],l.nextPointOnContour=u,u.prevPointOnContour=l);if(!n.inhibitGridFit){if(r.DEBUG){console.log("PROCESSING GLYPH",n.stack);for(var g=0;g<d;g++)console.log(g,m[g].x,m[g].y)}if(m.push(new ry(0,0),new ry(Math.round(t.advanceWidth*o),0)),s(n),m.length-=2,r.DEBUG){console.log("FINISHED GLYPH",n.stack);for(var v=0;v<d;v++)console.log(v,m[v].x,m[v].y)}}},/*
  * Executes the program loaded in state.
  */s=function(t){var n,o=t.prog;if(o){var s=o.length;for(t.ip=0;t.ip<s;t.ip++){if(r.DEBUG&&t.step++,!(n=a[o[t.ip]]))throw Error("unknown instruction: 0x"+Number(o[t.ip]).toString(16));n(t);/*
      if (exports.DEBUG) {
          var da;
          if (state.gZone) {
              da = [];
              for (let i = 0; i < state.gZone.length; i++)
              {
                  da.push(i + ' ' +
                      state.gZone[i].x * 64 + ' ' +
                      state.gZone[i].y * 64 + ' ' +
                      (state.gZone[i].xTouched ? 'x' : '') +
                      (state.gZone[i].yTouched ? 'y' : '')
                  );
              }
              console.log('GZ', da);
          }
           if (state.tZone) {
              da = [];
              for (let i = 0; i < state.tZone.length; i++) {
                  da.push(i + ' ' +
                      state.tZone[i].x * 64 + ' ' +
                      state.tZone[i].y * 64 + ' ' +
                      (state.tZone[i].xTouched ? 'x' : '') +
                      (state.tZone[i].yTouched ? 'y' : '')
                  );
              }
              console.log('TZ', da);
          }
           if (state.stack.length > 10) {
              console.log(
                  state.stack.length,
                  '...', state.stack.slice(state.stack.length - 10)
              );
          } else {
              console.log(state.stack.length, state.stack);
          }
      }
      */}}},a=[/* 0x00 */rw.bind(void 0,rm),/* 0x01 */rw.bind(void 0,rd),/* 0x02 */r_.bind(void 0,rm),/* 0x03 */r_.bind(void 0,rd),/* 0x04 */rS.bind(void 0,rm),/* 0x05 */rS.bind(void 0,rd),/* 0x06 */rE.bind(void 0,0),/* 0x07 */rE.bind(void 0,1),/* 0x08 */rT.bind(void 0,0),/* 0x09 */rT.bind(void 0,1),/* 0x0A */rk,/* 0x0B */rM,/* 0x0C */rC,/* 0x0D */rO,/* 0x0E */rN,/* 0x0F */rA,/* 0x10 */rR,/* 0x11 */rL,/* 0x12 */rI,/* 0x13 */rP,/* 0x14 */rD,/* 0x15 */rF,/* 0x16 */rU,/* 0x17 */rB,/* 0x18 */rG,/* 0x19 */rV,/* 0x1A */rz,/* 0x1B */rH,/* 0x1C */rW,/* 0x1D */rq,/* 0x1E */void 0,/* 0x1F */void 0,/* 0x20 */rX,/* 0x21 */rY,/* 0x22 */rZ,/* 0x23 */rK,/* 0x24 */rJ,/* 0x25 */r0,/* 0x26 */r1,/* 0x27 */void 0,/* 0x28 */void 0,/* 0x29 */void 0,/* 0x2A */rQ,/* 0x2B */r$,/* 0x2C */r2,/* 0x2D */void 0,/* 0x2E */r5.bind(void 0,0),/* 0x2F */r5.bind(void 0,1),/* 0x30 */r3.bind(void 0,rm),/* 0x31 */r3.bind(void 0,rd),/* 0x32 */r4.bind(void 0,0),/* 0x33 */r4.bind(void 0,1),/* 0x34 */r8.bind(void 0,0),/* 0x35 */r8.bind(void 0,1),/* 0x36 */r6.bind(void 0,0),/* 0x37 */r6.bind(void 0,1),/* 0x38 */r9,/* 0x39 */r7,/* 0x3A */ne.bind(void 0,0),/* 0x3B */ne.bind(void 0,1),/* 0x3C */nt,/* 0x3D */nr,/* 0x3E */nn.bind(void 0,0),/* 0x3F */nn.bind(void 0,1),/* 0x40 */no,/* 0x41 */na,/* 0x42 */ns,/* 0x43 */ni,/* 0x44 */nl,/* 0x45 */nc,/* 0x46 */nu.bind(void 0,0),/* 0x47 */nu.bind(void 0,1),/* 0x48 */void 0,/* 0x49 */np.bind(void 0,0),/* 0x4A */np.bind(void 0,1),/* 0x4B */nd,/* 0x4C */void 0,/* 0x4D */nm,/* 0x4E */void 0,/* 0x4F */void 0,/* 0x50 */nf,/* 0x51 */nh,/* 0x52 */ny,/* 0x53 */ng,/* 0x54 */nv,/* 0x55 */nb,/* 0x56 */nx,/* 0x57 */nj,/* 0x58 */nw,/* 0x59 */n_,/* 0x5A */nS,/* 0x5B */nE,/* 0x5C */nT,/* 0x5D */nk.bind(void 0,1),/* 0x5E */nM,/* 0x5F */nC,/* 0x60 */nO,/* 0x61 */nN,/* 0x62 */nA,/* 0x63 */nR,/* 0x64 */nL,/* 0x65 */nI,/* 0x66 */nP,/* 0x67 */nD,/* 0x68 */nF.bind(void 0,0),/* 0x69 */nF.bind(void 0,1),/* 0x6A */nF.bind(void 0,2),/* 0x6B */nF.bind(void 0,3),/* 0x6C */void 0,/* 0x6D */void 0,/* 0x6E */void 0,/* 0x6F */void 0,/* 0x70 */nU,/* 0x71 */nk.bind(void 0,2),/* 0x72 */nk.bind(void 0,3),/* 0x73 */nB.bind(void 0,1),/* 0x74 */nB.bind(void 0,2),/* 0x75 */nB.bind(void 0,3),/* 0x76 */nG,/* 0x77 */nV,/* 0x78 */void 0,/* 0x79 */void 0,/* 0x7A */nz,/* 0x7B */void 0,/* 0x7C */nH,/* 0x7D */nW,/* 0x7E */rY,/* 0x7F */rY,/* 0x80 */void 0,/* 0x81 */void 0,/* 0x82 */void 0,/* 0x83 */void 0,/* 0x84 */void 0,/* 0x85 */nq,/* 0x86 */nX.bind(void 0,0),/* 0x87 */nX.bind(void 0,1),/* 0x88 */nY,/* 0x89 */void 0,/* 0x8A */nZ,/* 0x8B */nK,/* 0x8C */nJ,/* 0x8D */nQ,/* 0x8E */n$,/* 0x8F */void 0,/* 0x90 */void 0,/* 0x91 */void 0,/* 0x92 */void 0,/* 0x93 */void 0,/* 0x94 */void 0,/* 0x95 */void 0,/* 0x96 */void 0,/* 0x97 */void 0,/* 0x98 */void 0,/* 0x99 */void 0,/* 0x9A */void 0,/* 0x9B */void 0,/* 0x9C */void 0,/* 0x9D */void 0,/* 0x9E */void 0,/* 0x9F */void 0,/* 0xA0 */void 0,/* 0xA1 */void 0,/* 0xA2 */void 0,/* 0xA3 */void 0,/* 0xA4 */void 0,/* 0xA5 */void 0,/* 0xA6 */void 0,/* 0xA7 */void 0,/* 0xA8 */void 0,/* 0xA9 */void 0,/* 0xAA */void 0,/* 0xAB */void 0,/* 0xAC */void 0,/* 0xAD */void 0,/* 0xAE */void 0,/* 0xAF */void 0,/* 0xB0 */n0.bind(void 0,1),/* 0xB1 */n0.bind(void 0,2),/* 0xB2 */n0.bind(void 0,3),/* 0xB3 */n0.bind(void 0,4),/* 0xB4 */n0.bind(void 0,5),/* 0xB5 */n0.bind(void 0,6),/* 0xB6 */n0.bind(void 0,7),/* 0xB7 */n0.bind(void 0,8),/* 0xB8 */n1.bind(void 0,1),/* 0xB9 */n1.bind(void 0,2),/* 0xBA */n1.bind(void 0,3),/* 0xBB */n1.bind(void 0,4),/* 0xBC */n1.bind(void 0,5),/* 0xBD */n1.bind(void 0,6),/* 0xBE */n1.bind(void 0,7),/* 0xBF */n1.bind(void 0,8),/* 0xC0 */n2.bind(void 0,0,0,0,0,0),/* 0xC1 */n2.bind(void 0,0,0,0,0,1),/* 0xC2 */n2.bind(void 0,0,0,0,0,2),/* 0xC3 */n2.bind(void 0,0,0,0,0,3),/* 0xC4 */n2.bind(void 0,0,0,0,1,0),/* 0xC5 */n2.bind(void 0,0,0,0,1,1),/* 0xC6 */n2.bind(void 0,0,0,0,1,2),/* 0xC7 */n2.bind(void 0,0,0,0,1,3),/* 0xC8 */n2.bind(void 0,0,0,1,0,0),/* 0xC9 */n2.bind(void 0,0,0,1,0,1),/* 0xCA */n2.bind(void 0,0,0,1,0,2),/* 0xCB */n2.bind(void 0,0,0,1,0,3),/* 0xCC */n2.bind(void 0,0,0,1,1,0),/* 0xCD */n2.bind(void 0,0,0,1,1,1),/* 0xCE */n2.bind(void 0,0,0,1,1,2),/* 0xCF */n2.bind(void 0,0,0,1,1,3),/* 0xD0 */n2.bind(void 0,0,1,0,0,0),/* 0xD1 */n2.bind(void 0,0,1,0,0,1),/* 0xD2 */n2.bind(void 0,0,1,0,0,2),/* 0xD3 */n2.bind(void 0,0,1,0,0,3),/* 0xD4 */n2.bind(void 0,0,1,0,1,0),/* 0xD5 */n2.bind(void 0,0,1,0,1,1),/* 0xD6 */n2.bind(void 0,0,1,0,1,2),/* 0xD7 */n2.bind(void 0,0,1,0,1,3),/* 0xD8 */n2.bind(void 0,0,1,1,0,0),/* 0xD9 */n2.bind(void 0,0,1,1,0,1),/* 0xDA */n2.bind(void 0,0,1,1,0,2),/* 0xDB */n2.bind(void 0,0,1,1,0,3),/* 0xDC */n2.bind(void 0,0,1,1,1,0),/* 0xDD */n2.bind(void 0,0,1,1,1,1),/* 0xDE */n2.bind(void 0,0,1,1,1,2),/* 0xDF */n2.bind(void 0,0,1,1,1,3),/* 0xE0 */n2.bind(void 0,1,0,0,0,0),/* 0xE1 */n2.bind(void 0,1,0,0,0,1),/* 0xE2 */n2.bind(void 0,1,0,0,0,2),/* 0xE3 */n2.bind(void 0,1,0,0,0,3),/* 0xE4 */n2.bind(void 0,1,0,0,1,0),/* 0xE5 */n2.bind(void 0,1,0,0,1,1),/* 0xE6 */n2.bind(void 0,1,0,0,1,2),/* 0xE7 */n2.bind(void 0,1,0,0,1,3),/* 0xE8 */n2.bind(void 0,1,0,1,0,0),/* 0xE9 */n2.bind(void 0,1,0,1,0,1),/* 0xEA */n2.bind(void 0,1,0,1,0,2),/* 0xEB */n2.bind(void 0,1,0,1,0,3),/* 0xEC */n2.bind(void 0,1,0,1,1,0),/* 0xED */n2.bind(void 0,1,0,1,1,1),/* 0xEE */n2.bind(void 0,1,0,1,1,2),/* 0xEF */n2.bind(void 0,1,0,1,1,3),/* 0xF0 */n2.bind(void 0,1,1,0,0,0),/* 0xF1 */n2.bind(void 0,1,1,0,0,1),/* 0xF2 */n2.bind(void 0,1,1,0,0,2),/* 0xF3 */n2.bind(void 0,1,1,0,0,3),/* 0xF4 */n2.bind(void 0,1,1,0,1,0),/* 0xF5 */n2.bind(void 0,1,1,0,1,1),/* 0xF6 */n2.bind(void 0,1,1,0,1,2),/* 0xF7 */n2.bind(void 0,1,1,0,1,3),/* 0xF8 */n2.bind(void 0,1,1,1,0,0),/* 0xF9 */n2.bind(void 0,1,1,1,0,1),/* 0xFA */n2.bind(void 0,1,1,1,0,2),/* 0xFB */n2.bind(void 0,1,1,1,0,3),/* 0xFC */n2.bind(void 0,1,1,1,1,0),/* 0xFD */n2.bind(void 0,1,1,1,1,1),/* 0xFE */n2.bind(void 0,1,1,1,1,2),/* 0xFF */n2.bind(void 0,1,1,1,1,3)];/*****************************
    Mathematical Considerations
  ******************************
  	fv ... refers to freedom vector
  pv ... refers to projection vector
  rp ... refers to reference point
  p  ... refers to to point being operated on
  d  ... refers to distance
  	SETRELATIVE:
  ============
  	case freedom vector == x-axis:
  ------------------------------
  	                        (pv)
                       .-'
                rpd .-'
                 .-*
            d .-'90°'
           .-'       '
        .-'           '
     *-'               ' b
    rp                  '
                         '
                          '
              p *----------*-------------- (fv)
                            pm
  	  rpdx = rpx + d * pv.x
    rpdy = rpy + d * pv.y
  	  equation of line b
  	   y - rpdy = pvns * (x- rpdx)
  	   y = p.y
  	   x = rpdx + ( p.y - rpdy ) / pvns
  
  case freedom vector == y-axis:
  ------------------------------
  	    * pm
      |\
      | \
      |  \
      |   \
      |    \
      |     \
      |      \
      |       \
      |        \
      |         \ b
      |          \
      |           \
      |            \    .-' (pv)
      |         90° \.-'
      |           .-'* rpd
      |        .-'
      *     *-'  d
      p     rp
  	  rpdx = rpx + d * pv.x
    rpdy = rpy + d * pv.y
  	  equation of line b:
             pvns ... normal slope to pv
  	   y - rpdy = pvns * (x - rpdx)
  	   x = p.x
  	   y = rpdy +  pvns * (p.x - rpdx)
  
  	generic case:
  -------------
  
                                .'(fv)
                              .'
                            .* pm
                          .' !
                        .'    .
                      .'      !
                    .'         . b
                  .'           !
                 *              .
                p               !
                           90°   .    ... (pv)
                             ...-*-'''
                    ...---'''    rpd
           ...---'''   d
     *--'''
    rp
  	    rpdx = rpx + d * pv.x
      rpdy = rpy + d * pv.y
  	 equation of line b:
      pvns... normal slope to pv
  	    y - rpdy = pvns * (x - rpdx)
  	 equation of freedom vector line:
      fvs ... slope of freedom vector (=fy/fx)
  	    y - py = fvs * (x - px)
  
    on pm both equations are true for same x/y
  	    y - rpdy = pvns * (x - rpdx)
  	    y - py = fvs * (x - px)
  	  form to y and set equal:
  	    pvns * (x - rpdx) + rpdy = fvs * (x - px) + py
  	  expand:
  	    pvns * x - pvns * rpdx + rpdy = fvs * x - fvs * px + py
  	  switch:
  	    fvs * x - fvs * px + py = pvns * x - pvns * rpdx + rpdy
  	  solve for x:
  	    fvs * x - pvns * x = fvs * px - pvns * rpdx - py + rpdy
  
  	          fvs * px - pvns * rpdx + rpdy - py
      x =  -----------------------------------
                   fvs - pvns
  	  and:
  	    y = fvs * (x - px) + py
  
  	INTERPOLATE:
  ============
  	Examples of point interpolation.
  	The weight of the movement of the reference point gets bigger
  the further the other reference point is away, thus the safest
  option (that is avoiding 0/0 divisions) is to weight the
  original distance of the other point by the sum of both distances.
  	If the sum of both distances is 0, then move the point by the
  arithmetic average of the movement of both reference points.
  
  
             (+6)
      rp1o *---->*rp1
           .     .                          (+12)
           .     .                  rp2o *---------->* rp2
           .     .                       .           .
           .     .                       .           .
           .    10          20           .           .
           |.........|...................|           .
                 .   .                               .
                 .   . (+8)                          .
                  po *------>*p                      .
                 .           .                       .
                 .    12     .          24           .
                 |...........|.......................|
                                    36
  
  -------
  
  	           (+10)
      rp1o *-------->*rp1
           .         .                      (-10)
           .         .              rp2 *<---------* rpo2
           .         .                   .         .
           .         .                   .         .
           .    10   .          30       .         .
           |.........|.............................|
                     .                   .
                     . (+5)              .
                  po *--->* p            .
                     .    .              .
                     .    .   20         .
                     |....|..............|
                       5        15
  
  -------
  
             (+10)
      rp1o *-------->*rp1
           .         .
           .         .
      rp2o *-------->*rp2
  
                                 (+10)
                            po *-------->* p
  	-------
  
             (+10)
      rp1o *-------->*rp1
           .         .
           .         .(+30)
      rp2o *---------------------------->*rp2
  
                                          (+25)
                            po *----------------------->* p
  
  	vim: set ts=4 sw=4 expandtab:
  *****/// The Font object
// This code is based on Array.from implementation for strings in https://github.com/mathiasbynens/Array.from
var n5=Array.from||function(t){return t.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g)||[]};/**
   * @typedef FontOptions
   * @type Object
   * @property {Boolean} empty - whether to create a new empty font
   * @property {string} familyName
   * @property {string} styleName
   * @property {string=} fullName
   * @property {string=} postScriptName
   * @property {string=} designer
   * @property {string=} designerURL
   * @property {string=} manufacturer
   * @property {string=} manufacturerURL
   * @property {string=} license
   * @property {string=} licenseURL
   * @property {string=} version
   * @property {string=} description
   * @property {string=} copyright
   * @property {string=} trademark
   * @property {Number} unitsPerEm
   * @property {Number} ascender
   * @property {Number} descender
   * @property {Number} createdTimestamp
   * @property {string=} weightClass
   * @property {string=} widthClass
   * @property {string=} fsSelection
   *//**
   * A Font represents a loaded OpenType font file.
   * It contains a set of glyphs and methods to draw text on a drawing context,
   * or to get a path representing the text.
   * @exports opentype.Font
   * @class
   * @param {FontOptions}
   * @constructor
   */function n3(t){(t=t||{}).empty||(// Check that we've provided the minimum set of names.
t8(t.familyName,"When creating a new Font object, familyName is required."),t8(t.styleName,"When creating a new Font object, styleName is required."),t8(t.unitsPerEm,"When creating a new Font object, unitsPerEm is required."),t8(t.ascender,"When creating a new Font object, ascender is required."),t8(t.descender,"When creating a new Font object, descender is required."),t8(t.descender<0,"Descender should be negative (e.g. -512)."),this.names={fontFamily:{en:t.familyName||" "},fontSubfamily:{en:t.styleName||" "},fullName:{en:t.fullName||t.familyName+" "+t.styleName},// postScriptName may not contain any whitespace
postScriptName:{en:t.postScriptName||(t.familyName+t.styleName).replace(/\s/g,"")},designer:{en:t.designer||" "},designerURL:{en:t.designerURL||" "},manufacturer:{en:t.manufacturer||" "},manufacturerURL:{en:t.manufacturerURL||" "},license:{en:t.license||" "},licenseURL:{en:t.licenseURL||" "},version:{en:t.version||"Version 0.1"},description:{en:t.description||" "},copyright:{en:t.copyright||" "},trademark:{en:t.trademark||" "}},this.unitsPerEm=t.unitsPerEm||1e3,this.ascender=t.ascender,this.descender=t.descender,this.createdTimestamp=t.createdTimestamp,this.tables={os2:{usWeightClass:t.weightClass||this.usWeightClasses.MEDIUM,usWidthClass:t.widthClass||this.usWidthClasses.MEDIUM,fsSelection:t.fsSelection||this.fsSelectionValues.REGULAR}}),this.supported=!0,this.glyphs=new ez.GlyphSet(this,t.glyphs||[]),this.encoding=new eR(this),this.position=new t$(this),this.substitution=new t0(this),this.tables=this.tables||{},Object.defineProperty(this,"hinting",{get:function(){return this._hinting?this._hinting:"truetype"===this.outlinesFormat?this._hinting=new ro(this):void 0}})}/**
   * Check if the font has a glyph for the given character.
   * @param  {string}
   * @return {Boolean}
   */function n4(t,r){var n=JSON.stringify(t),o=256;for(var a in r){var s=parseInt(a);if(s&&!(s<256)){if(JSON.stringify(r[a])===n)return s;o<=s&&(o=s+1)}}return r[o]=t,o}function n8(t,r,n){var o=n4(r.name,n);return[{name:"tag_"+t,type:"TAG",value:r.tag},{name:"minValue_"+t,type:"FIXED",value:r.minValue<<16},{name:"defaultValue_"+t,type:"FIXED",value:r.defaultValue<<16},{name:"maxValue_"+t,type:"FIXED",value:r.maxValue<<16},{name:"flags_"+t,type:"USHORT",value:0},{name:"nameID_"+t,type:"USHORT",value:o}]}function n6(t,r,n){var o={},a=new e_.Parser(t,r);return o.tag=a.parseTag(),o.minValue=a.parseFixed(),o.defaultValue=a.parseFixed(),o.maxValue=a.parseFixed(),a.skip("uShort",1),o.name=n[a.parseUShort()]||{},o}function n9(t,r,n,o){for(var a=[{name:"nameID_"+t,type:"USHORT",value:n4(r.name,o)},{name:"flags_"+t,type:"USHORT",value:0}],s=0;s<n.length;++s){var l=n[s].tag;a.push({name:"axis_"+t+" "+l,type:"FIXED",value:r.coordinates[l]<<16})}return a}function n7(t,r,n,o){var a={},s=new e_.Parser(t,r);a.name=o[s.parseUShort()]||{},s.skip("uShort",1),a.coordinates={};for(var l=0;l<n.length;++l)a.coordinates[n[l].tag]=s.parseFixed();return a}n3.prototype.hasChar=function(t){return null!==this.encoding.charToGlyphIndex(t)},/**
   * Convert the given character to a single glyph index.
   * Note that this function assumes that there is a one-to-one mapping between
   * the given character and a glyph; for complex scripts this might not be the case.
   * @param  {string}
   * @return {Number}
   */n3.prototype.charToGlyphIndex=function(t){return this.encoding.charToGlyphIndex(t)},/**
   * Convert the given character to a single Glyph object.
   * Note that this function assumes that there is a one-to-one mapping between
   * the given character and a glyph; for complex scripts this might not be the case.
   * @param  {string}
   * @return {opentype.Glyph}
   */n3.prototype.charToGlyph=function(t){var r=this.charToGlyphIndex(t),n=this.glyphs.get(r);return n||(n=this.glyphs.get(0)),n},/**
   * Convert the given text to a list of Glyph objects.
   * Note that there is no strict one-to-one mapping between characters and
   * glyphs, so the list of returned glyphs can be larger or smaller than the
   * length of the given string.
   * @param  {string}
   * @param  {GlyphRenderOptions} [options]
   * @return {opentype.Glyph[]}
   */n3.prototype.stringToGlyphs=function(t,r){var n=this;r=r||this.defaultRenderOptions;// Get glyph indexes
for(var o=n5(t),a=[],s=0;s<o.length;s+=1){var l=o[s];a.push(n.charToGlyphIndex(l))}var c=a.length;if(r.features){var u=r.script||this.substitution.getDefaultScriptName(),p=[];r.features.liga&&(p=p.concat(this.substitution.getFeature("liga",u,r.language))),r.features.rlig&&(p=p.concat(this.substitution.getFeature("rlig",u,r.language)));for(var d=0;d<c;d+=1)for(var m=0;m<p.length;m++){for(var f=p[m],h=f.sub,y=h.length,g=0;g<y&&h[g]===a[d+g];)g++;g===y&&(a.splice(d,y,f.by),c=c-y+1)}}// convert glyph indexes to glyph objects
for(var v=Array(c),b=this.glyphs.get(0),x=0;x<c;x+=1)v[x]=n.glyphs.get(a[x])||b;return v},/**
   * @param  {string}
   * @return {Number}
   */n3.prototype.nameToGlyphIndex=function(t){return this.glyphNames.nameToGlyphIndex(t)},/**
   * @param  {string}
   * @return {opentype.Glyph}
   */n3.prototype.nameToGlyph=function(t){var r=this.nameToGlyphIndex(t),n=this.glyphs.get(r);return n||(n=this.glyphs.get(0)),n},/**
   * @param  {Number}
   * @return {String}
   */n3.prototype.glyphIndexToName=function(t){return this.glyphNames.glyphIndexToName?this.glyphNames.glyphIndexToName(t):""},/**
   * Retrieve the value of the kerning pair between the left glyph (or its index)
   * and the right glyph (or its index). If no kerning pair is found, return 0.
   * The kerning value gets added to the advance width when calculating the spacing
   * between glyphs.
   * For GPOS kerning, this method uses the default script and language, which covers
   * most use cases. To have greater control, use font.position.getKerningValue .
   * @param  {opentype.Glyph} leftGlyph
   * @param  {opentype.Glyph} rightGlyph
   * @return {Number}
   */n3.prototype.getKerningValue=function(t,r){t=t.index||t,r=r.index||r;var n=this.position.defaultKerningTables;return n?this.position.getKerningValue(n,t,r):this.kerningPairs[t+","+r]||0},/**
   * @typedef GlyphRenderOptions
   * @type Object
   * @property {string} [script] - script used to determine which features to apply. By default, 'DFLT' or 'latn' is used.
   *                               See https://www.microsoft.com/typography/otspec/scripttags.htm
   * @property {string} [language='dflt'] - language system used to determine which features to apply.
   *                                        See https://www.microsoft.com/typography/developers/opentype/languagetags.aspx
   * @property {boolean} [kerning=true] - whether to include kerning values
   * @property {object} [features] - OpenType Layout feature tags. Used to enable or disable the features of the given script/language system.
   *                                 See https://www.microsoft.com/typography/otspec/featuretags.htm
   */n3.prototype.defaultRenderOptions={kerning:!0,features:{liga:!0,rlig:!0}},/**
   * Helper function that invokes the given callback for each glyph in the given text.
   * The callback gets `(glyph, x, y, fontSize, options)`.* @param  {string} text
   * @param {string} text - The text to apply.
   * @param  {number} [x=0] - Horizontal position of the beginning of the text.
   * @param  {number} [y=0] - Vertical position of the *baseline* of the text.
   * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.
   * @param  {GlyphRenderOptions=} options
   * @param  {Function} callback
   */n3.prototype.forEachGlyph=function(t,r,n,o,a,s){var l,c=this;r=void 0!==r?r:0,n=void 0!==n?n:0,o=void 0!==o?o:72,a=a||this.defaultRenderOptions;var u=1/this.unitsPerEm*o,p=this.stringToGlyphs(t,a);if(a.kerning){var d=a.script||this.position.getDefaultScriptName();l=this.position.getKerningTables(d,a.language)}for(var m=0;m<p.length;m+=1){var f=p[m];s.call(c,f,r,n,o,a),f.advanceWidth&&(r+=f.advanceWidth*u),a.kerning&&m<p.length-1&&(r+=(l?c.position.getKerningValue(l,f.index,p[m+1].index):c.getKerningValue(f,p[m+1]))*u),a.letterSpacing?r+=a.letterSpacing*o:a.tracking&&(r+=a.tracking/1e3*o)}return r},/**
   * Create a Path object that represents the given text.
   * @param  {string} text - The text to create.
   * @param  {number} [x=0] - Horizontal position of the beginning of the text.
   * @param  {number} [y=0] - Vertical position of the *baseline* of the text.
   * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.
   * @param  {GlyphRenderOptions=} options
   * @return {opentype.Path}
   */n3.prototype.getPath=function(t,r,n,o,a){var s=new F;return this.forEachGlyph(t,r,n,o,a,function(t,r,n,o){var l=t.getPath(r,n,o,a,this);s.extend(l)}),s},/**
   * Create an array of Path objects that represent the glyphs of a given text.
   * @param  {string} text - The text to create.
   * @param  {number} [x=0] - Horizontal position of the beginning of the text.
   * @param  {number} [y=0] - Vertical position of the *baseline* of the text.
   * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.
   * @param  {GlyphRenderOptions=} options
   * @return {opentype.Path[]}
   */n3.prototype.getPaths=function(t,r,n,o,a){var s=[];return this.forEachGlyph(t,r,n,o,a,function(t,r,n,o){var l=t.getPath(r,n,o,a,this);s.push(l)}),s},/**
   * Returns the advance width of a text.
   *
   * This is something different than Path.getBoundingBox() as for example a
   * suffixed whitespace increases the advanceWidth but not the bounding box
   * or an overhanging letter like a calligraphic 'f' might have a quite larger
   * bounding box than its advance width.
   *
   * This corresponds to canvas2dContext.measureText(text).width
   *
   * @param  {string} text - The text to create.
   * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.
   * @param  {GlyphRenderOptions=} options
   * @return advance width
   */n3.prototype.getAdvanceWidth=function(t,r,n){return this.forEachGlyph(t,0,0,r,n,function(){})},/**
   * Draw the text on the given drawing context.
   * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.
   * @param  {string} text - The text to create.
   * @param  {number} [x=0] - Horizontal position of the beginning of the text.
   * @param  {number} [y=0] - Vertical position of the *baseline* of the text.
   * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.
   * @param  {GlyphRenderOptions=} options
   */n3.prototype.draw=function(t,r,n,o,a,s){this.getPath(r,n,o,a,s).draw(t)},/**
   * Draw the points of all glyphs in the text.
   * On-curve points will be drawn in blue, off-curve points will be drawn in red.
   * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.
   * @param {string} text - The text to create.
   * @param {number} [x=0] - Horizontal position of the beginning of the text.
   * @param {number} [y=0] - Vertical position of the *baseline* of the text.
   * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.
   * @param {GlyphRenderOptions=} options
   */n3.prototype.drawPoints=function(t,r,n,o,a,s){this.forEachGlyph(r,n,o,a,s,function(r,n,o,a){r.drawPoints(t,n,o,a)})},/**
   * Draw lines indicating important font measurements for all glyphs in the text.
   * Black lines indicate the origin of the coordinate system (point 0,0).
   * Blue lines indicate the glyph bounding box.
   * Green line indicates the advance width of the glyph.
   * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.
   * @param {string} text - The text to create.
   * @param {number} [x=0] - Horizontal position of the beginning of the text.
   * @param {number} [y=0] - Vertical position of the *baseline* of the text.
   * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.
   * @param {GlyphRenderOptions=} options
   */n3.prototype.drawMetrics=function(t,r,n,o,a,s){this.forEachGlyph(r,n,o,a,s,function(r,n,o,a){r.drawMetrics(t,n,o,a)})},/**
   * @param  {string}
   * @return {string}
   */n3.prototype.getEnglishName=function(t){var r=this.names[t];if(r)return r.en},/**
   * Validate
   */n3.prototype.validate=function(){var t=this;function r(r){var n=t.getEnglishName(r);n&&n.trim().length}// Identification information
r("fontFamily"),r("weightName"),r("manufacturer"),r("copyright"),r("version"),this.unitsPerEm},/**
   * Convert the font object to a SFNT data structure.
   * This structure contains all the necessary tables and metadata to create a binary OTF file.
   * @return {opentype.Table}
   */n3.prototype.toTables=function(){return tY.fontToTable(this)},/**
   * @deprecated Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.
   */n3.prototype.toBuffer=function(){return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."),this.toArrayBuffer()},/**
   * Converts a `opentype.Font` into an `ArrayBuffer`
   * @return {ArrayBuffer}
   */n3.prototype.toArrayBuffer=function(){for(var t=this.toTables().encode(),r=new ArrayBuffer(t.length),n=new Uint8Array(r),o=0;o<t.length;o++)n[o]=t[o];return r},/**
   * Initiate a download of the OpenType font.
   */n3.prototype.download=function(r){var n=this.getEnglishName("fontFamily"),o=this.getEnglishName("fontSubfamily");r=r||n.replace(/\s/g,"")+"-"+o+".otf";var a=this.toArrayBuffer();if(t5())window.requestFileSystem=window.requestFileSystem||window.webkitRequestFileSystem,window.requestFileSystem(window.TEMPORARY,a.byteLength,function(t){t.root.getFile(r,{create:!0},function(t){t.createWriter(function(r){var n=new DataView(a),o=new Blob([n],{type:"font/opentype"});r.write(o),r.addEventListener("writeend",function(){// Navigating to the file will download it.
location.href=t.toURL()},!1)})})},function(t){throw Error(t.name+": "+t.message)});else{var s=t("fs"),l=t4(a);s.writeFileSync(r,l)}},/**
   * @private
   */n3.prototype.fsSelectionValues={ITALIC:1,//1
UNDERSCORE:2,//2
NEGATIVE:4,//4
OUTLINED:8,//8
STRIKEOUT:16,//16
BOLD:32,//32
REGULAR:64,//64
USER_TYPO_METRICS:128,//128
WWS:256,//256
OBLIQUE:512//512
},/**
   * @private
   */n3.prototype.usWidthClasses={ULTRA_CONDENSED:1,EXTRA_CONDENSED:2,CONDENSED:3,SEMI_CONDENSED:4,MEDIUM:5,SEMI_EXPANDED:6,EXPANDED:7,EXTRA_EXPANDED:8,ULTRA_EXPANDED:9},/**
   * @private
   */n3.prototype.usWeightClasses={THIN:100,EXTRA_LIGHT:200,LIGHT:300,NORMAL:400,MEDIUM:500,SEMI_BOLD:600,BOLD:700,EXTRA_BOLD:800,BLACK:900};var oe={make:function(t,r){var n=new eu.Table("fvar",[{name:"version",type:"ULONG",value:65536},{name:"offsetToData",type:"USHORT",value:0},{name:"countSizePairs",type:"USHORT",value:2},{name:"axisCount",type:"USHORT",value:t.axes.length},{name:"axisSize",type:"USHORT",value:20},{name:"instanceCount",type:"USHORT",value:t.instances.length},{name:"instanceSize",type:"USHORT",value:4+4*t.axes.length}]);n.offsetToData=n.sizeOf();for(var o=0;o<t.axes.length;o++)n.fields=n.fields.concat(n8(o,t.axes[o],r));for(var a=0;a<t.instances.length;a++)n.fields=n.fields.concat(n9(a,t.instances[a],t.axes,r));return n},parse:function(t,r,n){var o=new e_.Parser(t,r),a=o.parseULong();G.argument(65536===a,"Unsupported fvar table version.");var s=o.parseOffset16();// Skip countSizePairs.
o.skip("uShort",1);for(var l=o.parseUShort(),c=o.parseUShort(),u=o.parseUShort(),p=o.parseUShort(),d=[],m=0;m<l;m++)d.push(n6(t,r+s+m*c,n));for(var f=[],h=r+s+l*c,y=0;y<u;y++)f.push(n7(t,h+y*p,d,n));return{axes:d,instances:f}}},ot=Array(10);// The `GPOS` table contains kerning pairs, among other things.
function or(t,r){var n=new ej(t,r=r||0),o=n.parseVersion(1);return(G.argument(1===o||1.1===o,"Unsupported GPOS table version "+o),1===o)?{version:o,scripts:n.parseScriptList(),features:n.parseFeatureList(),lookups:n.parseLookupList(ot)}:{version:o,scripts:n.parseScriptList(),features:n.parseFeatureList(),lookups:n.parseLookupList(ot),variations:n.parseFeatureVariationsList()}}// GPOS Writing //////////////////////////////////////////////
// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-1-single-adjustment-positioning-subtable
// this = Parser instance
ot[1]=function(){var t=this.offset+this.relativeOffset,r=this.parseUShort();return 1===r?{posFormat:1,coverage:this.parsePointer(ej.coverage),value:this.parseValueRecord()}:2===r?{posFormat:2,coverage:this.parsePointer(ej.coverage),values:this.parseValueRecordList()}:void G.assert(!1,"0x"+t.toString(16)+": GPOS lookup type 1 format must be 1 or 2.")},ot[2]=function(){var t=this.offset+this.relativeOffset,r=this.parseUShort();G.assert(1===r||2===r,"0x"+t.toString(16)+": GPOS lookup type 2 format must be 1 or 2.");var n=this.parsePointer(ej.coverage),o=this.parseUShort(),a=this.parseUShort();if(1===r)return{posFormat:r,coverage:n,valueFormat1:o,valueFormat2:a,pairSets:this.parseList(ej.pointer(ej.list(function(){return{// pairValueRecord
secondGlyph:this.parseUShort(),value1:this.parseValueRecord(o),value2:this.parseValueRecord(a)}})))};if(2===r){var s=this.parsePointer(ej.classDef),l=this.parsePointer(ej.classDef),c=this.parseUShort(),u=this.parseUShort();return{// Class Pair Adjustment
posFormat:r,coverage:n,valueFormat1:o,valueFormat2:a,classDef1:s,classDef2:l,class1Count:c,class2Count:u,classRecords:this.parseList(c,ej.list(u,function(){return{value1:this.parseValueRecord(o),value2:this.parseValueRecord(a)}}))}}},ot[3]=function(){return{error:"GPOS Lookup 3 not supported"}},ot[4]=function(){return{error:"GPOS Lookup 4 not supported"}},ot[5]=function(){return{error:"GPOS Lookup 5 not supported"}},ot[6]=function(){return{error:"GPOS Lookup 6 not supported"}},ot[7]=function(){return{error:"GPOS Lookup 7 not supported"}},ot[8]=function(){return{error:"GPOS Lookup 8 not supported"}},ot[9]=function(){return{error:"GPOS Lookup 9 not supported"}};// NOT SUPPORTED
var on=Array(10),oo={parse:or,make:function(t){return new eu.Table("GPOS",[{name:"version",type:"ULONG",value:65536},{name:"scripts",type:"TABLE",value:new eu.ScriptList(t.scripts)},{name:"features",type:"TABLE",value:new eu.FeatureList(t.features)},{name:"lookups",type:"TABLE",value:new eu.LookupList(t.lookups,on)}])}};function oa(t){var r={};// Skip nTables.
t.skip("uShort");var n=t.parseUShort();G.argument(0===n,"Unsupported kern sub-table version."),t.skip("uShort",2);var o=t.parseUShort();// Skip searchRange, entrySelector, rangeShift.
t.skip("uShort",3);for(var a=0;a<o;a+=1){var s=t.parseUShort(),l=t.parseUShort(),c=t.parseShort();r[s+","+l]=c}return r}function os(t){var r={};// The Mac kern table stores the version as a fixed (32 bits) but we only loaded the first 16 bits.
// Skip the rest.
t.skip("uShort"),t.parseULong()>1&&console.warn("Only the first kern subtable is supported."),t.skip("uLong");var n=255&t.parseUShort();if(t.skip("uShort"),0===n){var o=t.parseUShort();// Skip searchRange, entrySelector, rangeShift.
t.skip("uShort",3);for(var a=0;a<o;a+=1){var s=t.parseUShort(),l=t.parseUShort(),c=t.parseShort();r[s+","+l]=c}}return r}// Parse the `kern` table which contains kerning pairs.
var oi={parse:function(t,r){var n=new e_.Parser(t,r),o=n.parseUShort();if(0===o)return oa(n);if(1===o)return os(n);throw Error("Unsupported kern table version ("+o+").")}},ol={parse:// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,
// relative to the beginning of the glyphData table.
// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)
// The loca table has two versions: a short version where offsets are stored as uShorts, and a long
// version where offsets are stored as uLongs. The `head` table specifies which version to use
// (under indexToLocFormat).
function(t,r,n,o){for(var a=new e_.Parser(t,r),s=o?a.parseUShort:a.parseULong,l=[],c=0;c<n+1;c+=1){var u=s.call(a);o&&(u*=2),l.push(u)}return l}};// The `loca` table stores the offsets to the locations of the glyphs in the font.
/**
   * The opentype library.
   * @namespace opentype
   */// File loaders /////////////////////////////////////////////////////////
/**
   * Loads a font from a file. The callback throws an error message as the first parameter if it fails
   * and the font as an ArrayBuffer in the second parameter if it succeeds.
   * @param  {string} path - The path of the file
   * @param  {Function} callback - The function to call when the font load completes
   */function oc(r,n){t("fs").readFile(r,function(t,r){if(t)return n(t.message);n(null,t3(r))})}/**
   * Loads a font from a URL. The callback throws an error message as the first parameter if it fails
   * and the font as an ArrayBuffer in the second parameter if it succeeds.
   * @param  {string} url - The URL of the font file.
   * @param  {Function} callback - The function to call when the font load completes
   */function ou(t,r){var n=new XMLHttpRequest;n.open("get",t,!0),n.responseType="arraybuffer",n.onload=function(){return n.response?r(null,n.response):r("Font could not be loaded: "+n.statusText)},n.onerror=function(){r("Font could not be loaded")},n.send()}// Table Directory Entries //////////////////////////////////////////////
/**
   * Parses OpenType table entries.
   * @param  {DataView}
   * @param  {Number}
   * @return {Object[]}
   */function op(t,r){for(var n=[],o=12,a=0;a<r;a+=1){var s=e_.getTag(t,o),l=e_.getULong(t,o+4),c=e_.getULong(t,o+8),u=e_.getULong(t,o+12);n.push({tag:s,checksum:l,offset:c,length:u,compression:!1}),o+=16}return n}/**
   * Parses WOFF table entries.
   * @param  {DataView}
   * @param  {Number}
   * @return {Object[]}
   */function od(t,r){for(var n=[],o=44,a=0;a<r;a+=1){var s=e_.getTag(t,o),l=e_.getULong(t,o+4),c=e_.getULong(t,o+8),u=e_.getULong(t,o+12),p=void 0;p=c<u&&"WOFF",n.push({tag:s,offset:l,compression:p,compressedLength:c,length:u}),o+=20}return n}/**
   * @typedef TableData
   * @type Object
   * @property {DataView} data - The DataView
   * @property {number} offset - The data offset.
   *//**
   * @param  {DataView}
   * @param  {Object}
   * @return {TableData}
   */function om(t,r){if("WOFF"!==r.compression)return{data:t,offset:r.offset};var n=new Uint8Array(t.buffer,r.offset+2,r.compressedLength-2),o=new Uint8Array(r.length);if(I(n,o),o.byteLength!==r.length)throw Error("Decompression error: "+r.tag+" decompressed length doesn't match recorded length");return{data:new DataView(o.buffer,0),offset:0}}// Public API ///////////////////////////////////////////////////////////
/**
   * Parse the OpenType file data (as an ArrayBuffer) and return a Font object.
   * Throws an error if the font could not be parsed.
   * @param  {ArrayBuffer}
   * @return {opentype.Font}
   */function of(t){// should be an empty font that we'll fill with our own data.
var r,n,o,a,s,l,c,u,p,d,m,f,h,y,g=new n3({empty:!0}),v=new DataView(t,0),b=[],x=e_.getTag(v,0);// OpenType fonts use big endian byte ordering.
if(x===String.fromCharCode(0,1,0,0)||"true"===x||"typ1"===x)g.outlinesFormat="truetype",o=e_.getUShort(v,4),b=op(v,o);else if("OTTO"===x)g.outlinesFormat="cff",o=e_.getUShort(v,4),b=op(v,o);else if("wOFF"===x){var j=e_.getTag(v,4);if(j===String.fromCharCode(0,1,0,0))g.outlinesFormat="truetype";else if("OTTO"===j)g.outlinesFormat="cff";else throw Error("Unsupported OpenType flavor "+x);o=e_.getUShort(v,12),b=od(v,o)}else throw Error("Unsupported OpenType signature "+x);for(var w=0;w<o;w+=1){var _=b[w],S=void 0;switch(_.tag){case"cmap":S=om(v,_),g.tables.cmap=eM.parse(S.data,S.offset),g.encoding=new eL(g.tables.cmap);break;case"cvt ":S=om(v,_),y=new e_.Parser(S.data,S.offset),g.tables.cvt=y.parseShortList(_.length/2);break;case"fvar":s=_;break;case"fpgm":S=om(v,_),y=new e_.Parser(S.data,S.offset),g.tables.fpgm=y.parseByteList(_.length);break;case"head":S=om(v,_),g.tables.head=td.parse(S.data,S.offset),g.unitsPerEm=g.tables.head.unitsPerEm,r=g.tables.head.indexToLocFormat;break;case"hhea":S=om(v,_),g.tables.hhea=tm.parse(S.data,S.offset),g.ascender=g.tables.hhea.ascender,g.descender=g.tables.hhea.descender,g.numberOfHMetrics=g.tables.hhea.numberOfHMetrics;break;case"hmtx":p=_;break;case"ltag":S=om(v,_),n=th.parse(S.data,S.offset);break;case"maxp":S=om(v,_),g.tables.maxp=ty.parse(S.data,S.offset),g.numGlyphs=g.tables.maxp.numGlyphs;break;case"name":f=_;break;case"OS/2":S=om(v,_),g.tables.os2=tR.parse(S.data,S.offset);break;case"post":S=om(v,_),g.tables.post=tL.parse(S.data,S.offset),g.glyphNames=new eP(g.tables.post);break;case"prep":S=om(v,_),y=new e_.Parser(S.data,S.offset),g.tables.prep=y.parseByteList(_.length);break;case"glyf":l=_;break;case"loca":m=_;break;case"CFF ":a=_;break;case"kern":d=_;break;case"GPOS":c=_;break;case"GSUB":u=_;break;case"meta":h=_}}var E=om(v,f);if(g.tables.name=tO.parse(E.data,E.offset,n),g.names=g.tables.name,l&&m){var T=0===r,M=om(v,m),C=ol.parse(M.data,M.offset,g.numGlyphs,T),O=om(v,l);g.glyphs=rn.parse(O.data,O.offset,C,g)}else if(a){var N=om(v,a);tp.parse(N.data,N.offset,g)}else throw Error("Font doesn't contain TrueType or CFF outlines.");var A=om(v,p);if(function(t,r,n,o,a){for(var s,l,c=new e_.Parser(t,r),u=0;u<o;u+=1){u<n&&(s=c.parseUShort(),l=c.parseShort());var p=a.get(u);p.advanceWidth=s,p.leftSideBearing=l}}(A.data,A.offset,g.numberOfHMetrics,g.numGlyphs,g.glyphs),eD(g),d){var R=om(v,d);g.kerningPairs=oi.parse(R.data,R.offset)}else g.kerningPairs={};if(c){var L=om(v,c);g.tables.gpos=oo.parse(L.data,L.offset),g.position.init()}if(u){var I=om(v,u);g.tables.gsub=tU.parse(I.data,I.offset)}if(s){var P=om(v,s);g.tables.fvar=oe.parse(P.data,P.offset,g.names)}if(h){var D=om(v,h);g.tables.meta=tB.parse(D.data,D.offset),g.metas=g.tables.meta}return g}/**
   * Asynchronously load the font from a URL or a filesystem. When done, call the callback
   * with two arguments `(err, font)`. The `err` will be null on success,
   * the `font` is a Font object.
   * We use the node.js callback convention so that
   * opentype.js can integrate with frameworks like async.js.
   * @alias opentype.load
   * @param  {string} url - The URL of the font to load.
   * @param  {Function} callback - The callback.
   */function oh(t,r){("undefined"==typeof window?oc:ou)(t,function(t,n){var o;if(t)return r(t);try{o=of(n)}catch(t){return r(t,null)}return r(null,o)})}/**
   * Synchronously load the font from a URL or file.
   * When done, returns the font object or throws an error.
   * @alias opentype.loadSync
   * @param  {string} url - The URL of the font to load.
   * @return {opentype.Font}
   */function oy(r){return of(t3(t("fs").readFileSync(r)))}r.Font=n3,r.Glyph=eB,r.Path=F,r.BoundingBox=D,r._parse=e_,r.parse=of,r.load=oh,r.loadSync=oy,Object.defineProperty(r,"__esModule",{value:!0})})}).call(this,t("buffer").Buffer)},{buffer:22,fs:21}],270:[function(t,r,n){(function(t){// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,
// backported and transplited with Babel, with backwards-compat fixes
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function r(t,r){for(var n=0,o=t.length-1;o>=0;o--){var a=t[o];"."===a?t.splice(o,1):".."===a?(t.splice(o,1),n++):n&&(t.splice(o,1),n--)}// if the path is allowed to go above the root, restore leading ..s
if(r)for(;n--;n)t.unshift("..");return t}// path.resolve([from ...], to)
function o(t){"string"!=typeof t&&(t+="");var r,n=0,o=-1,a=!0;for(r=t.length-1;r>=0;--r)if(47/*/*/===t.charCodeAt(r)){if(!a){n=r+1;break}}else -1===o&&(// We saw the first non-path separator, mark this as the end of our
// path component
a=!1,o=r+1);return -1===o?"":t.slice(n,o)}// Uses a mixed approach for backwards-compatibility, as ext behavior changed
function a(t,r){if(t.filter)return t.filter(r);for(var n=[],o=0;o<t.length;o++)r(t[o],o,t)&&n.push(t[o]);return n}// String.prototype.substr - negative index don't work in IE8
// posix version
n.resolve=function(){for(var n="",o=!1,s=arguments.length-1;s>=-1&&!o;s--){var l=s>=0?arguments[s]:t.cwd();// Skip empty and invalid entries
if("string"!=typeof l)throw TypeError("Arguments to path.resolve must be strings");l&&(n=l+"/"+n,o="/"===l.charAt(0))}// At this point the path should be resolved to a full absolute path, but
return(// handle relative paths to be safe (might happen when process.cwd() fails)
// Normalize the path
n=r(a(n.split("/"),function(t){return!!t}),!o).join("/"),(o?"/":"")+n||".")},// posix version
n.normalize=function(t){var o=n.isAbsolute(t),l="/"===s(t,-1);// Normalize the path
return(t=r(a(t.split("/"),function(t){return!!t}),!o).join("/"))||o||(t="."),t&&l&&(t+="/"),(o?"/":"")+t},n.isAbsolute=function(t){return"/"===t.charAt(0)},n.join=function(){var t=Array.prototype.slice.call(arguments,0);return n.normalize(a(t,function(t,r){if("string"!=typeof t)throw TypeError("Arguments to path.join must be strings");return t}).join("/"))},// posix version
n.relative=function(t,r){function o(t){for(var r=0;r<t.length&&""===t[r];r++);for(var n=t.length-1;n>=0&&""===t[n];n--);return r>n?[]:t.slice(r,n-r+1)}t=n.resolve(t).substr(1),r=n.resolve(r).substr(1);for(var a=o(t.split("/")),s=o(r.split("/")),l=Math.min(a.length,s.length),c=l,u=0;u<l;u++)if(a[u]!==s[u]){c=u;break}for(var p=[],u=c;u<a.length;u++)p.push("..");return(p=p.concat(s.slice(c))).join("/")},n.sep="/",n.delimiter=":",n.dirname=function(t){if("string"!=typeof t&&(t+=""),0===t.length)return".";for(var r=t.charCodeAt(0),n=47/*/*/===r,o=-1,a=!0,s=t.length-1;s>=1;--s)if(47/*/*/===(r=t.charCodeAt(s))){if(!a){o=s;break}}else a=!1;return -1===o?n?"/":".":n&&1===o?"/":t.slice(0,o)},// in new Node.js versions, so only basename() above is backported here
n.basename=function(t,r){var n=o(t);return r&&n.substr(-1*r.length)===r&&(n=n.substr(0,n.length-r.length)),n},n.extname=function(t){"string"!=typeof t&&(t+="");for(var r=-1,n=0,o=-1,a=!0,s=0,l=t.length-1;l>=0;--l){var c=t.charCodeAt(l);if(47/*/*/===c){// If we reached a path separator that was not part of a set of path
// separators at the end of the string, stop now
if(!a){n=l+1;break}continue}-1===o&&(// We saw the first non-path separator, mark this as the end of our
// extension
a=!1,o=l+1),46/*.*/===c?-1===r?r=l:1!==s&&(s=1):-1!==r&&// have a good chance at having a non-empty extension
(s=-1)}return -1===r||-1===o||// We saw a non-dot character immediately before the dot
0===s||// The (right-most) trimmed path component is exactly '..'
1===s&&r===o-1&&r===n+1?"":t.slice(r,o)};var s="b"==="ab".substr(-1)?function(t,r,n){return t.substr(r,n)}:function(t,r,n){return r<0&&(r=t.length+r),t.substr(r,n)}}).call(this,t("_process"))},{_process:271}],271:[function(t,r,n){// shim for using process in browser
var o,a,s,l=r.exports={};// cached from whatever global is present so that test runners that stub it
function c(){throw Error("setTimeout has not been defined")}function u(){throw Error("clearTimeout has not been defined")}function p(t){if(o===setTimeout)return setTimeout(t,0);// if setTimeout wasn't available but was latter defined
if((o===c||!o)&&setTimeout)return o=setTimeout,setTimeout(t,0);try{// when when somebody has screwed with setTimeout but no I.E. maddness
return o(t,0)}catch(r){try{// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
return o.call(null,t,0)}catch(r){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
return o.call(this,t,0)}}}function d(t){if(a===clearTimeout)return clearTimeout(t);// if clearTimeout wasn't available but was latter defined
if((a===u||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(t);try{// when when somebody has screwed with setTimeout but no I.E. maddness
return a(t)}catch(r){try{// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
return a.call(null,t)}catch(r){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
// Some versions of I.E. have different rules for clearTimeout vs setTimeout
return a.call(this,t)}}}!function(){try{o="function"==typeof setTimeout?setTimeout:c}catch(t){o=c}try{a="function"==typeof clearTimeout?clearTimeout:u}catch(t){a=u}}();var m=[],f=!1,h=-1;function y(){f&&s&&(f=!1,s.length?m=s.concat(m):h=-1,m.length&&g())}function g(){if(!f){var t=p(y);f=!0;for(var r=m.length;r;){for(s=m,m=[];++h<r;)s&&s[h].run();h=-1,r=m.length}s=null,f=!1,d(t)}}function v(t,r){this.fun=t,this.array=r}function b(){}l.nextTick=function(t){var r=Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)r[n-1]=arguments[n];m.push(new v(t,r)),1!==m.length||f||p(g)},v.prototype.run=function(){this.fun.apply(null,this.array)},l.title="browser",l.browser=!0,l.env={},l.argv=[],l.version="",l.versions={},l.on=b,l.addListener=b,l.once=b,l.off=b,l.removeListener=b,l.removeAllListeners=b,l.emit=b,l.prependListener=b,l.prependOnceListener=b,l.listeners=function(t){return[]},l.binding=function(t){throw Error("process.binding is not supported")},l.cwd=function(){return"/"},l.chdir=function(t){throw Error("process.chdir is not supported")},l.umask=function(){return 0}},{}],272:[function(t,r,n){/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var o=function(t){var r,n=Object.prototype,o=n.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},s=a.iterator||"@@iterator",l=a.asyncIterator||"@@asyncIterator",c=a.toStringTag||"@@toStringTag";function u(t,r,n,o){var a=Object.create((r&&r.prototype instanceof g?r:g).prototype),s=new N(o||[]);return(// .throw, and .return methods.
a._invoke=T(t,n,s),a)}// record like context.tryEntries[i].completion. This interface could
// have been (and was previously) designed to take a closure to be
// invoked without arguments, but in all the cases we care about we
// already have an existing method we want to call, so there's no need
// to create a new function object. We can even get away with assuming
// the method takes exactly one argument, since that happens to be true
// in every case, so we don't have to touch the arguments object. The
// only additional allocation required is the completion record, which
// has a stable shape and so hopefully should be cheap to allocate.
function p(t,r,n){try{return{type:"normal",arg:t.call(r,n)}}catch(t){return{type:"throw",arg:t}}}t.wrap=u;var d="suspendedStart",m="suspendedYield",f="executing",h="completed",y={};// .constructor.prototype properties for functions that return Generator
// objects. For full spec compliance, you may wish to configure your
// minifier not to mangle the names of these two functions.
function g(){}function v(){}function b(){}// This is a polyfill for %IteratorPrototype% for environments that
// don't natively support it.
var x={};x[s]=function(){return this};var j=Object.getPrototypeOf,w=j&&j(j(A([])));w&&w!==n&&o.call(w,s)&&// of the polyfill.
(x=w);var _=b.prototype=g.prototype=Object.create(x);// Iterator interface in terms of a single ._invoke method.
function S(t){["next","throw","return"].forEach(function(r){t[r]=function(t){return this._invoke(r,t)}})}function E(t){var r;function n(r,a,s,l){var c=p(t[r],t,a);if("throw"===c.type)l(c.arg);else{var u=c.arg,d=u.value;return d&&"object"==typeof d&&o.call(d,"__await")?Promise.resolve(d.__await).then(function(t){n("next",t,s,l)},function(t){n("throw",t,s,l)}):Promise.resolve(d).then(function(t){// When a yielded Promise is resolved, its final value becomes
// the .value of the Promise<{value,done}> result for the
// current iteration.
u.value=t,s(u)},function(t){// If a rejected Promise was yielded, throw the rejection back
// into the async generator function so it can be handled there.
return n("throw",t,s,l)})}}function a(t,o){function a(){return new Promise(function(r,a){n(t,o,r,a)})}return r=// so that results are always delivered in the correct order. If
// enqueue has not been called before, then it is important to
// call invoke immediately, without waiting on a callback to fire,
// so that the async generator function has the opportunity to do
// any necessary setup in a predictable way. This predictability
// is why the Promise constructor synchronously invokes its
// executor callback, and why async functions synchronously
// execute code before the first await. Since we implement simple
// async functions in terms of async generators, it is especially
// important to get this right, even though it requires care.
r?r.then(a,a):a()}// Define the unified helper method that is used to implement .next,
// .throw, and .return (see defineIteratorMethods).
this._invoke=a}function T(t,r,n){var o=d;return function(a,s){if(o===f)throw Error("Generator is already running");if(o===h){if("throw"===a)throw s;// Be forgiving, per 25.3.3.3.3 of the spec:
// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
return R()}for(n.method=a,n.arg=s;;){var l=n.delegate;if(l){var c=M(l,n);if(c){if(c===y)continue;return c}}if("next"===n.method)// function.sent implementation.
n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===d)throw o=h,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=f;var u=p(t,r,n);if("normal"===u.type){if(// If an exception is thrown from innerFn, we leave state ===
// GenStateExecuting and loop back for another invocation.
o=n.done?h:m,u.arg===y)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(o=h,// context.dispatchException(context.arg) call above.
n.method="throw",n.arg=u.arg)}}}// Call delegate.iterator[context.method](context.arg) and handle the
// result, either by returning a { value, done } result from the
// delegate iterator, or by modifying context.method and context.arg,
// setting context.delegate to null, and returning the ContinueSentinel.
function M(t,n){var o=t.iterator[n.method];if(o===r){if(// A .throw or .return when the delegate iterator has no .throw
// method always terminates the yield* loop.
n.delegate=null,"throw"===n.method){// Note: ["return"] must be used for ES3 parsing compatibility.
if(t.iterator.return&&(// If the delegate iterator has a return method, give it a
// chance to clean up.
n.method="return",n.arg=r,M(t,n),"throw"===n.method))// "return" to "throw", let that override the TypeError below.
return y;n.method="throw",n.arg=TypeError("The iterator does not provide a 'throw' method")}return y}var a=p(o,t.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,y;var s=a.arg;return s?s.done?(// Assign the result of the finished delegate to the temporary
// variable specified by delegate.resultName (see delegateYield).
n[t.resultName]=s.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=r),// The delegate iterator is finished, so forget it and continue with
// the outer generator.
n.delegate=null,y):s:(n.method="throw",n.arg=TypeError("iterator result is not an object"),n.delegate=null,y)}// Define Generator.prototype.{next,throw,return} in terms of the
function C(t){var r={tryLoc:t[0]};1 in t&&(r.catchLoc=t[1]),2 in t&&(r.finallyLoc=t[2],r.afterLoc=t[3]),this.tryEntries.push(r)}function O(t){var r=t.completion||{};r.type="normal",delete r.arg,t.completion=r}function N(t){// The root entry object (effectively a try statement without a catch
// or a finally block) gives us a place to store values thrown from
// locations where there is no enclosing try statement.
this.tryEntries=[{tryLoc:"root"}],t.forEach(C,this),this.reset(!0)}function A(t){if(t){var n=t[s];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,l=function n(){for(;++a<t.length;)if(o.call(t,a))return n.value=t[a],n.done=!1,n;return n.value=r,n.done=!0,n};return l.next=l}}// Return an iterator with no values.
return{next:R}}function R(){return{value:r,done:!0}}// or not, return the runtime object so that we can declare the variable
// regeneratorRuntime in the outer scope, which allows this module to be
// injected easily by `bin/regenerator --include-runtime script.js`.
return v.prototype=_.constructor=b,b.constructor=v,b[c]=v.displayName="GeneratorFunction",t.isGeneratorFunction=function(t){var r="function"==typeof t&&t.constructor;return!!r&&(r===v||"GeneratorFunction"===// For the native GeneratorFunction constructor, the best we can
// do is to check its .name property.
(r.displayName||r.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,b):(t.__proto__=b,c in t||(t[c]="GeneratorFunction")),t.prototype=Object.create(_),t},// `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
// `hasOwn.call(value, "__await")` to determine if the yielded value is
// meant to be awaited.
t.awrap=function(t){return{__await:t}},S(E.prototype),E.prototype[l]=function(){return this},t.AsyncIterator=E,// AsyncIterator objects; they just return a Promise for the value of
// the final result produced by the iterator.
t.async=function(r,n,o,a){var s=new E(u(r,n,o,a));return t.isGeneratorFunction(n)?s// If outerFn is a generator, return the full iterator.
:s.next().then(function(t){return t.done?t.value:s.next()})},// unified ._invoke helper method.
S(_),_[c]="Generator",// @@iterator function is called on it. Some browsers' implementations of the
// iterator prototype chain incorrectly implement this, causing the Generator
// object to not be returned from this call. This ensures that doesn't happen.
// See https://github.com/facebook/regenerator/issues/274 for more details.
_[s]=function(){return this},_.toString=function(){return"[object Generator]"},t.keys=function(t){var r=[];for(var n in t)r.push(n);// things simple and return the next function itself.
return r.reverse(),function n(){for(;r.length;){var o=r.pop();if(o in t)return n.value=o,n.done=!1,n}// To avoid creating an additional object, we just hang the .value
return(// and .done properties off the next function object itself. This
// also ensures that the minifier will not anonymize the function.
n.done=!0,n)}},t.values=A,N.prototype={constructor:N,reset:function(t){if(this.prev=0,this.next=0,// function.sent implementation.
this.sent=this._sent=r,this.done=!1,this.delegate=null,this.method="next",this.arg=r,this.tryEntries.forEach(O),!t)for(var n in this)"t"===n.charAt(0)&&o.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=r)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function a(o,a){return c.type="throw",c.arg=t,n.next=o,a&&(// If the dispatched exception was caught by a catch block,
// then let that catch block handle the exception normally.
n.method="next",n.arg=r),!!a}for(var s=this.tryEntries.length-1;s>=0;--s){var l=this.tryEntries[s],c=l.completion;if("root"===l.tryLoc)// it, so set the completion value of the entire function to
// throw the exception.
return a("end");if(l.tryLoc<=this.prev){var u=o.call(l,"catchLoc"),p=o.call(l,"finallyLoc");if(u&&p){if(this.prev<l.catchLoc)return a(l.catchLoc,!0);if(this.prev<l.finallyLoc)return a(l.finallyLoc)}else if(u){if(this.prev<l.catchLoc)return a(l.catchLoc,!0)}else if(p){if(this.prev<l.finallyLoc)return a(l.finallyLoc)}else throw Error("try statement without catch or finally")}}},abrupt:function(t,r){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&o.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var s=a;break}}s&&("break"===t||"continue"===t)&&s.tryLoc<=r&&r<=s.finallyLoc&&// location outside the try/catch block.
(s=null);var l=s?s.completion:{};return(l.type=t,l.arg=r,s)?(this.method="next",this.next=s.finallyLoc,y):this.complete(l)},complete:function(t,r){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&r&&(this.next=r),y},finish:function(t){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),O(n),y}},catch:function(t){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc===t){var o=n.completion;if("throw"===o.type){var a=o.arg;O(n)}return a}}// The context.catch method must only be called with a location
// argument that corresponds to a known catch block.
throw Error("illegal catch attempt")},delegateYield:function(t,n,o){return this.delegate={iterator:A(t),resultName:n,nextLoc:o},"next"===this.method&&// accidentally pass it on to the delegate.
(this.arg=r),y}},t}(// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
"object"==typeof r?r.exports:{});try{regeneratorRuntime=o}catch(t){// This module should not be running in strict mode, so the above
// assignment should always work unless something is misconfigured. Just
// in case runtime.js accidentally runs in strict mode, we can escape
// strict mode using a global Function call. This could conceivably fail
// if a Content Security Policy forbids using Function, but in that case
// the proper solution is to fix the accidental strict mode problem. If
// you've misconfigured your bundler to force strict mode and applied a
// CSP to forbid Function, and you're not willing to fix either of those
// problems, please detail your unique predicament in a GitHub issue.
Function("r","regeneratorRuntime = r")(o)}},{}],273:[function(t,r,n){!function(t){if(!t.fetch){var r={searchParams:"URLSearchParams"in t,iterable:"Symbol"in t&&"iterator"in Symbol,blob:"FileReader"in t&&"Blob"in t&&function(){try{return new Blob,!0}catch(t){return!1}}(),formData:"FormData"in t,arrayBuffer:"ArrayBuffer"in t};if(r.arrayBuffer)var n=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],o=function(t){return t&&DataView.prototype.isPrototypeOf(t)},a=ArrayBuffer.isView||function(t){return t&&n.indexOf(Object.prototype.toString.call(t))>-1};d.prototype.append=function(t,r){t=c(t),r=u(r);var n=this.map[t];this.map[t]=n?n+","+r:r},d.prototype.delete=function(t){delete this.map[c(t)]},d.prototype.get=function(t){return t=c(t),this.has(t)?this.map[t]:null},d.prototype.has=function(t){return this.map.hasOwnProperty(c(t))},d.prototype.set=function(t,r){this.map[c(t)]=u(r)},d.prototype.forEach=function(t,r){for(var n in this.map)this.map.hasOwnProperty(n)&&t.call(r,this.map[n],n,this)},d.prototype.keys=function(){var t=[];return this.forEach(function(r,n){t.push(n)}),p(t)},d.prototype.values=function(){var t=[];return this.forEach(function(r){t.push(r)}),p(t)},d.prototype.entries=function(){var t=[];return this.forEach(function(r,n){t.push([n,r])}),p(t)},r.iterable&&(d.prototype[Symbol.iterator]=d.prototype.entries);var s=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];j.prototype.clone=function(){return new j(this,{body:this._bodyInit})},b.call(j.prototype),b.call(S.prototype),S.prototype.clone=function(){return new S(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new d(this.headers),url:this.url})},S.error=function(){var t=new S(null,{status:0,statusText:""});return t.type="error",t};var l=[301,302,303,307,308];S.redirect=function(t,r){if(-1===l.indexOf(r))throw RangeError("Invalid status code");return new S(null,{status:r,headers:{location:t}})},t.Headers=d,t.Request=j,t.Response=S,t.fetch=function(t,n){return new Promise(function(o,a){var s=new j(t,n),l=new XMLHttpRequest;l.onload=function(){var t={status:l.status,statusText:l.statusText,headers:_(l.getAllResponseHeaders()||"")};t.url="responseURL"in l?l.responseURL:t.headers.get("X-Request-URL"),o(new S("response"in l?l.response:l.responseText,t))},l.onerror=function(){a(TypeError("Network request failed"))},l.ontimeout=function(){a(TypeError("Network request failed"))},l.open(s.method,s.url,!0),"include"===s.credentials?l.withCredentials=!0:"omit"===s.credentials&&(l.withCredentials=!1),"responseType"in l&&r.blob&&(l.responseType="blob"),s.headers.forEach(function(t,r){l.setRequestHeader(r,t)}),l.send(void 0===s._bodyInit?null:s._bodyInit)})},t.fetch.polyfill=!0}function c(t){if("string"!=typeof t&&(t=String(t)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(t))throw TypeError("Invalid character in header field name");return t.toLowerCase()}function u(t){return"string"!=typeof t&&(t=String(t)),t}// Build a destructive iterator for the value list
function p(t){var n={next:function(){var r=t.shift();return{done:void 0===r,value:r}}};return r.iterable&&(n[Symbol.iterator]=function(){return n}),n}function d(t){this.map={},t instanceof d?t.forEach(function(t,r){this.append(r,t)},this):Array.isArray(t)?t.forEach(function(t){this.append(t[0],t[1])},this):t&&Object.getOwnPropertyNames(t).forEach(function(r){this.append(r,t[r])},this)}function m(t){if(t.bodyUsed)return Promise.reject(TypeError("Already read"));t.bodyUsed=!0}function f(t){return new Promise(function(r,n){t.onload=function(){r(t.result)},t.onerror=function(){n(t.error)}})}function h(t){var r=new FileReader,n=f(r);return r.readAsArrayBuffer(t),n}function y(t){var r=new FileReader,n=f(r);return r.readAsText(t),n}function g(t){for(var r=new Uint8Array(t),n=Array(r.length),o=0;o<r.length;o++)n[o]=String.fromCharCode(r[o]);return n.join("")}function v(t){if(t.slice)return t.slice(0);var r=new Uint8Array(t.byteLength);return r.set(new Uint8Array(t)),r.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(t){if(this._bodyInit=t,t){if("string"==typeof t)this._bodyText=t;else if(r.blob&&Blob.prototype.isPrototypeOf(t))this._bodyBlob=t;else if(r.formData&&FormData.prototype.isPrototypeOf(t))this._bodyFormData=t;else if(r.searchParams&&URLSearchParams.prototype.isPrototypeOf(t))this._bodyText=t.toString();else if(r.arrayBuffer&&r.blob&&o(t))this._bodyArrayBuffer=v(t.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer]);else if(r.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(t)||a(t)))this._bodyArrayBuffer=v(t);else throw Error("unsupported BodyInit type")}else this._bodyText="";!this.headers.get("content-type")&&("string"==typeof t?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):r.searchParams&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},r.blob&&(this.blob=function(){var t=m(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(!this._bodyFormData)return Promise.resolve(new Blob([this._bodyText]));throw Error("could not read FormData body as blob")},this.arrayBuffer=function(){return this._bodyArrayBuffer?m(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(h)}),this.text=function(){var t=m(this);if(t)return t;if(this._bodyBlob)return y(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(g(this._bodyArrayBuffer));if(!this._bodyFormData)return Promise.resolve(this._bodyText);throw Error("could not read FormData body as text")},r.formData&&(this.formData=function(){return this.text().then(w)}),this.json=function(){return this.text().then(JSON.parse)},this}// HTTP methods whose capitalization should be normalized
function x(t){var r=t.toUpperCase();return s.indexOf(r)>-1?r:t}function j(t,r){var n=(r=r||{}).body;if(t instanceof j){if(t.bodyUsed)throw TypeError("Already read");this.url=t.url,this.credentials=t.credentials,r.headers||(this.headers=new d(t.headers)),this.method=t.method,this.mode=t.mode,n||null==t._bodyInit||(n=t._bodyInit,t.bodyUsed=!0)}else this.url=String(t);if(this.credentials=r.credentials||this.credentials||"omit",(r.headers||!this.headers)&&(this.headers=new d(r.headers)),this.method=x(r.method||this.method||"GET"),this.mode=r.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&n)throw TypeError("Body not allowed for GET or HEAD requests");this._initBody(n)}function w(t){var r=new FormData;return t.trim().split("&").forEach(function(t){if(t){var n=t.split("="),o=n.shift().replace(/\+/g," "),a=n.join("=").replace(/\+/g," ");r.append(decodeURIComponent(o),decodeURIComponent(a))}}),r}function _(t){var r=new d;// Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
return t.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach(function(t){var n=t.split(":"),o=n.shift().trim();if(o){var a=n.join(":").trim();r.append(o,a)}}),r}function S(t,r){r||(r={}),this.type="default",this.status=void 0===r.status?200:r.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in r?r.statusText:"OK",this.headers=new d(r.headers),this.url=r.url||"",this._initBody(t)}}("undefined"!=typeof self?self:this)},{}],274:[function(t,r,n){t("core-js/modules/es.function.name"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.split"),t("core-js/modules/es.function.name"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.split"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o,a=l(t("../core/main")),s=l(t("../color/color_conversion"));function l(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Environment
 * @submodule Environment
 * @for p5
 * @requires core
 */var c=[{h:0,s:0,b:.8275,name:"gray"},{h:0,s:0,b:.8627,name:"gray"},{h:0,s:0,b:.7529,name:"gray"},{h:.0167,s:.1176,b:1,name:"light pink"}],u=[{h:0,s:0,b:0,name:"black"},{h:0,s:0,b:.5,name:"gray"},{h:0,s:0,b:1,name:"white"},{h:0,s:.5,b:.5,name:"dark maroon"},{h:0,s:.5,b:1,name:"salmon pink"},{h:0,s:1,b:0,name:"black"},{h:0,s:1,b:.5,name:"dark red"},{h:0,s:1,b:1,name:"red"},{h:5,s:0,b:1,name:"very light peach"},{h:5,s:.5,b:.5,name:"brown"},{h:5,s:.5,b:1,name:"peach"},{h:5,s:1,b:.5,name:"brick red"},{h:5,s:1,b:1,name:"crimson"},{h:10,s:0,b:1,name:"light peach"},{h:10,s:.5,b:.5,name:"brown"},{h:10,s:.5,b:1,name:"light orange"},{h:10,s:1,b:.5,name:"brown"},{h:10,s:1,b:1,name:"orange"},{h:15,s:0,b:1,name:"very light yellow"},{h:15,s:.5,b:.5,name:"olive green"},{h:15,s:.5,b:1,name:"light yellow"},{h:15,s:1,b:0,name:"dark olive green"},{h:15,s:1,b:.5,name:"olive green"},{h:15,s:1,b:1,name:"yellow"},{h:20,s:0,b:1,name:"very light yellow"},{h:20,s:.5,b:.5,name:"olive green"},{h:20,s:.5,b:1,name:"light yellow green"},{h:20,s:1,b:0,name:"dark olive green"},{h:20,s:1,b:.5,name:"dark yellow green"},{h:20,s:1,b:1,name:"yellow green"},{h:25,s:.5,b:.5,name:"dark yellow green"},{h:25,s:.5,b:1,name:"light green"},{h:25,s:1,b:.5,name:"dark green"},{h:25,s:1,b:1,name:"green"},{h:30,s:.5,b:1,name:"light green"},{h:30,s:1,b:.5,name:"dark green"},{h:30,s:1,b:1,name:"green"},{h:35,s:0,b:.5,name:"light green"},{h:35,s:0,b:1,name:"very light green"},{h:35,s:.5,b:.5,name:"dark green"},{h:35,s:.5,b:1,name:"light green"},{h:35,s:1,b:0,name:"very dark green"},{h:35,s:1,b:.5,name:"dark green"},{h:35,s:1,b:1,name:"green"},{h:40,s:0,b:1,name:"very light green"},{h:40,s:.5,b:.5,name:"dark green"},{h:40,s:.5,b:1,name:"light green"},{h:40,s:1,b:.5,name:"dark green"},{h:40,s:1,b:1,name:"green"},{h:45,s:.5,b:1,name:"light turquoise"},{h:45,s:1,b:.5,name:"dark turquoise"},{h:45,s:1,b:1,name:"turquoise"},{h:50,s:0,b:1,name:"light sky blue"},{h:50,s:.5,b:.5,name:"dark cyan"},{h:50,s:.5,b:1,name:"light cyan"},{h:50,s:1,b:.5,name:"dark cyan"},{h:50,s:1,b:1,name:"cyan"},{h:55,s:0,b:1,name:"light sky blue"},{h:55,s:.5,b:1,name:"light sky blue"},{h:55,s:1,b:.5,name:"dark blue"},{h:55,s:1,b:1,name:"sky blue"},{h:60,s:0,b:.5,name:"gray"},{h:60,s:0,b:1,name:"very light blue"},{h:60,s:.5,b:.5,name:"blue"},{h:60,s:.5,b:1,name:"light blue"},{h:60,s:1,b:.5,name:"navy blue"},{h:60,s:1,b:1,name:"blue"},{h:65,s:0,b:1,name:"lavender"},{h:65,s:.5,b:.5,name:"navy blue"},{h:65,s:.5,b:1,name:"light purple"},{h:65,s:1,b:.5,name:"dark navy blue"},{h:65,s:1,b:1,name:"blue"},{h:70,s:0,b:1,name:"lavender"},{h:70,s:.5,b:.5,name:"navy blue"},{h:70,s:.5,b:1,name:"lavender blue"},{h:70,s:1,b:.5,name:"dark navy blue"},{h:70,s:1,b:1,name:"blue"},{h:75,s:.5,b:1,name:"lavender"},{h:75,s:1,b:.5,name:"dark purple"},{h:75,s:1,b:1,name:"purple"},{h:80,s:.5,b:1,name:"pinkish purple"},{h:80,s:1,b:.5,name:"dark purple"},{h:80,s:1,b:1,name:"purple"},{h:85,s:0,b:1,name:"light pink"},{h:85,s:.5,b:.5,name:"purple"},{h:85,s:.5,b:1,name:"light fuchsia"},{h:85,s:1,b:.5,name:"dark fuchsia"},{h:85,s:1,b:1,name:"fuchsia"},{h:90,s:.5,b:.5,name:"dark fuchsia"},{h:90,s:.5,b:1,name:"hot pink"},{h:90,s:1,b:.5,name:"dark fuchsia"},{h:90,s:1,b:1,name:"fuchsia"},{h:95,s:0,b:1,name:"pink"},{h:95,s:.5,b:1,name:"light pink"},{h:95,s:1,b:.5,name:"dark magenta"},{h:95,s:1,b:1,name:"magenta"}];//stores values for color names
function p(t){var r;//round hue
if(0!==t[0]){t[0]=Math.round(100*t[0]);var n=t[0].toString().split(""),a=n.length-1;n[a]=parseInt(n[a]),n[a]<2.5?n[a]=0:n[a]>=2.5&&n[a]<7.5&&(n[a]=5),2===n.length?(n[0]=parseInt(n[0]),n[a]>=7.5&&(//add one to the tens
n[a]=0,n[0]=n[0]+1),t[0]=10*n[0]+n[1]):n[a]>=7.5?t[0]=10:t[0]=n[a]}//map brightness from 0 to 1
t[2]=t[2]/255;//round saturation and brightness
for(var s=t.length-1;s>=1;s--)t[s]<=.25?t[s]=0:t[s]>.25&&t[s]<.75?t[s]=.5:t[s]=1;//after rounding, if the values are hue 0, saturation 0 and brightness 1
//look at color exceptions which includes several tones from white to gray
if(0===t[0]&&0===t[1]&&1===t[2]){//round original hsb values
for(var l=2;l>=0;l--)o[l]=Math.round(1e4*o[l])/1e4;//compare with the values in the colorExceptions array
for(var p=0;p<c.length;p++)if(c[p].h===o[0]&&c[p].s===o[1]&&c[p].b===o[2]){r=c[p].name;break}else r="white"}else //otherwise, compare with values in colorLookUp
for(var d=0;d<u.length;d++)if(u[d].h===t[0]&&u[d].s===t[1]&&u[d].b===t[2]){r=u[d].name;break}return r}//gets rgba and returs a color name
a.default.prototype._rgbColorName=function(t){//conversts rgba to hsb
var r=s.default._rgbaToHSBA(t);//stores hsb in global variable
return o=r,p([r[0],r[1],r[2]])};var d=a.default;n.default=d},{"../color/color_conversion":280,"../core/main":296,"core-js/modules/es.function.name":185,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.split":214}],275:[function(t,r,n){t("core-js/modules/es.array.concat"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.ends-with"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.ends-with"),t("core-js/modules/es.string.replace"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Environment
 * @submodule Environment
 * @for p5
 * @requires core
 */var s="_Description",l="_fallbackDesc",c="_fallbackTable",u="_fte_",p="_Label",d="_labelDesc",m="_labelTable",f="_lte_";//Fallback container
/*
 *
 * Helper functions for describe() and describeElement().
 *
 */// check that text is not LABEL or FALLBACK and ensure text ends with punctuation mark
function h(t){if("label"===t||"fallback"===t)throw Error("description should not be LABEL or FALLBACK");return t.endsWith(".")||t.endsWith(";")||t.endsWith(",")||t.endsWith("?")||t.endsWith("!")||(t+="."),t}/*
 * Helper functions for describe()
 *//*
 * Helper functions for describeElement().
 *///check that name is not LABEL or FALLBACK and ensure text ends with colon
function y(t){if("label"===t||"fallback"===t)throw Error("element name should not be LABEL or FALLBACK");return t.endsWith(".")||t.endsWith(";")||t.endsWith(",")?t=t.replace(/.$/,":"):t.endsWith(":")||//add ':'' at the end of string
(t+=":"),t}//creates HTML structure for element descriptions
/**
 * Creates a screen reader accessible description for the canvas.
 * The first parameter should be a string with a description of the canvas.
 * The second parameter is optional. If specified, it determines how the
 * description is displayed.
 *
 * <code class="language-javascript">describe(text, LABEL)</code> displays
 * the description to all users as a <a
 * href="https://en.wikipedia.org/wiki/Museum_label" target="_blank">
 * tombstone or exhibit label/caption</a> in a div
 * adjacent to the canvas. You can style it as you wish in your CSS.
 *
 * <code class="language-javascript">describe(text, FALLBACK)</code> makes the
 * description accessible to screen-reader users only, in
 * <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility" target="_blank">
 * a sub DOM inside the canvas element</a>. If a second parameter is not
 * specified, by default, the description will only be available to
 * screen-reader users.
 *
 * @method describe
 * @param  {String} text      description of the canvas
 * @param  {Constant} [display] either LABEL or FALLBACK
 *
 * @example
 * <div>
 * <code>
 * describe('pink square with red heart in the bottom right corner');
 * background('pink');
 * fill('red');
 * noStroke();
 * ellipse(67, 67, 20, 20);
 * ellipse(83, 67, 20, 20);
 * triangle(91, 73, 75, 95, 59, 73);
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let x = 0;
 * function draw() {
 *   if (x > 100) {
 *     x = 0;
 *   }
 *   background(220);
 *   fill(0, 255, 0);
 *   ellipse(x, 50, 40, 40);
 *   x = x + 0.1;
 *   describe('green circle at x pos ' + round(x) + ' moving to the right');
 * }
 * </code>
 * </div>
 *
 */o.default.prototype.describe=function(t,r){if(o.default._validateParameters("describe",arguments),"string"==typeof t){var n=this.canvas.id;//calls function that adds punctuation for better screen reading
t=h(t),this.dummyDOM||(this.dummyDOM=document.getElementById(n).parentNode),this.descriptions||(this.descriptions={}),this.descriptions.fallback?this.descriptions.fallback.innerHTML!==t&&(this.descriptions.fallback.innerHTML=t):this._describeHTML("fallback",t),r===this.LABEL&&(this.descriptions.label?this.descriptions.label.innerHTML!==t&&(this.descriptions.label.innerHTML=t):this._describeHTML("label",t))}},/**
 * This function creates a screen-reader accessible
 * description for elements —shapes or groups of shapes that create
 * meaning together— in the canvas. The first paramater should
 * be the name of the element. The second parameter should be a string
 * with a description of the element. The third parameter is optional.
 * If specified, it determines how the element description is displayed.
 *
 * <code class="language-javascript">describeElement(name, text, LABEL)</code>
 * displays the element description to all users as a
 * <a href="https://en.wikipedia.org/wiki/Museum_label" target="_blank">
 * tombstone or exhibit label/caption</a> in a div
 * adjacent to the canvas. You can style it as you wish in your CSS.
 *
 * <code class="language-javascript">describeElement(name, text, FALLBACK)</code>
 * makes the element description accessible to screen-reader users
 * only, in <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility" target="_blank">
 * a sub DOM inside the canvas element</a>. If a second parameter is not
 * specified, by default, the element description will only be available
 * to screen-reader users.
 *
 * @method describeElement
 * @param  {String} name      name of the element
 * @param  {String} text      description of the element
 * @param  {Constant} [display] either LABEL or FALLBACK
 *
 * @example
 * <div>
 * <code>
 * describe('Heart and yellow circle over pink background');
 * noStroke();
 * background('pink');
 * describeElement('Circle', 'Yellow circle in the top left corner');
 * fill('yellow');
 * ellipse(25, 25, 40, 40);
 * describeElement('Heart', 'red heart in the bottom right corner');
 * fill('red');
 * ellipse(66.6, 66.6, 20, 20);
 * ellipse(83.2, 66.6, 20, 20);
 * triangle(91.2, 72.6, 75, 95, 58.6, 72.6);
 * </code>
 * </div>
 */o.default.prototype.describeElement=function(t,r,n){if(o.default._validateParameters("describeElement",arguments),"string"==typeof r&&"string"==typeof t){var a=this.canvas.id;//calls function that adds punctuation for better screen reading
r=h(r);var s=y(t);//remove any special characters from name to use it as html id
t=t.replace(/[^a-zA-Z0-9]/g,"");var l='<th scope="row">'.concat(s,"</th><td>").concat(r,"</td>");//if there is no dummyDOM
this.dummyDOM||(this.dummyDOM=document.getElementById(a).parentNode),this.descriptions?this.descriptions.fallbackElements||(this.descriptions.fallbackElements={}):this.descriptions={fallbackElements:{}},this.descriptions.fallbackElements[t]?this.descriptions.fallbackElements[t].innerHTML!==l&&(this.descriptions.fallbackElements[t].innerHTML=l):this._describeElementHTML("fallback",t,l),n===this.LABEL&&(this.descriptions.labelElements||(this.descriptions.labelElements={}),this.descriptions.labelElements[t]?this.descriptions.labelElements[t].innerHTML!==l&&(this.descriptions.labelElements[t].innerHTML=l):this._describeElementHTML("label",t,l))}},//creates HTML structure for canvas descriptions
o.default.prototype._describeHTML=function(t,r){var n=this.canvas.id;if("fallback"===t){//if there is no description container
if(this.dummyDOM.querySelector("#".concat(n+s)))//create fallback description <p> before the table
this.dummyDOM.querySelector("#"+n+c).insertAdjacentHTML("beforebegin",'<p id="'.concat(n+l,'"></p>'));else{//if there are no accessible outputs (see textOutput() and gridOutput())
var o='<div id="'.concat(n).concat(s,'" role="region" aria-label="Canvas Description"><p id="').concat(n).concat(l,'"></p></div>');this.dummyDOM.querySelector("#".concat(n,"accessibleOutput"))?this.dummyDOM.querySelector("#".concat(n,"accessibleOutput")).insertAdjacentHTML("beforebegin",o):this.dummyDOM.querySelector("#".concat(n)).innerHTML=o}//if the container for the description exists
this.descriptions.fallback=this.dummyDOM.querySelector("#".concat(n).concat(l)),this.descriptions.fallback.innerHTML=r;return}if("label"===t){//if there is no label container
if(this.dummyDOM.querySelector("#".concat(n+p)))this.dummyDOM.querySelector("#".concat(n+m))&&//create label description <p> before the table
this.dummyDOM.querySelector("#".concat(n+m)).insertAdjacentHTML("beforebegin",'<p id="'.concat(n).concat(d,'"></p>'));else{var a='<div id="'.concat(n).concat(p,'" class="p5Label"><p id="').concat(n).concat(d,'"></p></div>');//if there are no accessible outputs (see textOutput() and gridOutput())
this.dummyDOM.querySelector("#".concat(n,"accessibleOutputLabel"))?this.dummyDOM.querySelector("#".concat(n,"accessibleOutputLabel")).insertAdjacentHTML("beforebegin",a):this.dummyDOM.querySelector("#"+n).insertAdjacentHTML("afterend",a)}this.descriptions.label=this.dummyDOM.querySelector("#"+n+d),this.descriptions.label.innerHTML=r;return}},o.default.prototype._describeElementHTML=function(t,r,n){var o=this.canvas.id;if("fallback"===t){//if there is no description container
if(this.dummyDOM.querySelector("#".concat(o+s)))this.dummyDOM.querySelector("#"+o+c)||//and there is no table create fallback table for element description after
//fallback description
this.dummyDOM.querySelector("#"+o+l).insertAdjacentHTML("afterend",'<table id="'.concat(o).concat(c,'"><caption>Canvas elements and their descriptions</caption></table>'));else{//if there are no accessible outputs (see textOutput() and gridOutput())
var a='<div id="'.concat(o).concat(s,'" role="region" aria-label="Canvas Description"><table id="').concat(o).concat(c,'"><caption>Canvas elements and their descriptions</caption></table></div>');this.dummyDOM.querySelector("#".concat(o,"accessibleOutput"))?this.dummyDOM.querySelector("#".concat(o,"accessibleOutput")).insertAdjacentHTML("beforebegin",a):this.dummyDOM.querySelector("#"+o).innerHTML=a}//create a table row for the element
var h=document.createElement("tr");h.id=o+u+r,this.dummyDOM.querySelector("#"+o+c).appendChild(h),this.descriptions.fallbackElements[r]=this.dummyDOM.querySelector("#".concat(o).concat(u).concat(r)),this.descriptions.fallbackElements[r].innerHTML=n;return}if("label"===t){//If display is LABEL creates a div adjacent to the canvas element with
//a table, a row header cell with the name of the elements,
//and adds the description of the element in adjecent cell.
//if there is no label description container
if(this.dummyDOM.querySelector("#".concat(o+p)))this.dummyDOM.querySelector("#".concat(o+m))||//and there is no table create label table for element description after
//label description
this.dummyDOM.querySelector("#"+o+d).insertAdjacentHTML("afterend",'<table id="'.concat(o+m,'"></table>'));else{//if there are no accessible outputs (see textOutput() and gridOutput())
var y='<div id="'.concat(o).concat(p,'" class="p5Label"><table id="').concat(o).concat(m,'"></table></div>');this.dummyDOM.querySelector("#".concat(o,"accessibleOutputLabel"))?this.dummyDOM.querySelector("#".concat(o,"accessibleOutputLabel")).insertAdjacentHTML("beforebegin",y):this.dummyDOM.querySelector("#"+o).insertAdjacentHTML("afterend",y)}//create a table row for the element label description
var g=document.createElement("tr");g.id=o+f+r,this.dummyDOM.querySelector("#"+o+m).appendChild(g),this.descriptions.labelElements[r]=this.dummyDOM.querySelector("#".concat(o).concat(f).concat(r)),this.descriptions.labelElements[r].innerHTML=n}};var g=o.default;n.default=g},{"../core/main":296,"core-js/modules/es.array.concat":169,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.string.ends-with":206,"core-js/modules/es.string.replace":212}],276:[function(t,r,n){t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.map"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.map"),t("core-js/modules/es.string.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Environment
 * @submodule Environment
 * @for p5
 * @requires core
 */function s(t,r){var n=0,o="",a=Array.from(Array(10),function(){return Array(10)});for(var s in r)for(var l in r[s]){var c=void 0;c="line"!==s?'<a href="#'.concat(t,"shape").concat(n,'">').concat(r[s][l].color," ").concat(s,"</a>"):'<a href="#'.concat(t,"shape").concat(n,'">').concat(r[s][l].color," ").concat(s," midpoint</a>"),a[r[s][l].loc.locY][r[s][l].loc.locX]?a[r[s][l].loc.locY][r[s][l].loc.locX]=a[r[s][l].loc.locY][r[s][l].loc.locX]+"  "+c:a[r[s][l].loc.locY][r[s][l].loc.locX]=c,n++}//make table based on array
for(var u in a){var p="<tr>";for(var d in a[u])p+="<td>",void 0!==a[u][d]&&(p+=a[u][d]),p+="</td>";o=o+p+"</tr>"}return o}//creates grid summary
function l(t,r,n,o){var a="".concat(r," canvas, ").concat(n," by ").concat(o," pixels, contains ").concat(t[0]);return 1===t[0]?"".concat(a," shape: ").concat(t[1]):"".concat(a," shapes: ").concat(t[1])}//creates list of shapes
function c(t,r){var n="",o="",a=0;for(var s in r){var l=0;for(var c in r[s]){//it creates a line in a list
var u='<li id="'.concat(t,"shape").concat(a,'">').concat(r[s][c].color," ").concat(s,",");"line"===s?u+=" location = ".concat(r[s][c].pos,", length = ").concat(r[s][c].length," pixels"):(u+=" location = ".concat(r[s][c].pos),"point"!==s&&(u+=", area = ".concat(r[s][c].area," %")),u+="</li>"),n+=u,l++,a++}o=l>1?"".concat(o," ").concat(l," ").concat(s,"s"):"".concat(o," ").concat(l," ").concat(s)}return{numShapes:[a,o],details:n}}//the functions in this file support updating the grid output
//updates gridOutput
o.default.prototype._updateGridOutput=function(t){//if html structure is not there yet
if(this.dummyDOM.querySelector("#".concat(t,"_summary"))){var r=this._accessibleOutputs[t],n=c(t,this.ingredients.shapes),o=l(n.numShapes,this.ingredients.colors.background,this.width,this.height),a=s(t,this.ingredients.shapes);//create shape details list
o!==r.summary.innerHTML&&(r.summary.innerHTML=o),a!==r.map.innerHTML&&(r.map.innerHTML=a),n.details!==r.shapeDetails.innerHTML&&(r.shapeDetails.innerHTML=n.details),this._accessibleOutputs[t]=r}};var u=o.default;n.default=u},{"../core/main":296,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.from":175,"core-js/modules/es.array.map":181,"core-js/modules/es.string.iterator":208}],277:[function(t,r,n){t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.map"),t("core-js/modules/es.number.to-fixed"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.map"),t("core-js/modules/es.number.to-fixed"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}function s(t){return u(t)||c(t)||l()}function l(){throw TypeError("Invalid attempt to spread non-iterable instance")}function c(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function u(t){if(Array.isArray(t)){for(var r=0,n=Array(t.length);r<t.length;r++)n[r]=t[r];return n}}/**
 * <code class="language-javascript">textOutput()</code> creates a screenreader
 * accessible output that describes the shapes present on the canvas.
 * The general description of the canvas includes canvas size,
 * canvas color, and number of elements in the canvas
 * (example: 'Your output is a, 400 by 400 pixels, lavender blue
 * canvas containing the following 4 shapes:'). This description
 * is followed by a list of shapes where the color, position, and area
 * of each shape are described (example: "orange ellipse at top left
 * covering 1% of the canvas"). Each element can be selected to get
 * more details. A table of elements is also provided. In this table,
 * shape, color, location, coordinates and area are described
 * (example: "orange ellipse location=top left area=2").
 *
 * <code class="language-javascript">textOutput()</code> and <code class="language-javascript">textOutput(FALLBACK)</code>
 * make the output available in <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility" target="_blank">
 * a sub DOM inside the canvas element</a> which is accessible to screen readers.
 * <code class="language-javascript">textOutput(LABEL)</code> creates an
 * additional div with the output adjacent to the canvas, this is useful
 * for non-screen reader users that might want to display the output outside
 * of the canvas' sub DOM as they code. However, using LABEL will create
 * unnecessary redundancy for screen reader users. We recommend using LABEL
 * only as part of the development process of a sketch and removing it before
 * publishing or sharing with screen reader users.
 *
 * @method textOutput
 * @param  {Constant} [display] either FALLBACK or LABEL
 *
 * @example
 * <div>
 * <code>
 * textOutput();
 * background(148, 196, 0);
 * fill(255, 0, 0);
 * ellipse(20, 20, 20, 20);
 * fill(0, 0, 255);
 * rect(50, 50, 50, 50);
 * </code>
 * </div>
 *
 *
 * <div>
 * <code>
 * let x = 0;
 * function draw() {
 *   textOutput();
 *   background(148, 196, 0);
 *   fill(255, 0, 0);
 *   ellipse(x, 20, 20, 20);
 *   fill(0, 0, 255);
 *   rect(50, 50, 50, 50);
 *   ellipse(20, 20, 20, 20);
 *   x += 0.1;
 * }
 * </code>
 * </div>
 *
 */function p(t,r){var n,o;return"rectangle"===t||"ellipse"===t||"arc"===t||"circle"===t||"square"===t?(n=Math.round(r[0]+r[2]/2),o=Math.round(r[1]+r[3]/2)):"triangle"===t?(n=(r[0]+r[2]+r[4])/3,o=(r[1]+r[3]+r[5])/3):"quadrilateral"===t?(n=(r[0]+r[2]+r[4]+r[6])/4,o=(r[1]+r[3]+r[5]+r[7])/4):"line"===t?(n=(r[0]+r[2])/2,o=(r[1]+r[3])/2):(n=r[0],o=r[1]),[n,o]}//gets position of shape in the canvas
function d(t,r,n){var o=10,a=10,s=Math.floor(t[0]/r*o),l=Math.floor(t[1]/n*a);return s===o&&(s-=1),l===a&&(l-=1),{locX:s,locY:l}}//calculates area of shape
o.default.prototype.textOutput=function(t){o.default._validateParameters("textOutput",arguments),this._accessibleOutputs.text||(//make textOutput true
this._accessibleOutputs.text=!0,this._createOutput("textOutput","Fallback"),t===this.LABEL&&(//make textOutput label true
this._accessibleOutputs.textLabel=!0,this._createOutput("textOutput","Label")))},/**
 * <code class="language-javascript">gridOutput()</code> lays out the
 * content of the canvas in the form of a grid (html table) based
 * on the spatial location of each shape. A brief
 * description of the canvas is available before the table output.
 * This description includes: color of the background, size of the canvas,
 * number of objects, and object types (example: "lavender blue canvas is
 * 200 by 200 and contains 4 objects - 3 ellipses 1 rectangle"). The grid
 * describes the content spatially, each element is placed on a cell of the
 * table depending on its position. Within each cell an element the color
 * and type of shape of that element are available (example: "orange ellipse").
 * These descriptions can be selected individually to get more details.
 * A list of elements where shape, color, location, and area are described
 * (example: "orange ellipse location=top left area=1%") is also available.
 *
 * <code class="language-javascript">gridOutput()</code> and <code class="language-javascript">gridOutput(FALLBACK)</code>
 * make the output available in <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility" target="_blank">
 * a sub DOM inside the canvas element</a> which is accessible to screen readers.
 * <code class="language-javascript">gridOutput(LABEL)</code> creates an
 * additional div with the output adjacent to the canvas, this is useful
 * for non-screen reader users that might want to display the output outside
 * of the canvas' sub DOM as they code. However, using LABEL will create
 * unnecessary redundancy for screen reader users. We recommend using LABEL
 * only as part of the development process of a sketch and removing it before
 * publishing or sharing with screen reader users.
 *
 * @method gridOutput
 * @param  {Constant} [display] either FALLBACK or LABEL
 *
 * @example
 * <div>
 * <code>
 * gridOutput();
 * background(148, 196, 0);
 * fill(255, 0, 0);
 * ellipse(20, 20, 20, 20);
 * fill(0, 0, 255);
 * rect(50, 50, 50, 50);
 * </code>
 * </div>
 *
 *
 * <div>
 * <code>
 * let x = 0;
 * function draw() {
 *   gridOutput();
 *   background(148, 196, 0);
 *   fill(255, 0, 0);
 *   ellipse(x, 20, 20, 20);
 *   fill(0, 0, 255);
 *   rect(50, 50, 50, 50);
 *   ellipse(20, 20, 20, 20);
 *   x += 0.1;
 * }
 * </code>
 * </div>
 *
 */o.default.prototype.gridOutput=function(t){o.default._validateParameters("gridOutput",arguments),this._accessibleOutputs.grid||(//make gridOutput true
this._accessibleOutputs.grid=!0,this._createOutput("gridOutput","Fallback"),t===this.LABEL&&(//make gridOutput label true
this._accessibleOutputs.gridLabel=!0,this._createOutput("gridOutput","Label")))},o.default.prototype._addAccsOutput=function(){return this._accessibleOutputs||(this._accessibleOutputs={text:!1,grid:!1,textLabel:!1,gridLabel:!1}),this._accessibleOutputs.grid||this._accessibleOutputs.text},o.default.prototype._createOutput=function(t,r){var n,o,a,s=this.canvas.id;//if there are no ingredients create object. this object stores data for the outputs
this.ingredients||(this.ingredients={shapes:{},colors:{background:"white",fill:"white",stroke:"black"},pShapes:""}),this.dummyDOM||(this.dummyDOM=document.getElementById(s).parentNode);var l="";"Fallback"===r?(n=s+t,o=s+"accessibleOutput",this.dummyDOM.querySelector("#".concat(o))||(this.dummyDOM.querySelector("#".concat(s,"_Description"))?this.dummyDOM.querySelector("#".concat(s,"_Description")).insertAdjacentHTML("afterend",'<div id="'.concat(o,'" role="region" aria-label="Canvas Outputs"></div>')):this.dummyDOM.querySelector("#".concat(s)).innerHTML='<div id="'.concat(o,'" role="region" aria-label="Canvas Outputs"></div>'))):"Label"!==r||(l=r,n=s+t+r,o=s+"accessibleOutput"+r,this.dummyDOM.querySelector("#".concat(o))||(this.dummyDOM.querySelector("#".concat(s,"_Label"))?this.dummyDOM.querySelector("#".concat(s,"_Label")).insertAdjacentHTML("afterend",'<div id="'.concat(o,'"></div>')):this.dummyDOM.querySelector("#".concat(s)).insertAdjacentHTML("afterend",'<div id="'.concat(o,'"></div>')))),this._accessibleOutputs[n]={},"textOutput"===t?(l="#".concat(s,"gridOutput").concat(l),a='<div id="'.concat(n,'">Text Output<div id="').concat(n,'Summary" aria-label="text output summary"><p id="').concat(n,'_summary"></p><ul id="').concat(n,'_list"></ul></div><table id="').concat(n,'_shapeDetails" summary="text output shape details"></table></div>'),this.dummyDOM.querySelector(l)?this.dummyDOM.querySelector(l).insertAdjacentHTML("beforebegin",a):this.dummyDOM.querySelector("#".concat(o)).innerHTML=a,//store output html elements
this._accessibleOutputs[n].list=this.dummyDOM.querySelector("#".concat(n,"_list"))):"gridOutput"===t&&(l="#".concat(s,"textOutput").concat(l),a='<div id="'.concat(n,'">Grid Output<p id="').concat(n,'_summary" aria-label="grid output summary"><table id="').concat(n,'_map" summary="grid output content"></table><ul id="').concat(n,'_shapeDetails" aria-label="grid output shape details"></ul></div>'),this.dummyDOM.querySelector(l)?this.dummyDOM.querySelector(l).insertAdjacentHTML("afterend",a):this.dummyDOM.querySelector("#".concat(o)).innerHTML=a,//store output html elements
this._accessibleOutputs[n].map=this.dummyDOM.querySelector("#".concat(n,"_map"))),this._accessibleOutputs[n].shapeDetails=this.dummyDOM.querySelector("#".concat(n,"_shapeDetails")),this._accessibleOutputs[n].summary=this.dummyDOM.querySelector("#".concat(n,"_summary"))},//accessibleOutputs and calls update functions of outputs
o.default.prototype._updateAccsOutput=function(){var t=this.canvas.id;//if the shapes are not the same as before
JSON.stringify(this.ingredients.shapes)!==this.ingredients.pShapes&&(//save current shapes as string in pShapes
this.ingredients.pShapes=JSON.stringify(this.ingredients.shapes),this._accessibleOutputs.text&&this._updateTextOutput(t+"textOutput"),this._accessibleOutputs.grid&&this._updateGridOutput(t+"gridOutput"),this._accessibleOutputs.textLabel&&this._updateTextOutput(t+"textOutputLabel"),this._accessibleOutputs.gridLabel&&this._updateGridOutput(t+"gridOutputLabel"))},//and saves background color name
o.default.prototype._accsBackground=function(t){//save current shapes as string in pShapes
this.ingredients.pShapes=JSON.stringify(this.ingredients.shapes),this.ingredients.shapes={},this.ingredients.colors.backgroundRGBA!==t&&(this.ingredients.colors.backgroundRGBA=t,this.ingredients.colors.background=this._rgbColorName(t))},o.default.prototype._accsCanvasColors=function(t,r){"fill"===t?this.ingredients.colors.fillRGBA!==r&&(this.ingredients.colors.fillRGBA=r,this.ingredients.colors.fill=this._rgbColorName(r)):"stroke"===t&&this.ingredients.colors.strokeRGBA!==r&&(this.ingredients.colors.strokeRGBA=r,this.ingredients.colors.stroke=this._rgbColorName(r))},o.default.prototype._accsOutput=function(t,r){"ellipse"===t&&r[2]===r[3]?t="circle":"rectangle"===t&&r[2]===r[3]&&(t="square");var n={},o=!0,a=p(t,r);if("line"===t){//make color stroke
n.color=this.ingredients.colors.stroke,n.length=Math.round(this.dist(r[0],r[1],r[2],r[3]));var l=this._getPos(r[0],[1]),c=this._getPos(r[2],[3]);n.loc=d(a,this.width,this.height),l===c?n.pos="at ".concat(l):n.pos="from ".concat(l," to ").concat(c)}else"point"===t?n.color=this.ingredients.colors.stroke:(//make color fill
n.color=this.ingredients.colors.fill,n.area=this._getArea(t,r)),//calculate position using middle of shape
n.pos=this._getPos.apply(this,s(a)),n.loc=d(a,this.width,this.height);//if it is the first time this shape is created
if(this.ingredients.shapes[t]){if(this.ingredients.shapes[t]!==[n]){//for every shape of this type
for(var u in this.ingredients.shapes[t])JSON.stringify(this.ingredients.shapes[t][u])===JSON.stringify(n)&&(o=!1);//add shape by pushing it to the end
!0===o&&this.ingredients.shapes[t].push(n)}}else this.ingredients.shapes[t]=[n];//if other shapes of this type have been created
},o.default.prototype._getPos=function(t,r){var n=new DOMPointReadOnly(t,r),o=this._renderer.isP3D?new DOMMatrix(this._renderer.uMVMatrix.mat4):this.drawingContext.getTransform(),a=n.matrixTransform(o),s=a.x,l=a.y,c=this.width,u=this.height;return s<.4*c?l<.4*u?"top left":l>.6*u?"bottom left":"mid left":s>.6*c?l<.4*u?"top right":l>.6*u?"bottom right":"mid right":l<.4*u?"top middle":l>.6*u?"bottom middle":"middle"},o.default.prototype._getArea=function(t,r){var n=0;if("arc"===t){// area of full ellipse = PI * horizontal radius * vertical radius.
// therefore, area of arc = difference bet. arc's start and end radians * horizontal radius * vertical radius.
// the below expression is adjusted for negative values and differences in arc's start and end radians over PI*2
var o=((r[5]-r[4])%(2*Math.PI)+2*Math.PI)%(2*Math.PI);if(n=o*r[2]*r[3]/8,"open"===r[6]||"chord"===r[6]){// when the arc's mode is OPEN or CHORD, we need to account for the area of the triangle that is formed to close the arc
// (Ax( By −  Cy) + Bx(Cy − Ay) + Cx(Ay − By ) )/2
var a=r[0],s=r[1],l=r[0]+r[2]/2*Math.cos(r[4]).toFixed(2),c=r[1]+r[3]/2*Math.sin(r[4]).toFixed(2),u=r[0]+r[2]/2*Math.cos(r[5]).toFixed(2),p=r[1]+r[3]/2*Math.sin(r[5]).toFixed(2),d=Math.abs(a*(c-p)+l*(p-s)+u*(s-c))/2;o>Math.PI?n+=d:n-=d}}else"ellipse"===t||"circle"===t?n=3.14*r[2]/2*r[3]/2:"line"===t?n=0:"point"===t?n=0:"quadrilateral"===t?n=Math.abs((r[6]+r[0])*(r[7]-r[1])+(r[0]+r[2])*(r[1]-r[3])+(r[2]+r[4])*(r[3]-r[5])+(r[4]+r[6])*(r[5]-r[7]))/2:"rectangle"===t||"square"===t?n=r[2]*r[3]:"triangle"===t&&(n=Math.abs(r[0]*(r[3]-r[5])+r[2]*(r[5]-r[1])+r[4]*(r[1]-r[3]))/2);// (Ax( By −  Cy) + Bx(Cy − Ay) + Cx(Ay − By ))/2
//  Store the positions of the canvas corners
var m=this.width*this._pixelDensity,f=this.height*this._pixelDensity,h=[new DOMPoint(0,0),new DOMPoint(m,0),new DOMPoint(m,f),new DOMPoint(0,f)],y=(this._renderer.isP3D?new DOMMatrix(this._renderer.uMVMatrix.mat4):this.drawingContext.getTransform()).inverse(),g=h.map(function(t){return t.matrixTransform(y)});return Math.round(100*n/(Math.abs((g[3].x+g[0].x)*(g[3].y-g[0].y)+(g[0].x+g[1].x)*(g[0].y-g[1].y)+(g[1].x+g[2].x)*(g[1].y-g[2].y)+(g[2].x+g[3].x)*(g[2].y-g[3].y))/2))};var m=o.default;n.default=m},{"../core/main":296,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.fill":172,"core-js/modules/es.array.from":175,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.map":181,"core-js/modules/es.number.to-fixed":191,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/web.dom-collections.iterator":254}],278:[function(t,r,n){t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.concat"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Environment
 * @submodule Environment
 * @for p5
 * @requires core
 */function s(t,r,n,o){var a="Your output is a, ".concat(n," by ").concat(o," pixels, ").concat(r," canvas containing the following");return 1===t?"".concat(a," shape:"):"".concat(a," ").concat(t," shapes:")}//Builds textOutput table with shape details
function l(t,r){var n="",o=0;for(var a in r)for(var s in r[a]){//it creates a table row
var l='<tr id="'.concat(t,"shape").concat(o,'"><th>').concat(r[a][s].color," ").concat(a,"</th>");"line"===a?l+="<td>location = ".concat(r[a][s].pos,"</td><td>length = ").concat(r[a][s].length," pixels</td></tr>"):(l+="<td>location = ".concat(r[a][s].pos,"</td>"),"point"!==a&&(l+="<td> area = ".concat(r[a][s].area,"%</td>")),l+="</tr>"),n+=l,o++}return n}//Builds textOutput shape list
function c(t,r){var n="",o=0;for(var a in r)for(var s in r[a]){//it creates a line in a list
var l='<li><a href="#'.concat(t,"shape").concat(o,'">').concat(r[a][s].color," ").concat(a,"</a>");"line"===a?l+=", ".concat(r[a][s].pos,", ").concat(r[a][s].length," pixels long.</li>"):(l+=", at ".concat(r[a][s].pos),"point"!==a&&(l+=", covering ".concat(r[a][s].area,"% of the canvas")),l+=".</li>"),n+=l,o++}return{numShapes:o,listShapes:n}}//the functions in this file support updating the text output
//updates textOutput
o.default.prototype._updateTextOutput=function(t){//if html structure is not there yet
if(this.dummyDOM.querySelector("#".concat(t,"_summary"))){var r=this._accessibleOutputs[t],n=c(t,this.ingredients.shapes),o=s(n.numShapes,this.ingredients.colors.background,this.width,this.height),a=l(t,this.ingredients.shapes);//create shape list
o!==r.summary.innerHTML&&(r.summary.innerHTML=o),n.listShapes!==r.list.innerHTML&&(r.list.innerHTML=n.listShapes),a!==r.shapeDetails.innerHTML&&(r.shapeDetails.innerHTML=a),this._accessibleOutputs[t]=r}};var u=o.default;n.default=u},{"../core/main":296,"core-js/modules/es.array.concat":169}],279:[function(t,r,n){var o=a(t("./core/main"));function a(t){return t&&t.__esModule?t:{default:t}}// core
t("./core/constants"),t("./core/environment"),t("./core/friendly_errors/stacktrace"),t("./core/friendly_errors/validate_params"),t("./core/friendly_errors/file_errors"),t("./core/friendly_errors/fes_core"),t("./core/friendly_errors/sketch_reader"),t("./core/helpers"),t("./core/legacy"),t("./core/preload"),t("./core/p5.Element"),t("./core/p5.Graphics"),t("./core/p5.Renderer"),t("./core/p5.Renderer2D"),t("./core/rendering"),t("./core/shim"),t("./core/structure"),t("./core/transform"),t("./core/shape/2d_primitives"),t("./core/shape/attributes"),t("./core/shape/curves"),t("./core/shape/vertex"),t("./accessibility/outputs"),t("./accessibility/textOutput"),t("./accessibility/gridOutput"),t("./accessibility/color_namer"),t("./color/color_conversion"),t("./color/creating_reading"),t("./color/p5.Color"),t("./color/setting"),t("./data/p5.TypedDict"),t("./data/local_storage.js"),t("./dom/dom"),t("./accessibility/describe"),t("./events/acceleration"),t("./events/keyboard"),t("./events/mouse"),t("./events/touch"),t("./image/filters"),t("./image/image"),t("./image/loading_displaying"),t("./image/p5.Image"),t("./image/pixels"),t("./io/files"),t("./io/p5.Table"),t("./io/p5.TableRow"),t("./io/p5.XML"),t("./math/calculation"),t("./math/math"),t("./math/noise"),t("./math/p5.Vector"),t("./math/random"),t("./math/trigonometry"),t("./typography/attributes"),t("./typography/loading_displaying"),t("./typography/p5.Font"),t("./utilities/array_functions"),t("./utilities/conversion"),t("./utilities/string_functions"),t("./utilities/time_date"),t("./webgl/3d_primitives"),t("./webgl/interaction"),t("./webgl/light"),t("./webgl/loading"),t("./webgl/material"),t("./webgl/p5.Camera"),t("./webgl/p5.Geometry"),t("./webgl/p5.Matrix"),t("./webgl/p5.RendererGL.Immediate"),t("./webgl/p5.RendererGL"),t("./webgl/p5.RendererGL.Retained"),t("./webgl/p5.Framebuffer"),t("./webgl/p5.Shader"),t("./webgl/p5.RenderBuffer"),t("./webgl/p5.Texture"),t("./webgl/text"),t("./core/init"),//accessibility
// color
// data
// DOM
// accessibility
// events
// image
// io
// math
// typography
// utilities
// webgl
r.exports=o.default},{"./accessibility/color_namer":274,"./accessibility/describe":275,"./accessibility/gridOutput":276,"./accessibility/outputs":277,"./accessibility/textOutput":278,"./color/color_conversion":280,"./color/creating_reading":281,"./color/p5.Color":282,"./color/setting":283,"./core/constants":284,"./core/environment":285,"./core/friendly_errors/fes_core":287,"./core/friendly_errors/file_errors":288,"./core/friendly_errors/sketch_reader":289,"./core/friendly_errors/stacktrace":290,"./core/friendly_errors/validate_params":291,"./core/helpers":292,"./core/init":293,"./core/legacy":295,"./core/main":296,"./core/p5.Element":297,"./core/p5.Graphics":298,"./core/p5.Renderer":299,"./core/p5.Renderer2D":300,"./core/preload":301,"./core/rendering":302,"./core/shape/2d_primitives":303,"./core/shape/attributes":304,"./core/shape/curves":305,"./core/shape/vertex":306,"./core/shim":307,"./core/structure":308,"./core/transform":309,"./data/local_storage.js":310,"./data/p5.TypedDict":311,"./dom/dom":312,"./events/acceleration":313,"./events/keyboard":314,"./events/mouse":315,"./events/touch":316,"./image/filters":317,"./image/image":318,"./image/loading_displaying":319,"./image/p5.Image":320,"./image/pixels":321,"./io/files":322,"./io/p5.Table":323,"./io/p5.TableRow":324,"./io/p5.XML":325,"./math/calculation":326,"./math/math":327,"./math/noise":328,"./math/p5.Vector":329,"./math/random":330,"./math/trigonometry":331,"./typography/attributes":332,"./typography/loading_displaying":333,"./typography/p5.Font":334,"./utilities/array_functions":335,"./utilities/conversion":336,"./utilities/string_functions":337,"./utilities/time_date":338,"./webgl/3d_primitives":339,"./webgl/interaction":340,"./webgl/light":341,"./webgl/loading":342,"./webgl/material":343,"./webgl/p5.Camera":344,"./webgl/p5.Framebuffer":345,"./webgl/p5.Geometry":346,"./webgl/p5.Matrix":347,"./webgl/p5.RenderBuffer":348,"./webgl/p5.RendererGL":351,"./webgl/p5.RendererGL.Immediate":349,"./webgl/p5.RendererGL.Retained":350,"./webgl/p5.Shader":352,"./webgl/p5.Texture":353,"./webgl/text":354}],280:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Color
 * @submodule Color Conversion
 * @for p5
 * @requires core
 *//**
 * Conversions adapted from <http://www.easyrgb.com/en/math.php>.
 *
 * In these functions, hue is always in the range [0, 1], just like all other
 * components are in the range [0, 1]. 'Brightness' and 'value' are used
 * interchangeably.
 */o.default.ColorConversion={/**
   * Convert an HSBA array to HSLA.
   */_hsbaToHSLA:function(t){var r=t[0],n=t[1],o=t[2],a=(2-n)*o/2;return 0!==a&&(1===a?n=0:a<.5?n/=2-n:n=n*o/(2-2*a)),[r,n,a,t[3]]},/**
   * Convert an HSBA array to RGBA.
   */_hsbaToRGBA:function(t){var r=6*t[0],n=t[1],o=t[2],a=[];// We will split hue into 6 sectors.
if(0===n)a=[o,o,o,t[3]];// Return early if grayscale.
else{var s,l,c,u=Math.floor(r),p=o*(1-n),d=o*(1-n*(r-u)),m=o*(1-n*(1+u-r));1===u?(// Yellow to green.
s=d,l=o,c=p):2===u?(// Green to cyan.
s=p,l=o,c=m):3===u?(// Cyan to blue.
s=p,l=d,c=o):4===u?(// Blue to magenta.
s=m,l=p,c=o):5===u?(// Magenta to red.
s=o,l=p,c=d):(// Red to yellow (sector could be 0 or 6).
s=o,l=m,c=p),a=[s,l,c,t[3]]}return a},/**
   * Convert an HSLA array to HSBA.
   */_hslaToHSBA:function(t){var r,n=t[0],o=t[1],a=t[2];return[n,// Convert saturation.
o=2*((r=a<.5?(1+o)*a:a+o-a*o)-a)/r,r,t[3]]},/**
   * Convert an HSLA array to RGBA.
   *
   * We need to change basis from HSLA to something that can be more easily be
   * projected onto RGBA. We will choose hue and brightness as our first two
   * components, and pick a convenient third one ('zest') so that we don't need
   * to calculate formal HSBA saturation.
   */_hslaToRGBA:function(t){var r=6*t[0],n=t[1],o=t[2],a=[];// We will split hue into 6 sectors.
if(0===n)a=[o,o,o,t[3]];// Return early if grayscale.
else{s=o<.5?(1+n)*o:o+n-o*n;// Define zest.
var s,l=2*o-s,c=function(t,r,n){return(t<0?t+=6:t>=6&&(t-=6),t<1)?r+(n-r)*t:t<3?n:t<4?r+(n-r)*(4-t):r};// Implement projection (project onto green by default).
a=[c(r+2,l,s),c(r,l,s),c(r-2,l,s),t[3]]}return a},/**
   * Convert an RGBA array to HSBA.
   */_rgbaToHSBA:function(t){var r,n,o=t[0],a=t[1],s=t[2],l=Math.max(o,a,s),c=l-Math.min(o,a,s);return 0===c?(// Return early if grayscale.
r=0,n=0):(n=c/l,o===l?r=(a-s)/c:a===l?r=2+(s-o)/c:s===l&&(r=4+(o-a)/c),r<0?r+=6:r>=6&&(r-=6)),[r/6,n,l,t[3]]},/**
   * Convert an RGBA array to HSLA.
   */_rgbaToHSLA:function(t){var r,n,o=t[0],a=t[1],s=t[2],l=Math.max(o,a,s),c=Math.min(o,a,s),u=l+c,p=l-c;return 0===p?(// Return early if grayscale.
r=0,n=0):(n=u<1?p/u:p/(2-u),o===l?r=(a-s)/p:a===l?r=2+(s-o)/p:s===l&&(r=4+(o-a)/p),r<0?r+=6:r>=6&&(r-=6)),[r/6,n,u/2,t[3]]}};var s=o.default.ColorConversion;n.default=s},{"../core/main":296}],281:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.map"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.array.map"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=p(t("../core/main")),l=u(t("../core/constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Color
 * @submodule Creating & Reading
 * @for p5
 * @requires core
 * @requires constants
 */t("./p5.Color"),t("../core/friendly_errors/validate_params"),t("../core/friendly_errors/file_errors"),t("../core/friendly_errors/fes_core"),/**
 * Extracts the alpha (transparency) value from a
 * <a href="#/p5.Color">p5.Color</a> object, array of color components, or
 * CSS color string.
 *
 * @method alpha
 * @param {p5.Color|Number[]|String} color <a href="#/p5.Color">p5.Color</a> object, array of
 *                                         color components, or CSS color string.
 * @return {Number} the alpha value.
 *
 * @example
 * <div>
 * <code>
 * noStroke();
 * const c = color(0, 126, 255, 102);
 * fill(c);
 * rect(15, 15, 35, 70);
 * // Sets 'alphaValue' to 102.
 * const alphaValue = alpha(c);
 * fill(alphaValue);
 * rect(50, 15, 35, 70);
 * describe('Two rectangles. The left one is light blue and the right one is charcoal gray.');
 * </code>
 * </div>
 */s.default.prototype.alpha=function(t){return s.default._validateParameters("alpha",arguments),this.color(t)._getAlpha()},/**
 * Extracts the blue value from a <a href="#/p5.Color">p5.Color</a> object,
 * array of color components, or CSS color string.
 *
 * @method blue
 * @param {p5.Color|Number[]|String} color <a href="#/p5.Color">p5.Color</a> object, array of
 *                                         color components, or CSS color string.
 * @return {Number} the blue value.
 * @example
 * <div>
 * <code>
 * const c = color(175, 100, 220);
 * fill(c);
 * rect(15, 20, 35, 60);
 * // Sets 'blueValue' to 220.
 * const blueValue = blue(c);
 * fill(0, 0, blueValue);
 * rect(50, 20, 35, 60);
 * describe('Two rectangles. The left one is light purple and the right one is royal blue.');
 * </code>
 * </div>
 *
 */s.default.prototype.blue=function(t){return s.default._validateParameters("blue",arguments),this.color(t)._getBlue()},/**
 * Extracts the HSB brightness value from a
 * <a href="#/p5.Color">p5.Color</a> object, array of color components, or
 * CSS color string.
 *
 * @method brightness
 * @param {p5.Color|Number[]|String} color <a href="#/p5.Color">p5.Color</a> object, array of
 *                                         color components, or CSS color string.
 * @return {Number} the brightness value.
 *
 * @example
 * <div>
 * <code>
 * noStroke();
 * colorMode(HSB, 255);
 * const c = color(0, 126, 255);
 * fill(c);
 * rect(15, 20, 35, 60);
 * // Sets 'brightValue' to 255.
 * const brightValue = brightness(c);
 * fill(brightValue);
 * rect(50, 20, 35, 60);
 * describe('Two rectangles. The left one is salmon pink and the right one is white.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * noStroke();
 * colorMode(HSB, 255);
 * const c = color('hsb(60, 100%, 50%)');
 * fill(c);
 * rect(15, 20, 35, 60);
 * // Sets 'brightValue' to 127.5 (50% of 255)
 * const brightValue = brightness(c);
 * fill(brightValue);
 * rect(50, 20, 35, 60);
 * describe('Two rectangles. The left one is olive and the right one is gray.');
 * </code>
 * </div>
 */s.default.prototype.brightness=function(t){return s.default._validateParameters("brightness",arguments),this.color(t)._getBrightness()},/**
 * Creates a <a href="#/p5/p5.Color">p5.Color</a> object. By default, the
 * parameters are interpreted as RGB values. Calling `color(255, 204, 0)` will
 * return a bright yellow color. The way these parameters are interpreted may
 * be changed with the <a href="#/p5/colorMode">colorMode()</a> function.
 *
 * The version of `color()` with one parameter interprets the value one of two
 * ways. If the parameter is a number, it's interpreted as a grayscale value.
 * If the parameter is a string, it's interpreted as a CSS color string.
 *
 * The version of `color()` with two parameters interprets the first one as a
 * grayscale value. The second parameter sets the alpha (transparency) value.
 *
 * The version of `color()` with three parameters interprets them as RGB, HSB,
 * or HSL colors, depending on the current `colorMode()`.
 *
 * The version of `color()` with four parameters interprets them as RGBA, HSBA,
 * or HSLA colors, depending on the current `colorMode()`. The last parameter
 * sets the alpha (transparency) value.
 *
 * @method color
 * @param  {Number} gray number specifying value between white and black.
 * @param  {Number} [alpha] alpha value relative to current color range
 *                                 (default is 0-255).
 * @return {p5.Color} resulting color.
 *
 * @example
 * <div>
 * <code>
 * const c = color(255, 204, 0);
 * fill(c);
 * noStroke();
 * rect(30, 20, 55, 55);
 * describe('A yellow rectangle on a gray canvas.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // RGB values.
 * let c = color(255, 204, 0);
 * fill(c);
 * noStroke();
 * circle(25, 25, 80);
 * // A grayscale value.
 * c = color(65);
 * fill(c);
 * circle(75, 75, 80);
 * describe(
 *   'Two ellipses. The circle in the top-left corner is yellow and the one at the bottom-right is gray.'
 * );
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // A CSS named color.
 * const c = color('magenta');
 * fill(c);
 * noStroke();
 * square(20, 20, 60);
 * describe('A magenta square on a gray canvas.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // CSS hex color codes.
 * noStroke();
 * let c = color('#0f0');
 * fill(c);
 * rect(0, 10, 45, 80);
 * c = color('#00ff00');
 * fill(c);
 * rect(55, 10, 45, 80);
 * describe('Two bright green rectangles on a gray canvas.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // RGB and RGBA color strings.
 * noStroke();
 * let c = color('rgb(0,0,255)');
 * fill(c);
 * square(10, 10, 35);
 * c = color('rgb(0%, 0%, 100%)');
 * fill(c);
 * square(55, 10, 35);
 * c = color('rgba(0, 0, 255, 1)');
 * fill(c);
 * square(10, 55, 35);
 * c = color('rgba(0%, 0%, 100%, 1)');
 * fill(c);
 * square(55, 55, 35);
 * describe('Four blue squares in corners of a gray canvas.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // HSL and HSLA color strings.
 * let c = color('hsl(160, 100%, 50%)');
 * noStroke();
 * fill(c);
 * rect(0, 10, 45, 80);
 * c = color('hsla(160, 100%, 50%, 0.5)');
 * fill(c);
 * rect(55, 10, 45, 80);
 * describe('Two sea green rectangles. A darker rectangle on the left and a brighter one on the right.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // HSB and HSBA color strings.
 * let c = color('hsb(160, 100%, 50%)');
 * noStroke();
 * fill(c);
 * rect(0, 10, 45, 80);
 * c = color('hsba(160, 100%, 50%, 0.5)');
 * fill(c);
 * rect(55, 10, 45, 80);
 * describe('Two green rectangles. A darker rectangle on the left and a brighter one on the right.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Changing color modes.
 * noStroke();
 * let c = color(50, 55, 100);
 * fill(c);
 * rect(0, 10, 45, 80);
 * colorMode(HSB, 100);
 * c = color(50, 55, 100);
 * fill(c);
 * rect(55, 10, 45, 80);
 * describe('Two blue rectangles. A darker rectangle on the left and a brighter one on the right.');
 * </code>
 * </div>
 *//**
 * @method color
 * @param  {Number}        v1      red or hue value relative to
 *                                 the current color range.
 * @param  {Number}        v2      green or saturation value
 *                                 relative to the current color range.
 * @param  {Number}        v3      blue or brightness value
 *                                 relative to the current color range.
 * @param  {Number}        [alpha]
 * @return {p5.Color}
 *//**
 * @method color
 * @param  {String}        value   a color string.
 * @return {p5.Color}
 *//**
 * @method color
 * @param  {Number[]}      values  an array containing the red, green, blue,
 *                                 and alpha components of the color.
 * @return {p5.Color}
 *//**
 * @method color
 * @param  {p5.Color}     color
 * @return {p5.Color}
 */s.default.prototype.color=function(){if(s.default._validateParameters("color",arguments),arguments[0]instanceof s.default.Color)return arguments[0];// Do nothing if argument is already a color object.
var t=arguments[0]instanceof Array?arguments[0]:arguments;return new s.default.Color(this,t)},/**
 * Extracts the green value from a <a href="#/p5.Color">p5.Color</a> object,
 * array of color components, or CSS color string.
 *
 * @method green
 * @param {p5.Color|Number[]|String} color <a href="#/p5.Color">p5.Color</a> object, array of
 *                                         color components, or CSS color string.
 * @return {Number} the green value.
 * @example
 * <div>
 * <code>
 * const c = color(20, 75, 200);
 * fill(c);
 * rect(15, 20, 35, 60);
 * // Sets 'greenValue' to 75.
 * const greenValue = green(c);
 * fill(0, greenValue, 0);
 * rect(50, 20, 35, 60);
 * describe('Two rectangles. The rectangle on the left is blue and the one on the right is green.');
 * </code>
 * </div>
 */s.default.prototype.green=function(t){return s.default._validateParameters("green",arguments),this.color(t)._getGreen()},/**
 * Extracts the hue value from a
 * <a href="#/p5.Color">p5.Color</a> object, array of color components, or
 * CSS color string.
 *
 * Hue exists in both HSB and HSL. It describes a color's position on the
 * color wheel. By default, this function returns the HSL-normalized hue. If
 * the <a href="#/colorMode">colorMode()</a> is set to HSB, it returns the
 * HSB-normalized hue.
 *
 * @method hue
 * @param {p5.Color|Number[]|String} color <a href="#/p5.Color">p5.Color</a> object, array of
 *                                         color components, or CSS color string.
 * @return {Number} the hue
 * @example
 * <div>
 * <code>
 * noStroke();
 * colorMode(HSB, 255);
 * const c = color(0, 126, 255);
 * fill(c);
 * rect(15, 20, 35, 60);
 * // Sets 'hueValue' to 0.
 * const hueValue = hue(c);
 * fill(hueValue);
 * rect(50, 20, 35, 60);
 * describe(
 *   'Two rectangles. The rectangle on the left is salmon pink and the one on the right is black.'
 * );
 * </code>
 * </div>
 *
 */s.default.prototype.hue=function(t){return s.default._validateParameters("hue",arguments),this.color(t)._getHue()},/**
 * Blends two colors to find a third color between them. The `amt` parameter
 * specifies the amount to interpolate between the two values. 0 is equal to
 * the first color, 0.1 is very near the first color, 0.5 is halfway between
 * the two colors, and so on. Negative numbers are set to 0. Numbers greater
 * than 1 are set to 1. This differs from the behavior of
 * <a href="#/lerp">lerp</a>. It's necessary because numbers outside of the
 * interval [0, 1] will produce strange and unexpected colors.
 *
 * The way that colors are interpolated depends on the current
 * <a href="#/colorMode">colorMode()</a>.
 *
 * @method lerpColor
 * @param  {p5.Color} c1  interpolate from this color.
 * @param  {p5.Color} c2  interpolate to this color.
 * @param  {Number}       amt number between 0 and 1.
 * @return {p5.Color}     interpolated color.
 *
 * @example
 * <div>
 * <code>
 * colorMode(RGB);
 * stroke(255);
 * background(51);
 * const from = color(218, 165, 32);
 * const to = color(72, 61, 139);
 * colorMode(RGB);
 * const interA = lerpColor(from, to, 0.33);
 * const interB = lerpColor(from, to, 0.66);
 * fill(from);
 * rect(10, 20, 20, 60);
 * fill(interA);
 * rect(30, 20, 20, 60);
 * fill(interB);
 * rect(50, 20, 20, 60);
 * fill(to);
 * rect(70, 20, 20, 60);
 * describe(
 *   'Four rectangles with white edges. From left to right, the rectangles are tan, brown, brownish purple, and purple.'
 * );
 * </code>
 * </div>
 */s.default.prototype.lerpColor=function(t,r,n){s.default._validateParameters("lerpColor",arguments);var o,a,c,u,p,d,m=this._colorMode,f=this._colorMaxes;if(m===l.RGB)p=t.levels.map(function(t){return t/255}),d=r.levels.map(function(t){return t/255});else if(m===l.HSB)t._getBrightness(),r._getBrightness(),p=t.hsba,d=r.hsba;else if(m===l.HSL)t._getLightness(),r._getLightness(),p=t.hsla,d=r.hsla;else throw Error("".concat(m,"cannot be used for interpolation."));return(// Prevent extrapolation.
n=Math.max(Math.min(n,1),0),void 0===this.lerp&&(this.lerp=function(t,r,n){return n*(r-t)+t}),// Perform interpolation.
o=this.lerp(p[0],d[0],n),a=this.lerp(p[1],d[1],n),c=this.lerp(p[2],d[2],n),u=this.lerp(p[3],d[3],n),o*=f[m][0],a*=f[m][1],c*=f[m][2],u*=f[m][3],this.color(o,a,c,u))},/**
 * Extracts the HSL lightness value from a
 * <a href="#/p5.Color">p5.Color</a> object, array of color components, or
 * CSS color string.
 *
 * @method lightness
 * @param {p5.Color|Number[]|String} color <a href="#/p5.Color">p5.Color</a> object, array of
 *                                         color components, or CSS color string.
 * @return {Number} the lightness
 *
 * @example
 * <div>
 * <code>
 * noStroke();
 * colorMode(HSL);
 * const c = color(156, 100, 50, 1);
 * fill(c);
 * rect(15, 20, 35, 60);
 * // Sets 'lightValue' to 50.
 * const lightValue = lightness(c);
 * fill(lightValue);
 * rect(50, 20, 35, 60);
 * describe('Two rectangles. The rectangle on the left is light green and the one on the right is gray.');
 * </code>
 * </div>
 */s.default.prototype.lightness=function(t){return s.default._validateParameters("lightness",arguments),this.color(t)._getLightness()},/**
 * Extracts the red value from a
 * <a href="#/p5.Color">p5.Color</a> object, array of color components, or
 * CSS color string.
 *
 * @method red
 * @param {p5.Color|Number[]|String} color <a href="#/p5.Color">p5.Color</a> object, array of
 *                                         color components, or CSS color string.
 * @return {Number} the red value.
 * @example
 * <div>
 * <code>
 * const c = color(255, 204, 0);
 * fill(c);
 * rect(15, 20, 35, 60);
 * // Sets 'redValue' to 255.
 * const redValue = red(c);
 * fill(redValue, 0, 0);
 * rect(50, 20, 35, 60);
 * describe(
 *   'Two rectangles with black edges. The rectangle on the left is yellow and the one on the right is red.'
 * );
 * </code>
 * </div>
 */s.default.prototype.red=function(t){return s.default._validateParameters("red",arguments),this.color(t)._getRed()},/**
 * Extracts the saturation value from a
 * <a href="#/p5.Color">p5.Color</a> object, array of color components, or
 * CSS color string.
 *
 * Saturation is scaled differently in HSB and HSL. By default, this function
 * returns the HSL saturation. If the <a href="#/colorMode">colorMode()</a>
 * is set to HSB, it returns the HSB saturation.
 *
 * @method saturation
 * @param {p5.Color|Number[]|String} color <a href="#/p5.Color">p5.Color</a> object, array of
 *                                         color components, or CSS color string.
 * @return {Number} the saturation value
 * @example
 * <div>
 * <code>
 * noStroke();
 * colorMode(HSB, 255);
 * const c = color(0, 126, 255);
 * fill(c);
 * rect(15, 20, 35, 60);
 * // Sets 'satValue' to 126.
 * const satValue = saturation(c);
 * fill(satValue);
 * rect(50, 20, 35, 60);
 * describe(
 *   'Two rectangles. The rectangle on the left is deep pink and the one on the right is gray.'
 * );
 * </code>
 * </div>
 */s.default.prototype.saturation=function(t){return s.default._validateParameters("saturation",arguments),this.color(t)._getSaturation()};var d=s.default;n.default=d},{"../core/constants":284,"../core/friendly_errors/fes_core":287,"../core/friendly_errors/file_errors":288,"../core/friendly_errors/validate_params":291,"../core/main":296,"./p5.Color":282,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.map":181,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],282:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.constructor"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.trim"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.constructor"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.trim"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=d(t("../core/main")),l=p(t("../core/constants")),c=d(t("./color_conversion"));function u(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return u=function(){return t},t}function p(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=u();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function d(t){return t&&t.__esModule?t:{default:t}}function m(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function f(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function h(t,r,n){return r&&f(t.prototype,r),n&&f(t,n),t}/**
 * CSS named colors.
 */var y={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},g=/\s*/,v=/(\d{1,3})/,b=/((?:\d+(?:\.\d+)?)|(?:\.\d+))/,x=new RegExp("".concat(b.source,"%")),j={// Match colors in format #XXX, e.g. #416.
HEX3:/^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,// Match colors in format #XXXX, e.g. #5123.
HEX4:/^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i,// Match colors in format #XXXXXX, e.g. #b4d455.
HEX6:/^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,// Match colors in format #XXXXXXXX, e.g. #b4d45535.
HEX8:/^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,// Match colors in format rgb(R, G, B), e.g. rgb(255, 0, 128).
RGB:RegExp(["^rgb\\(",v.source,",",v.source,",",v.source,"\\)$"].join(g.source),"i"),// Match colors in format rgb(R%, G%, B%), e.g. rgb(100%, 0%, 28.9%).
RGB_PERCENT:RegExp(["^rgb\\(",x.source,",",x.source,",",x.source,"\\)$"].join(g.source),"i"),// Match colors in format rgb(R, G, B, A), e.g. rgb(255, 0, 128, 0.25).
RGBA:RegExp(["^rgba\\(",v.source,",",v.source,",",v.source,",",b.source,"\\)$"].join(g.source),"i"),// Match colors in format rgb(R%, G%, B%, A), e.g. rgb(100%, 0%, 28.9%, 0.5).
RGBA_PERCENT:RegExp(["^rgba\\(",x.source,",",x.source,",",x.source,",",b.source,"\\)$"].join(g.source),"i"),// Match colors in format hsla(H, S%, L%), e.g. hsl(100, 40%, 28.9%).
HSL:RegExp(["^hsl\\(",v.source,",",x.source,",",x.source,"\\)$"].join(g.source),"i"),// Match colors in format hsla(H, S%, L%, A), e.g. hsla(100, 40%, 28.9%, 0.5).
HSLA:RegExp(["^hsla\\(",v.source,",",x.source,",",x.source,",",b.source,"\\)$"].join(g.source),"i"),// Match colors in format hsb(H, S%, B%), e.g. hsb(100, 40%, 28.9%).
HSB:RegExp(["^hsb\\(",v.source,",",x.source,",",x.source,"\\)$"].join(g.source),"i"),// Match colors in format hsba(H, S%, B%, A), e.g. hsba(100, 40%, 28.9%, 0.5).
HSBA:RegExp(["^hsba\\(",v.source,",",x.source,",",x.source,",",b.source,"\\)$"].join(g.source),"i")};/**
 * A class to describe a color. Each `p5.Color` object stores the color mode
 * and level maxes that were active during its construction. These values are
 * used to interpret the arguments passed to the object's constructor. They
 * also determine output formatting such as when
 * <a href="#/p5/saturation">saturation()</a> is called.
 *
 * Color is stored internally as an array of ideal RGBA values in floating
 * point form, normalized from 0 to 1. These values are used to calculate the
 * closest screen colors, which are RGBA levels from 0 to 255. Screen colors
 * are sent to the renderer.
 *
 * When different color representations are calculated, the results are cached
 * for performance. These values are normalized, floating-point numbers.
 *
 * <a href="#/p5/color">color()</a> is the recommended way to create an instance
 * of this class.
 *
 * @class p5.Color
 * @constructor
 * @param {p5} [pInst]                      pointer to p5 instance.
 *
 * @param {Number[]|String} vals            an array containing the color values
 *                                          for red, green, blue and alpha channel
 *                                          or CSS color.
 */s.default.Color=/*#__PURE__*/function(){function t(r,n){if(m(this,t),this._storeModeAndMaxes(r._colorMode,r._colorMaxes),[l.RGB,l.HSL,l.HSB].includes(this.mode))this._array=t._parseInputs.apply(this,n);else throw Error("".concat(this.mode," is an invalid colorMode."));// Expose closest screen color.
this._calculateLevels()}/**
   * Returns the color formatted as a string. Doing so can be useful for
   * debugging, or for using p5.js with other libraries.
   *
   * @method toString
   * @param {String} [format] how the color string will be formatted.
   * Leaving this empty formats the string as rgba(r, g, b, a).
   * '#rgb' '#rgba' '#rrggbb' and '#rrggbbaa' format as hexadecimal color codes.
   * 'rgb' 'hsb' and 'hsl' return the color formatted in the specified color mode.
   * 'rgba' 'hsba' and 'hsla' are the same as above but with alpha channels.
   * 'rgb%' 'hsb%' 'hsl%' 'rgba%' 'hsba%' and 'hsla%' format as percentages.
   * @return {String} the formatted string.
   *
   * @example
   * <div>
   * <code>
   * createCanvas(200, 100);
   * stroke(255);
   * const myColor = color(100, 100, 250);
   * fill(myColor);
   * rotate(HALF_PI);
   * text(myColor.toString(), 0, -5);
   * text(myColor.toString('#rrggbb'), 0, -30);
   * text(myColor.toString('rgba%'), 0, -55);
   * describe('Three text representation of a color written sideways.');
   * </code>
   * </div>
   *
   * <div>
   * <code>
   * const myColor = color(100, 130, 250);
   * text(myColor.toString('#rrggbb'), 25, 25);
   * describe('A hexadecimal representation of a color.');
   * </code>
   * </div>
   */return h(t,[{key:"toString",value:function(t){var r=this.levels,n=this._array,o=n[3];switch(t){case"#rrggbb":return"#".concat(r[0]<16?"0".concat(r[0].toString(16)):r[0].toString(16),r[1]<16?"0".concat(r[1].toString(16)):r[1].toString(16),r[2]<16?"0".concat(r[2].toString(16)):r[2].toString(16));case"#rrggbbaa":return"#".concat(r[0]<16?"0".concat(r[0].toString(16)):r[0].toString(16),r[1]<16?"0".concat(r[1].toString(16)):r[1].toString(16),r[2]<16?"0".concat(r[2].toString(16)):r[2].toString(16),r[3]<16?"0".concat(r[3].toString(16)):r[3].toString(16));case"#rgb":return"#".concat(Math.round(15*n[0]).toString(16),Math.round(15*n[1]).toString(16),Math.round(15*n[2]).toString(16));case"#rgba":return"#".concat(Math.round(15*n[0]).toString(16),Math.round(15*n[1]).toString(16),Math.round(15*n[2]).toString(16),Math.round(15*n[3]).toString(16));case"rgb":return"rgb(".concat(r[0],", ",r[1],", ",r[2],")");case"rgb%":return"rgb(".concat((100*n[0]).toPrecision(3),"%, ",(100*n[1]).toPrecision(3),"%, ",(100*n[2]).toPrecision(3),"%)");case"rgba%":return"rgba(".concat((100*n[0]).toPrecision(3),"%, ",(100*n[1]).toPrecision(3),"%, ",(100*n[2]).toPrecision(3),"%, ",(100*n[3]).toPrecision(3),"%)");case"hsb":case"hsv":return this.hsba||(this.hsba=c.default._rgbaToHSBA(this._array)),"hsb(".concat(this.hsba[0]*this.maxes[l.HSB][0],", ",this.hsba[1]*this.maxes[l.HSB][1],", ",this.hsba[2]*this.maxes[l.HSB][2],")");case"hsb%":case"hsv%":return this.hsba||(this.hsba=c.default._rgbaToHSBA(this._array)),"hsb(".concat((100*this.hsba[0]).toPrecision(3),"%, ",(100*this.hsba[1]).toPrecision(3),"%, ",(100*this.hsba[2]).toPrecision(3),"%)");case"hsba":case"hsva":return this.hsba||(this.hsba=c.default._rgbaToHSBA(this._array)),"hsba(".concat(this.hsba[0]*this.maxes[l.HSB][0],", ",this.hsba[1]*this.maxes[l.HSB][1],", ",this.hsba[2]*this.maxes[l.HSB][2],", ",o,")");case"hsba%":case"hsva%":return this.hsba||(this.hsba=c.default._rgbaToHSBA(this._array)),"hsba(".concat((100*this.hsba[0]).toPrecision(3),"%, ",(100*this.hsba[1]).toPrecision(3),"%, ",(100*this.hsba[2]).toPrecision(3),"%, ",(100*o).toPrecision(3),"%)");case"hsl":return this.hsla||(this.hsla=c.default._rgbaToHSLA(this._array)),"hsl(".concat(this.hsla[0]*this.maxes[l.HSL][0],", ",this.hsla[1]*this.maxes[l.HSL][1],", ",this.hsla[2]*this.maxes[l.HSL][2],")");case"hsl%":return this.hsla||(this.hsla=c.default._rgbaToHSLA(this._array)),"hsl(".concat((100*this.hsla[0]).toPrecision(3),"%, ",(100*this.hsla[1]).toPrecision(3),"%, ",(100*this.hsla[2]).toPrecision(3),"%)");case"hsla":return this.hsla||(this.hsla=c.default._rgbaToHSLA(this._array)),"hsla(".concat(this.hsla[0]*this.maxes[l.HSL][0],", ",this.hsla[1]*this.maxes[l.HSL][1],", ",this.hsla[2]*this.maxes[l.HSL][2],", ",o,")");case"hsla%":return this.hsla||(this.hsla=c.default._rgbaToHSLA(this._array)),"hsl(".concat((100*this.hsla[0]).toPrecision(3),"%, ",(100*this.hsla[1]).toPrecision(3),"%, ",(100*this.hsla[2]).toPrecision(3),"%, ",(100*o).toPrecision(3),"%)");default:return"rgba(".concat(r[0],",",r[1],",",r[2],",",o,")")}}/**
     * Sets the red component of a color. The range depends on the
     * <a href="#/colorMode">colorMode()</a>. In the default RGB mode it's
     * between 0 and 255.
     *
     * @method setRed
     * @param {Number} red the new red value.
     *
     * @example
     * <div>
     * <code>
     * let backgroundColor;
     *
     * function setup() {
     *   backgroundColor = color(100, 50, 150);
     * }
     *
     * function draw() {
     *   backgroundColor.setRed(128 + 128 * sin(millis() / 1000));
     *   background(backgroundColor);
     *   describe('A canvas with a gradually changing background color.');
     * }
     * </code>
     * </div>
     */},{key:"setRed",value:function(t){this._array[0]=t/this.maxes[l.RGB][0],this._calculateLevels()}/**
     * Sets the green component of a color. The range depends on the
     * <a href="#/colorMode">colorMode()</a>. In the default RGB mode it's
     * between 0 and 255.
     *
     * @method setGreen
     * @param {Number} green the new green value.
     *
     * @example
     * <div>
     * <code>
     * let backgroundColor;
     *
     * function setup() {
     *   backgroundColor = color(100, 50, 150);
     * }
     *
     * function draw() {
     *   backgroundColor.setGreen(128 + 128 * sin(millis() / 1000));
     *   background(backgroundColor);
     *   describe('A canvas with a gradually changing background color.');
     * }
     * </code>
     * </div>
     **/},{key:"setGreen",value:function(t){this._array[1]=t/this.maxes[l.RGB][1],this._calculateLevels()}/**
     * Sets the blue component of a color. The range depends on the
     * <a href="#/colorMode">colorMode()</a>. In the default RGB mode it's
     * between 0 and 255.
     *
     * @method setBlue
     * @param {Number} blue the new blue value.
     *
     * @example
     * <div>
     * <code>
     * let backgroundColor;
     *
     * function setup() {
     *   backgroundColor = color(100, 50, 150);
     * }
     *
     * function draw() {
     *   backgroundColor.setBlue(128 + 128 * sin(millis() / 1000));
     *   background(backgroundColor);
     *   describe('A canvas with a gradually changing background color.');
     * }
     * </code>
     * </div>
     **/},{key:"setBlue",value:function(t){this._array[2]=t/this.maxes[l.RGB][2],this._calculateLevels()}/**
     * Sets the alpha (transparency) value of a color. The range depends on the
     * <a href="#/colorMode">colorMode()</a>. In the default RGB mode it's
     * between 0 and 255.
     *
     * @method setAlpha
     * @param {Number} alpha the new alpha value.
     *
     * @example
     * <div>
     * <code>
     * function draw() {
     *   clear();
     *   background(200);
     *   const squareColor = color(100, 50, 100);
     *   squareColor.setAlpha(128 + 128 * sin(millis() / 1000));
     *   fill(squareColor);
     *   rect(13, 13, width - 26, height - 26);
     *   describe(
     *     'A purple square with gradually changing opacity drawn on a gray background.'
     *   );
     * }
     * </code>
     * </div>
     **/},{key:"setAlpha",value:function(t){this._array[3]=t/this.maxes[this.mode][3],this._calculateLevels()}// calculates and stores the closest screen levels
},{key:"_calculateLevels",value:function(){for(var t=this._array,r=this.levels=Array(t.length),n=t.length-1;n>=0;--n)r[n]=Math.round(255*t[n]);// Clear cached HSL/HSB values
this.hsla=null,this.hsba=null}},{key:"_getAlpha",value:function(){return this._array[3]*this.maxes[this.mode][3]}// stores the color mode and maxes in this instance of Color
},{key:"_storeModeAndMaxes",value:function(t,r){this.mode=t,this.maxes=r}},{key:"_getMode",value:function(){return this.mode}},{key:"_getMaxes",value:function(){return this.maxes}},{key:"_getBlue",value:function(){return this._array[2]*this.maxes[l.RGB][2]}},{key:"_getBrightness",value:function(){return this.hsba||(this.hsba=c.default._rgbaToHSBA(this._array)),this.hsba[2]*this.maxes[l.HSB][2]}},{key:"_getGreen",value:function(){return this._array[1]*this.maxes[l.RGB][1]}/**
     * Hue is the same in HSB and HSL, but the maximum value may be different.
     * This function will return the HSB-normalized saturation when supplied with
     * an HSB color object, but will default to the HSL-normalized saturation
     * otherwise.
     */},{key:"_getHue",value:function(){return this.mode===l.HSB?(this.hsba||(this.hsba=c.default._rgbaToHSBA(this._array)),this.hsba[0]*this.maxes[l.HSB][0]):(this.hsla||(this.hsla=c.default._rgbaToHSLA(this._array)),this.hsla[0]*this.maxes[l.HSL][0])}},{key:"_getLightness",value:function(){return this.hsla||(this.hsla=c.default._rgbaToHSLA(this._array)),this.hsla[2]*this.maxes[l.HSL][2]}},{key:"_getRed",value:function(){return this._array[0]*this.maxes[l.RGB][0]}/**
     * Saturation is scaled differently in HSB and HSL. This function will return
     * the HSB saturation when supplied with an HSB color object, but will default
     * to the HSL saturation otherwise.
     */},{key:"_getSaturation",value:function(){return this.mode===l.HSB?(this.hsba||(this.hsba=c.default._rgbaToHSBA(this._array)),this.hsba[1]*this.maxes[l.HSB][1]):(this.hsla||(this.hsla=c.default._rgbaToHSLA(this._array)),this.hsla[1]*this.maxes[l.HSL][1])}/**
    * For a number of different inputs, returns a color formatted as [r, g, b, a]
    * arrays, with each component normalized between 0 and 1.
    *
    * @private
    * @param {Array} [...args] An 'array-like' object that represents a list of
    *                          arguments
    * @return {Number[]}       a color formatted as [r, g, b, a]
    *                          Example:
    *                          input        ==> output
    *                          g            ==> [g, g, g, 255]
    *                          g,a          ==> [g, g, g, a]
    *                          r, g, b      ==> [r, g, b, 255]
    *                          r, g, b, a   ==> [r, g, b, a]
    *                          [g]          ==> [g, g, g, 255]
    *                          [g, a]       ==> [g, g, g, a]
    *                          [r, g, b]    ==> [r, g, b, 255]
    *                          [r, g, b, a] ==> [r, g, b, a]
    * @example
    * <div>
    * <code>
    * // todo
    * //
    * // describe('');
    * </code>
    * </div>
    */}],[{key:"_parseInputs",value:function(r,n,o,a){var s,u=arguments.length,p=this.mode,d=this.maxes[p],m=[];if(u>=3){// Constrain components to the range [0,1].
// (loop backwards for performance)
for(// Argument is a list of component values.
m[0]=r/d[0],m[1]=n/d[1],m[2]=o/d[2],"number"==typeof a?m[3]=a/d[3]:m[3]=1,s=m.length-1;s>=0;--s){var f=m[s];f<0?m[s]=0:f>1&&(m[s]=1)}// Convert to RGBA and return.
if(p===l.HSL)return c.default._hslaToRGBA(m);if(p===l.HSB)return c.default._hsbaToRGBA(m)}else if(1===u&&"string"==typeof r){var h=r.trim().toLowerCase();// Return if string is a named colour.
if(y[h])return t._parseInputs.call(this,y[h]);// Try RGBA pattern matching.
if(j.HEX3.test(h))return(// #rgb
(m=j.HEX3.exec(h).slice(1).map(function(t){return parseInt(t+t,16)/255}))[3]=1,m);// Try HSLA pattern matching.
if(j.HEX6.test(h))return(// #rrggbb
(m=j.HEX6.exec(h).slice(1).map(function(t){return parseInt(t,16)/255}))[3]=1,m);if(j.HEX4.test(h))return j.HEX4.exec(h).slice(1).map(function(t){return parseInt(t+t,16)/255});if(j.HEX8.test(h))return j.HEX8.exec(h).slice(1).map(function(t){return parseInt(t,16)/255});else if(j.RGB.test(h))return(// rgb(R,G,B)
(m=j.RGB.exec(h).slice(1).map(function(t){return t/255}))[3]=1,m);else if(j.RGB_PERCENT.test(h))return(// rgb(R%,G%,B%)
(m=j.RGB_PERCENT.exec(h).slice(1).map(function(t){return parseFloat(t)/100}))[3]=1,m);else if(j.RGBA.test(h))return j.RGBA.exec(h).slice(1).map(function(t,r){return 3===r?parseFloat(t):t/255});else if(j.RGBA_PERCENT.test(h))return j.RGBA_PERCENT.exec(h).slice(1).map(function(t,r){return 3===r?parseFloat(t):parseFloat(t)/100});if(j.HSL.test(h)?// hsl(H,S,L)
(m=j.HSL.exec(h).slice(1).map(function(t,r){return 0===r?parseInt(t,10)/360:parseInt(t,10)/100}))[3]=1:j.HSLA.test(h)&&(m=j.HSLA.exec(h).slice(1).map(function(t,r){return 0===r?parseInt(t,10)/360:3===r?parseFloat(t):parseInt(t,10)/100})),(m=m.map(function(t){return Math.max(Math.min(t,1),0)})).length)return c.default._hslaToRGBA(m);if(j.HSB.test(h)?// hsb(H,S,B)
(m=j.HSB.exec(h).slice(1).map(function(t,r){return 0===r?parseInt(t,10)/360:parseInt(t,10)/100}))[3]=1:j.HSBA.test(h)&&(m=j.HSBA.exec(h).slice(1).map(function(t,r){return 0===r?parseInt(t,10)/360:3===r?parseFloat(t):parseInt(t,10)/100})),m.length){// (loop backwards for performance)
for(s=m.length-1;s>=0;--s)m[s]=Math.max(Math.min(m[s],1),0);return c.default._hsbaToRGBA(m)}// Input did not match any CSS color pattern: default to white.
m=[1,1,1,1]}else if((1===u||2===u)&&"number"==typeof r)// 'Grayscale' mode.
/**
         * For HSB and HSL, interpret the gray level as a brightness/lightness
         * value (they are equivalent when chroma is zero). For RGB, normalize the
         * gray level according to the blue maximum.
         */m[0]=r/d[2],m[1]=r/d[2],m[2]=r/d[2],"number"==typeof n?m[3]=n/d[3]:m[3]=1,// Constrain components to the range [0,1].
m=m.map(function(t){return Math.max(Math.min(t,1),0)});else throw Error("".concat(arguments,"is not a valid color representation."));return m}}]),t}();var w=s.default.Color;n.default=w},{"../core/constants":284,"../core/main":296,"./color_conversion":280,"core-js/modules/es.array.includes":176,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.join":179,"core-js/modules/es.array.map":181,"core-js/modules/es.array.slice":182,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.constructor":202,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.includes":207,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.trim":217,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],283:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.array.fill"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=p(t("../core/main")),l=u(t("../core/constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Color
 * @submodule Setting
 * @for p5
 * @requires core
 * @requires constants
 */t("./p5.Color"),/**
 * Sets the color used for the background of the canvas. By default, the
 * background is transparent. This function is typically used within
 * <a href="#/p5/draw">draw()</a> to clear the display window at the beginning
 * of each frame. It can also be used inside <a href="#/p5/setup">setup()</a> to
 * set the background on the first frame of animation.
 *
 * The version of `background()` with one parameter interprets the value one of four
 * ways. If the parameter is a number, it's interpreted as a grayscale value.
 * If the parameter is a string, it's interpreted as a CSS color string.  RGB, RGBA,
 * HSL, HSLA, hex, and named color strings are supported. If the parameter is a
 * <a href="#/p5.Color">p5.Color</a> object, it will be used as the background color.
 * If the parameter is a <a href="#/p5.Image">p5.Image</a> object, it will be used as
 * the background image.
 *
 * The version of `background()` with two parameters interprets the first one as a
 * grayscale value. The second parameter sets the alpha (transparency) value.
 *
 * The version of `background()` with three parameters interprets them as RGB, HSB,
 * or HSL colors, depending on the current <a href="#/p5/colorMode">colorMode()</a>.
 * By default, colors are specified in RGB values. Calling background(255, 204, 0)
 * sets the background a bright yellow color.
 *
 * @method background
 * @param {p5.Color} color  any value created by the <a href="#/p5/color">color()</a> function
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * // A grayscale integer value.
 * background(51);
 * describe('A canvas with a dark charcoal gray background.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // A grayscale integer value and an alpha value.
 * background(51, 0.4);
 * describe('A canvas with a transparent gray background.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // R, G & B integer values.
 * background(255, 204, 0);
 * describe('A canvas with a yellow background.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // H, S & B integer values.
 * colorMode(HSB);
 * background(255, 204, 100);
 * describe('A canvas with a royal blue background.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // A CSS named color.
 * background('red');
 * describe('A canvas with a red background.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Three-digit hex RGB notation.
 * background('#fae');
 * describe('A canvas with a pink background.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Six-digit hex RGB notation.
 * background('#222222');
 * describe('A canvas with a black background.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Integer RGB notation.
 * background('rgb(0,255,0)');
 * describe('A canvas with a bright green background.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Integer RGBA notation.
 * background('rgba(0,255,0, 0.25)');
 * describe('A canvas with a transparent green background.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Percentage RGB notation.
 * background('rgb(100%,0%,10%)');
 * describe('A canvas with a red background.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Percentage RGBA notation.
 * background('rgba(100%,0%,100%,0.5)');
 * describe('A canvas with a transparent purple background.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // A p5.Color object.
 * let c = color(0, 0, 255);
 * background(c);
 * describe('A canvas with a blue background.');
 * </code>
 * </div>
 *
 *//**
 * @method background
 * @param {String} colorstring color string, possible formats include: integer
 *                         rgb() or rgba(), percentage rgb() or rgba(),
 *                         3-digit hex, 6-digit hex.
 * @param {Number} [a]         opacity of the background relative to current
 *                             color range (default is 0-255).
 * @chainable
 *//**
 * @method background
 * @param {Number} gray   specifies a value between white and black.
 * @param {Number} [a]
 * @chainable
 *//**
 * @method background
 * @param {Number} v1     red value if color mode is RGB, or hue value if color mode is HSB.
 * @param {Number} v2     green value if color mode is RGB, or saturation value if color mode is HSB.
 * @param {Number} v3     blue value if color mode is RGB, or brightness value if color mode is HSB.
 * @param  {Number} [a]
 * @chainable
 *//**
 * @method background
 * @param  {Number[]}      values  an array containing the red, green, blue
 *                                 and alpha components of the color.
 * @chainable
 *//**
 * @method background
 * @param {p5.Image} image     image created with <a href="#/p5/loadImage">loadImage()</a>
 *                             or <a href="#/p5/createImage">createImage()</a>,
 *                             to set as background.
 *                             (must be same size as the sketch window).
 * @param  {Number}  [a]
 * @chainable
 */s.default.prototype.background=function(){var t;return(t=this._renderer).background.apply(t,arguments),this},/**
 * Clears the pixels on the canvas. This function makes every pixel 100%
 * transparent. Calling `clear()` doesn't clear objects created by `createX()`
 * functions such as <a href="#/p5/createGraphics">createGraphics()</a>,
 * <a href="#/p5/createVideo">createVideo()</a>, and
 * <a href="#/p5/createImg">createImg()</a>. These objects will remain
 * unchanged after calling clear() and can be redrawn.
 *
 * In WebGL mode, this function can clear the screen to a specific color. It
 * interprets four numeric parameters as normalized RGBA color values. It also
 * clears the depth buffer. If you are not using the WebGL renderer, these
 * parameters will have no effect.
 *
 * @method clear
 * @chainable
 * @example
 * <div>
 * <code>
 * function draw() {
 *   circle(mouseX, mouseY, 20);
 *   describe('A white circle is drawn at the mouse x- and y-coordinates.');
 * }
 *
 * function mousePressed() {
 *   clear();
 *   background(128);
 *   describe('The canvas is cleared when the mouse is clicked.');
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let pg;
 *
 * function setup() {
 *   createCanvas(100, 100);
 *   background(200);
 *
 *   pg = createGraphics(60, 60);
 *   pg.background(200);
 *   pg.noStroke();
 *   pg.circle(pg.width / 2, pg.height / 2, 15);
 *   image(pg, 20, 20);
 *   describe('A white circle drawn on a gray square. The square gets smaller when the mouse is pressed.');
 * }
 *
 * function mousePressed() {
 *   clear();
 *   image(pg, 20, 20);
 * }
 * </code>
 * </div>
 *
 * @param {Number} r normalized red value.
 * @param {Number} g normalized green value.
 * @param {Number} b normalized blue value.
 * @param {Number} a normalized alpha value.
 */s.default.prototype.clear=function(){var t=(arguments.length<=0?void 0:arguments[0])||0,r=(arguments.length<=1?void 0:arguments[1])||0,n=(arguments.length<=2?void 0:arguments[2])||0,o=(arguments.length<=3?void 0:arguments[3])||0;return this._renderer.clear(t,r,n,o),this},/**
 * Changes the way p5.js interprets color data. By default, the numeric
 * parameters for <a href="#/p5/fill">fill()</a>,
 * <a href="#/p5/stroke">stroke()</a>,
 * <a href="#/p5/background">background()</a>, and
 * <a href="#/p5/color">color()</a> are defined by values between 0 and 255
 * using the RGB color model. This is equivalent to calling
 * `colorMode(RGB, 255)`. Pure red is `color(255, 0, 0)` in this model.
 *
 * Calling `colorMode(RGB, 100)` sets colors to be interpreted as RGB color
 * values between 0 and 100.  Pure red is `color(100, 0, 0)` in this model.
 *
 * Calling `colorMode(HSB)` or `colorMode(HSL)` changes to HSB or HSL system
 * instead of RGB.
 *
 * <a href="#/p5.Color">p5.Color</a> objects remember the mode that they were
 * created in. Changing modes doesn't affect their appearance.
 *
 * @method colorMode
 * @param {Constant} mode   either RGB, HSB or HSL, corresponding to
 *                          Red/Green/Blue and Hue/Saturation/Brightness
 *                          (or Lightness).
 * @param {Number}  [max]  range for all values.
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * noStroke();
 * colorMode(RGB, 100);
 * for (let i = 0; i < 100; i += 1) {
 *   for (let j = 0; j < 100; j += 1) {
 *     stroke(i, j, 0);
 *     point(i, j);
 *   }
 * }
 * describe(
 *   'A diagonal green to red gradient from bottom-left to top-right with shading transitioning to black at top-left corner.'
 * );
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * noStroke();
 * colorMode(HSB, 100);
 * for (let i = 0; i < 100; i++) {
 *   for (let j = 0; j < 100; j++) {
 *     stroke(i, j, 100);
 *     point(i, j);
 *   }
 * }
 * describe('A rainbow gradient from left-to-right. Brightness transitions to white at the top.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * colorMode(RGB, 255);
 * let myColor = color(180, 175, 230);
 * background(myColor);
 * colorMode(RGB, 1);
 * let redValue = red(myColor);
 * let greenValue = green(myColor);
 * let blueValue = blue(myColor);
 * text(`Red: ${redValue}`, 10, 10, 80, 80);
 * text(`Green: ${greenValue}`, 10, 40, 80, 80);
 * text(`Blue: ${blueValue}`, 10, 70, 80, 80);
 * describe('A purple canvas with the red, green, and blue decimal values of the color written on it.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * noFill();
 * colorMode(RGB, 255, 255, 255, 1);
 * background(255);
 * strokeWeight(4);
 * stroke(255, 0, 10, 0.3);
 * circle(40, 40, 50);
 * circle(50, 60, 50);
 * describe('Two overlapping translucent pink circle outlines.');
 * </code>
 * </div>
 *
 *//**
 * @method colorMode
 * @param {Constant} mode
 * @param {Number} max1     range for the red or hue depending on the
 *                              current color mode.
 * @param {Number} max2     range for the green or saturation depending
 *                              on the current color mode.
 * @param {Number} max3     range for the blue or brightness/lightness
 *                              depending on the current color mode.
 * @param {Number} [maxA]   range for the alpha.
 * @chainable
 */s.default.prototype.colorMode=function(t,r,n,o,a){if(s.default._validateParameters("colorMode",arguments),t===l.RGB||t===l.HSB||t===l.HSL){// Set color mode.
this._colorMode=t;// Set color maxes.
var c=this._colorMaxes[t];2==arguments.length?(c[0]=r,c[1]=r,c[2]=r,c[3]=r):4==arguments.length?(c[0]=r,c[1]=n,c[2]=o):5==arguments.length&&(c[0]=r,c[1]=n,c[2]=o,c[3]=a)}return this},/**
 * Sets the color used to fill shapes. Calling `fill(255, 165, 0)` or
 * `fill('orange')` means all shapes drawn after the fill command will be
 * filled with the color orange.
 *
 * The version of `fill()` with one parameter interprets the value one of
 * three ways. If the parameter is a number, it's interpreted as a grayscale
 * value. If the parameter is a string, it's interpreted as a CSS color
 * string. A <a href="#/p5.Color">p5.Color</a> object can also be provided to
 * set the fill color.
 *
 * The version of `fill()` with three parameters interprets them as RGB, HSB,
 * or HSL colors, depending on the current
 * <a href="#/p5/colorMode">colorMode()</a>. The default color space is RGB,
 * with each value in the range from 0 to 255.
 *
 * @method fill
 * @param  {Number}        v1      red value if color mode is RGB or hue value if color mode is HSB.
 * @param  {Number}        v2      green value if color mode is RGB or saturation value if color mode is HSB.
 * @param  {Number}        v3      blue value if color mode is RGB or brightness value if color mode is HSB.
 * @param  {Number}        [alpha]
 * @chainable
 * @example
 * <div>
 * <code>
 * // Grayscale integer value.
 * fill(51);
 * square(20, 20, 60);
 * describe('A dark charcoal gray square with a black outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // R, G & B integer values.
 * fill(255, 204, 0);
 * square(20, 20, 60);
 * describe('A yellow square with a black outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // H, S & B integer values.
 * colorMode(HSB);
 * fill(255, 204, 100);
 * square(20, 20, 60);
 * describe('A royal blue square with a black outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // A CSS named color.
 * fill('red');
 * square(20, 20, 60);
 * describe('A red square with a black outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Three-digit hex RGB notation.
 * fill('#fae');
 * square(20, 20, 60);
 * describe('A pink square with a black outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Six-digit hex RGB notation.
 * fill('#A251FA');
 * square(20, 20, 60);
 * describe('A purple square with a black outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Integer RGB notation.
 * fill('rgb(0,255,0)');
 * square(20, 20, 60);
 * describe('A bright green square with a black outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Integer RGBA notation.
 * fill('rgba(0,255,0, 0.25)');
 * square(20, 20, 60);
 * describe('A soft green rectange with a black outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Percentage RGB notation.
 * fill('rgb(100%,0%,10%)');
 * square(20, 20, 60);
 * describe('A red square with a black outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Percentage RGBA notation.
 * fill('rgba(100%,0%,100%,0.5)');
 * square(20, 20, 60);
 * describe('A dark fuchsia square with a black outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // p5.Color object.
 * let c = color(0, 0, 255);
 * fill(c);
 * square(20, 20, 60);
 * describe('A blue square with a black outline.');
 * </code>
 * </div>
 *//**
 * @method fill
 * @param  {String}        value   a color string.
 * @chainable
 *//**
 * @method fill
 * @param  {Number}        gray   a grayscale value.
 * @param  {Number}        [alpha]
 * @chainable
 *//**
 * @method fill
 * @param  {Number[]}      values  an array containing the red, green, blue &
 *                                 and alpha components of the color.
 * @chainable
 *//**
 * @method fill
 * @param  {p5.Color}      color   the fill color.
 * @chainable
 */s.default.prototype.fill=function(){var t;return this._renderer._setProperty("_fillSet",!0),this._renderer._setProperty("_doFill",!0),(t=this._renderer).fill.apply(t,arguments),this},/**
 * Disables setting the interior color of shapes. This is the same as making
 * the fill completely transparent. If both
 * <a href="#/p5/noStroke">noStroke()</a> and
 * <a href="#/p5/noFill">noFill()</a> are called, nothing will be drawn to the
 * screen.
 *
 * @method noFill
 * @chainable
 * @example
 * <div>
 * <code>
 * square(32, 10, 35);
 * noFill();
 * square(32, 55, 35);
 * describe('A white square on top of an empty square. Both squares have black outlines.');
 * </code>
 * </div>
 *
 * <div modernizr='webgl'>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 * }
 *
 * function draw() {
 *   background(0);
 *   noFill();
 *   stroke(100, 100, 240);
 *   rotateX(frameCount * 0.01);
 *   rotateY(frameCount * 0.01);
 *   box(45, 45, 45);
 *   describe('A purple cube wireframe spinning on a black canvas.');
 * }
 * </code>
 * </div>
 */s.default.prototype.noFill=function(){return this._renderer._setProperty("_doFill",!1),this},/**
 * Disables drawing the stroke (outline). If both
 * <a href="#/p5/noStroke">noStroke()</a> and
 * <a href="#/p5/noFill">noFill()</a> are called, nothing will be drawn to the
 * screen.
 *
 * @method noStroke
 * @chainable
 * @example
 * <div>
 * <code>
 * noStroke();
 * square(20, 20, 60);
 * describe('A white square with no outline.');
 * </code>
 * </div>
 *
 * <div modernizr='webgl'>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 * }
 *
 * function draw() {
 *   background(0);
 *   noStroke();
 *   fill(240, 150, 150);
 *   rotateX(frameCount * 0.01);
 *   rotateY(frameCount * 0.01);
 *   box(45, 45, 45);
 *   describe('A pink cube with no edge outlines spinning on a black canvas.');
 * }
 * </code>
 * </div>
 */s.default.prototype.noStroke=function(){return this._renderer._setProperty("_doStroke",!1),this},/**
 * Sets the color used to draw lines and borders around shapes. Calling
 * `stroke(255, 165, 0)` or `stroke('orange')` means all shapes drawn after
 * the `stroke()` command will be filled with the color orange. The way these
 * parameters are interpreted may be changed with the
 * <a href="#/p5/colorMode">colorMode()</a> function.
 *
 * The version of `stroke()` with one parameter interprets the value one of
 * three ways. If the parameter is a number, it's interpreted as a grayscale
 * value. If the parameter is a string, it's interpreted as a CSS color
 * string. A <a href="#/p5.Color">p5.Color</a> object can also be provided to
 * set the stroke color.
 *
 * The version of `stroke()` with two parameters interprets the first one as a
 * grayscale value. The second parameter sets the alpha (transparency) value.
 *
 * The version of `stroke()` with three parameters interprets them as RGB, HSB,
 * or HSL colors, depending on the current `colorMode()`.
 *
 * The version of `stroke()` with four parameters interprets them as RGBA, HSBA,
 * or HSLA colors, depending on the current `colorMode()`. The last parameter
 * sets the alpha (transparency) value.
 *
 * @method stroke
 * @param  {Number}        v1      red value if color mode is RGB or hue value if color mode is HSB.
 * @param  {Number}        v2      green value if color mode is RGB or saturation value if color mode is HSB.
 * @param  {Number}        v3      blue value if color mode is RGB or brightness value if color mode is HSB.
 * @param  {Number}        [alpha]
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * // Grayscale integer value.
 * strokeWeight(4);
 * stroke(51);
 * rect(20, 20, 60, 60);
 * describe('A white rectangle with a dark charcoal gray outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // R, G & B integer values.
 * stroke(255, 204, 0);
 * strokeWeight(4);
 * rect(20, 20, 60, 60);
 * describe('A white rectangle with a yellow outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // H, S & B integer values.
 * colorMode(HSB);
 * strokeWeight(4);
 * stroke(255, 204, 100);
 * rect(20, 20, 60, 60);
 * describe('A white rectangle with a royal blue outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // A CSS named color.
 * stroke('red');
 * strokeWeight(4);
 * rect(20, 20, 60, 60);
 * describe('A white rectangle with a red outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Three-digit hex RGB notation.
 * stroke('#fae');
 * strokeWeight(4);
 * rect(20, 20, 60, 60);
 * describe('A white rectangle with a pink outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Six-digit hex RGB notation.
 * stroke('#222222');
 * strokeWeight(4);
 * rect(20, 20, 60, 60);
 * describe('A white rectangle with a black outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Integer RGB notation.
 * stroke('rgb(0,255,0)');
 * strokeWeight(4);
 * rect(20, 20, 60, 60);
 * describe('A whiite rectangle with a bright green outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Integer RGBA notation.
 * stroke('rgba(0,255,0,0.25)');
 * strokeWeight(4);
 * rect(20, 20, 60, 60);
 * describe('A white rectangle with a soft green outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Percentage RGB notation.
 * stroke('rgb(100%,0%,10%)');
 * strokeWeight(4);
 * rect(20, 20, 60, 60);
 * describe('A white rectangle with a red outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Percentage RGBA notation.
 * stroke('rgba(100%,0%,100%,0.5)');
 * strokeWeight(4);
 * rect(20, 20, 60, 60);
 * describe('A white rectangle with a dark fuchsia outline.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // p5.Color object.
 * stroke(color(0, 0, 255));
 * strokeWeight(4);
 * rect(20, 20, 60, 60);
 * describe('A white rectangle with a blue outline.');
 * </code>
 * </div>
 *//**
 * @method stroke
 * @param  {String}        value   a color string.
 * @chainable
 *//**
 * @method stroke
 * @param  {Number}        gray   a grayscale value.
 * @param  {Number}        [alpha]
 * @chainable
 *//**
 * @method stroke
 * @param  {Number[]}      values  an array containing the red, green, blue,
 *                                 and alpha components of the color.
 * @chainable
 *//**
 * @method stroke
 * @param  {p5.Color}      color   the stroke color.
 * @chainable
 */s.default.prototype.stroke=function(){var t;return this._renderer._setProperty("_strokeSet",!0),this._renderer._setProperty("_doStroke",!0),(t=this._renderer).stroke.apply(t,arguments),this},/**
 * All drawing that follows <a href="#/p5/erase">erase()</a> will subtract
 * from the canvas, revealing the web page underneath. The erased areas will
 * become transparent, allowing the content behind the canvas to show through.
 * The <a href="#/p5/fill">fill()</a>, <a href="#/p5/stroke">stroke()</a>, and
 * <a href="#/p5/blendMode">blendMode()</a> have no effect once `erase()` is
 * called.
 *
 * The `erase()` function has two optional parameters. The first parameter
 * sets the strength of erasing by the shape's interior. A value of 0 means
 * that no erasing will occur. A value of 255 means that the shape's interior
 * will fully erase the content underneath. The default value is 255
 * (full strength).
 *
 * The second parameter sets the strength of erasing by the shape's edge. A
 * value of 0 means that no erasing will occur. A value of 255 means that the
 * shape's edge will fully erase the content underneath. The default value is
 * 255 (full strength).
 *
 * To cancel the erasing effect, use the <a href="#/p5/noErase">noErase()</a>
 * function.
 *
 * `erase()` has no effect on drawing done with the
 * <a href="#/p5/image">image()</a> and
 * <a href="#/p5/background">background()</a> functions.
 *
 * @method erase
 * @param  {Number}   [strengthFill]      a number (0-255) for the strength of erasing under a shape's interior.
 *                                        Defaults to 255, which is full strength.
 * @param  {Number}   [strengthStroke]    a number (0-255) for the strength of erasing under a shape's edge.
 *                                        Defaults to 255, which is full strength.
 *
 * @chainable
 * @example
 * <div>
 * <code>
 * background(100, 100, 250);
 * fill(250, 100, 100);
 * square(20, 20, 60);
 * erase();
 * circle(25, 30, 30);
 * noErase();
 * describe('A purple canvas with a pink square in the middle. A circle is erased from the top-left, leaving a white hole.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let p = createP('I am a DOM element');
 * p.style('font-size', '12px');
 * p.style('width', '65px');
 * p.style('text-align', 'center');
 * p.position(18, 26);
 *
 * background(100, 170, 210);
 * erase(200, 100);
 * circle(50, 50, 77);
 * noErase();
 * describe('A blue canvas with a circular hole in the center that reveals the message "I am a DOM element".');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * background(150, 250, 150);
 * fill(100, 100, 250);
 * square(20, 20, 60);
 * strokeWeight(5);
 * erase(150, 255);
 * triangle(50, 10, 70, 50, 90, 10);
 * noErase();
 * describe('A mint green canvas with a purple square in the center. A triangle in the top-right corner partially erases its interior and a fully erases its outline.');
 * </code>
 * </div>
 */s.default.prototype.erase=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:255,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:255;return this._renderer.erase(t,r),this},/**
 * Ends erasing that was started with <a href="#/p5/erase">erase()</a>.
 * The <a href="#/p5/fill">fill()</a>, <a href="#/p5/stroke">stroke()</a>, and
 * <a href="#/p5/blendMode">blendMode()</a> settings will return to what they
 * were prior to calling <a href="#/p5/erase">erase()</a>.
 *
 * @method noErase
 * @chainable
 * @example
 * <div>
 * <code>
 * background(235, 145, 15);
 * noStroke();
 * fill(30, 45, 220);
 * rect(30, 10, 10, 80);
 * erase();
 * circle(50, 50, 60);
 * noErase();
 * rect(70, 10, 10, 80);
 * describe('An orange canvas with two tall blue rectangles. A circular hole in the center erases the rectangle on the left but not the one on the right.');
 * </code>
 * </div>
 */s.default.prototype.noErase=function(){return this._renderer.noErase(),this};var d=s.default;n.default=d},{"../core/constants":284,"../core/main":296,"./p5.Color":282,"core-js/modules/es.array.fill":172,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],284:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.QUADRATIC=n.LINEAR=n._CTX_MIDDLE=n._DEFAULT_LEADMULT=n._DEFAULT_TEXT_FILL=n.WORD=n.CHAR=n.BOLDITALIC=n.BOLD=n.ITALIC=n.NORMAL=n.BLUR=n.ERODE=n.DILATE=n.POSTERIZE=n.INVERT=n.OPAQUE=n.GRAY=n.THRESHOLD=n.BURN=n.DODGE=n.SOFT_LIGHT=n.HARD_LIGHT=n.OVERLAY=n.REPLACE=n.SCREEN=n.MULTIPLY=n.EXCLUSION=n.SUBTRACT=n.DIFFERENCE=n.LIGHTEST=n.DARKEST=n.ADD=n.REMOVE=n.BLEND=n.UP_ARROW=n.TAB=n.SHIFT=n.RIGHT_ARROW=n.RETURN=n.OPTION=n.LEFT_ARROW=n.ESCAPE=n.ENTER=n.DOWN_ARROW=n.DELETE=n.CONTROL=n.BACKSPACE=n.ALT=n.AUTO=n.HSL=n.HSB=n.RGB=n.MITER=n.BEVEL=n.ROUND=n.SQUARE=n.PROJECT=n.PIE=n.CHORD=n.OPEN=n.CLOSE=n.TESS=n.QUAD_STRIP=n.QUADS=n.TRIANGLE_STRIP=n.TRIANGLE_FAN=n.TRIANGLES=n.LINE_LOOP=n.LINE_STRIP=n.LINES=n.POINTS=n.BASELINE=n.BOTTOM=n.TOP=n.CENTER=n.LEFT=n.RIGHT=n.RADIUS=n.CORNERS=n.CORNER=n.RAD_TO_DEG=n.DEG_TO_RAD=n.RADIANS=n.DEGREES=n.TWO_PI=n.TAU=n.QUARTER_PI=n.PI=n.HALF_PI=n.WAIT=n.TEXT=n.MOVE=n.HAND=n.CROSS=n.ARROW=n.WEBGL2=n.WEBGL=n.P2D=n.VERSION=void 0,n.RGBA=n.HALF_FLOAT=n.FLOAT=n.UNSIGNED_INT=n.UNSIGNED_BYTE=n.COVER=n.CONTAIN=n.FALLBACK=n.LABEL=n.AXES=n.GRID=n._DEFAULT_FILL=n._DEFAULT_STROKE=n.PORTRAIT=n.LANDSCAPE=n.MIRROR=n.CLAMP=n.REPEAT=n.NEAREST=n.IMAGE=n.IMMEDIATE=n.TEXTURE=n.FILL=n.STROKE=n.CURVE=n.BEZIER=void 0;/**
 * @module Constants
 * @submodule Constants
 * @for p5
 */var o=Math.PI,a="1.7.0";/**
 * The default, two-dimensional renderer.
 * @property {String} P2D
 * @final
 */n.VERSION=a;var s="p2d";/**
 * One of the two render modes in p5.js, used for computationally intensive tasks like 3D rendering and shaders.
 *
 * `WEBGL` differs from the default <a href="/#/p5/P2D">`P2D`</a> renderer in the following ways:
 *
 * - **Coordinate System** - When drawing in `WEBGL` mode, the origin point (0,0,0) is located at the center of the screen, not the top-left corner. See <a href="https://p5js.org/learn/getting-started-in-webgl-coords-and-transform.html">the learn page about coordinates and transformations</a>.
 * - **3D Shapes** - `WEBGL` mode can be used to draw 3-dimensional shapes like <a href="/#/p5/box">box()</a>, <a href="/#/p5/sphere">sphere()</a>, <a href="/#/p5/cone">cone()</a>, and <a href="/#Shape3D%20Primitives">more</a>. See <a href="https://p5js.org/learn/getting-started-in-webgl-custom-geometry.html">the learn page about custom geometry</a> to make more complex objects.
 * - **Shape Detail** - When drawing in `WEBGL` mode, you can specify how smooth curves should be drawn by using a `detail` parameter. See <a href="https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5#3d-primitives-shapes">the wiki section about shapes</a> for a more information and an example.
 * - **Textures** - A texture is like a skin that wraps onto a shape. See <a href="https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5#textures">the wiki section about textures</a> for examples of mapping images onto surfaces with textures.
 * - **Materials and Lighting** - `WEBGL` offers different types of lights like <a href="/#/p5/ambientLight">ambientLight()</a> to place around a scene. Materials like <a href="/#/p5/specularMaterial">specularMaterial()</a> reflect the lighting to convey shape and depth. See <a href="https://p5js.org/learn/getting-started-in-webgl-appearance.html">the learn page for styling and appearance</a> to experiment with different combinations.
 * - **Camera** - The viewport of a `WEBGL` sketch can be adjusted by changing camera attributes. See <a href="https://p5js.org/learn/getting-started-in-webgl-appearance.html#camera">the learn page section about cameras</a> for an explanation of camera controls.
 * - **Text** - `WEBGL` requires opentype/truetype font files to be preloaded using <a href="/#/p5/loadFont">loadFont()</a>. See <a href="https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5#text">the wiki section about text</a> for details, along with a workaround.
 * - **Shaders** - Shaders are hardware accelerated programs that can be used for a variety of effects and graphics. See the <a href="https://p5js.org/learn/getting-started-in-webgl-shaders.html">introduction to shaders</a> to get started with shaders in p5.js.
 * - **Graphics Acceleration** - `WEBGL` mode uses the graphics card instead of the CPU, so it may help boost the performance of your sketch (example: drawing more shapes on the screen at once).
 *
 * To learn more about WEBGL mode, check out <a href="https://p5js.org/learn/#:~:text=Getting%20Started%20in%20WebGL">all the interactive WEBGL tutorials</a> in the "Learn" section of this website, or read the wiki article <a href="https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5">"Getting started with WebGL in p5"</a>.
 *
 * @property {String} WEBGL
 * @final
 */n.P2D=s;var l="webgl";/**
 * One of the two possible values of a WebGL canvas (either WEBGL or WEBGL2),
 * which can be used to determine what capabilities the rendering environment
 * has.
 * @property {String} WEBGL2
 * @final
 */n.WEBGL=l;var c="webgl2";// ENVIRONMENT
/**
 * @property {String} ARROW
 * @final
 */n.WEBGL2=c;var u="default";/**
 * @property {String} CROSS
 * @final
 */n.ARROW=u;var p="crosshair";/**
 * @property {String} HAND
 * @final
 */n.CROSS=p;var d="pointer";/**
 * @property {String} MOVE
 * @final
 */n.HAND=d;var m="move";/**
 * @property {String} TEXT
 * @final
 */n.MOVE=m;var f="text";/**
 * @property {String} WAIT
 * @final
 */n.TEXT=f;var h="wait";// TRIGONOMETRY
/**
 * HALF_PI is a mathematical constant with the value
 * 1.57079632679489661923. It is half the ratio of the
 * circumference of a circle to its diameter. It is useful in
 * combination with the trigonometric functions <a href="#/p5/sin">sin()</a> and <a href="#/p5/cos">cos()</a>.
 *
 * @property {Number} HALF_PI
 * @final
 *
 * @example
 * <div><code>
 * arc(50, 50, 80, 80, 0, HALF_PI);
 * </code></div>
 *
 * @alt
 * 80×80 white quarter-circle with curve toward bottom right of canvas.
 */n.WAIT=h;var y=o/2;/**
 * PI is a mathematical constant with the value
 * 3.14159265358979323846. It is the ratio of the circumference
 * of a circle to its diameter. It is useful in combination with
 * the trigonometric functions <a href="#/p5/sin">sin()</a> and <a href="#/p5/cos">cos()</a>.
 *
 * @property {Number} PI
 * @final
 *
 * @example
 * <div><code>
 * arc(50, 50, 80, 80, 0, PI);
 * </code></div>
 *
 * @alt
 * white half-circle with curve toward bottom of canvas.
 */n.HALF_PI=y;var g=o;/**
 * QUARTER_PI is a mathematical constant with the value 0.7853982.
 * It is one quarter the ratio of the circumference of a circle to
 * its diameter. It is useful in combination with the trigonometric
 * functions <a href="#/p5/sin">sin()</a> and <a href="#/p5/cos">cos()</a>.
 *
 * @property {Number} QUARTER_PI
 * @final
 *
 * @example
 * <div><code>
 * arc(50, 50, 80, 80, 0, QUARTER_PI);
 * </code></div>
 *
 * @alt
 * white eighth-circle rotated about 40 degrees with curve bottom right canvas.
 */n.PI=g;var v=o/4;/**
 * TAU is an alias for TWO_PI, a mathematical constant with the
 * value 6.28318530717958647693. It is twice the ratio of the
 * circumference of a circle to its diameter. It is useful in
 * combination with the trigonometric functions <a href="#/p5/sin">sin()</a> and <a href="#/p5/cos">cos()</a>.
 *
 * @property {Number} TAU
 * @final
 *
 * @example
 * <div><code>
 * arc(50, 50, 80, 80, 0, TAU);
 * </code></div>
 *
 * @alt
 * 80×80 white ellipse shape in center of canvas.
 */n.QUARTER_PI=v;var b=2*o;/**
 * TWO_PI is a mathematical constant with the value
 * 6.28318530717958647693. It is twice the ratio of the
 * circumference of a circle to its diameter. It is useful in
 * combination with the trigonometric functions <a href="#/p5/sin">sin()</a> and <a href="#/p5/cos">cos()</a>.
 *
 * @property {Number} TWO_PI
 * @final
 *
 * @example
 * <div><code>
 * arc(50, 50, 80, 80, 0, TWO_PI);
 * </code></div>
 *
 * @alt
 * 80×80 white ellipse shape in center of canvas.
 */n.TAU=b;var x=2*o;/**
 * Constant to be used with the <a href="#/p5/angleMode">angleMode()</a> function, to set the mode in
 * which p5.js interprets and calculates angles (either DEGREES or RADIANS).
 * @property {String} DEGREES
 * @final
 *
 * @example
 * <div class='norender'><code>
 * function setup() {
 *   angleMode(DEGREES);
 * }
 * </code></div>
 */n.TWO_PI=x;var j="degrees";/**
 * Constant to be used with the <a href="#/p5/angleMode">angleMode()</a> function, to set the mode
 * in which p5.js interprets and calculates angles (either RADIANS or DEGREES).
 * @property {String} RADIANS
 * @final
 *
 * @example
 * <div class='norender'><code>
 * function setup() {
 *   angleMode(RADIANS);
 * }
 * </code></div>
 */n.DEGREES=j;var w="radians";n.RADIANS=w;var _=o/180;n.DEG_TO_RAD=_;var S=180/o;// SHAPE
/**
 * @property {String} CORNER
 * @final
 */n.RAD_TO_DEG=S;var E="corner";/**
 * @property {String} CORNERS
 * @final
 */n.CORNER=E;var T="corners";/**
 * @property {String} RADIUS
 * @final
 */n.CORNERS=T;var M="radius";/**
 * @property {String} RIGHT
 * @final
 */n.RADIUS=M;var C="right";/**
 * @property {String} LEFT
 * @final
 */n.RIGHT=C;var O="left";/**
 * @property {String} CENTER
 * @final
 */n.LEFT=O;var N="center";/**
 * @property {String} TOP
 * @final
 */n.CENTER=N;var A="top";/**
 * @property {String} BOTTOM
 * @final
 */n.TOP=A;var R="bottom";/**
 * @property {String} BASELINE
 * @final
 * @default alphabetic
 */n.BOTTOM=R;var L="alphabetic";/**
 * @property {Number} POINTS
 * @final
 * @default 0x0000
 */n.BASELINE=L;var I=0;/**
 * @property {Number} LINES
 * @final
 * @default 0x0001
 */n.POINTS=I;var P=1;/**
 * @property {Number} LINE_STRIP
 * @final
 * @default 0x0003
 */n.LINES=P;var D=3;/**
 * @property {Number} LINE_LOOP
 * @final
 * @default 0x0002
 */n.LINE_STRIP=D;var F=2;/**
 * @property {Number} TRIANGLES
 * @final
 * @default 0x0004
 */n.LINE_LOOP=F;var U=4;/**
 * @property {Number} TRIANGLE_FAN
 * @final
 * @default 0x0006
 */n.TRIANGLES=U;var B=6;/**
 * @property {Number} TRIANGLE_STRIP
 * @final
 * @default 0x0005
 */n.TRIANGLE_FAN=B;var G=5;/**
 * @property {String} QUADS
 * @final
 */n.TRIANGLE_STRIP=G;var V="quads";/**
 * @property {String} QUAD_STRIP
 * @final
 * @default quad_strip
 */n.QUADS=V;var z="quad_strip";/**
 * @property {String} TESS
 * @final
 * @default tess
 */n.QUAD_STRIP=z;var H="tess";/**
 * @property {String} CLOSE
 * @final
 */n.TESS=H;var W="close";/**
 * @property {String} OPEN
 * @final
 */n.CLOSE=W;var q="open";/**
 * @property {String} CHORD
 * @final
 */n.OPEN=q;var X="chord";/**
 * @property {String} PIE
 * @final
 */n.CHORD=X;var Y="pie";/**
 * @property {String} PROJECT
 * @final
 * @default square
 */n.PIE=Y;var Z="square";// PEND: careful this is counterintuitive
/**
 * @property {String} SQUARE
 * @final
 * @default butt
 */n.PROJECT=Z;var K="butt";/**
 * @property {String} ROUND
 * @final
 */n.SQUARE=K;var J="round";/**
 * @property {String} BEVEL
 * @final
 */n.ROUND=J;var Q="bevel";/**
 * @property {String} MITER
 * @final
 */n.BEVEL=Q;var $="miter";// COLOR
/**
 * @property {String} RGB
 * @final
 */n.MITER=$;var ee="rgb";/**
 * HSB (hue, saturation, brightness) is a type of color model.
 * You can learn more about it at
 * <a href="https://learnui.design/blog/the-hsb-color-system-practicioners-primer.html">HSB</a>.
 *
 * @property {String} HSB
 * @final
 */n.RGB=ee;var et="hsb";/**
 * @property {String} HSL
 * @final
 */n.HSB=et;var er="hsl";// DOM EXTENSION
/**
 * AUTO allows us to automatically set the width or height of an element (but not both),
 * based on the current height and width of the element. Only one parameter can
 * be passed to the <a href="/#/p5.Element/size">size</a> function as AUTO, at a time.
 *
 * @property {String} AUTO
 * @final
 */n.HSL=er;var en="auto";/**
 * @property {Number} ALT
 * @final
 */// INPUT
n.AUTO=en;var eo=18;/**
 * @property {Number} BACKSPACE
 * @final
 */n.ALT=eo;var ea=8;/**
 * @property {Number} CONTROL
 * @final
 */n.BACKSPACE=ea;var es=17;/**
 * @property {Number} DELETE
 * @final
 */n.CONTROL=es;var ei=46;/**
 * @property {Number} DOWN_ARROW
 * @final
 */n.DELETE=ei;var el=40;/**
 * @property {Number} ENTER
 * @final
 */n.DOWN_ARROW=el;var ec=13;/**
 * @property {Number} ESCAPE
 * @final
 */n.ENTER=ec;var eu=27;/**
 * @property {Number} LEFT_ARROW
 * @final
 */n.ESCAPE=eu;var ep=37;/**
 * @property {Number} OPTION
 * @final
 */n.LEFT_ARROW=ep;var ed=18;/**
 * @property {Number} RETURN
 * @final
 */n.OPTION=ed;var em=13;/**
 * @property {Number} RIGHT_ARROW
 * @final
 */n.RETURN=em;var ef=39;/**
 * @property {Number} SHIFT
 * @final
 */n.RIGHT_ARROW=ef;var eh=16;/**
 * @property {Number} TAB
 * @final
 */n.SHIFT=eh;var ey=9;/**
 * @property {Number} UP_ARROW
 * @final
 */n.TAB=ey;var eg=38;// RENDERING
/**
 * @property {String} BLEND
 * @final
 * @default source-over
 */n.UP_ARROW=eg;var ev="source-over";/**
 * @property {String} REMOVE
 * @final
 * @default destination-out
 */n.BLEND=ev;var eb="destination-out";/**
 * @property {String} ADD
 * @final
 * @default lighter
 */n.REMOVE=eb;var ex="lighter";//ADD: 'add', //
//SUBTRACT: 'subtract', //
/**
 * @property {String} DARKEST
 * @final
 */n.ADD=ex;var ej="darken";/**
 * @property {String} LIGHTEST
 * @final
 * @default lighten
 */n.DARKEST=ej;var ew="lighten";/**
 * @property {String} DIFFERENCE
 * @final
 */n.LIGHTEST=ew;var e_="difference";/**
 * @property {String} SUBTRACT
 * @final
 */n.DIFFERENCE=e_;var eS="subtract";/**
 * @property {String} EXCLUSION
 * @final
 */n.SUBTRACT=eS;var eE="exclusion";/**
 * @property {String} MULTIPLY
 * @final
 */n.EXCLUSION=eE;var eT="multiply";/**
 * @property {String} SCREEN
 * @final
 */n.MULTIPLY=eT;var ek="screen";/**
 * @property {String} REPLACE
 * @final
 * @default copy
 */n.SCREEN=ek;var eM="copy";/**
 * @property {String} OVERLAY
 * @final
 */n.REPLACE=eM;var eC="overlay";/**
 * @property {String} HARD_LIGHT
 * @final
 */n.OVERLAY=eC;var eO="hard-light";/**
 * @property {String} SOFT_LIGHT
 * @final
 */n.HARD_LIGHT=eO;var eN="soft-light";/**
 * @property {String} DODGE
 * @final
 * @default color-dodge
 */n.SOFT_LIGHT=eN;var eA="color-dodge";/**
 * @property {String} BURN
 * @final
 * @default color-burn
 */n.DODGE=eA;var eR="color-burn";// FILTERS
/**
 * @property {String} THRESHOLD
 * @final
 */n.BURN=eR;var eL="threshold";/**
 * @property {String} GRAY
 * @final
 */n.THRESHOLD=eL;var eI="gray";/**
 * @property {String} OPAQUE
 * @final
 */n.GRAY=eI;var eP="opaque";/**
 * @property {String} INVERT
 * @final
 */n.OPAQUE=eP;var eD="invert";/**
 * @property {String} POSTERIZE
 * @final
 */n.INVERT=eD;var eF="posterize";/**
 * @property {String} DILATE
 * @final
 */n.POSTERIZE=eF;var eU="dilate";/**
 * @property {String} ERODE
 * @final
 */n.DILATE=eU;var eB="erode";/**
 * @property {String} BLUR
 * @final
 */n.ERODE=eB;var eG="blur";// TYPOGRAPHY
/**
 * @property {String} NORMAL
 * @final
 */n.BLUR=eG;var eV="normal";/**
 * @property {String} ITALIC
 * @final
 */n.NORMAL=eV;var ez="italic";/**
 * @property {String} BOLD
 * @final
 */n.ITALIC=ez;var eH="bold";/**
 * @property {String} BOLDITALIC
 * @final
 */n.BOLD=eH;var eW="bold italic";/**
 * @property {String} CHAR
 * @final
 */n.BOLDITALIC=eW;var eq="CHAR";/**
 * @property {String} WORD
 * @final
 */n.CHAR=eq;var eX="WORD";// TYPOGRAPHY-INTERNAL
n.WORD=eX;var eY="#000000";n._DEFAULT_TEXT_FILL=eY;var eZ=1.25;n._DEFAULT_LEADMULT=eZ;var eK="middle";// VERTICES
/**
 * @property {String} LINEAR
 * @final
 */n._CTX_MIDDLE=eK;var eJ="linear";/**
 * @property {String} QUADRATIC
 * @final
 */n.LINEAR=eJ;var eQ="quadratic";/**
 * @property {String} BEZIER
 * @final
 */n.QUADRATIC=eQ;var e$="bezier";/**
 * @property {String} CURVE
 * @final
 */n.BEZIER=e$;var e0="curve";// WEBGL DRAWMODES
/**
 * @property {String} STROKE
 * @final
 */n.CURVE=e0;var e1="stroke";/**
 * @property {String} FILL
 * @final
 */n.STROKE=e1;var e2="fill";/**
 * @property {String} TEXTURE
 * @final
 */n.FILL=e2;var e5="texture";/**
 * @property {String} IMMEDIATE
 * @final
 */n.TEXTURE=e5;var e3="immediate";// WEBGL TEXTURE MODE
// NORMAL already exists for typography
/**
 * @property {String} IMAGE
 * @final
 */n.IMMEDIATE=e3;var e4="image";// WEBGL TEXTURE WRAP AND FILTERING
// LINEAR already exists above
/**
 * @property {String} NEAREST
 * @final
 */n.IMAGE=e4;var e8="nearest";/**
 * @property {String} REPEAT
 * @final
 */n.NEAREST=e8;var e6="repeat";/**
 * @property {String} CLAMP
 * @final
 */n.REPEAT=e6;var e9="clamp";/**
 * @property {String} MIRROR
 * @final
 */n.CLAMP=e9;var e7="mirror";// DEVICE-ORIENTATION
/**
 * @property {String} LANDSCAPE
 * @final
 */n.MIRROR=e7;var te="landscape";/**
 * @property {String} PORTRAIT
 * @final
 */n.LANDSCAPE=te;var tt="portrait";// DEFAULTS
n.PORTRAIT=tt;var tr="#000000";n._DEFAULT_STROKE=tr;var tn="#FFFFFF";/**
 * @property {String} GRID
 * @final
 */n._DEFAULT_FILL=tn;var to="grid";/**
 * @property {String} AXES
 * @final
 */n.GRID=to;var ta="axes";/**
 * @property {String} LABEL
 * @final
 */n.AXES=ta;var ts="label";/**
 * @property {String} FALLBACK
 * @final
 */n.LABEL=ts;var ti="fallback";/**
 * @property {String} CONTAIN
 * @final
 */n.FALLBACK=ti;var tl="contain";/**
 * @property {String} COVER
 * @final
 */n.CONTAIN=tl;var tc="cover";/**
 * @property {String} UNSIGNED_BYTE
 * @final
 */n.COVER=tc;var tu="unsigned-byte";/**
 * @property {String} UNSIGNED_INT
 * @final
 */n.UNSIGNED_BYTE=tu;var tp="unsigned-int";/**
 * @property {String} FLOAT
 * @final
 */n.UNSIGNED_INT=tp;var td="float";/**
 * @property {String} FLOAT
 * @final
 */n.FLOAT=td;var tm="half-float";/**
 * @property {String} RGBA
 * @final
 */n.HALF_FLOAT=tm;var tf="rgba";n.RGBA=tf},{}],285:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.search"),t("core-js/modules/es.string.split"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.search"),t("core-js/modules/es.string.split"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=p(t("./main")),l=u(t("./constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Environment
 * @submodule Environment
 * @for p5
 * @requires core
 * @requires constants
 */var d=[l.ARROW,l.CROSS,l.HAND,l.MOVE,l.TEXT,l.WAIT];s.default.prototype._frameRate=0,s.default.prototype._lastFrameTime=window.performance.now(),s.default.prototype._targetFrameRate=60;var m=window.print;function f(){return window.innerWidth||document.documentElement&&document.documentElement.clientWidth||document.body&&document.body.clientWidth||0}function h(){return window.innerHeight||document.documentElement&&document.documentElement.clientHeight||document.body&&document.body.clientHeight||0}/**
 * System variable that stores the width of the drawing canvas. This value
 * is set by the first parameter of the <a href="#/p5/createCanvas">createCanvas()</a> function.
 * For example, the function call createCanvas(320, 240) sets the width
 * variable to the value 320. The value of width defaults to 100 if
 * <a href="#/p5/createCanvas">createCanvas()</a> is not used in a program.
 *
 * @property {Number} width
 * @readOnly
 */function y(t){if(!(document.fullscreenEnabled||document.webkitFullscreenEnabled||document.mozFullScreenEnabled||document.msFullscreenEnabled))throw Error("Fullscreen not enabled in this browser.");t.requestFullscreen?t.requestFullscreen():t.mozRequestFullScreen?t.mozRequestFullScreen():t.webkitRequestFullscreen?t.webkitRequestFullscreen():t.msRequestFullscreen&&t.msRequestFullscreen()}function g(){document.exitFullscreen?document.exitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.msExitFullscreen&&document.msExitFullscreen()}/**
 * Gets the current URL. Note: when using the
 * p5 Editor, this will return an empty object because the sketch
 * is embedded in an iframe. It will work correctly if you view the
 * sketch using the editor's present or share URLs.
 * @method getURL
 * @return {String} url
 * @example
 * <div>
 * <code>
 * let url;
 * let x = 100;
 *
 * function setup() {
 *   fill(0);
 *   noStroke();
 *   url = getURL();
 * }
 *
 * function draw() {
 *   background(200);
 *   text(url, x, height / 2);
 *   x--;
 * }
 * </code>
 * </div>
 *
 * @alt
 * current url (http://p5js.org/reference/#/p5/getURL) moves right to left.
 *//**
 * The <a href="#/p5/print">print()</a> function writes to the console area of
 * your browser. This function is often helpful for looking at the data a program
 * is producing. This function creates a new line of text for each call to
 * the function. Individual elements can be separated with quotes ("") and joined
 * with the addition operator (+).
 *
 * Note that calling print() without any arguments invokes the window.print()
 * function which opens the browser's print dialog. To print a blank line
 * to console you can write print('\n').
 *
 * @method print
 * @param {Any} contents any combination of Number, String, Object, Boolean,
 *                       Array to print
 * @example
 * <div><code class='norender'>
 * let x = 10;
 * print('The value of x is ' + x);
 * // prints "The value of x is 10"
 * </code></div>
 *
 * @alt
 * default grey canvas
 */s.default.prototype.print=function(){if(arguments.length){var t;(t=console).log.apply(t,arguments)}else m()},/**
 * The system variable <a href="#/p5/frameCount">frameCount</a> contains the
 * number of frames that have been displayed since the program started. Inside
 * <a href="#/p5/setup">setup()</a> the value is 0, after the first iteration
 * of <a href="#/p5/draw">draw()</a> it is 1, etc.
 *
 * @property {Integer} frameCount
 * @readOnly
 * @example
 * <div><code>
 * function setup() {
 *   frameRate(30);
 *   textSize(30);
 *   textAlign(CENTER);
 * }
 *
 * function draw() {
 *   background(200);
 *   text(frameCount, width / 2, height / 2);
 * }
 * </code></div>
 *
 * @alt
 * numbers rapidly counting upward with frame count set to 30.
 */s.default.prototype.frameCount=0,/**
 * The system variable <a href="#/p5/deltaTime">deltaTime</a> contains the time
 * difference between the beginning of the previous frame and the beginning
 * of the current frame in milliseconds.
 *
 * This variable is useful for creating time sensitive animation or physics
 * calculation that should stay constant regardless of frame rate.
 *
 * @property {Integer} deltaTime
 * @readOnly
 * @example
 * <div><code>
 * let rectX = 0;
 * let fr = 30; //starting FPS
 * let clr;
 *
 * function setup() {
 *   background(200);
 *   frameRate(fr); // Attempt to refresh at starting FPS
 *   clr = color(255, 0, 0);
 * }
 *
 * function draw() {
 *   background(200);
 *   rectX = rectX + 1 * (deltaTime / 50); // Move Rectangle in relation to deltaTime
 *
 *   if (rectX >= width) {
 *     // If you go off screen.
 *     if (fr === 30) {
 *       clr = color(0, 0, 255);
 *       fr = 10;
 *       frameRate(fr); // make frameRate 10 FPS
 *     } else {
 *       clr = color(255, 0, 0);
 *       fr = 30;
 *       frameRate(fr); // make frameRate 30 FPS
 *     }
 *     rectX = 0;
 *   }
 *   fill(clr);
 *   rect(rectX, 40, 20, 20);
 * }
 * </code></div>
 *
 * @alt
 * red rect moves left to right, followed by blue rect moving at the same speed
 * with a lower frame rate. Loops.
 */s.default.prototype.deltaTime=0,/**
 * Confirms if the window a p5.js program is in is "focused," meaning that
 * the sketch will accept mouse or keyboard input. This variable is
 * "true" if the window is focused and "false" if not.
 *
 * @property {Boolean} focused
 * @readOnly
 * @example
 * <div><code>
 * // To demonstrate, put two windows side by side.
 * // Click on the window that the p5 sketch isn't in!
 * function draw() {
 *   background(200);
 *   noStroke();
 *   fill(0, 200, 0);
 *   ellipse(25, 25, 50, 50);
 *
 *   if (!focused) {
    // or "if (focused === false)"
 *     stroke(200, 0, 0);
 *     line(0, 0, 100, 100);
 *     line(100, 0, 0, 100);
 *   }
 * }
 * </code></div>
 *
 * @alt
 * green 50×50 ellipse at top left. Red X covers canvas when page focus changes
 */s.default.prototype.focused=document.hasFocus(),/**
 * Sets the cursor to a predefined symbol or an image, or makes it visible
 * if already hidden. If you are trying to set an image as the cursor, the
 * recommended size is 16×16 or 32×32 pixels. The values for parameters x and y
 * must be less than the dimensions of the image.
 *
 * @method cursor
 * @param {String|Constant} type Built-In: either ARROW, CROSS, HAND, MOVE, TEXT and WAIT
 *                               Native CSS properties: 'grab', 'progress', 'cell' etc.
 *                               External: path for cursor's images
 *                               (Allowed File extensions: .cur, .gif, .jpg, .jpeg, .png)
 *                               For more information on Native CSS cursors and url visit:
 *                               https://developer.mozilla.org/en-US/docs/Web/CSS/cursor
 * @param {Number}          [x]  the horizontal active spot of the cursor (must be less than 32)
 * @param {Number}          [y]  the vertical active spot of the cursor (must be less than 32)
 * @example
 * <div><code>
 * // Move the mouse across the quadrants
 * // to see the cursor change
 * function draw() {
 *   line(width / 2, 0, width / 2, height);
 *   line(0, height / 2, width, height / 2);
 *   if (mouseX < 50 && mouseY < 50) {
 *     cursor(CROSS);
 *   } else if (mouseX > 50 && mouseY < 50) {
 *     cursor('progress');
 *   } else if (mouseX > 50 && mouseY > 50) {
 *     cursor('https://avatars0.githubusercontent.com/u/1617169?s=16');
 *   } else {
 *     cursor('grab');
 *   }
 * }
 * </code></div>
 *
 * @alt
 * canvas is divided into four quadrants. cursor on first is a cross, second is a progress,
 * third is a custom cursor using path to the cursor and fourth is a grab.
 */s.default.prototype.cursor=function(t,r,n){var o="auto",a=this._curElement.elt;if(d.includes(t))o=t;else if("string"==typeof t){var s="";r&&n&&"number"==typeof r&&"number"==typeof n&&// https://developer.mozilla.org/en-US/docs/Web/CSS/cursor
(s="".concat(r," ").concat(n)),o="http://"===t.substring(0,7)||"https://"===t.substring(0,8)?"url(".concat(t,") ").concat(s,", auto"):/\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(t)?"url(".concat(t,") ").concat(s,", auto"):t}a.style.cursor=o},/**
 * Specifies the number of frames to be displayed every second. For example,
 * the function call frameRate(30) will attempt to refresh 30 times a second.
 * If the processor is not fast enough to maintain the specified rate, the
 * frame rate will not be achieved. Setting the frame rate within
 * <a href="#/p5/setup">setup()</a> is recommended. The default frame rate is
 * based on the frame rate of the display (here also called "refresh rate"),
 * which is set to 60 frames per second on most computers. A frame rate of 24
 * frames per second (usual for movies) or above will be enough for smooth
 * animations. This is the same as setFrameRate(val).
 *
 * Calling <a href="#/p5/frameRate">frameRate()</a> with no arguments returns
 * the current framerate. The draw function must run at least once before it will
 * return a value. This is the same as <a href="#/p5/getFrameRate">getFrameRate()</a>.
 *
 * Calling <a href="#/p5/frameRate">frameRate()</a> with arguments that are not
 * of the type Number or are non-positive also returns current framerate.
 *
 * @method frameRate
 * @param  {Number} fps number of frames to be displayed every second
 * @chainable
 *
 * @example
 *
 * <div><code>
 * let rectX = 0;
 * let fr = 30; //starting FPS
 * let clr;
 *
 * function setup() {
 *   background(200);
 *   frameRate(fr); // Attempt to refresh at starting FPS
 *   clr = color(255, 0, 0);
 * }
 *
 * function draw() {
 *   background(200);
 *   rectX += 1; // Move Rectangle
 *
 *   if (rectX >= width) {
    // If you go off screen.
 *     if (fr === 30) {
 *       clr = color(0, 0, 255);
 *       fr = 10;
 *       frameRate(fr); // make frameRate 10 FPS
 *     } else {
 *       clr = color(255, 0, 0);
 *       fr = 30;
 *       frameRate(fr); // make frameRate 30 FPS
 *     }
 *     rectX = 0;
 *   }
 *   fill(clr);
 *   rect(rectX, 40, 20, 20);
 * }
 * </code></div>
 *
 * @alt
 * blue rect moves left to right, followed by red rect moving faster. Loops.
 *//**
 * @method frameRate
 * @return {Number}       current frameRate
 */s.default.prototype.frameRate=function(t){return(s.default._validateParameters("frameRate",arguments),"number"!=typeof t||t<0)?this._frameRate:(this._setProperty("_targetFrameRate",t),0===t&&this._setProperty("_frameRate",t),this)},/**
 * Returns the current framerate.
 *
 * @private
 * @return {Number} current frameRate
 */s.default.prototype.getFrameRate=function(){return this.frameRate()},/**
 * Specifies the number of frames to be displayed every second. For example,
 * the function call frameRate(30) will attempt to refresh 30 times a second.
 * If the processor is not fast enough to maintain the specified rate, the
 * frame rate will not be achieved. Setting the frame rate within <a href="#/p5/setup">setup()</a> is
 * recommended. The default rate is 60 frames per second.
 *
 * Calling <a href="#/p5/frameRate">frameRate()</a> with no arguments returns the current framerate.
 *
 * @private
 * @param {Number} [fps] number of frames to be displayed every second
 */s.default.prototype.setFrameRate=function(t){return this.frameRate(t)},/**
 * Returns _targetFrameRate variable. The default _targetFrameRate is set to 60.
 * This could be changed by calling frameRate() and setting it to the desired
 * value. When getTargetFrameRate() is called, it should return the value that was set.
 * @method getTargetFrameRate
 * @return {Number} _targetFrameRate
 * @example
 * <div><code>
 * function draw() {
 *   frameRate(20);
 *   text(getTargetFrameRate(), width / 2, height / 2);
 * }
 * </code></div>
 */s.default.prototype.getTargetFrameRate=function(){return this._targetFrameRate},/**
 * Hides the cursor from view.
 *
 * @method noCursor
 * @example
 * <div><code>
 * function setup() {
 *   noCursor();
 * }
 *
 * function draw() {
 *   background(200);
 *   ellipse(mouseX, mouseY, 10, 10);
 * }
 * </code></div>
 *
 * @alt
 * cursor becomes 10×10 white ellipse the moves with mouse x and y.
 */s.default.prototype.noCursor=function(){this._curElement.elt.style.cursor="none"},/**
 * If the sketch was created in WebGL mode, then `weglVersion` will indicate
 * which version of WebGL it is using. It will try to create a WebGL2 canvas
 * unless you have requested WebGL1 via `setAttributes({ version: 1 })`, and
 * will fall back to WebGL1 if WebGL2 is not available.
 *
 * `webglVersion` will always be either `WEBGL2`, `WEBGL`, or `P2D` if not in
 * WebGL mode.
 * @property {String} webglVersion
 * @readOnly
 * @example
 * <div><code>
 * let myFont;
 * function preload() {
 *   myFont = loadFont('assets/inconsolata.otf');
 * }
 * function setup() {
 *   createCanvas(100, 50, WEBGL);
 *   // Uncomment the following line to see the behavior change in WebGL 1:
 *   // setAttributes({ version: 1 })
 *
 *   const graphic = createGraphics(30, 30);
 *   graphic.background(255);
 *   graphic.noStroke();
 *   graphic.fill(200);
 *   graphic.rect(0, 0, graphic.width/2, graphic.height/2);
 *   graphic.rect(
 *     graphic.width/2, graphic.height/2,
 *     graphic.width/2, graphic.height/2
 *   );
 *
 *   noStroke();
 *   translate(-width/2, -height/2);
 *   textureWrap(REPEAT);
 *   texture(graphic);
 *   beginShape(QUADS);
 *   vertex(0, 0, 0, 0, 0);
 *   vertex(width, 0, 0, width, 0);
 *   vertex(width, height, 0, width, height);
 *   vertex(0, height, 0, 0, height);
 *   endShape();
 *
 *   textFont(myFont);
 *   textAlign(CENTER, CENTER);
 *   textSize(30);
 *   fill(0);
 *   text('WebGL' + (webglVersion === WEBGL2 ? 2 : 1), 0, 0, width, height);
 * }
 * </code></div>
 *
 * @alt
 * This example writes either 'WebGL1' or 'WebGL2' on the canvas, depending on
 * the capabilities of the device it runs on. If it says WebGL2, the background
 * will be checkered. Otherwise, the background will have just one checker tile
 * with colors stretched to the edges of the canvas.
 */s.default.prototype.webglVersion=l.P2D,/**
 * System variable that stores the width of the screen display according to The
 * default <a href="#/p5/pixelDensity">pixelDensity</a>. This is used to run a
 * full-screen program on any display size. To return actual screen size,
 * multiply this by pixelDensity.
 *
 * @property {Number} displayWidth
 * @readOnly
 * @example
 * <div class="norender"><code>
 * createCanvas(displayWidth, displayHeight);
 * </code></div>
 *
 * @alt
 * This example does not render anything.
 */s.default.prototype.displayWidth=screen.width,/**
 * System variable that stores the height of the screen display according to The
 * default <a href="#/p5/pixelDensity">pixelDensity</a>. This is used to run a
 * full-screen program on any display size. To return actual screen size,
 * multiply this by pixelDensity.
 *
 * @property {Number} displayHeight
 * @readOnly
 * @example
 * <div class="norender"><code>
 * createCanvas(displayWidth, displayHeight);
 * </code></div>
 *
 * @alt
 * This example does not render anything.
 */s.default.prototype.displayHeight=screen.height,/**
 * System variable that stores the width of the inner window, it maps to
 * window.innerWidth.
 *
 * @property {Number} windowWidth
 * @readOnly
 * @example
 * <div class="norender"><code>
 * createCanvas(windowWidth, windowHeight);
 * </code></div>
 *
 * @alt
 * This example does not render anything.
 */s.default.prototype.windowWidth=f(),/**
 * System variable that stores the height of the inner window, it maps to
 * window.innerHeight.
 *
 * @property {Number} windowHeight
 * @readOnly
 * @example
 * <div class="norender"><code>
 * createCanvas(windowWidth, windowHeight);
 * </code></div>
 *
 * @alt
 * This example does not render anything.
 */s.default.prototype.windowHeight=h(),/**
 * The <a href="#/p5/windowResized">windowResized()</a> function is called once
 * every time the browser window is resized. This is a good place to resize the
 * canvas or do any other adjustments to accommodate the new window size.
 *
 * @method windowResized
 * @param {Object} [event] optional Event callback argument.
 * @example
 * <div class="norender"><code>
 * function setup() {
 *   createCanvas(windowWidth, windowHeight);
 * }
 *
 * function draw() {
 *   background(0, 100, 200);
 * }
 *
 * function windowResized() {
 *   resizeCanvas(windowWidth, windowHeight);
 * }
 * </code></div>
 * @alt
 * This example does not render anything.
 */s.default.prototype._onresize=function(t){this._setProperty("windowWidth",f()),this._setProperty("windowHeight",h());var r,n=this._isGlobal?window:this;"function"!=typeof n.windowResized||void 0===(r=n.windowResized(t))||r||t.preventDefault()},s.default.prototype.width=0,/**
 * System variable that stores the height of the drawing canvas. This value
 * is set by the second parameter of the <a href="#/p5/createCanvas">createCanvas()</a> function. For
 * example, the function call createCanvas(320, 240) sets the height
 * variable to the value 240. The value of height defaults to 100 if
 * <a href="#/p5/createCanvas">createCanvas()</a> is not used in a program.
 *
 * @property {Number} height
 * @readOnly
 */s.default.prototype.height=0,/**
 * If argument is given, sets the sketch to fullscreen or not based on the
 * value of the argument. If no argument is given, returns the current
 * fullscreen state. Note that due to browser restrictions this can only
 * be called on user input, for example, on mouse press like the example
 * below.
 *
 * @method fullscreen
 * @param  {Boolean} [val] whether the sketch should be in fullscreen mode
 * or not
 * @return {Boolean} current fullscreen state
 * @example
 * <div>
 * <code>
 * // Clicking in the box toggles fullscreen on and off.
 * function setup() {
 *   background(200);
 * }
 * function mousePressed() {
 *   if (mouseX > 0 && mouseX < 100 && mouseY > 0 && mouseY < 100) {
 *     let fs = fullscreen();
 *     fullscreen(!fs);
 *   }
 * }
 * </code>
 * </div>
 *
 * @alt
 * This example does not render anything.
 */s.default.prototype.fullscreen=function(t){if(s.default._validateParameters("fullscreen",arguments),void 0===t)return document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement;t?y(document.documentElement):g()},/**
 * Sets the pixel scaling for high pixel density displays. By default
 * pixel density is set to match display density, call pixelDensity(1)
 * to turn this off. Calling <a href="#/p5/pixelDensity">pixelDensity()</a> with no arguments returns
 * the current pixel density of the sketch.
 *
 * @method pixelDensity
 * @param  {Number} val whether or how much the sketch should scale
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   pixelDensity(1);
 *   createCanvas(100, 100);
 *   background(200);
 *   ellipse(width / 2, height / 2, 50, 50);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * function setup() {
 *   pixelDensity(3.0);
 *   createCanvas(100, 100);
 *   background(200);
 *   ellipse(width / 2, height / 2, 50, 50);
 * }
 * </code>
 * </div>
 *
 * @alt
 * fuzzy 50×50 white ellipse with black outline in center of canvas.
 * sharp 50×50 white ellipse with black outline in center of canvas.
 *//**
 * @method pixelDensity
 * @returns {Number} current pixel density of the sketch
 */s.default.prototype.pixelDensity=function(t){var r;return s.default._validateParameters("pixelDensity",arguments),"number"==typeof t?(t!==this._pixelDensity&&(this._pixelDensity=t),r=this,this.resizeCanvas(this.width,this.height,!0)):r=this._pixelDensity,r},/**
 * Returns the pixel density of the current display the sketch is running on.
 *
 * @method displayDensity
 * @returns {Number} current pixel density of the display
 * @example
 * <div>
 * <code>
 * function setup() {
 *   let density = displayDensity();
 *   pixelDensity(density);
 *   createCanvas(100, 100);
 *   background(200);
 *   ellipse(width / 2, height / 2, 50, 50);
 * }
 * </code>
 * </div>
 *
 * @alt
 * 50×50 white ellipse with black outline in center of canvas.
 */s.default.prototype.displayDensity=function(){return window.devicePixelRatio},s.default.prototype.getURL=function(){return location.href},/**
 * Gets the current URL path as an array. Note: when using the
 * p5 Editor, this will return an empty object because the sketch
 * is embedded in an iframe. It will work correctly if you view the
 * sketch using the editor's present or share URLs.
 * @method getURLPath
 * @return {String[]} path components
 * @example
 * <div class='norender'><code>
 * function setup() {
 *   let urlPath = getURLPath();
 *   for (let i = 0; i < urlPath.length; i++) {
 *     text(urlPath[i], 10, i * 20 + 20);
 *   }
 * }
 * </code></div>
 *
 * @alt
 * This example does not render anything.
 */s.default.prototype.getURLPath=function(){return location.pathname.split("/").filter(function(t){return""!==t})},/**
 * Gets the current URL params as an Object. Note: when using the
 * p5 Editor, this will return an empty object because the sketch
 * is embedded in an iframe. It will work correctly if you view the
 * sketch using the editor's present or share URLs.
 * @method getURLParams
 * @return {Object} URL params
 * @example
 * <div class='norender notest'>
 * <code>
 * // Example: http://p5js.org?year=2014&month=May&day=15
 *
 * function setup() {
 *   let params = getURLParams();
 *   text(params.day, 10, 20);
 *   text(params.month, 10, 40);
 *   text(params.year, 10, 60);
 * }
 * </code>
 * </div>
 *
 * @alt
 * This example does not render anything.
 */s.default.prototype.getURLParams=function(){for(var t,r=/[?&]([^&=]+)(?:[&=])([^&=]+)/gim,n={};null!=(t=r.exec(location.search));)t.index===r.lastIndex&&r.lastIndex++,n[t[1]]=t[2];return n};var v=s.default;n.default=v},{"./constants":284,"./main":296,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.filter":173,"core-js/modules/es.array.includes":176,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.string.includes":207,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.search":213,"core-js/modules/es.string.split":214,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],286:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o={ReferenceError:[{msg:"{{}} is not defined",type:"NOTDEFINED",browser:"all"},{msg:"Can't find variable: {{}}",type:"NOTDEFINED",browser:"Safari"},{msg:"Cannot access '{{.}}' before initialization",type:"CANNOTACCESS",browser:"Chrome"},{msg:"can't access lexical declaration '{{.}}' before initialization",type:"CANNOTACCESS",browser:"Firefox"}],SyntaxError:[{msg:"illegal character",type:"INVALIDTOKEN",browser:"Firefox"},{msg:"Invalid character",type:"INVALIDTOKEN",browser:"Safari"},{msg:"Invalid or unexpected token",type:"INVALIDTOKEN",browser:"Chrome"},{msg:"Unexpected token '{{.}}'",type:"UNEXPECTEDTOKEN",browser:"Chrome"},{msg:"expected {{.}}, got '{{.}}'",type:"UNEXPECTEDTOKEN",browser:"Chrome"},{msg:"Identifier '{{.}}' has already been declared",type:"REDECLAREDVARIABLE",browser:"Chrome"},{msg:"redeclaration of {} {{.}}",type:"REDECLAREDVARIABLE",browser:"Firefox"},{msg:"Missing initializer in const declaration",type:"MISSINGINITIALIZER",browser:"Chrome"},{msg:"missing = in const declaration",type:"MISSINGINITIALIZER",browser:"Firefox"},{msg:"Illegal return statement",type:"BADRETURNORYIELD",browser:"Chrome"},{msg:"return not in function",type:"BADRETURNORYIELD",browser:"Firefox"}],TypeError:[{msg:"{{.}} is not a function",type:"NOTFUNC",browser:"all"},{msg:"Cannot read {{.}} null",type:"READNULL",browser:"Chrome"},{msg:"{{.}} is null",type:"READNULL",browser:"Firefox"},{msg:"Cannot read {{.}} undefined",type:"READUDEFINED",browser:"Chrome"},{msg:"{{.}} is undefined",type:"READUDEFINED",browser:"Firefox"},{msg:"Assignment to constant variable",type:"CONSTASSIGN",browser:"Chrome"},{msg:"invalid assignment to const '{{.}}'",type:"CONSTASSIGN",browser:"Firefox"}]};n.default=o},{}],287:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.some"),t("core-js/modules/es.function.name"),t("core-js/modules/es.object.assign"),t("core-js/modules/es.object.get-own-property-names"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.constructor"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.match"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),t("core-js/modules/es.string.starts-with"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.some"),t("core-js/modules/es.function.name"),t("core-js/modules/es.object.assign"),t("core-js/modules/es.object.get-own-property-names"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.constructor"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.match"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),t("core-js/modules/es.string.starts-with"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=l(t("../main")),s=t("../internationalization");function l(t){return t&&t.__esModule?t:{default:t}}function c(t,r){return d(t)||p(t,r)||u()}function u(){throw TypeError("Invalid attempt to destructure non-iterable instance")}function p(t,r){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)){var n=[],o=!0,a=!1,s=void 0;try{for(var l,c=t[Symbol.iterator]();!(o=(l=c.next()).done)&&(n.push(l.value),!r||n.length!==r);o=!0);}catch(t){a=!0,s=t}finally{try{o||null==c.return||c.return()}finally{if(a)throw s}}return n}}function d(t){if(Array.isArray(t))return t}function m(t){return(m="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}// p5.js blue, p5.js orange, auto dark green; fallback p5.js darkened magenta
// See testColors below for all the color codes and names
var f=["#2D7BB6","#EE9900","#4DB200","#C83C00"],h=null,y=null,g=2,v=!1;if("undefined"!=typeof IS_MINIFIED)a.default._friendlyError=a.default._checkForUserDefinedFunctions=a.default._fesErrorMonitor=function(){};else{for(var b=!1,x=t("./browser_errors").default,j={},w=j.toString,_=["Boolean","Number","String","Function","Array","Date","RegExp","Object","Error"],S=0;S<_.length;S++)j["[object ".concat(_[S],"]")]=_[S].toLowerCase();var E=function(t){return null==t?"".concat(t):"object"===m(t)||"function"==typeof t?j[w.call(t)]||"object":m(t)},T=["setup","draw","preload","deviceMoved","deviceTurned","deviceShaken","doubleClicked","mousePressed","mouseReleased","mouseMoved","mouseDragged","mouseClicked","mouseWheel","touchStarted","touchMoved","touchEnded","keyPressed","keyReleased","keyTyped","windowResized"],M=function(){console.log("    _ \n /\\| |/\\ \n \\ ` ' /  \n / , . \\  \n \\/|_|\\/ \n\n"+(0,s.translator)("fes.pre",{message:(0,s.translator)("fes.welcome")}))},C=function(t,r){var n="";if(null==r||"load"===r.substring(0,4))n=t;else{var o=r.split("."),a=o.length>1?"".concat(o[0],".").concat(o[1]):"p5",s=1===o.length?r:o.slice(2).join("/");n=s.startsWith("p5.")?"".concat(t," (http://p5js.org/reference/#/").concat(a,".").concat(s,")"):"".concat(t," (http://p5js.org/reference/#/").concat(a,"/").concat(s,")")}return n};// TEMP until we get it all working LM
/**
   * Prints out a fancy, colorful message to the console log
   * Attaches Friendly Errors prefix [fes.pre] to the message.
   *
   * @method _report
   * @private
   * @param  {String}          message  Message to be printed
   * @param  {String}          [func]   Name of function
   * @param  {Number|String}   [color]  CSS color code
   *
   * @return console logs
   */a.default._report=function(t,r,n){// if p5._fesLogger is set ( i.e we are running tests ), use that
// instead of console.log
var o=null==a.default._fesLogger?console.log.bind(console):a.default._fesLogger;b&&(M(),b=!1),"undefined"===E(n)?n="#B40033":"number"===E(n)&&(n=f[n]),// Add a link to the reference docs of func at the end of the message
t=C(t,r);var l=["color: ".concat(n),"font-family: Arial","font-size: larger"],c=(0,s.translator)("fes.pre",{message:t});v?o("%c"+c,l.join(";")):o(c)},/**
   * This is a generic method that can be called from anywhere in the p5
   * library to alert users to a common error.
   *
   * @method _friendlyError
   * @private
   * @param  {String}         message   Message to be printed
   * @param  {String}         [func]    Name of the function linked to error
   * @param  {Number|String}  [color]   CSS color code
   */a.default._friendlyError=function(t,r,n){a.default._report(t,r,n)},/**
   * This is called internally if there is an error with autoplay. Generates
   * and prints a friendly error message [fes.autoplay].
   *
   * @method _friendlyAutoplayError
   * @private
   */a.default._friendlyAutoplayError=function(t){var r=(0,s.translator)("fes.autoplay",{src:t,url:"https://developer.mozilla.org/docs/Web/Media/Autoplay_guide"});console.log((0,s.translator)("fes.pre",{message:r}))};/**
   * Measures dissimilarity between two strings by calculating
   * the Levenshtein distance.
   *
   * If the "distance" between them is small enough, it is
   * reasonable to think that one is the misspelled version of the other.
   *
   * Specifically, this uses the Wagner–Fischer algorithm.
   * @method computeEditDistance
   * @private
   * @param {String} w1 the first word
   * @param {String} w2 the second word
   *
   * @returns {Number} the "distance" between the two words, a smaller value
   *                   indicates that the words are similar
   */var O=function(t,r){var n=t.length,o=r.length;if(0===n)return r;if(0===o)return t;for(var a=[],s=[],l=0;l<o+1;l++)s[l]=l;a=s;for(var c=1;c<n+1;c++){s=[];for(var u=0;u<o+1;u++)if(0===u)s[u]=c;else{var p=t[c-1],d=r[u-1],m=999999,f=p.toLowerCase()===d.toLowerCase()?0:1;m=(m=(m=m>f+a[u-1]?f+a[u-1]:m)>1+s[u-1]?1+s[u-1]:m)>1+a[u]?1+a[u]:m,s[u]=m}a=s}return s[o]},N=function(t){if(!a.default.disableFriendlyErrors){// instance as context
var r=t instanceof a.default;t=r?t:window;var n=T,o={};n.forEach(function(t){o[t.toLowerCase()]=t});for(var l=0,c=Object.keys(t);l<c.length;l++){var u=c[l],p=u.toLowerCase();// actual name with correct capitalization doesnt exist in context,
// and if the user-defined symbol is of the type function
if(o[p]&&!t[o[p]]&&"function"==typeof t[u]){var d=(0,s.translator)("fes.checkUserDefinedFns",{name:u,actualName:o[p]});a.default._friendlyError(d,o[p])}}}// if using instance mode, this function would be called with the current
},A=function(t,r){h||y();var n={},o=999999;if(// public p5 properties. Find the property with the minimum distance
h.forEach(function(r){var a=O(t,r.name);n[a]?n[a].push(r):n[a]=[r],a<o&&(o=a)}),o>Math.min(g,t.length))return!1;// Show a message only if the caught symbol and the matched property name
// differ in their name ( either letter difference or difference of case )
var l=n[o].filter(function(r){return r.name!==t});if(0!==l.length){var c,u,p=a.default._getErrorStackParser().parse(r);if(p&&p[0]&&p[0].fileName&&p[0].lineNumber&&p[0].columnNumber&&(c={location:"".concat(p[0].fileName,":").concat(p[0].lineNumber,":").concat(p[0].columnNumber),file:p[0].fileName.split("/").slice(-1),line:p[0].lineNumber}),1===l.length)// allows i18n to pick between the keys "fes.misspelling" and
// "fes.misspelling_plural"
u=(0,s.translator)("fes.misspelling",{name:t,actualName:l[0].name,type:l[0].type,location:c?(0,s.translator)("fes.location",c):"",count:l.length});else{// To be used when there are multiple closest matches. Gives each
// suggestion on its own line, the function name followed by a link to
// reference documentation
var d=l.map(function(t){return C("▶️ "+t.name+("function"===t.type?"()":""),t.name)}).join("\n");u=(0,s.translator)("fes.misspelling",{name:t,suggestions:d,location:c?(0,s.translator)("fes.location",c):"",count:l.length})}// If there is only one closest match, tell _friendlyError to also add
return(// a link to the reference documentation. In case of multiple matches,
// this is already done in the suggestions variable, one link for each
// suggestion.
a.default._friendlyError(u,1===l.length?l[0].name:void 0),!0)}return!1},R=function(t){var r=a.default._fesLogger&&"function"==typeof a.default._fesLogger?a.default._fesLogger:console.log.bind(console);if(t.length>1){var n="";t.forEach(function(t,r){var o,a="".concat(t.fileName,":").concat(t.lineNumber,":").concat(t.columnNumber),l={func:t.functionName,line:t.lineNumber,location:a,file:t.fileName.split("/").slice(-1)};o=0===r?(0,s.translator)("fes.globalErrors.stackTop",l):(0,s.translator)("fes.globalErrors.stackSubseq",l),n+=o}),r(n)}},L=function(t,r){// cannot process a stacktrace that doesn't exist
if(!r)return[!1,null];r.forEach(function(t){t.functionName=t.functionName||""});var n=!1;// of the current file. Any errors we see from this file, we treat as
// internal errors.
try{throw Error()}catch(t){c=a.default._getErrorStackParser().parse(t)[0].fileName}for(var o=r.length-1;o>=0;o--){var l=r[o].functionName.split(".");if(T.includes(l[l.length-1])){// remove everything below an entry point function (setup, draw, etc).
// (it's usually the internal initialization calls)
u=r.slice(0,o+1),p=l[l.length-1],r[0].fileName===c&&(n=!0);break}}// in some cases ( errors in promises, callbacks, etc), no entry-point
if(u||(u=r),n){// from user's code
if(0===// the frameIndex property is added before the filter, so frameIndex
// corresponds to the index of a frame in the original stacktrace.
// Then we filter out all frames which belong to the file that contains
// the p5 library
(u=u.map(function(t,r){return t.frameIndex=r,t}).filter(function(t){return t.fileName!==c})).length)return[!0,null];// get the function just above the topmost frame in the friendlyStack.
// i.e the name of the library function called from user's code
var c,u,p,d,m=r[u[0].frameIndex-1].functionName.split(".").slice(-1)[0];// Try and get the location (line no.) from the top element of the stack
if(u[0].fileName&&u[0].lineNumber&&u[0].columnNumber&&(d={location:"".concat(u[0].fileName,":").concat(u[0].lineNumber,":").concat(u[0].columnNumber),file:u[0].fileName.split("/").slice(-1),line:u[0].lineNumber},a.default._fesLogCache[d.location]))return[!0,null];// Check if the error is due to a non loadX method being used incorrectly
"preload"===p&&null==a.default.prototype._preloadMethods[m]?a.default._friendlyError((0,s.translator)("fes.wrongPreload",{func:m,location:d?(0,s.translator)("fes.location",d):"",error:t.message}),"preload"):a.default._friendlyError((0,s.translator)("fes.libraryError",{func:m,location:d?(0,s.translator)("fes.location",d):"",error:t.message}),m),u&&u.length&&R(u)}return[n,u]},I=function(t){if(!a.default.disableFriendlyErrors){if(t instanceof Error)h=t;else if(t instanceof ErrorEvent)h=t.error;else if(t instanceof PromiseRejectionEvent&&!((h=t.reason)instanceof Error))return;if(h){var r,n=a.default._getErrorStackParser().parse(h),o=c(L(h,n),2),l=o[0],u=o[1];// process the stacktrace from the browser and simplify it to give
// only the user code that lead to it is.
if(!l){var p=x[h.name];if(p){var d=!0,m=!1,f=void 0;try{for(var h,y,g,v=p[Symbol.iterator]();!(d=(g=v.next()).done);d=!0){var b=g.value,j=b.msg;j=(j=(j=j.replace(/{{}}/g,"([a-zA-Z0-9_]+)")).replace(RegExp("{{.}}","g"),"(.+)")).replace(/{}/g,"(?:[a-zA-Z0-9_]+)");var w=h.message.match(j);if(w){(y=Object.assign({},b)).match=w;break}}}catch(t){m=!0,f=t}finally{try{d||null==v.return||v.return()}finally{if(m)throw f}}if(y)switch(n&&n[0].fileName&&n[0].lineNumber&&n[0].columnNumber&&(r={location:"".concat(n[0].fileName,":").concat(n[0].lineNumber,":").concat(n[0].columnNumber),file:n[0].fileName.split("/").slice(-1),line:u[0].lineNumber}),h.name){case"SyntaxError":// We can't really do much with syntax errors other than try to use
// a simpler framing of the error message. The stack isn't available
// for syntax errors
switch(y.type){case"INVALIDTOKEN"://Error if there is an invalid or unexpected token that doesn't belong at this position in the code
//let x = “not a string”; -> string not in proper quotes
var _="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Errors/Illegal_character#What_went_wrong";a.default._friendlyError((0,s.translator)("fes.globalErrors.syntax.invalidToken",{url:_}));break;case"UNEXPECTEDTOKEN"://Error if a specific language construct(, { ; etc) was expected, but something else was provided
//for (let i = 0; i < 5,; ++i) -> a comma after i<5 instead of a semicolon
var S="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Errors/Unexpected_token#What_went_wrong";a.default._friendlyError((0,s.translator)("fes.globalErrors.syntax.unexpectedToken",{url:S}));break;case"REDECLAREDVARIABLE"://Error if a variable is redeclared by the user. Example=>
//let a = 10;
//let a = 100;
var E=y.match[1],T="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter#what_went_wrong";a.default._friendlyError((0,s.translator)("fes.globalErrors.syntax.redeclaredVariable",{symbol:E,url:T}));break;case"MISSINGINITIALIZER"://Error if a const variable is not initialized during declaration
//Example => const a;
var M="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const#what_went_wrong";a.default._friendlyError((0,s.translator)("fes.globalErrors.syntax.missingInitializer",{url:M}));break;case"BADRETURNORYIELD"://Error when a return statement is misplaced(usually outside of a function)
// const a = function(){
//  .....
//  }
//  return; -> misplaced return statement
var C="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield#what_went_wrong";a.default._friendlyError((0,s.translator)("fes.globalErrors.syntax.badReturnOrYield",{url:C}))}break;case"ReferenceError":switch(y.type){case"NOTDEFINED"://Error if there is a non-existent variable referenced somewhere
//let a = 10;
//console.log(x);
var O=y.match[1];if(O&&A(O,h))break;// if the flow gets this far, this is likely not a misspelling
// of a p5 property/function
var N="https://p5js.org/examples/data-variable-scope.html";a.default._friendlyError((0,s.translator)("fes.globalErrors.reference.notDefined",{url:N,symbol:O,location:r?(0,s.translator)("fes.location",r):""})),u&&R(u);break;case"CANNOTACCESS"://Error if a lexical variable was accessed before it was initialized
//console.log(a); -> variable accessed before it was initialized
//let a=100;
var I=y.match[1],P="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init#what_went_wrong";a.default._friendlyError((0,s.translator)("fes.globalErrors.reference.cannotAccess",{url:P,symbol:I,location:r?(0,s.translator)("fes.location",r):""})),u&&R(u)}break;case"TypeError":switch(y.type){case"NOTFUNC"://Error when some code expects you to provide a function, but that didn't happen
//let a = document.getElementByID('foo'); -> getElementById instead of getElementByID
var D=y.match[1],F=D.split("."),U="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Errors/Not_a_function#What_went_wrong",B={url:U,symbol:F[F.length-1],obj:F.slice(0,F.length-1).join("."),location:r?(0,s.translator)("fes.location",r):""};F.length>1?a.default._friendlyError((0,s.translator)("fes.globalErrors.type.notfuncObj",B)):a.default._friendlyError((0,s.translator)("fes.globalErrors.type.notfunc",B)),u&&R(u);break;case"READNULL"://Error if a property of null is accessed
//let a = null;
//console.log(a.property); -> a is null
var G=y.match[1],V="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Cant_access_property#what_went_wrong";/*let url2 =
                  'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null';*/a.default._friendlyError((0,s.translator)("fes.globalErrors.type.readFromNull",{url:V,symbol:G,location:r?(0,s.translator)("fes.location",r):""})),u&&R(u);break;case"READUDEFINED"://Error if a property of undefined is accessed
//let a; -> default value of a is undefined
//console.log(a.property); -> a is undefined
var z=y.match[1],H="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Cant_access_property#what_went_wrong";/*let url2 =
                  'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined#description';*/a.default._friendlyError((0,s.translator)("fes.globalErrors.type.readFromUndefined",{url:H,symbol:z,location:r?(0,s.translator)("fes.location",r):""})),u&&R(u);break;case"CONSTASSIGN"://Error when a const variable is reassigned a value
//const a = 100;
//a=10;
var W="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment#what_went_wrong";a.default._friendlyError((0,s.translator)("fes.globalErrors.type.constAssign",{url:W,location:r?(0,s.translator)("fes.location",r):""})),u&&R(u)}}// Try and get the location from the top element of the stack
}// this type of error can't be handled yet
}}}// Try to get the error object from e
};a.default._fesErrorMonitor=I,a.default._checkForUserDefinedFunctions=N,a.default._fesLogger=null,a.default._fesLogCache={},window.addEventListener("load",N,!1),window.addEventListener("error",a.default._fesErrorMonitor,!1),window.addEventListener("unhandledrejection",a.default._fesErrorMonitor,!1);/**
   * Prints out all the colors in the color pallete with white text.
   * For color blindness testing.
   *//* function testColors() {
    const str = 'A box of biscuits, a box of mixed biscuits and a biscuit mixer';
    p5._friendlyError(str, 'print', '#ED225D'); // p5.js magenta
    p5._friendlyError(str, 'print', '#2D7BB6'); // p5.js blue
    p5._friendlyError(str, 'print', '#EE9900'); // p5.js orange
    p5._friendlyError(str, 'print', '#A67F59'); // p5.js light brown
    p5._friendlyError(str, 'print', '#704F21'); // p5.js gold
    p5._friendlyError(str, 'print', '#1CC581'); // auto cyan
    p5._friendlyError(str, 'print', '#FF6625'); // auto orange
    p5._friendlyError(str, 'print', '#79EB22'); // auto green
    p5._friendlyError(str, 'print', '#B40033'); // p5.js darkened magenta
    p5._friendlyError(str, 'print', '#084B7F'); // p5.js darkened blue
    p5._friendlyError(str, 'print', '#945F00'); // p5.js darkened orange
    p5._friendlyError(str, 'print', '#6B441D'); // p5.js darkened brown
    p5._friendlyError(str, 'print', '#2E1B00'); // p5.js darkened gold
    p5._friendlyError(str, 'print', '#008851'); // auto dark cyan
    p5._friendlyError(str, 'print', '#C83C00'); // auto dark orange
    p5._friendlyError(str, 'print', '#4DB200'); // auto dark green
  } */}// This is a lazily-defined list of p5 symbols that may be
// misused by beginners at top-level code, outside of setup/draw. We'd like
// to detect these errors and help the user by suggesting they move them
// into setup/draw.
//
// For more details, see https://github.com/processing/p5.js/issues/1121.
h=null;var P="https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup";/**
 * A helper function for populating misusedAtTopLevel list.
 *
 * @method defineMisusedAtTopLevelCode
 * @private
 */y=function(){var r={},n=function(t){return Object.getOwnPropertyNames(t).filter(function(t){return"_"!==t[0]&&!(t in r)&&(r[t]=!0,!0)}).map(function(r){var n;return n="function"==typeof t[r]?"function":r===r.toUpperCase()?"constant":"variable",{name:r,type:n}})};// possible to the user, e.g. advising them about HALF_PI instead of PI
// when their code misuses the former.
(h=[].concat(n(a.default.prototype),// ReferenceError is thrown, so we'll manually add them to our list.
n(t("../constants")))).sort(function(t,r){return r.name.length-t.name.length})};/**
 * Detects browser level error event for p5 constants/functions used outside
 * of setup() and draw().
 *
 * Generates and prints a friendly error message using key:
 * "fes.misusedTopLevel".
 *
 * @method helpForMisusedAtTopLevelCode
 * @private
 * @param {Event} e       Error event
 * @param {Boolean} log   false
 *
 * @returns {Boolean} true
 */var D=function(t,r){r||(r=console.log.bind(console)),h||y(),// If we find that we're logging lots of false positives, we can
// uncomment the following code to avoid displaying anything if the
// user's code isn't likely to be using p5's global mode. (Note that
// setup/draw are more likely to be defined due to JS function hoisting.)
//
//if (!('setup' in window || 'draw' in window)) {
//  return;
//}
h.some(function(n){// Note that while just checking for the occurrence of the
// symbol name in the error message could result in false positives,
// a more rigorous test is difficult because different browsers
// log different messages, and the format of those messages may
// change over time.
//
// For example, if the user uses 'PI' in their code, it may result
// in any one of the following messages:
//
//   * 'PI' is undefined                           (Microsoft Edge)
//   * ReferenceError: PI is undefined             (Firefox)
//   * Uncaught ReferenceError: PI is not defined  (Chrome)
if(t.message&&null!==t.message.match("\\W?".concat(n.name,"\\W"))){var o="function"===n.type?"".concat(n.name,"()"):n.name;return"undefined"!=typeof IS_MINIFIED?r("Did you just try to use p5.js's ".concat(o," ").concat(n.type,"? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: ").concat(P)):r((0,s.translator)("fes.misusedTopLevel",{symbolName:o,symbolType:n.type,url:P})),!0}})};// Exposing this primarily for unit testing.
a.default.prototype._helpForMisusedAtTopLevelCode=D,"complete"!==document.readyState&&(window.addEventListener("error",D,!1),// global (non-instance mode) p5 APIs are used at the top-level
// scope of a file, so we'll unbind our error listener now to make
// sure we don't log false positives later.
window.addEventListener("load",function(){window.removeEventListener("error",D,!1)}));var F=a.default;n.default=F},{"../constants":284,"../internationalization":294,"../main":296,"./browser_errors":286,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.filter":173,"core-js/modules/es.array.for-each":174,"core-js/modules/es.array.includes":176,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.join":179,"core-js/modules/es.array.map":181,"core-js/modules/es.array.slice":182,"core-js/modules/es.array.some":183,"core-js/modules/es.function.name":185,"core-js/modules/es.object.assign":192,"core-js/modules/es.object.get-own-property-names":195,"core-js/modules/es.object.keys":197,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.constructor":202,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.match":209,"core-js/modules/es.string.replace":212,"core-js/modules/es.string.split":214,"core-js/modules/es.string.starts-with":215,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/web.dom-collections.for-each":253,"core-js/modules/web.dom-collections.iterator":254}],288:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=s(t("../main")),a=t("../internationalization");function s(t){return t&&t.__esModule?t:{default:t}}/**
 * @for p5
 * @requires core
 */if("undefined"!=typeof IS_MINIFIED)o.default._friendlyFileLoadError=function(){};else{// mapping used by `_friendlyFileLoadError`
var l=function(t,r){var n=(0,a.translator)("fes.fileLoadError.suggestion",{filePath:r,url:"https://github.com/processing/p5.js/wiki/Local-server"});switch(t){case 0:return{message:(0,a.translator)("fes.fileLoadError.image",{suggestion:n}),method:"loadImage"};case 1:return{message:(0,a.translator)("fes.fileLoadError.xml",{suggestion:n}),method:"loadXML"};case 2:return{message:(0,a.translator)("fes.fileLoadError.table",{suggestion:n}),method:"loadTable"};case 3:return{message:(0,a.translator)("fes.fileLoadError.strings",{suggestion:n}),method:"loadStrings"};case 4:return{message:(0,a.translator)("fes.fileLoadError.font",{suggestion:n}),method:"loadFont"};case 5:return{message:(0,a.translator)("fes.fileLoadError.json",{suggestion:n}),method:"loadJSON"};case 6:return{message:(0,a.translator)("fes.fileLoadError.bytes",{suggestion:n}),method:"loadBytes"};case 7:return{message:(0,a.translator)("fes.fileLoadError.large"),method:"loadX"};case 8:return{message:(0,a.translator)("fes.fileLoadError.gif"),method:"loadImage"}}};/**
   * Called internally if there is an error during file loading.
   *
   * Generates and prints a friendly error message using key:
   * "fes.fileLoadError.[*]".
   *
   * @method _friendlyFileLoadError
   * @private
   * @param  {Number} errorType   Number of file load error type
   * @param  {String} filePath    Path to file caused the error
   */o.default._friendlyFileLoadError=function(t,r){var n=l(t,r),a=n.message,s=n.method;o.default._friendlyError(a,s,3)}}var c=o.default;n.default=c},{"../internationalization":294,"../main":296}],289:[function(_dereq_,module,exports){function _typeof2(t){return(_typeof2="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"===_typeof2(Symbol.iterator)?function(t){return _typeof2(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":_typeof2(t)})(t)}_dereq_("core-js/modules/es.symbol"),_dereq_("core-js/modules/es.symbol.description"),_dereq_("core-js/modules/es.symbol.iterator"),_dereq_("core-js/modules/es.array.filter"),_dereq_("core-js/modules/es.array.for-each"),_dereq_("core-js/modules/es.array.from"),_dereq_("core-js/modules/es.array.includes"),_dereq_("core-js/modules/es.array.index-of"),_dereq_("core-js/modules/es.array.iterator"),_dereq_("core-js/modules/es.array.join"),_dereq_("core-js/modules/es.array.map"),_dereq_("core-js/modules/es.array.slice"),_dereq_("core-js/modules/es.object.get-own-property-descriptor"),_dereq_("core-js/modules/es.object.keys"),_dereq_("core-js/modules/es.object.to-string"),_dereq_("core-js/modules/es.regexp.constructor"),_dereq_("core-js/modules/es.regexp.exec"),_dereq_("core-js/modules/es.regexp.to-string"),_dereq_("core-js/modules/es.string.includes"),_dereq_("core-js/modules/es.string.iterator"),_dereq_("core-js/modules/es.string.match"),_dereq_("core-js/modules/es.string.split"),_dereq_("core-js/modules/es.string.trim"),_dereq_("core-js/modules/es.weak-map"),_dereq_("core-js/modules/web.dom-collections.for-each"),_dereq_("core-js/modules/web.dom-collections.iterator"),_dereq_("core-js/modules/es.symbol"),_dereq_("core-js/modules/es.symbol.description"),_dereq_("core-js/modules/es.symbol.iterator"),_dereq_("core-js/modules/es.array.filter"),_dereq_("core-js/modules/es.array.for-each"),_dereq_("core-js/modules/es.array.from"),_dereq_("core-js/modules/es.array.includes"),_dereq_("core-js/modules/es.array.index-of"),_dereq_("core-js/modules/es.array.iterator"),_dereq_("core-js/modules/es.array.join"),_dereq_("core-js/modules/es.array.map"),_dereq_("core-js/modules/es.array.slice"),_dereq_("core-js/modules/es.object.keys"),_dereq_("core-js/modules/es.object.to-string"),_dereq_("core-js/modules/es.regexp.constructor"),_dereq_("core-js/modules/es.regexp.exec"),_dereq_("core-js/modules/es.regexp.to-string"),_dereq_("core-js/modules/es.string.includes"),_dereq_("core-js/modules/es.string.iterator"),_dereq_("core-js/modules/es.string.match"),_dereq_("core-js/modules/es.string.split"),_dereq_("core-js/modules/es.string.trim"),_dereq_("core-js/modules/web.dom-collections.for-each"),_dereq_("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _main=_interopRequireDefault(_dereq_("../main")),_internationalization=_dereq_("../internationalization"),constants=_interopRequireWildcard(_dereq_("../constants"));function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return _getRequireWildcardCache=function(){return t},t}function _interopRequireWildcard(t){if(t&&t.__esModule)return t;if(null===t||"object"!==_typeof(t)&&"function"!=typeof t)return{default:t};var r=_getRequireWildcardCache();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var s=o?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t)){for(var r=0,n=Array(t.length);r<t.length;r++)n[r]=t[r];return n}}/**
 * Checks if any p5.js constant/function is declared outside of setup()
 * and draw() function. Also checks any reserved constant/function is
 * redeclared.
 *
 * Generates and prints a friendly error message using key:
 * "fes.sketchReaderErrors.reservedConst",
 * "fes.sketchReaderErrors.reservedFunc".
 *
 * @method _fesCodeReader
 * @private
 */if("undefined"!=typeof IS_MINIFIED)_main.default._fesCodeReader=function(){};else{//list of functions to ignore as they either
//are ment to be defined or generate false positive
//outputs
var ignoreFunction=["setup","draw","preload","deviceMoved","deviceTurned","deviceShaken","doubleClicked","mousePressed","mouseReleased","mouseMoved","mouseDragged","mouseClicked","mouseWheel","touchStarted","touchMoved","touchEnded","keyPressed","keyReleased","keyTyped","windowResized","name","parent","toString","print","stop","onended"],checkForConstsAndFuncs=function(t){for(var r=0;r<t.length;r++)//will be true, hence a match is found
if(void 0!==constants[t[r]]){var n="https://p5js.org/reference/#/p5/".concat(t[r]);//display the FES message if a match is found
_main.default._friendlyError((0,_internationalization.translator)("fes.sketchReaderErrors.reservedConst",{url:n,symbol:t[r]}));return;//if match found then end search
}for(var o={},a=0,s=Object.keys(_main.default);a<s.length;a++){var l=s[a];// Get a list of all constructors in p5. They are functions whose names
// start with a capital letter
"function"==typeof _main.default[l]&&l[0]!==l[0].toLowerCase()&&(o[l]=_main.default[l])}for(var c=0;c<t.length;c++)if(!ignoreFunction.includes(t[c])){for(var u=Object.keys(o),p=0;p<u.length;p++)if(void 0!==o[u[p]].prototype[t[c]]){//if a p5.js function is used ie it is in the funcs array
var d="https://p5js.org/reference/#/p5/".concat(t[c]);_main.default._friendlyError((0,_internationalization.translator)("fes.sketchReaderErrors.reservedFunc",{url:d,symbol:t[c]}));return}}},optionalVarKeyword=/(?:(?:let|const|var)\s+)?/,roundBracketedExpr=/(?:\([^)]*\))/,squareBracketedExpr=/(?:\[[^\]]*\])/,curlyBracketedExpr=/(?:\{[^}]*\})/,bracketedExpr=new RegExp([roundBracketedExpr,squareBracketedExpr,curlyBracketedExpr].map(function(t){return t.source}).join("|")),rightHandSide=RegExp("(?:"+bracketedExpr.source+"|[^\\n,])+"),leftHandSide=/([\w$]+)/,assignmentOperator=/\s*=\s*/,singleAssignment=new RegExp(leftHandSide.source+assignmentOperator.source+rightHandSide.source),listSeparator=/,\s*/,oneOrMoreAssignments=RegExp("(?:"+singleAssignment.source+listSeparator.source+")*"+singleAssignment.source),assignmentStatement=RegExp("^"+optionalVarKeyword.source+oneOrMoreAssignments.source),letConstName=/(?:(?:let|const)\s+)([\w$]+)/,extractVariables=function(t){//extract variable names from the user's code
var r=[];t.forEach(function(t){// Match 0 is the part of the line of code that the regex looked at.
// Matches 1 and onward will be only the variable names on the left hand
// side of assignment expressions.
var n=t.match(assignmentStatement);n&&r.push.apply(r,_toConsumableArray(n.slice(1).filter(function(t){return void 0!==t})))}),checkForConstsAndFuncs(r)},extractFuncVariables=function(t){var r=[];//RegExp to extract function names from let/const x = function()...
//visit https://regexr.com/ for the detailed view.
t.forEach(function(t){null!==t.match(letConstName)&&r.push(t.match(letConstName)[1])}),checkForConstsAndFuncs(r)},codeToLines=function(t){//convert code to array of code and filter out
//unnecessary lines
var r=t.split("\n").map(function(t){return t.trim()}).filter(function(t){return""!==t&&!t.includes("//")&&(t.includes("let")||t.includes("const"))&&!t.includes("=>")&&!t.includes("function")}//filter out lines containing variable names
),n=t.split("\n").map(function(t){return t.trim()}).filter(function(t){return""!==t&&!t.includes("//")&&(t.includes("let")||t.includes("const"))&&(t.includes("=>")||t.includes("function"))});//filter out lines containing function names
extractVariables(r),extractFuncVariables(n)},removeMultilineComments=function(t){for(var r=t.indexOf("/*"),n=t.indexOf("*/");-1!==r&&-1!==n;)r=(t=0===r?t.slice(n+2):t.slice(0,r)+t.slice(n+2)).indexOf("/*"),n=t.indexOf("*/");return t},globalConstFuncCheck=function(){for(var element,tempArray=Object.keys(constants),i=0;i<tempArray.length;i++){try{//if the user has not declared p5.js constant anywhere outside the
//setup or draw function then this will throw an
//error.
element=eval(tempArray[i])}catch(e){continue}//if we are not getting an error this means
//user have changed the value. We will check
//if the value is changed and if it is changed
//then report.
if(constants[tempArray[i]]!==element){var url="https://p5js.org/reference/#/p5/".concat(tempArray[i]);//for p5.js functions.
return _main.default._friendlyError((0,_internationalization.translator)("fes.sketchReaderErrors.reservedConst",{url:url,symbol:tempArray[i]})),!0}}//the below code gets a list of p5.js functions
for(var p5Constructors={},_i3=0,_Object$keys2=Object.keys(_main.default);_i3<_Object$keys2.length;_i3++){var key=_Object$keys2[_i3];// Get a list of all constructors in p5. They are functions whose names
// start with a capital letter
"function"==typeof _main.default[key]&&key[0]!==key[0].toLowerCase()&&(p5Constructors[key]=_main.default[key])}for(var keyArray=Object.keys(p5Constructors),classesWithGlobalFns=["Renderer","Renderer2D","RendererGL"],functionArray=[],_i4=0;_i4<classesWithGlobalFns.length;_i4++)functionArray.push.apply(functionArray,_toConsumableArray(Object.keys(p5Constructors[classesWithGlobalFns[_i4]].prototype)));//we have p5.js function names with us so we will check
//if they have been declared or not.
for(var _i5=0;_i5<functionArray.length;_i5++)if(!ignoreFunction.includes(functionArray[_i5])){try{//if we get an error that means the function is not declared
element=eval(functionArray[_i5])}catch(e){continue}//if we are not getting an error this means
//user have used p5.js function. Check if it is
//changed and if so then report it.
for(var k=0;k<keyArray.length;k++)if(void 0===p5Constructors[keyArray[k]].prototype[functionArray[_i5]]);else if(p5Constructors[keyArray[k]].prototype[functionArray[_i5]]!==element){var _url2="https://p5js.org/reference/#/p5/".concat(functionArray[_i5]);return _main.default._friendlyError((0,_internationalization.translator)("fes.sketchReaderErrors.reservedFunc",{url:_url2,symbol:functionArray[_i5]})),!0}}},fesCodeReader=function(){if(!globalConstFuncCheck()){var t="";try{//get code from setup
t+=""+setup}catch(r){t+=""}try{//get code from draw
t+="\n"+draw}catch(r){t+=""}""!==t&&(t=removeMultilineComments(t),codeToLines(t))}};_main.default._fesCodeReader=fesCodeReader,window.addEventListener("load",_main.default._fesCodeReader)}var _default=_main.default;exports.default=_default},{"../constants":284,"../internationalization":294,"../main":296,"core-js/modules/es.array.filter":173,"core-js/modules/es.array.for-each":174,"core-js/modules/es.array.from":175,"core-js/modules/es.array.includes":176,"core-js/modules/es.array.index-of":177,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.join":179,"core-js/modules/es.array.map":181,"core-js/modules/es.array.slice":182,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.keys":197,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.constructor":202,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.includes":207,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.match":209,"core-js/modules/es.string.split":214,"core-js/modules/es.string.trim":217,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.for-each":253,"core-js/modules/web.dom-collections.iterator":254}],290:[function(t,r,n){t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.match"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.match"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @for p5
 * @requires core
 */// Borrow from stacktracejs https://github.com/stacktracejs/stacktrace.js with
// minor modifications. The license for the same and the code is included below
// Copyright (c) 2017 Eric Wendelin and other contributors
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
// of the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
function s(){var t=/(^|@)\S+:\d+/,r=/^\s*at .*(\S+:\d+|\(native\))/m,n=/^(eval@)?(\[native code])?$/;return{/**
     * Given an Error object, extract the most information from it.
     * @private
     * @param {Error} error object
     * @return {Array} of stack frames
     */parse:function(t){return void 0!==t.stacktrace||void 0!==t["opera#sourceloc"]?this.parseOpera(t):t.stack&&t.stack.match(r)?this.parseV8OrIE(t):t.stack?this.parseFFOrSafari(t):void 0},// Separate line and column numbers from a string of the form: (URI:Line:Column)
extractLocation:function(t){// Fail-fast but return locations like "(native)"
if(-1===t.indexOf(":"))return[t];var r=/(.+?)(?::(\d+))?(?::(\d+))?$/.exec(t.replace(/[()]/g,""));return[r[1],r[2]||void 0,r[3]||void 0]},parseV8OrIE:function(t){return t.stack.split("\n").filter(function(t){return!!t.match(r)},this).map(function(t){t.indexOf("(eval ")>-1&&(t=t.replace(/eval code/g,"eval").replace(/(\(eval at [^()]*)|(\),.*$)/g,""));var r=t.replace(/^\s+/,"").replace(/\(eval code/g,"("),n=r.match(/ (\((.+):(\d+):(\d+)\)$)/),o=(r=n?r.replace(n[0],""):r).split(/\s+/).slice(1),a=this.extractLocation(n?n[1]:o.pop());// capture and preseve the parenthesized location "(/foo/my bar.js:12:87)" in
return{functionName:o.join(" ")||void 0,fileName:["eval","<anonymous>"].indexOf(a[0])>-1?void 0:a[0],lineNumber:a[1],columnNumber:a[2],source:t}},this)},parseFFOrSafari:function(t){return t.stack.split("\n").filter(function(t){return!t.match(n)},this).map(function(t){if(t.indexOf(" > eval")>-1&&(t=t.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g,":$1")),-1===t.indexOf("@")&&-1===t.indexOf(":"))return{functionName:t};var r=/((.*".+"[^@]*)?[^@]*)(?:@)/,n=t.match(r),o=n&&n[1]?n[1]:void 0,a=this.extractLocation(t.replace(r,""));return{functionName:o,fileName:a[0],lineNumber:a[1],columnNumber:a[2],source:t}},this)},parseOpera:function(t){return!t.stacktrace||t.message.indexOf("\n")>-1&&t.message.split("\n").length>t.stacktrace.split("\n").length?this.parseOpera9(t):t.stack?this.parseOpera11(t):this.parseOpera10(t)},parseOpera9:function(t){for(var r=/Line (\d+).*script (?:in )?(\S+)/i,n=t.message.split("\n"),o=[],a=2,s=n.length;a<s;a+=2){var l=r.exec(n[a]);l&&o.push({fileName:l[2],lineNumber:l[1],source:n[a]})}return o},parseOpera10:function(t){for(var r=/Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,n=t.stacktrace.split("\n"),o=[],a=0,s=n.length;a<s;a+=2){var l=r.exec(n[a]);l&&o.push({functionName:l[3]||void 0,fileName:l[2],lineNumber:l[1],source:n[a]})}return o},// Opera 10.65+ Error.stack very similar to FF/Safari
parseOpera11:function(r){return r.stack.split("\n").filter(function(r){return!!r.match(t)&&!r.match(/^Error created at/)},this).map(function(t){var r,n=t.split("@"),o=this.extractLocation(n.pop()),a=n.shift()||"",s=a.replace(/<anonymous function(: (\w+))?>/,"$2").replace(/\([^)]*\)/g,"")||void 0;return a.match(/\(([^)]*)\)/)&&(r=a.replace(/^[^(]+\(([^)]*)\)$/,"$1")),{functionName:s,args:void 0===r||"[arguments not available]"===r?void 0:r.split(","),fileName:o[0],lineNumber:o[1],columnNumber:o[2],source:t}},this)}}}// End borrow
// wrapper exposing ErrorStackParser
o.default._getErrorStackParser=function(){return new s};var l=o.default;n.default=l},{"../main":296,"core-js/modules/es.array.filter":173,"core-js/modules/es.array.index-of":177,"core-js/modules/es.array.join":179,"core-js/modules/es.array.map":181,"core-js/modules/es.array.slice":182,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.string.match":209,"core-js/modules/es.string.replace":212,"core-js/modules/es.string.split":214}],291:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.last-index-of"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.function.name"),t("core-js/modules/es.map"),t("core-js/modules/es.number.constructor"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.set"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.split"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.last-index-of"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.function.name"),t("core-js/modules/es.map"),t("core-js/modules/es.number.constructor"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.set"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.split"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=p(t("../main")),s=u(t("../constants")),l=t("../internationalization");function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==_(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var s=o?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}function d(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function m(t,r){if("function"!=typeof r&&null!==r)throw TypeError("Super expression must either be null or a function");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),r&&j(t,r)}function f(t){function r(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}return function(){var n,o=w(t);if(r()){var a=w(this).constructor;n=Reflect.construct(o,arguments,a)}else n=o.apply(this,arguments);return h(this,n)}}function h(t,r){return r&&("object"===_(r)||"function"==typeof r)?r:y(t)}function y(t){if(void 0===t)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function g(t){var r="function"==typeof Map?new Map:void 0;return(g=function(t){if(null===t||!x(t))return t;if("function"!=typeof t)throw TypeError("Super expression must either be null or a function");if(void 0!==r){if(r.has(t))return r.get(t);r.set(t,n)}function n(){return b(t,arguments,w(this).constructor)}return n.prototype=Object.create(t.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),j(n,t)})(t)}function v(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function b(t,r,n){return(b=v()?Reflect.construct:function(t,r,n){var o=[null];o.push.apply(o,r);var a=new(Function.bind.apply(t,o));return n&&j(a,n.prototype),a}).apply(null,arguments)}function x(t){return -1!==Function.toString.call(t).indexOf("[native code]")}function j(t,r){return(j=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t})(t,r)}function w(t){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _(t){return(_="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}if("undefined"!=typeof IS_MINIFIED)a.default._validateParameters=a.default._clearValidateParamsCache=function(){};else{var S=JSON.parse(JSON.stringify(t("../../../docs/parameterData.json"))),E={},T=new Set(["null","number","string","boolean","constant","function","any","integer"]),M={number:!0,boolean:!0,string:!0,function:!0,undefined:!0},C={};for(var O in s)C[s[O]]=O;// mapping names of p5 types to their constructor function
// p5Constructors:
//    - Color: f()
//    - Graphics: f()
//    - Vector: f()
// and so on
var N={},A={};// For speedup over many runs. funcSpecificConstructors[func] only has the
window.addEventListener("load",function(){// Make a list of all p5 classes to be used for argument validation
// This must be done only when everything has loaded otherwise we get
// an empty array
for(var t=0,r=Object.keys(a.default);t<r.length;t++){var n=r[t];// Get a list of all constructors in p5. They are functions whose names
// start with a capital letter
"function"==typeof a.default[n]&&n[0]!==n[0].toLowerCase()&&(N[n]=a.default[n])}});var R={},L=function(t,r,n){var o=_(t);if(M[o])// value itself to be stored in the tree instead of the type
r=C[t]?r[t]||(r[t]={}):r[o]||(r[o]={});else if(null===t)r=r.null||(r.null={});else{// objects which are instances of p5 classes have nameless constructors.
// native objects have a constructor named "Object". This check
// differentiates between the two so that we dont waste time finding the
// p5 class if we just have a native object
if(t.constructor&&t.constructor.name)return r=r[t.constructor.name]||(r[t.constructor.name]={});// constructors for types defined in p5 do not have a name property.
// e.constructor.name gives "". Code in this segment is a workaround for it
// p5C will only have the name: constructor mapping for types
// which were already seen as args of "func"
var a=A[n];// p5C would contain much fewer items than p5Constructors. if we find our
for(var s in void 0===a&&// make an entry of empty object
(a=A[n]={}),a)if(t instanceof a[s])return r=r[s]||(r[s]={});for(var l in N)if(t instanceof N[l])return r=r[l]||(r[l]={}),a[l]=N[l],r;// nothing worked, put the type as is
r=r[o]||(r[o]={})}return r},I=function(t,r){// get the if an argument tree for current function already exists
var n=R[t];void 0===n&&(n=R[t]={});for(var o=0,a=r.length;o<a;++o){var s=r[o];if(s instanceof Array){// an array is passed as an argument, expand it and get the type of
// each of its element. We distinguish the start of an array with 'as'
// or arraystart. This would help distinguish between the arguments
// (number, number, number) and (number, [number, number])
n=n.as||(n.as={});for(var l=0,c=s.length;l<c;++l)n=L(s[l],n,t)}else n=L(s,n,t)}return n},P=function(t){// look for the docs in the `data.json` datastructure
var r=t.lastIndexOf("."),n=t.slice(r+1),o=S[t.slice(0,-1!==r?r:0)||"p5"][n],l=[];if(o.hasOwnProperty("overloads"))for(var c=0;c<o.overloads.length;c++)l.push({formats:o.overloads[c].params});else l.push({formats:o.params||[]});// parse the parameter types for each overload
var u={},p=0;return l.forEach(function(r){var n=r.formats;// keep a record of the maximum number of arguments
p<n.length&&(p=n.length);for(// calculate the minimum number of arguments
// this overload requires.
var o=n.length;o>0&&n[o-1].optional;)o--;r.minParams=o,n.forEach(function(r){// split this parameter's types
r.types=r.type.split("|").map(function n(o){// array
if("[]"===o.slice(-2))return{name:o,array:n(o.slice(0,-2))};var l=o.toLowerCase();// contant
if("constant"===l){if(u.hasOwnProperty(r.name))f=u[r.name];else{// parse possible constant values from description
var c=/either\s+(?:[A-Z0-9_]+\s*,?\s*(?:or)?\s*)+/g,p={},d=[];f=u[r.name]={values:p,names:d};var m=c.exec(r.description);if("endShape"===t&&"mode"===r.name)p[s.CLOSE]=!0,d.push("CLOSE");else for(var f,h,y=m[0],g=/[A-Z0-9_]+/g;null!==(h=g.exec(y));){var v=h[0];s.hasOwnProperty(v)&&(p[s[v]]=!0,d.push(v))}}return{name:o,builtin:l,names:f.names,values:f.values}}// function
// builtin
if("function"===l.slice(0,8)&&(l="function"),T.has(l))return{name:o,builtin:l};// find type's prototype
var b=window,x=o.split(".");return("p5"===x[0]&&(b=a.default,x.shift()),x.forEach(function(t){b=b&&b[t]}),b)?{name:o,prototype:b}:{name:o,type:l}})})}),{overloads:l,maxParams:p}},D=function(t){if(isNaN(parseFloat(t)))return!1;switch(_(t)){case"number":return!0;case"string":return!isNaN(t);default:return!1}},F=function t(r,n){var o=r instanceof Array,a=!0;if(n.array&&o)for(var s=0;s<r.length;s++){var l=t(r[s],n.array);if(l)return l/2;// half error for elements
}else if(n.prototype)a=r instanceof n.prototype;else if(n.builtin)switch(n.builtin){case"number":a=D(r);break;case"integer":a=D(r)&&Number(r)===Math.floor(r);break;case"boolean":case"any":a=!0;break;case"array":a=o;break;case"string":a=/*typeof param === 'number' ||*/"string"==typeof r;break;case"constant":a=n.values.hasOwnProperty(r);break;case"function":a=r instanceof Function;break;case"null":a=null===r}else a=_(r)===n.t;return a?0:1},U=function(t,r){for(var n=9999,o=0;n>0&&o<r.length;o++){var a=F(t,r[o]);n>a&&(n=a)}return n},B=function(t,r,n,o){var a=0,s=n.formats,l=n.minParams;// the score is double number of extra/missing args
r<l?a=(l-r)*2:r>s.length&&(a=(r-s.length)*2);// loop through the formats, adding up the error score for each arg.
// quit early if the score gets higher than the previous best overload.
for(var c=0;a<=o&&c<s.length;c++){var u=t[c],p=s[c];null==u?(!p.optional||c<l||c<r)&&(a+=1):a+=U(u,p.types)}return a},G=function(t,r,n){var o=n.formats,a=n.minParams;if(r<a)return[{type:"TOO_FEW_ARGUMENTS",argCount:r,minParams:a}];if(r>o.length)return[{type:"TOO_MANY_ARGUMENTS",argCount:r,maxParams:o.length}];for(var s=[],l=0;l<o.length;l++){var c=t[l],u=o[l];null==c?(!u.optional||l<a||l<r)&&s.push({type:"EMPTY_VAR",position:l,format:u}):U(c,u.types)>0&&s.push({type:"WRONG_TYPE",position:l,format:u,arg:c})}return s};// The following two functions are responsible for querying and inserting
/**
   * a custom error type, used by the mocha
   * tests when expecting validation errors
   * @method ValidationError
   * @private
   */a.default.ValidationError=function(t){var r=/*#__PURE__*/function(t){m(n,t);var r=f(n);function n(t,o,a){var s;return d(this,n),(s=r.call(this)).message=t,s.func=o,s.type=a,"captureStackTrace"in Error?Error.captureStackTrace(y(s),n):s.stack=Error().stack,s}return n}(/*#__PURE__*/g(Error));return r.prototype.name=t,r}("ValidationError"),/**
   * Prints a friendly msg after parameter validation
   * @method _friendlyParamError
   * @private
   */a.default._friendlyParamError=function(t,r){function n(){return t.format.types.map(function(t){return t.names?t.names.join("|"):t.name}).join("|")}switch(t.type){case"EMPTY_VAR":s={func:r,formatType:n(),// It needs to be this way for i18next-extract to work. The comment
// specifies the values that the context can take so that it can
// statically prepare the translation files with them.
/* i18next-extract-mark-context-next-line ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"] */position:(0,l.translator)("fes.positions.p",{context:(t.position+1).toString(),defaultValue:(t.position+1).toString()}),url:"https://p5js.org/examples/data-variable-scope.html"};break;case"WRONG_TYPE":var o,s,c=t.arg,u=c instanceof Array?"array":null===c?"null":c.name||_(c);s={func:r,formatType:n(),argType:u,/* i18next-extract-mark-context-next-line ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"] */position:(0,l.translator)("fes.positions.p",{context:(t.position+1).toString(),defaultValue:(t.position+1).toString()})};break;case"TOO_FEW_ARGUMENTS":s={func:r,minParams:t.minParams,argCount:t.argCount};break;case"TOO_MANY_ARGUMENTS":s={func:r,maxParams:t.maxParams,argCount:t.argCount}}if(s){try{// const re = /Function\.validateParameters.*[\r\n].*[\r\n].*\(([^)]*)/;
var p=Error(),d=a.default._getErrorStackParser().parse(p);if(d[3]&&d[3].functionName&&d[3].functionName.includes(".")&&a.default.prototype[d[3].functionName.split(".").slice(-1)[0]])return;if(a.default._throwValidationErrors)throw new a.default.ValidationError(o,r,t.type);// try to extract the location from where the function was called
if(d[3]&&d[3].fileName&&d[3].lineNumber&&d[3].columnNumber){var m="".concat(d[3].fileName,":").concat(d[3].lineNumber,":").concat(d[3].columnNumber);s.location=(0,l.translator)("fes.location",{location:m,// for e.g. get "sketch.js" from "https://example.com/abc/sketch.js"
file:d[3].fileName.split("/").slice(-1),line:d[3].lineNumber}),// for this line, so it need not to do the same in case of an error
a.default._fesLogCache[m]=!0}}catch(t){if(t instanceof a.default.ValidationError)throw t}s.context=t.type,o=(0,l.translator)("fes.friendlyParamError.type",s),a.default._friendlyError("".concat(o),r,3)}},/**
   * Clears cache to avoid having multiple FES messages for the same set of
   * parameters.
   *
   * If a function is called with some set of wrong arguments, and then called
   * again with the same set of arguments, the messages due to the second call
   * will be supressed. If two tests test on the same wrong arguments, the
   * second test won't see the validationError. clearing argumentTree solves it
   *
   * @method _clearValidateParamsCache
   * @private
   */a.default._clearValidateParamsCache=function(){for(var t=0,r=Object.keys(R);t<r.length;t++){var n=r[t];delete R[n]}},a.default._getValidateParamsArgTree=function(){return R},/**
   * Runs parameter validation by matching the input parameters with information
   * from `docs/reference/data.json`.
   * Generates and prints a friendly error message using key:
   * "fes.friendlyParamError.[*]".
   *
   * @method _validateParameters
   * @private
   * @param  {String}   func    Name of the function
   * @param  {Array}    args    User input arguments
   *
   * @example:
   *  const a;
   *  ellipse(10,10,a,5);
   * console ouput:
   *  "It looks like ellipse received an empty variable in spot #2."
   *
   * @example:
   *  ellipse(10,"foo",5,5);
   * console output:
   *  "ellipse was expecting a number for parameter #1,
   *           received "foo" instead."
   */a.default._validateParameters=function(t,r){if(!a.default.disableFriendlyErrors){// query / build the argument type tree and check if this sequence
// has already been seen before.
var n,o=I(t,r);if(!o.seen){// mark this sequence as seen
o.seen=!0;// lookup the docs in the 'data.json' file
for(var s=E[t]||(E[t]=P(t)),l=s.overloads,c=r.length,u=99999,p=0;p<l.length;p++){var d=B(r,c,l[p],u);if(0===d)return;// done!
u>d&&(// this score is better that what we have so far...
u=d,n=p)}// this should _always_ be true here...
if(u>0)for(var m=G(r,c,l[n]),f=0;f<m.length;f++)a.default._friendlyParamError(m[f],t)}}// skip FES
},a.default.prototype._validateParameters=a.default.validateParameters}var V=a.default;n.default=V},{"../../../docs/parameterData.json":1,"../constants":284,"../internationalization":294,"../main":296,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.for-each":174,"core-js/modules/es.array.includes":176,"core-js/modules/es.array.index-of":177,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.join":179,"core-js/modules/es.array.last-index-of":180,"core-js/modules/es.array.map":181,"core-js/modules/es.array.slice":182,"core-js/modules/es.function.name":185,"core-js/modules/es.map":186,"core-js/modules/es.number.constructor":189,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.get-prototype-of":196,"core-js/modules/es.object.keys":197,"core-js/modules/es.object.to-string":198,"core-js/modules/es.reflect.construct":200,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.set":205,"core-js/modules/es.string.includes":207,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.split":214,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.for-each":253,"core-js/modules/web.dom-collections.iterator":254}],292:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=c(t("./constants"));function l(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return l=function(){return t},t}function c(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=l();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var c=o?Object.getOwnPropertyDescriptor(t,s):null;c&&(c.get||c.set)?Object.defineProperty(n,s,c):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}/**
 * @requires constants
 */var u={modeAdjust:function(t,r,n,o,a){return a===s.CORNER?{x:t,y:r,w:n,h:o}:a===s.CORNERS?{x:t,y:r,w:n-t,h:o-r}:a===s.RADIUS?{x:t-n,y:r-o,w:2*n,h:2*o}:a===s.CENTER?{x:t-.5*n,y:r-.5*o,w:n,h:o}:void 0}};n.default=u},{"./constants":284,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],293:[function(t,r,n){t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.promise"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.promise"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator");var o=s(t("../core/main")),a=t("./internationalization");function s(t){return t&&t.__esModule?t:{default:t}}/**
 * _globalInit
 *
 * TODO: ???
 * if sketch is on window
 * assume "global" mode
 * and instantiate p5 automatically
 * otherwise do nothing
 *
 * @private
 * @return {Undefined}
 */var l=function(){// Could have been any property defined within the p5 constructor.
// If that property is already a part of the global object,
// this code has already run before, likely due to a duplicate import
if(void 0!==window._setupDone){console.warn("p5.js seems to have been imported multiple times. Please remove the duplicate import");return}!window.mocha&&(window.setup&&"function"==typeof window.setup||window.draw&&"function"==typeof window.draw)&&!o.default.instance&&new o.default},c=function(){return new Promise(function(t,r){// if the page is ready, initialize p5 immediately
"complete"===document.readyState?t():window.addEventListener("load",t,!1)})},u="undefined"==typeof IS_MINIFIED?(0,a.initialize)():Promise.resolve();// make a promise that resolves when the document is ready
Promise.all([c(),u]).then(l)},{"../core/main":296,"./internationalization":294,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.to-string":198,"core-js/modules/es.promise":199,"core-js/modules/es.string.iterator":208,"core-js/modules/web.dom-collections.iterator":254}],294:[function(t,r,n){t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.promise"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.split"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.promise"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.split"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.setTranslatorLanguage=n.currentTranslatorLanguage=n.availableTranslatorLanguages=n.initialize=n.translator=void 0;var o,a,s=c(t("i18next")),l=c(t("i18next-browser-languagedetector"));function c(t){return t&&t.__esModule?t:{default:t}}function u(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function p(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function d(t,r,n){return r&&p(t.prototype,r),n&&p(t,n),t}if("undefined"==typeof IS_MINIFIED){// internationalization is only for the unminified build
var m=t("../../translations");if(o=m.default,a=m.languages,"undefined"!=typeof P5_DEV_BUILD)for(var f=t("../../translations/dev"),h=0,y=Object.keys(f);h<y.length;h++){var g=y[h],v=g.split("_"),b=v.slice(0,v.length-1).join("-"),x=v[v.length-1];// In es_translation, language is es and namespace is translation
o[b]=o[b]||{},o[b][x]=f[g]}}/**
 * This is our i18next "backend" plugin. It tries to fetch languages
 * from a CDN.
 */var j=/*#__PURE__*/function(){function t(r,n){u(this,t),this.init(r,n)}// run fetch with a timeout. Automatically rejects on timeout
return(// default timeout = 2000 ms
d(t,[{key:"fetchWithTimeout",value:function(t,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2e3;return Promise.race([fetch(t,r),new Promise(function(t,r){return setTimeout(function(){return r(Error("timeout"))},n)})])}},{key:"init",value:function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.services=t,this.options=r}},{key:"read",value:function(t,r,n){var s=this.options.loadPath;if(t===this.options.fallback)// there's no need to fetch resources from the cdn. This won't actually
// need to run when we use "partialBundledLanguages" in the init
// function.
n(null,o[t][r]);else if(a.includes(t)){// The user's language is included in the list of languages
// that we so far added translations for.
var l=this.services.interpolator.interpolate(s,{lng:t,ns:r});this.loadUrl(l,n)}else // the default language instead.
n("Not found",!1)}},{key:"loadUrl",value:function(t,r){this.fetchWithTimeout(t).then(function(r){if(!r.ok)throw Error("failed loading ".concat(t));return r.json()},function(){// caught in the catch() below
throw Error("failed loading ".concat(t))}).then(function(t){return r(null,t)}).catch(r)}}]),t)}();j.type="backend";/**
 * This is our translation function. Give it a key and
 * it will retrieve the appropriate string
 * (within supported languages) according to the
 * user's browser's language settings.
 * @function translator
 * @param {String} key a key that corresponds to a message in our translation files
 * @param {Object} values values for use in the message under the given `key`
 * @returns {String} message (with values inserted) in the user's browser language
 * @private
 */var w=function(t,r){console.debug("p5.js translator called before translations were loaded"),// Using "partialBundledLanguages" option during initialization, we can
// still use our fallback language to display messages
s.default.t(t,r);/* i18next-extract-disable-line */};// (We'll set this to a real value in the init function below!)
/**
 * Set up our translation function, with loaded languages
 */n.translator=w;var _=function(){// are loaded. We use this in core/init.js to hold p5 initialization until
// we have the translation files.
return s.default.use(l.default).use(j).init({fallbackLng:"en",nestingPrefix:"$tr(",nestingSuffix:")",defaultNS:"translation",returnEmptyString:!1,interpolation:{escapeValue:!1},detection:{checkWhitelist:!1,// prevent storing or locating language from cookie or localStorage
// more info on https://github.com/processing/p5.js/issues/4862
order:["querystring","navigator","htmlTag","path","subdomain"],caches:[]},backend:{fallback:"en",loadPath:"https://cdn.jsdelivr.net/npm/p5/translations/{{lng}}/{{ns}}.json"},partialBundledLanguages:!0,resources:o}).then(function(t){n.translator=w=t},function(t){return console.debug("Translations failed to load (".concat(t,")"))})};/**
 * Returns a list of languages we have translations loaded for
 */n.initialize=_;var S=function(){return s.default.languages};/**
 * Returns the current language selected for translation
 */n.availableTranslatorLanguages=S;var E=function(t){return s.default.language};/**
 * Sets the current language for translation
 * Returns a promise that resolved when loading is finished,
 * or rejects if it fails.
 */n.currentTranslatorLanguage=E;var T=function(t){return s.default.changeLanguage(t||void 0,function(t){return console.debug("Translations failed to load (".concat(t,")"))})};n.setTranslatorLanguage=T},{"../../translations":356,"../../translations/dev":void 0,"core-js/modules/es.array.includes":176,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.join":179,"core-js/modules/es.array.slice":182,"core-js/modules/es.object.keys":197,"core-js/modules/es.object.to-string":198,"core-js/modules/es.promise":199,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.string.includes":207,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.split":214,"core-js/modules/web.dom-collections.iterator":254,i18next:265,"i18next-browser-languagedetector":262}],295:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("./main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @for p5
 * @requires core
 * These are functions that are part of the Processing API but are not part of
 * the p5.js API. In some cases they have a new name, in others, they are
 * removed completely. Not all unsupported Processing functions are listed here
 * but we try to include ones that a user coming from Processing might likely
 * call.
 */o.default.prototype.pushStyle=function(){throw Error("pushStyle() not used, see push()")},o.default.prototype.popStyle=function(){throw Error("popStyle() not used, see pop()")},o.default.prototype.popMatrix=function(){throw Error("popMatrix() not used, see pop()")},o.default.prototype.pushMatrix=function(){throw Error("pushMatrix() not used, see push()")};var s=o.default;n.default=s},{"./main":296}],296:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.get-own-property-names"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.get-own-property-names"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,t("./shim");var s=c(t("./constants"));function l(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return l=function(){return t},t}function c(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=l();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var c=o?Object.getOwnPropertyDescriptor(t,s):null;c&&(c.get||c.set)?Object.defineProperty(n,s,c):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function u(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function p(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function d(t,r,n){return r&&p(t.prototype,r),n&&p(t,n),t}/**
 * This is the p5 instance constructor.
 *
 * A p5 instance holds all the properties and methods related to
 * a p5 sketch.  It expects an incoming sketch closure and it can also
 * take an optional node parameter for attaching the generated p5 canvas
 * to a node.  The sketch closure takes the newly created p5 instance as
 * its sole argument and may optionally set <a href="#/p5/preload">preload()</a>,
 * <a href="#/p5/setup">setup()</a>, and/or
 * <a href="#/p5/draw">draw()</a> properties on it for running a sketch.
 *
 * A p5 sketch can run in "global" or "instance" mode:
 * "global"   - all properties and methods are attached to the window
 * "instance" - all properties and methods are bound to this p5 object
 *
 * @class p5
 * @constructor
 * @param  {function}           sketch a closure that can set optional <a href="#/p5/preload">preload()</a>,
 *                              <a href="#/p5/setup">setup()</a>, and/or <a href="#/p5/draw">draw()</a> properties on the
 *                              given p5 instance
 * @param  {HTMLElement}        [node] element to attach canvas to
 * @return {p5}                 a p5 instance
 */var m=/*#__PURE__*/function(){function t(r,n,o){var a=this;u(this,t),// PUBLIC p5 PROPERTIES AND METHODS
//////////////////////////////////////////////
/**
     * Called directly before <a href="#/p5/setup">setup()</a>, the <a href="#/p5/preload">preload()</a> function is used to handle
     * asynchronous loading of external files in a blocking way. If a preload
     * function is defined, <a href="#/p5/setup">setup()</a> will wait until any load calls within have
     * finished. Nothing besides load calls (<a href="#/p5/loadImage">loadImage</a>, <a href="#/p5/loadJSON">loadJSON</a>, <a href="#/p5/loadFont">loadFont</a>,
     * <a href="#/p5/loadStrings">loadStrings</a>, etc.) should be inside the preload function. If asynchronous
     * loading is preferred, the load methods can instead be called in <a href="#/p5/setup">setup()</a>
     * or anywhere else with the use of a callback parameter.
     *
     * By default the text "loading..." will be displayed. To make your own
     * loading page, include an HTML element with id "p5_loading" in your
     * page. More information <a href="http://bit.ly/2kQ6Nio">here</a>.
     *
     * @method preload
     * @example
     * <div><code>
     * let img;
     * let c;
     * function preload() {
     *   // preload() runs once
     *   img = loadImage('assets/laDefense.jpg');
     * }
     *
     * function setup() {
     *   // setup() waits until preload() is done
     *   img.loadPixels();
     *   // get color of middle pixel
     *   c = img.get(img.width / 2, img.height / 2);
     * }
     *
     * function draw() {
     *   background(c);
     *   image(img, 25, 25, 50, 50);
     * }
     * </code></div>
     *
     * @alt
     * nothing displayed
     *
     *//**
     * The <a href="#/p5/setup">setup()</a> function is called once when the program starts. It's used to
     * define initial environment properties such as screen size and background
     * color and to load media such as images and fonts as the program starts.
     * There can only be one <a href="#/p5/setup">setup()</a> function for each program and it shouldn't
     * be called again after its initial execution.
     *
     * Note: Variables declared within <a href="#/p5/setup">setup()</a> are not accessible within other
     * functions, including <a href="#/p5/draw">draw()</a>.
     *
     * @method setup
     * @example
     * <div><code>
     * let a = 0;
     *
     * function setup() {
     *   background(0);
     *   noStroke();
     *   fill(102);
     * }
     *
     * function draw() {
     *   rect(a++ % width, 10, 2, 80);
     * }
     * </code></div>
     *
     * @alt
     * nothing displayed
     *
     *//**
     * Called directly after <a href="#/p5/setup">setup()</a>, the <a href="#/p5/draw">draw()</a> function continuously executes
     * the lines of code contained inside its block until the program is stopped
     * or <a href="#/p5/noLoop">noLoop()</a> is called. Note if <a href="#/p5/noLoop">noLoop()</a> is called in <a href="#/p5/setup">setup()</a>, <a href="#/p5/draw">draw()</a> will
     * still be executed once before stopping. <a href="#/p5/draw">draw()</a> is called automatically and
     * should never be called explicitly.
     *
     * It should always be controlled with <a href="#/p5/noLoop">noLoop()</a>, <a href="#/p5/redraw">redraw()</a> and <a href="#/p5/loop">loop()</a>. After
     * <a href="#/p5/noLoop">noLoop()</a> stops the code in <a href="#/p5/draw">draw()</a> from executing, <a href="#/p5/redraw">redraw()</a> causes the
     * code inside <a href="#/p5/draw">draw()</a> to execute once, and <a href="#/p5/loop">loop()</a> will cause the code
     * inside <a href="#/p5/draw">draw()</a> to resume executing continuously.
     *
     * The number of times <a href="#/p5/draw">draw()</a> executes in each second may be controlled with
     * the <a href="#/p5/frameRate">frameRate()</a> function.
     *
     * There can only be one <a href="#/p5/draw">draw()</a> function for each sketch, and <a href="#/p5/draw">draw()</a> must
     * exist if you want the code to run continuously, or to process events such
     * as <a href="#/p5/mousePressed">mousePressed()</a>. Sometimes, you might have an empty call to <a href="#/p5/draw">draw()</a> in
     * your program, as shown in the above example.
     *
     * It is important to note that the drawing coordinate system will be reset
     * at the beginning of each <a href="#/p5/draw">draw()</a> call. If any transformations are performed
     * within <a href="#/p5/draw">draw()</a> (ex: scale, rotate, translate), their effects will be
     * undone at the beginning of <a href="#/p5/draw">draw()</a>, so transformations will not accumulate
     * over time. On the other hand, styling applied (ex: fill, stroke, etc) will
     * remain in effect.
     *
     * @method draw
     * @example
     * <div><code>
     * let yPos = 0;
     * function setup() {
     *   // setup() runs once
     *   frameRate(30);
     * }
     * function draw() {
     *   // draw() loops forever, until stopped
     *   background(204);
     *   yPos = yPos - 1;
     *   if (yPos < 0) {
     *     yPos = height;
     *   }
     *   line(0, yPos, width, yPos);
     * }
     * </code></div>
     *
     * @alt
     * nothing displayed
     *
     *///////////////////////////////////////////////
// PRIVATE p5 PROPERTIES AND METHODS
//////////////////////////////////////////////
this._setupDone=!1,this._preloadDone=!1,this._pixelDensity=Math.ceil(window.devicePixelRatio)||1,this._userNode=n,this._curElement=null,this._elements=[],this._glAttributes=null,this._requestAnimId=0,this._preloadCount=0,this._isGlobal=!1,this._loop=!0,this._initializeInstanceVariables(),this._defaultCanvasSize={width:100,height:100},this._events={// keep track of user-events for unregistering later
mousemove:null,mousedown:null,mouseup:null,dragend:null,dragover:null,click:null,dblclick:null,mouseover:null,mouseout:null,keydown:null,keyup:null,keypress:null,touchstart:null,touchmove:null,touchend:null,resize:null,blur:null},this._millisStart=-1,this._recording=!1,this._lcg_random_state=null,this._gaussian_previous=!1,this._events.wheel=null,this._loadingScreenId="p5_loading",// are instance-specific.
this._registeredMethods={};var s=Object.getOwnPropertyNames(t.prototype._registeredMethods),l=!0,c=!1,p=void 0;try{for(var d,m=s[Symbol.iterator]();!(l=(d=m.next()).done);l=!0){var f=d.value;this._registeredMethods[f]=t.prototype._registeredMethods[f].slice()}}catch(t){c=!0,p=t}finally{try{l||null==m.return||m.return()}finally{if(c)throw p}}window.DeviceOrientationEvent&&(this._events.deviceorientation=null),window.DeviceMotionEvent&&!window._isNodeWebkit&&(this._events.devicemotion=null),this._start=function(){// Find node if id given
a._userNode&&"string"==typeof a._userNode&&(a._userNode=document.getElementById(a._userNode));var r=a._isGlobal?window:a;if(r.preload){// Setup loading screen
// Set loading screen into dom if not present
// Otherwise displays and removes user provided loading screen
var n=document.getElementById(a._loadingScreenId);n||((n=document.createElement("div")).innerHTML="Loading...",n.style.position="absolute",n.id=a._loadingScreenId,(a._userNode||document.body).appendChild(n));var o=a._preloadMethods;for(var s in o){// default to p5 if no object defined
o[s]=o[s]||t;var l=o[s];//it's p5, check if it's global or instance
(l===t.prototype||l===t)&&(a._isGlobal&&(window[s]=a._wrapPreload(a,s)),l=a),a._registeredPreloadMethods[s]=l[s],l[s]=a._wrapPreload(l,s)}r.preload(),a._runIfPreloadsAreDone()}else a._setup(),a._recording||a._draw()},this._runIfPreloadsAreDone=function(){var t=this._isGlobal?window:this;if(0===t._preloadCount){var r=document.getElementById(t._loadingScreenId);r&&r.parentNode.removeChild(r),this._setupDone||(this._lastTargetFrameTime=window.performance.now(),this._lastRealFrameTime=window.performance.now(),t._setup(),this._recording||t._draw())}},this._decrementPreload=function(){var t=this._isGlobal?window:this;t._preloadDone||"function"!=typeof t.preload||(t._setProperty("_preloadCount",t._preloadCount-1),t._runIfPreloadsAreDone())},this._wrapPreload=function(t,r){var n=this;return function(){//increment counter
n._incrementPreload();//call original function
for(var o=arguments.length,a=Array(o),s=0;s<o;s++)a[s]=arguments[s];return n._registeredPreloadMethods[r].apply(t,a)}},this._incrementPreload=function(){var t=this._isGlobal?window:this;// Do nothing if we tried to increment preloads outside of `preload`
t._preloadDone||t._setProperty("_preloadCount",t._preloadCount+1)},this._setup=function(){// Always create a default canvas.
// Later on if the user calls createCanvas, this default one
// will be replaced
a.createCanvas(a._defaultCanvasSize.width,a._defaultCanvasSize.height,"p2d");var t=a._isGlobal?window:a;if("function"==typeof t.preload)for(var r in a._preloadMethods)t[r]=a._preloadMethods[r][r],t[r]&&a&&(t[r]=t[r].bind(a));// Record the time when sketch starts
a._millisStart=window.performance.now(),t._preloadDone=!0,"function"==typeof t.setup&&t.setup();// unhide any hidden canvases that were created
var n=document.getElementsByTagName("canvas"),o=!0,s=!1,l=void 0;try{for(var c,u=n[Symbol.iterator]();!(o=(c=u.next()).done);o=!0){var p=c.value;"true"===p.dataset.hidden&&(p.style.visibility="",delete p.dataset.hidden)}}catch(t){s=!0,l=t}finally{try{o||null==u.return||u.return()}finally{if(s)throw l}}a._lastTargetFrameTime=window.performance.now(),a._lastRealFrameTime=window.performance.now(),a._setupDone=!0,(a._accessibleOutputs.grid||a._accessibleOutputs.text)&&a._updateAccsOutput()},this._draw=function(){var t=window.performance.now(),r=t-a._lastTargetFrameTime,n=1e3/a._targetFrameRate,o=5;(!a._loop||r>=n-o)&&(//mandatory update values(matrixes and stack)
a.deltaTime=t-a._lastRealFrameTime,a._setProperty("deltaTime",a.deltaTime),a._frameRate=1e3/a.deltaTime,a.redraw(),a._lastTargetFrameTime=Math.max(a._lastTargetFrameTime+n,t),a._lastRealFrameTime=t,void 0!==a._updateMouseCoords&&(a._updateMouseCoords(),// for example if the mouse is outside the screen
a._setProperty("movedX",0),a._setProperty("movedY",0))),a._loop&&(a._requestAnimId=window.requestAnimationFrame(a._draw))},this._setProperty=function(t,r){a[t]=r,a._isGlobal&&(window[t]=r)},/**
     * Removes the entire p5 sketch. This will remove the canvas and any
     * elements created by p5.js. It will also stop the draw loop and unbind
     * any properties or methods from the window global scope. It will
     * leave a variable p5 in case you wanted to create a new p5 sketch.
     * If you like, you can set p5 = null to erase it. While all functions and
     * variables and objects created by the p5 library will be removed, any
     * other global variables created by your code will remain.
     *
     * @method remove
     * @example
     * <div class='norender'><code>
     * function draw() {
     *   ellipse(50, 50, 10, 10);
     * }
     *
     * function mousePressed() {
     *   remove(); // remove whole sketch on mouse press
     * }
     * </code></div>
     *
     * @alt
     * nothing displayed
     *
     */this.remove=function(){var r=document.getElementById(a._loadingScreenId);if(r&&(r.parentNode.removeChild(r),a._incrementPreload()),a._curElement){// unregister events sketch-wide
for(var n in // stop draw
a._loop=!1,a._requestAnimId&&window.cancelAnimationFrame(a._requestAnimId),a._events)window.removeEventListener(n,a._events[n]);// remove DOM elements created by p5, and listeners
var o=!0,s=!1,l=void 0;try{for(var c,u=a._elements[Symbol.iterator]();!(o=(c=u.next()).done);o=!0){var p=c.value;for(var d in p.elt&&p.elt.parentNode&&p.elt.parentNode.removeChild(p.elt),p._events)p.elt.removeEventListener(d,p._events[d])}// call any registered remove functions
}catch(t){s=!0,l=t}finally{try{o||null==u.return||u.return()}finally{if(s)throw l}}var m=a;a._registeredMethods.remove.forEach(function(t){void 0!==t&&t.call(m)})}// remove window bound properties and methods
if(a._isGlobal){for(var f in t.prototype)try{delete window[f]}catch(t){window[f]=void 0}for(var h in a)if(a.hasOwnProperty(h))try{delete window[h]}catch(t){window[h]=void 0}t.instance=null}},this._registeredMethods.init.forEach(function(t){void 0!==t&&t.call(this)},this),this._setupPromisePreloads();var h=this._createFriendlyGlobalFunctionBinder();// If the user has created a global setup or draw function,
// assume "global" mode and make everything global (i.e. on the window)
if(r)// Else, the user has passed in a sketch closure that may set
// user-provided 'setup', 'draw', etc. properties on this instance of p5
r(this),// detects capitalization mistakes only ( Setup, SETUP, MouseClicked, etc)
t._checkForUserDefinedFunctions(this);else{for(var y in this._isGlobal=!0,t.instance=this,t.prototype)if("function"==typeof t.prototype[y]){var g=y.substring(2);this._events.hasOwnProperty(g)||// called without any binding.
h(y,Math.hasOwnProperty(y)&&Math[y]===t.prototype[y]?t.prototype[y]:t.prototype[y].bind(this))}else h(y,t.prototype[y]);// Attach its properties to the window
for(var v in this)this.hasOwnProperty(v)&&h(v,this[v])}// Bind events to window (not using container div bc key events don't work)
for(var b in this._events){var x=this["_on".concat(b)];if(x){var j=x.bind(this);window.addEventListener(b,j,{passive:!1}),this._events[b]=j}}var w=function(){a._setProperty("focused",!0)},_=function(){a._setProperty("focused",!1)};window.addEventListener("focus",w),window.addEventListener("blur",_),this.registerMethod("remove",function(){window.removeEventListener("focus",w),window.removeEventListener("blur",_)}),"complete"===document.readyState?this._start():window.addEventListener("load",this._start.bind(this),!1)}return d(t,[{key:"_initializeInstanceVariables",value:function(){this._accessibleOutputs={text:!1,grid:!1,textLabel:!1,gridLabel:!1},this._styles=[],this._bezierDetail=20,this._curveDetail=20,this._colorMode=s.RGB,this._colorMaxes={rgb:[255,255,255,255],hsb:[360,100,100,1],hsl:[360,100,100,1]},this._downKeys={}}},{key:"registerPreloadMethod",value:function(r,n){// obj = obj || p5.prototype;
t.prototype._preloadMethods.hasOwnProperty(r)||(t.prototype._preloadMethods[r]=n)}},{key:"registerMethod",value:function(r,n){var o=this||t.prototype;o._registeredMethods.hasOwnProperty(r)||(o._registeredMethods[r]=[]),o._registeredMethods[r].push(n)}// create a function which provides a standardized process for binding
},{key:"_createFriendlyGlobalFunctionBinder",value:function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=r.globalObject||window,o=r.log||console.log.bind(console),a={// p5.print actually always overwrites an existing global function,
// albeit one that is very unlikely to be used:
//
//   https://developer.mozilla.org/en-US/docs/Web/API/Window/print
print:!0};return function(r,s){if(t.disableFriendlyErrors||"undefined"!=typeof IS_MINIFIED||"function"!=typeof s||r in t.prototype._preloadMethods)n[r]=s;else try{// Because p5 has so many common function names, it's likely
// that users may accidentally overwrite global p5 functions with
// their own variables. Let's allow this but log a warning to
// help users who may be doing this unintentionally.
//
// For more information, see:
//
//   https://github.com/processing/p5.js/issues/1317
if(r in n&&!(r in a))throw Error('global "'.concat(r,'" already exists'));// It's possible that this might throw an error because there
// are a lot of edge-cases in which `Object.defineProperty` might
// not succeed; since this functionality is only intended to
// help beginners anyways, we'll just catch such an exception
// if it occurs, and fall back to legacy behavior.
Object.defineProperty(n,r,{configurable:!0,enumerable:!0,get:function(){return s},set:function(t){Object.defineProperty(n,r,{configurable:!0,enumerable:!0,value:t,writable:!0}),o('You just changed the value of "'.concat(r,"\", which was a p5 function. This could cause problems later if you're not careful."))}})}catch(o){var l='p5 had problems creating the global function "'.concat(r,'", possibly because your code is already using that name as a variable. You may want to rename your variable to something else.');t._friendlyError(l,r),n[r]=s}}}}]),t}();// This is a pointer to our global mode p5 instance, if we're in
for(var f in // global mode.
m.instance=null,/**
 * Turn off some features of the friendly error system (FES), which can give
 * a significant boost to performance when needed.
 *
 * Note that this will disable the parts of the FES that cause performance
 * slowdown (like argument checking). Friendly errors that have no performance
 * cost (like giving a descriptive error if a file load fails, or warning you
 * if you try to override p5.js functions in the global space),
 * will remain in place.
 *
 * See <a href='https://github.com/processing/p5.js/wiki/Optimizing-p5.js-Code-for-Performance#disable-the-friendly-error-system-fes'>
 * disabling the friendly error system</a>.
 *
 * @property {Boolean} disableFriendlyErrors
 * @example
 * <div class="norender notest"><code>
 * p5.disableFriendlyErrors = true;
 *
 * function setup() {
 *   createCanvas(100, 50);
 * }
 * </code></div>
 */m.disableFriendlyErrors=!1,s)m.prototype[f]=s[f];// makes the `VERSION` constant available on the p5 object
// in instance mode, even if it hasn't been instatiated yet
m.VERSION=s.VERSION,// more can be added by using registerPreloadMethod(func)
m.prototype._preloadMethods={loadJSON:m.prototype,loadImage:m.prototype,loadStrings:m.prototype,loadXML:m.prototype,loadBytes:m.prototype,loadTable:m.prototype,loadFont:m.prototype,loadModel:m.prototype,loadShader:m.prototype},m.prototype._registeredMethods={init:[],pre:[],post:[],remove:[]},m.prototype._registeredPreloadMethods={};var h=m;n.default=h},{"./constants":284,"./shim":307,"core-js/modules/es.array.for-each":174,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.slice":182,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.get-own-property-names":195,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.for-each":253,"core-js/modules/web.dom-collections.iterator":254}],297:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("./main"));function a(t){return t&&t.__esModule?t:{default:t}}function s(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function l(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function c(t,r,n){return r&&l(t.prototype,r),n&&l(t,n),t}/**
 * Base class for all elements added to a sketch, including canvas,
 * graphics buffers, and other HTML elements. It is not called directly, but <a href="#/p5.Element">p5.Element</a>
 * objects are created by calling <a href="#/p5/createCanvas">createCanvas()</a>, <a href="#/p5/createGraphics">createGraphics()</a>,
 * <a href="#/p5/createDiv">createDiv()</a>, <a href="#/p5/createImg">createImg()</a>, <a href="#/p5/createInput">createInput()</a>, etc.
 *
 * @class p5.Element
 * @constructor
 * @param {HTMLElement} elt DOM node that is wrapped
 * @param {p5} [pInst] pointer to p5 instance
 */o.default.Element=/*#__PURE__*/function(){function t(r,n){s(this,t),/**
     * Underlying HTML element. All normal HTML methods can be called on this.
     * @example
     * <div>
     * <code>
     * function setup() {
     *   let c = createCanvas(50, 50);
     *   c.elt.style.border = '5px solid red';
     * }
     *
     * function draw() {
     *   background(220);
     * }
     * </code>
     * </div>
     *
     * @property elt
     * @readOnly
     */this.elt=r,/**
     * @private
     * @type {p5.Element}
     */this._pInst=this._pixelsState=n,this._events={},/**
     * @type {Number}
     * @property width
     */this.width=this.elt.offsetWidth,/**
     * @type {Number}
     * @property height
     */this.height=this.elt.offsetHeight}/**
   *
   * Attaches the element to the parent specified. A way of setting
   * the container for the element. Accepts either a string ID, DOM
   * node, or <a href="#/p5.Element">p5.Element</a>. If no arguments are given, parent node is returned.
   * For more ways to position the canvas, see the
   * <a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>
   * positioning the canvas</a> wiki page.
   *
   * @method parent
   * @param  {String|p5.Element|Object} parent the ID, DOM node, or <a href="#/p5.Element">p5.Element</a>
   *                         of desired parent element
   * @chainable
   *
   * @example
   * <div class="norender notest"><code>
   * // Add the following comment to html file.
   * // &lt;div id="myContainer">&lt;/div>
   *
   * // The js code
   * let cnv = createCanvas(100, 100);
   * cnv.parent('myContainer');
   * </code></div>
   *
   * <div class='norender'><code>
   * let div0 = createDiv('this is the parent');
   * let div1 = createDiv('this is the child');
   * div1.parent(div0); // use p5.Element
   * </code></div>
   *
   * <div class='norender'><code>
   * let div0 = createDiv('this is the parent');
   * div0.id('apples');
   * let div1 = createDiv('this is the child');
   * div1.parent('apples'); // use id
   * </code></div>
   *
   * <div class='norender notest'><code>
   * let elt = document.getElementById('myParentDiv');
   * let div1 = createDiv('this is the child');
   * div1.parent(elt); // use element from page
   * </code></div>
   *
   * @alt
   * no display.
   */return(/**
   * @method parent
   * @return {p5.Element}
   */c(t,[{key:"parent",value:function(t){return void 0===t?this.elt.parentNode:("string"==typeof t?("#"===t[0]&&(t=t.substring(1)),t=document.getElementById(t)):t instanceof o.default.Element&&(t=t.elt),t.appendChild(this.elt),this)}/**
     *
     * Sets the ID of the element. If no ID argument is passed in, it instead
     * returns the current ID of the element.
     * Note that only one element can have a particular id in a page.
     * The <a href="#/p5.Element/class">class()</a> method can be used
     * to identify multiple elements with the same class name.
     *
     * @method id
     * @param  {String} id ID of the element
     * @chainable
     *
     * @example
     * <div class='norender'><code>
     * function setup() {
     *   let cnv = createCanvas(100, 100);
     *   // Assigns a CSS selector ID to
     *   // the canvas element.
     *   cnv.id('mycanvas');
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */},{key:"id",value:function(t){return void 0===t?this.elt.id:(this.elt.id=t,this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight,this)}/**
     *
     * Adds given class to the element. If no class argument is passed in, it
     * instead returns a string containing the current class(es) of the element.
     *
     * @method class
     * @param  {String} class class to add
     * @chainable
     *
     * @example
     * <div class='norender'><code>
     * function setup() {
     *   let cnv = createCanvas(100, 100);
     *   // Assigns a CSS selector class 'small'
     *   // to the canvas element.
     *   cnv.class('small');
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */},{key:"class",value:function(t){return void 0===t?this.elt.className:(this.elt.className=t,this)}/**
     * The <a href="#/p5.Element/mousePressed">mousePressed()</a> method is called
     * once after every time a mouse button is pressed over the element. Some mobile
     * browsers may also trigger this event on a touch screen, if the user performs
     * a quick tap. This can be used to attach element-specific event listeners.
     *
     * @method mousePressed
     * @param  {Function|Boolean} fxn function to be fired when mouse is
     *                                pressed over the element.
     *                                if `false` is passed instead, the previously
     *                                firing function will no longer fire.
     * @chainable
     * @example
     * <div class='norender'><code>
     * let cnv, d, g;
     * function setup() {
     *   cnv = createCanvas(100, 100);
     *   cnv.mousePressed(changeGray); // attach listener for
     *   // canvas click only
     *   d = 10;
     *   g = 100;
     * }
     *
     * function draw() {
     *   background(g);
     *   ellipse(width / 2, height / 2, d, d);
     * }
     *
     * // this function fires with any click anywhere
     * function mousePressed() {
     *   d = d + 10;
     * }
     *
     * // this function fires only when cnv is clicked
     * function changeGray() {
     *   g = random(0, 255);
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */},{key:"mousePressed",value:function(t){// Prepend the mouse property setters to the event-listener.
// This is required so that mouseButton is set correctly prior to calling the callback (fxn).
// For details, see https://github.com/processing/p5.js/issues/3087.
var r=function(r){return this._pInst._setProperty("mouseIsPressed",!0),this._pInst._setMouseButton(r),t.call(this,r)};// Pass along the event-prepended form of the callback.
return o.default.Element._adjustListener("mousedown",r,this),this}/**
     * The <a href="#/p5.Element/doubleClicked">doubleClicked()</a> method is called once after every time a
     * mouse button is pressed twice over the element. This can be used to
     * attach element and action-specific event listeners.
     *
     * @method doubleClicked
     * @param  {Function|Boolean} fxn function to be fired when mouse is
     *                                double clicked over the element.
     *                                if `false` is passed instead, the previously
     *                                firing function will no longer fire.
     * @chainable
     * @example
     * <div class='norender'><code>
     * let cnv, d, g;
     * function setup() {
     *   cnv = createCanvas(100, 100);
     *   cnv.doubleClicked(changeGray); // attach listener for
     *   // canvas double click only
     *   d = 10;
     *   g = 100;
     * }
     *
     * function draw() {
     *   background(g);
     *   ellipse(width / 2, height / 2, d, d);
     * }
     *
     * // this function fires with any double click anywhere
     * function doubleClicked() {
     *   d = d + 10;
     * }
     *
     * // this function fires only when cnv is double clicked
     * function changeGray() {
     *   g = random(0, 255);
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */},{key:"doubleClicked",value:function(t){return o.default.Element._adjustListener("dblclick",t,this),this}/**
     * The <a href="#/p5.Element/mouseWheel">mouseWheel()</a> method is called
     * once after every time a mouse wheel is scrolled over the element. This can
     * be used to attach element-specific event listeners.
     *
     * The method accepts a callback function as argument which will be executed
     * when the `wheel` event is triggered on the element, the callback function is
     * passed one argument `event`. The `event.deltaY` property returns negative
     * values if the mouse wheel is rotated up or away from the user and positive
     * in the other direction. The `event.deltaX` does the same as `event.deltaY`
     * except it reads the horizontal wheel scroll of the mouse wheel.
     *
     * On macOS with "natural" scrolling enabled, the `event.deltaY` values are
     * reversed.
     *
     * @method mouseWheel
     * @param  {Function|Boolean} fxn function to be fired when mouse is
     *                                scrolled over the element.
     *                                if `false` is passed instead, the previously
     *                                firing function will no longer fire.
     * @chainable
     * @example
     * <div class='norender'><code>
     * let cnv, d, g;
     * function setup() {
     *   cnv = createCanvas(100, 100);
     *   cnv.mouseWheel(changeSize); // attach listener for
     *   // activity on canvas only
     *   d = 10;
     *   g = 100;
     * }
     *
     * function draw() {
     *   background(g);
     *   ellipse(width / 2, height / 2, d, d);
     * }
     *
     * // this function fires with mousewheel movement
     * // anywhere on screen
     * function mouseWheel() {
     *   g = g + 10;
     * }
     *
     * // this function fires with mousewheel movement
     * // over canvas only
     * function changeSize(event) {
     *   if (event.deltaY > 0) {
     *     d = d + 10;
     *   } else {
     *     d = d - 10;
     *   }
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */},{key:"mouseWheel",value:function(t){return o.default.Element._adjustListener("wheel",t,this),this}/**
     * The <a href="#/p5.Element/mouseReleased">mouseReleased()</a> method is
     * called once after every time a mouse button is released over the element.
     * Some mobile browsers may also trigger this event on a touch screen, if the
     * user performs a quick tap. This can be used to attach element-specific event listeners.
     *
     * @method mouseReleased
     * @param  {Function|Boolean} fxn function to be fired when mouse is
     *                                released over the element.
     *                                if `false` is passed instead, the previously
     *                                firing function will no longer fire.
     * @chainable
     * @example
     * <div class='norender'><code>
     * let cnv, d, g;
     * function setup() {
     *   cnv = createCanvas(100, 100);
     *   cnv.mouseReleased(changeGray); // attach listener for
     *   // activity on canvas only
     *   d = 10;
     *   g = 100;
     * }
     *
     * function draw() {
     *   background(g);
     *   ellipse(width / 2, height / 2, d, d);
     * }
     *
     * // this function fires after the mouse has been
     * // released
     * function mouseReleased() {
     *   d = d + 10;
     * }
     *
     * // this function fires after the mouse has been
     * // released while on canvas
     * function changeGray() {
     *   g = random(0, 255);
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */},{key:"mouseReleased",value:function(t){return o.default.Element._adjustListener("mouseup",t,this),this}/**
     * The <a href="#/p5.Element/mouseClicked">mouseClicked()</a> method is
     * called once after a mouse button is pressed and released over the element.
     * Some mobile browsers may also trigger this event on a touch screen, if the
     * user performs a quick tap. This can be used to attach element-specific event listeners.
     *
     * @method mouseClicked
     * @param  {Function|Boolean} fxn function to be fired when mouse is
     *                                clicked over the element.
     *                                if `false` is passed instead, the previously
     *                                firing function will no longer fire.
     * @chainable
     * @example
     * <div class="norender">
     * <code>
     * let cnv, d, g;
     * function setup() {
     *   cnv = createCanvas(100, 100);
     *   cnv.mouseClicked(changeGray); // attach listener for
     *   // activity on canvas only
     *   d = 10;
     *   g = 100;
     * }
     *
     * function draw() {
     *   background(g);
     *   ellipse(width / 2, height / 2, d, d);
     * }
     *
     * // this function fires after the mouse has been
     * // clicked anywhere
     * function mouseClicked() {
     *   d = d + 10;
     * }
     *
     * // this function fires after the mouse has been
     * // clicked on canvas
     * function changeGray() {
     *   g = random(0, 255);
     * }
     * </code>
     * </div>
     *
     * @alt
     * no display.
     */},{key:"mouseClicked",value:function(t){return o.default.Element._adjustListener("click",t,this),this}/**
     * The <a href="#/p5.Element/mouseMoved">mouseMoved()</a> method is called once every time a
     * mouse moves over the element. This can be used to attach an
     * element-specific event listener.
     *
     * @method mouseMoved
     * @param  {Function|Boolean} fxn function to be fired when a mouse moves
     *                                over the element.
     *                                if `false` is passed instead, the previously
     *                                firing function will no longer fire.
     * @chainable
     * @example
     * <div class='norender'><code>
     * let cnv;
     * let d = 30;
     * let g;
     * function setup() {
     *   cnv = createCanvas(100, 100);
     *   cnv.mouseMoved(changeSize); // attach listener for
     *   // activity on canvas only
     *   d = 10;
     *   g = 100;
     * }
     *
     * function draw() {
     *   background(g);
     *   fill(200);
     *   ellipse(width / 2, height / 2, d, d);
     * }
     *
     * // this function fires when mouse moves anywhere on
     * // page
     * function mouseMoved() {
     *   g = g + 5;
     *   if (g > 255) {
     *     g = 0;
     *   }
     * }
     *
     * // this function fires when mouse moves over canvas
     * function changeSize() {
     *   d = d + 2;
     *   if (d > 100) {
     *     d = 0;
     *   }
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */},{key:"mouseMoved",value:function(t){return o.default.Element._adjustListener("mousemove",t,this),this}/**
     * The <a href="#/p5.Element/mouseOver">mouseOver()</a> method is called once after every time a
     * mouse moves onto the element. This can be used to attach an
     * element-specific event listener.
     *
     * @method mouseOver
     * @param  {Function|Boolean} fxn function to be fired when a mouse moves
     *                                onto the element.
     *                                if `false` is passed instead, the previously
     *                                firing function will no longer fire.
     * @chainable
     * @example
     * <div class='norender'><code>
     * let cnv;
     * let d;
     * function setup() {
     *   cnv = createCanvas(100, 100);
     *   cnv.mouseOver(changeGray);
     *   d = 10;
     * }
     *
     * function draw() {
     *   ellipse(width / 2, height / 2, d, d);
     * }
     *
     * function changeGray() {
     *   d = d + 10;
     *   if (d > 100) {
     *     d = 0;
     *   }
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */},{key:"mouseOver",value:function(t){return o.default.Element._adjustListener("mouseover",t,this),this}/**
     * The <a href="#/p5.Element/mouseOut">mouseOut()</a> method is called once after every time a
     * mouse moves off the element. This can be used to attach an
     * element-specific event listener.
     *
     * @method mouseOut
     * @param  {Function|Boolean} fxn function to be fired when a mouse
     *                                moves off of an element.
     *                                if `false` is passed instead, the previously
     *                                firing function will no longer fire.
     * @chainable
     * @example
     * <div class='norender'><code>
     * let cnv;
     * let d;
     * function setup() {
     *   cnv = createCanvas(100, 100);
     *   cnv.mouseOut(changeGray);
     *   d = 10;
     * }
     *
     * function draw() {
     *   ellipse(width / 2, height / 2, d, d);
     * }
     *
     * function changeGray() {
     *   d = d + 10;
     *   if (d > 100) {
     *     d = 0;
     *   }
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */},{key:"mouseOut",value:function(t){return o.default.Element._adjustListener("mouseout",t,this),this}/**
     * The <a href="#/p5.Element/touchStarted">touchStarted()</a> method is called once after every time a touch is
     * registered. This can be used to attach element-specific event listeners.
     *
     * @method touchStarted
     * @param  {Function|Boolean} fxn function to be fired when a touch
     *                                starts over the element.
     *                                if `false` is passed instead, the previously
     *                                firing function will no longer fire.
     * @chainable
     * @example
     * <div class='norender'><code>
     * let cnv;
     * let d;
     * let g;
     * function setup() {
     *   cnv = createCanvas(100, 100);
     *   cnv.touchStarted(changeGray); // attach listener for
     *   // canvas click only
     *   d = 10;
     *   g = 100;
     * }
     *
     * function draw() {
     *   background(g);
     *   ellipse(width / 2, height / 2, d, d);
     * }
     *
     * // this function fires with any touch anywhere
     * function touchStarted() {
     *   d = d + 10;
     * }
     *
     * // this function fires only when cnv is clicked
     * function changeGray() {
     *   g = random(0, 255);
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */},{key:"touchStarted",value:function(t){return o.default.Element._adjustListener("touchstart",t,this),this}/**
     * The <a href="#/p5.Element/touchMoved">touchMoved()</a> method is called once after every time a touch move is
     * registered. This can be used to attach element-specific event listeners.
     *
     * @method touchMoved
     * @param  {Function|Boolean} fxn function to be fired when a touch moves over
     *                                the element.
     *                                if `false` is passed instead, the previously
     *                                firing function will no longer fire.
     * @chainable
     * @example
     * <div class='norender'><code>
     * let cnv;
     * let g;
     * function setup() {
     *   cnv = createCanvas(100, 100);
     *   cnv.touchMoved(changeGray); // attach listener for
     *   // canvas click only
     *   g = 100;
     * }
     *
     * function draw() {
     *   background(g);
     * }
     *
     * // this function fires only when cnv is clicked
     * function changeGray() {
     *   g = random(0, 255);
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */},{key:"touchMoved",value:function(t){return o.default.Element._adjustListener("touchmove",t,this),this}/**
     * The <a href="#/p5.Element/touchEnded">touchEnded()</a> method is called once after every time a touch is
     * registered. This can be used to attach element-specific event listeners.
     *
     * @method touchEnded
     * @param  {Function|Boolean} fxn function to be fired when a touch ends
     *                                over the element.
     *                                if `false` is passed instead, the previously
     *                                firing function will no longer fire.
     * @chainable
     * @example
     * <div class='norender'><code>
     * let cnv;
     * let d;
     * let g;
     * function setup() {
     *   cnv = createCanvas(100, 100);
     *   cnv.touchEnded(changeGray); // attach listener for
     *   // canvas click only
     *   d = 10;
     *   g = 100;
     * }
     *
     * function draw() {
     *   background(g);
     *   ellipse(width / 2, height / 2, d, d);
     * }
     *
     * // this function fires with any touch anywhere
     * function touchEnded() {
     *   d = d + 10;
     * }
     *
     * // this function fires only when cnv is clicked
     * function changeGray() {
     *   g = random(0, 255);
     * }
     * </code></div>
     *
     * @alt
     * no display.
     */},{key:"touchEnded",value:function(t){return o.default.Element._adjustListener("touchend",t,this),this}/**
     * The <a href="#/p5.Element/dragOver">dragOver()</a> method is called once after every time a
     * file is dragged over the element. This can be used to attach an
     * element-specific event listener.
     *
     * @method dragOver
     * @param  {Function|Boolean} fxn function to be fired when a file is
     *                                dragged over the element.
     *                                if `false` is passed instead, the previously
     *                                firing function will no longer fire.
     * @chainable
     * @example
     * <div><code>
     * // To test this sketch, simply drag a
     * // file over the canvas
     * function setup() {
     *   let c = createCanvas(100, 100);
     *   background(200);
     *   textAlign(CENTER);
     *   text('Drag file', width / 2, height / 2);
     *   c.dragOver(dragOverCallback);
     * }
     *
     * // This function will be called whenever
     * // a file is dragged over the canvas
     * function dragOverCallback() {
     *   background(240);
     *   text('Dragged over', width / 2, height / 2);
     * }
     * </code></div>
     * @alt
     * nothing displayed
     */},{key:"dragOver",value:function(t){return o.default.Element._adjustListener("dragover",t,this),this}/**
     * The <a href="#/p5.Element/dragLeave">dragLeave()</a> method is called once after every time a
     * dragged file leaves the element area. This can be used to attach an
     * element-specific event listener.
     *
     * @method dragLeave
     * @param  {Function|Boolean} fxn function to be fired when a file is
     *                                dragged off the element.
     *                                if `false` is passed instead, the previously
     *                                firing function will no longer fire.
     * @chainable
     * @example
     * <div><code>
     * // To test this sketch, simply drag a file
     * // over and then out of the canvas area
     * function setup() {
     *   let c = createCanvas(100, 100);
     *   background(200);
     *   textAlign(CENTER);
     *   text('Drag file', width / 2, height / 2);
     *   c.dragLeave(dragLeaveCallback);
     * }
     *
     * // This function will be called whenever
     * // a file is dragged out of the canvas
     * function dragLeaveCallback() {
     *   background(240);
     *   text('Dragged off', width / 2, height / 2);
     * }
     * </code></div>
     * @alt
     * nothing displayed
     */},{key:"dragLeave",value:function(t){return o.default.Element._adjustListener("dragleave",t,this),this}/**
     *
     * @private
     * @static
     * @param {String} ev
     * @param {Boolean|Function} fxn
     * @param {Element} ctx
     * @chainable
     * @alt
     * General handler for event attaching and detaching
     */},{key:"_setProperty",/**
     * Helper fxn for sharing pixel methods
     */value:function(t,r){this[t]=r}}],[{key:"_adjustListener",value:function(t,r,n){return!1===r?o.default.Element._detachListener(t,n):o.default.Element._attachListener(t,r,n),this}/**
     *
     * @private
     * @static
     * @param {String} ev
     * @param {Function} fxn
     * @param {Element} ctx
     */},{key:"_attachListener",value:function(t,r,n){n._events[t]&&o.default.Element._detachListener(t,n);var a=r.bind(n);n.elt.addEventListener(t,a,!1),n._events[t]=a}/**
     *
     * @private
     * @static
     * @param {String} ev
     * @param {Element} ctx
     */},{key:"_detachListener",value:function(t,r){var n=r._events[t];r.elt.removeEventListener(t,n,!1),r._events[t]=null}}]),t)}();var u=o.default.Element;n.default=u},{"./main":296}],298:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=u(t("./main")),s=c(t("./constants"));function l(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return l=function(){return t},t}function c(t){if(t&&t.__esModule)return t;if(null===t||"object"!==p(t)&&"function"!=typeof t)return{default:t};var r=l();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var s=o?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}function u(t){return t&&t.__esModule?t:{default:t}}function p(t){return(p="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}function d(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function m(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function f(t,r,n){return r&&m(t.prototype,r),n&&m(t,n),t}function h(t,r){if("function"!=typeof r&&null!==r)throw TypeError("Super expression must either be null or a function");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),r&&y(t,r)}function y(t,r){return(y=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t})(t,r)}function g(t){function r(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}return function(){var n,o=x(t);if(r()){var a=x(this).constructor;n=Reflect.construct(o,arguments,a)}else n=o.apply(this,arguments);return v(this,n)}}function v(t,r){return r&&("object"===p(r)||"function"==typeof r)?r:b(t)}function b(t){if(void 0===t)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function x(t){return(x=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}/**
 * Thin wrapper around a renderer, to be used for creating a
 * graphics buffer object. Use this class if you need
 * to draw into an off-screen graphics buffer. The two parameters define the
 * width and height in pixels. The fields and methods for this class are
 * extensive, but mirror the normal drawing API for p5.
 *
 * @class p5.Graphics
 * @constructor
 * @extends p5.Element
 * @param {Number} w            width
 * @param {Number} h            height
 * @param {Constant} renderer   the renderer to use, either P2D or WEBGL
 * @param {p5} [pInst]          pointer to p5 instance
 * @param {Object} [canvas]     existing html canvas element
 */a.default.Graphics=/*#__PURE__*/function(t){h(n,t);var r=g(n);function n(t,o,l,c,u){d(this,n),m=u||document.createElement("canvas"),(p=r.call(this,m,c)).canvas=m;var p,m,f=l||s.P2D,h=c._userNode||document.body;// bind methods and props of p5 to the new object
for(var y in u||h.appendChild(p.canvas),a.default.prototype)p[y]||("function"==typeof a.default.prototype[y]?p[y]=a.default.prototype[y].bind(b(p)):p[y]=a.default.prototype[y]);return a.default.prototype._initializeInstanceVariables.apply(b(p)),p.width=t,p.height=o,p._pixelDensity=c._pixelDensity,f===s.WEBGL?p._renderer=new a.default.RendererGL(p.canvas,b(p),!1):p._renderer=new a.default.Renderer2D(p.canvas,b(p),!1),c._elements.push(b(p)),Object.defineProperty(b(p),"deltaTime",{get:function(){return this._pInst.deltaTime}}),p._renderer.resize(t,o),p._renderer._applyDefaults(),v(p,b(p))}/**
  * Resets certain values such as those modified by functions in the Transform category
  * and in the Lights category that are not automatically reset
  * with graphics buffer objects. Calling this in <a href='#/p5/draw'>draw()</a> will copy the behavior
  * of the standard canvas.
  *
  * @method reset
  * @example
  *
  * <div><code>
  * let pg;
  * function setup() {
  *   createCanvas(100, 100);
  *   background(0);
  *   pg = createGraphics(50, 100);
  *   pg.fill(0);
  *   frameRate(5);
  * }
  *
  * function draw() {
  *   image(pg, width / 2, 0);
  *   pg.background(255);
  *   // p5.Graphics object behave a bit differently in some cases
  *   // The normal canvas on the left resets the translate
  *   // with every loop through draw()
  *   // the graphics object on the right doesn't automatically reset
  *   // so translate() is additive and it moves down the screen
  *   rect(0, 0, width / 2, 5);
  *   pg.rect(0, 0, width / 2, 5);
  *   translate(0, 5, 0);
  *   pg.translate(0, 5, 0);
  * }
  * function mouseClicked() {
  *   // if you click you will see that
  *   // reset() resets the translate back to the initial state
  *   // of the Graphics object
  *   pg.reset();
  * }
  * </code></div>
  *
  * @alt
  * A white line on a black background stays still on the top-left half.
  * A black line animates from top to bottom on a white background on the right half.
  * When clicked, the black line starts back over at the top.
  */return f(n,[{key:"reset",value:function(){this._renderer.resetMatrix(),this._renderer.isP3D&&this._renderer._update()}/**
    * Removes a Graphics object from the page and frees any resources
    * associated with it.
    *
    * @method remove
    *
    * @example
    * <div class='norender'><code>
    * let bg;
    * function setup() {
    *   bg = createCanvas(100, 100);
    *   bg.background(0);
    *   image(bg, 0, 0);
    *   bg.remove();
    * }
    * </code></div>
    *
    * <div><code>
    * let bg;
    * function setup() {
    *   pixelDensity(1);
    *   createCanvas(100, 100);
    *   stroke(255);
    *   fill(0);
    *
    *   // create and draw the background image
    *   bg = createGraphics(100, 100);
    *   bg.background(200);
    *   bg.ellipse(50, 50, 80, 80);
    * }
    * function draw() {
    *   let t = millis() / 1000;
    *   // draw the background
    *   if (bg) {
    *     image(bg, frameCount % 100, 0);
    *     image(bg, frameCount % 100 - 100, 0);
    *   }
    *   // draw the foreground
    *   let p = p5.Vector.fromAngle(t, 35).add(50, 50);
    *   ellipse(p.x, p.y, 30);
    * }
    * function mouseClicked() {
    *   // remove the background
    *   if (bg) {
    *     bg.remove();
    *     bg = null;
    *   }
    * }
    * </code></div>
    *
    * @alt
    * no image
    * a multi-colored circle moving back and forth over a scrolling background.
    */},{key:"remove",value:function(){this.elt.parentNode&&this.elt.parentNode.removeChild(this.elt);var t=this._pInst._elements.indexOf(this);for(var r in -1!==t&&this._pInst._elements.splice(t,1),this._events)this.elt.removeEventListener(r,this._events[r])}/**
     * Creates and returns a new <a href="#/p5.Framebuffer">p5.Framebuffer</a>
     * inside a p5.Graphics WebGL context.
     *
     * This takes the same parameters as the <a href="#/p5/createFramebuffer">global
     * createFramebuffer function.</a>
     *
     * @method createFramebuffer
     */},{key:"createFramebuffer",value:function(t){return new a.default.Framebuffer(this,t)}}]),n}(a.default.Element);var j=a.default.Graphics;n.default=j},{"./constants":284,"./main":296,"core-js/modules/es.array.index-of":177,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.splice":184,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.get-prototype-of":196,"core-js/modules/es.object.to-string":198,"core-js/modules/es.reflect.construct":200,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],299:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.number.constructor"),t("core-js/modules/es.object.assign"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),t("core-js/modules/es.string.trim"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.number.constructor"),t("core-js/modules/es.object.assign"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),t("core-js/modules/es.string.trim"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=u(t("./main")),s=c(t("../core/constants"));function l(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return l=function(){return t},t}function c(t){if(t&&t.__esModule)return t;if(null===t||"object"!==p(t)&&"function"!=typeof t)return{default:t};var r=l();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var s=o?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}function u(t){return t&&t.__esModule?t:{default:t}}function p(t){return(p="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}function d(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function m(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function f(t,r,n){return r&&m(t.prototype,r),n&&m(t,n),t}function h(t,r){if("function"!=typeof r&&null!==r)throw TypeError("Super expression must either be null or a function");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),r&&y(t,r)}function y(t,r){return(y=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t})(t,r)}function g(t){function r(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}return function(){var n,o=x(t);if(r()){var a=x(this).constructor;n=Reflect.construct(o,arguments,a)}else n=o.apply(this,arguments);return v(this,n)}}function v(t,r){return r&&("object"===p(r)||"function"==typeof r)?r:b(t)}function b(t){if(void 0===t)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function x(t){return(x=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}/**
 * Main graphics and rendering context, as well as the base API
 * implementation for p5.js "core". To be used as the superclass for
 * Renderer2D and Renderer3D classes, respectively.
 *
 * @class p5.Renderer
 * @constructor
 * @extends p5.Element
 * @param {HTMLElement} elt DOM node that is wrapped
 * @param {p5} [pInst] pointer to p5 instance
 * @param {Boolean} [isMainCanvas] whether we're using it as main canvas
 */var j=/*#__PURE__*/function(t){h(n,t);var r=g(n);function n(t,o,a){var l;return d(this,n),(l=r.call(this,t,o)).canvas=t,l._pixelsState=o,a?(l._isMainCanvas=!0,l._pInst._setProperty("_curElement",b(l)),l._pInst._setProperty("canvas",l.canvas),l._pInst._setProperty("width",l.width),l._pInst._setProperty("height",l.height)):(// hide if offscreen buffer by default
l.canvas.style.display="none",l._styles=[]),l._textSize=12,l._textLeading=15,l._textFont="sans-serif",l._textStyle=s.NORMAL,l._textAscent=null,l._textDescent=null,l._textAlign=s.LEFT,l._textBaseline=s.BASELINE,l._textWrap=s.WORD,l._rectMode=s.CORNER,l._ellipseMode=s.CENTER,l._curveTightness=0,l._imageMode=s.CORNER,l._tint=null,l._doStroke=!0,l._doFill=!0,l._strokeSet=!1,l._fillSet=!1,l._leadingSet=!1,l}// the renderer should return a 'style' object that it wishes to
return(// store on the push stack.
f(n,[{key:"push",value:function(){return{properties:{_doStroke:this._doStroke,_strokeSet:this._strokeSet,_doFill:this._doFill,_fillSet:this._fillSet,_tint:this._tint,_imageMode:this._imageMode,_rectMode:this._rectMode,_ellipseMode:this._ellipseMode,_textFont:this._textFont,_textLeading:this._textLeading,_leadingSet:this._leadingSet,_textSize:this._textSize,_textAlign:this._textAlign,_textBaseline:this._textBaseline,_textStyle:this._textStyle,_textWrap:this._textWrap}}}// a pop() operation is in progress
},{key:"pop",value:function(t){t.properties&&Object.assign(this,t.properties)}/**
    * Resize our canvas element.
    */},{key:"resize",value:function(t,r){this.width=t,this.height=r,this.elt.width=t*this._pInst._pixelDensity,this.elt.height=r*this._pInst._pixelDensity,this.elt.style.width="".concat(t,"px"),this.elt.style.height="".concat(r,"px"),this._isMainCanvas&&(this._pInst._setProperty("width",this.width),this._pInst._setProperty("height",this.height))}},{key:"get",value:function(t,r,n,o){var s=this._pixelsState,l=s._pixelDensity,c=this.canvas;if(void 0===t&&void 0===r)// get()
t=r=0,n=s.width,o=s.height;else if(t*=l,r*=l,void 0===n&&void 0===o)return(// get(x,y)
t<0||r<0||t>=c.width||r>=c.height?[0,0,0,0]:this._getPixel(t,r));// get(x,y,w,h)
var u=new a.default.Image(n,o);return u.canvas.getContext("2d").drawImage(c,t,r,n*l,o*l,0,0,n,o),u}},{key:"textLeading",value:function(t){return"number"==typeof t?(this._setProperty("_leadingSet",!0),this._setProperty("_textLeading",t),this._pInst):this._textLeading}},{key:"textStyle",value:function(t){return t?((t===s.NORMAL||t===s.ITALIC||t===s.BOLD||t===s.BOLDITALIC)&&this._setProperty("_textStyle",t),this._applyTextProperties()):this._textStyle}},{key:"textAscent",value:function(){return null===this._textAscent&&this._updateTextMetrics(),this._textAscent}},{key:"textDescent",value:function(){return null===this._textDescent&&this._updateTextMetrics(),this._textDescent}},{key:"textAlign",value:function(t,r){return void 0!==t?(this._setProperty("_textAlign",t),void 0!==r&&this._setProperty("_textBaseline",r),this._applyTextProperties()):{horizontal:this._textAlign,vertical:this._textBaseline}}},{key:"textWrap",value:function(t){return this._setProperty("_textWrap",t),this._textWrap}},{key:"text",value:function(t,r,n,o,a){var l,c,u,p,d,m,f,h=this._pInst,y=this._textWrap,g=Number.MAX_VALUE,v=n;if(this._doFill||this._doStroke){if(void 0===t)return;if("string"!=typeof t&&(t=t.toString()),// Replaces tabs with double-spaces and splits string on any line
// breaks present in the original string
t=t.replace(/(\t)/g,"  "),l=t.split("\n"),void 0!==o){switch(this._rectMode===s.CENTER&&(r-=o/2),this._textAlign){case s.CENTER:r+=o/2;break;case s.RIGHT:r+=o}if(void 0!==a){this._rectMode===s.CENTER&&(n-=a/2,v-=a/2);var b=n,x=h.textAscent();switch(this._textBaseline){case s.BOTTOM:n=Math.max(f=n+a,n),v+=x;break;case s.CENTER:n=Math.max(f=n+a/2,n),v+=x/2}// remember the max-allowed y-position for any line (fix to #928)
g=n+a-x,this._textBaseline===s.CENTER&&(g=b+a-x/2)}else if(this._textBaseline===s.BOTTOM||this._textBaseline===s.CENTER){// use rectHeight as an approximation for text height
var j=h.textSize()*this._textLeading;v=n-j/2,g=n+j/2}// Render lines of text according to settings of textWrap
// Splits lines at spaces, for loop adds one word + space
// at a time and tests length with next word added
if(y===s.WORD){for(var w=[],_=0;_<l.length;_++){c="",d=l[_].split(" ");for(var S=0;S<d.length;S++)u="".concat(c+d[S])+" ",(p=this.textWidth(u))>o&&c.length>0?(w.push(c),c="".concat(d[S])+" "):c=u;w.push(c)}var E=0;this._textBaseline===s.CENTER?E=(w.length-1)*h.textLeading()/2:this._textBaseline===s.BOTTOM&&(E=(w.length-1)*h.textLeading());for(var T=0;T<l.length;T++){c="",d=l[T].split(" ");for(var M=0;M<d.length;M++)u="".concat(c+d[M])+" ",(p=this.textWidth(u))>o&&c.length>0?(this._renderText(h,c.trim(),r,n-E,g,v),c="".concat(d[M])+" ",n+=h.textLeading()):c=u;this._renderText(h,c.trim(),r,n-E,g,v),n+=h.textLeading()}}else{for(var C=[],O=0;O<l.length;O++){c="",m=l[O].split("");for(var N=0;N<m.length;N++)u="".concat(c+m[N]),(p=this.textWidth(u))<=o?c+=m[N]:p>o&&c.length>0&&(C.push(c),c="".concat(m[N]))}C.push(c);var A=0;this._textBaseline===s.CENTER?A=(C.length-1)*h.textLeading()/2:this._textBaseline===s.BOTTOM&&(A=(C.length-1)*h.textLeading());// Splits lines at characters, for loop adds one char at a time
// and tests length with next char added
for(var R=0;R<l.length;R++){c="",m=l[R].split("");for(var L=0;L<m.length;L++)u="".concat(c+m[L]),(p=this.textWidth(u))<=o?c+=m[L]:p>o&&c.length>0&&(this._renderText(h,c.trim(),r,n-A,g,v),n+=h.textLeading(),c="".concat(m[L]))}this._renderText(h,c.trim(),r,n-A,g,v),n+=h.textLeading()}}else{// Offset to account for vertically centering multiple lines of text - no
// need to adjust anything for vertical align top or baseline
var I=0;this._textBaseline===s.CENTER?I=(l.length-1)*h.textLeading()/2:this._textBaseline===s.BOTTOM&&(I=(l.length-1)*h.textLeading());// Renders lines of text at any line breaks present in the original string
for(var P=0;P<l.length;P++)this._renderText(h,l[P],r,n-I,g,v-I),n+=h.textLeading()}return h}}},{key:"_applyDefaults",value:function(){return this}/**
    * Helper function to check font type (system or otf)
    */},{key:"_isOpenType",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._textFont;return"object"===p(t)&&t.font&&t.font.supported}},{key:"_updateTextMetrics",value:function(){if(this._isOpenType())return this._setProperty("_textAscent",this._textFont._textAscent()),this._setProperty("_textDescent",this._textFont._textDescent()),this;// Adapted from http://stackoverflow.com/a/25355178
var t=document.createElement("span");t.style.fontFamily=this._textFont,t.style.fontSize="".concat(this._textSize,"px"),t.innerHTML="ABCjgq|";var r=document.createElement("div");r.style.display="inline-block",r.style.width="1px",r.style.height="0px";var n=document.createElement("div");n.appendChild(t),n.appendChild(r),n.style.height="0px",n.style.overflow="hidden",document.body.appendChild(n),r.style.verticalAlign="baseline";var o=w(r),a=w(t),s=o[1]-a[1];r.style.verticalAlign="bottom",o=w(r),a=w(t);var l=o[1]-a[1]-s;return document.body.removeChild(n),this._setProperty("_textAscent",s),this._setProperty("_textDescent",l),this}}]),n)}(a.default.Element);/**
 * Helper fxn to measure ascent and descent.
 * Adapted from http://stackoverflow.com/a/25355178
 */function w(t){var r=0,n=0;if(t.offsetParent)do r+=t.offsetLeft,n+=t.offsetTop;while(t=t.offsetParent)else r+=t.offsetLeft,n+=t.offsetTop;return[r,n]}// This caused the test to failed.
j.prototype.textSize=function(t){return"number"==typeof t?(this._setProperty("_textSize",t),this._leadingSet||this._setProperty("_textLeading",t*s._DEFAULT_LEADMULT),this._applyTextProperties()):this._textSize},a.default.Renderer=j;var _=a.default.Renderer;n.default=_},{"../core/constants":284,"./main":296,"core-js/modules/es.array.iterator":178,"core-js/modules/es.number.constructor":189,"core-js/modules/es.object.assign":192,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.get-prototype-of":196,"core-js/modules/es.object.to-string":198,"core-js/modules/es.reflect.construct":200,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.replace":212,"core-js/modules/es.string.split":214,"core-js/modules/es.string.trim":217,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],300:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.function.name"),t("core-js/modules/es.number.to-fixed"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.reflect.get"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.function.name"),t("core-js/modules/es.number.to-fixed"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.reflect.get"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=u(t("./main")),s=c(t("./constants"));function l(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return l=function(){return t},t}function c(t){if(t&&t.__esModule)return t;if(null===t||"object"!==p(t)&&"function"!=typeof t)return{default:t};var r=l();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var s=o?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}function u(t){return t&&t.__esModule?t:{default:t}}function p(t){return(p="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}function d(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function m(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function f(t,r,n){return r&&m(t.prototype,r),n&&m(t,n),t}function h(t,r,n){return(h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,r,n){var o=y(t,r);if(o){var a=Object.getOwnPropertyDescriptor(o,r);return a.get?a.get.call(n):a.value}})(t,r,n||t)}function y(t,r){for(;!Object.prototype.hasOwnProperty.call(t,r)&&null!==(t=w(t)););return t}function g(t,r){if("function"!=typeof r&&null!==r)throw TypeError("Super expression must either be null or a function");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),r&&v(t,r)}function v(t,r){return(v=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t})(t,r)}function b(t){function r(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}return function(){var n,o=w(t);if(r()){var a=w(this).constructor;n=Reflect.construct(o,arguments,a)}else n=o.apply(this,arguments);return x(this,n)}}function x(t,r){return r&&("object"===p(r)||"function"==typeof r)?r:j(t)}function j(t){if(void 0===t)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function w(t){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}/**
 * p5.Renderer2D
 * The 2D graphics canvas renderer class.
 * extends p5.Renderer
 */t("./p5.Renderer");var _="rgba(0,0,0,0)",S=/*#__PURE__*/function(t){g(n,t);var r=b(n);function n(t,o,a){var s;return d(this,n),(s=r.call(this,t,o,a)).drawingContext=s.canvas.getContext("2d"),s._pInst._setProperty("drawingContext",s.drawingContext),s}return f(n,[{key:"_applyDefaults",value:function(){this._cachedFillStyle=this._cachedStrokeStyle=void 0,this._cachedBlendMode=s.BLEND,this._setFill(s._DEFAULT_FILL),this._setStroke(s._DEFAULT_STROKE),this.drawingContext.lineCap=s.ROUND,this.drawingContext.font="normal 12px sans-serif"}},{key:"resize",value:function(t,r){h(w(n.prototype),"resize",this).call(this,t,r),this.drawingContext.scale(this._pInst._pixelDensity,this._pInst._pixelDensity)}//////////////////////////////////////////////
},{key:"background",value:function(){if(this.drawingContext.save(),this.resetMatrix(),(arguments.length<=0?void 0:arguments[0])instanceof a.default.Image){if((arguments.length<=1?void 0:arguments[1])>=0){// set transparency of background
var t=arguments.length<=0?void 0:arguments[0];this.drawingContext.globalAlpha=(arguments.length<=1?void 0:arguments[1])/255,this._pInst.image(t,0,0,this.width,this.height)}else this._pInst.image(arguments.length<=0?void 0:arguments[0],0,0,this.width,this.height)}else{var r,n=this._getFill(),o=(r=this._pInst).color.apply(r,arguments);// create background rect
this._pInst._addAccsOutput()&&this._pInst._accsBackground(o.levels);var s=o.toString();this._setFill(s),this._isErasing&&this.blendMode(this._cachedBlendMode),this.drawingContext.fillRect(0,0,this.width,this.height),this._setFill(n),this._isErasing&&this._pInst.erase()}this.drawingContext.restore()}},{key:"clear",value:function(){this.drawingContext.save(),this.resetMatrix(),this.drawingContext.clearRect(0,0,this.width,this.height),this.drawingContext.restore()}},{key:"fill",value:function(){var t,r=(t=this._pInst).color.apply(t,arguments);this._setFill(r.toString()),this._pInst._addAccsOutput()&&this._pInst._accsCanvasColors("fill",r.levels)}},{key:"stroke",value:function(){var t,r=(t=this._pInst).color.apply(t,arguments);this._setStroke(r.toString()),this._pInst._addAccsOutput()&&this._pInst._accsCanvasColors("stroke",r.levels)}},{key:"erase",value:function(t,r){if(!this._isErasing){// cache the fill style
this._cachedFillStyle=this.drawingContext.fillStyle;var n=this._pInst.color(255,t).toString();this.drawingContext.fillStyle=n,this._cachedStrokeStyle=this.drawingContext.strokeStyle;var o=this._pInst.color(255,r).toString();this.drawingContext.strokeStyle=o;var a=this._cachedBlendMode;this.blendMode(s.REMOVE),this._cachedBlendMode=a,this._isErasing=!0}}},{key:"noErase",value:function(){this._isErasing&&(this.drawingContext.fillStyle=this._cachedFillStyle,this.drawingContext.strokeStyle=this._cachedStrokeStyle,this.blendMode(this._cachedBlendMode),this._isErasing=!1)}//////////////////////////////////////////////
},{key:"image",value:function(t,r,n,o,s,l,c,u,p){var d;t.gifProperties&&t._animateGif(this._pInst);try{a.default.MediaElement&&t instanceof a.default.MediaElement&&t._ensureCanvas(),this._tint&&t.canvas&&(d=this._getTintedImageCanvas(t)),d||(d=t.canvas||t.elt);var m=1;t.width&&t.width>0&&(m=d.width/t.width),this._isErasing&&this.blendMode(this._cachedBlendMode),this.drawingContext.drawImage(d,m*r,m*n,m*o,m*s,l,c,u,p),this._isErasing&&this._pInst.erase()}catch(t){if("NS_ERROR_NOT_AVAILABLE"!==t.name)throw t}}},{key:"_getTintedImageCanvas",value:function(t){if(!t.canvas)return t;t.tintCanvas||// around so we don't need to re-incur the cost of
// creating a new one for each tint
(t.tintCanvas=document.createElement("canvas")),t.tintCanvas.width!==t.canvas.width&&(t.tintCanvas.width=t.canvas.width),t.tintCanvas.height!==t.canvas.height&&(t.tintCanvas.height=t.canvas.height);// Goal: multiply the r,g,b,a values of the source by
// the r,g,b,a values of the tint color
var r=t.tintCanvas.getContext("2d");return r.save(),r.clearRect(0,0,t.canvas.width,t.canvas.height),(this._tint[0]<255||this._tint[1]<255||this._tint[2]<255)&&(// Color tint: we need to use the multiply blend mode to change the colors.
// However, the canvas implementation of this destroys the alpha channel of
// the image. To accommodate, we first get a version of the image with full
// opacity everywhere, tint using multiply, and then use the destination-in
// blend mode to restore the alpha channel again.
// Start with the original image
r.drawImage(t.canvas,0,0),// the original image again
r.globalCompositeOperation="luminosity",r.drawImage(t.canvas,0,0),// After this we should have the original again, but with full opacity.
r.globalCompositeOperation="color",r.drawImage(t.canvas,0,0),r.globalCompositeOperation="multiply",r.fillStyle="rgb(".concat(this._tint.slice(0,3).join(", "),")"),r.fillRect(0,0,t.canvas.width,t.canvas.height),r.globalCompositeOperation="destination-in"),// If we only need to change the alpha, we can skip all the extra work!
r.globalAlpha=this._tint[3]/255,r.drawImage(t.canvas,0,0),r.restore(),t.tintCanvas}//////////////////////////////////////////////
},{key:"blendMode",value:function(t){if(t===s.SUBTRACT)console.warn("blendMode(SUBTRACT) only works in WEBGL mode.");else if(t===s.BLEND||t===s.REMOVE||t===s.DARKEST||t===s.LIGHTEST||t===s.DIFFERENCE||t===s.MULTIPLY||t===s.EXCLUSION||t===s.SCREEN||t===s.REPLACE||t===s.OVERLAY||t===s.HARD_LIGHT||t===s.SOFT_LIGHT||t===s.DODGE||t===s.BURN||t===s.ADD)this._cachedBlendMode=t,this.drawingContext.globalCompositeOperation=t;else throw Error("Mode ".concat(t," not recognized."))}},{key:"blend",value:function(){for(var t=this.drawingContext.globalCompositeOperation,r=arguments.length,n=Array(r),o=0;o<r;o++)n[o]=arguments[o];var s=n[n.length-1],l=Array.prototype.slice.call(n,0,n.length-1);this.drawingContext.globalCompositeOperation=s,a.default.prototype.copy.apply(this,l),this.drawingContext.globalCompositeOperation=t}// p5.Renderer2D.prototype.get = p5.Renderer.prototype.get;
},{key:"_getPixel",value:function(t,r){var n,o;return[(n=this.drawingContext.getImageData(t,r,1,1).data)[(o=0)+0],n[o+1],n[o+2],n[o+3]]}},{key:"loadPixels",value:function(){var t=this._pixelsState,r=t._pixelDensity,n=this.width*r,o=this.height*r,a=this.drawingContext.getImageData(0,0,n,o);// if called by p5.Image
// have diff pixel arrays.
t._setProperty("imageData",a),t._setProperty("pixels",a.data)}},{key:"set",value:function(t,r,n){// round down to get integer numbers
t=Math.floor(t),r=Math.floor(r);var o=this._pixelsState;if(n instanceof a.default.Image)this.drawingContext.save(),this.drawingContext.setTransform(1,0,0,1,0,0),this.drawingContext.scale(o._pixelDensity,o._pixelDensity),this.drawingContext.clearRect(t,r,n.width,n.height),this.drawingContext.drawImage(n.canvas,t,r),this.drawingContext.restore();else{var s=0,l=0,c=0,u=0,p=4*(r*o._pixelDensity*(this.width*o._pixelDensity)+t*o._pixelDensity);if(o.imageData||o.loadPixels.call(o),"number"==typeof n)p<o.pixels.length&&(s=n,l=n,c=n,u=255);else if(n instanceof Array){if(n.length<4)throw Error("pixel array must be of the form [R, G, B, A]");p<o.pixels.length&&(s=n[0],l=n[1],c=n[2],u=n[3])}else n instanceof a.default.Color&&p<o.pixels.length&&(s=n.levels[0],l=n.levels[1],c=n.levels[2],u=n.levels[3]);// loop over pixelDensity * pixelDensity
for(var d=0;d<o._pixelDensity;d++)for(var m=0;m<o._pixelDensity;m++)// loop over
p=4*((r*o._pixelDensity+m)*this.width*o._pixelDensity+(t*o._pixelDensity+d)),o.pixels[p]=s,o.pixels[p+1]=l,o.pixels[p+2]=c,o.pixels[p+3]=u}}},{key:"updatePixels",value:function(t,r,n,o){var a=this._pixelsState,s=a._pixelDensity;void 0===t&&void 0===r&&void 0===n&&void 0===o&&(t=0,r=0,n=this.width,o=this.height),t*=s,r*=s,n*=s,o*=s,this.gifProperties&&(this.gifProperties.frames[this.gifProperties.displayIndex].image=a.imageData),this.drawingContext.putImageData(a.imageData,t,r,0,0,n,o)}//////////////////////////////////////////////
},{key:"_acuteArcToBezier",value:function(t,r){// Evaluate constants.
var n=r/2,o=Math.cos(n),a=Math.sin(n),s=1/Math.tan(n),l=t+n,c=Math.cos(l),u=Math.sin(l),p=(4-o)/3,d=a+(o-p)*s;// Return rotated waypoints.
return{ax:Math.cos(t).toFixed(7),ay:Math.sin(t).toFixed(7),bx:(p*c+d*u).toFixed(7),by:(p*u-d*c).toFixed(7),cx:(p*c-d*u).toFixed(7),cy:(p*u+d*c).toFixed(7),dx:Math.cos(t+r).toFixed(7),dy:Math.sin(t+r).toFixed(7)}}/*
    * This function requires that:
    *
    *   0 <= start < TWO_PI
    *
    *   start <= stop < start + TWO_PI
    */},{key:"arc",value:function(t,r,n,o,a,l,c){var u=this.drawingContext,p=n/2,d=o/2,m=1e-5,f=0,h=[];for(t+=p,r+=d;l-a>=m;)f=Math.min(l-a,s.HALF_PI),h.push(this._acuteArcToBezier(a,f)),a+=f;// Fill curves
return this._doFill&&(u.beginPath(),h.forEach(function(n,o){0===o&&u.moveTo(t+n.ax*p,r+n.ay*d),/* eslint-disable indent */u.bezierCurveTo(t+n.bx*p,r+n.by*d,t+n.cx*p,r+n.cy*d,t+n.dx*p,r+n.dy*d);/* eslint-enable indent */}),(c===s.PIE||null==c)&&u.lineTo(t,r),u.closePath(),u.fill()),this._doStroke&&(u.beginPath(),h.forEach(function(n,o){0===o&&u.moveTo(t+n.ax*p,r+n.ay*d),/* eslint-disable indent */u.bezierCurveTo(t+n.bx*p,r+n.by*d,t+n.cx*p,r+n.cy*d,t+n.dx*p,r+n.dy*d);/* eslint-enable indent */}),c===s.PIE?(u.lineTo(t,r),u.closePath()):c===s.CHORD&&u.closePath(),u.stroke()),this}},{key:"ellipse",value:function(t){var r=this.drawingContext,n=this._doFill,o=this._doStroke,a=parseFloat(t[0]),s=parseFloat(t[1]),l=parseFloat(t[2]),c=parseFloat(t[3]);if(n&&!o){if(this._getFill()===_)return this}else if(!n&&o&&this._getStroke()===_)return this;var u=l/2*.5522847498,p=c/2*.5522847498,d=a+l,m=s+c,f=a+l/2,h=s+c/2;// y-middle
r.beginPath(),r.moveTo(a,h),r.bezierCurveTo(a,h-p,f-u,s,f,s),r.bezierCurveTo(f+u,s,d,h-p,d,h),r.bezierCurveTo(d,h+p,f+u,m,f,m),r.bezierCurveTo(f-u,m,a,h+p,a,h),n&&r.fill(),o&&r.stroke()}},{key:"line",value:function(t,r,n,o){var a=this.drawingContext;return this._doStroke&&(this._getStroke()===_||(a.beginPath(),a.moveTo(t,r),a.lineTo(n,o),a.stroke())),this}},{key:"point",value:function(t,r){var n=this.drawingContext;if(!this._doStroke||this._getStroke()===_)return this;var o=this._getStroke(),a=this._getFill();this._setFill(o),n.beginPath(),n.arc(t,r,n.lineWidth/2,0,s.TWO_PI,!1),n.fill(),this._setFill(a)}},{key:"quad",value:function(t,r,n,o,a,s,l,c){var u=this.drawingContext,p=this._doFill,d=this._doStroke;if(p&&!d){if(this._getFill()===_)return this}else if(!p&&d&&this._getStroke()===_)return this;return u.beginPath(),u.moveTo(t,r),u.lineTo(n,o),u.lineTo(a,s),u.lineTo(l,c),u.closePath(),p&&u.fill(),d&&u.stroke(),this}},{key:"rect",value:function(t){var r=t[0],n=t[1],o=t[2],a=t[3],s=t[4],l=t[5],c=t[6],u=t[7],p=this.drawingContext,d=this._doFill,m=this._doStroke;if(d&&!m){if(this._getFill()===_)return this}else if(!d&&m&&this._getStroke()===_)return this;if(p.beginPath(),void 0===s)p.rect(r,n,o,a);else{void 0===l&&(l=s),void 0===c&&(c=l),void 0===u&&(u=c);// corner rounding must always be positive
var f=Math.abs(o),h=Math.abs(a),y=f/2,g=h/2;f<2*s&&(s=y),h<2*s&&(s=g),f<2*l&&(l=y),h<2*l&&(l=g),f<2*c&&(c=y),h<2*c&&(c=g),f<2*u&&(u=y),h<2*u&&(u=g),// Draw shape
p.beginPath(),p.moveTo(r+s,n),p.arcTo(r+o,n,r+o,n+a,l),p.arcTo(r+o,n+a,r,n+a,c),p.arcTo(r,n+a,r,n,u),p.arcTo(r,n,r+o,n,s),p.closePath()}return this._doFill&&p.fill(),this._doStroke&&p.stroke(),this}},{key:"triangle",value:function(t){var r=this.drawingContext,n=this._doFill,o=this._doStroke,a=t[0],s=t[1],l=t[2],c=t[3],u=t[4],p=t[5];if(n&&!o){if(this._getFill()===_)return this}else if(!n&&o&&this._getStroke()===_)return this;r.beginPath(),r.moveTo(a,s),r.lineTo(l,c),r.lineTo(u,p),r.closePath(),n&&r.fill(),o&&r.stroke()}},{key:"endShape",value:function(t,r,n,o,a,l,c){if(0===r.length||!this._doStroke&&!this._doFill)return this;var u,p,d,m=t===s.CLOSE;m&&!l&&r.push(r[0]);var f=r.length;if(n&&(c===s.POLYGON||null===c)){if(f>3){var h=[],y=1-this._curveTightness;for(this.drawingContext.beginPath(),this.drawingContext.moveTo(r[1][0],r[1][1]),p=1;p+2<f;p++)u=r[p],h[0]=[u[0],u[1]],h[1]=[u[0]+(y*r[p+1][0]-y*r[p-1][0])/6,u[1]+(y*r[p+1][1]-y*r[p-1][1])/6],h[2]=[r[p+1][0]+(y*r[p][0]-y*r[p+2][0])/6,r[p+1][1]+(y*r[p][1]-y*r[p+2][1])/6],h[3]=[r[p+1][0],r[p+1][1]],this.drawingContext.bezierCurveTo(h[1][0],h[1][1],h[2][0],h[2][1],h[3][0],h[3][1]);m&&this.drawingContext.lineTo(r[p+1][0],r[p+1][1]),this._doFillStrokeClose(m)}}else if(o&&(c===s.POLYGON||null===c)){for(this.drawingContext.beginPath(),p=0;p<f;p++)r[p].isVert?r[p].moveTo?this.drawingContext.moveTo(r[p][0],r[p][1]):this.drawingContext.lineTo(r[p][0],r[p][1]):this.drawingContext.bezierCurveTo(r[p][0],r[p][1],r[p][2],r[p][3],r[p][4],r[p][5]);this._doFillStrokeClose(m)}else if(a&&(c===s.POLYGON||null===c)){for(this.drawingContext.beginPath(),p=0;p<f;p++)r[p].isVert?r[p].moveTo?this.drawingContext.moveTo(r[p][0],r[p][1]):this.drawingContext.lineTo(r[p][0],r[p][1]):this.drawingContext.quadraticCurveTo(r[p][0],r[p][1],r[p][2],r[p][3]);this._doFillStrokeClose(m)}else if(c===s.POINTS)for(p=0;p<f;p++)u=r[p],this._doStroke&&this._pInst.stroke(u[6]),this._pInst.point(u[0],u[1]);else if(c===s.LINES)for(p=0;p+1<f;p+=2)u=r[p],this._doStroke&&this._pInst.stroke(r[p+1][6]),this._pInst.line(u[0],u[1],r[p+1][0],r[p+1][1]);else if(c===s.TRIANGLES)for(p=0;p+2<f;p+=3)u=r[p],this.drawingContext.beginPath(),this.drawingContext.moveTo(u[0],u[1]),this.drawingContext.lineTo(r[p+1][0],r[p+1][1]),this.drawingContext.lineTo(r[p+2][0],r[p+2][1]),this.drawingContext.closePath(),this._doFill&&(this._pInst.fill(r[p+2][5]),this.drawingContext.fill()),this._doStroke&&(this._pInst.stroke(r[p+2][6]),this.drawingContext.stroke());else if(c===s.TRIANGLE_STRIP)for(p=0;p+1<f;p++)u=r[p],this.drawingContext.beginPath(),this.drawingContext.moveTo(r[p+1][0],r[p+1][1]),this.drawingContext.lineTo(u[0],u[1]),this._doStroke&&this._pInst.stroke(r[p+1][6]),this._doFill&&this._pInst.fill(r[p+1][5]),p+2<f&&(this.drawingContext.lineTo(r[p+2][0],r[p+2][1]),this._doStroke&&this._pInst.stroke(r[p+2][6]),this._doFill&&this._pInst.fill(r[p+2][5])),this._doFillStrokeClose(m);else if(c===s.TRIANGLE_FAN){if(f>2){for(// For performance reasons, try to batch as many of the
// fill and stroke calls as possible.
this.drawingContext.beginPath(),p=2;p<f;p++)u=r[p],this.drawingContext.moveTo(r[0][0],r[0][1]),this.drawingContext.lineTo(r[p-1][0],r[p-1][1]),this.drawingContext.lineTo(u[0],u[1]),this.drawingContext.lineTo(r[0][0],r[0][1]),p<f-1&&(this._doFill&&u[5]!==r[p+1][5]||this._doStroke&&u[6]!==r[p+1][6])&&(this._doFill&&(this._pInst.fill(u[5]),this.drawingContext.fill(),this._pInst.fill(r[p+1][5])),this._doStroke&&(this._pInst.stroke(u[6]),this.drawingContext.stroke(),this._pInst.stroke(r[p+1][6])),this.drawingContext.closePath(),this.drawingContext.beginPath());this._doFillStrokeClose(m)}}else if(c===s.QUADS)for(p=0;p+3<f;p+=4){for(u=r[p],this.drawingContext.beginPath(),this.drawingContext.moveTo(u[0],u[1]),d=1;d<4;d++)this.drawingContext.lineTo(r[p+d][0],r[p+d][1]);this.drawingContext.lineTo(u[0],u[1]),this._doFill&&this._pInst.fill(r[p+3][5]),this._doStroke&&this._pInst.stroke(r[p+3][6]),this._doFillStrokeClose(m)}else if(c===s.QUAD_STRIP){if(f>3)for(p=0;p+1<f;p+=2)u=r[p],this.drawingContext.beginPath(),p+3<f?(this.drawingContext.moveTo(r[p+2][0],r[p+2][1]),this.drawingContext.lineTo(u[0],u[1]),this.drawingContext.lineTo(r[p+1][0],r[p+1][1]),this.drawingContext.lineTo(r[p+3][0],r[p+3][1]),this._doFill&&this._pInst.fill(r[p+3][5]),this._doStroke&&this._pInst.stroke(r[p+3][6])):(this.drawingContext.moveTo(u[0],u[1]),this.drawingContext.lineTo(r[p+1][0],r[p+1][1])),this._doFillStrokeClose(m)}else{for(this.drawingContext.beginPath(),this.drawingContext.moveTo(r[0][0],r[0][1]),p=1;p<f;p++)(u=r[p]).isVert&&(u.moveTo?this.drawingContext.moveTo(u[0],u[1]):this.drawingContext.lineTo(u[0],u[1]));this._doFillStrokeClose(m)}return n=!1,o=!1,a=!1,l=!1,m&&r.pop(),this}//////////////////////////////////////////////
},{key:"strokeCap",value:function(t){return(t===s.ROUND||t===s.SQUARE||t===s.PROJECT)&&(this.drawingContext.lineCap=t),this}},{key:"strokeJoin",value:function(t){return(t===s.ROUND||t===s.BEVEL||t===s.MITER)&&(this.drawingContext.lineJoin=t),this}},{key:"strokeWeight",value:function(t){return void 0===t||0===t?this.drawingContext.lineWidth=1e-4:this.drawingContext.lineWidth=t,this}},{key:"_getFill",value:function(){return this._cachedFillStyle||(this._cachedFillStyle=this.drawingContext.fillStyle),this._cachedFillStyle}},{key:"_setFill",value:function(t){t!==this._cachedFillStyle&&(this.drawingContext.fillStyle=t,this._cachedFillStyle=t)}},{key:"_getStroke",value:function(){return this._cachedStrokeStyle||(this._cachedStrokeStyle=this.drawingContext.strokeStyle),this._cachedStrokeStyle}},{key:"_setStroke",value:function(t){t!==this._cachedStrokeStyle&&(this.drawingContext.strokeStyle=t,this._cachedStrokeStyle=t)}//////////////////////////////////////////////
},{key:"bezier",value:function(t,r,n,o,a,s,l,c){return this._pInst.beginShape(),this._pInst.vertex(t,r),this._pInst.bezierVertex(n,o,a,s,l,c),this._pInst.endShape(),this}},{key:"curve",value:function(t,r,n,o,a,s,l,c){return this._pInst.beginShape(),this._pInst.curveVertex(t,r),this._pInst.curveVertex(n,o),this._pInst.curveVertex(a,s),this._pInst.curveVertex(l,c),this._pInst.endShape(),this}//////////////////////////////////////////////
},{key:"_doFillStrokeClose",value:function(t){t&&this.drawingContext.closePath(),this._doFill&&this.drawingContext.fill(),this._doStroke&&this.drawingContext.stroke()}//////////////////////////////////////////////
},{key:"applyMatrix",value:function(t,r,n,o,a,s){this.drawingContext.transform(t,r,n,o,a,s)}},{key:"resetMatrix",value:function(){return this.drawingContext.setTransform(1,0,0,1,0,0),this.drawingContext.scale(this._pInst._pixelDensity,this._pInst._pixelDensity),this}},{key:"rotate",value:function(t){this.drawingContext.rotate(t)}},{key:"scale",value:function(t,r){return this.drawingContext.scale(t,r),this}},{key:"translate",value:function(t,r){return t instanceof a.default.Vector&&(r=t.y,t=t.x),this.drawingContext.translate(t,r),this}//////////////////////////////////////////////
},{key:"_renderText",value:function(t,r,n,o,a,l){if(!(o<l)&&!(o>=a))return t.push(),this._isOpenType()?this._textFont._renderPath(r,n,o,{renderer:this}):(this._doStroke&&this._strokeSet&&this.drawingContext.strokeText(r,n,o),this._doFill&&(this._fillSet||this._setFill(s._DEFAULT_TEXT_FILL),this.drawingContext.fillText(r,n,o))),t.pop(),t;// don't render lines beyond our minY/maxY bounds (see #5785)
}},{key:"textWidth",value:function(t){return this._isOpenType()?this._textFont._textWidth(t,this._textSize):this.drawingContext.measureText(t).width}},{key:"_applyTextProperties",value:function(){var t,r=this._pInst;return this._setProperty("_textAscent",null),this._setProperty("_textDescent",null),t=this._textFont,this._isOpenType()&&(t=this._textFont.font.familyName,this._setProperty("_textStyle",this._textFont.font.styleName)),this.drawingContext.font="".concat(this._textStyle||"normal"," ").concat(this._textSize||12,"px ").concat(t||"sans-serif"),this.drawingContext.textAlign=this._textAlign,this._textBaseline===s.CENTER?this.drawingContext.textBaseline=s._CTX_MIDDLE:this.drawingContext.textBaseline=this._textBaseline,r}//////////////////////////////////////////////
},{key:"push",value:function(){return this.drawingContext.save(),h(w(n.prototype),"push",this).call(this)}// a pop() operation is in progress
},{key:"pop",value:function(t){this.drawingContext.restore(),this._cachedFillStyle=this.drawingContext.fillStyle,this._cachedStrokeStyle=this.drawingContext.strokeStyle,h(w(n.prototype),"pop",this).call(this,t)}}]),n}(a.default.Renderer);// const alphaThreshold = 0.00125; // minimum visible
S.prototype.text=function(t,r,n,o,l){void 0!==o&&this.drawingContext.textBaseline===s.BASELINE&&(c=!0,this.drawingContext.textBaseline=s.TOP);var c,u=a.default.Renderer.prototype.text.apply(this,arguments);return c&&(this.drawingContext.textBaseline=s.BASELINE),u},a.default.Renderer2D=S;var E=a.default.Renderer2D;n.default=E},{"./constants":284,"./main":296,"./p5.Renderer":299,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.fill":172,"core-js/modules/es.array.for-each":174,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.join":179,"core-js/modules/es.array.slice":182,"core-js/modules/es.function.name":185,"core-js/modules/es.number.to-fixed":191,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.get-prototype-of":196,"core-js/modules/es.object.to-string":198,"core-js/modules/es.reflect.construct":200,"core-js/modules/es.reflect.get":201,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],301:[function(t,r,n){t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.assign"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.promise"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.assign"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.promise"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator");var o=a(t("./main"));function a(t){return t&&t.__esModule?t:{default:t}}o.default.prototype._promisePreloads=[],o.default.prototype.registerPromisePreload=function(t){o.default.prototype._promisePreloads.push(t)};var s=!1;o.default.prototype._setupPromisePreloads=function(){var t=!0,r=!1,n=void 0;try{for(var a,l=this._promisePreloads[Symbol.iterator]();!(t=(a=l.next()).done);t=!0){var c=a.value,u=this,p=c.method,d=c.addCallbacks,m=c.legacyPreloadSetup,f=c.target||this,h=f[p].bind(f);if(f===o.default.prototype){if(s)continue;u=null,h=f[p]}// Replace the original method with a wrapped version
f[p]=this._wrapPromisePreload(u,h,d),m&&(f[m.method]=this._legacyPreloadGenerator(u,m,f[p]))}}catch(t){r=!0,n=t}finally{try{t||null==l.return||l.return()}finally{if(r)throw n}}s=!0},o.default.prototype._wrapPromisePreload=function(t,r,n){var o=function(){var t=this;// Uses the current preload counting mechanism for now.
this._incrementPreload();for(var o=null,a=null,s=arguments.length,l=Array(s),c=0;c<s;c++)l[c]=arguments[c];if(n)// the end and putting them in fns
for(var u=l.length-1;u>=0&&!a&&"function"==typeof l[u];u--)a=o,o=l.pop();// Call the underlying function and pass it to Promise.resolve,
// so that even if it didn't return a promise we can still
// act on the result as if it did.
var p=Promise.resolve(r.apply(this,l));// Add the optional callbacks
return o&&p.then(o),a&&p.catch(a),// Decrement the preload counter only if the promise resolved
p.then(function(){return t._decrementPreload()}),p};return t&&(o=o.bind(t)),o};var l=function(){return{}};o.default.prototype._legacyPreloadGenerator=function(t,r,n){// Create a function that will generate an object before the preload is
// launched. For example, if the object should be an array or be an instance
// of a specific class.
var o=r.createBaseObject||l,a=function(){var t=this;// Our then clause needs to run before setup, so we also increment the preload counter
this._incrementPreload();for(var r=arguments.length,a=Array(r),s=0;s<r;s++)a[s]=arguments[s];var l=o.apply(this,a);// Run the original wrapper
return n.apply(this,a).then(function(r){// Copy each key from the resolved value into returnValue
Object.assign(l,r),t._decrementPreload()}),l};return t&&(a=a.bind(t)),a}},{"./main":296,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.assign":192,"core-js/modules/es.object.to-string":198,"core-js/modules/es.promise":199,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/web.dom-collections.iterator":254}],302:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=u(t("./main")),s=c(t("./constants"));function l(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return l=function(){return t},t}function c(t){if(t&&t.__esModule)return t;if(null===t||"object"!==p(t)&&"function"!=typeof t)return{default:t};var r=l();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var s=o?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}function u(t){return t&&t.__esModule?t:{default:t}}function p(t){return(p="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("./p5.Graphics"),t("./p5.Renderer2D"),t("../webgl/p5.RendererGL");var d="defaultCanvas0",m="p5Canvas";// this gets set again in createCanvas
/**
 * Creates a canvas element in the document and sets its dimensions
 * in pixels. This method should be called only once at the start of <a href="#/p5/setup">setup()</a>.
 * Calling <a href="#/p5/createCanvas">createCanvas</a> more than once in a
 * sketch will result in very unpredictable behavior. If you want more than
 * one drawing canvas you could use <a href="#/p5/createGraphics">createGraphics()</a>
 * (hidden by default but it can be shown).
 *
 * Important note: in 2D mode (i.e. when `p5.Renderer` is not set) the origin (0,0)
 * is positioned at the top left of the screen. In 3D mode (i.e. when `p5.Renderer`
 * is set to `WEBGL`), the origin is positioned at the center of the canvas.
 * See [this issue](https://github.com/processing/p5.js/issues/1545) for more information.
 *
 * A WebGL canvas will use a WebGL2 context if it is supported by the browser.
 * Check the <a href="#/p5/webglVersion">webglVersion</a> property to check what
 * version is being used, or call <a href="#/p5/setAttributes">setAttributes({ version: 1 })</a>
 * to create a WebGL1 context.
 *
 * The system variables width and height are set by the parameters passed to this
 * function. If <a href="#/p5/createCanvas">createCanvas()</a> is not used, the
 * window will be given a default size of 100×100 pixels.
 *
 * Optionally, an existing canvas can be passed using a selector, ie. `document.getElementById('')`.
 * If specified, avoid using `setAttributes()` afterwards, as this will remove and recreate the existing canvas.
 *
 * For more ways to position the canvas, see the
 * <a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>
 * positioning the canvas</a> wiki page.
 *
 * @method createCanvas
 * @param  {Number} w width of the canvas
 * @param  {Number} h height of the canvas
 * @param  {Constant} [renderer] either P2D or WEBGL
 * @param  {Object} [canvas] existing html canvas element
 * @return {p5.Renderer} pointer to p5.Renderer holding canvas
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 50);
 *   background(153);
 *   line(0, 0, width, height);
 * }
 * </code>
 * </div>
 *
 * @alt
 * Black line extending from top-left of canvas to bottom right.
 *//**
 * @method createCanvas
 * @param  {Number} w
 * @param  {Number} h
 * @param  {Object} [canvas]
 * @return {p5.Renderer} pointer to p5.Renderer holding canvas
 */a.default.prototype.createCanvas=function(t,r,n,o){if(a.default._validateParameters("createCanvas",arguments),arguments[2]instanceof HTMLCanvasElement?(n=s.P2D,o=arguments[2]):l=n||s.P2D,o)(c=document.getElementById(d))&&c.parentNode.removeChild(c),c=o,this._defaultGraphicsCreated=!1;else{if(l===s.WEBGL){if(c=document.getElementById(d)){//if defaultCanvas already exists
c.parentNode.removeChild(c);//replace the existing defaultCanvas
var l,c,u=this._renderer;this._elements=this._elements.filter(function(t){return t!==u})}(c=document.createElement("canvas")).id=d,c.classList.add(m)}else if(this._defaultGraphicsCreated)c=this.canvas;else{c=o||document.createElement("canvas");for(var p=0;document.getElementById("defaultCanvas".concat(p));)p++;d="defaultCanvas".concat(p),c.id=d,c.classList.add(m)}if(this._setupDone||(c.dataset.hidden=!0,c.style.visibility="hidden"),this._userNode)this._userNode.appendChild(c);else{//create main element
if(0===document.getElementsByTagName("main").length){var f=document.createElement("main");document.body.appendChild(f)}//append canvas to main
document.getElementsByTagName("main")[0].appendChild(c)}}// Init our graphics renderer
return l===s.WEBGL?(this._setProperty("_renderer",new a.default.RendererGL(c,this,!0)),this._elements.push(this._renderer)):this._defaultGraphicsCreated||(this._setProperty("_renderer",new a.default.Renderer2D(c,this,!0)),this._defaultGraphicsCreated=!0,this._elements.push(this._renderer)),this._renderer.resize(t,r),this._renderer._applyDefaults(),this._renderer},/**
 * Resizes the canvas to given width and height. The canvas will be cleared
 * and draw will be called immediately, allowing the sketch to re-render itself
 * in the resized canvas.
 * @method resizeCanvas
 * @param  {Number} w width of the canvas
 * @param  {Number} h height of the canvas
 * @param  {Boolean} [noRedraw] don't redraw the canvas immediately
 * @example
 * <div class="norender"><code>
 * function setup() {
 *   createCanvas(windowWidth, windowHeight);
 * }
 *
 * function draw() {
 *   background(0, 100, 200);
 * }
 *
 * function windowResized() {
 *   resizeCanvas(windowWidth, windowHeight);
 * }
 * </code></div>
 *
 * @alt
 * No image displayed.
 */a.default.prototype.resizeCanvas=function(t,r,n){if(a.default._validateParameters("resizeCanvas",arguments),this._renderer){// save canvas properties
var o={};for(var s in this.drawingContext){var l=this.drawingContext[s];"object"!==p(l)&&"function"!=typeof l&&(o[s]=l)}for(var c in this.width=t,this.height=r,// that framebuffers updated from the resize read the correct size
this._renderer.resize(t,r),o)try{this.drawingContext[c]=o[c]}catch(t){}n||this.redraw()}//accessible Outputs
this._addAccsOutput()&&this._updateAccsOutput()},/**
 * Removes the default canvas for a p5 sketch that doesn't require a canvas
 * @method noCanvas
 * @example
 * <div>
 * <code>
 * function setup() {
 *   noCanvas();
 * }
 * </code>
 * </div>
 *
 * @alt
 * no image displayed
 */a.default.prototype.noCanvas=function(){this.canvas&&this.canvas.parentNode.removeChild(this.canvas)},/**
 * Creates and returns a new p5.Graphics object. Use this class if you need
 * to draw into an off-screen graphics buffer. The two parameters define the
 * width and height in pixels.
 *
 * A WebGL p5.Graphics will use a WebGL2 context if it is supported by the browser.
 * Check the <a href="#/p5/webglVersion">pg.webglVersion</a> property of the renderer
 * to check what version is being used, or call <a href="#/p5/setAttributes">pg.setAttributes({ version: 1 })</a>
 * to create a WebGL1 context.
 *
 * Optionally, an existing canvas can be passed using a selector, ie. document.getElementById('').
 * By default this canvas will be hidden (offscreen buffer), to make visible, set element's style to display:block;
 *
 * @method createGraphics
 * @param  {Number} w width of the offscreen graphics buffer
 * @param  {Number} h height of the offscreen graphics buffer
 * @param  {Constant} [renderer] either P2D or WEBGL
 *                               undefined defaults to p2d
 * @param  {Object} [canvas] existing html canvas element
 * @return {p5.Graphics} offscreen graphics buffer
 * @example
 * <div>
 * <code>
 * let pg;
 * function setup() {
 *   createCanvas(100, 100);
 *   pg = createGraphics(100, 100);
 * }
 *
 * function draw() {
 *   background(200);
 *   pg.background(100);
 *   pg.noStroke();
 *   pg.ellipse(pg.width / 2, pg.height / 2, 50, 50);
 *   image(pg, 50, 50);
 *   image(pg, 0, 0, 50, 50);
 * }
 * </code>
 * </div>
 *
 * @alt
 * 4 grey squares alternating light and dark grey. White quarter circle mid-left.
 *//**
 * @method createGraphics
 * @param  {Number} w
 * @param  {Number} h
 * @param  {Object} [canvas]
 * @return {p5.Graphics} offscreen graphics buffer
 */a.default.prototype.createGraphics=function(t,r,n,o){return arguments[2]instanceof HTMLCanvasElement&&(n=s.P2D,o=arguments[2]),a.default._validateParameters("createGraphics",arguments),new a.default.Graphics(t,r,n,this,o)},/**
 * Creates and returns a new <a href="#/p5.Framebuffer">p5.Framebuffer</a>, a
 * high-performance WebGL object that you can draw to and then use as a texture.
 *
 * Options can include:
 * - `format`: The data format of the texture, either `UNSIGNED_BYTE`, `FLOAT`, or `HALF_FLOAT`. The default is `UNSIGNED_BYTE`.
 * - `channels`: What color channels to store, either `RGB` or `RGBA`. The default is to match the channels in the main canvas (with alpha unless disabled with `setAttributes`.)
 * - `depth`: A boolean, whether or not to include a depth buffer. Defaults to true.
 * - `depthFormat`: The data format for depth information, either `UNSIGNED_INT` or `FLOAT`. The default is `FLOAT` if available, or `UNSIGNED_INT` otherwise.
 * - `antialias`: Boolean or Number, whether or not to render with antialiased edges, and if so, optionally the number of samples to use. Defaults to whether or not the main canvas is antialiased, using a default of 2 samples if so. Antialiasing is only supported when WebGL 2 is available.
 * - `width`: The width of the texture. Defaults to matching the main canvas.
 * - `height`: The height of the texture. Defaults to matching the main canvas.
 * - `density`: The pixel density of the texture. Defaults to the pixel density of the main canvas.
 * - `textureFiltering`: Either `LINEAR` (nearby pixels will be interpolated when reading values from the color texture) or `NEAREST` (no interpolation.) Generally, use `LINEAR` when using the texture as an image, and use `NEAREST` if reading the texture as data. Defaults to `LINEAR`.
 *
 * If `width`, `height`, or `density` are specified, then the framebuffer will
 * keep that size until manually changed. Otherwise, it will be autosized, and
 * it will update to match the main canvas's size and density when the main
 * canvas changes.
 *
 * @method createFramebuffer
 * @param {Object} [options] An optional object with configuration
 *
 * @example
 * <div>
 * <code>
 * let prev, next, cam;
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   prev = createFramebuffer({ format: FLOAT });
 *   next = createFramebuffer({ format: FLOAT });
 *   cam = createCamera();
 *   noStroke();
 * }
 *
 * function draw() {
 *   // Swap prev and next so that we can use the previous
 *   // frame as a texture when drawing the current frame
 *   [prev, next] = [next, prev];
 *
 *   // Draw to the framebuffer
 *   next.begin();
 *   background(255);
 *
 *   push();
 *   // Draw the previous texture farther away, but scaled
 *   // up to fill the screen, plus a bit extra scale so it grows
 *   translate(0, 0, -200);
 *   scale(1.001 * (200 + cam.eyeZ) / cam.eyeZ);
 *   tint(255, 253);
 *   image(prev, -width/2, -height/2);
 *   pop();
 *
 *   push();
 *   normalMaterial();
 *   translate(25*sin(frameCount * 0.014), 25*sin(frameCount * 0.02), 0);
 *   rotateX(frameCount * 0.01);
 *   rotateY(frameCount * 0.01);
 *   box(12);
 *   pop();
 *   next.end();
 *
 *   image(next, -width/2, -height/2);
 * }
 * </code>
 * </div>
 *
 * @alt
 * A red, green, and blue box (using normalMaterial) moves and rotates around
 * the canvas, leaving a trail behind it that slowly grows and fades away.
 */a.default.prototype.createFramebuffer=function(t){return new a.default.Framebuffer(this,t)},/**
 * Blends the pixels in the display window according to the defined mode.
 * There is a choice of the following modes to blend the source pixels (A)
 * with the ones of pixels already in the display window (B):
 * <ul>
 * <li><code>BLEND</code> - linear interpolation of colours: C =
 * A*factor + B. <b>This is the default blending mode.</b></li>
 * <li><code>ADD</code> - sum of A and B</li>
 * <li><code>DARKEST</code> - only the darkest colour succeeds: C =
 * min(A*factor, B).</li>
 * <li><code>LIGHTEST</code> - only the lightest colour succeeds: C =
 * max(A*factor, B).</li>
 * <li><code>DIFFERENCE</code> - subtract colors from underlying image.
 * <em>(2D)</em></li>
 * <li><code>EXCLUSION</code> - similar to <code>DIFFERENCE</code>, but less
 * extreme.</li>
 * <li><code>MULTIPLY</code> - multiply the colors, result will always be
 * darker.</li>
 * <li><code>SCREEN</code> - opposite multiply, uses inverse values of the
 * colors.</li>
 * <li><code>REPLACE</code> - the pixels entirely replace the others and
 * don't utilize alpha (transparency) values.</li>
 * <li><code>REMOVE</code> - removes pixels from B with the alpha strength of A.</li>
 * <li><code>OVERLAY</code> - mix of <code>MULTIPLY</code> and <code>SCREEN
 * </code>. Multiplies dark values, and screens light values. <em>(2D)</em></li>
 * <li><code>HARD_LIGHT</code> - <code>SCREEN</code> when greater than 50%
 * gray, <code>MULTIPLY</code> when lower. <em>(2D)</em></li>
 * <li><code>SOFT_LIGHT</code> - mix of <code>DARKEST</code> and
 * <code>LIGHTEST</code>. Works like <code>OVERLAY</code>, but not as harsh. <em>(2D)</em>
 * </li>
 * <li><code>DODGE</code> - lightens light tones and increases contrast,
 * ignores darks. <em>(2D)</em></li>
 * <li><code>BURN</code> - darker areas are applied, increasing contrast,
 * ignores lights. <em>(2D)</em></li>
 * <li><code>SUBTRACT</code> - remainder of A and B <em>(3D)</em></li>
 * </ul>
 *
 * <em>(2D)</em> indicates that this blend mode <b>only</b> works in the 2D renderer.<br>
 * <em>(3D)</em> indicates that this blend mode <b>only</b> works in the WEBGL renderer.
 *
 * @method blendMode
 * @param  {Constant} mode blend mode to set for canvas.
 *                either BLEND, DARKEST, LIGHTEST, DIFFERENCE, MULTIPLY,
 *                EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,
 *                SOFT_LIGHT, DODGE, BURN, ADD, REMOVE or SUBTRACT
 * @example
 * <div>
 * <code>
 * blendMode(LIGHTEST);
 * strokeWeight(30);
 * stroke(80, 150, 255);
 * line(25, 25, 75, 75);
 * stroke(255, 50, 50);
 * line(75, 25, 25, 75);
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * blendMode(MULTIPLY);
 * strokeWeight(30);
 * stroke(80, 150, 255);
 * line(25, 25, 75, 75);
 * stroke(255, 50, 50);
 * line(75, 25, 25, 75);
 * </code>
 * </div>
 *
 * @alt
 * translucent image thick red & blue diagonal rounded lines intersecting center
 * Thick red & blue diagonal rounded lines intersecting center. dark at overlap
 */a.default.prototype.blendMode=function(t){a.default._validateParameters("blendMode",arguments),t===s.NORMAL&&(// Warning added 3/26/19, can be deleted in future (1.0 release?)
console.warn("NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead."),t=s.BLEND),this._renderer.blendMode(t)};/**
 * The p5.js API provides a lot of functionality for creating graphics, but there is
 * some native HTML5 Canvas functionality that is not exposed by p5. You can still call
 * it directly using the variable `drawingContext`, as in the example shown. This is
 * the equivalent of calling `canvas.getContext('2d');` or `canvas.getContext('webgl');`.
 * See this
 * <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D">
 * reference for the native canvas API</a> for possible drawing functions you can call.
 *
 * @property drawingContext
 * @example
 * <div>
 * <code>
 * function setup() {
 *   drawingContext.shadowOffsetX = 5;
 *   drawingContext.shadowOffsetY = -5;
 *   drawingContext.shadowBlur = 10;
 *   drawingContext.shadowColor = 'black';
 *   background(200);
 *   ellipse(width / 2, height / 2, 50, 50);
 * }
 * </code>
 * </div>
 *
 * @alt
 * white ellipse with shadow blur effect around edges
 */var f=a.default;n.default=f},{"../webgl/p5.RendererGL":351,"./constants":284,"./main":296,"./p5.Graphics":298,"./p5.Renderer2D":300,"core-js/modules/es.array.filter":173,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],303:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=d(t("../main")),l=p(t("../constants")),c=d(t("../helpers"));function u(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return u=function(){return t},t}function p(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=u();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function d(t){return t&&t.__esModule?t:{default:t}}function m(t){return y(t)||h(t)||f()}function f(){throw TypeError("Invalid attempt to spread non-iterable instance")}function h(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function y(t){if(Array.isArray(t)){for(var r=0,n=Array(t.length);r<t.length;r++)n[r]=t[r];return n}}/**
 * This function does 3 things:
 *
 *   1. Bounds the desired start/stop angles for an arc (in radians) so that:
 *
 *          0 <= start < TWO_PI ;    start <= stop < start + TWO_PI
 *
 *      This means that the arc rendering functions don't have to be concerned
 *      with what happens if stop is smaller than start, or if the arc 'goes
 *      round more than once', etc.: they can just start at start and increase
 *      until stop and the correct arc will be drawn.
 *
 *   2. Optionally adjusts the angles within each quadrant to counter the naive
 *      scaling of the underlying ellipse up from the unit circle.  Without
 *      this, the angles become arbitrary when width != height: 45 degrees
 *      might be drawn at 5 degrees on a 'wide' ellipse, or at 85 degrees on
 *      a 'tall' ellipse.
 *
 *   3. Flags up when start and stop correspond to the same place on the
 *      underlying ellipse.  This is useful if you want to do something special
 *      there (like rendering a whole ellipse instead).
 */t("../friendly_errors/fes_core"),t("../friendly_errors/file_errors"),t("../friendly_errors/validate_params"),s.default.prototype._normalizeArcAngles=function(t,r,n,o,a){var s,c=1e-5;// Smallest visible angle on displays up to 4K.
return(// adjustments made in the steps that precede it.
// Constrain both start and stop to [0,TWO_PI).
t-=l.TWO_PI*Math.floor(t/l.TWO_PI),r-=l.TWO_PI*Math.floor(r/l.TWO_PI),//
// Technically this separation only matches what gets drawn if
// correctForScaling is enabled.  We could add a more complicated calculation
// for when the scaling is uncorrected (in which case the drawn points could
// end up pushed together or pulled apart quite dramatically relative to what
// was requested), but it would make things more opaque for little practical
// benefit.
//
// (If you do disable correctForScaling and find that correspondToSamePoint
// is set too aggressively, the easiest thing to do is probably to just make
// epsilon smaller...)
s=Math.min(Math.abs(t-r),l.TWO_PI-Math.abs(t-r)),a&&(t=t<=l.HALF_PI?Math.atan(n/o*Math.tan(t)):t>l.HALF_PI&&t<=3*l.HALF_PI?Math.atan(n/o*Math.tan(t))+l.PI:Math.atan(n/o*Math.tan(t))+l.TWO_PI,r=r<=l.HALF_PI?Math.atan(n/o*Math.tan(r)):r>l.HALF_PI&&r<=3*l.HALF_PI?Math.atan(n/o*Math.tan(r))+l.PI:Math.atan(n/o*Math.tan(r))+l.TWO_PI),t>r&&(r+=l.TWO_PI),{start:t,stop:r,correspondToSamePoint:s<c})},/**
 * Draws an arc to the canvas. Arcs are drawn along the outer edge of an ellipse
 * (oval) defined by the `x`, `y`, `w`, and `h` parameters. Use the `start` and `stop`
 * parameters to specify the angles (in radians) at which to draw the arc. Arcs are
 * always drawn clockwise from `start` to `stop`. The origin of the arc's ellipse may
 * be changed with the <a href="#/p5/ellipseMode">ellipseMode()</a> function.
 *
 * The optional `mode` parameter determines the arc's fill style. The fill modes are
 * a semi-circle (`OPEN`), a closed semi-circle (`CHORD`), or a closed pie segment (`PIE`).
 *
 * @method arc
 * @param  {Number} x      x-coordinate of the arc's ellipse.
 * @param  {Number} y      y-coordinate of the arc's ellipse.
 * @param  {Number} w      width of the arc's ellipse by default.
 * @param  {Number} h      height of the arc's ellipse by default.
 * @param  {Number} start  angle to start the arc, specified in radians.
 * @param  {Number} stop   angle to stop the arc, specified in radians.
 * @param  {Constant} [mode] optional parameter to determine the way of drawing
 *                         the arc. either CHORD, PIE, or OPEN.
 * @param  {Integer} [detail] optional parameter for WebGL mode only. This is to
 *                         specify the number of vertices that makes up the
 *                         perimeter of the arc. Default value is 25. Won't
 *                         draw a stroke for a detail of more than 50.
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * arc(50, 55, 50, 50, 0, HALF_PI);
 * noFill();
 * arc(50, 55, 60, 60, HALF_PI, PI);
 * arc(50, 55, 70, 70, PI, PI + QUARTER_PI);
 * arc(50, 55, 80, 80, PI + QUARTER_PI, TWO_PI);
 * describe(
 *   'A shattered outline of an ellipse with a quarter of a white circle at the bottom-right.'
 * );
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * arc(50, 50, 80, 80, 0, PI + QUARTER_PI);
 * describe('A white ellipse with the top-right third missing. The bottom is outlined in black.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * arc(50, 50, 80, 80, 0, PI + QUARTER_PI, OPEN);
 * describe(
 *   'A white ellipse missing a section from the top-right. The bottom is outlined in black.'
 * );
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * arc(50, 50, 80, 80, 0, PI + QUARTER_PI, CHORD);
 * describe('A white ellipse with a black outline missing a section from the top-right.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * arc(50, 50, 80, 80, 0, PI + QUARTER_PI, PIE);
 * describe('A white ellipse with a black outline. The top-right third is missing.');
 * </code>
 * </div>
 *
 */s.default.prototype.arc=function(t,r,n,o,a,l,u,p){// visible, exit immediately
if(s.default._validateParameters("arc",arguments),!this._renderer._doStroke&&!this._renderer._doFill||a===l)return this;a=this._toRadians(a),l=this._toRadians(l),n=Math.abs(n),o=Math.abs(o);var d=c.default.modeAdjust(t,r,n,o,this._renderer._ellipseMode),m=this._normalizeArcAngles(a,l,d.w,d.h,!0);return m.correspondToSamePoint?// draw an ellipse instead.  This is preferable to faking an ellipse (by
// making stop ever-so-slightly less than start + TWO_PI) because the ends
// join up to each other rather than at a vertex at the centre (leaving
// an unwanted spike in the stroke/fill).
this._renderer.ellipse([d.x,d.y,d.w,d.h,p]):(this._renderer.arc(d.x,d.y,d.w,d.h,m.start,m.stop,u,p),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("arc",[d.x,d.y,d.w,d.h,m.start,m.stop,u])),this},/**
 * Draws an ellipse (oval) to the canvas. An ellipse with equal width and height
 * is a circle. By default, the first two parameters set the location of the
 * center of the ellipse. The third and fourth parameters set the shape's width
 * and height, respectively. The origin may be changed with the
 * <a href="#/p5/ellipseMode">ellipseMode()</a> function.
 *
 * If no height is specified, the value of width is used for both the width and
 * height. If a negative height or width is specified, the absolute value is
 * taken.
 *
 * @method ellipse
 * @param  {Number} x x-coordinate of the center of the ellipse.
 * @param  {Number} y y-coordinate of the center of the ellipse.
 * @param  {Number} w width of the ellipse.
 * @param  {Number} [h] height of the ellipse.
 * @chainable
 * @example
 * <div>
 * <code>
 * ellipse(56, 46, 55, 55);
 * describe('A white ellipse with black outline in middle of a gray canvas.');
 * </code>
 * </div>
 *
 *//**
 * @method ellipse
 * @param  {Number} x
 * @param  {Number} y
 * @param  {Number} w
 * @param  {Number} h
 * @param  {Integer} [detail] optional parameter for WebGL mode only. This is to
 *                         specify the number of vertices that makes up the
 *                         perimeter of the ellipse. Default value is 25. Won't
 *                         draw a stroke for a detail of more than 50.
 */s.default.prototype.ellipse=function(t,r,n,o,a){return s.default._validateParameters("ellipse",arguments),this._renderEllipse.apply(this,arguments)},/**
 * Draws a circle to the canvas. A circle is a round shape. Every point on the
 * edge of a circle is the same distance from its center. By default, the first
 * two parameters set the location of the center of the circle. The third
 * parameter sets the shape's width and height (diameter). The origin may be
 * changed with the <a href="#/p5/ellipseMode">ellipseMode()</a> function.
 *
 * @method circle
 * @param  {Number} x  x-coordinate of the center of the circle.
 * @param  {Number} y  y-coordinate of the center of the circle.
 * @param  {Number} d  diameter of the circle.
 * @chainable
 * @example
 * <div>
 * <code>
 * circle(30, 30, 20);
 * describe('A white circle with black outline in the middle of a gray canvas.');
 * </code>
 * </div>
 *
 */s.default.prototype.circle=function(){s.default._validateParameters("circle",arguments);var t=Array.prototype.slice.call(arguments,0,2);return t.push(arguments[2]),t.push(arguments[2]),this._renderEllipse.apply(this,m(t))},s.default.prototype._renderEllipse=function(t,r,n,o,a){// if the current stroke and fill settings wouldn't result in something
// visible, exit immediately
if(!this._renderer._doStroke&&!this._renderer._doFill)return this;n<0&&(n=Math.abs(n)),void 0===o?o=n:o<0&&(o=Math.abs(o));var s=c.default.modeAdjust(t,r,n,o,this._renderer._ellipseMode);return this._renderer.ellipse([s.x,s.y,s.w,s.h,a]),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("ellipse",[s.x,s.y,s.w,s.h]),this},/**
 * Draws a line, a straight path between two points. Its default width is one pixel.
 * The version of `line()` with four parameters draws the line in 2D. To color a line,
 * use the <a href="#/p5/stroke">stroke()</a> function. To change its width, use the
 * <a href="#/p5/strokeWeight">strokeWeight()</a> function. A line
 * can't be filled, so the <a href="#/p5/fill">fill()</a> function won't affect
 * the color of a  line.
 *
 * The version of `line()` with six parameters allows the line to be drawn in 3D
 * space. Doing so requires adding the `WEBGL` argument to
 * <a href="#/p5/createCanvas">createCanvas()</a>.
 *
 * @method line
 * @param  {Number} x1 the x-coordinate of the first point.
 * @param  {Number} y1 the y-coordinate of the first point.
 * @param  {Number} x2 the x-coordinate of the second point.
 * @param  {Number} y2 the y-coordinate of the second point.
 * @chainable
 * @example
 * <div>
 * <code>
 * line(30, 20, 85, 75);
 * describe(
 *   'A black line on a gray canvas running from top-center to bottom-right.'
 * );
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * line(30, 20, 85, 20);
 * stroke(126);
 * line(85, 20, 85, 75);
 * stroke(255);
 * line(85, 75, 30, 75);
 * describe(
 *   'Three lines drawn in grayscale on a gray canvas. They form the top, right, and bottom sides of a square.'
 * );
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('A black line drawn on a gray canvas.');
 * }
 *
 * function draw() {
 *   background(220);
 *   line(0, 0, 0, 10, 10, 0);
 * }
 * </code>
 * </div>
 *
 *//**
 * @method line
 * @param  {Number} x1
 * @param  {Number} y1
 * @param  {Number} z1 the z-coordinate of the first point.
 * @param  {Number} x2
 * @param  {Number} y2
 * @param  {Number} z2 the z-coordinate of the second point.
 * @chainable
 */s.default.prototype.line=function(){for(var t,r=arguments.length,n=Array(r),o=0;o<r;o++)n[o]=arguments[o];return s.default._validateParameters("line",n),this._renderer._doStroke&&(t=this._renderer).line.apply(t,n),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("line",n),this},/**
 * Draws a point, a single coordinate in space. Its default size is one pixel. The first two
 * parameters are the point's x- and y-coordinates, respectively. To color a point, use
 * the <a href="#/p5/stroke">stroke()</a> function. To change its size, use the
 * <a href="#/p5/strokeWeight">strokeWeight()</a> function.
 *
 * The version of `point()` with three parameters allows the point to be drawn in 3D
 * space. Doing so requires adding the `WEBGL` argument to
 * <a href="#/p5/createCanvas">createCanvas()</a>.
 *
 * The version of point() with one parameter allows the point's location to be set with
 * a <a href="#/p5/p5.Vector">p5.Vector</a> object.
 *
 * @method point
 * @param  {Number} x the x-coordinate.
 * @param  {Number} y the y-coordinate.
 * @param  {Number} [z] the z-coordinate (for WebGL mode).
 * @chainable
 * @example
 * <div>
 * <code>
 * point(30, 20);
 * point(85, 20);
 * point(85, 75);
 * point(30, 75);
 * describe(
 *   'Four small, black points drawn on a gray canvas. The points form the corners of a square.'
 * );
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * point(30, 20);
 * point(85, 20);
 * stroke('purple');
 * strokeWeight(10);
 * point(85, 75);
 * point(30, 75);
 * describe(
 *   'Four points drawn on a gray canvas. Two are black and two are purple. The points form the corners of a square.'
 * );
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let a = createVector(10, 10);
 * point(a);
 * let b = createVector(10, 20);
 * point(b);
 * let c = createVector(20, 10);
 * point(c);
 * let d = createVector(20, 20);
 * point(d);
 * describe(
 *   'Four small, black points drawn on a gray canvas. The points form the corners of a square.'
 * );
 * </code>
 * </div>
 *
 *//**
 * @method point
 * @param {p5.Vector} coordinateVector the coordinate vector.
 * @chainable
 */s.default.prototype.point=function(){for(var t,r=arguments.length,n=Array(r),o=0;o<r;o++)n[o]=arguments[o];return s.default._validateParameters("point",n),this._renderer._doStroke&&(1===n.length&&n[0]instanceof s.default.Vector?this._renderer.point.call(this._renderer,n[0].x,n[0].y,n[0].z):((t=this._renderer).point.apply(t,n),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("point",n))),this},/**
 * Draws a quad to the canvas. A quad is a quadrilateral, a four-sided
 * polygon. Some examples of quads include rectangles, squares, rhombuses,
 * and trapezoids. The first pair of parameters (`x1`,`y1`) sets the quad's
 * first point. The following pairs of parameters set the coordinates for
 * its next three points. Parameters should proceed clockwise or
 * counter-clockwise around the shape.
 *
 * The version of `quad()` with twelve parameters allows the quad to be drawn
 * in 3D space. Doing so requires adding the `WEBGL` argument to
 * <a href="#/p5/createCanvas">createCanvas()</a>.
 *
 * @method quad
 * @param {Number} x1 the x-coordinate of the first point.
 * @param {Number} y1 the y-coordinate of the first point.
 * @param {Number} x2 the x-coordinate of the second point.
 * @param {Number} y2 the y-coordinate of the second point.
 * @param {Number} x3 the x-coordinate of the third point.
 * @param {Number} y3 the y-coordinate of the third point.
 * @param {Number} x4 the x-coordinate of the fourth point.
 * @param {Number} y4 the y-coordinate of the fourth point.
 * @param {Integer} [detailX] number of segments in the x-direction.
 * @param {Integer} [detailY] number of segments in the y-direction.
 * @chainable
 * @example
 * <div>
 * <code>
 * quad(20, 20, 80, 20, 80, 80, 20, 80);
 * describe('A white square with a black outline drawn on a gray canvas.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * quad(20, 30, 80, 30, 80, 70, 20, 70);
 * describe('A white rectangle with a black outline drawn on a gray canvas.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * quad(50, 62, 86, 50, 50, 38, 14, 50);
 * describe('A white rhombus with a black outline drawn on a gray canvas.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * quad(20, 50, 80, 30, 80, 70, 20, 70);
 * describe('A white trapezoid with a black outline drawn on a gray canvas.');
 * </code>
 * </div>
 *//**
 * @method quad
 * @param {Number} x1
 * @param {Number} y1
 * @param {Number} z1 the z-coordinate of the first point.
 * @param {Number} x2
 * @param {Number} y2
 * @param {Number} z2 the z-coordinate of the second point.
 * @param {Number} x3
 * @param {Number} y3
 * @param {Number} z3 the z-coordinate of the third point.
 * @param {Number} x4
 * @param {Number} y4
 * @param {Number} z4 the z-coordinate of the fourth point.
 * @param {Integer} [detailX]
 * @param {Integer} [detailY]
 * @chainable
 */s.default.prototype.quad=function(){for(var t,r=arguments.length,n=Array(r),o=0;o<r;o++)n[o]=arguments[o];return s.default._validateParameters("quad",n),(this._renderer._doStroke||this._renderer._doFill)&&(this._renderer.isP3D&&n.length<12?this._renderer.quad.call(this._renderer,n[0],n[1],0,n[2],n[3],0,n[4],n[5],0,n[6],n[7],0,n[8],n[9]):((t=this._renderer).quad.apply(t,n),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("quadrilateral",n))),this},/**
 * Draws a rectangle to the canvas. A rectangle is a four-sided polygon with
 * every angle at ninety degrees. By default, the first two parameters set the
 * location of the rectangle's upper-left corner. The third and fourth set the
 * shape's the width and height, respectively. The way these parameters are
 * interpreted may be changed with the <a href="#/p5/rectMode">rectMode()</a>
 * function.
 *
 * The version of `rect()` with five parameters creates a rounded rectangle. The
 * fifth parameter is used as the radius value for all four corners.
 *
 * The version of `rect()` with eight parameters also creates a rounded rectangle.
 * When using eight parameters, the latter four set the radius of the arc at
 * each corner separately. The radii start with the top-left corner and move
 * clockwise around the rectangle. If any of these parameters are omitted, they
 * are set to the value of the last specified corner radius.
 *
 * @method rect
 * @param  {Number} x  x-coordinate of the rectangle.
 * @param  {Number} y  y-coordinate of the rectangle.
 * @param  {Number} w  width of the rectangle.
 * @param  {Number} [h]  height of the rectangle.
 * @param  {Number} [tl] optional radius of top-left corner.
 * @param  {Number} [tr] optional radius of top-right corner.
 * @param  {Number} [br] optional radius of bottom-right corner.
 * @param  {Number} [bl] optional radius of bottom-left corner.
 * @chainable
 * @example
 * <div>
 * <code>
 * rect(30, 20, 55, 55);
 * describe('A white rectangle with a black outline on a gray canvas.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * rect(30, 20, 55, 55, 20);
 * describe(
 *   'A white rectangle with a black outline and round edges on a gray canvas.'
 * );
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * rect(30, 20, 55, 55, 20, 15, 10, 5);
 * describe('A white rectangle with a black outline and round edges of different radii.');
 * </code>
 * </div>
 *
 *//**
 * @method rect
 * @param  {Number} x
 * @param  {Number} y
 * @param  {Number} w
 * @param  {Number} h
 * @param  {Integer} [detailX] number of segments in the x-direction (for WebGL mode).
 * @param  {Integer} [detailY] number of segments in the y-direction (for WebGL mode).
 * @chainable
 */s.default.prototype.rect=function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return s.default._validateParameters("rect",r),this._renderRect.apply(this,r)},/**
 * Draws a square to the canvas. A square is a four-sided polygon with every
 * angle at ninety degrees and equal side lengths. By default, the first two
 * parameters set the location of the square's upper-left corner. The third
 * parameter sets its side size. The way these parameters are interpreted may
 * be changed with the <a href="#/p5/rectMode">rectMode()</a> function.
 *
 * The version of `square()` with four parameters creates a rounded square. The
 * fourth parameter is used as the radius value for all four corners.
 *
 * The version of `square()` with seven parameters also creates a rounded square.
 * When using seven parameters, the latter four set the radius of the arc at
 * each corner separately. The radii start with the top-left corner and move
 * clockwise around the square. If any of these parameters are omitted, they
 * are set to the value of the last specified corner radius.
 *
 * @method square
 * @param  {Number} x  x-coordinate of the square.
 * @param  {Number} y  y-coordinate of the square.
 * @param  {Number} s  side size of the square.
 * @param  {Number} [tl] optional radius of top-left corner.
 * @param  {Number} [tr] optional radius of top-right corner.
 * @param  {Number} [br] optional radius of bottom-right corner.
 * @param  {Number} [bl] optional radius of bottom-left corner.
 * @chainable
 * @example
 * <div>
 * <code>
 * square(30, 20, 55);
 * describe('A white square with a black outline in on a gray canvas.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * square(30, 20, 55, 20);
 * describe(
 *   'A white square with a black outline and round edges on a gray canvas.'
 * );
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * square(30, 20, 55, 20, 15, 10, 5);
 * describe('A white square with a black outline and round edges of different radii.');
 * </code>
 * </div>
 *
 */s.default.prototype.square=function(t,r,n,o,a,l,c){return s.default._validateParameters("square",arguments),this._renderRect.call(this,t,r,n,n,o,a,l,c)},s.default.prototype._renderRect=function(){if(this._renderer._doStroke||this._renderer._doFill){3==arguments.length&&(arguments[3]=arguments[2]);// segment details) to the argument list
for(var t=c.default.modeAdjust(arguments[0],arguments[1],arguments[2],arguments[3],this._renderer._rectMode),r=[t.x,t.y,t.w,t.h],n=4;n<arguments.length;n++)r[n]=arguments[n];this._renderer.rect(r),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("rectangle",[t.x,t.y,t.w,t.h])}return this},/**
 * Draws a triangle to the canvas. A triangle is a three-sided polygon. The
 * first two parameters specify the triangle's first point `(x1,y1)`. The middle
 * two parameters specify its second point `(x2,y2)`. And the last two parameters
 * specify its third point `(x3, y3)`.
 *
 * @method triangle
 * @param  {Number} x1 x-coordinate of the first point.
 * @param  {Number} y1 y-coordinate of the first point.
 * @param  {Number} x2 x-coordinate of the second point.
 * @param  {Number} y2 y-coordinate of the second point.
 * @param  {Number} x3 x-coordinate of the third point.
 * @param  {Number} y3 y-coordinate of the third point.
 * @chainable
 * @example
 * <div>
 * <code>
 * triangle(30, 75, 58, 20, 86, 75);
 * describe('A white triangle with a black outline on a gray canvas.');
 * </code>
 * </div>
 *
 */s.default.prototype.triangle=function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return s.default._validateParameters("triangle",r),(this._renderer._doStroke||this._renderer._doFill)&&this._renderer.triangle(r),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("triangle",r),this};var g=s.default;n.default=g},{"../constants":284,"../friendly_errors/fes_core":287,"../friendly_errors/file_errors":288,"../friendly_errors/validate_params":291,"../helpers":292,"../main":296,"core-js/modules/es.array.from":175,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.slice":182,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],304:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=p(t("../main")),l=u(t("../constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Shape
 * @submodule Attributes
 * @for p5
 * @requires core
 * @requires constants
 *//**
 * Modifies the location from which ellipses, circles, and arcs are drawn. By default, the
 * first two parameters are the x- and y-coordinates of the shape's center. The next
 * parameters are its width and height. This is equivalent to calling `ellipseMode(CENTER)`.
 *
 * `ellipseMode(RADIUS)` also uses the first two parameters to set the x- and y-coordinates
 * of the shape's center. The next parameters are half of the shapes's width and height.
 * Calling `ellipse(0, 0, 10, 15)` draws a shape with a width of 20 and height of 30.
 *
 * `ellipseMode(CORNER)` uses the first two parameters as the upper-left corner of the
 * shape. The next parameters are its width and height.
 *
 * `ellipseMode(CORNERS)` uses the first two parameters as the location of one corner
 * of the ellipse's bounding box. The third and fourth parameters are the location of the
 * opposite corner.
 *
 * The argument passed to `ellipseMode()` must be written in ALL CAPS because the constants
 * `CENTER`, `RADIUS`, `CORNER`, and `CORNERS` are defined this way. JavaScript is a
 * case-sensitive language.
 *
 * @method ellipseMode
 * @param  {Constant} mode either CENTER, RADIUS, CORNER, or CORNERS
 * @chainable
 * @example
 * <div>
 * <code>
 * ellipseMode(RADIUS);
 * fill(255);
 * ellipse(50, 50, 30, 30);
 * ellipseMode(CENTER);
 * fill(100);
 * ellipse(50, 50, 30, 30);
 * describe('A white circle with a gray circle at its center. Both circles have black outlines.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * ellipseMode(CORNER);
 * fill(255);
 * ellipse(25, 25, 50, 50);
 * ellipseMode(CORNERS);
 * fill(100);
 * ellipse(25, 25, 50, 50);
 * describe('A white circle with a gray circle at its top-left corner. Both circles have black outlines.');
 * </code>
 * </div>
 */s.default.prototype.ellipseMode=function(t){return s.default._validateParameters("ellipseMode",arguments),(t===l.CORNER||t===l.CORNERS||t===l.RADIUS||t===l.CENTER)&&(this._renderer._ellipseMode=t),this},/**
 * Draws all geometry with jagged (aliased) edges.
 *
 * <a href="#/p5/smooth">smooth()</a> is active by default in 2D mode. It's necessary to call
 * <a href="#/p5/noSmooth">noSmooth()</a> to disable smoothing of geometry, images, and fonts.
 *
 * In WebGL mode, <a href="#/p5/noSmooth">noSmooth()</a> is active by default. It's necessary
 * to call <a href="#/p5/smooth">smooth()</a> to draw smooth (antialiased) edges.
 *
 * @method noSmooth
 * @chainable
 * @example
 * <div>
 * <code>
 * background(0);
 * noStroke();
 * smooth();
 * ellipse(30, 48, 36, 36);
 * noSmooth();
 * ellipse(70, 48, 36, 36);
 * describe('Two pixelated white circles on a black background.');
 * </code>
 * </div>
 */s.default.prototype.noSmooth=function(){return this._renderer.isP3D?this.setAttributes("antialias",!1):"imageSmoothingEnabled"in this.drawingContext&&(this.drawingContext.imageSmoothingEnabled=!1),this},/**
 * Modifies the location from which rectangles and squares are drawn. By default,
 * the first two parameters are the x- and y-coordinates of the shape's upper-left
 * corner. The next parameters are its width and height. This is equivalent to
 * calling `rectMode(CORNER)`.
 *
 * `rectMode(CORNERS)` also uses the first two parameters as the location of one of
 * the corners. The third and fourth parameters are the location of the opposite
 * corner.
 *
 * `rectMode(CENTER)` uses the first two parameters as the x- and y-coordinates of
 * the shape's center. The next parameters are its width and height.
 *
 * `rectMode(RADIUS)` also uses the first two parameters as the x- and y-coordinates
 * of the shape's center. The next parameters are half of the shape's width and
 * height.
 *
 * The argument passed to `rectMode()` must be written in ALL CAPS because the
 * constants `CENTER`, `RADIUS`, `CORNER`, and `CORNERS` are defined this way.
 * JavaScript is a case-sensitive language.
 *
 * @method rectMode
 * @param  {Constant} mode either CORNER, CORNERS, CENTER, or RADIUS
 * @chainable
 * @example
 * <div>
 * <code>
 * rectMode(CORNER);
 * fill(255);
 * rect(25, 25, 50, 50);
 *
 * rectMode(CORNERS);
 * fill(100);
 * rect(25, 25, 50, 50);
 *
 * describe('A small gray square drawn at the top-left corner of a white square.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * rectMode(RADIUS);
 * fill(255);
 * rect(50, 50, 30, 30);
 *
 * rectMode(CENTER);
 * fill(100);
 * rect(50, 50, 30, 30);
 *
 * describe('A small gray square drawn at the center of a white square.');
 * </code>
 * </div>
 */s.default.prototype.rectMode=function(t){return s.default._validateParameters("rectMode",arguments),(t===l.CORNER||t===l.CORNERS||t===l.RADIUS||t===l.CENTER)&&(this._renderer._rectMode=t),this},/**
 * Draws all geometry with smooth (anti-aliased) edges. <a href="#/p5/smooth">smooth()</a> will also
 * improve image quality of resized images.
 *
 * <a href="#/p5/smooth">smooth()</a> is active by default in 2D mode. It's necessary to call
 * <a href="#/p5/noSmooth">noSmooth()</a> to disable smoothing of geometry, images, and fonts.
 *
 * In WebGL mode, <a href="#/p5/noSmooth">noSmooth()</a> is active by default. It's necessary
 * to call <a href="#/p5/smooth">smooth()</a> to draw smooth (antialiased) edges.
 *
 * @method smooth
 * @chainable
 * @example
 * <div>
 * <code>
 * background(0);
 * noStroke();
 * smooth();
 * ellipse(30, 48, 36, 36);
 * noSmooth();
 * ellipse(70, 48, 36, 36);
 * describe('Two pixelated white circles on a black background.');
 * </code>
 * </div>
 */s.default.prototype.smooth=function(){return this.setAttributes("antialias",!0),!this._renderer.isP3D&&"imageSmoothingEnabled"in this.drawingContext&&(this.drawingContext.imageSmoothingEnabled=!0),this},/**
 * Sets the style for rendering line endings. These ends are either rounded
 * (`ROUND`), squared (`SQUARE`), or extended (`PROJECT`). The default cap is
 * `ROUND`.
 *
 * The argument passed to `strokeCap()` must be written in ALL CAPS because
 * the constants `ROUND`, `SQUARE`, and `PROJECT` are defined this way.
 * JavaScript is a case-sensitive language.
 *
 * @method strokeCap
 * @param  {Constant} cap either ROUND, SQUARE, or PROJECT
 * @chainable
 * @example
 * <div>
 * <code>
 * strokeWeight(12.0);
 * strokeCap(ROUND);
 * line(20, 30, 80, 30);
 * strokeCap(SQUARE);
 * line(20, 50, 80, 50);
 * strokeCap(PROJECT);
 * line(20, 70, 80, 70);
 * describe('Three horizontal lines. The top line has rounded ends, the middle line has squared ends, and the bottom line has longer, squared ends.');
 * </code>
 * </div>
 */s.default.prototype.strokeCap=function(t){return s.default._validateParameters("strokeCap",arguments),(t===l.ROUND||t===l.SQUARE||t===l.PROJECT)&&this._renderer.strokeCap(t),this},/**
 * Sets the style of the joints which connect line segments. These joints are
 * either mitered (`MITER`), beveled (`BEVEL`), or rounded (`ROUND`). The default
 * joint is `MITER` in 2D mode and `ROUND` in WebGL mode.
 *
 * The argument passed to `strokeJoin()` must be written in ALL CAPS because
 * the constants `MITER`, `BEVEL`, and `ROUND` are defined this way.
 * JavaScript is a case-sensitive language.
 *
 * @method strokeJoin
 * @param  {Constant} join either MITER, BEVEL, or ROUND
 * @chainable
 * @example
 * <div>
 * <code>
 * noFill();
 * strokeWeight(10.0);
 * strokeJoin(MITER);
 * beginShape();
 * vertex(35, 20);
 * vertex(65, 50);
 * vertex(35, 80);
 * endShape();
 * describe('A right-facing arrowhead shape with a pointed tip in center of canvas.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * noFill();
 * strokeWeight(10.0);
 * strokeJoin(BEVEL);
 * beginShape();
 * vertex(35, 20);
 * vertex(65, 50);
 * vertex(35, 80);
 * endShape();
 * describe('A right-facing arrowhead shape with a flat tip in center of canvas.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * noFill();
 * strokeWeight(10.0);
 * strokeJoin(ROUND);
 * beginShape();
 * vertex(35, 20);
 * vertex(65, 50);
 * vertex(35, 80);
 * endShape();
 * describe('A right-facing arrowhead shape with a rounded tip in center of canvas.');
 * </code>
 * </div>
 */s.default.prototype.strokeJoin=function(t){return s.default._validateParameters("strokeJoin",arguments),(t===l.ROUND||t===l.BEVEL||t===l.MITER)&&this._renderer.strokeJoin(t),this},/**
 * Sets the width of the stroke used for lines, points, and the border around
 * shapes. All widths are set in units of pixels.
 *
 * Note that `strokeWeight()` is affected by any transformation or scaling that
 * has been applied previously.
 *
 * @method strokeWeight
 * @param  {Number} weight the weight of the stroke (in pixels).
 * @chainable
 * @example
 * <div>
 * <code>
 * // Default.
 * line(20, 20, 80, 20);
 * // Thicker.
 * strokeWeight(4);
 * line(20, 40, 80, 40);
 * // Beastly.
 * strokeWeight(10);
 * line(20, 70, 80, 70);
 * describe('Three horizontal black lines. The top line is thin, the middle is medium, and the bottom is thick.');
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Default.
 * line(20, 20, 80, 20);
 * // Adding scale transformation.
 * scale(5);
 * // Coordinates adjusted for scaling.
 * line(4, 8, 16, 8);
 * describe('Two horizontal black lines. The top line is thin and the bottom is five times thicker than the top.');
 * </code>
 * </div>
 */s.default.prototype.strokeWeight=function(t){return s.default._validateParameters("strokeWeight",arguments),this._renderer.strokeWeight(t),this};var d=s.default;n.default=d},{"../constants":284,"../main":296,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],305:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Shape
 * @submodule Curves
 * @for p5
 * @requires core
 */t("../friendly_errors/fes_core"),t("../friendly_errors/file_errors"),t("../friendly_errors/validate_params"),/**
 * Draws a cubic Bezier curve on the screen. These curves are defined by a
 * series of anchor and control points. The first two parameters specify
 * the first anchor point and the last two parameters specify the other
 * anchor point, which become the first and last points on the curve. The
 * middle parameters specify the two control points which define the shape
 * of the curve. Approximately speaking, control points "pull" the curve
 * towards them.
 *
 * Bezier curves were developed by French automotive engineer Pierre Bezier,
 * and are commonly used in computer graphics to define gently sloping curves.
 * See also <a href="#/p5/curve">curve()</a>.
 *
 * @method bezier
 * @param  {Number} x1 x-coordinate for the first anchor point
 * @param  {Number} y1 y-coordinate for the first anchor point
 * @param  {Number} x2 x-coordinate for the first control point
 * @param  {Number} y2 y-coordinate for the first control point
 * @param  {Number} x3 x-coordinate for the second control point
 * @param  {Number} y3 y-coordinate for the second control point
 * @param  {Number} x4 x-coordinate for the second anchor point
 * @param  {Number} y4 y-coordinate for the second anchor point
 * @chainable
 * @example
 * <div>
 * <code>
 * noFill();
 * stroke(255, 102, 0);
 * line(85, 20, 10, 10);
 * line(90, 90, 15, 80);
 * stroke(0, 0, 0);
 * bezier(85, 20, 10, 10, 90, 90, 15, 80);
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * background(0, 0, 0);
 * noFill();
 * stroke(255);
 * bezier(250, 250, 0, 100, 100, 0, 100, 0, 0, 0, 100, 0);
 * </code>
 * </div>
 *
 * @alt
 * stretched black s-shape in center with orange lines extending from end points.
 * a white colored curve on black background from the upper-right corner to the lower right corner.
 *//**
 * @method bezier
 * @param  {Number} x1
 * @param  {Number} y1
 * @param  {Number} z1 z-coordinate for the first anchor point
 * @param  {Number} x2
 * @param  {Number} y2
 * @param  {Number} z2 z-coordinate for the first control point
 * @param  {Number} x3
 * @param  {Number} y3
 * @param  {Number} z3 z-coordinate for the second control point
 * @param  {Number} x4
 * @param  {Number} y4
 * @param  {Number} z4 z-coordinate for the second anchor point
 * @chainable
 */o.default.prototype.bezier=function(){for(var t,r=arguments.length,n=Array(r),a=0;a<r;a++)n[a]=arguments[a];return o.default._validateParameters("bezier",n),(this._renderer._doStroke||this._renderer._doFill)&&(t=this._renderer).bezier.apply(t,n),this},/**
 * Sets the resolution at which Bezier's curve is displayed. The default value is 20.
 *
 * Note, This function is only useful when using the WEBGL renderer
 * as the default canvas renderer does not use this information.
 *
 * @method bezierDetail
 * @param {Number} detail resolution of the curves
 * @chainable
 * @example
 * <div modernizr='webgl'>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   noFill();
 *   bezierDetail(5);
 * }
 *
 * function draw() {
 *   background(200);
 *   bezier(
 *     -40, -40, 0,
 *     90, -40, 0,
 *     -90,  40, 0,
 *     40,  40, 0
 *   );
 * }
 * </code>
 * </div>
 *
 * @alt
 * stretched black s-shape with a low level of bezier detail
 */o.default.prototype.bezierDetail=function(t){return o.default._validateParameters("bezierDetail",arguments),this._bezierDetail=t,this},/**
 * Given the x or y co-ordinate values of control and anchor points of a bezier
 * curve, it evaluates the x or y coordinate of the bezier at position t. The
 * parameters a and d are the x or y coordinates of first and last points on the
 * curve while b and c are of the control points.The final parameter t is the
 * position of the resultant point which is given between 0 and 1.
 * This can be done once with the x coordinates and a second time
 * with the y coordinates to get the location of a bezier curve at t.
 *
 * @method bezierPoint
 * @param {Number} a coordinate of first point on the curve
 * @param {Number} b coordinate of first control point
 * @param {Number} c coordinate of second control point
 * @param {Number} d coordinate of second point on the curve
 * @param {Number} t value between 0 and 1
 * @return {Number} the value of the Bezier at position t
 * @example
 * <div>
 * <code>
 * noFill();
 * let x1 = 85,
  x2 = 10,
  x3 = 90,
  x4 = 15;
 * let y1 = 20,
  y2 = 10,
  y3 = 90,
  y4 = 80;
 * bezier(x1, y1, x2, y2, x3, y3, x4, y4);
 * fill(255);
 * let steps = 10;
 * for (let i = 0; i <= steps; i++) {
 *   let t = i / steps;
 *   let x = bezierPoint(x1, x2, x3, x4, t);
 *   let y = bezierPoint(y1, y2, y3, y4, t);
 *   circle(x, y, 5);
 * }
 * </code>
 * </div>
 *
 * @alt
 * 10 points plotted on a given bezier at equal distances.
 */o.default.prototype.bezierPoint=function(t,r,n,a,s){o.default._validateParameters("bezierPoint",arguments);var l=1-s;return Math.pow(l,3)*t+3*Math.pow(l,2)*s*r+3*l*Math.pow(s,2)*n+Math.pow(s,3)*a},/**
 * Evaluates the tangent to the Bezier at position t for points a, b, c, d.
 * The parameters a and d are the first and last points
 * on the curve, and b and c are the control points.
 * The final parameter t varies between 0 and 1.
 *
 * @method bezierTangent
 * @param {Number} a coordinate of first point on the curve
 * @param {Number} b coordinate of first control point
 * @param {Number} c coordinate of second control point
 * @param {Number} d coordinate of second point on the curve
 * @param {Number} t value between 0 and 1
 * @return {Number} the tangent at position t
 * @example
 * <div>
 * <code>
 * noFill();
 * bezier(85, 20, 10, 10, 90, 90, 15, 80);
 * let steps = 6;
 * fill(255);
 * for (let i = 0; i <= steps; i++) {
 *   let t = i / steps;
 *   // Get the location of the point
 *   let x = bezierPoint(85, 10, 90, 15, t);
 *   let y = bezierPoint(20, 10, 90, 80, t);
 *   // Get the tangent points
 *   let tx = bezierTangent(85, 10, 90, 15, t);
 *   let ty = bezierTangent(20, 10, 90, 80, t);
 *   // Calculate an angle from the tangent points
 *   let a = atan2(ty, tx);
 *   a += PI;
 *   stroke(255, 102, 0);
 *   line(x, y, cos(a) * 30 + x, sin(a) * 30 + y);
 *   // The following line of code makes a line
 *   // inverse of the above line
 *   //line(x, y, cos(a)*-30 + x, sin(a)*-30 + y);
 *   stroke(0);
 *   ellipse(x, y, 5, 5);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * noFill();
 * bezier(85, 20, 10, 10, 90, 90, 15, 80);
 * stroke(255, 102, 0);
 * let steps = 16;
 * for (let i = 0; i <= steps; i++) {
 *   let t = i / steps;
 *   let x = bezierPoint(85, 10, 90, 15, t);
 *   let y = bezierPoint(20, 10, 90, 80, t);
 *   let tx = bezierTangent(85, 10, 90, 15, t);
 *   let ty = bezierTangent(20, 10, 90, 80, t);
 *   let a = atan2(ty, tx);
 *   a -= HALF_PI;
 *   line(x, y, cos(a) * 8 + x, sin(a) * 8 + y);
 * }
 * </code>
 * </div>
 *
 * @alt
 * s-shaped line with 6 short orange lines showing the tangents at those points.
 * s-shaped line with 6 short orange lines showing lines coming out the underside of the bezier.
 */o.default.prototype.bezierTangent=function(t,r,n,a,s){o.default._validateParameters("bezierTangent",arguments);var l=1-s;return 3*a*Math.pow(s,2)-3*n*Math.pow(s,2)+6*n*l*s-6*r*l*s+3*r*Math.pow(l,2)-3*t*Math.pow(l,2)},/**
 * Draws a curved line on the screen between two points, given as the
 * middle four parameters. The first two parameters are a control point, as
 * if the curve came from this point even though it's not drawn. The last
 * two parameters similarly describe the other control point. <br /><br />
 * Longer curves can be created by putting a series of <a href="#/p5/curve">curve()</a> functions
 * together or using <a href="#/p5/curveVertex">curveVertex()</a>. An additional function called
 * <a href="#/p5/curveTightness">curveTightness()</a> provides control for the visual quality of the curve.
 * The <a href="#/p5/curve">curve()</a> function is an implementation of Catmull-Rom splines.
 *
 * @method curve
 * @param  {Number} x1 x-coordinate for the beginning control point
 * @param  {Number} y1 y-coordinate for the beginning control point
 * @param  {Number} x2 x-coordinate for the first point
 * @param  {Number} y2 y-coordinate for the first point
 * @param  {Number} x3 x-coordinate for the second point
 * @param  {Number} y3 y-coordinate for the second point
 * @param  {Number} x4 x-coordinate for the ending control point
 * @param  {Number} y4 y-coordinate for the ending control point
 * @chainable
 * @example
 * <div>
 * <code>
 * noFill();
 * stroke(255, 102, 0);
 * curve(5, 26, 5, 26, 73, 24, 73, 61);
 * stroke(0);
 * curve(5, 26, 73, 24, 73, 61, 15, 65);
 * stroke(255, 102, 0);
 * curve(73, 24, 73, 61, 15, 65, 15, 65);
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Define the curve points as JavaScript objects
 * let p1 = { x: 5, y: 26 };
 * let p2 = { x: 73, y: 24 };
 * let p3 = { x: 73, y: 61 };
 * let p4 = { x: 15, y: 65 };
 * noFill();
 * stroke(255, 102, 0);
 * curve(p1.x, p1.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);
 * stroke(0);
 * curve(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y);
 * stroke(255, 102, 0);
 * curve(p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, p4.x, p4.y);
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * noFill();
 * stroke(255, 102, 0);
 * curve(5, 26, 0, 5, 26, 0, 73, 24, 0, 73, 61, 0);
 * stroke(0);
 * curve(5, 26, 0, 73, 24, 0, 73, 61, 0, 15, 65, 0);
 * stroke(255, 102, 0);
 * curve(73, 24, 0, 73, 61, 0, 15, 65, 0, 15, 65, 0);
 * </code>
 * </div>
 *
 * @alt
 * horseshoe shape with orange ends facing left and black curved center.
 * horseshoe shape with orange ends facing left and black curved center.
 * curving black and orange lines.
 *//**
 * @method curve
 * @param  {Number} x1
 * @param  {Number} y1
 * @param  {Number} z1 z-coordinate for the beginning control point
 * @param  {Number} x2
 * @param  {Number} y2
 * @param  {Number} z2 z-coordinate for the first point
 * @param  {Number} x3
 * @param  {Number} y3
 * @param  {Number} z3 z-coordinate for the second point
 * @param  {Number} x4
 * @param  {Number} y4
 * @param  {Number} z4 z-coordinate for the ending control point
 * @chainable
 */o.default.prototype.curve=function(){for(var t,r=arguments.length,n=Array(r),a=0;a<r;a++)n[a]=arguments[a];return o.default._validateParameters("curve",n),this._renderer._doStroke&&(t=this._renderer).curve.apply(t,n),this},/**
 * Sets the resolution at which curves display. The default value is 20 while
 * the minimum value is 3.
 *
 * This function is only useful when using the WEBGL renderer
 * as the default canvas renderer does not use this
 * information.
 *
 * @method curveDetail
 * @param {Number} resolution resolution of the curves
 * @chainable
 * @example
 * <div modernizr='webgl'>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *
 *   curveDetail(5);
 * }
 * function draw() {
 *   background(200);
 *
 *   curve(250, 600, 0, -30, 40, 0, 30, 30, 0, -250, 600, 0);
 * }
 * </code>
 * </div>
 *
 * @alt
 * white arch shape with a low level of curve detail.
 */o.default.prototype.curveDetail=function(t){return o.default._validateParameters("curveDetail",arguments),t<3?this._curveDetail=3:this._curveDetail=t,this},/**
 * Modifies the quality of forms created with <a href="#/p5/curve">curve()</a>
 * and <a href="#/p5/curveVertex">curveVertex()</a>.The parameter tightness
 * determines how the curve fits to the vertex points. The value 0.0 is the
 * default value for tightness (this value defines the curves to be Catmull-Rom
 * splines) and the value 1.0 connects all the points with straight lines.
 * Values within the range -5.0 and 5.0 will deform the curves but will leave
 * them recognizable and as values increase in magnitude, they will continue to deform.
 *
 * @method curveTightness
 * @param {Number} amount amount of deformation from the original vertices
 * @chainable
 * @example
 * <div>
 * <code>
 * // Move the mouse left and right to see the curve change
 * function setup() {
 *   createCanvas(100, 100);
 *   noFill();
 * }
 *
 * function draw() {
 *   background(204);
 *   let t = map(mouseX, 0, width, -5, 5);
 *   curveTightness(t);
 *   beginShape();
 *   curveVertex(10, 26);
 *   curveVertex(10, 26);
 *   curveVertex(83, 24);
 *   curveVertex(83, 61);
 *   curveVertex(25, 65);
 *   curveVertex(25, 65);
 *   endShape();
 * }
 * </code>
 * </div>
 *
 * @alt
 * Line shaped like right-facing arrow,points move with mouse-x and warp shape.
 */o.default.prototype.curveTightness=function(t){return o.default._validateParameters("curveTightness",arguments),this._renderer._curveTightness=t,this},/**
 * Evaluates the curve at position t for points a, b, c, d.
 * The parameter t varies between 0 and 1, a and d are control points
 * of the curve, and b and c are the start and end points of the curve.
 * This can be done once with the x coordinates and a second time
 * with the y coordinates to get the location of a curve at t.
 *
 * @method curvePoint
 * @param {Number} a coordinate of first control point of the curve
 * @param {Number} b coordinate of first point
 * @param {Number} c coordinate of second point
 * @param {Number} d coordinate of second control point
 * @param {Number} t value between 0 and 1
 * @return {Number} <a href="#/p5/curve">Curve</a> value at position t
 * @example
 * <div>
 * <code>
 * noFill();
 * curve(5, 26, 5, 26, 73, 24, 73, 61);
 * curve(5, 26, 73, 24, 73, 61, 15, 65);
 * fill(255);
 * ellipseMode(CENTER);
 * let steps = 6;
 * for (let i = 0; i <= steps; i++) {
 *   let t = i / steps;
 *   let x = curvePoint(5, 5, 73, 73, t);
 *   let y = curvePoint(26, 26, 24, 61, t);
 *   ellipse(x, y, 5, 5);
 *   x = curvePoint(5, 73, 73, 15, t);
 *   y = curvePoint(26, 24, 61, 65, t);
 *   ellipse(x, y, 5, 5);
 * }
 * </code>
 * </div>
 *
 *line hooking down to right-bottom with 13 5×5 white ellipse points
 */o.default.prototype.curvePoint=function(t,r,n,a,s){o.default._validateParameters("curvePoint",arguments);var l=this._renderer._curveTightness,c=s*s*s,u=s*s;return t*((l-1)/2*c+(1-l)*u+(l-1)/2*s)+r*((l+3)/2*c+(-5-l)/2*u+1)+n*((-3-l)/2*c+(l+2)*u+(1-l)/2*s)+a*((1-l)/2*c+(l-1)/2*u)},/**
 * Evaluates the tangent to the curve at position t for points a, b, c, d.
 * The parameter t varies between 0 and 1, a and d are points on the curve,
 * and b and c are the control points.
 *
 * @method curveTangent
 * @param {Number} a coordinate of first control point
 * @param {Number} b coordinate of first point on the curve
 * @param {Number} c coordinate of second point on the curve
 * @param {Number} d coordinate of second conrol point
 * @param {Number} t value between 0 and 1
 * @return {Number} the tangent at position t
 * @example
 * <div>
 * <code>
 * noFill();
 * curve(5, 26, 73, 24, 73, 61, 15, 65);
 * let steps = 6;
 * for (let i = 0; i <= steps; i++) {
 *   let t = i / steps;
 *   let x = curvePoint(5, 73, 73, 15, t);
 *   let y = curvePoint(26, 24, 61, 65, t);
 *   //ellipse(x, y, 5, 5);
 *   let tx = curveTangent(5, 73, 73, 15, t);
 *   let ty = curveTangent(26, 24, 61, 65, t);
 *   let a = atan2(ty, tx);
 *   a -= PI / 2.0;
 *   line(x, y, cos(a) * 8 + x, sin(a) * 8 + y);
 * }
 * </code>
 * </div>
 *
 * @alt
 * right curving line mid-right of canvas with 7 short lines radiating from it.
 */o.default.prototype.curveTangent=function(t,r,n,a,s){o.default._validateParameters("curveTangent",arguments);var l=this._renderer._curveTightness,c=s*s*3,u=2*s;return t*((l-1)/2*c+(1-l)*u+(l-1)/2)+r*((l+3)/2*c+(-5-l)/2*u)+n*((-3-l)/2*c+(l+2)*u+(1-l)/2)+a*((1-l)/2*c+(l-1)/2*u)};var s=o.default;n.default=s},{"../friendly_errors/fes_core":287,"../friendly_errors/file_errors":288,"../friendly_errors/validate_params":291,"../main":296}],306:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.array.slice"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=p(t("../main")),l=u(t("../constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Shape
 * @submodule Vertex
 * @for p5
 * @requires core
 * @requires constants
 */var d=null,m=[],f=[],h=!1,y=!1,g=!1,v=!1,b=!0;/**
 * Use the <a href="#/p5/beginContour">beginContour()</a> and
 * <a href="#/p5/endContour">endContour()</a> functions to create negative shapes
 * within shapes such as the center of the letter 'O'. <a href="#/p5/beginContour">beginContour()</a>
 * begins recording vertices for the shape and <a href="#/p5/endContour">endContour()</a> stops recording.
 * The vertices that define a negative shape must "wind" in the opposite direction
 * from the exterior shape. First draw vertices for the exterior clockwise order, then for internal shapes, draw vertices
 * shape in counter-clockwise.
 *
 * These functions can only be used within a <a href="#/p5/beginShape">beginShape()</a>/<a href="#/p5/endShape">endShape()</a> pair and
 * transformations such as <a href="#/p5/translate">translate()</a>, <a href="#/p5/rotate">rotate()</a>, and <a href="#/p5/scale">scale()</a> do not work
 * within a <a href="#/p5/beginContour">beginContour()</a>/<a href="#/p5/endContour">endContour()</a> pair. It is also not possible to use
 * other shapes, such as <a href="#/p5/ellipse">ellipse()</a> or <a href="#/p5/rect">rect()</a> within.
 *
 * @method beginContour
 * @chainable
 * @example
 * <div>
 * <code>
 * translate(50, 50);
 * stroke(255, 0, 0);
 * beginShape();
 * // Exterior part of shape, clockwise winding
 * vertex(-40, -40);
 * vertex(40, -40);
 * vertex(40, 40);
 * vertex(-40, 40);
 * // Interior part of shape, counter-clockwise winding
 * beginContour();
 * vertex(-20, -20);
 * vertex(-20, 20);
 * vertex(20, 20);
 * vertex(20, -20);
 * endContour();
 * endShape(CLOSE);
 * </code>
 * </div>
 *
 * @alt
 * white rect and smaller grey rect with red outlines in center of canvas.
 */s.default.prototype.beginContour=function(){return f=[],v=!0,this},/**
 * Using the <a href="#/p5/beginShape">beginShape()</a> and <a href="#/p5/endShape">endShape()</a> functions allow creating more
 * complex forms. <a href="#/p5/beginShape">beginShape()</a> begins recording vertices for a shape and
 * <a href="#/p5/endShape">endShape()</a> stops recording. The value of the kind parameter tells it which
 * types of shapes to create from the provided vertices. With no mode
 * specified, the shape can be any irregular polygon.
 *
 * The parameters available for <a href="#/p5/beginShape">beginShape()</a> are:
 *
 * POINTS
 * Draw a series of points
 *
 * LINES
 * Draw a series of unconnected line segments (individual lines)
 *
 * TRIANGLES
 * Draw a series of separate triangles
 *
 * TRIANGLE_FAN
 * Draw a series of connected triangles sharing the first vertex in a fan-like fashion
 *
 * TRIANGLE_STRIP
 * Draw a series of connected triangles in strip fashion
 *
 * QUADS
 * Draw a series of separate quads
 *
 * QUAD_STRIP
 * Draw quad strip using adjacent edges to form the next quad
 *
 * TESS (WEBGL only)
 * Handle irregular polygon for filling curve by explicit tessellation
 *
 * After calling the <a href="#/p5/beginShape">beginShape()</a> function, a series of <a href="#/p5/vertex">vertex()</a> commands must follow. To stop
 * drawing the shape, call <a href="#/p5/endShape">endShape()</a>. Each shape will be outlined with the
 * current stroke color and filled with the fill color.
 *
 * Transformations such as <a href="#/p5/translate">translate()</a>, <a href="#/p5/rotate">rotate()</a>, and <a href="#/p5/scale">scale()</a> do not work
 * within <a href="#/p5/beginShape">beginShape()</a>. It is also not possible to use other shapes, such as
 * <a href="#/p5/ellipse">ellipse()</a> or <a href="#/p5/rect">rect()</a> within <a href="#/p5/beginShape">beginShape()</a>.
 *
 * @method beginShape
 * @param  {Constant} [kind] either POINTS, LINES, TRIANGLES, TRIANGLE_FAN
 *                                TRIANGLE_STRIP, QUADS, QUAD_STRIP or TESS
 * @chainable
 * @example
 * <div>
 * <code>
 * beginShape();
 * vertex(30, 20);
 * vertex(85, 20);
 * vertex(85, 75);
 * vertex(30, 75);
 * endShape(CLOSE);
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * beginShape(POINTS);
 * vertex(30, 20);
 * vertex(85, 20);
 * vertex(85, 75);
 * vertex(30, 75);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * beginShape(LINES);
 * vertex(30, 20);
 * vertex(85, 20);
 * vertex(85, 75);
 * vertex(30, 75);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * noFill();
 * beginShape();
 * vertex(30, 20);
 * vertex(85, 20);
 * vertex(85, 75);
 * vertex(30, 75);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * noFill();
 * beginShape();
 * vertex(30, 20);
 * vertex(85, 20);
 * vertex(85, 75);
 * vertex(30, 75);
 * endShape(CLOSE);
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * beginShape(TRIANGLES);
 * vertex(30, 75);
 * vertex(40, 20);
 * vertex(50, 75);
 * vertex(60, 20);
 * vertex(70, 75);
 * vertex(80, 20);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * beginShape(TRIANGLE_STRIP);
 * vertex(30, 75);
 * vertex(40, 20);
 * vertex(50, 75);
 * vertex(60, 20);
 * vertex(70, 75);
 * vertex(80, 20);
 * vertex(90, 75);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * beginShape(TRIANGLE_FAN);
 * vertex(57.5, 50);
 * vertex(57.5, 15);
 * vertex(92, 50);
 * vertex(57.5, 85);
 * vertex(22, 50);
 * vertex(57.5, 15);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * beginShape(QUADS);
 * vertex(30, 20);
 * vertex(30, 75);
 * vertex(50, 75);
 * vertex(50, 20);
 * vertex(65, 20);
 * vertex(65, 75);
 * vertex(85, 75);
 * vertex(85, 20);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * beginShape(QUAD_STRIP);
 * vertex(30, 20);
 * vertex(30, 75);
 * vertex(50, 20);
 * vertex(50, 75);
 * vertex(65, 20);
 * vertex(65, 75);
 * vertex(85, 20);
 * vertex(85, 75);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * beginShape(TESS);
 * vertex(20, 20);
 * vertex(80, 20);
 * vertex(80, 40);
 * vertex(40, 40);
 * vertex(40, 60);
 * vertex(80, 60);
 * vertex(80, 80);
 * vertex(20, 80);
 * endShape(CLOSE);
 * </code>
 * </div>
 *
 * @alt
 * white square-shape with black outline in middle-right of canvas.
 * 4 black points in a square shape in middle-right of canvas.
 * 2 horizontal black lines. In the top-right and bottom-right of canvas.
 * 3 line shape with horizontal on top, vertical in middle and horizontal bottom.
 * square line shape in middle-right of canvas.
 * 2 white triangle shapes mid-right canvas. left one pointing up and right down.
 * 5 horizontal interlocking and alternating white triangles in mid-right canvas.
 * 4 interlocking white triangles in 45 degree rotated square-shape.
 * 2 white rectangle shapes in mid-right canvas. Both 20×55.
 * 3 side-by-side white rectangles center rect is smaller in mid-right canvas.
 * Thick white l-shape with black outline mid-top-left of canvas.
 */s.default.prototype.beginShape=function(t){if(s.default._validateParameters("beginShape",arguments),this._renderer.isP3D){var r;(r=this._renderer).beginShape.apply(r,arguments)}else d=t===l.POINTS||t===l.LINES||t===l.TRIANGLES||t===l.TRIANGLE_FAN||t===l.TRIANGLE_STRIP||t===l.QUADS||t===l.QUAD_STRIP?t:null,m=[],f=[];return this},/**
 * Specifies vertex coordinates for Bezier curves. Each call to
 * bezierVertex() defines the position of two control points and
 * one anchor point of a Bezier curve, adding a new segment to a
 * line or shape. For WebGL mode bezierVertex() can be used in 2D
 * as well as 3D mode. 2D mode expects 6 parameters, while 3D mode
 * expects 9 parameters (including z coordinates).
 *
 * The first time bezierVertex() is used within a <a href="#/p5/beginShape">beginShape()</a>
 * call, it must be prefaced with a call to <a href="#/p5/vertex">vertex()</a> to set the first anchor
 * point. This function must be used between <a href="#/p5/beginShape">beginShape()</a> and <a href="#/p5/endShape">endShape()</a>
 * and only when there is no MODE or POINTS parameter specified to
 * <a href="#/p5/beginShape">beginShape()</a>.
 *
 * @method bezierVertex
 * @param  {Number} x2 x-coordinate for the first control point
 * @param  {Number} y2 y-coordinate for the first control point
 * @param  {Number} x3 x-coordinate for the second control point
 * @param  {Number} y3 y-coordinate for the second control point
 * @param  {Number} x4 x-coordinate for the anchor point
 * @param  {Number} y4 y-coordinate for the anchor point
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * noFill();
 * beginShape();
 * vertex(30, 20);
 * bezierVertex(80, 0, 80, 75, 30, 75);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * beginShape();
 * vertex(30, 20);
 * bezierVertex(80, 0, 80, 75, 30, 75);
 * bezierVertex(50, 80, 60, 25, 30, 20);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   setAttributes('antialias', true);
 * }
 * function draw() {
 *   orbitControl();
 *   background(50);
 *   strokeWeight(4);
 *   stroke(255);
 *   point(-25, 30);
 *   point(25, 30);
 *   point(25, -30);
 *   point(-25, -30);
 *
 *   strokeWeight(1);
 *   noFill();
 *
 *   beginShape();
 *   vertex(-25, 30);
 *   bezierVertex(25, 30, 25, -30, -25, -30);
 *   endShape();
 *
 *   beginShape();
 *   vertex(-25, 30, 20);
 *   bezierVertex(25, 30, 20, 25, -30, 20, -25, -30, 20);
 *   endShape();
 * }
 * </code>
 * </div>
 *
 * @alt
 * crescent-shaped line in middle of canvas. Points facing left.
 * white crescent shape in middle of canvas. Points facing left.
 * crescent shape in middle of canvas with another crescent shape on positive z-axis.
 *//**
 * @method bezierVertex
 * @param  {Number} x2
 * @param  {Number} y2
 * @param  {Number} z2 z-coordinate for the first control point (for WebGL mode)
 * @param  {Number} x3
 * @param  {Number} y3
 * @param  {Number} z3 z-coordinate for the second control point (for WebGL mode)
 * @param  {Number} x4
 * @param  {Number} y4
 * @param  {Number} z4 z-coordinate for the anchor point (for WebGL mode)
 * @chainable
 */s.default.prototype.bezierVertex=function(){for(var t,r=arguments.length,n=Array(r),o=0;o<r;o++)n[o]=arguments[o];if(s.default._validateParameters("bezierVertex",n),this._renderer.isP3D)(t=this._renderer).bezierVertex.apply(t,n);else if(0===m.length)s.default._friendlyError("vertex() must be used once before calling bezierVertex()","bezierVertex");else{h=!0;for(var a=[],l=0;l<n.length;l++)a[l]=n[l];a.isVert=!1,v?f.push(a):m.push(a)}return this},/**
 * Specifies vertex coordinates for curves. This function may only
 * be used between <a href="#/p5/beginShape">beginShape()</a> and <a href="#/p5/endShape">endShape()</a> and only when there
 * is no MODE parameter specified to <a href="#/p5/beginShape">beginShape()</a>.
 * For WebGL mode curveVertex() can be used in 2D as well as 3D mode.
 * 2D mode expects 2 parameters, while 3D mode expects 3 parameters.
 *
 * The first and last points in a series of curveVertex() lines will be used to
 * guide the beginning and end of the curve. A minimum of four
 * points is required to draw a tiny curve between the second and
 * third points. Adding a fifth point with curveVertex() will draw
 * the curve between the second, third, and fourth points. The
 * curveVertex() function is an implementation of Catmull-Rom
 * splines.
 *
 * @method curveVertex
 * @param {Number} x x-coordinate of the vertex
 * @param {Number} y y-coordinate of the vertex
 * @chainable
 * @example
 * <div>
 * <code>
 * strokeWeight(5);
 * point(84, 91);
 * point(68, 19);
 * point(21, 17);
 * point(32, 91);
 * strokeWeight(1);
 *
 * noFill();
 * beginShape();
 * curveVertex(84, 91);
 * curveVertex(84, 91);
 * curveVertex(68, 19);
 * curveVertex(21, 17);
 * curveVertex(32, 91);
 * curveVertex(32, 91);
 * endShape();
 * </code>
 * </div>
 *
 * @alt
 * Upside-down u-shape line, mid canvas. left point extends beyond canvas view.
 *//**
 * @method curveVertex
 * @param {Number} x
 * @param {Number} y
 * @param {Number} [z] z-coordinate of the vertex (for WebGL mode)
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   setAttributes('antialias', true);
 * }
 * function draw() {
 *   orbitControl();
 *   background(50);
 *   strokeWeight(4);
 *   stroke(255);
 *
 *   point(-25, 25);
 *   point(-25, 25);
 *   point(-25, -25);
 *   point(25, -25);
 *   point(25, 25);
 *   point(25, 25);
 *
 *   strokeWeight(1);
 *   noFill();
 *
 *   beginShape();
 *   curveVertex(-25, 25);
 *   curveVertex(-25, 25);
 *   curveVertex(-25, -25);
 *   curveVertex(25, -25);
 *   curveVertex(25, 25);
 *   curveVertex(25, 25);
 *   endShape();
 *
 *   beginShape();
 *   curveVertex(-25, 25, 20);
 *   curveVertex(-25, 25, 20);
 *   curveVertex(-25, -25, 20);
 *   curveVertex(25, -25, 20);
 *   curveVertex(25, 25, 20);
 *   curveVertex(25, 25, 20);
 *   endShape();
 * }
 * </code>
 * </div>
 *
 * @alt
 * Upside-down u-shape line, mid canvas with the same shape in positive z-axis.
 */s.default.prototype.curveVertex=function(){for(var t,r=arguments.length,n=Array(r),o=0;o<r;o++)n[o]=arguments[o];return s.default._validateParameters("curveVertex",n),this._renderer.isP3D?(t=this._renderer).curveVertex.apply(t,n):(y=!0,this.vertex(n[0],n[1])),this},/**
 * Use the <a href="#/p5/beginContour">beginContour()</a> and <a href="#/p5/endContour">endContour()</a> functions to create negative
 * shapes within shapes such as the center of the letter 'O'. <a href="#/p5/beginContour">beginContour()</a>
 * begins recording vertices for the shape and <a href="#/p5/endContour">endContour()</a> stops recording.
 * The vertices that define a negative shape must "wind" in the opposite
 * direction from the exterior shape. First draw vertices for the exterior
 * clockwise order, then for internal shapes, draw vertices
 * shape in counter-clockwise.
 *
 * These functions can only be used within a <a href="#/p5/beginShape">beginShape()</a>/<a href="#/p5/endShape">endShape()</a> pair and
 * transformations such as <a href="#/p5/translate">translate()</a>, <a href="#/p5/rotate">rotate()</a>, and <a href="#/p5/scale">scale()</a> do not work
 * within a <a href="#/p5/beginContour">beginContour()</a>/<a href="#/p5/endContour">endContour()</a> pair. It is also not possible to use
 * other shapes, such as <a href="#/p5/ellipse">ellipse()</a> or <a href="#/p5/rect">rect()</a> within.
 *
 * @method endContour
 * @chainable
 * @example
 * <div>
 * <code>
 * translate(50, 50);
 * stroke(255, 0, 0);
 * beginShape();
 * // Exterior part of shape, clockwise winding
 * vertex(-40, -40);
 * vertex(40, -40);
 * vertex(40, 40);
 * vertex(-40, 40);
 * // Interior part of shape, counter-clockwise winding
 * beginContour();
 * vertex(-20, -20);
 * vertex(-20, 20);
 * vertex(20, 20);
 * vertex(20, -20);
 * endContour();
 * endShape(CLOSE);
 * </code>
 * </div>
 *
 * @alt
 * white rect and smaller grey rect with red outlines in center of canvas.
 */s.default.prototype.endContour=function(){var t=f[0].slice();// copy all data
t.isVert=f[0].isVert,t.moveTo=!1,f.push(t),b&&(m.push(m[0]),b=!1);for(var r=0;r<f.length;r++)m.push(f[r]);return this},/**
 * The <a href="#/p5/endShape">endShape()</a> function is the companion to <a href="#/p5/beginShape">beginShape()</a> and may only be
 * called after <a href="#/p5/beginShape">beginShape()</a>. When <a href="#/p5/endshape">endShape()</a> is called, all of the image
 * data defined since the previous call to <a href="#/p5/beginShape">beginShape()</a> is written into the image
 * buffer. The constant CLOSE as the value for the `mode` parameter to close
 * the shape (to connect the beginning and the end).
 *
 * @method endShape
 * @param  {Constant} [mode] use CLOSE to close the shape
 * @chainable
 * @example
 * <div>
 * <code>
 * noFill();
 *
 * beginShape();
 * vertex(20, 20);
 * vertex(45, 20);
 * vertex(45, 80);
 * endShape(CLOSE);
 *
 * beginShape();
 * vertex(50, 20);
 * vertex(75, 20);
 * vertex(75, 80);
 * endShape();
 * </code>
 * </div>
 *
 * @alt
 * Triangle line shape with smallest interior angle on bottom and upside-down L.
 */s.default.prototype.endShape=function(t){if(s.default._validateParameters("endShape",arguments),this._renderer.isP3D)this._renderer.endShape(t,y,h,g,v,d);else{if(0===m.length||!this._renderer._doStroke&&!this._renderer._doFill)return this;var r=t===l.CLOSE;// if the shape is closed, the first element is also the last element
r&&!v&&m.push(m[0]),this._renderer.endShape(t,m,y,h,g,v,d),y=!1,h=!1,g=!1,v=!1,b=!0,r&&m.pop()}return this},/**
 * Specifies vertex coordinates for quadratic Bezier curves. Each call to
 * quadraticVertex() defines the position of one control points and one
 * anchor point of a Bezier curve, adding a new segment to a line or shape.
 * The first time quadraticVertex() is used within a <a href="#/p5/beginShape">beginShape()</a> call, it
 * must be prefaced with a call to <a href="#/p5/vertex">vertex()</a> to set the first anchor point.
 * For WebGL mode quadraticVertex() can be used in 2D as well as 3D mode.
 * 2D mode expects 4 parameters, while 3D mode expects 6 parameters
 * (including z coordinates).
 *
 * This function must be used between <a href="#/p5/beginShape">beginShape()</a> and <a href="#/p5/endShape">endShape()</a>
 * and only when there is no MODE or POINTS parameter specified to
 * <a href="#/p5/beginShape">beginShape()</a>.
 *
 * @method quadraticVertex
 * @param  {Number} cx x-coordinate for the control point
 * @param  {Number} cy y-coordinate for the control point
 * @param  {Number} x3 x-coordinate for the anchor point
 * @param  {Number} y3 y-coordinate for the anchor point
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * strokeWeight(5);
 * point(20, 20);
 * point(80, 20);
 * point(50, 50);
 *
 * noFill();
 * strokeWeight(1);
 * beginShape();
 * vertex(20, 20);
 * quadraticVertex(80, 20, 50, 50);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * strokeWeight(5);
 * point(20, 20);
 * point(80, 20);
 * point(50, 50);
 *
 * point(20, 80);
 * point(80, 80);
 * point(80, 60);
 *
 * noFill();
 * strokeWeight(1);
 * beginShape();
 * vertex(20, 20);
 * quadraticVertex(80, 20, 50, 50);
 * quadraticVertex(20, 80, 80, 80);
 * vertex(80, 60);
 * endShape();
 * </code>
 * </div>
 *
 * @alt
 * arched-shaped black line with 4 pixel thick stroke weight.
 * backwards s-shaped black line with 4 pixel thick stroke weight.
 *//**
 * @method quadraticVertex
 * @param  {Number} cx
 * @param  {Number} cy
 * @param  {Number} cz z-coordinate for the control point (for WebGL mode)
 * @param  {Number} x3
 * @param  {Number} y3
 * @param  {Number} z3 z-coordinate for the anchor point (for WebGL mode)
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   setAttributes('antialias', true);
 * }
 * function draw() {
 *   orbitControl();
 *   background(50);
 *   strokeWeight(4);
 *   stroke(255);
 *
 *   point(-35, -35);
 *   point(35, -35);
 *   point(0, 0);
 *   point(-35, 35);
 *   point(35, 35);
 *   point(35, 10);
 *
 *   strokeWeight(1);
 *   noFill();
 *
 *   beginShape();
 *   vertex(-35, -35);
 *   quadraticVertex(35, -35, 0, 0);
 *   quadraticVertex(-35, 35, 35, 35);
 *   vertex(35, 10);
 *   endShape();
 *
 *   beginShape();
 *   vertex(-35, -35, 20);
 *   quadraticVertex(35, -35, 20, 0, 0, 20);
 *   quadraticVertex(-35, 35, 20, 35, 35, 20);
 *   vertex(35, 10, 20);
 *   endShape();
 * }
 * </code>
 * </div>
 *
 * @alt
 * backwards s-shaped black line with the same s-shaped line in positive z-axis.
 */s.default.prototype.quadraticVertex=function(){for(var t,r=arguments.length,n=Array(r),o=0;o<r;o++)n[o]=arguments[o];if(s.default._validateParameters("quadraticVertex",n),this._renderer.isP3D)(t=this._renderer).quadraticVertex.apply(t,n);else{//if we're drawing a contour, put the points into an
// array for inside drawing
if(this._contourInited){var a={};return a.x=n[0],a.y=n[1],a.x3=n[2],a.y3=n[3],a.type=l.QUADRATIC,this._contourVertices.push(a),this}if(m.length>0){g=!0;for(var c=[],u=0;u<n.length;u++)c[u]=n[u];c.isVert=!1,v?f.push(c):m.push(c)}else s.default._friendlyError("vertex() must be used once before calling quadraticVertex()","quadraticVertex")}return this},/**
 * All shapes are constructed by connecting a series of vertices. <a href="#/p5/vertex">vertex()</a>
 * is used to specify the vertex coordinates for points, lines, triangles,
 * quads, and polygons. It is used exclusively within the <a href="#/p5/beginShape">beginShape()</a> and
 * <a href="#/p5/endShape">endShape()</a> functions.
 *
 * @method vertex
 * @param  {Number} x x-coordinate of the vertex
 * @param  {Number} y y-coordinate of the vertex
 * @chainable
 * @example
 * <div>
 * <code>
 * strokeWeight(3);
 * beginShape(POINTS);
 * vertex(30, 20);
 * vertex(85, 20);
 * vertex(85, 75);
 * vertex(30, 75);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * createCanvas(100, 100, WEBGL);
 * background(240, 240, 240);
 * fill(237, 34, 93);
 * noStroke();
 * beginShape();
 * vertex(0, 35);
 * vertex(35, 0);
 * vertex(0, -35);
 * vertex(-35, 0);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * createCanvas(100, 100, WEBGL);
 * background(240, 240, 240);
 * fill(237, 34, 93);
 * noStroke();
 * beginShape();
 * vertex(-10, 10);
 * vertex(0, 35);
 * vertex(10, 10);
 * vertex(35, 0);
 * vertex(10, -8);
 * vertex(0, -35);
 * vertex(-10, -8);
 * vertex(-35, 0);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * strokeWeight(3);
 * stroke(237, 34, 93);
 * beginShape(LINES);
 * vertex(10, 35);
 * vertex(90, 35);
 * vertex(10, 65);
 * vertex(90, 65);
 * vertex(35, 10);
 * vertex(35, 90);
 * vertex(65, 10);
 * vertex(65, 90);
 * endShape();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // Click to change the number of sides.
 * // In WebGL mode, custom shapes will only
 * // display hollow fill sections when
 * // all calls to vertex() use the same z-value.
 *
 * let sides = 3;
 * let angle, px, py;
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   setAttributes('antialias', true);
 *   fill(237, 34, 93);
 *   strokeWeight(3);
 * }
 *
 * function draw() {
 *   background(200);
 *   rotateX(frameCount * 0.01);
 *   rotateZ(frameCount * 0.01);
 *   ngon(sides, 0, 0, 80);
 * }
 *
 * function mouseClicked() {
 *   if (sides > 6) {
 *     sides = 3;
 *   } else {
 *     sides++;
 *   }
 * }
 *
 * function ngon(n, x, y, d) {
 *   beginShape(TESS);
 *   for (let i = 0; i < n + 1; i++) {
 *     angle = TWO_PI / n * i;
 *     px = x + sin(angle) * d / 2;
 *     py = y - cos(angle) * d / 2;
 *     vertex(px, py, 0);
 *   }
 *   for (let i = 0; i < n + 1; i++) {
 *     angle = TWO_PI / n * i;
 *     px = x + sin(angle) * d / 4;
 *     py = y - cos(angle) * d / 4;
 *     vertex(px, py, 0);
 *   }
 *   endShape();
 * }
 * </code>
 * </div>
 * @alt
 * 4 black points in a square shape in middle-right of canvas.
 * 4 points making a diamond shape.
 * 8 points making a star.
 * 8 points making 4 lines.
 * A rotating 3D shape with a hollow section in the middle.
 *//**
 * @method vertex
 * @param  {Number} x
 * @param  {Number} y
 * @param  {Number} [z]   z-coordinate of the vertex.
 *                       Defaults to 0 if not specified.
 * @chainable
 *//**
 * @method vertex
 * @param  {Number} x
 * @param  {Number} y
 * @param  {Number} [z]
 * @param  {Number} [u]   the vertex's texture u-coordinate
 * @param  {Number} [v]   the vertex's texture v-coordinate
 * @chainable
 */s.default.prototype.vertex=function(t,r,n,o,a){if(this._renderer.isP3D){var s;(s=this._renderer).vertex.apply(s,arguments)}else{var l=[];l.isVert=!0,l[0]=t,l[1]=r,l[2]=0,l[3]=0,l[4]=0,l[5]=this._renderer._getFill(),l[6]=this._renderer._getStroke(),n&&(l.moveTo=n),v?(0===f.length&&(l.moveTo=!0),f.push(l)):m.push(l)}return this},/**
 * Sets the 3d vertex normal to use for subsequent vertices drawn with
 * <a href="#/p5/vertex">vertex()</a>. A normal is a vector that is generally
 * nearly perpendicular to a shape's surface which controls how much light will
 * be reflected from that part of the surface.
 *
 * @method normal
 * @param  {Vector} vector A p5.Vector representing the vertex normal.
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   noStroke();
 * }
 *
 * function draw() {
 *   background(255);
 *   rotateY(frameCount / 100);
 *   normalMaterial();
 *   beginShape(TRIANGLE_STRIP);
 *   normal(-0.4, 0.4, 0.8);
 *   vertex(-30, 30, 0);
 *
 *   normal(0, 0, 1);
 *   vertex(-30, -30, 30);
 *   vertex(30, 30, 30);
 *
 *   normal(0.4, -0.4, 0.8);
 *   vertex(30, -30, 0);
 *   endShape();
 * }
 * </code>
 * </div>
 *//**
 * @method normal
 * @param  {Number} x The x component of the vertex normal.
 * @param  {Number} y The y component of the vertex normal.
 * @param  {Number} z The z component of the vertex normal.
 * @chainable
 */s.default.prototype.normal=function(t,r,n){var o;return this._assert3d("normal"),s.default._validateParameters("normal",arguments),(o=this._renderer).normal.apply(o,arguments),this};var x=s.default;n.default=x},{"../constants":284,"../main":296,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.slice":182,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],307:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return c(t)||l(t)||s()}function s(){throw TypeError("Invalid attempt to spread non-iterable instance")}function l(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function c(t){if(Array.isArray(t)){for(var r=0,n=Array(t.length);r<t.length;r++)n[r]=t[r];return n}}function u(t){return(u="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}// requestAnim shim layer by Paul Irish
t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.assign"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.typed-array.uint8-clamped-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.assign"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.typed-array.uint8-clamped-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/web.dom-collections.iterator"),// http://paulirish.com/2011/requestanimationframe-for-smart-animating/
// http://my.opera.com/emoller/blog/2011/12/20/
// requestanimationframe-for-smart-er-animating
// requestAnimationFrame polyfill by Erik Möller
// fixes from Paul Irish and Tino Zijdel
window.requestAnimationFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t,r){// should '60' here be framerate?
window.setTimeout(t,1e3/60)}}(),/**
 * shim for Uint8ClampedArray.slice
 * (allows arrayCopy to work with pixels[])
 * with thanks to http://halfpapstudios.com/blog/tag/html5-canvas/
 * Enumerable set to false to protect for...in from
 * Uint8ClampedArray.prototype pollution.
 */function(){"undefined"==typeof Uint8ClampedArray||Uint8ClampedArray.prototype.slice||Object.defineProperty(Uint8ClampedArray.prototype,"slice",{value:Array.prototype.slice,writable:!0,configurable:!0,enumerable:!1})}(),/**
 * this is implementation of Object.assign() which is unavailable in
 * IE11 and (non-Chrome) Android browsers.
 * The assign() method is used to copy the values of all enumerable
 * own properties from one or more source objects to a target object.
 * It will return the target object.
 * Modified from https://github.com/ljharb/object.assign
 */function(){if(!Object.assign){var t=Object.keys,r=Object.defineProperty,n=function(t){return null!=t},o="function"==typeof Symbol&&"symbol"===u(Symbol()),s=Object.prototype.propertyIsEnumerable,l=function(t){return function(r){return s.call(t,r)}};r(Object,"assign",{value:function(r,s){if(!n(r))throw TypeError("target must be an object");var c,u,p,d,m,f=Object(r);for(c=1;c<arguments.length;++c)for(u=Object(arguments[c]),d=t(u),o&&Object.getOwnPropertySymbols&&(m=d).push.apply(m,a(Object.getOwnPropertySymbols(u).filter(l(u)))),p=0;p<d.length;++p)f[d[p]]=u[d[p]];return f},configurable:!0,enumerable:!1,writable:!0})}}()},{"core-js/modules/es.array.filter":173,"core-js/modules/es.array.from":175,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.slice":182,"core-js/modules/es.object.assign":192,"core-js/modules/es.object.keys":197,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.typed-array.copy-within":221,"core-js/modules/es.typed-array.every":222,"core-js/modules/es.typed-array.fill":223,"core-js/modules/es.typed-array.filter":224,"core-js/modules/es.typed-array.find":226,"core-js/modules/es.typed-array.find-index":225,"core-js/modules/es.typed-array.for-each":229,"core-js/modules/es.typed-array.includes":230,"core-js/modules/es.typed-array.index-of":231,"core-js/modules/es.typed-array.iterator":234,"core-js/modules/es.typed-array.join":235,"core-js/modules/es.typed-array.last-index-of":236,"core-js/modules/es.typed-array.map":237,"core-js/modules/es.typed-array.reduce":239,"core-js/modules/es.typed-array.reduce-right":238,"core-js/modules/es.typed-array.reverse":240,"core-js/modules/es.typed-array.set":241,"core-js/modules/es.typed-array.slice":242,"core-js/modules/es.typed-array.some":243,"core-js/modules/es.typed-array.sort":244,"core-js/modules/es.typed-array.subarray":245,"core-js/modules/es.typed-array.to-locale-string":246,"core-js/modules/es.typed-array.to-string":247,"core-js/modules/es.typed-array.uint8-clamped-array":251,"core-js/modules/web.dom-collections.iterator":254}],308:[function(t,r,n){t("core-js/modules/es.array.for-each"),t("core-js/modules/es.object.assign"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.object.assign"),t("core-js/modules/web.dom-collections.for-each"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("./main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Structure
 * @submodule Structure
 * @for p5
 * @requires core
 *//**
 * Stops p5.js from continuously executing the code within <a href="#/p5/draw">draw()</a>.
 * If <a href="#/p5/loop">loop()</a> is called, the code in <a href="#/p5/draw">draw()</a>
 * begins to run continuously again. If using <a href="#/p5/noLoop">noLoop()</a>
 * in <a href="#/p5/setup">setup()</a>, it should be the last line inside the block.
 *
 * When <a href="#/p5/noLoop">noLoop()</a> is used, it's not possible to manipulate
 * or access the screen inside event handling functions such as
 * <a href="#/p5/mousePressed">mousePressed()</a> or
 * <a href="#/p5/keyPressed">keyPressed()</a>. Instead, use those functions to
 * call <a href="#/p5/redraw">redraw()</a> or <a href="#/p5/loop">loop()</a>,
 * which will run <a href="#/p5/draw">draw()</a>, which can update the screen
 * properly. This means that when <a href="#/p5/noLoop">noLoop()</a> has been
 * called, no drawing can happen, and functions like <a href="#/p5/saveFrames">saveFrames()</a>
 * or <a href="#/p5/loadPixels">loadPixels()</a> may not be used.
 *
 * Note that if the sketch is resized, <a href="#/p5/redraw">redraw()</a> will
 * be called to update the sketch, even after <a href="#/p5/noLoop">noLoop()</a>
 * has been specified. Otherwise, the sketch would enter an odd state until
 * <a href="#/p5/loop">loop()</a> was called.
 *
 * Use <a href="#/p5/isLooping">isLooping()</a> to check the current state of <a href="#/p5/loop">loop()</a>.
 *
 * @method noLoop
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100);
 *   background(200);
 *   noLoop();
 * }

 * function draw() {
 *   line(10, 10, 90, 90);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let x = 0;
 * function setup() {
 *   createCanvas(100, 100);
 * }
 *
 * function draw() {
 *   background(204);
 *   x = x + 0.1;
 *   if (x > width) {
 *     x = 0;
 *   }
 *   line(x, 0, x, height);
 * }
 *
 * function mousePressed() {
 *   noLoop();
 * }
 *
 * function mouseReleased() {
 *   loop();
 * }
 * </code>
 * </div>
 *
 * @alt
 * 113 pixel long line extending from top-left to bottom right of canvas.
 * horizontal line moves slowly from left. Loops but stops on mouse press.
 */o.default.prototype.noLoop=function(){this._loop=!1},/**
 * By default, p5.js loops through draw() continuously, executing the code within
 * it. However, the <a href="#/p5/draw">draw()</a> loop may be stopped by calling
 * <a href="#/p5/noLoop">noLoop()</a>. In that case, the <a href="#/p5/draw">draw()</a>
 * loop can be resumed with loop().
 *
 * Avoid calling loop() from inside setup().
 *
 * Use <a href="#/p5/isLooping">isLooping()</a> to check the current state of <a href="#/p5/loop">loop()</a>.
 *
 * @method loop
 * @example
 * <div>
 * <code>
 * let x = 0;
 * function setup() {
 *   createCanvas(100, 100);
 *   noLoop();
 * }
 *
 * function draw() {
 *   background(204);
 *   x = x + 0.1;
 *   if (x > width) {
 *     x = 0;
 *   }
 *   line(x, 0, x, height);
 * }
 *
 * function mousePressed() {
 *   loop();
 * }
 *
 * function mouseReleased() {
 *   noLoop();
 * }
 * </code>
 * </div>
 *
 * @alt
 * horizontal line moves slowly from left. Loops but stops on mouse press.
 */o.default.prototype.loop=function(){!this._loop&&(this._loop=!0,this._setupDone&&this._draw())},/**
 * By default, p5.js loops through <a href="#/p5/draw">draw()</a> continuously,
 * executing the code within it. If the sketch is stopped with
 * <a href="#/p5/noLoop">noLoop()</a> or resumed with <a href="#/p5/loop">loop()</a>,
 * isLooping() returns the current state for use within custom event handlers.
 *
 * @method isLooping
 * @returns {boolean}
 * @example
 * <div>
 * <code>
 * let checkbox, button, colBG, colFill;
 *
 * function setup() {
 *   createCanvas(100, 100);
 *
 *   button = createButton('Colorize if loop()');
 *   button.position(0, 120);
 *   button.mousePressed(changeBG);
 *
 *   checkbox = createCheckbox('loop()', true);
 *   checkbox.changed(checkLoop);
 *
 *   colBG = color(0);
 *   colFill = color(255);
 * }
 *
 * function changeBG() {
 *   if (isLooping()) {
 *     colBG = color(random(255), random(255), random(255));
 *     colFill = color(random(255), random(255), random(255));
 *   }
 * }
 *
 * function checkLoop() {
 *   if (this.checked()) {
 *     loop();
 *   } else {
 *     noLoop();
 *   }
 * }
 *
 * function draw() {
 *   background(colBG);
 *   fill(colFill);
 *   ellipse(frameCount % width, height / 2, 50);
 * }
 * </code>
 * </div>
 *
 * @alt
 * Ellipse moves slowly from left. Checkbox toggles loop()/noLoop().
 * Button colorizes sketch if isLooping().
 *
 */o.default.prototype.isLooping=function(){return this._loop},/**
 * The <a href="#/p5/push">push()</a> function saves the current drawing style
 * settings and transformations, while <a href="#/p5/pop">pop()</a> restores these
 * settings. Note that these functions are always used together. They allow you to
 * change the style and transformation settings and later return to what you had.
 * When a new state is started with <a href="#/p5/push">push()</a>, it builds on
 * the current style and transform information. The <a href="#/p5/push">push()</a>
 * and <a href="#/p5/pop">pop()</a> functions can be embedded to provide more
 * control. (See the second example for a demonstration.)
 *
 * <a href="#/p5/push">push()</a> stores information related to the current transformation state
 * and style settings controlled by the following functions:
 * <a href="#/p5/fill">fill()</a>,
 * <a href="#/p5/noFill">noFill()</a>,
 * <a href="#/p5/noStroke">noStroke()</a>,
 * <a href="#/p5/stroke">stroke()</a>,
 * <a href="#/p5/tint">tint()</a>,
 * <a href="#/p5/noTint">noTint()</a>,
 * <a href="#/p5/strokeWeight">strokeWeight()</a>,
 * <a href="#/p5/strokeCap">strokeCap()</a>,
 * <a href="#/p5/strokeJoin">strokeJoin()</a>,
 * <a href="#/p5/imageMode">imageMode()</a>,
 * <a href="#/p5/rectMode">rectMode()</a>,
 * <a href="#/p5/ellipseMode">ellipseMode()</a>,
 * <a href="#/p5/colorMode">colorMode()</a>,
 * <a href="#/p5/textAlign">textAlign()</a>,
 * <a href="#/p5/textFont">textFont()</a>,
 * <a href="#/p5/textSize">textSize()</a>,
 * <a href="#/p5/textLeading">textLeading()</a>,
 * <a href="#/p5/applyMatrix">applyMatrix()</a>,
 * <a href="#/p5/resetMatrix">resetMatrix()</a>,
 * <a href="#/p5/rotate">rotate()</a>,
 * <a href="#/p5/scale">scale()</a>,
 * <a href="#/p5/shearX">shearX()</a>,
 * <a href="#/p5/shearY">shearY()</a>,
 * <a href="#/p5/translate">translate()</a>,
 * <a href="#/p5/noiseSeed">noiseSeed()</a>.
 *
 * In WEBGL mode additional style settings are stored. These are controlled by the
 * following functions: <a href="#/p5/setCamera">setCamera()</a>,
 * <a href="#/p5/ambientLight">ambientLight()</a>,
 * <a href="#/p5/directionalLight">directionalLight()</a>,
 * <a href="#/p5/pointLight">pointLight()</a>, <a href="#/p5/texture">texture()</a>,
 * <a href="#/p5/specularMaterial">specularMaterial()</a>,
 * <a href="#/p5/shininess">shininess()</a>,
 * <a href="#/p5/normalMaterial">normalMaterial()</a>
 * and <a href="#/p5/shader">shader()</a>.
 *
 * @method push
 * @example
 * <div>
 * <code>
 * ellipse(0, 50, 33, 33); // Left circle
 *
 * push(); // Start a new drawing state
 * strokeWeight(10);
 * fill(204, 153, 0);
 * translate(50, 0);
 * ellipse(0, 50, 33, 33); // Middle circle
 * pop(); // Restore original state
 *
 * ellipse(100, 50, 33, 33); // Right circle
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * ellipse(0, 50, 33, 33); // Left circle
 *
 * push(); // Start a new drawing state
 * strokeWeight(10);
 * fill(204, 153, 0);
 * ellipse(33, 50, 33, 33); // Left-middle circle
 *
 * push(); // Start another new drawing state
 * stroke(0, 102, 153);
 * ellipse(66, 50, 33, 33); // Right-middle circle
 * pop(); // Restore previous state
 *
 * pop(); // Restore original state
 *
 * ellipse(100, 50, 33, 33); // Right circle
 * </code>
 * </div>
 *
 * @alt
 * Gold ellipse + thick black outline @center 2 white ellipses on left and right.
 * 2 Gold ellipses left black right blue stroke. 2 white ellipses on left+right.
 */o.default.prototype.push=function(){this._styles.push({props:{_colorMode:this._colorMode},renderer:this._renderer.push()})},/**
 * The <a href="#/p5/push">push()</a> function saves the current drawing style
 * settings and transformations, while <a href="#/p5/pop">pop()</a> restores
 * these settings. Note that these functions are always used together. They allow
 * you to change the style and transformation settings and later return to what
 * you had. When a new state is started with <a href="#/p5/push">push()</a>, it
 * builds on the current style and transform information. The <a href="#/p5/push">push()</a>
 * and <a href="#/p5/pop">pop()</a> functions can be embedded to provide more
 * control. (See the second example for a demonstration.)
 *
 * <a href="#/p5/push">push()</a> stores information related to the current transformation state
 * and style settings controlled by the following functions:
 * <a href="#/p5/fill">fill()</a>,
 * <a href="#/p5/noFill">noFill()</a>,
 * <a href="#/p5/noStroke">noStroke()</a>,
 * <a href="#/p5/stroke">stroke()</a>,
 * <a href="#/p5/tint">tint()</a>,
 * <a href="#/p5/noTint">noTint()</a>,
 * <a href="#/p5/strokeWeight">strokeWeight()</a>,
 * <a href="#/p5/strokeCap">strokeCap()</a>,
 * <a href="#/p5/strokeJoin">strokeJoin()</a>,
 * <a href="#/p5/imageMode">imageMode()</a>,
 * <a href="#/p5/rectMode">rectMode()</a>,
 * <a href="#/p5/ellipseMode">ellipseMode()</a>,
 * <a href="#/p5/colorMode">colorMode()</a>,
 * <a href="#/p5/textAlign">textAlign()</a>,
 * <a href="#/p5/textFont">textFont()</a>,
 * <a href="#/p5/textSize">textSize()</a>,
 * <a href="#/p5/textLeading">textLeading()</a>,
 * <a href="#/p5/applyMatrix">applyMatrix()</a>,
 * <a href="#/p5/resetMatrix">resetMatrix()</a>,
 * <a href="#/p5/rotate">rotate()</a>,
 * <a href="#/p5/scale">scale()</a>,
 * <a href="#/p5/shearX">shearX()</a>,
 * <a href="#/p5/shearY">shearY()</a>,
 * <a href="#/p5/translate">translate()</a>,
 * <a href="#/p5/noiseSeed">noiseSeed()</a>.
 *
 * In WEBGL mode additional style settings are stored. These are controlled by
 * the following functions:
 * <a href="#/p5/setCamera">setCamera()</a>,
 * <a href="#/p5/ambientLight">ambientLight()</a>,
 * <a href="#/p5/directionalLight">directionalLight()</a>,
 * <a href="#/p5/pointLight">pointLight()</a>,
 * <a href="#/p5/texture">texture()</a>,
 * <a href="#/p5/specularMaterial">specularMaterial()</a>,
 * <a href="#/p5/shininess">shininess()</a>,
 * <a href="#/p5/normalMaterial">normalMaterial()</a> and
 * <a href="#/p5/shader">shader()</a>.
 *
 * @method pop
 * @example
 * <div>
 * <code>
 * ellipse(0, 50, 33, 33); // Left circle
 *
 * push(); // Start a new drawing state
 * translate(50, 0);
 * strokeWeight(10);
 * fill(204, 153, 0);
 * ellipse(0, 50, 33, 33); // Middle circle
 * pop(); // Restore original state
 *
 * ellipse(100, 50, 33, 33); // Right circle
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * ellipse(0, 50, 33, 33); // Left circle
 *
 * push(); // Start a new drawing state
 * strokeWeight(10);
 * fill(204, 153, 0);
 * ellipse(33, 50, 33, 33); // Left-middle circle
 *
 * push(); // Start another new drawing state
 * stroke(0, 102, 153);
 * ellipse(66, 50, 33, 33); // Right-middle circle
 * pop(); // Restore previous state
 *
 * pop(); // Restore original state
 *
 * ellipse(100, 50, 33, 33); // Right circle
 * </code>
 * </div>
 *
 * @alt
 * Gold ellipse + thick black outline @center 2 white ellipses on left and right.
 * 2 Gold ellipses left black right blue stroke. 2 white ellipses on left+right.
 */o.default.prototype.pop=function(){var t=this._styles.pop();t?(this._renderer.pop(t.renderer),Object.assign(this,t.props)):console.warn("pop() was called without matching push()")},/**
 * Executes the code within <a href="#/p5/draw">draw()</a> one time. This
 * function allows the program to update the display window only when necessary,
 * for example when an event registered by <a href="#/p5/mousePressed">mousePressed()</a>
 * or <a href="#/p5/keyPressed">keyPressed()</a> occurs.
 *
 * In structuring a program, it only makes sense to call <a href="#/p5/redraw">redraw()</a>
 * within events such as <a href="#/p5/mousePressed">mousePressed()</a>. This
 * is because <a href="#/p5/redraw">redraw()</a> does not run
 * <a href="#/p5/draw">draw()</a> immediately (it only sets a flag that indicates
 * an update is needed).
 *
 * The <a href="#/p5/redraw">redraw()</a> function does not work properly when
 * called inside <a href="#/p5/draw">draw()</a>.To enable/disable animations,
 * use <a href="#/p5/loop">loop()</a> and <a href="#/p5/noLoop">noLoop()</a>.
 *
 * In addition you can set the number of redraws per method call. Just
 * add an integer as single parameter for the number of redraws.
 *
 * @method redraw
 * @param  {Integer} [n] Redraw for n-times. The default value is 1.
 * @example
 * <div><code>
 * let x = 0;
 *
 * function setup() {
 *   createCanvas(100, 100);
 *   noLoop();
 * }
 *
 * function draw() {
 *   background(204);
 *   line(x, 0, x, height);
 * }
 *
 * function mousePressed() {
 *   x += 1;
 *   redraw();
 * }
 * </code>
 * </div>
 *
 * <div class='norender'>
 * <code>
 * let x = 0;
 *
 * function setup() {
 *   createCanvas(100, 100);
 *   noLoop();
 * }
 *
 * function draw() {
 *   background(204);
 *   x += 1;
 *   line(x, 0, x, height);
 * }
 *
 * function mousePressed() {
 *   redraw(5);
 * }
 * </code>
 * </div>
 *
 * @alt
 * black line on far left of canvas
 * black line on far left of canvas
 */o.default.prototype.redraw=function(t){if(!this._inUserDraw&&this._setupDone){var r=parseInt(t);(isNaN(r)||r<1)&&(r=1);var n=this._isGlobal?window:this;if("function"==typeof n.draw){void 0===n.setup&&n.scale(n._pixelDensity,n._pixelDensity);for(var o=function(t){t.call(n)},a=0;a<r;a++){n.resetMatrix(),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._updateAccsOutput(),n._renderer.isP3D&&n._renderer._update(),n._setProperty("frameCount",n.frameCount+1),n._registeredMethods.pre.forEach(o),this._inUserDraw=!0;try{n.draw()}finally{this._inUserDraw=!1}n._registeredMethods.post.forEach(o)}}}};/**
 * The `p5()` constructor enables you to activate "instance mode" instead of normal
 * "global mode". This is an advanced topic. A short description and example is
 * included below. Please see
 * <a target="blank" href="https://www.youtube.com/watch?v=Su792jEauZg&feature=youtu.be">
 * Dan Shiffman's Coding Train video tutorial</a> or this
 * <a target="blank" href="https://github.com/processing/p5.js/wiki/p5.js-overview#instantiation--namespace">tutorial page</a>
 * for more info.
 *
 * By default, all p5.js functions are in the global namespace (i.e. bound to the window
 * object), meaning you can call them simply `ellipse()`, `fill()`, etc. However, this
 * might be inconvenient if you are mixing with other JS libraries (synchronously or
 * asynchronously) or writing long programs of your own. p5.js currently supports a
 * way around this problem called "instance mode". In instance mode, all p5 functions
 * are bound up in a single variable instead of polluting your global namespace.
 *
 * Optionally, you can specify a default container for the canvas and any other elements
 * to append to with a second argument. You can give the ID of an element in your html,
 * or an html node itself.
 *
 * Note that creating instances like this also allows you to have more than one p5 sketch on
 * a single web page, as they will each be wrapped up with their own set up variables. Of
 * course, you could also use iframes to have multiple sketches in global mode.
 *
 * @method p5
 * @param {Object} sketch a function containing a p5.js sketch
 * @param {String|Object} node ID or pointer to HTML DOM node to contain sketch in
 * @example
 * <div class='norender'><code>
 * const s = p => {
 *   let x = 100;
 *   let y = 100;
 *
 *   p.setup = function() {
 *     p.createCanvas(700, 410);
 *   };
 *
 *   p.draw = function() {
 *     p.background(0);
 *     p.fill(255);
 *     p.rect(x, y, 50, 50);
 *   };
 * };
 *
 * new p5(s); // invoke p5
 * </code></div>
 *
 * @alt
 * white rectangle on black background
 */var s=o.default;n.default=s},{"./main":296,"core-js/modules/es.array.for-each":174,"core-js/modules/es.object.assign":192,"core-js/modules/web.dom-collections.for-each":253}],309:[function(t,r,n){t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("./main"));function a(t){return t&&t.__esModule?t:{default:t}}function s(t){return u(t)||c(t)||l()}function l(){throw TypeError("Invalid attempt to spread non-iterable instance")}function c(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function u(t){if(Array.isArray(t)){for(var r=0,n=Array(t.length);r<t.length;r++)n[r]=t[r];return n}}/**
 * Multiplies the current matrix by the one specified through the parameters.
 * This is a powerful operation that can perform the equivalent of translate,
 * scale, shear and rotate all at once. You can learn more about transformation
 * matrices on <a href="https://en.wikipedia.org/wiki/Transformation_matrix">
 * Wikipedia</a>.
 *
 * The naming of the arguments here follows the naming of the <a href=
 * "https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-transform">
 * WHATWG specification</a> and corresponds to a
 * transformation matrix of the
 * form:
 *
 * > <img style="max-width: 150px" src="assets/transformation-matrix.png"
 * alt="The transformation matrix used when applyMatrix is called"/>
 *
 * <img style="max-width: 300px" src="assets/transformation-matrix-4-4.png"
 * alt="The transformation matrix used when applyMatrix is called with 4x4 matrix"/>
 *
 * @method applyMatrix
 * @param  {Array} arr an array of numbers - should be 6 or 16 length (2×3 or 4×4 matrix values)
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   frameRate(10);
 *   rectMode(CENTER);
 * }
 *
 * function draw() {
 *   let step = frameCount % 20;
 *   background(200);
 *   // Equivalent to translate(x, y);
 *   applyMatrix(1, 0, 0, 1, 40 + step, 50);
 *   rect(0, 0, 50, 50);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * function setup() {
 *   frameRate(10);
 *   rectMode(CENTER);
 * }
 *
 * function draw() {
 *   let step = frameCount % 20;
 *   background(200);
 *   translate(50, 50);
 *   // Equivalent to scale(x, y);
 *   applyMatrix(1 / step, 0, 0, 1 / step, 0, 0);
 *   rect(0, 0, 50, 50);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * function setup() {
 *   frameRate(10);
 *   rectMode(CENTER);
 * }
 *
 * function draw() {
 *   let step = frameCount % 20;
 *   let angle = map(step, 0, 20, 0, TWO_PI);
 *   let cos_a = cos(angle);
 *   let sin_a = sin(angle);
 *   background(200);
 *   translate(50, 50);
 *   // Equivalent to rotate(angle);
 *   applyMatrix(cos_a, sin_a, -sin_a, cos_a, 0, 0);
 *   rect(0, 0, 50, 50);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * function setup() {
 *   frameRate(10);
 *   rectMode(CENTER);
 * }
 *
 * function draw() {
 *   let step = frameCount % 20;
 *   let angle = map(step, 0, 20, -PI / 4, PI / 4);
 *   background(200);
 *   translate(50, 50);
 *   // equivalent to shearX(angle);
 *   let shear_factor = 1 / tan(PI / 2 - angle);
 *   applyMatrix(1, 0, shear_factor, 1, 0, 0);
 *   rect(0, 0, 50, 50);
 * }
 * </code>
 * </div>
 *
 * <div modernizr='webgl'>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   noFill();
 * }
 *
 * function draw() {
 *   background(200);
 *   rotateY(PI / 6);
 *   stroke(153);
 *   box(35);
 *   let rad = millis() / 1000;
 *   // Set rotation angles
 *   let ct = cos(rad);
 *   let st = sin(rad);
 *   // Matrix for rotation around the Y axis
 *   applyMatrix(
 *     ct, 0.0,  st,  0.0,
 *     0.0, 1.0, 0.0,  0.0,
 *     -st, 0.0,  ct,  0.0,
 *     0.0, 0.0, 0.0,  1.0
 *   );
 *   stroke(255);
 *   box(50);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * function draw() {
 *   background(200);
 *   let testMatrix = [1, 0, 0, 1, 0, 0];
 *   applyMatrix(testMatrix);
 *   rect(0, 0, 50, 50);
 * }
 * </code>
 * </div>
 *
 * @alt
 * A rectangle translating to the right
 * A rectangle shrinking to the center
 * A rectangle rotating clockwise about the center
 * A rectangle shearing
 * A rectangle in the upper left corner
 *//**
 * @method applyMatrix
 * @param  {Number} a numbers which define the 2×3 or 4×4 matrix to be multiplied
 * @param  {Number} b numbers which define the 2×3 or 4×4 matrix to be multiplied
 * @param  {Number} c numbers which define the 2×3 or 4×4 matrix to be multiplied
 * @param  {Number} d numbers which define the 2×3 or 4×4 matrix to be multiplied
 * @param  {Number} e numbers which define the 2×3 or 4×4 matrix to be multiplied
 * @param  {Number} f numbers which define the 2×3 or 4×4 matrix to be multiplied
 * @chainable
 *//**
 * @method applyMatrix
 * @param  {Number} a
 * @param  {Number} b
 * @param  {Number} c
 * @param  {Number} d
 * @param  {Number} e
 * @param  {Number} f
 * @param  {Number} g numbers which define the 4×4 matrix to be multiplied
 * @param  {Number} h numbers which define the 4×4 matrix to be multiplied
 * @param  {Number} i numbers which define the 4×4 matrix to be multiplied
 * @param  {Number} j numbers which define the 4×4 matrix to be multiplied
 * @param  {Number} k numbers which define the 4×4 matrix to be multiplied
 * @param  {Number} l numbers which define the 4×4 matrix to be multiplied
 * @param  {Number} m numbers which define the 4×4 matrix to be multiplied
 * @param  {Number} n numbers which define the 4×4 matrix to be multiplied
 * @param  {Number} o numbers which define the 4×4 matrix to be multiplied
 * @param  {Number} p numbers which define the 4×4 matrix to be multiplied
 * @chainable
 */o.default.prototype.applyMatrix=function(){var t,r,n=(arguments.length<=0?void 0:arguments[0])instanceof Object.getPrototypeOf(Uint8Array);return Array.isArray(arguments.length<=0?void 0:arguments[0])||n?(t=this._renderer).applyMatrix.apply(t,s(arguments.length<=0?void 0:arguments[0])):(r=this._renderer).applyMatrix.apply(r,arguments),this},/**
 * Replaces the current matrix with the identity matrix.
 *
 * @method resetMatrix
 * @chainable
 * @example
 * <div>
 * <code>
 * translate(50, 50);
 * applyMatrix(0.5, 0.5, -0.5, 0.5, 0, 0);
 * rect(0, 0, 20, 20);
 * // Note that the translate is also reset.
 * resetMatrix();
 * rect(0, 0, 20, 20);
 * </code>
 * </div>
 *
 * @alt
 * A rotated rectangle in the center with another at the top left corner
 */o.default.prototype.resetMatrix=function(){return this._renderer.resetMatrix(),this},/**
 * Rotates a shape by the amount specified by the angle parameter. This
 * function accounts for <a href="#/p5/angleMode">angleMode</a>, so angles
 * can be entered in either RADIANS or DEGREES.
 *
 * Objects are always rotated around their relative position to the
 * origin and positive numbers rotate objects in a clockwise direction.
 * Transformations apply to everything that happens after and subsequent
 * calls to the function accumulate the effect. For example, calling
 * rotate(HALF_PI) and then rotate(HALF_PI) is the same as rotate(PI).
 * All transformations are reset when <a href="#/p5/draw">draw()</a> begins again.
 *
 * Technically, <a href="#/p5/rotate">rotate()</a> multiplies the current transformation matrix
 * by a rotation matrix. This function can be further controlled by
 * <a href="#/p5/push">push()</a> and <a href="#/p5/pop">pop()</a>.
 *
 * @method rotate
 * @param  {Number} angle the angle of rotation, specified in radians
 *                        or degrees, depending on current angleMode
 * @param  {p5.Vector|Number[]} [axis] (in 3d) the axis to rotate around
 * @chainable
 * @example
 * <div>
 * <code>
 * translate(width / 2, height / 2);
 * rotate(PI / 3.0);
 * rect(-26, -26, 52, 52);
 * </code>
 * </div>
 *
 * @alt
 * white 52×52 rect with black outline at center rotated counter 45 degrees
 */o.default.prototype.rotate=function(t,r){return o.default._validateParameters("rotate",arguments),this._renderer.rotate(this._toRadians(t),r),this},/**
 * Rotates a shape around X axis by the amount specified in angle parameter.
 * The angles can be entered in either RADIANS or DEGREES.
 *
 * Objects are always rotated around their relative position to the
 * origin and positive numbers rotate objects in a clockwise direction.
 * All transformations are reset when <a href="#/p5/draw">draw()</a> begins again.
 *
 * @method  rotateX
 * @param  {Number} angle the angle of rotation, specified in radians
 *                        or degrees, depending on current angleMode
 * @chainable
 * @example
 * <div modernizr='webgl'>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 * }
 * function draw() {
 *   background(255);
 *   rotateX(millis() / 1000);
 *   box();
 * }
 * </code>
 * </div>
 *
 * @alt
 * 3d box rotating around the x axis.
 */o.default.prototype.rotateX=function(t){return this._assert3d("rotateX"),o.default._validateParameters("rotateX",arguments),this._renderer.rotateX(this._toRadians(t)),this},/**
 * Rotates a shape around Y axis by the amount specified in angle parameter.
 * The angles can be entered in either RADIANS or DEGREES.
 *
 * Objects are always rotated around their relative position to the
 * origin and positive numbers rotate objects in a clockwise direction.
 * All transformations are reset when <a href="#/p5/draw">draw()</a> begins again.
 *
 * @method rotateY
 * @param  {Number} angle the angle of rotation, specified in radians
 *                        or degrees, depending on current angleMode
 * @chainable
 * @example
 * <div modernizr='webgl'>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 * }
 * function draw() {
 *   background(255);
 *   rotateY(millis() / 1000);
 *   box();
 * }
 * </code>
 * </div>
 *
 * @alt
 * 3d box rotating around the y axis.
 */o.default.prototype.rotateY=function(t){return this._assert3d("rotateY"),o.default._validateParameters("rotateY",arguments),this._renderer.rotateY(this._toRadians(t)),this},/**
 * Rotates a shape around Z axis by the amount specified in angle parameter.
 * The angles can be entered in either RADIANS or DEGREES.
 *
 * This method works in WEBGL mode only.
 *
 * Objects are always rotated around their relative position to the
 * origin and positive numbers rotate objects in a clockwise direction.
 * All transformations are reset when <a href="#/p5/draw">draw()</a> begins again.
 *
 * @method rotateZ
 * @param  {Number} angle the angle of rotation, specified in radians
 *                        or degrees, depending on current angleMode
 * @chainable
 * @example
 * <div modernizr='webgl'>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 * }
 * function draw() {
 *   background(255);
 *   rotateZ(millis() / 1000);
 *   box();
 * }
 * </code>
 * </div>
 *
 * @alt
 * 3d box rotating around the z axis.
 */o.default.prototype.rotateZ=function(t){return this._assert3d("rotateZ"),o.default._validateParameters("rotateZ",arguments),this._renderer.rotateZ(this._toRadians(t)),this},/**
 * Increases or decreases the size of a shape by expanding or contracting
 * vertices. Objects always scale from their relative origin to the
 * coordinate system. Scale values are specified as decimal percentages.
 * For example, the function call scale(2.0) increases the dimension of a
 * shape by 200%.
 *
 * Transformations apply to everything that happens after and subsequent
 * calls to the function multiply the effect. For example, calling scale(2.0)
 * and then scale(1.5) is the same as scale(3.0). If <a href="#/p5/scale">scale()</a> is called
 * within <a href="#/p5/draw">draw()</a>, the transformation is reset when the loop begins again.
 *
 * Using this function with the z parameter is only available in WEBGL mode.
 * This function can be further controlled with <a href="#/p5/push">push()</a> and <a href="#/p5/pop">pop()</a>.
 *
 * @method scale
 * @param  {Number|p5.Vector|Number[]} s
 *                      percent to scale the object, or percentage to
 *                      scale the object in the x-axis if multiple arguments
 *                      are given
 * @param  {Number} [y] percent to scale the object in the y-axis
 * @param  {Number} [z] percent to scale the object in the z-axis (webgl only)
 * @chainable
 * @example
 * <div>
 * <code>
 * rect(30, 20, 50, 50);
 * scale(0.5);
 * rect(30, 20, 50, 50);
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * rect(30, 20, 50, 50);
 * scale(0.5, 1.3);
 * rect(30, 20, 50, 50);
 * </code>
 * </div>
 *
 * @alt
 * white 52×52 rect with black outline at center rotated counter 45 degrees
 * 2 white rects with black outline- 1 50×50 at center. other 25×65 bottom left
 *//**
 * @method scale
 * @param  {p5.Vector|Number[]} scales per-axis percents to scale the object
 * @chainable
 */o.default.prototype.scale=function(t,r,n){if(o.default._validateParameters("scale",arguments),t instanceof o.default.Vector){var a=t;t=a.x,r=a.y,n=a.z}else if(t instanceof Array){var s=t;t=s[0],r=s[1],n=s[2]||1}return isNaN(r)?r=n=t:isNaN(n)&&(n=1),this._renderer.scale.call(this._renderer,t,r,n),this},/**
 * Shears a shape around the x-axis by the amount specified by the angle
 * parameter. Angles should be specified in the current angleMode.
 * Objects are always sheared around their relative position to the origin
 * and positive numbers shear objects in a clockwise direction.
 *
 * Transformations apply to everything that happens after and subsequent
 * calls to the function accumulates the effect. For example, calling
 * shearX(PI/2) and then shearX(PI/2) is the same as shearX(PI).
 * If <a href="#/p5/shearX">shearX()</a> is called within the <a href="#/p5/draw">draw()</a>,
 * the transformation is reset when the loop begins again.
 *
 * Technically, <a href="#/p5/shearX">shearX()</a> multiplies the current
 * transformation matrix by a rotation matrix. This function can be further
 * controlled by the <a href="#/p5/push">push()</a> and <a href="#/p5/pop">pop()</a> functions.
 *
 * @method shearX
 * @param  {Number} angle angle of shear specified in radians or degrees,
 *                        depending on current angleMode
 * @chainable
 * @example
 * <div>
 * <code>
 * translate(width / 4, height / 4);
 * shearX(PI / 4.0);
 * rect(0, 0, 30, 30);
 * </code>
 * </div>
 *
 * @alt
 * white irregular quadrilateral with black outline at top middle.
 */o.default.prototype.shearX=function(t){o.default._validateParameters("shearX",arguments);var r=this._toRadians(t);return this._renderer.applyMatrix(1,0,Math.tan(r),1,0,0),this},/**
 * Shears a shape around the y-axis the amount specified by the angle
 * parameter. Angles should be specified in the current angleMode. Objects
 * are always sheared around their relative position to the origin and
 * positive numbers shear objects in a clockwise direction.
 *
 * Transformations apply to everything that happens after and subsequent
 * calls to the function accumulates the effect. For example, calling
 * shearY(PI/2) and then shearY(PI/2) is the same as shearY(PI). If
 * <a href="#/p5/shearY">shearY()</a> is called within the <a href="#/p5/draw">draw()</a>, the transformation is reset when
 * the loop begins again.
 *
 * Technically, <a href="#/p5/shearY">shearY()</a> multiplies the current transformation matrix by a
 * rotation matrix. This function can be further controlled by the
 * <a href="#/p5/push">push()</a> and <a href="#/p5/pop">pop()</a> functions.
 *
 * @method shearY
 * @param  {Number} angle angle of shear specified in radians or degrees,
 *                        depending on current angleMode
 * @chainable
 * @example
 * <div>
 * <code>
 * translate(width / 4, height / 4);
 * shearY(PI / 4.0);
 * rect(0, 0, 30, 30);
 * </code>
 * </div>
 *
 * @alt
 * white irregular quadrilateral with black outline at middle bottom.
 */o.default.prototype.shearY=function(t){o.default._validateParameters("shearY",arguments);var r=this._toRadians(t);return this._renderer.applyMatrix(1,Math.tan(r),0,1,0,0),this},/**
 * Specifies an amount to displace objects within the display window.
 * The x parameter specifies left/right translation, the y parameter
 * specifies up/down translation.
 *
 * Transformations are cumulative and apply to everything that happens after
 * and subsequent calls to the function accumulates the effect. For example,
 * calling translate(50, 0) and then translate(20, 0) is the same as
 * translate(70, 0). If <a href="#/p5/translate">translate()</a> is called within <a href="#/p5/draw">draw()</a>, the
 * transformation is reset when the loop begins again. This function can be
 * further controlled by using <a href="#/p5/push">push()</a> and <a href="#/p5/pop">pop()</a>.
 *
 * @method translate
 * @param  {Number} x left/right translation
 * @param  {Number} y up/down translation
 * @param  {Number} [z] forward/backward translation (WEBGL only)
 * @chainable
 * @example
 * <div>
 * <code>
 * translate(30, 20);
 * rect(0, 0, 55, 55);
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * rect(0, 0, 55, 55); // Draw rect at original 0,0
 * translate(30, 20);
 * rect(0, 0, 55, 55); // Draw rect at new 0,0
 * translate(14, 14);
 * rect(0, 0, 55, 55); // Draw rect at new 0,0
 * </code>
 * </div>
 *

 * <div>
 * <code>
 * function draw() {
 *   background(200);
 *   rectMode(CENTER);
 *   translate(width / 2, height / 2);
 *   translate(p5.Vector.fromAngle(millis() / 1000, 40));
 *   rect(0, 0, 20, 20);
 * }
 * </code>
 * </div>
 *
 * @alt
 * white 55×55 rect with black outline at center right.
 * 3 white 55×55 rects with black outlines at top-l, center-r and bottom-r.
 * a 20×20 white rect moving in a circle around the canvas
 *//**
 * @method translate
 * @param  {p5.Vector} vector the vector to translate by
 * @chainable
 */o.default.prototype.translate=function(t,r,n){return o.default._validateParameters("translate",arguments),this._renderer.isP3D?this._renderer.translate(t,r,n):this._renderer.translate(t,r),this};var p=o.default;n.default=p},{"./main":296,"core-js/modules/es.array.from":175,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.get-prototype-of":196,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.typed-array.copy-within":221,"core-js/modules/es.typed-array.every":222,"core-js/modules/es.typed-array.fill":223,"core-js/modules/es.typed-array.filter":224,"core-js/modules/es.typed-array.find":226,"core-js/modules/es.typed-array.find-index":225,"core-js/modules/es.typed-array.for-each":229,"core-js/modules/es.typed-array.includes":230,"core-js/modules/es.typed-array.index-of":231,"core-js/modules/es.typed-array.iterator":234,"core-js/modules/es.typed-array.join":235,"core-js/modules/es.typed-array.last-index-of":236,"core-js/modules/es.typed-array.map":237,"core-js/modules/es.typed-array.reduce":239,"core-js/modules/es.typed-array.reduce-right":238,"core-js/modules/es.typed-array.reverse":240,"core-js/modules/es.typed-array.set":241,"core-js/modules/es.typed-array.slice":242,"core-js/modules/es.typed-array.some":243,"core-js/modules/es.typed-array.sort":244,"core-js/modules/es.typed-array.subarray":245,"core-js/modules/es.typed-array.to-locale-string":246,"core-js/modules/es.typed-array.to-string":247,"core-js/modules/es.typed-array.uint8-array":250,"core-js/modules/web.dom-collections.iterator":254}],310:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.ends-with"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.ends-with"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator");var a=s(t("../core/main"));function s(t){return t&&t.__esModule?t:{default:t}}function l(t){return p(t)||u(t)||c()}function c(){throw TypeError("Invalid attempt to spread non-iterable instance")}function u(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function p(t){if(Array.isArray(t)){for(var r=0,n=Array(t.length);r<t.length;r++)n[r]=t[r];return n}}function d(t){return(d="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}/**
 *
 * Stores a value in local storage under the key name.
 * Local storage is saved in the browser and persists
 * between browsing sessions and page reloads.
 * The key can be the name of the variable but doesn't
 * have to be. To retrieve stored items
 * see <a href="#/p5/getItem">getItem</a>.
 *
 * Sensitive data such as passwords or personal information
 * should not be stored in local storage.
 *
 * @method storeItem
 * @for p5
 * @param {String} key
 * @param {String|Number|Object|Boolean|p5.Color|p5.Vector} value
 *
 * @example
 * <div><code>
 * // Type to change the letter in the
 * // center of the canvas.
 * // If you reload the page, it will
 * // still display the last key you entered
 *
 * let myText;
 *
 * function setup() {
 *   createCanvas(100, 100);
 *   myText = getItem('myText');
 *   if (myText === null) {
 *     myText = '';
 *   }
 *   describe(`When you type the key name is displayed as black text on white background.
 *   If you reload the page, the last letter typed is still displaying.`);
 * }
 *
 * function draw() {
 *   textSize(40);
 *   background(255);
 *   text(myText, width / 2, height / 2);
 * }
 *
 * function keyPressed() {
 *   myText = key;
 *   storeItem('myText', myText);
 * }
 * </code></div>
 */a.default.prototype.storeItem=function(t,r){"string"!=typeof t&&console.log("The argument that you passed to storeItem() - ".concat(t," is not a string.")),t.endsWith("p5TypeID")&&console.log("The argument that you passed to storeItem() - ".concat(t," must not end with 'p5TypeID'.")),void 0===r&&console.log("You cannot store undefined variables using storeItem().");var n=d(r);switch(n){case"number":case"boolean":r=r.toString();break;case"object":r instanceof a.default.Color?n="p5.Color":r instanceof a.default.Vector&&(n="p5.Vector",r=[r.x,r.y,r.z]),r=JSON.stringify(r)}localStorage.setItem(t,r);var o="".concat(t,"p5TypeID");localStorage.setItem(o,n)},/**
 *
 * Returns the value of an item that was stored in local storage
 * using storeItem()
 *
 * @method getItem
 * @for p5
 * @param {String} key name that you wish to use to store in local storage
 * @return {Number|Object|String|Boolean|p5.Color|p5.Vector} Value of stored item
 *
 * @example
 * <div><code>
 * // Click the mouse to change
 * // the color of the background
 * // Once you have changed the color
 * // it will stay changed even when you
 * // reload the page.
 *
 * let myColor;
 *
 * function setup() {
 *   createCanvas(100, 100);
 *   myColor = getItem('myColor');
 * }
 *
 * function draw() {
 *   if (myColor !== null) {
 *     background(myColor);
 *   }
 *   describe(`If you click, the canvas changes to a random color.·
 *     If you reload the page, the canvas is still the color it was when the
 *     page was previously loaded.`);
 * }
 *
 * function mousePressed() {
 *   myColor = color(random(255), random(255), random(255));
 *   storeItem('myColor', myColor);
 * }
 * </code></div>
 */a.default.prototype.getItem=function(t){var r=localStorage.getItem(t),n=localStorage.getItem("".concat(t,"p5TypeID"));if(void 0===n)console.log("Unable to determine type of item stored under ".concat(t,"in local storage. Did you save the item with something other than setItem()?"));else if(null!==r)switch(n){case"number":r=parseFloat(r);break;case"boolean":r="true"===r;break;case"object":r=JSON.parse(r);break;case"p5.Color":r=JSON.parse(r),r=this.color.apply(this,l(r.levels));break;case"p5.Vector":r=JSON.parse(r),r=this.createVector.apply(this,l(r))}return r},/**
 *
 * Clears all local storage items set with storeItem()
 * for the current domain.
 *
 * @method clearStorage
 * @for p5
 *
 * @example
 * <div class="norender">
 * <code>
 * function setup() {
 *   let myNum = 10;
 *   let myBool = false;
 *   storeItem('myNum', myNum);
 *   storeItem('myBool', myBool);
 *   print(getItem('myNum')); // logs 10 to the console
 *   print(getItem('myBool')); // logs false to the console
 *   clearStorage();
 *   print(getItem('myNum')); // logs null to the console
 *   print(getItem('myBool')); // logs null to the console
 * }
 * </code></div>
 */a.default.prototype.clearStorage=function(){localStorage.clear()},/**
 *
 * Removes an item that was stored with storeItem()
 *
 * @method removeItem
 * @param {String} key
 * @for p5
 *
 * @example
 * <div class="norender">
 * <code>
 * function setup() {
 *   let myVar = 10;
 *   storeItem('myVar', myVar);
 *   print(getItem('myVar')); // logs 10 to the console
 *   removeItem('myVar');
 *   print(getItem('myVar')); // logs null to the console
 * }
 * </code></div>
 */a.default.prototype.removeItem=function(t){"string"!=typeof t&&console.log("The argument that you passed to removeItem() - ".concat(t," is not a string.")),localStorage.removeItem(t),localStorage.removeItem("".concat(t,"p5TypeID"))}},{"../core/main":296,"core-js/modules/es.array.from":175,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.ends-with":206,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/web.dom-collections.iterator":254}],311:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=s(t("../core/main"));function s(t){return t&&t.__esModule?t:{default:t}}function l(t){return(l="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}function c(t,r){if("function"!=typeof r&&null!==r)throw TypeError("Super expression must either be null or a function");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),r&&u(t,r)}function u(t,r){return(u=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t})(t,r)}function p(t){function r(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}return function(){var n,o=f(t);if(r()){var a=f(this).constructor;n=Reflect.construct(o,arguments,a)}else n=o.apply(this,arguments);return d(this,n)}}function d(t,r){return r&&("object"===l(r)||"function"==typeof r)?r:m(t)}function m(t){if(void 0===t)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function f(t){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function h(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function y(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function g(t,r,n){return r&&y(t.prototype,r),n&&y(t,n),t}/**
 *
 * Creates a new instance of p5.StringDict using the key-value pair
 * or the object you provide.
 *
 * @method createStringDict
 * @for p5
 * @param {String} key
 * @param {String} value
 * @return {p5.StringDict}
 *
 * @example
 * <div class="norender">
 * <code>
 * function setup() {
 *   let myDictionary = createStringDict('p5', 'js');
 *   print(myDictionary.hasKey('p5')); // logs true to console
 *
 *   let anotherDictionary = createStringDict({ happy: 'coding' });
 *   print(anotherDictionary.hasKey('happy')); // logs true to console
 * }
 * </code></div>
 *//**
 * @method createStringDict
 * @param {Object} object object
 * @return {p5.StringDict}
 */a.default.prototype.createStringDict=function(t,r){return a.default._validateParameters("createStringDict",arguments),new a.default.StringDict(t,r)},/**
 *
 * Creates a new instance of <a href="#/p5.NumberDict">p5.NumberDict</a> using the key-value pair
 * or object you provide.
 *
 * @method createNumberDict
 * @for p5
 * @param {Number} key
 * @param {Number} value
 * @return {p5.NumberDict}
 *
 * @example
 * <div class="norender">
 * <code>
 * function setup() {
 *   let myDictionary = createNumberDict(100, 42);
 *   print(myDictionary.hasKey(100)); // logs true to console
 *
 *   let anotherDictionary = createNumberDict({ 200: 84 });
 *   print(anotherDictionary.hasKey(200)); // logs true to console
 * }
 * </code></div>
 *//**
 * @method createNumberDict
 * @param {Object} object object
 * @return {p5.NumberDict}
 */a.default.prototype.createNumberDict=function(t,r){return a.default._validateParameters("createNumberDict",arguments),new a.default.NumberDict(t,r)},/**
 *
 * Base class for all p5.Dictionary types. Specifically
 * typed Dictionary classes inherit from this class.
 *
 * @class p5.TypedDict
 * @constructor
 */a.default.TypedDict=/*#__PURE__*/function(){function t(r,n){return h(this,t),r instanceof Object?this.data=r:(this.data={},this.data[r]=n),this}/**
   * Returns the number of key-value pairs currently stored in the Dictionary.
   *
   * @method size
   * @return {Integer} the number of key-value pairs in the Dictionary
   *
   * @example
   * <div class="norender">
   * <code>
   * function setup() {
   *   let myDictionary = createNumberDict(1, 10);
   *   myDictionary.create(2, 20);
   *   myDictionary.create(3, 30);
   *   print(myDictionary.size()); // logs 3 to the console
   * }
   * </code></div>
   */return g(t,[{key:"size",value:function(){return Object.keys(this.data).length}/**
     * Returns true if the given key exists in the Dictionary,
     * otherwise returns false.
     *
     * @method hasKey
     * @param {Number|String} key that you want to look up
     * @return {Boolean} whether that key exists in Dictionary
     *
     * @example
     * <div class="norender">
     * <code>
     * function setup() {
     *   let myDictionary = createStringDict('p5', 'js');
     *   print(myDictionary.hasKey('p5')); // logs true to console
     * }
     * </code></div>
     */},{key:"hasKey",value:function(t){return this.data.hasOwnProperty(t)}/**
     * Returns the value stored at the given key.
     *
     * @method get
     * @param {Number|String} the key you want to access
     * @return {Number|String} the value stored at that key
     *
     * @example
     * <div class="norender">
     * <code>
     * function setup() {
     *   let myDictionary = createStringDict('p5', 'js');
     *   let myValue = myDictionary.get('p5');
     *   print(myValue === 'js'); // logs true to console
     * }
     * </code></div>
     */},{key:"get",value:function(t){if(this.data.hasOwnProperty(t))return this.data[t];console.log("".concat(t," does not exist in this Dictionary"))}/**
     * Updates the value associated with the given key in case it already exists
     * in the Dictionary. Otherwise a new key-value pair is added.
     *
     * @method set
     * @param {Number|String} key
     * @param {Number|String} value
     *
     * @example
     * <div class="norender">
     * <code>
     * function setup() {
     *   let myDictionary = createStringDict('p5', 'js');
     *   myDictionary.set('p5', 'JS');
     *   myDictionary.print(); // logs "key: p5 - value: JS" to console
     * }
     * </code></div>
     */},{key:"set",value:function(t,r){this._validate(r)?this.data[t]=r:console.log("Those values dont work for this dictionary type.")}/**
     * private helper function to handle the user passing in objects
     * during construction or calls to create()
     */},{key:"_addObj",value:function(t){for(var r in t)this.set(r,t[r])}/**
     * Creates a new key-value pair in the Dictionary.
     *
     * @method create
     * @param {Number|String} key
     * @param {Number|String} value
     *
     * @example
     * <div class="norender">
     * <code>
     * function setup() {
     *   let myDictionary = createStringDict('p5', 'js');
     *   myDictionary.create('happy', 'coding');
     *   myDictionary.print();
     *   // above logs "key: p5 - value: js, key: happy - value: coding" to console
     * }
     * </code></div>
     */},{key:"create",value:function(t,r){t instanceof Object&&void 0===r?this._addObj(t):void 0!==t?this.set(t,r):console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair")}/**
     * Removes all previously stored key-value pairs from the Dictionary.
     *
     * @method clear
     * @example
     * <div class="norender">
     * <code>
     * function setup() {
     *   let myDictionary = createStringDict('p5', 'js');
     *   print(myDictionary.hasKey('p5')); // prints 'true'
     *   myDictionary.clear();
     *   print(myDictionary.hasKey('p5')); // prints 'false'
     * }
     * </code>
     * </div>
     */},{key:"clear",value:function(){this.data={}}/**
     * Removes the key-value pair stored at the given key from the Dictionary.
     *
     * @method remove
     * @param {Number|String} key for the pair to remove
     *
     * @example
     * <div class="norender">
     * <code>
     * function setup() {
     *   let myDictionary = createStringDict('p5', 'js');
     *   myDictionary.create('happy', 'coding');
     *   myDictionary.print();
     *   // above logs "key: p5 - value: js, key: happy - value: coding" to console
     *   myDictionary.remove('p5');
     *   myDictionary.print();
     *   // above logs "key: happy value: coding" to console
     * }
     * </code></div>
     */},{key:"remove",value:function(t){if(this.data.hasOwnProperty(t))delete this.data[t];else throw Error("".concat(t," does not exist in this Dictionary"))}/**
     * Logs the set of items currently stored in the Dictionary to the console.
     *
     * @method print
     *
     * @example
     * <div class="norender">
     * <code>
     * function setup() {
     *   let myDictionary = createStringDict('p5', 'js');
     *   myDictionary.create('happy', 'coding');
     *   myDictionary.print();
     *   // above logs "key: p5 - value: js, key: happy - value: coding" to console
     * }
     * </code>
     * </div>
     */},{key:"print",value:function(){for(var t in this.data)console.log("key:".concat(t," value:").concat(this.data[t]))}/**
     * Converts the Dictionary into a CSV file for local download.
     *
     * @method saveTable
     * @example
     * <div>
     * <code>
     * function setup() {
     *   createCanvas(100, 100);
     *   background(200);
     *   text('click here to save', 10, 10, 70, 80);
     * }
     *
     * function mousePressed() {
     *   if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {
     *     createStringDict({
     *       john: 1940,
     *       paul: 1942,
     *       george: 1943,
     *       ringo: 1940
     *     }).saveTable('beatles');
     *   }
     * }
     * </code>
     * </div>
     */},{key:"saveTable",value:function(t){var r="";for(var n in this.data)r+="".concat(n,",").concat(this.data[n],"\n");var o=new Blob([r],{type:"text/csv"});a.default.prototype.downloadFile(o,t||"mycsv","csv")}/**
     * Converts the Dictionary into a JSON file for local download.
     *
     * @method saveJSON
     * @example
     * <div>
     * <code>
     * function setup() {
     *   createCanvas(100, 100);
     *   background(200);
     *   text('click here to save', 10, 10, 70, 80);
     * }
     *
     * function mousePressed() {
     *   if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {
     *     createStringDict({
     *       john: 1940,
     *       paul: 1942,
     *       george: 1943,
     *       ringo: 1940
     *     }).saveJSON('beatles');
     *   }
     * }
     * </code>
     * </div>
     */},{key:"saveJSON",value:function(t,r){a.default.prototype.saveJSON(this.data,t,r)}/**
     * private helper function to ensure that the user passed in valid
     * values for the Dictionary type
     */},{key:"_validate",value:function(t){return!0}}]),t}(),/**
 *
 * A simple Dictionary class for Strings.
 *
 * @class p5.StringDict
 * @extends p5.TypedDict
 */a.default.StringDict=/*#__PURE__*/function(t){c(n,t);var r=p(n);function n(){h(this,n);for(var t=arguments.length,o=Array(t),a=0;a<t;a++)o[a]=arguments[a];return r.call.apply(r,[this].concat(o))}return g(n,[{key:"_validate",value:function(t){return"string"==typeof t}}]),n}(a.default.TypedDict),/**
 *
 * A simple Dictionary class for Numbers.
 *
 * @class p5.NumberDict
 * @constructor
 * @extends p5.TypedDict
 */a.default.NumberDict=/*#__PURE__*/function(t){c(n,t);var r=p(n);function n(){h(this,n);for(var t=arguments.length,o=Array(t),a=0;a<t;a++)o[a]=arguments[a];return r.call.apply(r,[this].concat(o))}/**
   * private helper function to ensure that the user passed in valid
   * values for the Dictionary type
   */return g(n,[{key:"_validate",value:function(t){return"number"==typeof t}/**
     * Add the given number to the value currently stored at the given key.
     * The sum then replaces the value previously stored in the Dictionary.
     *
     * @method add
     * @param {Number} Key for the value you wish to add to
     * @param {Number} Number to add to the value
     * @example
     * <div class='norender'>
     * <code>
     * function setup() {
     *   let myDictionary = createNumberDict(2, 5);
     *   myDictionary.add(2, 2);
     *   print(myDictionary.get(2)); // logs 7 to console.
     * }
     * </code></div>
     *
     */},{key:"add",value:function(t,r){this.data.hasOwnProperty(t)?this.data[t]+=r:console.log("The key - ".concat(t," does not exist in this dictionary."))}/**
     * Subtract the given number from the value currently stored at the given key.
     * The difference then replaces the value previously stored in the Dictionary.
     *
     * @method sub
     * @param {Number} Key for the value you wish to subtract from
     * @param {Number} Number to subtract from the value
     * @example
     * <div class='norender'>
     * <code>
     * function setup() {
     *   let myDictionary = createNumberDict(2, 5);
     *   myDictionary.sub(2, 2);
     *   print(myDictionary.get(2)); // logs 3 to console.
     * }
     * </code></div>
     *
     */},{key:"sub",value:function(t,r){this.add(t,-r)}/**
     * Multiply the given number with the value currently stored at the given key.
     * The product then replaces the value previously stored in the Dictionary.
     *
     * @method mult
     * @param {Number} Key for value you wish to multiply
     * @param {Number} Amount to multiply the value by
     * @example
     * <div class='norender'>
     * <code>
     * function setup() {
     *   let myDictionary = createNumberDict(2, 4);
     *   myDictionary.mult(2, 2);
     *   print(myDictionary.get(2)); // logs 8 to console.
     * }
     * </code></div>
     *
     */},{key:"mult",value:function(t,r){this.data.hasOwnProperty(t)?this.data[t]*=r:console.log("The key - ".concat(t," does not exist in this dictionary."))}/**
     * Divide the given number with the value currently stored at the given key.
     * The quotient then replaces the value previously stored in the Dictionary.
     *
     * @method div
     * @param {Number} Key for value you wish to divide
     * @param {Number} Amount to divide the value by
     * @example
     * <div class='norender'>
     * <code>
     * function setup() {
     *   let myDictionary = createNumberDict(2, 8);
     *   myDictionary.div(2, 2);
     *   print(myDictionary.get(2)); // logs 4 to console.
     * }
     * </code></div>
     *
     */},{key:"div",value:function(t,r){this.data.hasOwnProperty(t)?this.data[t]/=r:console.log("The key - ".concat(t," does not exist in this dictionary."))}/**
     * private helper function for finding lowest or highest value
     * the argument 'flip' is used to flip the comparison arrow
     * from 'less than' to 'greater than'
     */},{key:"_valueTest",value:function(t){if(0===Object.keys(this.data).length)throw Error("Unable to search for a minimum or maximum value on an empty NumberDict");if(1===Object.keys(this.data).length)return this.data[Object.keys(this.data)[0]];var r=this.data[Object.keys(this.data)[0]];for(var n in this.data)this.data[n]*t<r*t&&(r=this.data[n]);return r}/**
     * Return the lowest number currently stored in the Dictionary.
     *
     * @method minValue
     * @return {Number}
     * @example
     * <div class='norender'>
     * <code>
     * function setup() {
     *   let myDictionary = createNumberDict({ 2: -10, 4: 0.65, 1.2: 3 });
     *   let lowestValue = myDictionary.minValue(); // value is -10
     *   print(lowestValue);
     * }
     * </code></div>
     */},{key:"minValue",value:function(){return this._valueTest(1)}/**
     * Return the highest number currently stored in the Dictionary.
     *
     * @method maxValue
     * @return {Number}
     * @example
     * <div class='norender'>
     * <code>
     * function setup() {
     *   let myDictionary = createNumberDict({ 2: -10, 4: 0.65, 1.2: 3 });
     *   let highestValue = myDictionary.maxValue(); // value is 3
     *   print(highestValue);
     * }
     * </code></div>
     */},{key:"maxValue",value:function(){return this._valueTest(-1)}/**
     * private helper function for finding lowest or highest key
     * the argument 'flip' is used to flip the comparison arrow
     * from 'less than' to 'greater than'
     */},{key:"_keyTest",value:function(t){if(0===Object.keys(this.data).length)throw Error("Unable to use minValue on an empty NumberDict");if(1===Object.keys(this.data).length)return Object.keys(this.data)[0];for(var r=Object.keys(this.data)[0],n=1;n<Object.keys(this.data).length;n++)Object.keys(this.data)[n]*t<r*t&&(r=Object.keys(this.data)[n]);return r}/**
     * Return the lowest key currently used in the Dictionary.
     *
     * @method minKey
     * @return {Number}
     * @example
     * <div class='norender'>
     * <code>
     * function setup() {
     *   let myDictionary = createNumberDict({ 2: 4, 4: 6, 1.2: 3 });
     *   let lowestKey = myDictionary.minKey(); // value is 1.2
     *   print(lowestKey);
     * }
     * </code></div>
     */},{key:"minKey",value:function(){return this._keyTest(1)}/**
     * Return the highest key currently used in the Dictionary.
     *
     * @method maxKey
     * @return {Number}
     * @example
     * <div class='norender'>
     * <code>
     * function setup() {
     *   let myDictionary = createNumberDict({ 2: 4, 4: 6, 1.2: 3 });
     *   let highestKey = myDictionary.maxKey(); // value is 4
     *   print(highestKey);
     * }
     * </code></div>
     */},{key:"maxKey",value:function(){return this._keyTest(-1)}}]),n}(a.default.TypedDict);var v=a.default.TypedDict;n.default=v},{"../core/main":296,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.get-prototype-of":196,"core-js/modules/es.object.keys":197,"core-js/modules/es.object.to-string":198,"core-js/modules/es.reflect.construct":200,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/web.dom-collections.iterator":254}],312:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.every"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.function.name"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.promise"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),t("core-js/modules/es.string.trim"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/web.url"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.every"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.function.name"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.promise"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),t("core-js/modules/es.string.trim"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/web.url"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=s(t("../core/main"));function s(t){return t&&t.__esModule?t:{default:t}}function l(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function c(t,r,n){return r&&l(t.prototype,r),n&&l(t,n),t}function u(t,r){if("function"!=typeof r&&null!==r)throw TypeError("Super expression must either be null or a function");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),r&&p(t,r)}function p(t,r){return(p=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t})(t,r)}function d(t){function r(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}return function(){var n,o=h(t);if(r()){var a=h(this).constructor;n=Reflect.construct(o,arguments,a)}else n=o.apply(this,arguments);return m(this,n)}}function m(t,r){return r&&("object"===g(r)||"function"==typeof r)?r:f(t)}function f(t){if(void 0===t)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function h(t){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function y(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function g(t){return(g="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}/**
 * Searches the page for the first element that matches the given CSS selector string (can be an
 * ID, class, tag name or a combination) and returns it as a <a href="#/p5.Element">p5.Element</a>.
 * The DOM node itself can be accessed with .elt.
 * Returns null if none found. You can also specify a container to search within.
 *
 * @method select
 * @param  {String} selectors CSS selector string of element to search for
 * @param  {String|p5.Element|HTMLElement} [container] CSS selector string, <a href="#/p5.Element">p5.Element</a>, or
 *                                             HTML element to search within
 * @return {p5.Element|null} <a href="#/p5.Element">p5.Element</a> containing node found
 * @example
 * <div><code>
 * function setup() {
 *   createCanvas(50, 50);
 *   background(30);
 *   // move canvas down and right
 *   select('canvas').position(10, 30);
 * }
 * </code></div>
 *
 * <div class="norender"><code>
 * // select using ID
 * let a = select('#container');
 * let b = select('#beep', '#container');
 * let c;
 * if (a) {
 *   // select using class
 *   c = select('.boop', a);
 * }
 * // select using CSS selector string
 * let d = select('#container #bleep');
 * let e = select('#container p');
 * [a, b, c, d, e]; // unused
 * </code></div>
 *//**
 * Helpers for create methods.
 */function v(t,r,n){(r._userNode?r._userNode:document.body).appendChild(t);var o=n?new a.default.MediaElement(t,r):new a.default.Element(t,r);return r._elements.push(o),o}/**
 * Creates a `&lt;div&gt;&lt;/div&gt;` element in the DOM with given inner HTML.
 *
 * @method createDiv
 * @param  {String} [html] inner HTML for element created
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 * @example
 * <div><code>
 * let div = createDiv('this is some text');
 * div.style('font-size', '16px');
 * div.position(10, 0);
 * </code></div>
 *//** VIDEO STUFF **/// Helps perform similar tasks for media element methods.
function b(t,r,n,o){var a=document.createElement(r);// Create source elements from given sources
"string"==typeof(n=n||"")&&(n=[n]);var s=!0,l=!1,c=void 0;try{for(var u,p=n[Symbol.iterator]();!(s=(u=p.next()).done);s=!0){var d=u.value,m=document.createElement("source");m.setAttribute("src",d),a.appendChild(m)}// If callback is provided, attach to element
}catch(t){l=!0,c=t}finally{try{s||null==p.return||p.return()}finally{if(l)throw c}}if("function"==typeof o){var f=function t(){o(),a.removeEventListener("canplaythrough",t)};a.addEventListener("canplaythrough",f)}var h=v(a,t,!0);return h.loadedmetadata=!1,a.addEventListener("loadedmetadata",function(){h.width=a.videoWidth,h.height=a.videoHeight,0===h.elt.width&&(h.elt.width=a.videoWidth),0===h.elt.height&&(h.elt.height=a.videoHeight),h.presetPlaybackRate&&(h.elt.playbackRate=h.presetPlaybackRate,delete h.presetPlaybackRate),h.loadedmetadata=!0}),h}/**
 * Creates an HTML5 `&lt;video&gt;` element in the DOM for simple playback
 * of audio/video. Shown by default, can be hidden with .<a href="#/p5.Element/hide">hide()</a>
 * and drawn into canvas using <a href="#/p5/image">image()</a>. The first parameter
 * can be either a single string path to a video file, or an array of string
 * paths to different formats of the same video. This is useful for ensuring
 * that your video can play across different browsers, as each supports
 * different formats. See <a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats'>this
 * page</a> for further information about supported formats.
 *
 * @method createVideo
 * @param  {String|String[]} src path to a video file, or array of paths for
 *                             supporting different browsers
 * @param  {Function} [callback] callback function to be called upon
 *                             'canplaythrough' event fire, that is, when the
 *                             browser can play the media, and estimates that
 *                             enough data has been loaded to play the media
 *                             up to its end without having to stop for
 *                             further buffering of content
 * @return {p5.MediaElement}   pointer to video <a href="#/p5.MediaElement">p5.MediaElement</a>
 * @example
 * <div><code>
 * let vid;
 * function setup() {
 *   noCanvas();
 *
 *   vid = createVideo(
 *     ['assets/small.mp4', 'assets/small.ogv', 'assets/small.webm'],
 *     vidLoad
 *   );
 *
 *   vid.size(100, 100);
 * }
 *
 * // This function is called when the video loads
 * function vidLoad() {
 *   vid.loop();
 *   vid.volume(0);
 * }
 * </code></div>
 */a.default.prototype.select=function(t,r){a.default._validateParameters("select",arguments);var n=this._getContainer(r).querySelector(t);return n?this._wrapElement(n):null},/**
 * Searches the page for elements that match the given CSS selector string (can be an ID a class,
 * tag name or a combination) and returns them as <a href="#/p5.Element">p5.Element</a>s in
 * an array.
 * The DOM node itself can be accessed with .elt.
 * Returns an empty array if none found.
 * You can also specify a container to search within.
 *
 * @method selectAll
 * @param  {String} selectors CSS selector string of elements to search for
 * @param  {String|p5.Element|HTMLElement} [container] CSS selector string, <a href="#/p5.Element">p5.Element</a>
 *                                             , or HTML element to search within
 * @return {p5.Element[]} Array of <a href="#/p5.Element">p5.Element</a>s containing nodes found
 * @example
 * <div><code>
 * function setup() {
 *   createButton('btn');
 *   createButton('2nd btn');
 *   createButton('3rd btn');
 *   let buttons = selectAll('button');
 *
 *   for (let i = 0; i < 3; i++) {
 *     buttons[i].size(100);
 *     buttons[i].position(0, i * 30);
 *   }
 * }
 * </code></div>
 * <div><code>
 * // these are all valid calls to selectAll()
 * let a = selectAll('.beep');
 * a = selectAll('div');
 * a = selectAll('button', '#container');
 *
 * let b = createDiv();
 * b.id('container');
 * let c = select('#container');
 * a = selectAll('p', c);
 * a = selectAll('#container p');
 *
 * let d = document.getElementById('container');
 * a = selectAll('.boop', d);
 * a = selectAll('#container .boop');
 * console.log(a);
 * </code></div>
 */a.default.prototype.selectAll=function(t,r){a.default._validateParameters("selectAll",arguments);var n=[],o=this._getContainer(r).querySelectorAll(t);if(o)for(var s=0;s<o.length;s++){var l=this._wrapElement(o[s]);n.push(l)}return n},/**
 * Helper function for select and selectAll
 */a.default.prototype._getContainer=function(t){var r=document;return"string"==typeof t?r=document.querySelector(t)||document:t instanceof a.default.Element?r=t.elt:t instanceof HTMLElement&&(r=t),r},/**
 * Helper function for getElement and getElements.
 */a.default.prototype._wrapElement=function(t){var r=Array.prototype.slice.call(t.children);if("INPUT"===t.tagName&&"checkbox"===t.type){var n=new a.default.Element(t,this);return n.checked=function(){return 0==arguments.length?this.elt.checked:((arguments.length<=0?void 0:arguments[0])?this.elt.checked=!0:this.elt.checked=!1,this)},n}return"VIDEO"===t.tagName||"AUDIO"===t.tagName?new a.default.MediaElement(t,this):"SELECT"===t.tagName?this.createSelect(new a.default.Element(t,this)):r.length>0&&r.every(function(t){return"INPUT"===t.tagName||"LABEL"===t.tagName})?this.createRadio(new a.default.Element(t,this)):new a.default.Element(t,this)},/**
 * Removes all elements created by p5, except any canvas / graphics
 * elements created by <a href="#/p5/createCanvas">createCanvas</a> or <a href="#/p5/createGraphics">createGraphics</a>.
 * Event handlers are removed, and element is removed from the DOM.
 * @method removeElements
 * @example
 * <div><code>
 * function setup() {
 *   createCanvas(100, 100);
 *   background('grey');
 *   let div = createDiv('this is some text');
 *   let p = createP('this is a paragraph');
 *   div.style('font-size', '16px');
 *   p.style('font-size', '16px');
 * }
 * function mousePressed() {
 *   removeElements(); // this will remove the div and p, not canvas
 * }
 * </code></div>
 */a.default.prototype.removeElements=function(t){a.default._validateParameters("removeElements",arguments);// el.remove splices from this._elements, so don't mix iteration with it
var r=function(t){return!(t.elt instanceof HTMLCanvasElement)};this._elements.filter(r).map(function(t){return t.remove()})},/**
 * The .<a href="#/p5.Element/changed">changed()</a> function is called when the value of an
 * element changes.
 * This can be used to attach an element specific event listener.
 *
 * @method changed
 * @param  {Function|Boolean} fxn function to be fired when the value of
 *                                an element changes.
 *                                if `false` is passed instead, the previously
 *                                firing function will no longer fire.
 * @chainable
 * @example
 * <div><code>
 * let sel;
 *
 * function setup() {
 *   textAlign(CENTER);
 *   background(200);
 *   sel = createSelect();
 *   sel.position(10, 10);
 *   sel.option('pear');
 *   sel.option('kiwi');
 *   sel.option('grape');
 *   sel.changed(mySelectEvent);
 * }
 *
 * function mySelectEvent() {
 *   let item = sel.value();
 *   background(200);
 *   text("it's a " + item + '!', 50, 50);
 * }
 * </code></div>
 *
 * <div><code>
 * let checkbox;
 * let cnv;
 *
 * function setup() {
 *   checkbox = createCheckbox(' fill');
 *   checkbox.changed(changeFill);
 *   cnv = createCanvas(100, 100);
 *   cnv.position(0, 30);
 *   noFill();
 * }
 *
 * function draw() {
 *   background(200);
 *   ellipse(50, 50, 50, 50);
 * }
 *
 * function changeFill() {
 *   if (checkbox.checked()) {
 *     fill(0);
 *   } else {
 *     noFill();
 *   }
 * }
 * </code></div>
 *
 * @alt
 * dropdown: pear, kiwi, grape. When selected text "it's a" + selection shown.
 */a.default.Element.prototype.changed=function(t){return a.default.Element._adjustListener("change",t,this),this},/**
 * The .<a href="#/p5.Element/input">input()</a> function is called when any user input is
 * detected with an element. The input event is often used
 * to detect keystrokes in a input element, or changes on a
 * slider element. This can be used to attach an element specific
 * event listener.
 *
 * @method input
 * @param  {Function|Boolean} fxn function to be fired when any user input is
 *                                detected within the element.
 *                                if `false` is passed instead, the previously
 *                                firing function will no longer fire.
 * @chainable
 * @example
 * <div><code>
 * // Open your console to see the output
 * function setup() {
 *   createCanvas(100, 100);
 *   background('grey');
 *   let inp = createInput('');
 *   inp.position(0, 0);
 *   inp.size(100);
 *   inp.input(myInputEvent);
 * }
 *
 * function myInputEvent() {
 *   console.log('you are typing: ', this.value());
 * }
 * </code></div>
 *
 * @alt
 * no display.
 */a.default.Element.prototype.input=function(t){return a.default.Element._adjustListener("input",t,this),this},a.default.prototype.createDiv=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",r=document.createElement("div");return r.innerHTML=t,v(r,this)},/**
 * Creates a `&lt;p&gt;&lt;/p&gt;` element in the DOM with given inner HTML. Used
 * for paragraph length text.
 *
 * @method createP
 * @param  {String} [html] inner HTML for element created
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 * @example
 * <div><code>
 * let p = createP('this is some text');
 * p.style('font-size', '16px');
 * p.position(10, 0);
 * </code></div>
 */a.default.prototype.createP=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",r=document.createElement("p");return r.innerHTML=t,v(r,this)},/**
 * Creates a `&lt;span&gt;&lt;/span&gt;` element in the DOM with given inner HTML.
 *
 * @method createSpan
 * @param  {String} [html] inner HTML for element created
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 * @example
 * <div><code>
 * let span = createSpan('this is some text');
 * span.position(0, 0);
 * </code></div>
 */a.default.prototype.createSpan=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",r=document.createElement("span");return r.innerHTML=t,v(r,this)},/**
 * Creates an `&lt;img&gt;` element in the DOM with given src and
 * alternate text.
 *
 * @method createImg
 * @param  {String} src src path or url for image
 * @param  {String} alt <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Img#Attributes">alternate text</a> to be used if image does not load. You can use also an empty string (`""`) if that an image is not intended to be viewed.
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 * @example
 *  <div><code>
 * let img = createImg(
 *   'https://p5js.org/assets/img/asterisk-01.png',
 *   'the p5 magenta asterisk'
 * );
 * img.position(0, -10);
 * </code></div>
 *//**
 * @method createImg
 * @param  {String} src
 * @param  {String} alt
 * @param  {String} crossOrigin <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes">crossOrigin property</a> of the `img` element; use either 'anonymous' or 'use-credentials' to retrieve the image with cross-origin access (for later use with `canvas`. if an empty string(`""`) is passed, CORS is not used
 * @param  {Function} [successCallback] callback to be called once image data is loaded with the <a href="#/p5.Element">p5.Element</a> as argument
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 */a.default.prototype.createImg=function(){a.default._validateParameters("createImg",arguments);var t,r=document.createElement("img"),n=arguments;return n.length>1&&"string"==typeof n[1]&&(r.alt=n[1]),n.length>2&&"string"==typeof n[2]&&(r.crossOrigin=n[2]),r.src=n[0],t=v(r,this),r.addEventListener("load",function(){t.width=r.offsetWidth||r.width,t.height=r.offsetHeight||r.height;var o=n[n.length-1];"function"==typeof o&&o(t)}),t},/**
 * Creates an `&lt;a&gt;&lt;/a&gt;` element in the DOM for including a hyperlink.
 *
 * @method createA
 * @param  {String} href       url of page to link to
 * @param  {String} html       inner html of link element to display
 * @param  {String} [target]   target where new link should open,
 *                             could be _blank, _self, _parent, _top.
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 * @example
 * <div><code>
 * let a = createA('http://p5js.org/', 'this is a link');
 * a.position(0, 0);
 * </code></div>
 */a.default.prototype.createA=function(t,r,n){a.default._validateParameters("createA",arguments);var o=document.createElement("a");return o.href=t,o.innerHTML=r,n&&(o.target=n),v(o,this)},/** INPUT **//**
 * Creates a slider `&lt;input&gt;&lt;/input&gt;` element in the DOM.
 * Use .size() to set the display length of the slider.
 *
 * @method createSlider
 * @param  {Number} min minimum value of the slider
 * @param  {Number} max maximum value of the slider
 * @param  {Number} [value] default value of the slider
 * @param  {Number} [step] step size for each tick of the slider (if step is set to 0, the slider will move continuously from the minimum to the maximum value)
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding the created node
 * @example
 * <div><code>
 * let slider;
 * function setup() {
 *   slider = createSlider(0, 255, 100);
 *   slider.position(10, 10);
 *   slider.style('width', '80px');
 * }
 *
 * function draw() {
 *   let val = slider.value();
 *   background(val);
 * }
 * </code></div>
 *
 * <div><code>
 * let slider;
 * function setup() {
 *   colorMode(HSB);
 *   slider = createSlider(0, 360, 60, 40);
 *   slider.position(10, 10);
 *   slider.style('width', '80px');
 * }
 *
 * function draw() {
 *   let val = slider.value();
 *   background(val, 100, 100, 1);
 * }
 * </code></div>
 */a.default.prototype.createSlider=function(t,r,n,o){a.default._validateParameters("createSlider",arguments);var s=document.createElement("input");return s.type="range",s.min=t,s.max=r,0===o?s.step=1e-18:o&&(s.step=o),"number"==typeof n&&(s.value=n),v(s,this)},/**
 * Creates a `&lt;button&gt;&lt;/button&gt;` element in the DOM.
 * Use .size() to set the display size of the button.
 * Use .mousePressed() to specify behavior on press.
 *
 * @method createButton
 * @param  {String} label label displayed on the button
 * @param  {String} [value] value of the button
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 * @example
 * <div><code>
 * let button;
 * function setup() {
 *   createCanvas(100, 100);
 *   background(0);
 *   button = createButton('click me');
 *   button.position(0, 0);
 *   button.mousePressed(changeBG);
 * }
 *
 * function changeBG() {
 *   let val = random(255);
 *   background(val);
 * }
 * </code></div>
 */a.default.prototype.createButton=function(t,r){a.default._validateParameters("createButton",arguments);var n=document.createElement("button");return n.innerHTML=t,r&&(n.value=r),v(n,this)},/**
 * Creates a checkbox `&lt;input&gt;&lt;/input&gt;` element in the DOM.
 * Calling .checked() on a checkbox returns a boolean indicating whether
 * it is checked or not.
 *
 * @method createCheckbox
 * @param  {String} [label] label displayed after checkbox
 * @param  {boolean} [value] value of the checkbox; checked is true, unchecked is false
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 * @example
 * <div><code>
 * let checkbox;
 *
 * function setup() {
 *   checkbox = createCheckbox('label', false);
 *   checkbox.changed(myCheckedEvent);
 * }
 *
 * function myCheckedEvent() {
 *   if (checkbox.checked()) {
 *     console.log('Checking!');
 *   } else {
 *     console.log('Unchecking!');
 *   }
 * }
 * </code></div>
 */a.default.prototype.createCheckbox=function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];a.default._validateParameters("createCheckbox",r);var o=document.createElement("div"),s=document.createElement("input");// Create checkbox type input element
s.type="checkbox";var l=document.createElement("label");l.appendChild(s),o.appendChild(l);var c=v(o,this);if(c.checked=function(){var t=c.elt.firstElementChild.getElementsByTagName("input")[0];if(t){if(0==arguments.length)return t.checked;(arguments.length<=0?void 0:arguments[0])?t.checked=!0:t.checked=!1}return c},this.value=function(t){return c.value=t,this},r[0]){c.value(r[0]);var u=document.createElement("span");u.innerHTML=r[0],l.appendChild(u)}// Set the checked value of checkbox if passed
return r[1]&&(s.checked=!0),c},/**
 * Creates a dropdown menu `&lt;select&gt;&lt;/select&gt;` element in the DOM.
 * It also assigns select-related methods to <a href="#/p5.Element">p5.Element</a> when selecting an existing select box. Options in the menu are unique by `name` (the display text).
 * - `.option(name, [value])` can be used to add an option with `name` (the display text) and `value` to the select element. If an option with `name` already exists within the select element, this method will change its value to `value`.
 * - `.value()` will return the currently selected option.
 * - `.selected()` will return the current dropdown element which is an instance of <a href="#/p5.Element">p5.Element</a>.
 * - `.selected(value)` can be used to make given option selected by default when the page first loads.
 * - `.disable()` marks the whole dropdown element as disabled.
 * - `.disable(value)` marks a given option as disabled.
 * - `.enable()` marks the whole dropdown element as enabled if whole dropdown element is disabled intially.
 * - `.enable(value)` marks a given option as enable if the initial option is disabled.
 *
 * @method createSelect
 * @param {boolean} [multiple] true if dropdown should support multiple selections
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 * @example
 * <div><code>
 * let sel;
 *
 * function setup() {
 *   textAlign(CENTER);
 *   background(200);
 *   sel = createSelect();
 *   sel.position(10, 10);
 *   sel.option('pear');
 *   sel.option('kiwi');
 *   sel.option('grape');
 *   sel.selected('kiwi');
 *   sel.changed(mySelectEvent);
 * }
 *
 * function mySelectEvent() {
 *   let item = sel.value();
 *   background(200);
 *   text('It is a ' + item + '!', 50, 50);
 * }
 * </code></div>
 *
 * <div><code>
 * let sel;
 *
 * function setup() {
 *   textAlign(CENTER);
 *   background(200);
 *   sel = createSelect();
 *   sel.position(10, 10);
 *   sel.option('oil');
 *   sel.option('milk');
 *   sel.option('bread');
 *   sel.disable('milk');
 * }
 * </code></div>
 * <div><code>
 * let sel;
 *
 * function setup() {
 *   textAlign(CENTER);
 *   background(200);
 *   sel = createSelect();
 *   sel.position(10, 10);
 *   sel.option('oil');
 *   sel.option('milk');
 *   sel.option('bread');
 *   // disable milk and oil
 *   sel.disable('milk');
 *   sel.disable('oil');
 *   // enable milk again
 *   sel.enable('milk');
 * }
 * </code></div>
 *//**
 * @method createSelect
 * @param {Object} existing DOM select element
 * @return {p5.Element}
 */a.default.prototype.createSelect=function(){for(var t,r=arguments.length,n=Array(r),o=0;o<r;o++)n[o]=arguments[o];a.default._validateParameters("createSelect",n);var s=n[0];if(s instanceof a.default.Element&&s.elt instanceof HTMLSelectElement)// If given argument is p5.Element of select type
t=s,this.elt=s.elt;else if(s instanceof HTMLSelectElement)t=v(s,this),this.elt=s;else{var l=document.createElement("select");s&&"boolean"==typeof s&&l.setAttribute("multiple","true"),t=v(l,this),this.elt=l}return t.option=function(t,r){var n;// if no name is passed, return
if(void 0!==t){//see if there is already an option with this name
for(var o=0;o<this.elt.length;o+=1)if(this.elt[o].textContent===t){n=o;break}//if there is an option with this name we will modify it
if(void 0!==n)//if the user passed in false then delete that option
!1===r?this.elt.remove(n):this.elt[n].value=r;else{//if it doesn't exist create it
var a=document.createElement("option");a.textContent=t,a.value=void 0===r?t:r,this.elt.appendChild(a),this._pInst._elements.push(a)}}},t.selected=function(t){// Update selected status of option
if(void 0!==t){for(var r=0;r<this.elt.length;r+=1)this.elt[r].value.toString()===t.toString()&&(this.elt.selectedIndex=r);return this}if(!this.elt.getAttribute("multiple"))return this.elt.value;var n=[],o=!0,a=!1,s=void 0;try{for(var l,c=this.elt.selectedOptions[Symbol.iterator]();!(o=(l=c.next()).done);o=!0){var u=l.value;n.push(u.value)}}catch(t){a=!0,s=t}finally{try{o||null==c.return||c.return()}finally{if(a)throw s}}return n},t.disable=function(t){if("string"==typeof t)for(var r=0;r<this.elt.length;r++)this.elt[r].value.toString()===t&&(this.elt[r].disabled=!0,this.elt[r].selected=!1);else this.elt.disabled=!0;return this},t.enable=function(t){if("string"==typeof t)for(var r=0;r<this.elt.length;r++)this.elt[r].value.toString()===t&&(this.elt[r].disabled=!1,this.elt[r].selected=!1);else{this.elt.disabled=!1;for(var n=0;n<this.elt.length;n++)this.elt[n].disabled=!1,this.elt[n].selected=!1}return this},t},/**
 * Creates a radio button element in the DOM. It also helps existing radio buttons
 * assign methods of <a href="#/p5.Element/">p5.Element</a>.
 * - `.option(value, [label])` can be used to create a new option for the
 *   element. If an option with a value already exists, it will be returned.
 *   It is recommended to use string values as input for `value`.
 *   Optionally, a label can be provided as second argument for the option.
 * - `.remove(value)` can be used to remove an option for the element. String
 *   values recommended as input for `value`.
 * - `.value()` method will return the currently selected value.
 * - `.selected()` method will return the currently selected input element.
 * - `.selected(value)` method will select the option and return it. String
 *   values recommended as input for `value`.
 * - `.disable(Boolean)` method will enable/disable the whole radio button element.
 *
 * @method createRadio
 * @param  {Object} containerElement A container HTML Element, either a div
 * or span, inside which all existing radio inputs will be considered as options.
 * @param {string} [name] A name parameter for each Input Element.
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 * @example
 * <div><code>
 * let radio;
 *
 * function setup() {
 *   radio = createRadio();
 *   radio.option('black');
 *   radio.option('white');
 *   radio.option('gray');
 *   radio.style('width', '60px');
 *   textAlign(CENTER);
 *   fill(255, 0, 0);
 * }
 *
 * function draw() {
 *   let val = radio.value();
 *   background(val);
 *   text(val, width / 2, height / 2);
 * }
 * </code></div>
 * <div><code>
 * let radio;
 *
 * function setup() {
 *   radio = createRadio();
 *   radio.option('1', 'apple');
 *   radio.option('2', 'bread');
 *   radio.option('3', 'juice');
 *   radio.style('width', '30px');
 *   radio.selected('2');
 *   textAlign(CENTER);
 * }
 *
 * function draw() {
 *   background(200);
 *   let val = radio.value();
 *   if (val) {
 *     text('item cost is $' + val, width / 2, height / 2);
 *   }
 * }
 * </code></div>
 *//**
 * @method createRadio
 * @param {String} name
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 *//**
 * @method createRadio
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 */a.default.prototype.createRadio=function(){var t,r,n,o=arguments.length<=0?void 0:arguments[0];o instanceof a.default.Element&&(o.elt instanceof HTMLDivElement||o.elt instanceof HTMLSpanElement)?(// If given argument is p5.Element of div/span type
t=o,this.elt=o.elt):o instanceof HTMLDivElement||o instanceof HTMLSpanElement?(t=v(o,this),this.elt=o,r=o,"string"==typeof(arguments.length<=1?void 0:arguments[1])&&(n=arguments.length<=1?void 0:arguments[1])):("string"==typeof o&&(n=o),t=v(r=document.createElement("div"),this),this.elt=r),t._name=n||"radioOption";var s=function(t){return t instanceof HTMLInputElement&&"radio"===t.type},l=function(t){return t instanceof HTMLLabelElement},c=function(t){return t instanceof HTMLSpanElement};return t._getOptionsArray=function(){return Array.from(this.elt.children).filter(function(t){return s(t)||l(t)&&s(t.firstElementChild)}).map(function(t){return s(t)?t:t.firstElementChild})},t.option=function(r,n){var o,a,s=!0,u=!1,p=void 0;try{for(var d,m,f=t._getOptionsArray()[Symbol.iterator]();!(s=(m=f.next()).done);s=!0){var h=m.value;if(h.value===r){d=h;break}}// Create a new option, add it to radioElement and return it.
}catch(t){u=!0,p=t}finally{try{s||null==f.return||f.return()}finally{if(u)throw p}}return void 0===d&&((d=document.createElement("input")).setAttribute("type","radio"),d.setAttribute("value",r)),d.setAttribute("name",t._name),l(d.parentElement)?o=d.parentElement:(o=document.createElement("label")).insertAdjacentElement("afterbegin",d),c(o.lastElementChild)?a=o.lastElementChild:(a=document.createElement("span"),d.insertAdjacentElement("afterend",a)),// Set the innerHTML of span element as the label text
a.innerHTML=void 0===n?r:n,// span element to the radio container element
this.elt.appendChild(o),d},t.remove=function(r){var n=!0,o=!1,a=void 0;try{for(var s,c=t._getOptionsArray()[Symbol.iterator]();!(n=(s=c.next()).done);n=!0){var u=s.value;if(u.value===r){l(u.parentElement)?u.parentElement.remove():u.remove();return}}}catch(t){o=!0,a=t}finally{try{n||null==c.return||c.return()}finally{if(o)throw a}}},t.value=function(){var r="",n=!0,o=!1,a=void 0;try{for(var s,l=t._getOptionsArray()[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){var c=s.value;if(c.checked){r=c.value;break}}}catch(t){o=!0,a=t}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}return r},t.selected=function(r){var n=null;if(void 0===r){var o=!0,a=!1,s=void 0;try{for(var l,c=t._getOptionsArray()[Symbol.iterator]();!(o=(l=c.next()).done);o=!0){var u=l.value;if(u.checked){n=u;break}}}catch(t){a=!0,s=t}finally{try{o||null==c.return||c.return()}finally{if(a)throw s}}}else{// forEach loop to uncheck all radio buttons before
// setting any one as checked.
t._getOptionsArray().forEach(function(t){t.checked=!1,t.removeAttribute("checked")});var p=!0,d=!1,m=void 0;try{for(var f,h=t._getOptionsArray()[Symbol.iterator]();!(p=(f=h.next()).done);p=!0){var y=f.value;y.value===r&&(y.setAttribute("checked",!0),y.checked=!0,n=y)}}catch(t){d=!0,m=t}finally{try{p||null==h.return||h.return()}finally{if(d)throw m}}}return n},t.disable=function(){var r=!(arguments.length>0)||void 0===arguments[0]||arguments[0],n=!0,o=!1,a=void 0;try{for(var s,l=t._getOptionsArray()[Symbol.iterator]();!(n=(s=l.next()).done);n=!0)s.value.setAttribute("disabled",r)}catch(t){o=!0,a=t}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}},t},/**
 * Creates a colorPicker element in the DOM for color input.
 * The .value() method will return a hex string (#rrggbb) of the color.
 * The .color() method will return a <a href="#/p5.Color">p5.Color</a>
 * object with the current chosen color.
 *
 * @method createColorPicker
 * @param {String|p5.Color} [value] default color of element
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 * @example
 * <div><code>
 * let colorPicker;
 * function setup() {
 *   createCanvas(100, 100);
 *   colorPicker = createColorPicker('#ed225d');
 *   colorPicker.position(0, height + 5);
 * }
 *
 * function draw() {
 *   background(colorPicker.color());
 * }
 * </code></div>
 * <div><code>
 * let inp1, inp2;
 * function setup() {
 *   createCanvas(100, 100);
 *   background('grey');
 *   inp1 = createColorPicker('#ff0000');
 *   inp1.position(0, height + 5);
 *   inp1.input(setShade1);
 *   inp2 = createColorPicker(color('yellow'));
 *   inp2.position(0, height + 30);
 *   inp2.input(setShade2);
 *   setMidShade();
 * }
 *
 * function setMidShade() {
 *   // Finding a shade between the two
 *   let commonShade = lerpColor(inp1.color(), inp2.color(), 0.5);
 *   fill(commonShade);
 *   rect(20, 20, 60, 60);
 * }
 *
 * function setShade1() {
 *   setMidShade();
 *   console.log('You are choosing shade 1 to be : ', this.value());
 * }
 * function setShade2() {
 *   setMidShade();
 *   console.log('You are choosing shade 2 to be : ', this.value());
 * }
 * </code></div>
 */a.default.prototype.createColorPicker=function(t){a.default._validateParameters("createColorPicker",arguments);var r,n=document.createElement("input");return n.type="color",t?t instanceof a.default.Color?n.value=t.toString("#rrggbb"):(a.default.prototype._colorMode="rgb",a.default.prototype._colorMaxes={rgb:[255,255,255,255],hsb:[360,100,100,1],hsl:[360,100,100,1]},n.value=a.default.prototype.color(t).toString("#rrggbb")):n.value="#000000",(r=v(n,this)).color=function(){return t&&(t.mode&&(a.default.prototype._colorMode=t.mode),t.maxes&&(a.default.prototype._colorMaxes=t.maxes)),a.default.prototype.color(this.elt.value)},r},/**
 * Creates an `&lt;input&gt;&lt;/input&gt;` element in the DOM for text input.
 * Use .<a href="#/p5.Element/size">size()</a> to set the display length of the box.
 *
 * @method createInput
 * @param {String} value default value of the input box
 * @param {String} [type] type of text, ie text, password etc. Defaults to text.
 *   Needs a value to be specified first.
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 * @example
 * <div><code>
 * function setup() {
 *   createCanvas(100, 100);
 *   background('grey');
 *   let inp = createInput('');
 *   inp.position(0, 0);
 *   inp.size(100);
 *   inp.input(myInputEvent);
 * }
 *
 * function myInputEvent() {
 *   console.log('you are typing: ', this.value());
 * }
 * </code></div>
 *//**
 * @method createInput
 * @param {String} [value]
 * @return {p5.Element}
 */a.default.prototype.createInput=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"text";a.default._validateParameters("createInput",arguments);var n=document.createElement("input");return n.setAttribute("value",t),n.setAttribute("type",r),v(n,this)},/**
 * Creates an `&lt;input&gt;&lt;/input&gt;` element in the DOM of type 'file'.
 * This allows users to select local files for use in a sketch.
 *
 * @method createFileInput
 * @param  {Function} callback callback function for when a file is loaded
 * @param  {Boolean} [multiple] optional, to allow multiple files to be selected
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created DOM element
 * @example
 * <div><code>
 * let input;
 * let img;
 *
 * function setup() {
 *   input = createFileInput(handleFile);
 *   input.position(0, 0);
 * }
 *
 * function draw() {
 *   background(255);
 *   if (img) {
 *     image(img, 0, 0, width, height);
 *   }
 * }
 *
 * function handleFile(file) {
 *   print(file);
 *   if (file.type === 'image') {
 *     img = createImg(file.data, '');
 *     img.hide();
 *   } else {
 *     img = null;
 *   }
 * }
 * </code></div>
 */a.default.prototype.createFileInput=function(t){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];a.default._validateParameters("createFileInput",arguments);var n=function(r){var n=!0,o=!1,s=void 0;try{for(var l,c=r.target.files[Symbol.iterator]();!(n=(l=c.next()).done);n=!0){var u=l.value;a.default.File._load(u,t)}}catch(t){o=!0,s=t}finally{try{n||null==c.return||c.return()}finally{if(o)throw s}}};// If File API's are not supported, throw Error
if(!(window.File&&window.FileReader&&window.FileList&&window.Blob)){console.log("The File APIs are not fully supported in this browser. Cannot create element.");return}var o=document.createElement("input");return o.setAttribute("type","file"),r&&o.setAttribute("multiple",!0),o.addEventListener("change",n,!1),v(o,this)},a.default.prototype.createVideo=function(t,r){return a.default._validateParameters("createVideo",arguments),b(this,"video",t,r)},/** AUDIO STUFF **//**
 * Creates a hidden HTML5 `&lt;audio&gt;` element in the DOM for simple audio
 * playback. The first parameter can be either a single string path to a
 * audio file, or an array of string paths to different formats of the same
 * audio. This is useful for ensuring that your audio can play across
 * different browsers, as each supports different formats.
 * See <a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats'>this
 * page for further information about supported formats</a>.
 *
 * @method createAudio
 * @param  {String|String[]} [src] path to an audio file, or array of paths
 *                             for supporting different browsers
 * @param  {Function} [callback] callback function to be called upon
 *                             'canplaythrough' event fire, that is, when the
 *                             browser can play the media, and estimates that
 *                             enough data has been loaded to play the media
 *                             up to its end without having to stop for
 *                             further buffering of content
 * @return {p5.MediaElement}   pointer to audio <a href="#/p5.MediaElement">p5.MediaElement</a>
 * @example
 * <div><code>
 * let ele;
 * function setup() {
 *   ele = createAudio('assets/beat.mp3');
 *
 *   // here we set the element to autoplay
 *   // The element will play as soon
 *   // as it is able to do so.
 *   ele.autoplay(true);
 * }
 * </code></div>
 */a.default.prototype.createAudio=function(t,r){return a.default._validateParameters("createAudio",arguments),b(this,"audio",t,r)},/** CAMERA STUFF **/a.default.prototype.VIDEO="video",a.default.prototype.AUDIO="audio",void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(t){// First get ahold of the legacy getUserMedia, if present
var r=navigator.webkitGetUserMedia||navigator.mozGetUserMedia;// Some browsers just don't implement it - return a rejected promise with an error
return(// to keep a consistent interface
r?new Promise(function(n,o){r.call(navigator,t,n,o)}):Promise.reject(Error("getUserMedia is not implemented in this browser")))}),/**
 * Creates a new HTML5 `&lt;video&gt;` element that contains the audio/video feed
 * from a webcam. The element is separate from the canvas and is displayed by
 * default. The element can be hidden using .<a href="#/p5.Element/hide">hide()</a>.
 * The feed can be drawn onto the canvas using <a href="#/p5/image">image()</a>.
 * The loadedmetadata property can be used to detect when the element has fully
 * loaded (see second example).
 *
 * More specific properties of the feed can be passing in a Constraints object.
 * See the <a href='http://w3c.github.io/mediacapture-main/getusermedia.html#media-track-constraints'>
 * W3C spec</a> for possible properties. Note that not all of these are supported
 * by all browsers.
 *
 * <em>Security note</em>: A new browser security specification requires that
 * getUserMedia, which is behind <a href="#/p5/createCapture">createCapture()</a>,
 * only works when you're running the code locally, or on HTTPS. Learn more
 * <a href='http://stackoverflow.com/questions/34197653/getusermedia-in-chrome-47-without-using-https'>here</a>
 * and <a href='https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia'>here</a>.
 *
 * @method createCapture
 * @param  {String|Constant|Object}   type type of capture, either VIDEO or
 *                                   AUDIO if none specified, default both,
 *                                   or a Constraints object
 * @param  {Function}                 [callback] function to be called once
 *                                   stream has loaded
 * @return {p5.Element} capture video <a href="#/p5.Element">p5.Element</a>
 * @example
 * <div class='notest'>
 * <code>
 * let capture;
 *
 * function setup() {
 *   createCanvas(100, 100);
 *   capture = createCapture(VIDEO);
 *   capture.hide();
 * }
 *
 * function draw() {
 *   image(capture, 0, 0, width, width * capture.height / capture.width);
 *   filter(INVERT);
 * }
 * </code>
 * </div>
 *
 * <div class='notest norender'>
 * <code>
 * function setup() {
 *   createCanvas(480, 120);
 *   let constraints = {
 *     video: {
 *       mandatory: {
 *         minWidth: 1280,
 *         minHeight: 720
 *       },
 *       optional: [{ maxFrameRate: 10 }]
 *     },
 *     audio: true
 *   };
 *   createCapture(constraints, function(stream) {
 *     console.log(stream);
 *   });
 * }
 * </code>
 * </div>
 * <div class='notest norender'>
 * <code>
 * let capture;
 *
 * function setup() {
 *   createCanvas(640, 480);
 *   capture = createCapture(VIDEO);
 * }
 * function draw() {
 *   background(0);
 *   if (capture.loadedmetadata) {
 *     let c = capture.get(0, 0, 100, 100);
 *     image(c, 0, 0);
 *   }
 * }
 * </code>
 * </div>
 */a.default.prototype.createCapture=function(){for(var t,r,n=arguments.length,o=Array(n),s=0;s<n;s++)o[s]=arguments[s];if(a.default._validateParameters("createCapture",o),!(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia))throw new DOMException("getUserMedia not supported in this browser");for(var l=!0,c=!0,u=0,p=o;u<p.length;u++){var d=p[u];d===a.default.prototype.VIDEO?c=!1:d===a.default.prototype.AUDIO?l=!1:"object"===g(d)?t=d:"function"==typeof d&&(r=d)}t||(t={video:l,audio:c});var m=document.createElement("video");// required to work in iOS 11 & up:
m.setAttribute("playsinline",""),navigator.mediaDevices.getUserMedia(t).then(function(t){try{"srcObject"in m?m.srcObject=t:m.src=window.URL.createObjectURL(t)}catch(r){m.src=t}},console.log);var f=v(m,this,!0);return f.loadedmetadata=!1,m.addEventListener("loadedmetadata",function(){m.play(),m.width?(f.width=m.width,f.height=m.height):(f.width=f.elt.width=m.videoWidth,f.height=f.elt.height=m.videoHeight),f.loadedmetadata=!0,r&&r(m.srcObject)}),f},/**
 * Creates element with given tag in the DOM with given content.
 *
 * @method createElement
 * @param  {String} tag tag for the new element
 * @param  {String} [content] html content to be inserted into the element
 * @return {p5.Element} pointer to <a href="#/p5.Element">p5.Element</a> holding created node
 * @example
 * <div><code>
 * let h5 = createElement('h5', 'im an h5 p5.element!');
 * h5.style('color', '#00a1d3');
 * h5.position(0, 0);
 * </code></div>
 */a.default.prototype.createElement=function(t,r){a.default._validateParameters("createElement",arguments);var n=document.createElement(t);return void 0!==r&&(n.innerHTML=r),v(n,this)},//                         p5.Element additions
// =============================================================================
/**
 *
 * Adds specified class to the element.
 *
 * @for p5.Element
 * @method addClass
 * @param  {String} class name of class to add
 * @chainable
 * @example
 * <div class='norender'><code>
 * let div = createDiv('div');
 * div.addClass('myClass');
 * </code></div>
 */a.default.Element.prototype.addClass=function(t){return this.elt.className?this.hasClass(t)||(this.elt.className=this.elt.className+" "+t):this.elt.className=t,this},/**
 *
 * Removes specified class from the element.
 *
 * @method removeClass
 * @param  {String} class name of class to remove
 * @chainable
 * @example
 * <div class='norender'><code>
 * // In this example, a class is set when the div is created
 * // and removed when mouse is pressed. This could link up
 * // with a CSS style rule to toggle style properties.
 *
 * let div;
 *
 * function setup() {
 *   div = createDiv('div');
 *   div.addClass('myClass');
 * }
 *
 * function mousePressed() {
 *   div.removeClass('myClass');
 * }
 * </code></div>
 */a.default.Element.prototype.removeClass=function(t){return(// Note: Removing a class that does not exist does NOT throw an error in classList.remove method
this.elt.classList.remove(t),this)},/**
 *
 * Checks if specified class is already applied to element.
 *
 * @method hasClass
 * @returns {boolean} a boolean value if element has specified class
 * @param c {String} class name of class to check
 * @example
 * <div class='norender'><code>
 * let div;
 *
 * function setup() {
 *   div = createDiv('div');
 *   div.addClass('show');
 * }
 *
 * function mousePressed() {
 *   if (div.hasClass('show')) {
 *     div.addClass('show');
 *   } else {
 *     div.removeClass('show');
 *   }
 * }
 * </code></div>
 */a.default.Element.prototype.hasClass=function(t){return this.elt.classList.contains(t)},/**
 *
 * Toggles element class.
 *
 * @method toggleClass
 * @param c {String} class name to toggle
 * @chainable
 * @example
 * <div class='norender'><code>
 * let div;
 *
 * function setup() {
 *   div = createDiv('div');
 *   div.addClass('show');
 * }
 *
 * function mousePressed() {
 *   div.toggleClass('show');
 * }
 * </code></div>
 */a.default.Element.prototype.toggleClass=function(t){return this.elt.classList.contains(t)?this.elt.classList.remove(t):this.elt.classList.add(t),this},/**
 *
 * Attaches the element  as a child to the parent specified.
 * Accepts either a string ID, DOM node, or <a href="#/p5.Element">p5.Element</a>.
 * If no argument is specified, an array of children DOM nodes is returned.
 *
 * @method child
 * @returns {Node[]} an array of child nodes
 * @example
 * <div class='norender'><code>
 * let div0 = createDiv('this is the parent');
 * let div1 = createDiv('this is the child');
 * div0.child(div1); // use p5.Element
 * </code></div>
 * <div class='norender'><code>
 * let div0 = createDiv('this is the parent');
 * let div1 = createDiv('this is the child');
 * div1.id('apples');
 * div0.child('apples'); // use id
 * </code></div>
 * <div class='norender notest'><code>
 * // this example assumes there is a div already on the page
 * // with id "myChildDiv"
 * let div0 = createDiv('this is the parent');
 * let elt = document.getElementById('myChildDiv');
 * div0.child(elt); // use element from page
 * </code></div>
 *//**
 * @method child
 * @param  {String|p5.Element} [child] the ID, DOM node, or <a href="#/p5.Element">p5.Element</a>
 *                         to add to the current element
 * @chainable
 */a.default.Element.prototype.child=function(t){return void 0===t?this.elt.childNodes:("string"==typeof t?("#"===t[0]&&(t=t.substring(1)),t=document.getElementById(t)):t instanceof a.default.Element&&(t=t.elt),t instanceof HTMLElement&&this.elt.appendChild(t),this)},/**
 * Centers a p5.Element either vertically, horizontally,
 * or both, relative to its parent or according to
 * the body if the p5.Element has no parent. If no argument is passed
 * the p5.Element is aligned both vertically and horizontally.
 *
 * @method center
 * @param  {String} [align]       passing 'vertical', 'horizontal' aligns element accordingly
 * @chainable
 *
 * @example
 * <div><code>
 * function setup() {
 *   let div = createDiv('').size(10, 10);
 *   div.style('background-color', 'orange');
 *   div.center();
 * }
 * </code></div>
 */a.default.Element.prototype.center=function(t){var r=this.elt.style.display,n="none"===this.elt.style.display,o="none"===this.parent().style.display,a={x:this.elt.offsetLeft,y:this.elt.offsetTop};n&&this.show(),o&&this.parent().show(),this.elt.style.display="block",this.position(0,0);var s=Math.abs(this.parent().offsetWidth-this.elt.offsetWidth),l=Math.abs(this.parent().offsetHeight-this.elt.offsetHeight);return"both"===t||void 0===t?this.position(s/2+this.parent().offsetLeft,l/2+this.parent().offsetTop):"horizontal"===t?this.position(s/2+this.parent().offsetLeft,a.y):"vertical"===t&&this.position(a.x,l/2+this.parent().offsetTop),this.style("display",r),n&&this.hide(),o&&this.parent().hide(),this},/**
 *
 * If an argument is given, sets the inner HTML of the element,
 * replacing any existing HTML. If true is included as a second
 * argument, HTML is appended instead of replacing existing HTML.
 * If no arguments are given, returns
 * the inner HTML of the element.
 *
 * @for p5.Element
 * @method html
 * @returns {String} the inner HTML of the element
 * @example
 * <div class='norender'><code>
 * let div = createDiv('').size(100, 100);
 * div.html('hi');
 * </code></div>
 * <div class='norender'><code>
 * let div = createDiv('Hello ').size(100, 100);
 * div.html('World', true);
 * </code></div>
 *//**
 * @method html
 * @param  {String} [html] the HTML to be placed inside the element
 * @param  {boolean} [append] whether to append HTML to existing
 * @chainable
 */a.default.Element.prototype.html=function(){return 0==arguments.length?this.elt.innerHTML:((arguments.length<=1?void 0:arguments[1])?this.elt.insertAdjacentHTML("beforeend",arguments.length<=0?void 0:arguments[0]):this.elt.innerHTML=arguments.length<=0?void 0:arguments[0],this)},/**
 *
 * Sets the position of the element. If no position type argument is given, the
 * position will be relative to (0, 0) of the window.
 * Essentially, this sets position:absolute and left and top
 * properties of style. If an optional third argument specifying position type is given,
 * the x and y-coordinates will be interpreted based on the <a target="_blank"
 * href="https://developer.mozilla.org/en-US/docs/Web/CSS/position">positioning scheme</a>.
 * If no arguments given, the function returns the x and y position of the element.
 *
 * found documentation on how to be more specific with object type
 * https://stackoverflow.com/questions/14714314/how-do-i-comment-object-literals-in-yuidoc
 *
 * @method position
 * @returns {Object} object of form { x: 0, y: 0 } containing the position of the element in an object
 * @example
 * <div><code class='norender'>
 * function setup() {
 *   let cnv = createCanvas(100, 100);
 *   // positions canvas 50px to the right and 100px
 *   // below upper left corner of the window
 *   cnv.position(50, 100);
 * }
 * </code></div>
 * <div><code class='norender'>
 * function setup() {
 *   let cnv = createCanvas(100, 100);
 *   // positions canvas at upper left corner of the window
 *   // with a 'fixed' position type
 *   cnv.position(0, 0, 'fixed');
 * }
 * </code></div>
 *//**
 * @method position
 * @param  {Number} [x] x-position relative to upper left of window (optional)
 * @param  {Number} [y] y-position relative to upper left of window (optional)
 * @param  {String} [positionType] it can be static, fixed, relative, sticky, initial or inherit (optional)
 * @chainable
 */a.default.Element.prototype.position=function(){if(0==arguments.length)return{x:this.elt.offsetLeft,y:this.elt.offsetTop};var t="absolute";return((arguments.length<=2?void 0:arguments[2])==="static"||(arguments.length<=2?void 0:arguments[2])==="fixed"||(arguments.length<=2?void 0:arguments[2])==="relative"||(arguments.length<=2?void 0:arguments[2])==="sticky"||(arguments.length<=2?void 0:arguments[2])==="initial"||(arguments.length<=2?void 0:arguments[2])==="inherit")&&(t=arguments.length<=2?void 0:arguments[2]),this.elt.style.position=t,this.elt.style.left=(arguments.length<=0?void 0:arguments[0])+"px",this.elt.style.top=(arguments.length<=1?void 0:arguments[1])+"px",this.x=arguments.length<=0?void 0:arguments[0],this.y=arguments.length<=1?void 0:arguments[1],this},/* Helper method called by p5.Element.style() */a.default.Element.prototype._translate=function(){this.elt.style.position="absolute";var t="";return this.elt.style.transform&&(t=(t=this.elt.style.transform.replace(/translate3d\(.*\)/g,"")).replace(/translate[X-Z]?\(.*\)/g,"")),2==arguments.length?this.elt.style.transform="translate("+(arguments.length<=0?void 0:arguments[0])+"px, "+(arguments.length<=1?void 0:arguments[1])+"px)":arguments.length>2&&(this.elt.style.transform="translate3d("+(arguments.length<=0?void 0:arguments[0])+"px,"+(arguments.length<=1?void 0:arguments[1])+"px,"+(arguments.length<=2?void 0:arguments[2])+"px)",3==arguments.length?this.elt.parentElement.style.perspective="1000px":this.elt.parentElement.style.perspective=(arguments.length<=3?void 0:arguments[3])+"px"),this.elt.style.transform+=t,this},/* Helper method called by p5.Element.style() */a.default.Element.prototype._rotate=function(){// save out initial non-rotate transform styling
var t="";return this.elt.style.transform&&(t=(t=this.elt.style.transform.replace(/rotate3d\(.*\)/g,"")).replace(/rotate[X-Z]?\(.*\)/g,"")),1==arguments.length?this.elt.style.transform="rotate("+(arguments.length<=0?void 0:arguments[0])+"deg)":2==arguments.length?this.elt.style.transform="rotate("+(arguments.length<=0?void 0:arguments[0])+"deg, "+(arguments.length<=1?void 0:arguments[1])+"deg)":3==arguments.length&&(this.elt.style.transform="rotateX("+(arguments.length<=0?void 0:arguments[0])+"deg)",this.elt.style.transform+="rotateY("+(arguments.length<=1?void 0:arguments[1])+"deg)",this.elt.style.transform+="rotateZ("+(arguments.length<=2?void 0:arguments[2])+"deg)"),this.elt.style.transform+=t,this},/**
 * Sets the given style (CSS) property (1st arg) of the element with the
 * given value (2nd arg). If a single argument is given, .style()
 * returns the value of the given property; however, if a single argument
 * is given in CSS syntax ('text-align:center'), .style() sets the CSS
 * appropriately.
 *
 * @method style
 * @param  {String} property   property to be set
 * @returns {String} value of property
 * @example
 * <div><code class='norender'>
 * let myDiv = createDiv('I like pandas.');
 * myDiv.style('font-size', '18px');
 * myDiv.style('color', '#ff0000');
 * myDiv.position(0, 0);
 * </code></div>
 * <div><code class='norender'>
 * let col = color(25, 23, 200, 50);
 * let button = createButton('button');
 * button.style('background-color', col);
 * button.position(0, 0);
 * </code></div>
 * <div><code class='norender'>
 * let myDiv, fontSize;
 * function setup() {
 *   background(200);
 *   myDiv = createDiv('I like gray.');
 *   myDiv.position(0, 0);
 *   myDiv.style('z-index', 10);
 * }
 *
 * function draw() {
 *   fontSize = min(mouseX, 90);
 *   myDiv.style('font-size', fontSize + 'px');
 * }
 * </code></div>
 *//**
 * @method style
 * @param  {String} property
 * @param  {String|p5.Color} value     value to assign to property
 * @return {String} current value of property, if no value is given as second argument
 * @chainable
 */a.default.Element.prototype.style=function(t,r){var n=this;if(r instanceof a.default.Color&&(r="rgba("+r.levels[0]+","+r.levels[1]+","+r.levels[2]+","+r.levels[3]/255+")"),void 0===r){if(-1===t.indexOf(":"))return window.getComputedStyle(n.elt).getPropertyValue(t);for(var o=t.split(";"),s=0;s<o.length;s++){var l=o[s].split(":");l[0]&&l[1]&&(this.elt.style[l[0].trim()]=l[1].trim())}}else if(// input provided as key,val pair
this.elt.style[t]=r,"width"===t||"height"===t||"left"===t||"top"===t){var c=window.getComputedStyle(n.elt).getPropertyValue(t).replace(/[^\d.]/g,"");this[t]=Math.round(parseFloat(c,10))}return this},/**
 *
 * Adds a new attribute or changes the value of an existing attribute
 * on the specified element. If no value is specified, returns the
 * value of the given attribute, or null if the attribute is not set.
 *
 * @method attribute
 * @return {String} value of attribute
 *
 * @example
 * <div class='norender'><code>
 * let myDiv = createDiv('I like pandas.');
 * myDiv.attribute('align', 'center');
 * </code></div>
 *//**
 * @method attribute
 * @param  {String} attr       attribute to set
 * @param  {String} value      value to assign to attribute
 * @chainable
 */a.default.Element.prototype.attribute=function(t,r){//handling for checkboxes and radios to ensure options get
//attributes not divs
if(null==this.elt.firstChild||"checkbox"!==this.elt.firstChild.type&&"radio"!==this.elt.firstChild.type)return void 0===r?this.elt.getAttribute(t):(this.elt.setAttribute(t,r),this);if(void 0===r)return this.elt.firstChild.getAttribute(t);for(var n=0;n<this.elt.childNodes.length;n++)this.elt.childNodes[n].setAttribute(t,r)},/**
 *
 * Removes an attribute on the specified element.
 *
 * @method removeAttribute
 * @param  {String} attr       attribute to remove
 * @chainable
 *
 * @example
 * <div><code>
 * let button;
 * let checkbox;
 *
 * function setup() {
 *   checkbox = createCheckbox('enable', true);
 *   checkbox.changed(enableButton);
 *   button = createButton('button');
 *   button.position(10, 10);
 * }
 *
 * function enableButton() {
 *   if (this.checked()) {
 *     // Re-enable the button
 *     button.removeAttribute('disabled');
 *   } else {
 *     // Disable the button
 *     button.attribute('disabled', '');
 *   }
 * }
 * </code></div>
 */a.default.Element.prototype.removeAttribute=function(t){if(null!=this.elt.firstChild&&("checkbox"===this.elt.firstChild.type||"radio"===this.elt.firstChild.type))for(var r=0;r<this.elt.childNodes.length;r++)this.elt.childNodes[r].removeAttribute(t);return this.elt.removeAttribute(t),this},/**
 * Either returns the value of the element if no arguments
 * given, or sets the value of the element.
 *
 * @method value
 * @return {String|Number} value of the element
 * @example
 * <div class='norender'><code>
 * // gets the value
 * let inp;
 * function setup() {
 *   inp = createInput('');
 * }
 *
 * function mousePressed() {
 *   print(inp.value());
 * }
 * </code></div>
 * <div class='norender'><code>
 * // sets the value
 * let inp;
 * function setup() {
 *   inp = createInput('myValue');
 * }
 *
 * function mousePressed() {
 *   inp.value('myValue');
 * }
 * </code></div>
 *//**
 * @method value
 * @param  {String|Number}     value
 * @chainable
 */a.default.Element.prototype.value=function(){return arguments.length>0?(this.elt.value=arguments.length<=0?void 0:arguments[0],this):"range"===this.elt.type?parseFloat(this.elt.value):this.elt.value},/**
 *
 * Shows the current element. Essentially, setting display:block for the style.
 *
 * @method show
 * @chainable
 * @example
 * <div class='norender'><code>
 * let div = createDiv('div');
 * div.style('display', 'none');
 * div.show(); // turns display to block
 * </code></div>
 */a.default.Element.prototype.show=function(){return this.elt.style.display="block",this},/**
 * Hides the current element. Essentially, setting display:none for the style.
 *
 * @method hide
 * @chainable
 * @example
 * <div class='norender'><code>
 * let div = createDiv('this is a div');
 * div.hide();
 * </code></div>
 */a.default.Element.prototype.hide=function(){return this.elt.style.display="none",this},/**
 *
 * Sets the width and height of the element. AUTO can be used to
 * only adjust one dimension at a time. If no arguments are given, it
 * returns the width and height of the element in an Object. In the case of
 * elements that need to be loaded, such as images, it is recommended
 * to call the function after the element has finished loading.
 *
 * @method size
 * @return {Object} the width and height of the element in an object
 * @example
 * <div class='norender'><code>
 * let div = createDiv('this is a div');
 * div.size(100, 100);
 * let img = createImg(
 *   'assets/rockies.jpg',
 *   'A tall mountain with a small forest and field in front of it on a sunny day',
 *   '',
 *   () => {
 *     img.size(10, AUTO);
 *   }
 * );
 * </code></div>
 *//**
 * @method size
 * @param  {Number|Constant} w    width of the element, either AUTO, or a number
 * @param  {Number|Constant} [h] height of the element, either AUTO, or a number
 * @chainable
 */a.default.Element.prototype.size=function(t,r){if(0==arguments.length)return{width:this.elt.offsetWidth,height:this.elt.offsetHeight};var n=t,o=r,s=a.default.prototype.AUTO;if(n!==s||o!==s){// set diff for cnv vs normal div
if(n===s?n=r*this.width/this.height:o===s&&(o=t*this.height/this.width),this.elt instanceof HTMLCanvasElement){var l,c={},u=this.elt.getContext("2d");for(l in u)c[l]=u[l];for(l in this.elt.setAttribute("width",n*this._pInst._pixelDensity),this.elt.setAttribute("height",o*this._pInst._pixelDensity),this.elt.style.width=n+"px",this.elt.style.height=o+"px",this._pInst.scale(this._pInst._pixelDensity,this._pInst._pixelDensity),c)this.elt.getContext("2d")[l]=c[l]}else this.elt.style.width=n+"px",this.elt.style.height=o+"px",this.elt.width=n,this.elt.height=o;this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight,this._pInst&&this._pInst._curElement&&this._pInst._curElement.elt===this.elt&&(this._pInst._setProperty("width",this.elt.offsetWidth),this._pInst._setProperty("height",this.elt.offsetHeight))}return this},/**
 * Removes the element, stops all media streams, and deregisters all listeners.
 * @method remove
 * @example
 * <div class='norender'><code>
 * let myDiv = createDiv('this is some text');
 * myDiv.remove();
 * </code></div>
 */a.default.Element.prototype.remove=function(){// stop all audios/videos and detach all devices like microphone/camera etc
// used as input/output for audios/videos.
if(this instanceof a.default.MediaElement){this.stop();var t=this.elt.srcObject;null!==t&&t.getTracks().forEach(function(t){t.stop()})}// delete the reference in this._pInst._elements
var r=this._pInst._elements.indexOf(this);// deregister events
for(var n in -1!==r&&this._pInst._elements.splice(r,1),this._events)this.elt.removeEventListener(n,this._events[n]);this.elt&&this.elt.parentNode&&this.elt.parentNode.removeChild(this.elt)},/**
 * Registers a callback that gets called every time a file that is
 * dropped on the element has been loaded.
 * p5 will load every dropped file into memory and pass it as a p5.File object to the callback.
 * Multiple files dropped at the same time will result in multiple calls to the callback.
 *
 * You can optionally pass a second callback which will be registered to the raw
 * <a href="https://developer.mozilla.org/en-US/docs/Web/Events/drop">drop</a> event.
 * The callback will thus be provided the original
 * <a href="https://developer.mozilla.org/en-US/docs/Web/API/DragEvent">DragEvent</a>.
 * Dropping multiple files at the same time will trigger the second callback once per drop,
 * whereas the first callback will trigger for each loaded file.
 *
 * @method drop
 * @param  {Function} callback  callback to receive loaded file, called for each file dropped.
 * @param  {Function} [fxn]     callback triggered once when files are dropped with the drop event.
 * @chainable
 * @example
 * <div><code>
 * function setup() {
 *   let c = createCanvas(100, 100);
 *   background(200);
 *   textAlign(CENTER);
 *   text('drop file', width / 2, height / 2);
 *   c.drop(gotFile);
 * }
 *
 * function gotFile(file) {
 *   background(200);
 *   text('received file:', width / 2, height / 2);
 *   text(file.name, width / 2, height / 2 + 50);
 * }
 * </code></div>
 *
 * <div><code>
 * let img;
 *
 * function setup() {
 *   let c = createCanvas(100, 100);
 *   background(200);
 *   textAlign(CENTER);
 *   text('drop image', width / 2, height / 2);
 *   c.drop(gotFile);
 * }
 *
 * function draw() {
 *   if (img) {
 *     image(img, 0, 0, width, height);
 *   }
 * }
 *
 * function gotFile(file) {
 *   img = createImg(file.data, '').hide();
 * }
 * </code></div>
 *
 * @alt
 * Canvas turns into whatever image is dragged/dropped onto it.
 */a.default.Element.prototype.drop=function(t,r){// Is the file stuff supported?
if(window.File&&window.FileReader&&window.FileList&&window.Blob){if(!this._dragDisabled){this._dragDisabled=!0;var n=function(t){t.preventDefault()};// If you want to be able to drop you've got to turn off
// a lot of default behavior.
// avoid `attachListener` here, since it overrides other handlers.
this.elt.addEventListener("dragover",n),this.elt.addEventListener("dragleave",n)}// Deal with the files
a.default.Element._attachListener("drop",function(n){n.preventDefault(),"function"==typeof r&&r.call(this,n);// A FileList
var o=n.dataTransfer.files,s=!0,l=!1,c=void 0;// Load each one and trigger the callback
try{for(var u,p=o[Symbol.iterator]();!(s=(u=p.next()).done);s=!0){var d=u.value;a.default.File._load(d,t)}}catch(t){l=!0,c=t}finally{try{s||null==p.return||p.return()}finally{if(l)throw c}}},this)}else console.log("The File APIs are not fully supported in this browser.");return this};/*** SCHEDULE EVENTS ***/// Cue inspired by JavaScript setTimeout, and the
// Tone.js Transport Timeline Event, MIT License Yotam Mann 2015 tonejs.org
// eslint-disable-next-line no-unused-vars
var x=function t(r,n,o,a){y(this,t),this.callback=r,this.time=n,this.id=o,this.val=a},j=/*#__PURE__*/function(t){u(n,t);var r=d(n);function n(t,o){y(this,n);var a,s=f(a=r.call(this,t,o));return a.elt.crossOrigin="anonymous",a._prevTime=0,a._cueIDCounter=0,a._cues=[],a.pixels=[],a._pixelsState=f(a),a._pixelDensity=1,a._modified=!1,// canvas. It will need to be updated each frame as the video itself plays.
// We don't want to update it every time we draw, however, in case the user
// has used load/updatePixels. To handle this, we record the frame drawn to
// the internal canvas so we only update it if the frame has changed.
a._frameOnCanvas=-1,/**
     * Path to the media element source.
     *
     * @property src
     * @return {String} src
     * @example
     * <div><code>
     * let ele;
     *
     * function setup() {
     *   background(250);
     *
     *   //p5.MediaElement objects are usually created
     *   //by calling the createAudio(), createVideo(),
     *   //and createCapture() functions.
     *
     *   //In this example we create
     *   //a new p5.MediaElement via createAudio().
     *   ele = createAudio('assets/beat.mp3');
     *
     *   //We'll set up our example so that
     *   //when you click on the text,
     *   //an alert box displays the MediaElement's
     *   //src field.
     *   textAlign(CENTER);
     *   text('Click Me!', width / 2, height / 2);
     * }
     *
     * function mouseClicked() {
     *   //here we test if the mouse is over the
     *   //canvas element when it's clicked
     *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {
     *     //Show our p5.MediaElement's src field
     *     alert(ele.src);
     *   }
     * }
     * </code></div>
     */Object.defineProperty(s,"src",{get:function(){var t=s.elt.children[0].src,r=s.elt.src===window.location.href?"":s.elt.src;return t===window.location.href?r:t},set:function(r){for(var n=0;n<s.elt.children.length;n++)s.elt.removeChild(s.elt.children[n]);var o=document.createElement("source");o.src=r,t.appendChild(o),s.elt.src=r,s.modified=!0}}),s._onended=function(){},s.elt.onended=function(){s._onended(s)},a}/**
   * Play an HTML5 media element.
   *
   * @method play
   * @chainable
   * @example
   * <div><code>
   * let ele;
   *
   * function setup() {
   *   //p5.MediaElement objects are usually created
   *   //by calling the createAudio(), createVideo(),
   *   //and createCapture() functions.
   *
   *   //In this example we create
   *   //a new p5.MediaElement via createAudio().
   *   ele = createAudio('assets/beat.mp3');
   *
   *   background(250);
   *   textAlign(CENTER);
   *   text('Click to Play!', width / 2, height / 2);
   * }
   *
   * function mouseClicked() {
   *   //here we test if the mouse is over the
   *   //canvas element when it's clicked
   *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {
   *     //Here we call the play() function on
   *     //the p5.MediaElement we created above.
   *     //This will start the audio sample.
   *     ele.play();
   *
   *     background(200);
   *     text('You clicked Play!', width / 2, height / 2);
   *   }
   * }
   * </code></div>
   */return c(n,[{key:"play",value:function(){var t,r=this;return this.elt.currentTime===this.elt.duration&&(this.elt.currentTime=0),this.elt.readyState>1||// in Chrome, playback cannot resume after being stopped and must reload
this.elt.load(),(t=this.elt.play())&&t.catch&&t.catch(function(t){// if it's an autoplay failure error
"NotAllowedError"===t.name?"undefined"==typeof IS_MINIFIED?a.default._friendlyAutoplayError(r.src):console.error(t):console.error("Media play method encountered an unexpected error",t)}),this}/**
     * Stops an HTML5 media element (sets current time to zero).
     *
     * @method stop
     * @chainable
     * @example
     * <div><code>
     * //This example both starts
     * //and stops a sound sample
     * //when the user clicks the canvas
     *
     * //We will store the p5.MediaElement
     * //object in here
     * let ele;
     *
     * //while our audio is playing,
     * //this will be set to true
     * let sampleIsPlaying = false;
     *
     * function setup() {
     *   //Here we create a p5.MediaElement object
     *   //using the createAudio() function.
     *   ele = createAudio('assets/beat.mp3');
     *   background(200);
     *   textAlign(CENTER);
     *   text('Click to play!', width / 2, height / 2);
     * }
     *
     * function mouseClicked() {
     *   //here we test if the mouse is over the
     *   //canvas element when it's clicked
     *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {
     *     background(200);
     *
     *     if (sampleIsPlaying) {
     *       //if the sample is currently playing
     *       //calling the stop() function on
     *       //our p5.MediaElement will stop
     *       //it and reset its current
     *       //time to 0 (i.e. it will start
     *       //at the beginning the next time
     *       //you play it)
     *       ele.stop();
     *
     *       sampleIsPlaying = false;
     *       text('Click to play!', width / 2, height / 2);
     *     } else {
     *       //loop our sound element until we
     *       //call ele.stop() on it.
     *       ele.loop();
     *
     *       sampleIsPlaying = true;
     *       text('Click to stop!', width / 2, height / 2);
     *     }
     *   }
     * }
     * </code></div>
     */},{key:"stop",value:function(){return this.elt.pause(),this.elt.currentTime=0,this}/**
     * Pauses an HTML5 media element.
     *
     * @method pause
     * @chainable
     * @example
     * <div><code>
     * //This example both starts
     * //and pauses a sound sample
     * //when the user clicks the canvas
     *
     * //We will store the p5.MediaElement
     * //object in here
     * let ele;
     *
     * //while our audio is playing,
     * //this will be set to true
     * let sampleIsPlaying = false;
     *
     * function setup() {
     *   //Here we create a p5.MediaElement object
     *   //using the createAudio() function.
     *   ele = createAudio('assets/lucky_dragons.mp3');
     *   background(200);
     *   textAlign(CENTER);
     *   text('Click to play!', width / 2, height / 2);
     * }
     *
     * function mouseClicked() {
     *   //here we test if the mouse is over the
     *   //canvas element when it's clicked
     *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {
     *     background(200);
     *
     *     if (sampleIsPlaying) {
     *       //Calling pause() on our
     *       //p5.MediaElement will stop it
     *       //playing, but when we call the
     *       //loop() or play() functions
     *       //the sample will start from
     *       //where we paused it.
     *       ele.pause();
     *
     *       sampleIsPlaying = false;
     *       text('Click to resume!', width / 2, height / 2);
     *     } else {
     *       //loop our sound element until we
     *       //call ele.pause() on it.
     *       ele.loop();
     *
     *       sampleIsPlaying = true;
     *       text('Click to pause!', width / 2, height / 2);
     *     }
     *   }
     * }
     * </code></div>
     */},{key:"pause",value:function(){return this.elt.pause(),this}/**
     * Set 'loop' to true for an HTML5 media element, and starts playing.
     *
     * @method loop
     * @chainable
     * @example
     * <div><code>
     * //Clicking the canvas will loop
     * //the audio sample until the user
     * //clicks again to stop it
     *
     * //We will store the p5.MediaElement
     * //object in here
     * let ele;
     *
     * //while our audio is playing,
     * //this will be set to true
     * let sampleIsLooping = false;
     *
     * function setup() {
     *   //Here we create a p5.MediaElement object
     *   //using the createAudio() function.
     *   ele = createAudio('assets/lucky_dragons.mp3');
     *   background(200);
     *   textAlign(CENTER);
     *   text('Click to loop!', width / 2, height / 2);
     * }
     *
     * function mouseClicked() {
     *   //here we test if the mouse is over the
     *   //canvas element when it's clicked
     *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {
     *     background(200);
     *
     *     if (!sampleIsLooping) {
     *       //loop our sound element until we
     *       //call ele.stop() on it.
     *       ele.loop();
     *
     *       sampleIsLooping = true;
     *       text('Click to stop!', width / 2, height / 2);
     *     } else {
     *       ele.stop();
     *
     *       sampleIsLooping = false;
     *       text('Click to loop!', width / 2, height / 2);
     *     }
     *   }
     * }
     * </code></div>
     */},{key:"loop",value:function(){return this.elt.setAttribute("loop",!0),this.play(),this}/**
     * Set 'loop' to false for an HTML5 media element. Element will stop
     * when it reaches the end.
     *
     * @method noLoop
     * @chainable
     * @example
     * <div><code>
     * //This example both starts
     * //and stops loop of sound sample
     * //when the user clicks the canvas
     *
     * //We will store the p5.MediaElement
     * //object in here
     * let ele;
     * //while our audio is playing,
     * //this will be set to true
     * let sampleIsPlaying = false;
     *
     * function setup() {
     *   //Here we create a p5.MediaElement object
     *   //using the createAudio() function.
     *   ele = createAudio('assets/beat.mp3');
     *   background(200);
     *   textAlign(CENTER);
     *   text('Click to play!', width / 2, height / 2);
     * }
     *
     * function mouseClicked() {
     *   //here we test if the mouse is over the
     *   //canvas element when it's clicked
     *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {
     *     background(200);
     *
     *     if (sampleIsPlaying) {
     *       ele.noLoop();
     *       sampleIsPlaying = false;
     *       text('No more Loops!', width / 2, height / 2);
     *     } else {
     *       ele.loop();
     *       sampleIsPlaying = true;
     *       text('Click to stop looping!', width / 2, height / 2);
     *     }
     *   }
     * }
     * </code></div>
     */},{key:"noLoop",value:function(){return this.elt.removeAttribute("loop"),this}/**
     * Sets up logic to check that autoplay succeeded.
     *
     * @method setupAutoplayFailDetection
     * @private
     */},{key:"_setupAutoplayFailDetection",value:function(){var t=this,r=setTimeout(function(){"undefined"==typeof IS_MINIFIED?a.default._friendlyAutoplayError(t.src):console.error(e)},500);this.elt.addEventListener("play",function(){return clearTimeout(r)},{passive:!0,once:!0})}/**
     * Set HTML5 media element to autoplay or not. If no argument is specified, by
     * default it will autoplay.
     *
     * @method autoplay
     * @param {Boolean} shouldAutoplay whether the element should autoplay
     * @chainable
     * @example
     * <div><code>
     * let videoElement;
     * function setup() {
     *   noCanvas();
     *   videoElement = createVideo(['assets/small.mp4'], onVideoLoad);
     * }
     * function onVideoLoad() {
     *   // The media will play as soon as it is loaded.
     *   videoElement.autoplay();
     *   videoElement.volume(0);
     *   videoElement.size(100, 100);
     * }
     * </code></div>
     *
     * <div><code>
     * let videoElement;
     * function setup() {
     *   noCanvas();
     *   videoElement = createVideo(['assets/small.mp4'], onVideoLoad);
     * }
     * function onVideoLoad() {
     *   // The media will not play until some explicitly triggered.
     *   videoElement.autoplay(false);
     *   videoElement.volume(0);
     *   videoElement.size(100, 100);
     * }
     *
     * function mouseClicked() {
     *   videoElement.play();
     * }
     * </code></div>
     *
     * @alt
     * An example of a video element which autoplays after it is loaded.
     * An example of a video element which waits for a trigger for playing.
     */},{key:"autoplay",value:function(t){var r=this,n=this.elt.getAttribute("autoplay");if(this.elt.setAttribute("autoplay",t),t&&!n){// bind method to this scope
var o=function(){return r._setupAutoplayFailDetection()};// if media is ready to play, schedule check now
4===this.elt.readyState?o():this.elt.addEventListener("canplay",o,{passive:!0,once:!0})}return this}/**
     * Sets volume for this HTML5 media element. If no argument is given,
     * returns the current volume.
     *
     * @method volume
     * @return {Number} current volume
     *
     * @example
     * <div><code>
     * let ele;
     * function setup() {
     *   // p5.MediaElement objects are usually created
     *   // by calling the createAudio(), createVideo(),
     *   // and createCapture() functions.
     *   // In this example we create
     *   // a new p5.MediaElement via createAudio().
     *   ele = createAudio('assets/lucky_dragons.mp3');
     *   background(250);
     *   textAlign(CENTER);
     *   text('Click to Play!', width / 2, height / 2);
     * }
     * function mouseClicked() {
     *   // Here we call the volume() function
     *   // on the sound element to set its volume
     *   // Volume must be between 0.0 and 1.0
     *   ele.volume(0.2);
     *   ele.play();
     *   background(200);
     *   text('You clicked Play!', width / 2, height / 2);
     * }
     * </code></div>
     * <div><code>
     * let audio;
     * let counter = 0;
     *
     * function loaded() {
     *   audio.play();
     * }
     *
     * function setup() {
     *   audio = createAudio('assets/lucky_dragons.mp3', loaded);
     *   textAlign(CENTER);
     * }
     *
     * function draw() {
     *   if (counter === 0) {
     *     background(0, 255, 0);
     *     text('volume(0.9)', width / 2, height / 2);
     *   } else if (counter === 1) {
     *     background(255, 255, 0);
     *     text('volume(0.5)', width / 2, height / 2);
     *   } else if (counter === 2) {
     *     background(255, 0, 0);
     *     text('volume(0.1)', width / 2, height / 2);
     *   }
     * }
     *
     * function mousePressed() {
     *   counter++;
     *   if (counter === 0) {
     *     audio.volume(0.9);
     *   } else if (counter === 1) {
     *     audio.volume(0.5);
     *   } else if (counter === 2) {
     *     audio.volume(0.1);
     *   } else {
     *     counter = 0;
     *     audio.volume(0.9);
     *   }
     * }
     * </code>
     * </div>
     */},{key:"volume",value:function(t){if(void 0===t)return this.elt.volume;this.elt.volume=t}/**
     * If no arguments are given, returns the current playback speed of the
     * element. The speed parameter sets the speed where 2.0 will play the
     * element twice as fast, 0.5 will play at half the speed, and -1 will play
     * the element in normal speed in reverse.(Note that not all browsers support
     * backward playback and even if they do, playback might not be smooth.)
     *
     * @method speed
     * @return {Number} current playback speed of the element
     *
     * @example
     * <div class='norender notest'><code>
     * //Clicking the canvas will loop
     * //the audio sample until the user
     * //clicks again to stop it
     *
     * //We will store the p5.MediaElement
     * //object in here
     * let ele;
     * let button;
     *
     * function setup() {
     *   createCanvas(710, 400);
     *   //Here we create a p5.MediaElement object
     *   //using the createAudio() function.
     *   ele = createAudio('assets/beat.mp3');
     *   ele.loop();
     *   background(200);
     *
     *   button = createButton('2x speed');
     *   button.position(100, 68);
     *   button.mousePressed(twice_speed);
     *
     *   button = createButton('half speed');
     *   button.position(200, 68);
     *   button.mousePressed(half_speed);
     *
     *   button = createButton('reverse play');
     *   button.position(300, 68);
     *   button.mousePressed(reverse_speed);
     *
     *   button = createButton('STOP');
     *   button.position(400, 68);
     *   button.mousePressed(stop_song);
     *
     *   button = createButton('PLAY!');
     *   button.position(500, 68);
     *   button.mousePressed(play_speed);
     * }
     *
     * function twice_speed() {
     *   ele.speed(2);
     * }
     *
     * function half_speed() {
     *   ele.speed(0.5);
     * }
     *
     * function reverse_speed() {
     *   ele.speed(-1);
     * }
     *
     * function stop_song() {
     *   ele.stop();
     * }
     *
     * function play_speed() {
     *   ele.play();
     * }
     * </code></div>
     */},{key:"speed",value:function(t){if(void 0===t)return this.presetPlaybackRate||this.elt.playbackRate;this.loadedmetadata?this.elt.playbackRate=t:this.presetPlaybackRate=t}/**
     * If no arguments are given, returns the current time of the element.
     * If an argument is given the current time of the element is set to it.
     *
     * @method time
     * @return {Number} current time (in seconds)
     *
     * @example
     * <div><code>
     * let ele;
     * let beginning = true;
     * function setup() {
     *   //p5.MediaElement objects are usually created
     *   //by calling the createAudio(), createVideo(),
     *   //and createCapture() functions.
     *
     *   //In this example we create
     *   //a new p5.MediaElement via createAudio().
     *   ele = createAudio('assets/lucky_dragons.mp3');
     *   background(250);
     *   textAlign(CENTER);
     *   text('start at beginning', width / 2, height / 2);
     * }
     *
     * // this function fires with click anywhere
     * function mousePressed() {
     *   if (beginning === true) {
     *     // here we start the sound at the beginning
     *     // time(0) is not necessary here
     *     // as this produces the same result as
     *     // play()
     *     ele.play().time(0);
     *     background(200);
     *     text('jump 2 sec in', width / 2, height / 2);
     *     beginning = false;
     *   } else {
     *     // here we jump 2 seconds into the sound
     *     ele.play().time(2);
     *     background(250);
     *     text('start at beginning', width / 2, height / 2);
     *     beginning = true;
     *   }
     * }
     * </code></div>
     */},{key:"time",value:function(t){return void 0===t?this.elt.currentTime:(this.elt.currentTime=t,this)}/**
     * Returns the duration of the HTML5 media element.
     *
     * @method duration
     * @return {Number} duration
     *
     * @example
     * <div><code>
     * let ele;
     * function setup() {
     *   //p5.MediaElement objects are usually created
     *   //by calling the createAudio(), createVideo(),
     *   //and createCapture() functions.
     *   //In this example we create
     *   //a new p5.MediaElement via createAudio().
     *   ele = createAudio('assets/doorbell.mp3');
     *   background(250);
     *   textAlign(CENTER);
     *   text('Click to know the duration!', 10, 25, 70, 80);
     * }
     * function mouseClicked() {
     *   ele.play();
     *   background(200);
     *   //ele.duration dislpays the duration
     *   text(ele.duration() + ' seconds', width / 2, height / 2);
     * }
     * </code></div>
     */},{key:"duration",value:function(){return this.elt.duration}},{key:"_ensureCanvas",value:function(){this.canvas||(this.canvas=document.createElement("canvas"),this.drawingContext=this.canvas.getContext("2d"),this.setModified(!0));// Don't update the canvas again if we have already updated the canvas with
// the current frame
var t=this._frameOnCanvas!==this._pInst.frameCount;this.loadedmetadata&&t&&(this.canvas.width!==this.elt.width&&(this.canvas.width=this.elt.width,this.canvas.height=this.elt.height,this.width=this.canvas.width,this.height=this.canvas.height),this.drawingContext.drawImage(this.elt,0,0,this.canvas.width,this.canvas.height),this.setModified(!0),this._frameOnCanvas=this._pInst.frameCount)}},{key:"loadPixels",value:function(){this._ensureCanvas();for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return a.default.Renderer2D.prototype.loadPixels.apply(this,r)}},{key:"updatePixels",value:function(t,r,n,o){return this.loadedmetadata&&(// wait for metadata
this._ensureCanvas(),a.default.Renderer2D.prototype.updatePixels.call(this,t,r,n,o)),this.setModified(!0),this}},{key:"get",value:function(){this._ensureCanvas();for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return a.default.Renderer2D.prototype.get.apply(this,r)}},{key:"_getPixel",value:function(){this.loadPixels();for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return a.default.Renderer2D.prototype._getPixel.apply(this,r)}},{key:"set",value:function(t,r,n){this.loadedmetadata&&(// wait for metadata
this._ensureCanvas(),a.default.Renderer2D.prototype.set.call(this,t,r,n),this.setModified(!0))}},{key:"copy",value:function(){this._ensureCanvas();for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];a.default.prototype.copy.apply(this,r)}},{key:"mask",value:function(){this.loadPixels(),this.setModified(!0);for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];a.default.Image.prototype.mask.apply(this,r)}/**
     * helper method for web GL mode to figure out if the element
     * has been modified and might need to be re-uploaded to texture
     * memory between frames.
     * @method isModified
     * @private
     * @return {boolean} a boolean indicating whether or not the
     * image has been updated or modified since last texture upload.
     */},{key:"isModified",value:function(){return this._modified}/**
     * helper method for web GL mode to indicate that an element has been
     * changed or unchanged since last upload. gl texture upload will
     * set this value to false after uploading the texture; or might set
     * it to true if metadata has become available but there is no actual
     * texture data available yet..
     * @method setModified
     * @param {boolean} val sets whether or not the element has been
     * modified.
     * @private
     */},{key:"setModified",value:function(t){this._modified=t}/**
     * Schedule an event to be called when the audio or video
     * element reaches the end. If the element is looping,
     * this will not be called. The element is passed in
     * as the argument to the onended callback.
     *
     * @method  onended
     * @param  {Function} callback function to call when the
     *                             soundfile has ended. The
     *                             media element will be passed
     *                             in as the argument to the
     *                             callback.
     * @chainable
     * @example
     * <div><code>
     * function setup() {
     *   let audioEl = createAudio('assets/beat.mp3');
     *   audioEl.showControls();
     *   audioEl.onended(sayDone);
     * }
     *
     * function sayDone(elt) {
     *   alert('done playing ' + elt.src);
     * }
     * </code></div>
     */},{key:"onended",value:function(t){return this._onended=t,this}/*** CONNECT TO WEB AUDIO API / p5.sound.js ***/},{key:"connect",value:function(t){var r,n;// if p5.sound exists, same audio context
if("function"==typeof a.default.prototype.getAudioContext)r=a.default.prototype.getAudioContext(),n=a.default.soundOut.input;else try{n=(r=t.context).destination}catch(t){throw"connect() is meant to be used with Web Audio API or p5.sound.js"}this.audioSourceNode||(this.audioSourceNode=r.createMediaElementSource(this.elt),this.audioSourceNode.connect(n)),t?t.input?this.audioSourceNode.connect(t.input):this.audioSourceNode.connect(t):this.audioSourceNode.connect(n)}/**
     * Disconnect all Web Audio routing, including to main output.
     * This is useful if you want to re-route the output through
     * audio effects, for example.
     *
     * @method  disconnect
     */},{key:"disconnect",value:function(){if(this.audioSourceNode)this.audioSourceNode.disconnect();else throw"nothing to disconnect"}/*** SHOW / HIDE CONTROLS ***/},{key:"showControls",value:function(){// must set style for the element to show on the page
this.elt.style["text-align"]="inherit",this.elt.controls=!0}/**
     * Hide the default mediaElement controls.
     * @method hideControls
     * @example
     * <div><code>
     * let ele;
     * function setup() {
     *   //p5.MediaElement objects are usually created
     *   //by calling the createAudio(), createVideo(),
     *   //and createCapture() functions.
     *   //In this example we create
     *   //a new p5.MediaElement via createAudio()
     *   ele = createAudio('assets/lucky_dragons.mp3');
     *   ele.showControls();
     *   background(200);
     *   textAlign(CENTER);
     *   text('Click to hide Controls!', 10, 25, 70, 80);
     * }
     * function mousePressed() {
     *   ele.hideControls();
     *   background(200);
     *   text('Controls hidden', width / 2, height / 2);
     * }
     * </code></div>
     */},{key:"hideControls",value:function(){this.elt.controls=!1}/**
    * Schedule events to trigger every time a MediaElement
    * (audio/video) reaches a playback cue point.
    *
    * Accepts a callback function, a time (in seconds) at which to trigger
    * the callback, and an optional parameter for the callback.
    *
    * Time will be passed as the first parameter to the callback function,
    * and param will be the second parameter.
    *
    * @method  addCue
    * @param {Number}   time     Time in seconds, relative to this media
    *                             element's playback. For example, to trigger
    *                             an event every time playback reaches two
    *                             seconds, pass in the number 2. This will be
    *                             passed as the first parameter to
    *                             the callback function.
    * @param {Function} callback Name of a function that will be
    *                             called at the given time. The callback will
    *                             receive time and (optionally) param as its
    *                             two parameters.
    * @param {Object} [value]    An object to be passed as the
    *                             second parameter to the
    *                             callback function.
    * @return {Number} id ID of this cue,
    *                     useful for removeCue(id)
    * @example
    * <div><code>
    * //
    * //
    * function setup() {
    *   createCanvas(200, 200);
    *
    *   let audioEl = createAudio('assets/beat.mp3');
    *   audioEl.showControls();
    *
    *   // schedule three calls to changeBackground
    *   audioEl.addCue(0.5, changeBackground, color(255, 0, 0));
    *   audioEl.addCue(1.0, changeBackground, color(0, 255, 0));
    *   audioEl.addCue(2.5, changeBackground, color(0, 0, 255));
    *   audioEl.addCue(3.0, changeBackground, color(0, 255, 255));
    *   audioEl.addCue(4.2, changeBackground, color(255, 255, 0));
    *   audioEl.addCue(5.0, changeBackground, color(255, 255, 0));
    * }
    *
    * function changeBackground(val) {
    *   background(val);
    * }
    * </code></div>
    */},{key:"addCue",value:function(t,r,n){var o=this._cueIDCounter++,a=new x(r,t,o,n);return this._cues.push(a),this.elt.ontimeupdate||(this.elt.ontimeupdate=this._onTimeUpdate.bind(this)),o}/**
    * Remove a callback based on its ID. The ID is returned by the
    * addCue method.
    * @method removeCue
    * @param  {Number} id ID of the cue, as returned by addCue
    * @example
    * <div><code>
    * let audioEl, id1, id2;
    * function setup() {
    *   background(255, 255, 255);
    *   audioEl = createAudio('assets/beat.mp3');
    *   audioEl.showControls();
    *   // schedule five calls to changeBackground
    *   id1 = audioEl.addCue(0.5, changeBackground, color(255, 0, 0));
    *   audioEl.addCue(1.0, changeBackground, color(0, 255, 0));
    *   audioEl.addCue(2.5, changeBackground, color(0, 0, 255));
    *   audioEl.addCue(3.0, changeBackground, color(0, 255, 255));
    *   id2 = audioEl.addCue(4.2, changeBackground, color(255, 255, 0));
    *   text('Click to remove first and last Cue!', 10, 25, 70, 80);
    * }
    * function mousePressed() {
    *   audioEl.removeCue(id1);
    *   audioEl.removeCue(id2);
    * }
    * function changeBackground(val) {
    *   background(val);
    * }
    * </code></div>
    */},{key:"removeCue",value:function(t){for(var r=0;r<this._cues.length;r++)this._cues[r].id===t&&(console.log(t),this._cues.splice(r,1));0===this._cues.length&&(this.elt.ontimeupdate=null)}/**
    * Remove all of the callbacks that had originally been scheduled
    * via the addCue method.
    * @method  clearCues
    * @param  {Number} id ID of the cue, as returned by addCue
    * @example
    * <div><code>
    * let audioEl;
    * function setup() {
    *   background(255, 255, 255);
    *   audioEl = createAudio('assets/beat.mp3');
    *   //Show the default MediaElement controls, as determined by the web browser
    *   audioEl.showControls();
    *   // schedule calls to changeBackground
    *   background(200);
    *   text('Click to change Cue!', 10, 25, 70, 80);
    *   audioEl.addCue(0.5, changeBackground, color(255, 0, 0));
    *   audioEl.addCue(1.0, changeBackground, color(0, 255, 0));
    *   audioEl.addCue(2.5, changeBackground, color(0, 0, 255));
    *   audioEl.addCue(3.0, changeBackground, color(0, 255, 255));
    *   audioEl.addCue(4.2, changeBackground, color(255, 255, 0));
    * }
    * function mousePressed() {
    *   // here we clear the scheduled callbacks
    *   audioEl.clearCues();
    *   // then we add some more callbacks
    *   audioEl.addCue(1, changeBackground, color(2, 2, 2));
    *   audioEl.addCue(3, changeBackground, color(255, 255, 0));
    * }
    * function changeBackground(val) {
    *   background(val);
    * }
    * </code></div>
    */},{key:"clearCues",value:function(){this._cues=[],this.elt.ontimeupdate=null}// private method that checks for cues to be fired if events
},{key:"_onTimeUpdate",value:function(){for(var t=this.time(),r=0;r<this._cues.length;r++){var n=this._cues[r].time,o=this._cues[r].val;this._prevTime<n&&n<=t&&this._cues[r].callback(o)}this._prevTime=t}}]),n}(a.default.Element);// =============================================================================
a.default.MediaElement=j;/**
 * Base class for a file.
 * Used for Element.drop and createFileInput.
 *
 * @class p5.File
 * @constructor
 * @param {File} file File that is wrapped
 */var w=/*#__PURE__*/function(){function t(r,n){y(this,t),/**
     * Underlying File object. All normal File methods can be called on this.
     *
     * @property file
     */this.file=r,this._pInst=n;// This makes determining if image or text etc simpler
var o=r.type.split("/");/**
     * File type (image, text, etc.)
     *
     * @property type
     */this.type=o[0],/**
     * File subtype (usually the file extension jpg, png, xml, etc.)
     *
     * @property subtype
     */this.subtype=o[1],/**
     * File name
     *
     * @property name
     */this.name=r.name,/**
     * File size
     *
     * @property size
     */this.size=r.size,/**
     * URL string containing either image data, the text contents of the file or
     * a parsed object if file is JSON and p5.XML if XML
     *
     * @property data
     */this.data=void 0}return c(t,null,[{key:"_createLoader",value:function(t,r){var n=new FileReader;return n.onload=function(n){var o=new a.default.File(t);if("application/json"===o.file.type)o.data=JSON.parse(n.target.result);else if("text/xml"===o.file.type){var s=new DOMParser().parseFromString(n.target.result,"text/xml");o.data=new a.default.XML(s.documentElement)}else o.data=n.target.result;r(o)},n}},{key:"_load",value:function(t,r){// Text or data?
// This should likely be improved
if(/^text\//.test(t.type)||"application/json"===t.type)a.default.File._createLoader(t,r).readAsText(t);else if(/^(video|audio)\//.test(t.type)){var n=new a.default.File(t);n.data=URL.createObjectURL(t),r(n)}else a.default.File._createLoader(t,r).readAsDataURL(t)}}]),t}();a.default.File=w;var _=a.default;n.default=_},{"../core/main":296,"core-js/modules/es.array.every":171,"core-js/modules/es.array.filter":173,"core-js/modules/es.array.for-each":174,"core-js/modules/es.array.from":175,"core-js/modules/es.array.index-of":177,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.map":181,"core-js/modules/es.array.slice":182,"core-js/modules/es.array.splice":184,"core-js/modules/es.function.name":185,"core-js/modules/es.object.get-prototype-of":196,"core-js/modules/es.object.to-string":198,"core-js/modules/es.promise":199,"core-js/modules/es.reflect.construct":200,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.replace":212,"core-js/modules/es.string.split":214,"core-js/modules/es.string.trim":217,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/web.dom-collections.for-each":253,"core-js/modules/web.dom-collections.iterator":254,"core-js/modules/web.url":256}],313:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=p(t("../core/main")),l=u(t("../core/constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Events
 * @submodule Acceleration
 * @for p5
 * @requires core
 * @main Events
 *//**
 * The system variable deviceOrientation always contains the orientation of
 * the device. The value of this variable will either be set 'landscape'
 * or 'portrait'. If no data is available it will be set to 'undefined'.
 * either LANDSCAPE or PORTRAIT.
 *
 * @property {Constant} deviceOrientation
 * @readOnly
 */s.default.prototype.deviceOrientation=window.innerWidth/window.innerHeight>1?"landscape":"portrait",/**
 * The system variable accelerationX always contains the acceleration of the
 * device along the x axis. Value is represented as meters per second squared.
 *
 * @property {Number} accelerationX
 * @readOnly
 * @example
 * <div>
 * <code>
 * // Move a touchscreen device to register
 * // acceleration changes.
 * function draw() {
 *   background(220, 50);
 *   fill('magenta');
 *   ellipse(width / 2, height / 2, accelerationX);
 *   describe('Magnitude of device acceleration is displayed as ellipse size.');
 * }
 * </code>
 * </div>
 */s.default.prototype.accelerationX=0,/**
 * The system variable accelerationY always contains the acceleration of the
 * device along the y axis. Value is represented as meters per second squared.
 *
 * @property {Number} accelerationY
 * @readOnly
 * @example
 * <div>
 * <code>
 * // Move a touchscreen device to register
 * // acceleration changes.
 * function draw() {
 *   background(220, 50);
 *   fill('magenta');
 *   ellipse(width / 2, height / 2, accelerationY);
 *   describe('Magnitude of device acceleration is displayed as ellipse size');
 * }
 * </code>
 * </div>
 */s.default.prototype.accelerationY=0,/**
 * The system variable accelerationZ always contains the acceleration of the
 * device along the z axis. Value is represented as meters per second squared.
 *
 * @property {Number} accelerationZ
 * @readOnly
 *
 * @example
 * <div>
 * <code>
 * // Move a touchscreen device to register
 * // acceleration changes.
 * function draw() {
 *   background(220, 50);
 *   fill('magenta');
 *   ellipse(width / 2, height / 2, accelerationZ);
 *   describe('Magnitude of device acceleration is displayed as ellipse size');
 * }
 * </code>
 * </div>
 */s.default.prototype.accelerationZ=0,/**
 * The system variable pAccelerationX always contains the acceleration of the
 * device along the x axis in the frame previous to the current frame. Value
 * is represented as meters per second squared.
 *
 * @property {Number} pAccelerationX
 * @readOnly
 */s.default.prototype.pAccelerationX=0,/**
 * The system variable pAccelerationY always contains the acceleration of the
 * device along the y axis in the frame previous to the current frame. Value
 * is represented as meters per second squared.
 *
 * @property {Number} pAccelerationY
 * @readOnly
 */s.default.prototype.pAccelerationY=0,/**
 * The system variable pAccelerationZ always contains the acceleration of the
 * device along the z axis in the frame previous to the current frame. Value
 * is represented as meters per second squared.
 *
 * @property {Number} pAccelerationZ
 * @readOnly
 */s.default.prototype.pAccelerationZ=0,/**
 * _updatePAccelerations updates the pAcceleration values
 *
 * @private
 */s.default.prototype._updatePAccelerations=function(){this._setProperty("pAccelerationX",this.accelerationX),this._setProperty("pAccelerationY",this.accelerationY),this._setProperty("pAccelerationZ",this.accelerationZ)},/**
 * The system variable rotationX always contains the rotation of the
 * device along the x axis. If the sketch <a href="#/p5/angleMode">
 * angleMode()</a> is set to DEGREES, the value will be -180 to 180. If
 * it is set to RADIANS, the value will be -PI to PI.
 *
 * Note: The order the rotations are called is important, ie. if used
 * together, it must be called in the order Z-X-Y or there might be
 * unexpected behaviour.
 *
 * @property {Number} rotationX
 * @readOnly
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 * }
 *
 * function draw() {
 *   background(200);
 *   //rotateZ(radians(rotationZ));
 *   rotateX(radians(rotationX));
 *   //rotateY(radians(rotationY));
 *   box(200, 200, 200);
 *   describe(`red horizontal line right, green vertical line bottom.
 *     black background.`);
 * }
 * </code>
 * </div>
 */s.default.prototype.rotationX=0,/**
 * The system variable rotationY always contains the rotation of the
 * device along the y axis. If the sketch <a href="#/p5/angleMode">
 * angleMode()</a> is set to DEGREES, the value will be -90 to 90. If
 * it is set to RADIANS, the value will be -PI/2 to PI/2.
 *
 * Note: The order the rotations are called is important, ie. if used
 * together, it must be called in the order Z-X-Y or there might be
 * unexpected behaviour.
 *
 * @property {Number} rotationY
 * @readOnly
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 * }
 *
 * function draw() {
 *   background(200);
 *   //rotateZ(radians(rotationZ));
 *   //rotateX(radians(rotationX));
 *   rotateY(radians(rotationY));
 *   box(200, 200, 200);
 *   describe(`red horizontal line right, green vertical line bottom.
 *     black background.`);
 * }
 * </code>
 * </div>
 */s.default.prototype.rotationY=0,/**
 * The system variable rotationZ always contains the rotation of the
 * device along the z axis. If the sketch <a href="#/p5/angleMode">
 * angleMode()</a> is set to DEGREES, the value will be 0 to 360. If
 * it is set to RADIANS, the value will be 0 to 2*PI.
 *
 * Unlike rotationX and rotationY, this variable is available for devices
 * with a built-in compass only.
 *
 * Note: The order the rotations are called is important, ie. if used
 * together, it must be called in the order Z-X-Y or there might be
 * unexpected behaviour.
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 * }
 *
 * function draw() {
 *   background(200);
 *   rotateZ(radians(rotationZ));
 *   //rotateX(radians(rotationX));
 *   //rotateY(radians(rotationY));
 *   box(200, 200, 200);
 *   describe(`red horizontal line right, green vertical line bottom.
 *     black background.`);
 * }
 * </code>
 * </div>
 *
 * @property {Number} rotationZ
 * @readOnly
 */s.default.prototype.rotationZ=0,/**
 * The system variable pRotationX always contains the rotation of the
 * device along the x axis in the frame previous to the current frame.
 * If the sketch <a href="#/p5/angleMode"> angleMode()</a> is set to DEGREES,
 * the value will be -180 to 180. If it is set to RADIANS, the value will
 * be -PI to PI.
 *
 * pRotationX can also be used with rotationX to determine the rotate
 * direction of the device along the X-axis.
 * @example
 * <div class='norender'>
 * <code>
 * // A simple if statement looking at whether
 * // rotationX - pRotationX < 0 is true or not will be
 * // sufficient for determining the rotate direction
 * // in most cases.
 *
 * // Some extra logic is needed to account for cases where
 * // the angles wrap around.
 * let rotateDirection = 'clockwise';
 *
 * // Simple range conversion to make things simpler.
 * // This is not absolutely necessary but the logic
 * // will be different in that case.
 *
 * let rX = rotationX + 180;
 * let pRX = pRotationX + 180;
 *
 * if ((rX - pRX > 0 && rX - pRX < 270) || rX - pRX < -270) {
 *   rotateDirection = 'clockwise';
 * } else if (rX - pRX < 0 || rX - pRX > 270) {
 *   rotateDirection = 'counter-clockwise';
 * }
 *
 * print(rotateDirection);
 * describe('no image to display.');
 * </code>
 * </div>
 *
 * @property {Number} pRotationX
 * @readOnly
 */s.default.prototype.pRotationX=0,/**
 * The system variable pRotationY always contains the rotation of the
 * device along the y axis in the frame previous to the current frame.
 * If the sketch <a href="#/p5/angleMode"> angleMode()</a> is set to DEGREES,
 * the value will be -90 to 90. If it is set to RADIANS, the value will
 * be -PI/2 to PI/2.
 *
 * pRotationY can also be used with rotationY to determine the rotate
 * direction of the device along the Y-axis.
 * @example
 * <div class='norender'>
 * <code>
 * // A simple if statement looking at whether
 * // rotationY - pRotationY < 0 is true or not will be
 * // sufficient for determining the rotate direction
 * // in most cases.
 *
 * // Some extra logic is needed to account for cases where
 * // the angles wrap around.
 * let rotateDirection = 'clockwise';
 *
 * // Simple range conversion to make things simpler.
 * // This is not absolutely necessary but the logic
 * // will be different in that case.
 *
 * let rY = rotationY + 180;
 * let pRY = pRotationY + 180;
 *
 * if ((rY - pRY > 0 && rY - pRY < 270) || rY - pRY < -270) {
 *   rotateDirection = 'clockwise';
 * } else if (rY - pRY < 0 || rY - pRY > 270) {
 *   rotateDirection = 'counter-clockwise';
 * }
 * print(rotateDirection);
 * describe('no image to display.');
 * </code>
 * </div>
 *
 * @property {Number} pRotationY
 * @readOnly
 */s.default.prototype.pRotationY=0,/**
 * The system variable pRotationZ always contains the rotation of the
 * device along the z axis in the frame previous to the current frame.
 * If the sketch <a href="#/p5/angleMode"> angleMode()</a> is set to DEGREES,
 * the value will be 0 to 360. If it is set to RADIANS, the value will
 * be 0 to 2*PI.
 *
 * pRotationZ can also be used with rotationZ to determine the rotate
 * direction of the device along the Z-axis.
 * @example
 * <div class='norender'>
 * <code>
 * // A simple if statement looking at whether
 * // rotationZ - pRotationZ < 0 is true or not will be
 * // sufficient for determining the rotate direction
 * // in most cases.
 *
 * // Some extra logic is needed to account for cases where
 * // the angles wrap around.
 * let rotateDirection = 'clockwise';
 *
 * if (
 *   (rotationZ - pRotationZ > 0 && rotationZ - pRotationZ < 270) ||
 *   rotationZ - pRotationZ < -270
 * ) {
 *   rotateDirection = 'clockwise';
 * } else if (rotationZ - pRotationZ < 0 || rotationZ - pRotationZ > 270) {
 *   rotateDirection = 'counter-clockwise';
 * }
 * print(rotateDirection);
 * describe('no image to display.');
 * </code>
 * </div>
 *
 * @property {Number} pRotationZ
 * @readOnly
 */s.default.prototype.pRotationZ=0;var d=0,m=0,f=0,h="clockwise",y="clockwise",g="clockwise";s.default.prototype.pRotateDirectionX=void 0,s.default.prototype.pRotateDirectionY=void 0,s.default.prototype.pRotateDirectionZ=void 0,s.default.prototype._updatePRotations=function(){this._setProperty("pRotationX",this.rotationX),this._setProperty("pRotationY",this.rotationY),this._setProperty("pRotationZ",this.rotationZ)},/**
 * When a device is rotated, the axis that triggers the <a href="#/p5/deviceTurned">deviceTurned()</a>
 * method is stored in the turnAxis variable. The turnAxis variable is only defined within
 * the scope of deviceTurned().
 * @property {String} turnAxis
 * @readOnly
 * @example
 * <div>
 * <code>
 * // Run this example on a mobile device
 * // Rotate the device by 90 degrees in the
 * // X-axis to change the value.
 *
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe(`50-by-50 black rect in center of canvas.
 *     turns white on mobile when device turns`);
 *   describe(`50-by-50 black rect in center of canvas.
 *     turns white on mobile when x-axis turns`);
 * }
 * function deviceTurned() {
 *   if (turnAxis === 'X') {
 *     if (value === 0) {
 *       value = 255;
 *     } else if (value === 255) {
 *       value = 0;
 *     }
 *   }
 * }
 * </code>
 * </div>
 */s.default.prototype.turnAxis=void 0;var v=.5,b=30;/**
 * The <a href="#/p5/setMoveThreshold">setMoveThreshold()</a> function is used to set the movement threshold for
 * the <a href="#/p5/deviceMoved">deviceMoved()</a> function. The default threshold is set to 0.5.
 *
 * @method setMoveThreshold
 * @param {number} value The threshold value
 * @example
 * <div class="norender">
 * <code>
 * // Run this example on a mobile device
 * // You will need to move the device incrementally further
 * // the closer the square's color gets to white in order to change the value.
 *
 * let value = 0;
 * let threshold = 0.5;
 * function setup() {
 *   setMoveThreshold(threshold);
 * }
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe(`50-by-50 black rect in center of canvas.
 *     turns white on mobile when device moves`);
 * }
 * function deviceMoved() {
 *   value = value + 5;
 *   threshold = threshold + 0.1;
 *   if (value > 255) {
 *     value = 0;
 *     threshold = 30;
 *   }
 *   setMoveThreshold(threshold);
 * }
 * </code>
 * </div>
 */s.default.prototype.setMoveThreshold=function(t){s.default._validateParameters("setMoveThreshold",arguments),v=t},/**
 * The <a href="#/p5/setShakeThreshold">setShakeThreshold()</a> function is used to set the movement threshold for
 * the <a href="#/p5/deviceShaken">deviceShaken()</a> function. The default threshold is set to 30.
 *
 * @method setShakeThreshold
 * @param {number} value The threshold value
 * @example
 * <div class="norender">
 * <code>
 * // Run this example on a mobile device
 * // You will need to shake the device more firmly
 * // the closer the box's fill gets to white in order to change the value.
 *
 * let value = 0;
 * let threshold = 30;
 * function setup() {
 *   setShakeThreshold(threshold);
 * }
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe(`50-by-50 black rect in center of canvas.
 *     turns white on mobile when device is being shaked`);
 * }
 * function deviceMoved() {
 *   value = value + 5;
 *   threshold = threshold + 5;
 *   if (value > 255) {
 *     value = 0;
 *     threshold = 30;
 *   }
 *   setShakeThreshold(threshold);
 * }
 * </code>
 * </div>
 */s.default.prototype.setShakeThreshold=function(t){s.default._validateParameters("setShakeThreshold",arguments),b=t},/**
 * The <a href="#/p5/deviceMoved">deviceMoved()</a> function is called when the device is moved by more than
 * the threshold value along X, Y or Z axis. The default threshold is set to 0.5.
 * The threshold value can be changed using <a href="https://p5js.org/reference/#/p5/setMoveThreshold">setMoveThreshold()</a>.
 *
 * @method deviceMoved
 * @example
 * <div class="norender">
 * <code>
 * // Run this example on a mobile device
 * // Move the device around
 * // to change the value.
 *
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe(`50-by-50 black rect in center of canvas.
 *     turns white on mobile when device moves`);
 * }
 * function deviceMoved() {
 *   value = value + 5;
 *   if (value > 255) {
 *     value = 0;
 *   }
 * }
 * </code>
 * </div>
 *//**
 * The <a href="#/p5/deviceTurned">deviceTurned()</a> function is called when the device rotates by
 * more than 90 degrees continuously.
 *
 * The axis that triggers the <a href="#/p5/deviceTurned">deviceTurned()</a> method is stored in the turnAxis
 * variable. The <a href="#/p5/deviceTurned">deviceTurned()</a> method can be locked to trigger on any axis:
 * X, Y or Z by comparing the turnAxis variable to 'X', 'Y' or 'Z'.
 *
 * @method deviceTurned
 * @example
 * <div class="norender">
 * <code>
 * // Run this example on a mobile device
 * // Rotate the device by 90 degrees
 * // to change the value.
 *
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe(`50-by-50 black rect in center of canvas.
 *     turns white on mobile when device turns`);
 * }
 * function deviceTurned() {
 *   if (value === 0) {
 *     value = 255;
 *   } else if (value === 255) {
 *     value = 0;
 *   }
 * }
 * </code>
 * </div>
 * <div>
 * <code>
 * // Run this example on a mobile device
 * // Rotate the device by 90 degrees in the
 * // X-axis to change the value.
 *
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe(`50-by-50 black rect in center of canvas.
 *     turns white on mobile when x-axis turns`);
 * }
 * function deviceTurned() {
 *   if (turnAxis === 'X') {
 *     if (value === 0) {
 *       value = 255;
 *     } else if (value === 255) {
 *       value = 0;
 *     }
 *   }
 * }
 * </code>
 * </div>
 *//**
 * The <a href="#/p5/deviceShaken">deviceShaken()</a> function is called when the device total acceleration
 * changes of accelerationX and accelerationY values is more than
 * the threshold value. The default threshold is set to 30.
 * The threshold value can be changed using <a href="https://p5js.org/reference/#/p5/setShakeThreshold">setShakeThreshold()</a>.
 *
 * @method deviceShaken
 * @example
 * <div class="norender">
 * <code>
 * // Run this example on a mobile device
 * // Shake the device to change the value.
 *
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe(`50-by-50 black rect in center of canvas.
 *     turns white on mobile when device shakes`);
 * }
 * function deviceShaken() {
 *   value = value + 5;
 *   if (value > 255) {
 *     value = 0;
 *   }
 * }
 * </code>
 * </div>
 */s.default.prototype._ondeviceorientation=function(t){this._updatePRotations(),this._angleMode===l.radians&&(t.beta=t.beta*(_PI/180),t.gamma=t.gamma*(_PI/180),t.alpha=t.alpha*(_PI/180)),this._setProperty("rotationX",t.beta),this._setProperty("rotationY",t.gamma),this._setProperty("rotationZ",t.alpha),this._handleMotion()},s.default.prototype._ondevicemotion=function(t){this._updatePAccelerations(),this._setProperty("accelerationX",2*t.acceleration.x),this._setProperty("accelerationY",2*t.acceleration.y),this._setProperty("accelerationZ",2*t.acceleration.z),this._handleMotion()},s.default.prototype._handleMotion=function(){90===window.orientation||-90===window.orientation?this._setProperty("deviceOrientation","landscape"):0===window.orientation?this._setProperty("deviceOrientation","portrait"):void 0===window.orientation&&this._setProperty("deviceOrientation","undefined");var t,r,n=this._isGlobal?window:this;if("function"==typeof n.deviceMoved&&(Math.abs(this.accelerationX-this.pAccelerationX)>v||Math.abs(this.accelerationY-this.pAccelerationY)>v||Math.abs(this.accelerationZ-this.pAccelerationZ)>v)&&n.deviceMoved(),"function"==typeof n.deviceTurned){// The angles given by rotationX etc is from range -180 to 180.
// The following will convert them to 0 to 360 for ease of calculation
// of cases when the angles wrapped around.
// _startAngleX will be converted back at the end and updated.
var o=this.rotationX+180,a=this.pRotationX+180,s=d+180;o-a>0&&o-a<270||o-a<-270?h="clockwise":(o-a<0||o-a>270)&&(h="counter-clockwise"),h!==this.pRotateDirectionX&&(s=o),Math.abs(o-s)>90&&270>Math.abs(o-s)&&(s=o,this._setProperty("turnAxis","X"),n.deviceTurned()),this.pRotateDirectionX=h,d=s-180;var l=this.rotationY+180,c=this.pRotationY+180,u=m+180;l-c>0&&l-c<270||l-c<-270?y="clockwise":(l-c<0||l-this.pRotationY>270)&&(y="counter-clockwise"),y!==this.pRotateDirectionY&&(u=l),Math.abs(l-u)>90&&270>Math.abs(l-u)&&(u=l,this._setProperty("turnAxis","Y"),n.deviceTurned()),this.pRotateDirectionY=y,m=u-180,this.rotationZ-this.pRotationZ>0&&this.rotationZ-this.pRotationZ<270||this.rotationZ-this.pRotationZ<-270?g="clockwise":(this.rotationZ-this.pRotationZ<0||this.rotationZ-this.pRotationZ>270)&&(g="counter-clockwise"),g!==this.pRotateDirectionZ&&(f=this.rotationZ),Math.abs(this.rotationZ-f)>90&&270>Math.abs(this.rotationZ-f)&&(f=this.rotationZ,this._setProperty("turnAxis","Z"),n.deviceTurned()),this.pRotateDirectionZ=g,this._setProperty("turnAxis",void 0)}"function"==typeof n.deviceShaken&&(null!==this.pAccelerationX&&(t=Math.abs(this.accelerationX-this.pAccelerationX),r=Math.abs(this.accelerationY-this.pAccelerationY)),t+r>b&&n.deviceShaken())};var x=s.default;n.default=x},{"../core/constants":284,"../core/main":296,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],314:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Events
 * @submodule Keyboard
 * @for p5
 * @requires core
 *//**
 * The boolean system variable <a href="#/p5/keyIsPressed">keyIsPressed</a> is true if any key is pressed
 * and false if no keys are pressed.
 *
 * @property {Boolean} keyIsPressed
 * @readOnly
 * @example
 * <div>
 * <code>
 * function draw() {
 *   if (keyIsPressed === true) {
 *     fill(0);
 *   } else {
 *     fill(255);
 *   }
 *   rect(25, 25, 50, 50);
 *   describe('50-by-50 white rect that turns black on keypress.');
 * }
 * </code>
 * </div>
 */o.default.prototype.isKeyPressed=!1,o.default.prototype.keyIsPressed=!1,/**
 * The system variable key always contains the value of the most recent
 * key on the keyboard that was typed. To get the proper capitalization, it
 * is best to use it within <a href="#/p5/keyTyped">keyTyped()</a>. For non-ASCII keys, use the <a href="#/p5/keyCode">keyCode</a>
 * variable.
 *
 * @property {String} key
 * @readOnly
 * @example
 * <div><code>
 * // Click any key to display it!
 * // (Not Guaranteed to be Case Sensitive)
 * function setup() {
 *   fill(245, 123, 158);
 *   textSize(50);
 * }
 *
 * function draw() {
 *   background(200);
 *   text(key, 33, 65); // Display last key pressed.
 *   describe('canvas displays any key value that is pressed in pink font.');
 * }
 * </code></div>
 */o.default.prototype.key="",/**
 * The variable keyCode is used to detect special keys such as BACKSPACE,
 * DELETE, ENTER, RETURN, TAB, ESCAPE, SHIFT, CONTROL, OPTION, ALT, UP_ARROW,
 * DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW.
 * You can also check for custom keys by looking up the keyCode of any key
 * on a site like this: <a href="http://keycode.info/">keycode.info</a>.
 *
 * @property {Integer} keyCode
 * @readOnly
 * @example
 * <div><code>
 * let fillVal = 126;
 * function draw() {
 *   fill(fillVal);
 *   rect(25, 25, 50, 50);
 *   describe(`Grey rect center. turns white when up arrow pressed and black when down.
 *     Display key pressed and its keyCode in a yellow box.`);
 * }
 *
 * function keyPressed() {
 *   if (keyCode === UP_ARROW) {
 *     fillVal = 255;
 *   } else if (keyCode === DOWN_ARROW) {
 *     fillVal = 0;
 *   }
 * }
 * </code></div>
 * <div><code>
 * function draw() {}
 * function keyPressed() {
 *   background('yellow');
 *   text(`${key} ${keyCode}`, 10, 40);
 *   print(key, ' ', keyCode);
 * }
 * </code></div>
 */o.default.prototype.keyCode=0,/**
 * The <a href="#/p5/keyPressed">keyPressed()</a> function is called once every time a key is pressed. The
 * keyCode for the key that was pressed is stored in the <a href="#/p5/keyCode">keyCode</a> variable.
 *
 * For non-ASCII keys, use the keyCode variable. You can check if the keyCode
 * equals BACKSPACE, DELETE, ENTER, RETURN, TAB, ESCAPE, SHIFT, CONTROL,
 * OPTION, ALT, UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW.
 *
 * For ASCII keys, the key that was pressed is stored in the key variable. However, it
 * does not distinguish between uppercase and lowercase. For this reason, it
 * is recommended to use <a href="#/p5/keyTyped">keyTyped()</a> to read the key variable, in which the
 * case of the variable will be distinguished.
 *
 * Because of how operating systems handle key repeats, holding down a key
 * may cause multiple calls to <a href="#/p5/keyTyped">keyTyped()</a> (and <a href="#/p5/keyReleased">keyReleased()</a> as well). The
 * rate of repeat is set by the operating system and how each computer is
 * configured.<br><br>
 * Browsers may have different default
 * behaviors attached to various key events. To prevent any default
 * behavior for this event, add "return false" to the end of the method.
 *
 * @method keyPressed
 * @param  {Object} [event] optional KeyboardEvent callback argument.
 * @example
 * <div>
 * <code>
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe(`black rect center. turns white when key pressed and black
 *     when released.`);
 * }
 * function keyPressed() {
 *   if (value === 0) {
 *     value = 255;
 *   } else {
 *     value = 0;
 *   }
 * }
 * </code>
 * </div>
 * <div>
 * <code>
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe(`black rect center. turns white when left arrow pressed and
 *     black when right.`);
 * }
 * function keyPressed() {
 *   if (keyCode === LEFT_ARROW) {
 *     value = 255;
 *   } else if (keyCode === RIGHT_ARROW) {
 *     value = 0;
 *   }
 * }
 * </code>
 * </div>
 * <div class="norender">
 * <code>
 * function keyPressed() {
 *   // Do something
 *   return false; // prevent any default behaviour
 * }
 * </code>
 * </div>
 */o.default.prototype._onkeydown=function(t){if(!this._downKeys[t.which]){this._setProperty("isKeyPressed",!0),this._setProperty("keyIsPressed",!0),this._setProperty("keyCode",t.which),this._downKeys[t.which]=!0,this._setProperty("key",t.key||String.fromCharCode(t.which)||t.which);var r=this._isGlobal?window:this;"function"!=typeof r.keyPressed||t.charCode||!1!==r.keyPressed(t)||t.preventDefault()}},/**
 * The <a href="#/p5/keyReleased">keyReleased()</a> function is called once every time a key is released.
 * See <a href="#/p5/key">key</a> and <a href="#/p5/keyCode">keyCode</a> for more information.<br><br>
 * Browsers may have different default
 * behaviors attached to various key events. To prevent any default
 * behavior for this event, add "return false" to the end of the function.
 *
 * @method keyReleased
 * @param  {Object} [event] optional KeyboardEvent callback argument.
 * @example
 * <div>
 * <code>
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe(`black rect center. turns white when key pressed and black
 *     when pressed again`);
 * }
 * function keyReleased() {
 *   if (value === 0) {
 *     value = 255;
 *   } else {
 *     value = 0;
 *   }
 *   return false; // prevent any default behavior
 * }
 * </code>
 * </div>
 */o.default.prototype._onkeyup=function(t){this._downKeys[t.which]=!1,this._areDownKeys()||(this._setProperty("isKeyPressed",!1),this._setProperty("keyIsPressed",!1)),this._setProperty("_lastKeyCodeTyped",null),this._setProperty("key",t.key||String.fromCharCode(t.which)||t.which),this._setProperty("keyCode",t.which);var r=this._isGlobal?window:this;"function"==typeof r.keyReleased&&!1===r.keyReleased(t)&&t.preventDefault()},/**
 * The <a href="#/p5/keyTyped">keyTyped()</a> function is called once every time a key is pressed, but
 * action keys such as Backspace, Delete, Ctrl, Shift, and Alt are ignored. If you are trying to detect
 * a keyCode for one of these keys, use the <a href="#/p5/keyPressed">keyPressed()</a> function instead.
 * The most recent key typed will be stored in the key variable.
 *
 * Because of how operating systems handle key repeats, holding down a key
 * will cause multiple calls to <a href="#/p5/keyTyped">keyTyped()</a> (and <a href="#/p5/keyReleased">keyReleased()</a> as well). The
 * rate of repeat is set by the operating system and how each computer is
 * configured.<br><br>
 * Browsers may have different default behaviors attached to various key
 * events. To prevent any default behavior for this event, add "return false"
 * to the end of the function.
 *
 * @method keyTyped
 * @param  {Object} [event] optional KeyboardEvent callback argument.
 * @example
 * <div>
 * <code>
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe(`black rect center. turns white when 'a' key typed and
 *     black when 'b' pressed`);
 * }
 * function keyTyped() {
 *   if (key === 'a') {
 *     value = 255;
 *   } else if (key === 'b') {
 *     value = 0;
 *   }
 *   // uncomment to prevent any default behavior
 *   // return false;
 * }
 * </code>
 * </div>
 */o.default.prototype._onkeypress=function(t){if(t.which!==this._lastKeyCodeTyped){this._setProperty("_lastKeyCodeTyped",t.which),this._setProperty("key",t.key||String.fromCharCode(t.which)||t.which);var r=this._isGlobal?window:this;"function"==typeof r.keyTyped&&!1===r.keyTyped(t)&&t.preventDefault()}},/**
 * The onblur function is called when the user is no longer focused
 * on the p5 element. Because the keyup events will not fire if the user is
 * not focused on the element we must assume all keys currently down have
 * been released.
 */o.default.prototype._onblur=function(t){this._downKeys={}},/**
 * The <a href="#/p5/keyIsDown">keyIsDown()</a> function checks if the key is currently down, i.e. pressed.
 * It can be used if you have an object that moves, and you want several keys
 * to be able to affect its behaviour simultaneously, such as moving a
 * sprite diagonally. You can put in any number representing the keyCode of
 * the key, or use any of the variable <a href="#/p5/keyCode">keyCode</a> names listed
 * <a href="http://p5js.org/reference/#p5/keyCode">here</a>.
 *
 * @method keyIsDown
 * @param {Number}          code The key to check for.
 * @return {Boolean}        whether key is down or not
 * @example
 * <div><code>
 * let x = 100;
 * let y = 100;
 *
 * function setup() {
 *   createCanvas(512, 512);
 *   fill(255, 0, 0);
 * }
 *
 * function draw() {
 *   if (keyIsDown(LEFT_ARROW)) {
 *     x -= 5;
 *   }
 *
 *   if (keyIsDown(RIGHT_ARROW)) {
 *     x += 5;
 *   }
 *
 *   if (keyIsDown(UP_ARROW)) {
 *     y -= 5;
 *   }
 *
 *   if (keyIsDown(DOWN_ARROW)) {
 *     y += 5;
 *   }
 *
 *   clear();
 *   ellipse(x, y, 50, 50);
 *   describe(`50-by-50 red ellipse moves left, right, up, and
 *     down with arrow presses.`);
 * }
 * </code></div>
 *
 * <div><code>
 * let diameter = 50;
 *
 * function setup() {
 *   createCanvas(512, 512);
 * }
 *
 * function draw() {
 *   // 107 and 187 are keyCodes for "+"
 *   if (keyIsDown(107) || keyIsDown(187)) {
 *     diameter += 1;
 *   }
 *
 *   // 109 and 189 are keyCodes for "-"
 *   if (keyIsDown(109) || keyIsDown(189)) {
 *     diameter -= 1;
 *   }
 *
 *   clear();
 *   fill(255, 0, 0);
 *   ellipse(50, 50, diameter, diameter);
 *   describe(`50-by-50 red ellipse gets bigger or smaller when
 *     + or - are pressed.`);
 * }
 * </code></div>
 */o.default.prototype.keyIsDown=function(t){return o.default._validateParameters("keyIsDown",arguments),this._downKeys[t]||!1},/**
 * The _areDownKeys function returns a boolean true if any keys pressed
 * and a false if no keys are currently pressed.

 * Helps avoid instances where multiple keys are pressed simultaneously and
 * releasing a single key will then switch the
 * keyIsPressed property to true.
 * @private
**/o.default.prototype._areDownKeys=function(){for(var t in this._downKeys)if(this._downKeys.hasOwnProperty(t)&&!0===this._downKeys[t])return!0;return!1};var s=o.default;n.default=s},{"../core/main":296}],315:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.string.includes"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=p(t("../core/main")),l=u(t("../core/constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Events
 * @submodule Mouse
 * @for p5
 * @requires core
 * @requires constants
 */function d(t,r,n,o){o&&!o.clientX&&(o.touches?o=o.touches[0]:o.changedTouches&&(o=o.changedTouches[0]));var a=t.getBoundingClientRect(),s=t.scrollWidth/r||1,l=t.scrollHeight/n||1;return{x:(o.clientX-a.left)/s,y:(o.clientY-a.top)/l,winX:o.clientX,winY:o.clientY,id:o.identifier}}/**
 *
 * The variable movedX contains the horizontal movement of the mouse since the last frame
 * @property {Number} movedX
 * @readOnly
 * @example
 * <div class="notest">
 * <code>
 * let x = 50;
 * function setup() {
 *   rectMode(CENTER);
 * }
 *
 * function draw() {
 *   if (x > 48) {
 *     x -= 2;
 *   } else if (x < 48) {
 *     x += 2;
 *   }
 *   x += floor(movedX / 5);
 *   background(237, 34, 93);
 *   fill(0);
 *   rect(x, 50, 50, 50);
 *   describe(`box moves left and right according to mouse movement
 *     then slowly back towards the center`);
 * }
 * </code>
 * </div>
 */s.default.prototype.movedX=0,/**
 * The variable movedY contains the vertical movement of the mouse since the last frame
 * @property {Number} movedY
 * @readOnly
 * @example
 * <div class="notest">
 * <code>
 * let y = 50;
 * function setup() {
 *   rectMode(CENTER);
 * }
 *
 * function draw() {
 *   if (y > 48) {
 *     y -= 2;
 *   } else if (y < 48) {
 *     y += 2;
 *   }
 *   y += floor(movedY / 5);
 *   background(237, 34, 93);
 *   fill(0);
 *   rect(50, y, 50, 50);
 *   describe(`box moves up and down according to mouse movement then
 *     slowly back towards the center`);
 * }
 * </code>
 * </div>
 */s.default.prototype.movedY=0,/*
 * This is a flag which is false until the first time
 * we receive a mouse event. The pmouseX and pmouseY
 * values will match the mouseX and mouseY values until
 * this interaction takes place.
 */s.default.prototype._hasMouseInteracted=!1,/**
 * The system variable mouseX always contains the current horizontal
 * position of the mouse, relative to (0, 0) of the canvas. The value at
 * the top-left corner is (0, 0) for 2-D and (-width/2, -height/2) for WebGL.
 * If touch is used instead of mouse input, mouseX will hold the x value
 * of the most recent touch point.
 *
 * @property {Number} mouseX
 * @readOnly
 *
 * @example
 * <div>
 * <code>
 * // Move the mouse across the canvas
 * function draw() {
 *   background(244, 248, 252);
 *   line(mouseX, 0, mouseX, 100);
 *   describe('horizontal black line moves left and right with mouse x-position');
 * }
 * </code>
 * </div>
 */s.default.prototype.mouseX=0,/**
 * The system variable mouseY always contains the current vertical
 * position of the mouse, relative to (0, 0) of the canvas. The value at
 * the top-left corner is (0, 0) for 2-D and (-width/2, -height/2) for WebGL.
 * If touch is used instead of mouse input, mouseY will hold the y value
 * of the most recent touch point.
 *
 * @property {Number} mouseY
 * @readOnly
 *
 * @example
 * <div>
 * <code>
 * // Move the mouse across the canvas
 * function draw() {
 *   background(244, 248, 252);
 *   line(0, mouseY, 100, mouseY);
 *   describe('vertical black line moves up and down with mouse y-position');
 * }
 * </code>
 * </div>
 */s.default.prototype.mouseY=0,/**
 * The system variable pmouseX always contains the horizontal position of
 * the mouse or finger in the frame previous to the current frame, relative to
 * (0, 0) of the canvas. The value at the top-left corner is (0, 0) for 2-D and
 * (-width/2, -height/2) for WebGL. Note: pmouseX will be reset to the current mouseX
 * value at the start of each touch event.
 *
 * @property {Number} pmouseX
 * @readOnly
 *
 * @example
 * <div>
 * <code>
 * // Move the mouse across the canvas to leave a trail
 * function setup() {
 *   //slow down the frameRate to make it more visible
 *   frameRate(10);
 * }
 *
 * function draw() {
 *   background(244, 248, 252);
 *   line(mouseX, mouseY, pmouseX, pmouseY);
 *   print(pmouseX + ' -> ' + mouseX);
 *   describe(`line trail is created from cursor movements.
 *     faster movement make longer line.`);
 * }
 * </code>
 * </div>
 */s.default.prototype.pmouseX=0,/**
 * The system variable pmouseY always contains the vertical position of
 * the mouse or finger in the frame previous to the current frame, relative to
 * (0, 0) of the canvas. The value at the top-left corner is (0, 0) for 2-D and
 * (-width/2, -height/2) for WebGL. Note: pmouseY will be reset to the current mouseY
 * value at the start of each touch event.
 *
 * @property {Number} pmouseY
 * @readOnly
 *
 * @example
 * <div>
 * <code>
 * function draw() {
 *   background(237, 34, 93);
 *   fill(0);
 *   //draw a square only if the mouse is not moving
 *   if (mouseY === pmouseY && mouseX === pmouseX) {
 *     rect(20, 20, 60, 60);
 *   }
 *
 *   print(pmouseY + ' -> ' + mouseY);
 *   describe(`60-by-60 black rect center, fuchsia background.
 *     rect flickers on mouse movement`);
 * }
 * </code>
 * </div>
 */s.default.prototype.pmouseY=0,/**
 * The system variable winMouseX always contains the current horizontal
 * position of the mouse, relative to (0, 0) of the window.
 *
 * @property {Number} winMouseX
 * @readOnly
 *
 * @example
 * <div>
 * <code>
 * let myCanvas;
 *
 * function setup() {
 *   //use a variable to store a pointer to the canvas
 *   myCanvas = createCanvas(100, 100);
 *   let body = document.getElementsByTagName('body')[0];
 *   myCanvas.parent(body);
 * }
 *
 * function draw() {
 *   background(237, 34, 93);
 *   fill(0);
 *
 *   //move the canvas to the horizontal mouse position
 *   //relative to the window
 *   myCanvas.position(winMouseX + 1, windowHeight / 2);
 *
 *   //the y of the square is relative to the canvas
 *   rect(20, mouseY, 60, 60);
 *   describe(`60-by-60 black rect y moves with mouse y and fuchsia
 *     canvas moves with mouse x`);
 * }
 * </code>
 * </div>
 */s.default.prototype.winMouseX=0,/**
 * The system variable winMouseY always contains the current vertical
 * position of the mouse, relative to (0, 0) of the window.
 *
 * @property {Number} winMouseY
 * @readOnly
 *
 * @example
 * <div>
 * <code>
 * let myCanvas;
 *
 * function setup() {
 *   //use a variable to store a pointer to the canvas
 *   myCanvas = createCanvas(100, 100);
 *   let body = document.getElementsByTagName('body')[0];
 *   myCanvas.parent(body);
 * }
 *
 * function draw() {
 *   background(237, 34, 93);
 *   fill(0);
 *
 *   //move the canvas to the vertical mouse position
 *   //relative to the window
 *   myCanvas.position(windowWidth / 2, winMouseY + 1);
 *
 *   //the x of the square is relative to the canvas
 *   rect(mouseX, 20, 60, 60);
 *   describe(`60-by-60 black rect x moves with mouse x and
 *     fuchsia canvas y moves with mouse y`);
 * }
 * </code>
 * </div>
 */s.default.prototype.winMouseY=0,/**
 * The system variable pwinMouseX always contains the horizontal position
 * of the mouse in the frame previous to the current frame, relative to
 * (0, 0) of the window. Note: pwinMouseX will be reset to the current winMouseX
 * value at the start of each touch event.
 *
 * @property {Number} pwinMouseX
 * @readOnly
 *
 * @example
 * <div>
 * <code>
 * let myCanvas;
 *
 * function setup() {
 *   //use a variable to store a pointer to the canvas
 *   myCanvas = createCanvas(100, 100);
 *   noStroke();
 *   fill(237, 34, 93);
 * }
 *
 * function draw() {
 *   clear();
 *   //the difference between previous and
 *   //current x position is the horizontal mouse speed
 *   let speed = abs(winMouseX - pwinMouseX);
 *   //change the size of the circle
 *   //according to the horizontal speed
 *   ellipse(50, 50, 10 + speed * 5, 10 + speed * 5);
 *   //move the canvas to the mouse position
 *   myCanvas.position(winMouseX + 1, winMouseY + 1);
 *   describe(`fuchsia ellipse moves with mouse x and y.
 *     Grows and shrinks with mouse speed`);
 * }
 * </code>
 * </div>
 */s.default.prototype.pwinMouseX=0,/**
 * The system variable pwinMouseY always contains the vertical position of
 * the mouse in the frame previous to the current frame, relative to (0, 0)
 * of the window. Note: pwinMouseY will be reset to the current winMouseY
 * value at the start of each touch event.
 *
 * @property {Number} pwinMouseY
 * @readOnly
 *
 * @example
 * <div>
 * <code>
 * let myCanvas;
 *
 * function setup() {
 *   //use a variable to store a pointer to the canvas
 *   myCanvas = createCanvas(100, 100);
 *   noStroke();
 *   fill(237, 34, 93);
 * }
 *
 * function draw() {
 *   clear();
 *   //the difference between previous and
 *   //current y position is the vertical mouse speed
 *   let speed = abs(winMouseY - pwinMouseY);
 *   //change the size of the circle
 *   //according to the vertical speed
 *   ellipse(50, 50, 10 + speed * 5, 10 + speed * 5);
 *   //move the canvas to the mouse position
 *   myCanvas.position(winMouseX + 1, winMouseY + 1);
 *   describe(`fuchsia ellipse moves with mouse x and y.
 *     Grows and shrinks with mouse speed`);
 * }
 * </code>
 * </div>
 */s.default.prototype.pwinMouseY=0,/**
 * p5 automatically tracks if the mouse button is pressed and which
 * button is pressed. The value of the system variable mouseButton is either
 * LEFT, RIGHT, or CENTER depending on which button was pressed last.
 * Warning: different browsers may track mouseButton differently.
 *
 * @property {Constant} mouseButton
 * @readOnly
 *
 * @example
 * <div>
 * <code>
 * function draw() {
 *   background(237, 34, 93);
 *   fill(0);
 *
 *   if (mouseIsPressed === true) {
 *     if (mouseButton === LEFT) {
 *       ellipse(50, 50, 50, 50);
 *     }
 *     if (mouseButton === RIGHT) {
 *       rect(25, 25, 50, 50);
 *     }
 *     if (mouseButton === CENTER) {
 *       triangle(23, 75, 50, 20, 78, 75);
 *     }
 *   }
 *
 *   print(mouseButton);
 *   describe(`50-by-50 black ellipse appears on center of fuchsia
 *     canvas on mouse click/press.`);
 * }
 * </code>
 * </div>
 */s.default.prototype.mouseButton=0,/**
 * The boolean system variable mouseIsPressed is true if the mouse is pressed
 * and false if not.
 *
 * @property {Boolean} mouseIsPressed
 * @readOnly
 *
 * @example
 * <div>
 * <code>
 * function draw() {
 *   background(237, 34, 93);
 *   fill(0);
 *
 *   if (mouseIsPressed === true) {
 *     ellipse(50, 50, 50, 50);
 *   } else {
 *     rect(25, 25, 50, 50);
 *   }
 *
 *   print(mouseIsPressed);
 *   describe(`black 50-by-50 rect becomes ellipse with mouse click/press.
 *     fuchsia background.`);
 * }
 * </code>
 * </div>
 */s.default.prototype.mouseIsPressed=!1,s.default.prototype._updateNextMouseCoords=function(t){if(null!==this._curElement&&(!t.touches||t.touches.length>0)){var r=d(this._curElement.elt,this.width,this.height,t);this._setProperty("movedX",t.movementX),this._setProperty("movedY",t.movementY),this._setProperty("mouseX",r.x),this._setProperty("mouseY",r.y),this._setProperty("winMouseX",r.winX),this._setProperty("winMouseY",r.winY)}this._hasMouseInteracted||(// For first draw, make previous and next equal
this._updateMouseCoords(),this._setProperty("_hasMouseInteracted",!0))},s.default.prototype._updateMouseCoords=function(){this._setProperty("pmouseX",this.mouseX),this._setProperty("pmouseY",this.mouseY),this._setProperty("pwinMouseX",this.winMouseX),this._setProperty("pwinMouseY",this.winMouseY),this._setProperty("_pmouseWheelDeltaY",this._mouseWheelDeltaY)},s.default.prototype._setMouseButton=function(t){1===t.button?this._setProperty("mouseButton",l.CENTER):2===t.button?this._setProperty("mouseButton",l.RIGHT):this._setProperty("mouseButton",l.LEFT)},/**
 * The <a href="#/p5/mouseMoved">mouseMoved()</a> function is called every time the mouse moves and a mouse
 * button is not pressed.<br><br>
 * Browsers may have different default
 * behaviors attached to various mouse events. To prevent any default
 * behavior for this event, add "return false" to the end of the method.
 *
 * @method mouseMoved
 * @param  {Object} [event] optional MouseEvent callback argument.
 * @example
 * <div>
 * <code>
 * // Move the mouse across the page
 * // to change its value
 *
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe(`black 50-by-50 rect becomes lighter with mouse movements until
 *   white then resets no image displayed`);
 * }
 * function mouseMoved() {
 *   value = value + 5;
 *   if (value > 255) {
 *     value = 0;
 *   }
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * function mouseMoved() {
 *   ellipse(mouseX, mouseY, 5, 5);
 *   // prevent default
 *   return false;
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * // returns a MouseEvent object
 * // as a callback argument
 * function mouseMoved(event) {
 *   console.log(event);
 * }
 * </code>
 * </div>
 *//**
 * The <a href="#/p5/mouseDragged">mouseDragged()</a> function is called once every time the mouse moves and
 * a mouse button is pressed. If no <a href="#/p5/mouseDragged">mouseDragged()</a> function is defined, the
 * <a href="#/p5/touchMoved">touchMoved()</a> function will be called instead if it is defined.<br><br>
 * Browsers may have different default
 * behaviors attached to various mouse events. To prevent any default
 * behavior for this event, add "return false" to the end of the function.
 *
 * @method mouseDragged
 * @param  {Object} [event] optional MouseEvent callback argument.
 * @example
 * <div>
 * <code>
 * // Drag the mouse across the page
 * // to change its value
 *
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe(`black 50-by-50 rect turns lighter with mouse click and
 *     drag until white, resets`);
 * }
 * function mouseDragged() {
 *   value = value + 5;
 *   if (value > 255) {
 *     value = 0;
 *   }
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * function mouseDragged() {
 *   ellipse(mouseX, mouseY, 5, 5);
 *   // prevent default
 *   return false;
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * // returns a MouseEvent object
 * // as a callback argument
 * function mouseDragged(event) {
 *   console.log(event);
 * }
 * </code>
 * </div>
 */s.default.prototype._onmousemove=function(t){var r,n=this._isGlobal?window:this;this._updateNextMouseCoords(t),this.mouseIsPressed?"function"==typeof n.mouseDragged?!1===(r=n.mouseDragged(t))&&t.preventDefault():"function"==typeof n.touchMoved&&!1===(r=n.touchMoved(t))&&t.preventDefault():"function"==typeof n.mouseMoved&&!1===(r=n.mouseMoved(t))&&t.preventDefault()},/**
 * The <a href="#/p5/mousePressed">mousePressed()</a> function is called once after every time a mouse button
 * is pressed. The mouseButton variable (see the related reference entry)
 * can be used to determine which button has been pressed. If no
 * <a href="#/p5/mousePressed">mousePressed()</a> function is defined, the <a href="#/p5/touchStarted">touchStarted()</a> function will be
 * called instead if it is defined.<br><br>
 * Browsers may have different default
 * behaviors attached to various mouse events. To prevent any default
 * behavior for this event, add "return false" to the end of the function.
 *
 * @method mousePressed
 * @param  {Object} [event] optional MouseEvent callback argument.
 * @example
 * <div>
 * <code>
 * // Click anywhere in the webpage to change
 * // the color value of the rectangle
 *
 * let colorValue = 0;
 * function draw() {
 *   fill(colorValue);
 *   rect(25, 25, 50, 50);
 *   describe('black 50-by-50 rect turns white with mouse click/press.');
 * }
 * function mousePressed() {
 *   if (value === 0) {
 *     colorValue = 255;
 *   } else {
 *     colorValue = 0;
 *   }
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * function mousePressed() {
 *   ellipse(mouseX, mouseY, 5, 5);
 *   // prevent default
 *   return false;
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * // returns a MouseEvent object
 * // as a callback argument
 * function mousePressed(event) {
 *   console.log(event);
 * }
 * </code>
 * </div>
 */s.default.prototype._onmousedown=function(t){var r,n=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!0),this._setMouseButton(t),this._updateNextMouseCoords(t),"function"==typeof n.mousePressed?!1===(r=n.mousePressed(t))&&t.preventDefault():navigator.userAgent.toLowerCase().includes("safari")&&"function"==typeof n.touchStarted&&!1===(r=n.touchStarted(t))&&t.preventDefault()},/**
 * The <a href="#/p5/mouseReleased">mouseReleased()</a> function is called every time a mouse button is
 * released. If no <a href="#/p5/mouseReleased">mouseReleased()</a> function is defined, the <a href="#/p5/touchEnded">touchEnded()</a>
 * function will be called instead if it is defined.<br><br>
 * Browsers may have different default
 * behaviors attached to various mouse events. To prevent any default
 * behavior for this event, add "return false" to the end of the function.
 *
 * @method mouseReleased
 * @param  {Object} [event] optional MouseEvent callback argument.
 * @example
 * <div>
 * <code>
 * // Click within the image to change
 * // the value of the rectangle
 * // after the mouse has been clicked
 *
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe('black 50-by-50 rect turns white with mouse click/press.');
 * }
 * function mouseReleased() {
 *   if (value === 0) {
 *     value = 255;
 *   } else {
 *     value = 0;
 *   }
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * function mouseReleased() {
 *   ellipse(mouseX, mouseY, 5, 5);
 *   // prevent default
 *   return false;
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * // returns a MouseEvent object
 * // as a callback argument
 * function mouseReleased(event) {
 *   console.log(event);
 * }
 * </code>
 * </div>
 */s.default.prototype._onmouseup=function(t){var r,n=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!1),"function"==typeof n.mouseReleased?!1===(r=n.mouseReleased(t))&&t.preventDefault():"function"==typeof n.touchEnded&&!1===(r=n.touchEnded(t))&&t.preventDefault()},s.default.prototype._ondragend=s.default.prototype._onmouseup,s.default.prototype._ondragover=s.default.prototype._onmousemove,/**
 * The <a href="#/p5/mouseClicked">mouseClicked()</a> function is called once after a mouse button has been
 * pressed and then released.<br><br>
 * Browsers handle clicks differently, so this function is only guaranteed to be
 * run when the left mouse button is clicked. To handle other mouse buttons
 * being pressed or released, see <a href="#/p5/mousePressed">mousePressed()</a> or <a href="#/p5/mouseReleased">mouseReleased()</a>.<br><br>
 * Browsers may have different default
 * behaviors attached to various mouse events. To prevent any default
 * behavior for this event, add "return false" to the end of the function.
 *
 * @method mouseClicked
 * @param  {Object} [event] optional MouseEvent callback argument.
 * @example
 * <div>
 * <code>
 * // Click within the image to change
 * // the value of the rectangle
 * // after the mouse has been clicked
 *
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe('black 50-by-50 rect turns white with mouse click/press.');
 * }
 *
 * function mouseClicked() {
 *   if (value === 0) {
 *     value = 255;
 *   } else {
 *     value = 0;
 *   }
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * function mouseClicked() {
 *   ellipse(mouseX, mouseY, 5, 5);
 *   // prevent default
 *   return false;
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * // returns a MouseEvent object
 * // as a callback argument
 * function mouseClicked(event) {
 *   console.log(event);
 * }
 * </code>
 * </div>
 */s.default.prototype._onclick=function(t){var r=this._isGlobal?window:this;"function"==typeof r.mouseClicked&&!1===r.mouseClicked(t)&&t.preventDefault()},/**
 * The <a href="#/p5/doubleClicked">doubleClicked()</a> function is executed every time a event
 * listener has detected a dblclick event which is a part of the
 * DOM L3 specification. The doubleClicked event is fired when a
 * pointing device button (usually a mouse's primary button)
 * is clicked twice on a single element. For more info on the
 * dblclick event refer to mozilla's documentation here:
 * https://developer.mozilla.org/en-US/docs/Web/Events/dblclick
 *
 * @method doubleClicked
 * @param  {Object} [event] optional MouseEvent callback argument.
 * @example
 * <div>
 * <code>
 * // Click within the image to change
 * // the value of the rectangle
 * // after the mouse has been double clicked
 *
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe('black 50-by-50 rect turns white with mouse doubleClick/press.');
 * }
 *
 * function doubleClicked() {
 *   if (value === 0) {
 *     value = 255;
 *   } else {
 *     value = 0;
 *   }
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * function doubleClicked() {
 *   ellipse(mouseX, mouseY, 5, 5);
 *   // prevent default
 *   return false;
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * // returns a MouseEvent object
 * // as a callback argument
 * function doubleClicked(event) {
 *   console.log(event);
 * }
 * </code>
 * </div>
 */s.default.prototype._ondblclick=function(t){var r=this._isGlobal?window:this;"function"==typeof r.doubleClicked&&!1===r.doubleClicked(t)&&t.preventDefault()},/**
 * For use with WebGL orbitControl.
 * @property {Number} _mouseWheelDeltaY
 * @readOnly
 * @private
 */s.default.prototype._mouseWheelDeltaY=0,/**
 * For use with WebGL orbitControl.
 * @property {Number} _pmouseWheelDeltaY
 * @readOnly
 * @private
 */s.default.prototype._pmouseWheelDeltaY=0,/**
 * The function <a href="#/p5/mouseWheel">mouseWheel()</a> is executed every time a vertical mouse wheel
 * event is detected either triggered by an actual mouse wheel or by a
 * touchpad.<br><br>
 * The event.delta property returns the amount the mouse wheel
 * have scrolled. The values can be positive or negative depending on the
 * scroll direction (on macOS with "natural" scrolling enabled, the signs
 * are inverted).<br><br>
 * Browsers may have different default behaviors attached to various
 * mouse events. To prevent any default behavior for this event, add
 * "return false" to the end of the method.<br><br>
 * Due to the current support of the "wheel" event on Safari, the function
 * may only work as expected if "return false" is included while using Safari.
 *
 * @method mouseWheel
 * @param  {Object} [event] optional WheelEvent callback argument.
 *
 * @example
 * <div>
 * <code>
 * let pos = 25;
 *
 * function draw() {
 *   background(237, 34, 93);
 *   fill(0);
 *   rect(25, pos, 50, 50);
 *   describe(`black 50-by-50 rect moves up and down with vertical scroll.
 *     fuchsia background`);
 * }
 *
 * function mouseWheel(event) {
 *   print(event.delta);
 *   //move the square according to the vertical scroll amount
 *   pos += event.delta;
 *   //uncomment to block page scrolling
 *   //return false;
 * }
 * </code>
 * </div>
 */s.default.prototype._onwheel=function(t){var r=this._isGlobal?window:this;this._setProperty("_mouseWheelDeltaY",t.deltaY),"function"==typeof r.mouseWheel&&(t.delta=t.deltaY,!1===r.mouseWheel(t)&&t.preventDefault())},/**
 * The function <a href="#/p5/requestPointerLock">requestPointerLock()</a>
 * locks the pointer to its current position and makes it invisible.
 * Use <a href="#/p5/movedX">movedX</a> and <a href="#/p5/movedY">movedY</a> to get the difference the mouse was moved since
 * the last call of draw.
 * Note that not all browsers support this feature.
 * This enables you to create experiences that aren't limited by the mouse moving out of the screen
 * even if it is repeatedly moved into one direction.
 * For example, a first person perspective experience.
 *
 * @method requestPointerLock
 * @example
 * <div class="notest">
 * <code>
 * let cam;
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   requestPointerLock();
 *   cam = createCamera();
 * }
 *
 * function draw() {
 *   background(255);
 *   cam.pan(-movedX * 0.001);
 *   cam.tilt(movedY * 0.001);
 *   sphere(25);
 *   describe(`3D scene moves according to mouse mouse movement in a
 *     first person perspective`);
 * }
 * </code>
 * </div>
 */s.default.prototype.requestPointerLock=function(){// pointer lock object forking for cross browser
var t=this._curElement.elt;return(t.requestPointerLock=t.requestPointerLock||t.mozRequestPointerLock,t.requestPointerLock)?(t.requestPointerLock(),!0):(console.log("requestPointerLock is not implemented in this browser"),!1)},/**
 * The function <a href="#/p5/exitPointerLock">exitPointerLock()</a>
 * exits a previously triggered <a href="#/p5/requestPointerLock">pointer Lock</a>
 * for example to make ui elements usable etc
 *
 * @method exitPointerLock
 * @example
 * <div class="notest">
 * <code>
 * //click the canvas to lock the pointer
 * //click again to exit (otherwise escape)
 * let locked = false;
 * function draw() {
 *   background(237, 34, 93);
 *   describe('cursor gets locked / unlocked on mouse-click');
 * }
 * function mouseClicked() {
 *   if (!locked) {
 *     locked = true;
 *     requestPointerLock();
 *   } else {
 *     exitPointerLock();
 *     locked = false;
 *   }
 * }
 * </code>
 * </div>
 */s.default.prototype.exitPointerLock=function(){document.exitPointerLock()};var m=s.default;n.default=m},{"../core/constants":284,"../core/main":296,"core-js/modules/es.array.includes":176,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.includes":207,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],316:[function(t,r,n){t("core-js/modules/es.array.includes"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.string.includes"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Events
 * @submodule Touch
 * @for p5
 * @requires core
 */function s(t,r,n,o){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=t.getBoundingClientRect(),l=t.scrollWidth/r||1,c=t.scrollHeight/n||1,u=o.touches[a]||o.changedTouches[a];return{x:(u.clientX-s.left)/l,y:(u.clientY-s.top)/c,winX:u.clientX,winY:u.clientY,id:u.identifier}}/**
 * The touchStarted() function is called once after every time a touch is
 * registered. If no <a href="#/p5/touchStarted">touchStarted()</a> function is defined, the <a href="#/p5/mousePressed">mousePressed()</a>
 * function will be called instead if it is defined.<br><br>
 * Browsers may have different default behaviors attached to various touch
 * events. To prevent any default behavior for this event, add "return false"
 * to the end of the method.
 *
 * @method touchStarted
 * @param  {Object} [event] optional TouchEvent callback argument.
 * @example
 * <div>
 * <code>
 * // Touch within the image to change
 * // the value of the rectangle
 *
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe('50-by-50 black rect turns white with touch event.');
 * }
 * function touchStarted() {
 *   if (value === 0) {
 *     value = 255;
 *   } else {
 *     value = 0;
 *   }
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * function touchStarted() {
 *   ellipse(mouseX, mouseY, 5, 5);
 *   // prevent default
 *   return false;
 * }
 * describe('no image displayed');
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * // returns a TouchEvent object
 * // as a callback argument
 * function touchStarted(event) {
 *   console.log(event);
 * }
 * describe('no image displayed');
 * </code>
 * </div>
 *//**
 * The system variable touches[] contains an array of the positions of all
 * current touch points, relative to (0, 0) of the canvas, and IDs identifying a
 * unique touch as it moves. Each element in the array is an object with x, y,
 * and id properties.
 *
 * The touches[] array is not supported on Safari and IE on touch-based
 * desktops (laptops).
 *
 * @property {Object[]} touches
 * @readOnly
 *
 * @example
 * <div>
 * <code>
 * // On a touchscreen device, touch
 * // the canvas using one or more fingers
 * // at the same time
 * function draw() {
 *   clear();
 *   let display = touches.length + ' touches';
 *   text(display, 5, 10);
 *   describe(`Number of touches currently registered are displayed
 *     on the canvas`);
 * }
 * </code>
 * </div>
 */o.default.prototype.touches=[],o.default.prototype._updateTouchCoords=function(t){if(null!==this._curElement){for(var r=[],n=0;n<t.touches.length;n++)r[n]=s(this._curElement.elt,this.width,this.height,t,n);this._setProperty("touches",r)}},o.default.prototype._ontouchstart=function(t){var r,n=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!0),this._updateTouchCoords(t),this._updateNextMouseCoords(t),this._updateMouseCoords(),"function"==typeof n.touchStarted?!1===(r=n.touchStarted(t))&&t.preventDefault():navigator.userAgent.toLowerCase().includes("safari")&&"function"==typeof n.mousePressed&&!1===(r=n.mousePressed(t))&&t.preventDefault()},/**
 * The <a href="#/p5/touchMoved">touchMoved()</a> function is called every time a touch move is registered.
 * If no <a href="#/p5/touchMoved">touchMoved()</a> function is defined, the <a href="#/p5/mouseDragged">mouseDragged()</a> function will
 * be called instead if it is defined.<br><br>
 * Browsers may have different default behaviors attached to various touch
 * events. To prevent any default behavior for this event, add "return false"
 * to the end of the method.
 *
 * @method touchMoved
 * @param  {Object} [event] optional TouchEvent callback argument.
 * @example
 * <div>
 * <code>
 * // Move your finger across the page
 * // to change its value
 *
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe('50-by-50 black rect turns lighter with touch until white. resets');
 * }
 * function touchMoved() {
 *   value = value + 5;
 *   if (value > 255) {
 *     value = 0;
 *   }
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * function touchMoved() {
 *   ellipse(mouseX, mouseY, 5, 5);
 *   // prevent default
 *   return false;
 * }
 * describe('no image displayed');
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * // returns a TouchEvent object
 * // as a callback argument
 * function touchMoved(event) {
 *   console.log(event);
 * }
 * describe('no image displayed');
 * </code>
 * </div>
 */o.default.prototype._ontouchmove=function(t){var r,n=this._isGlobal?window:this;this._updateTouchCoords(t),this._updateNextMouseCoords(t),"function"==typeof n.touchMoved?!1===(r=n.touchMoved(t))&&t.preventDefault():"function"==typeof n.mouseDragged&&!1===(r=n.mouseDragged(t))&&t.preventDefault()},/**
 * The <a href="#/p5/touchEnded">touchEnded()</a> function is called every time a touch ends. If no
 * <a href="#/p5/touchEnded">touchEnded()</a> function is defined, the <a href="#/p5/mouseReleased">mouseReleased()</a> function will be
 * called instead if it is defined.<br><br>
 * Browsers may have different default behaviors attached to various touch
 * events. To prevent any default behavior for this event, add "return false"
 * to the end of the method.
 *
 * @method touchEnded
 * @param  {Object} [event] optional TouchEvent callback argument.
 * @example
 * <div>
 * <code>
 * // Release touch within the image to
 * // change the value of the rectangle
 *
 * let value = 0;
 * function draw() {
 *   fill(value);
 *   rect(25, 25, 50, 50);
 *   describe('50-by-50 black rect turns white with touch.');
 * }
 * function touchEnded() {
 *   if (value === 0) {
 *     value = 255;
 *   } else {
 *     value = 0;
 *   }
 * }
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * function touchEnded() {
 *   ellipse(mouseX, mouseY, 5, 5);
 *   // prevent default
 *   return false;
 * }
 * describe('no image displayed');
 * </code>
 * </div>
 *
 * <div class="norender">
 * <code>
 * // returns a TouchEvent object
 * // as a callback argument
 * function touchEnded(event) {
 *   console.log(event);
 * }
 * describe('no image displayed');
 * </code>
 * </div>
 */o.default.prototype._ontouchend=function(t){this._setProperty("mouseIsPressed",!1),this._updateTouchCoords(t),this._updateNextMouseCoords(t);var r,n=this._isGlobal?window:this;"function"==typeof n.touchEnded?!1===(r=n.touchEnded(t))&&t.preventDefault():"function"==typeof n.mouseReleased&&!1===(r=n.mouseReleased(t))&&t.preventDefault()};var l=o.default;n.default=l},{"../core/main":296,"core-js/modules/es.array.includes":176,"core-js/modules/es.string.includes":207}],317:[function(t,r,n){t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.typed-array.int32-array"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.typed-array.int32-array"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;/**
 * This module defines the filters for use with image buffers.
 *
 * This module is basically a collection of functions stored in an object
 * as opposed to modules. The functions are destructive, modifying
 * the passed in canvas rather than creating a copy.
 *
 * Generally speaking users of this module will use the Filters.apply method
 * on a canvas to create an effect.
 *
 * A number of functions are borrowed/adapted from
 * http://www.html5rocks.com/en/tutorials/canvas/imagefilters/
 * or the java processing implementation.
 */var o,a,s,l,c={/*
   * Helper functions
   *//**
   * Returns the pixel buffer for a canvas
   *
   * @private
   *
   * @param  {Canvas|ImageData} canvas the canvas to get pixels from
   * @return {Uint8ClampedArray}       a one-dimensional array containing
   *                                   the data in thc RGBA order, with integer
   *                                   values between 0 and 255
   */_toPixels:function(t){if(t instanceof ImageData)return t.data;if(t.getContext("2d"))return t.getContext("2d").getImageData(0,0,t.width,t.height).data;if(t.getContext("webgl")){var r=t.getContext("webgl"),n=r.drawingBufferWidth*r.drawingBufferHeight*4,o=new Uint8Array(n);return r.readPixels(0,0,t.width,t.height,r.RGBA,r.UNSIGNED_BYTE,o),o}},/**
  * Returns a 32 bit number containing ARGB data at ith pixel in the
  * 1D array containing pixels data.
  *
  * @private
  *
  * @param  {Uint8ClampedArray} data array returned by _toPixels()
  * @param  {Integer}           i    index of a 1D Image Array
  * @return {Integer}                32 bit integer value representing
  *                                  ARGB value.
  */_getARGB:function(t,r){var n=4*r;return t[n+3]<<24&4278190080|t[n]<<16&16711680|t[n+1]<<8&65280|255&t[n+2]},/**
  * Modifies pixels RGBA values to values contained in the data object.
  *
  * @private
  *
  * @param {Uint8ClampedArray} pixels array returned by _toPixels()
  * @param {Int32Array}        data   source 1D array where each value
  *                                   represents ARGB values
  */_setPixels:function(t,r){for(var n=0,o=0,a=t.length;o<a;o++)t[(n=4*o)+0]=(16711680&r[o])>>>16,t[n+1]=(65280&r[o])>>>8,t[n+2]=255&r[o],t[n+3]=(4278190080&r[o])>>>24},/**
  * Returns the ImageData object for a canvas
  * https://developer.mozilla.org/en-US/docs/Web/API/ImageData
  *
  * @private
  *
  * @param  {Canvas|ImageData} canvas canvas to get image data from
  * @return {ImageData}               Holder of pixel data (and width and
  *                                   height) for a canvas
  */_toImageData:function(t){return t instanceof ImageData?t:t.getContext("2d").getImageData(0,0,t.width,t.height)},/**
  * Returns a blank ImageData object.
  *
  * @private
  *
  * @param  {Integer} width
  * @param  {Integer} height
  * @return {ImageData}
  */_createImageData:function(t,r){return c._tmpCanvas=document.createElement("canvas"),c._tmpCtx=c._tmpCanvas.getContext("2d"),this._tmpCtx.createImageData(t,r)},/**
  * Applys a filter function to a canvas.
  *
  * The difference between this and the actual filter functions defined below
  * is that the filter functions generally modify the pixel buffer but do
  * not actually put that data back to the canvas (where it would actually
  * update what is visible). By contrast this method does make the changes
  * actually visible in the canvas.
  *
  * The apply method is the method that callers of this module would generally
  * use. It has been separated from the actual filters to support an advanced
  * use case of creating a filter chain that executes without actually updating
  * the canvas in between everystep.
  *
  * @private
  * @param  {HTMLCanvasElement} canvas [description]
  * @param  {function(ImageData,Object)} func   [description]
  * @param  {Object} filterParam  [description]
  */apply:function(t,r,n){var o=t.getContext("2d"),a=o.getImageData(0,0,t.width,t.height),s=r(a,n);s instanceof ImageData?o.putImageData(s,0,0,0,0,t.width,t.height):o.putImageData(a,0,0,0,0,t.width,t.height)},/*
  * Filters
  *//**
  * Converts the image to black and white pixels depending if they are above or
  * below the threshold defined by the level parameter. The parameter must be
  * between 0.0 (black) and 1.0 (white). If no level is specified, 0.5 is used.
  *
  * Borrowed from http://www.html5rocks.com/en/tutorials/canvas/imagefilters/
  *
  * @private
  * @param  {Canvas} canvas
  * @param  {Float} level
  */threshold:function(t,r){var n=c._toPixels(t);void 0===r&&(r=.5);for(var o=Math.floor(255*r),a=0;a<n.length;a+=4){var s=.2126*n[a]+.7152*n[a+1]+.0722*n[a+2],l=void 0;l=s>=o?255:0,n[a]=n[a+1]=n[a+2]=l}},/**
  * Converts any colors in the image to grayscale equivalents.
  * No parameter is used.
  *
  * Borrowed from http://www.html5rocks.com/en/tutorials/canvas/imagefilters/
  *
  * @private
  * @param {Canvas} canvas
  */gray:function(t){for(var r=c._toPixels(t),n=0;n<r.length;n+=4){var o=.2126*r[n]+.7152*r[n+1]+.0722*r[n+2];r[n]=r[n+1]=r[n+2]=o}},/**
  * Sets the alpha channel to entirely opaque. No parameter is used.
  *
  * @private
  * @param {Canvas} canvas
  */opaque:function(t){for(var r=c._toPixels(t),n=0;n<r.length;n+=4)r[n+3]=255;return r},/**
  * Sets each pixel to its inverse value. No parameter is used.
  * @private
  * @param  {Canvas} canvas
  */invert:function(t){for(var r=c._toPixels(t),n=0;n<r.length;n+=4)r[n]=255-r[n],r[n+1]=255-r[n+1],r[n+2]=255-r[n+2]},/**
  * Limits each channel of the image to the number of colors specified as
  * the parameter. The parameter can be set to values between 2 and 255, but
  * results are most noticeable in the lower ranges.
  *
  * Adapted from java based processing implementation
  *
  * @private
  * @param  {Canvas} canvas
  * @param  {Integer} level
  */posterize:function(t,r){var n=c._toPixels(t);if(r<2||r>255)throw Error("Level must be greater than 2 and less than 255 for posterize");for(var o=r-1,a=0;a<n.length;a+=4){var s=n[a],l=n[a+1],u=n[a+2];n[a]=(s*r>>8)*255/o,n[a+1]=(l*r>>8)*255/o,n[a+2]=(u*r>>8)*255/o}},/**
  * reduces the bright areas in an image
  * @private
  * @param  {Canvas} canvas
  */dilate:function(t){for(var r,n,o,a,s,l,u,p,d,m,f,h,y,g,v,b,x,j=c._toPixels(t),w=0,_=j.length?j.length/4:0,S=new Int32Array(_);w<_;)for(r=w,n=w+t.width;w<n;)o=a=c._getARGB(j,w),u=w-1,l=w+1,p=w-t.width,d=w+t.width,u<r&&(u=w),l>=n&&(l=w),p<0&&(p=0),d>=_&&(d=w),h=c._getARGB(j,p),f=c._getARGB(j,u),y=c._getARGB(j,d),m=c._getARGB(j,l),s=77*(o>>16&255)+151*(o>>8&255)+28*(255&o),v=77*(f>>16&255)+151*(f>>8&255)+28*(255&f),g=77*(m>>16&255)+151*(m>>8&255)+28*(255&m),b=77*(h>>16&255)+151*(h>>8&255)+28*(255&h),x=77*(y>>16&255)+151*(y>>8&255)+28*(255&y),v>s&&(a=f,s=v),g>s&&(a=m,s=g),b>s&&(a=h,s=b),x>s&&(a=y,s=x),S[w++]=a;c._setPixels(j,S)},/**
  * increases the bright areas in an image
  * @private
  * @param  {Canvas} canvas
  */erode:function(t){for(var r,n,o,a,s,l,u,p,d,m,f,h,y,g,v,b,x,j=c._toPixels(t),w=0,_=j.length?j.length/4:0,S=new Int32Array(_);w<_;)for(r=w,n=w+t.width;w<n;)o=a=c._getARGB(j,w),u=w-1,l=w+1,p=w-t.width,d=w+t.width,u<r&&(u=w),l>=n&&(l=w),p<0&&(p=0),d>=_&&(d=w),h=c._getARGB(j,p),f=c._getARGB(j,u),y=c._getARGB(j,d),m=c._getARGB(j,l),s=77*(o>>16&255)+151*(o>>8&255)+28*(255&o),v=77*(f>>16&255)+151*(f>>8&255)+28*(255&f),g=77*(m>>16&255)+151*(m>>8&255)+28*(255&m),b=77*(h>>16&255)+151*(h>>8&255)+28*(255&h),x=77*(y>>16&255)+151*(y>>8&255)+28*(255&y),v<s&&(a=f,s=v),g<s&&(a=m,s=g),b<s&&(a=h,s=b),x<s&&(a=y,s=x),S[w++]=a;c._setPixels(j,S)},blur:function(t,r){p(t,r)}};// BLUR
/*
 * Port of https://github.com/processing/processing/blob/
 * main/core/src/processing/core/PImage.java#L1250
 *
 * Optimized code for building the blur kernel.
 * further optimized blur code (approx. 15% for radius=20)
 * bigger speed gains for larger radii (~30%)
 * added support for various image types (ALPHA, RGB, ARGB)
 * [toxi 050728]
 */function u(t){var r=3.5*t|0;if(o!==(r=r<1?1:r<248?r:248)){a=1+(o=r)<<1,s=new Int32Array(a),l=Array(a);for(var n,c,u,p,d=0;d<a;d++)l[d]=new Int32Array(256);for(var m=1,f=r-1;m<r;m++){s[r+m]=s[f]=c=f*f,u=l[r+m],p=l[f--];for(var h=0;h<256;h++)u[h]=p[h]=c*h}n=s[r]=r*r,u=l[r];for(var y=0;y<256;y++)u[y]=n*y}}// Port of https://github.com/processing/processing/blob/
// main/core/src/processing/core/PImage.java#L1433
function p(t,r){for(var n,p,d,m,f,h,y,g,v,b,x,j,w,_,S=c._toPixels(t),E=t.width,T=t.height,M=E*T,C=new Int32Array(M),O=0;O<M;O++)C[O]=c._getARGB(S,O);var N=new Int32Array(M),A=new Int32Array(M),R=new Int32Array(M),L=new Int32Array(M),I=0;for(u(r),j=0;j<T;j++){for(x=0;x<E;x++){if(m=d=p=f=n=0,(h=x-o)<0)b=-h,h=0;else{if(h>=E)break;b=0}for(w=b;w<a&&!(h>=E);w++){var P=C[h+I];f+=(_=l[w])[(-16777216&P)>>>24],p+=_[(16711680&P)>>16],d+=_[(65280&P)>>8],m+=_[255&P],n+=s[w],h++}N[y=I+x]=f/n,A[y]=p/n,R[y]=d/n,L[y]=m/n}I+=E}for(j=0,I=0,v=(g=-o)*E;j<T;j++){for(x=0;x<E;x++){if(m=d=p=f=n=0,g<0)b=y=-g,h=x;else{if(g>=T)break;b=0,y=g,h=x+v}for(w=b;w<a&&!(y>=T);w++)f+=(_=l[w])[N[h]],p+=_[A[h]],d+=_[R[h]],m+=_[L[h]],n+=s[w],y++,h+=E;C[x+I]=f/n<<24|p/n<<16|d/n<<8|m/n}I+=E,v+=E,g++}c._setPixels(S,C)}var d=c;n.default=d},{"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.to-string":198,"core-js/modules/es.typed-array.copy-within":221,"core-js/modules/es.typed-array.every":222,"core-js/modules/es.typed-array.fill":223,"core-js/modules/es.typed-array.filter":224,"core-js/modules/es.typed-array.find":226,"core-js/modules/es.typed-array.find-index":225,"core-js/modules/es.typed-array.for-each":229,"core-js/modules/es.typed-array.includes":230,"core-js/modules/es.typed-array.index-of":231,"core-js/modules/es.typed-array.int32-array":233,"core-js/modules/es.typed-array.iterator":234,"core-js/modules/es.typed-array.join":235,"core-js/modules/es.typed-array.last-index-of":236,"core-js/modules/es.typed-array.map":237,"core-js/modules/es.typed-array.reduce":239,"core-js/modules/es.typed-array.reduce-right":238,"core-js/modules/es.typed-array.reverse":240,"core-js/modules/es.typed-array.set":241,"core-js/modules/es.typed-array.slice":242,"core-js/modules/es.typed-array.some":243,"core-js/modules/es.typed-array.sort":244,"core-js/modules/es.typed-array.subarray":245,"core-js/modules/es.typed-array.to-locale-string":246,"core-js/modules/es.typed-array.to-string":247,"core-js/modules/es.typed-array.uint8-array":250}],318:[function(t,r,n){t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.set"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.uint32-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.set"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.uint32-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=s(t("../core/main")),a=s(t("omggif"));function s(t){return t&&t.__esModule?t:{default:t}}function l(t){return p(t)||u(t)||c()}function c(){throw TypeError("Invalid attempt to spread non-iterable instance")}function u(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function p(t){if(Array.isArray(t)){for(var r=0,n=Array(t.length);r<t.length;r++)n[r]=t[r];return n}}/**
 * Creates a new <a href="#/p5.Image">p5.Image</a> (the datatype for storing images). This provides a
 * fresh buffer of pixels to play with. Set the size of the buffer with the
 * width and height parameters.
 *
 * .<a href="#/p5.Image/pixels">pixels</a> gives access to an array containing the values for all the pixels
 * in the display window.
 * These values are numbers. This array is the size (including an appropriate
 * factor for the <a href="#/p5/pixelDensity">pixelDensity</a>) of the display window x4,
 * representing the R, G, B, A values in order for each pixel, moving from
 * left to right across each row, then down each column. See .<a href="#/p5.Image/pixels">pixels</a> for
 * more info. It may also be simpler to use <a href="#/p5.Image/set">set()</a> or <a href="#/p5.Image/get">get()</a>.
 *
 * Before accessing the pixels of an image, the data must loaded with the
 * <a href="#/p5.Image/loadPixels">loadPixels()</a> function. After the array data has been modified, the
 * <a href="#/p5.Image/updatePixels">updatePixels()</a> function must be run to update the changes.
 *
 * @method createImage
 * @param  {Integer} width  width in pixels
 * @param  {Integer} height height in pixels
 * @return {p5.Image}       the <a href="#/p5.Image">p5.Image</a> object
 * @example
 * <div>
 * <code>
 * let img = createImage(66, 66);
 * img.loadPixels();
 * for (let i = 0; i < img.width; i++) {
 *   for (let j = 0; j < img.height; j++) {
 *     img.set(i, j, color(0, 90, 102));
 *   }
 * }
 * img.updatePixels();
 * image(img, 17, 17);
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img = createImage(66, 66);
 * img.loadPixels();
 * for (let i = 0; i < img.width; i++) {
 *   for (let j = 0; j < img.height; j++) {
 *     img.set(i, j, color(0, 90, 102, (i % img.width) * 2));
 *   }
 * }
 * img.updatePixels();
 * image(img, 17, 17);
 * image(img, 34, 34);
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let pink = color(255, 102, 204);
 * let img = createImage(66, 66);
 * img.loadPixels();
 * let d = pixelDensity();
 * let halfImage = 4 * (img.width * d) * (img.height / 2 * d);
 * for (let i = 0; i < halfImage; i += 4) {
 *   img.pixels[i] = red(pink);
 *   img.pixels[i + 1] = green(pink);
 *   img.pixels[i + 2] = blue(pink);
 *   img.pixels[i + 3] = alpha(pink);
 * }
 * img.updatePixels();
 * image(img, 17, 17);
 * </code>
 * </div>
 *
 * @alt
 * 66×66 dark turquoise rect in center of canvas.
 * 2 gradated dark turquoise rects fade left. 1 center 1 bottom right of canvas
 * no image displayed
 */o.default.prototype.createImage=function(t,r){return o.default._validateParameters("createImage",arguments),new o.default.Image(t,r)},/**
 *  Save the current canvas as an image. The browser will either save the
 *  file immediately, or prompt the user with a dialogue window.
 *
 *  @method saveCanvas
 *  @param  {p5.Element|HTMLCanvasElement} selectedCanvas   a variable
 *                                  representing a specific html5 canvas (optional)
 *  @param  {String} [filename]
 *  @param  {String} [extension]      'jpg' or 'png'
 *
 *  @example
 * <div class='norender notest'><code>
 * function setup() {
 *   let c = createCanvas(100, 100);
 *   background(255, 0, 0);
 *   saveCanvas(c, 'myCanvas', 'jpg');
 * }
 * </code></div>
 * <div class='norender notest'><code>
 * // note that this example has the same result as above
 * // if no canvas is specified, defaults to main canvas
 * function setup() {
 *   let c = createCanvas(100, 100);
 *   background(255, 0, 0);
 *   saveCanvas('myCanvas', 'jpg');
 *
 *   // all of the following are valid
 *   saveCanvas(c, 'myCanvas', 'jpg');
 *   saveCanvas(c, 'myCanvas.jpg');
 *   saveCanvas(c, 'myCanvas');
 *   saveCanvas(c);
 *   saveCanvas('myCanvas', 'png');
 *   saveCanvas('myCanvas');
 *   saveCanvas();
 * }
 * </code></div>
 *
 * @alt
 * no image displayed
 * no image displayed
 * no image displayed
 *//**
 *  @method saveCanvas
 *  @param  {String} [filename]
 *  @param  {String} [extension]
 */o.default.prototype.saveCanvas=function(){o.default._validateParameters("saveCanvas",arguments);var t,r,n,a,s=[].slice.call(arguments);switch(arguments[0]instanceof HTMLCanvasElement?(t=arguments[0],s.shift()):arguments[0]instanceof o.default.Element?(t=arguments[0].elt,s.shift()):t=this._curElement&&this._curElement.elt,s.length>=1&&(r=s[0]),s.length>=2&&(n=s[1]),n=n||o.default.prototype._checkFileExtension(r,n)[1]||"png"){default://case 'png':
a="image/png";break;case"jpeg":case"jpg":a="image/jpeg"}t.toBlob(function(t){o.default.prototype.downloadFile(t,r,n)},a)},// the only place I found it being used was on image/p5.Image.js, on the
// save function. that has been changed to use this function.
o.default.prototype.encodeAndDownloadGif=function(t,r){var n=t.gifProperties,s=n.loopLimit;//convert loopLimit back into Netscape Block formatting
1===s?s=null:null===s&&(s=0);//loop over frames and get the frequency of each palette
for(var c=new Uint8Array(t.width*t.height*n.numFrames),u=[],p={},d=0;d<n.numFrames;d++){for(var m=new Set,f=n.frames[d].image.data,h=f.length,y=new Uint32Array(t.width*t.height),g=0,v=0;g<h;g+=4,v++){var b=f[g+0]<<16|f[g+1]<<8|f[g+2]<<0;m.add(b),y[v]=b}// A way to put use the entire palette as an object key
var x=l(m).sort().toString();void 0===p[x]?p[x]={freq:1,frames:[d]}:(p[x].freq+=1,p[x].frames.push(d)),u.push(y)}var j=[],w=Object.keys(p).sort(function(t,r){return p[r].freq-p[t].freq}),_=w[0].split(",").map(function(t){return parseInt(t)});j=j.concat(p[_].frames);// Iterate over the remaining palettes in the order of
// their occurrence and see if the colors in this palette which are
// not in the global palette can be added there, while keeping the length
// of the global palette <= 256
for(var S=new Set(_),E=1;E<w.length;E++){var T=w[E].split(",").map(function(t){return parseInt(t)}).filter(function(t){return!S.has(t)});if(_.length+T.length<=256){for(var M=0;M<T.length;M++)_.push(T[M]),S.add(T[M]);// All frames using this palette now use the global palette
j=j.concat(p[w[E]].frames)}}j=new Set(j);for(var C={},O=0;O<_.length;O++)C[_[O]]||(C[_[O]]=O);for(// Maps a color to its index
var N=1;N<_.length;)N<<=1;_.length=N;for(var A={loop:s,palette:new Uint32Array(_)},R=new a.default.GifWriter(c,t.width,t.height,A),L={},I=function(r){var o=!j.has(r),a=o?[]:_,s=new Uint8Array(t.width*t.height),l={},c=new Set;u[r].forEach(function(t,n){o?(void 0===l[t]&&(l[t]=a.length,a.push(t)),s[n]=l[t]):s[n]=C[t],r>0&&u[r-1][n]!==t&&c.add(t)});var p={},d=a.filter(function(t){return!c.has(t)});// Transparency optimization
if(d.length>0){// Select a color to mark as transparent
var m=d[0],f=o?l[m]:C[m];if(r>0){for(var h=0;h<u[r].length;h++)u[r-1][h]===u[r][h]&&(s[h]=f);p.transparent=f,L.frameOpts.disposal=1}}if(p.delay=n.frames[r].delay/10,o){for(// force palette to be power of 2
var y=1;y<a.length;)y<<=1;a.length=y,p.palette=new Uint32Array(a)}r>0&&R.addFrame(0,0,t.width,t.height,L.pixelPaletteIndex,L.frameOpts),// previous frame object should now have details of this frame
L={pixelPaletteIndex:s,frameOpts:p}},P=0;P<n.numFrames;P++)I(P);L.frameOpts.disposal=1,R.addFrame(0,0,t.width,t.height,L.pixelPaletteIndex,L.frameOpts);var D="gif",F=new Blob([c.slice(0,R.end())],{type:"image/gif"});o.default.prototype.downloadFile(F,r,D)},/**
 *  Capture a sequence of frames that can be used to create a movie.
 *  Accepts a callback. For example, you may wish to send the frames
 *  to a server where they can be stored or converted into a movie.
 *  If no callback is provided, the browser will pop up save dialogues in an
 *  attempt to download all of the images that have just been created. With the
 *  callback provided the image data isn't saved by default but instead passed
 *  as an argument to the callback function as an array of objects, with the
 *  size of array equal to the total number of frames.
 *
 *  The arguments `duration` and `framerate` are constrained to be less or equal to 15 and 22, respectively, which means you
 *  can only download a maximum of 15 seconds worth of frames at 22 frames per second, adding up to 330 frames.
 *  This is done in order to avoid memory problems since a large enough canvas can fill up the memory in your computer
 *  very easily and crash your program or even your browser.
 *
 *  To export longer animations, you might look into a library like
 *  <a href="https://github.com/spite/ccapture.js/">ccapture.js</a>.
 *
 *  @method saveFrames
 *  @param  {String}   filename
 *  @param  {String}   extension 'jpg' or 'png'
 *  @param  {Number}   duration  Duration in seconds to save the frames for. This parameter will be constrained to be less or equal to 15.
 *  @param  {Number}   framerate  Framerate to save the frames in. This parameter will be constrained to be less or equal to 22.
 *  @param  {function(Array)} [callback] A callback function that will be executed
                                  to handle the image data. This function
                                  should accept an array as argument. The
                                  array will contain the specified number of
                                  frames of objects. Each object has three
                                  properties: imageData - an
                                  image/octet-stream, filename and extension.
 *  @example
 *  <div><code>
 * function draw() {
 *   background(mouseX);
 * }
 *
 * function mousePressed() {
 *   saveFrames('out', 'png', 1, 25, data => {
 *     print(data);
 *   });
 * }
</code></div>
 *
 * @alt
 * canvas background goes from light to dark with mouse x.
 */o.default.prototype.saveFrames=function(t,r,n,a,s){o.default._validateParameters("saveFrames",arguments);var l=n||3;l=1e3*o.default.prototype.constrain(l,0,15);var c=a||15;c=o.default.prototype.constrain(c,0,22);var u=0,p=o.default.prototype._makeFrame,d=this._curElement.elt,m=[],f=setInterval(function(){m.push(p(t+u,r,d)),u++},1e3/c);setTimeout(function(){if(clearInterval(f),s)s(m);else{var t=!0,r=!1,n=void 0;try{for(var a,l=m[Symbol.iterator]();!(t=(a=l.next()).done);t=!0){var c=a.value;o.default.prototype.downloadFile(c.imageData,c.filename,c.ext)}}catch(t){r=!0,n=t}finally{try{t||null==l.return||l.return()}finally{if(r)throw n}}}m=[]},l+.01)},o.default.prototype._makeFrame=function(t,r,n){if(o=this?this._curElement.elt:n,r)switch(r.toLowerCase()){case"png":default:a="image/png";break;case"jpeg":case"jpg":a="image/jpeg"}else r="png",a="image/png";var o,a,s="image/octet-stream",l=o.toDataURL(a);l=l.replace(a,s);var c={};return c.imageData=l,c.filename=t,c.ext=r,c};var d=o.default;n.default=d},{"../core/main":296,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.filter":173,"core-js/modules/es.array.for-each":174,"core-js/modules/es.array.from":175,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.map":181,"core-js/modules/es.array.slice":182,"core-js/modules/es.object.keys":197,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.set":205,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.replace":212,"core-js/modules/es.string.split":214,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.typed-array.copy-within":221,"core-js/modules/es.typed-array.every":222,"core-js/modules/es.typed-array.fill":223,"core-js/modules/es.typed-array.filter":224,"core-js/modules/es.typed-array.find":226,"core-js/modules/es.typed-array.find-index":225,"core-js/modules/es.typed-array.for-each":229,"core-js/modules/es.typed-array.includes":230,"core-js/modules/es.typed-array.index-of":231,"core-js/modules/es.typed-array.iterator":234,"core-js/modules/es.typed-array.join":235,"core-js/modules/es.typed-array.last-index-of":236,"core-js/modules/es.typed-array.map":237,"core-js/modules/es.typed-array.reduce":239,"core-js/modules/es.typed-array.reduce-right":238,"core-js/modules/es.typed-array.reverse":240,"core-js/modules/es.typed-array.set":241,"core-js/modules/es.typed-array.slice":242,"core-js/modules/es.typed-array.some":243,"core-js/modules/es.typed-array.sort":244,"core-js/modules/es.typed-array.subarray":245,"core-js/modules/es.typed-array.to-locale-string":246,"core-js/modules/es.typed-array.to-string":247,"core-js/modules/es.typed-array.uint32-array":249,"core-js/modules/es.typed-array.uint8-array":250,"core-js/modules/web.dom-collections.for-each":253,"core-js/modules/web.dom-collections.iterator":254,omggif:268}],319:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.copy-within"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.promise"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.uint8-clamped-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.array.copy-within"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.promise"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.uint8-clamped-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,t("regenerator-runtime/runtime");var s=f(t("../core/main")),l=f(t("../core/helpers")),c=m(t("../core/constants")),u=f(t("omggif")),p=t("gifenc");function d(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return d=function(){return t},t}function m(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=d();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function f(t){return t&&t.__esModule?t:{default:t}}function h(t,r,n,o,a,s,l){try{var c=t[s](l),u=c.value}catch(t){n(t);return}c.done?r(u):Promise.resolve(u).then(o,a)}function y(t){return function(){var r=this,n=arguments;return new Promise(function(o,a){var s=t.apply(r,n);function l(t){h(s,o,a,l,c,"next",t)}function c(t){h(s,o,a,l,c,"throw",t)}l(void 0)})}}/**
 * Loads an image from a path and creates a <a href="#/p5.Image">p5.Image</a> from it.
 *
 * The image may not be immediately available for rendering.
 * If you want to ensure that the image is ready before doing
 * anything with it, place the <a href="#/p5/loadImage">loadImage()</a> call in <a href="#/p5/preload">preload()</a>.
 * You may also supply a callback function to handle the image when it's ready.
 *
 * The path to the image should be relative to the HTML file
 * that links in your sketch. Loading an image from a URL or other
 * remote location may be blocked due to your browser's built-in
 * security.

 * You can also pass in a string of a base64 encoded image as an alternative to the file path.
 * Remember to add "data:image/png;base64," in front of the string.
 *
 * @method loadImage
 * @param  {String} path Path of the image to be loaded
 * @param  {function(p5.Image)} [successCallback] Function to be called once
 *                                the image is loaded. Will be passed the
 *                                <a href="#/p5.Image">p5.Image</a>.
 * @param  {function(Event)}    [failureCallback] called with event error if
 *                                the image fails to load.
 * @return {p5.Image}             the <a href="#/p5.Image">p5.Image</a> object
 * @example
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/laDefense.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 * }
 * </code>
 * </div>
 * <div>
 * <code>
 * function setup() {
 *   // here we use a callback to display the image after loading
 *   loadImage('assets/laDefense.jpg', img => {
 *     image(img, 0, 0);
 *   });
 * }
 * </code>
 * </div>
 *
 * @alt
 * image of the underside of a white umbrella and grided ceililng above
 * image of the underside of a white umbrella and grided ceililng above
 */function g(t){for(var r=parseInt(height/2),n=4*width,o=new Uint8Array(4*width),a=0;a<r;++a){var s=a*n,l=(height-a-1)*n;o.set(t.subarray(s,s+n)),t.copyWithin(s,l,l+n),t.set(o,l)}return t}function v(t){// this array will hold absolutely every pixel from the animation.
// the set function on the Uint8Array works super fast tho!
for(var r=new Uint8Array(t.length*t[0].length),n=0;n<t.length;n++)r.set(t[n],n*t[0].length);// make an array the size of every possible color in every possible frame
// that is: width * height * frames.
var o=(0,p.quantize)(r,256,{format:"rgba4444",oneBitAlpha:!0});// put every frame one after the other in sequence.
return 256===o.length?o[o.length-1]=[255*Math.random(),255*Math.random(),255*Math.random(),0]:o.push([255*Math.random(),255*Math.random(),255*Math.random(),0]),o}/**
 * Helper function for loading GIF-based images
 */function b(t,r,n,o,a){var l=new u.default.GifReader(t);r.width=r.canvas.width=l.width,r.height=r.canvas.height=l.height;for(var c=[],p=l.numFrames(),d=new Uint8ClampedArray(r.width*r.height*4),m=function(t,n){try{n.decodeAndBlitFrameRGBA(t,d)}catch(t){s.default._friendlyFileLoadError(8,r.src),"function"==typeof o?o(t):console.error(t)}},f=0;f<p;f++){var h=l.frameInfo(f),y=r.drawingContext.getImageData(0,0,r.width,r.height);d=y.data.slice(),m(f,l);var g=new ImageData(d,r.width,r.height);r.drawingContext.putImageData(g,0,0);var v=h.delay;// To maintain the default of 10FPS when frameInfo.delay equals to 0
0===v&&(v=10),c.push({image:r.drawingContext.getImageData(0,0,r.width,r.height),delay:10//GIF stores delay in one-hundredth of a second, shift to ms
*v}),2===h.disposal?r.drawingContext.clearRect(h.x,h.y,h.width,h.height):3===h.disposal&&r.drawingContext.putImageData(y,0,0,h.x,h.y,h.width,h.height)}//Uses Netscape block encoding
var b=l.loopCount();null===b?b=1:0===b&&(b=null),// we used the pImg for painting and saving during load
// so we have to reset it to the first frame
r.drawingContext.putImageData(c[0].image,0,0),c.length>1&&(r.gifProperties={displayIndex:0,loopLimit:b,loopCount:0,frames:c,numFrames:p,playing:!0,timeDisplayed:0,lastChangeTime:0}),"function"==typeof n&&n(r),a()}/**
 * @private
 * @param {Constant} xAlign either LEFT, RIGHT or CENTER
 * @param {Constant} yAlign either TOP, BOTTOM or CENTER
 * @param {Number} dx
 * @param {Number} dy
 * @param {Number} dw
 * @param {Number} dh
 * @param {Number} sw
 * @param {Number} sh
 * @returns {Object}
 */function x(t,r,n,o,a,s,l,u){var p=Math.max(l/a,u/s),d=l/p,m=u/p,f=n,h=o;return t===c.CENTER?f+=(a-d)/2:t===c.RIGHT&&(f+=a-d),r===c.CENTER?h+=(s-m)/2:r===c.BOTTOM&&(h+=s-m),{x:f,y:h,w:d,h:m}}/**
 * @private
 * @param {Constant} xAlign either LEFT, RIGHT or CENTER
 * @param {Constant} yAlign either TOP, BOTTOM or CENTER
 * @param {Number} dw
 * @param {Number} dh
 * @param {Number} sx
 * @param {Number} sy
 * @param {Number} sw
 * @param {Number} sh
 * @returns {Object}
 */function j(t,r,n,o,a,s,l,u){var p=Math.max(n/l,o/u),d=n/p,m=o/p,f=a,h=s;return t===c.CENTER?f+=(l-d)/2:t===c.RIGHT&&(f+=l-d),r===c.CENTER?h+=(u-m)/2:r===c.BOTTOM&&(h+=u-m),{x:f,y:h,w:d,h:m}}/**
 * @private
 * @param {Constant} [fit] either CONTAIN or COVER
 * @param {Constant} xAlign either LEFT, RIGHT or CENTER
 * @param {Constant} yAlign either TOP, BOTTOM or CENTER
 * @param {Number} dx
 * @param {Number} dy
 * @param {Number} dw
 * @param {Number} dh
 * @param {Number} sx
 * @param {Number} sy
 * @param {Number} sw
 * @param {Number} sh
 * @returns {Object}
 */function w(t,r,n,o,a,s,l,u,p,d,m){if(t===c.COVER){var f=j(r,n,s,l,u,p,d,m),h=f.x,y=f.y,g=f.w,v=f.h;u=h,p=y,d=g,m=v}if(t===c.CONTAIN){var b=x(r,n,o,a,s,l,d,m),w=b.x,_=b.y,S=b.w,E=b.h;o=w,a=_,s=S,l=E}return{sx:u,sy:p,sw:d,sh:m,dx:o,dy:a,dw:s,dh:l}}/**
 * Validates clipping params. Per drawImage spec sWidth and sHight cannot be
 * negative or greater than image intrinsic width and height
 * @private
 * @param {Number} sVal
 * @param {Number} iVal
 * @returns {Number}
 * @private
 */function _(t,r){return t>0&&t<r?t:r}/**
 * Draw an image to the p5.js canvas.
 *
 * This function can be used with different numbers of parameters. The
 * simplest use requires only three parameters: img, x, and y—where (x, y) is
 * the position of the image. Two more parameters can optionally be added to
 * specify the width and height of the image.
 *
 * This function can also be used with eight Number parameters. To
 * differentiate between all these parameters, p5.js uses the language of
 * "destination rectangle" (which corresponds to "dx", "dy", etc.) and "source
 * image" (which corresponds to "sx", "sy", etc.) below. Specifying the
 * "source image" dimensions can be useful when you want to display a
 * subsection of the source image instead of the whole thing. Here's a diagram
 * to explain further:
 * <img src="assets/drawImage.png"></img>
 *
 * This function can also be used to draw images without distorting the orginal aspect ratio,
 * by adding 9th parameter, fit, which can either be COVER or CONTAIN.
 * CONTAIN, as the name suggests, contains the whole image within the specified destination box
 * without distorting the image ratio.
 * COVER covers the entire destination box.
 *
 *
 *
 * @method image
 * @param  {p5.Image|p5.Element|p5.Texture|p5.Framebuffer|p5.FramebufferTexture} img    the image to display
 * @param  {Number}   x     the x-coordinate of the top-left corner of the image
 * @param  {Number}   y     the y-coordinate of the top-left corner of the image
 * @param  {Number}   [width]  the width to draw the image
 * @param  {Number}   [height] the height to draw the image
 * @example
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/laDefense.jpg');
 * }
 * function setup() {
 *   // Top-left corner of the img is at (0, 0)
 *   // Width and height are the img's original width and height
 *   image(img, 0, 0);
 * }
 * </code>
 * </div>
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/laDefense.jpg');
 * }
 * function setup() {
 *   background(50);
 *   // Top-left corner of the img is at (10, 10)
 *   // Width and height are 50×50
 *   image(img, 10, 10, 50, 50);
 * }
 * </code>
 * </div>
 * <div>
 * <code>
 * function setup() {
 *   // Here, we use a callback to display the image after loading
 *   loadImage('assets/laDefense.jpg', img => {
 *     image(img, 0, 0);
 *   });
 * }
 * </code>
 * </div>
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/gradient.png');
 * }
 * function setup() {
 *   // 1. Background image
 *   // Top-left corner of the img is at (0, 0)
 *   // Width and height are the img's original width and height, 100×100
 *   image(img, 0, 0);
 *   // 2. Top right image
 *   // Top-left corner of destination rectangle is at (50, 0)
 *   // Destination rectangle width and height are 40×20
 *   // The next parameters are relative to the source image:
 *   // - Starting at position (50, 50) on the source image, capture a 50×50
 *   // subsection
 *   // - Draw this subsection to fill the dimensions of the destination rectangle
 *   image(img, 50, 0, 40, 20, 50, 50, 50, 50);
 * }
 * </code>
 * </div>
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   // dimensions of image are 780 x 440
 *   // dimensions of canvas are 100 x 100
 *   img = loadImage('assets/moonwalk.jpg');
 * }
 * function setup() {
 *   // CONTAIN the whole image without distorting the image's aspect ratio
 *   // CONTAIN the image within the specified destination box and display at LEFT,CENTER position
 *   background(color('green'));
 *   image(img, 0, 0, width, height, 0, 0, img.width, img.height, CONTAIN, LEFT);
 * }
 * </code>
 * </div>
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/laDefense50.png'); // dimensions of image are 50 x 50
 * }
 * function setup() {
 *   // COVER the whole destination box without distorting the image's aspect ratio
 *   // COVER the specified destination box which is of dimension 100 x 100
 *   // Without specifying xAlign or yAlign, the image will be
 *   // centered in the destination box in both axes
 *   image(img, 0, 0, width, height, 0, 0, img.width, img.height, COVER);
 * }
 * </code>
 * </div>
 * @alt
 * image of the underside of a white umbrella and gridded ceiling above
 * image of the underside of a white umbrella and gridded ceiling above
 */t("../core/friendly_errors/validate_params"),t("../core/friendly_errors/file_errors"),t("../core/friendly_errors/fes_core"),s.default.prototype.loadImage=function(t,r,n){s.default._validateParameters("loadImage",arguments);var o=new s.default.Image(1,1,this),a=this,l=new Request(t,{method:"GET",mode:"cors"});return fetch(t,l).then(function(l){// GIF section
var c=l.headers.get("content-type");if(null===c&&console.warn("The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset."),c&&c.includes("image/gif"))l.arrayBuffer().then(function(t){t&&b(new Uint8Array(t),o,r,n,(function(t){a._decrementPreload()}).bind(a))},function(t){"function"==typeof n?(n(t),a._decrementPreload()):console.error(t)});else{// Non-GIF Section
var u=new Image;u.onload=function(){o.width=o.canvas.width=u.width,o.height=o.canvas.height=u.height,o.drawingContext.drawImage(u,0,0),o.modified=!0,"function"==typeof r&&r(o),a._decrementPreload()},u.onerror=function(t){s.default._friendlyFileLoadError(0,u.src),"function"==typeof n?(n(t),a._decrementPreload()):console.error(t)},0!==t.indexOf("data:image/")&&(u.crossOrigin="Anonymous"),// start loading the image
u.src=t}o.modified=!0}).catch(function(r){s.default._friendlyFileLoadError(0,t),"function"==typeof n?(n(r),a._decrementPreload()):console.error(r)}),o},/**
 * Generates a gif of your current animation and downloads it to your computer!
 *
 * The duration argument specifies how many seconds you want to record from your animation.
 * This value is then converted to the necessary number of frames to generate it, depending
 * on the value of units. More on that on the next paragraph.
 *
 * An optional object that can contain two more arguments: delay (number) and units (string).
 *
 * `delay`, specifying how much time we should wait before recording
 *
 * `units`, a string that can be either 'seconds' or 'frames'. By default it's 'seconds'.
 *
 * `units` specifies how the duration and delay arguments will behave.
 * If 'seconds', these arguments will correspond to seconds, meaning that 3 seconds worth of animation
 * will be created. If 'frames', the arguments now correspond to the number of frames you want your
 * animation to be, if you are very sure of this number.
 *
 * This may be called in setup, or, like in the example below, inside an event function,
 * like keyPressed or mousePressed.
 *
 * @method saveGif
 * @param  {String} filename File name of your gif
 * @param  {Number} duration Duration in seconds that you wish to capture from your sketch
 * @param  {Object} options An optional object that can contain five more arguments:
 * delay, specifying how much time we should wait before recording;
 * units, a string that can be either 'seconds' or 'frames'. By default it's 'seconds’;
 * silent, a boolean that defines presence of progress notifications. By default it’s false;
 * notificationDuration, a number that defines how long in seconds the final notification
 * will live. 0, the default value, means that the notification will never be removed;
 * notificationID, a string that specifies the notification DOM element id. By default it’s 'progressBar’.
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100);
 * }
 *
 * function draw() {
 *   colorMode(RGB);
 *   background(30);
 *
 *   // create a bunch of circles that move in... circles!
 *   for (let i = 0; i < 10; i++) {
 *     let opacity = map(i, 0, 10, 0, 255);
 *     noStroke();
 *     fill(230, 250, 90, opacity);
 *     circle(
 *       30 * sin(frameCount / (30 - i)) + width / 2,
 *       30 * cos(frameCount / (30 - i)) + height / 2,
 *       10
 *     );
 *   }
 * }
 *
 * // you can put it in the mousePressed function,
 * // or keyPressed for example
 * function keyPressed() {
 *   // this will download the first 5 seconds of the animation!
 *   if (key === 's') {
 *     saveGif('mySketch', 5);
 *   }
 * }
 * </code>
 * </div>
 *
 * @alt
 * animation of a group of yellow circles moving in circles over a dark background
 */s.default.prototype.saveGif=/*#__PURE__*/function(){var t=y(/*#__PURE__*/regeneratorRuntime.mark(function t(r,n){var o,a,l,c,u,d,m,f,h,y,b,x,j,w,_,S,E,T,M,C,O,N,A,R,L,I,P,D,F,U,B,G=arguments;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(o=G.length>2&&void 0!==G[2]?G[2]:{delay:0,units:"seconds",silent:!1,notificationDuration:0,notificationID:"progressBar"},!("string"!=typeof r)){t.next=3;break}throw TypeError("fileName parameter must be a string");case 3:if(!("number"!=typeof n)){t.next=5;break}throw TypeError("Duration parameter must be a number");case 5:if(// extract variables for more comfortable use
a=o&&o.delay||0,l=o&&o.units||"seconds",c=o&&o.silent||!1,u=o&&o.notificationDuration||0,d=o&&o.notificationID||"progressBar",!("number"!=typeof a)){t.next=12;break}throw TypeError("Delay parameter must be a number");case 12:if(!("seconds"!==l&&"frames"!==l)){t.next=14;break}throw TypeError('Units parameter must be either "frames" or "seconds"');case 14:if(!("boolean"!=typeof c)){t.next=16;break}throw TypeError("Silent parameter must be a boolean");case 16:if(!("number"!=typeof u)){t.next=18;break}throw TypeError("Notification duration parameter must be a number");case 18:if(!("string"!=typeof d)){t.next=20;break}throw TypeError("Notification ID parameter must be a string");case 20:return this._recording=!0,((m=this._targetFrameRate)===1/0||void 0===m||0===m)&&(m=60),// otherwise it won't work in some browsers and systems
// reference: https://stackoverflow.com/questions/64473278/gif-frame-duration-seems-slower-than-expected
f=// calculate frame delay based on frameRate
// this delay has nothing to do with the
// delay in options, but rather is the delay
// we have to specify to the gif encoder between frames.
(f=1/m*1e3)<20?20:f,b=// that duration translates to
(h="seconds"===l?n*m:n)+(y="seconds"===l?a*m:a),x=y,this.frameCount=x,j=this._pixelDensity,this.pixelDensity(1),w=[],null!==document.getElementById(d)&&document.getElementById(d).remove(),c||((_=this.createP("")).id(d),_.style("font-size","16px"),_.style("font-family","Montserrat"),_.style("background-color","#ffffffa0"),_.style("padding","8px"),_.style("border-radius","10px"),_.position(0,0)),this._renderer instanceof s.default.RendererGL&&(// if we have a WEBGL context, initialize the pixels array
// and the gl context to use them inside the loop
E=this.drawingContext,S=new Uint8Array(E.drawingBufferWidth*E.drawingBufferHeight*4)),this.noLoop(),// rest of `setup` to be called (and, importantly, canvases hidden in setup
// to be unhidden.)
//
// Waiting on this empty promise means we'll continue as soon as setup
// finishes without waiting for another frame.
t.next=39,Promise.resolve();case 39:if(!(x<b)){t.next=50;break}/*
              we draw the next frame. this is important, since
              busy sketches or low end devices might take longer
              to render some frames. So we just wait for the frame
              to be drawn and immediately save it to a buffer and continue
            */return this.redraw(),// or another
T=void 0,this._renderer instanceof s.default.RendererGL?(S=new Uint8Array(E.drawingBufferWidth*E.drawingBufferHeight*4),E.readPixels(0,0,E.drawingBufferWidth,E.drawingBufferHeight,E.RGBA,E.UNSIGNED_BYTE,S),T=g(S)):T=this.drawingContext.getImageData(0,0,this.width,this.height).data,w.push(T),x++,c||_.html("Saved frame <b>"+w.length.toString()+"</b> out of "+h.toString()),t.next=48,new Promise(function(t){return setTimeout(t,0)});case 48:t.next=39;break;case 50:c||_.html("Frames processed, generating color palette..."),this.loop(),this.pixelDensity(j),M=(0,p.GIFEncoder)(),C=v(w),// own function to map frame pixels to a palette color. This way, we can
// cache palette color mappings between frames for extra performance, and
// use our own caching mechanism to avoid flickering colors from cache
// key collisions.
O={},N=function(t){for(var r=t.length/4,n=new Uint8Array(r),o=0;o<r;o++){var a=t[4*o]<<24|t[4*o+1]<<16|t[4*o+2]<<8|t[4*o+3];void 0===O[a]&&(O[a]=(0,p.nearestColorIndex)(C,t.slice(4*o,(o+1)*4))),n[o]=O[a]}return n},A=C.length-1,R=[],L=0;case 60:if(!(L<w.length)){t.next=71;break}//const indexedFrame = applyPalette(frames[i], globalPaletteWithoutAlpha, 'rgba565');
if(// to use transparent pixels
P=(I=N(w[L])).slice(),0===L)M.writeFrame(I,this.width,this.height,{palette:C,delay:f,dispose:1});else{// Matching pixels between frames can be set to full transparency,
// allowing the previous frame's pixels to show through. We only do
// this for pixels that get mapped to the same quantized color so that
// the resulting image would be the same.
for(D=0;D<I.length;D++)I[D]===R[D]&&(I[D]=A);// Write frame into the encoder
M.writeFrame(I,this.width,this.height,{delay:f,transparent:!0,transparentIndex:A,dispose:1})}return R=P,c||_.html("Rendered frame <b>"+L.toString()+"</b> out of "+h.toString()),// this just makes the process asynchronous, preventing
// that the encoding locks up the browser
t.next=68,new Promise(function(t){return setTimeout(t,0)});case 68:L++,t.next=60;break;case 71:M.finish(),F=M.bytesView(),U="gif",B=new Blob([F],{type:"image/gif"}),w=[],this._recording=!1,this.loop(),!c&&(_.html("Done. Downloading your gif!\uD83C\uDF38"),u>0&&setTimeout(function(){return _.remove()},1e3*u)),s.default.prototype.downloadFile(B,r,U);case 80:case"end":return t.stop()}},t,this)}));return function(r,n){return t.apply(this,arguments)}}(),/**
 * @method image
 * @param  {p5.Image|p5.Element|p5.Texture|p5.Framebuffer|p5.FramebufferTexture} img
 * @param  {Number}   dx     the x-coordinate of the destination
 *                           rectangle in which to draw the source image
 * @param  {Number}   dy     the y-coordinate of the destination
 *                           rectangle in which to draw the source image
 * @param  {Number}   dWidth  the width of the destination rectangle
 * @param  {Number}   dHeight the height of the destination rectangle
 * @param  {Number}   sx     the x-coordinate of the subsection of the source
 * image to draw into the destination rectangle
 * @param  {Number}   sy     the y-coordinate of the subsection of the source
 * image to draw into the destination rectangle
 * @param {Number}    [sWidth] the width of the subsection of the
 *                           source image to draw into the destination
 *                           rectangle
 * @param {Number}    [sHeight] the height of the subsection of the
 *                            source image to draw into the destination rectangle
 * @param {Constant} [fit] either CONTAIN or COVER
 * @param {Constant} [xAlign] either LEFT, RIGHT or CENTER default is CENTER
 * @param {Constant} [yAlign] either TOP, BOTTOM or CENTER default is CENTER
 */s.default.prototype.image=function(t,r,n,o,a,u,p,d,m,f,h,y){// set defaults per spec: https://goo.gl/3ykfOq
s.default._validateParameters("image",arguments);var g=t.width,v=t.height;y=y||c.CENTER,h=h||c.CENTER,t.elt&&t.elt.videoWidth&&!t.canvas&&(// video no canvas
g=t.elt.videoWidth,v=t.elt.videoHeight);var b=r,x=n,j=o||g,S=a||v,E=u||0,T=p||0,M=d||g,C=m||v;M=_(M,g),C=_(C,v);// see issues https://github.com/processing/p5.js/issues/1741
// and https://github.com/processing/p5.js/issues/1673
var O=1;t.elt&&!t.canvas&&t.elt.style.width&&(O=(t.elt.videoWidth&&!o?t.elt.videoWidth:t.elt.width)/parseInt(t.elt.style.width,10)),E*=O,T*=O,C*=O,M*=O;var N=l.default.modeAdjust(b,x,j,S,this._renderer._imageMode);N=w(f,h,y,N.x,N.y,N.w,N.h,E,T,M,C),this._renderer.image(t,N.sx,N.sy,N.sw,N.sh,N.dx,N.dy,N.dw,N.dh)},/**
 * Sets the fill value for displaying images. Images can be tinted to
 * specified colors or made transparent by including an alpha value.
 *
 * To apply transparency to an image without affecting its color, use
 * white as the tint color and specify an alpha value. For instance,
 * tint(255, 128) will make an image 50% transparent (assuming the default
 * alpha range of 0-255, which can be changed with <a href="#/p5/colorMode">colorMode()</a>).
 *
 * The value for the gray parameter must be less than or equal to the current
 * maximum value as specified by <a href="#/p5/colorMode">colorMode()</a>. The default maximum value is
 * 255.
 *
 * @method tint
 * @param  {Number}        v1      red or hue value relative to
 *                                 the current color range
 * @param  {Number}        v2      green or saturation value
 *                                 relative to the current color range
 * @param  {Number}        v3      blue or brightness value
 *                                 relative to the current color range
 * @param  {Number}        [alpha]
 *
 * @example
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/laDefense.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 *   tint(0, 153, 204); // Tint blue
 *   image(img, 50, 0);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/laDefense.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 *   tint(0, 153, 204, 126); // Tint blue and set transparency
 *   image(img, 50, 0);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/laDefense.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 *   tint(255, 126); // Apply transparency without changing color
 *   image(img, 50, 0);
 * }
 * </code>
 * </div>
 *
 * @alt
 * 2 side by side images of umbrella and ceiling, one image with blue tint
 * Images of umbrella and ceiling, one half of image with blue tint
 * 2 side by side images of umbrella and ceiling, one image translucent
 *//**
 * @method tint
 * @param  {String}        value   a color string
 *//**
 * @method tint
 * @param  {Number}        gray   a gray value
 * @param  {Number}        [alpha]
 *//**
 * @method tint
 * @param  {Number[]}      values  an array containing the red,green,blue &
 *                                 and alpha components of the color
 *//**
 * @method tint
 * @param  {p5.Color}      color   the tint color
 */s.default.prototype.tint=function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];s.default._validateParameters("tint",r);var o=this.color.apply(this,r);this._renderer._tint=o.levels},/**
 * Removes the current fill value for displaying images and reverts to
 * displaying images with their original hues.
 *
 * @method noTint
 * @example
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/bricks.jpg');
 * }
 * function setup() {
 *   tint(0, 153, 204); // Tint blue
 *   image(img, 0, 0);
 *   noTint(); // Disable tint
 *   image(img, 50, 0);
 * }
 * </code>
 * </div>
 *
 * @alt
 * 2 side by side images of bricks, left image with blue tint
 */s.default.prototype.noTint=function(){this._renderer._tint=null},/**
 * Apply the current tint color to the input image, return the resulting
 * canvas.
 *
 * @private
 * @param {p5.Image} The image to be tinted
 * @return {canvas} The resulting tinted canvas
 */s.default.prototype._getTintedImageCanvas=s.default.Renderer2D.prototype._getTintedImageCanvas,/**
 * Set image mode. Modifies the location from which images are drawn by
 * changing the way in which parameters given to <a href="#/p5/image">image()</a> are interpreted.
 * The default mode is imageMode(CORNER), which interprets the second and
 * third parameters of <a href="#/p5/image">image()</a> as the upper-left corner of the image. If
 * two additional parameters are specified, they are used to set the image's
 * width and height.
 *
 * imageMode(CORNERS) interprets the second and third parameters of <a href="#/p5/image">image()</a>
 * as the location of one corner, and the fourth and fifth parameters as the
 * opposite corner.
 *
 * imageMode(CENTER) interprets the second and third parameters of <a href="#/p5/image">image()</a>
 * as the image's center point. If two additional parameters are specified,
 * they are used to set the image's width and height.
 *
 * @method imageMode
 * @param {Constant} mode either CORNER, CORNERS, or CENTER
 * @example
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/bricks.jpg');
 * }
 * function setup() {
 *   imageMode(CORNER);
 *   image(img, 10, 10, 50, 50);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/bricks.jpg');
 * }
 * function setup() {
 *   imageMode(CORNERS);
 *   image(img, 10, 10, 90, 40);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/bricks.jpg');
 * }
 * function setup() {
 *   imageMode(CENTER);
 *   image(img, 50, 50, 80, 80);
 * }
 * </code>
 * </div>
 *
 * @alt
 * small square image of bricks
 * horizontal rectangle image of bricks
 * large square image of bricks
 */s.default.prototype.imageMode=function(t){s.default._validateParameters("imageMode",arguments),(t===c.CORNER||t===c.CORNERS||t===c.CENTER)&&(this._renderer._imageMode=t)};var S=s.default;n.default=S},{"../core/constants":284,"../core/friendly_errors/fes_core":287,"../core/friendly_errors/file_errors":288,"../core/friendly_errors/validate_params":291,"../core/helpers":292,"../core/main":296,"core-js/modules/es.array.copy-within":170,"core-js/modules/es.array.includes":176,"core-js/modules/es.array.index-of":177,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.slice":182,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.promise":199,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.includes":207,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.typed-array.copy-within":221,"core-js/modules/es.typed-array.every":222,"core-js/modules/es.typed-array.fill":223,"core-js/modules/es.typed-array.filter":224,"core-js/modules/es.typed-array.find":226,"core-js/modules/es.typed-array.find-index":225,"core-js/modules/es.typed-array.for-each":229,"core-js/modules/es.typed-array.includes":230,"core-js/modules/es.typed-array.index-of":231,"core-js/modules/es.typed-array.iterator":234,"core-js/modules/es.typed-array.join":235,"core-js/modules/es.typed-array.last-index-of":236,"core-js/modules/es.typed-array.map":237,"core-js/modules/es.typed-array.reduce":239,"core-js/modules/es.typed-array.reduce-right":238,"core-js/modules/es.typed-array.reverse":240,"core-js/modules/es.typed-array.set":241,"core-js/modules/es.typed-array.slice":242,"core-js/modules/es.typed-array.some":243,"core-js/modules/es.typed-array.sort":244,"core-js/modules/es.typed-array.subarray":245,"core-js/modules/es.typed-array.to-locale-string":246,"core-js/modules/es.typed-array.to-string":247,"core-js/modules/es.typed-array.uint8-array":250,"core-js/modules/es.typed-array.uint8-clamped-array":251,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254,gifenc:261,omggif:268,"regenerator-runtime/runtime":272}],320:[function(t,r,n){t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=s(t("../core/main")),a=s(t("./filters"));function s(t){return t&&t.__esModule?t:{default:t}}function l(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function c(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function u(t,r,n){return r&&c(t.prototype,r),n&&c(t,n),t}/*
 * Class methods
 *//**
 * Creates a new <a href="#/p5.Image">p5.Image</a>. A <a href="#/p5.Image">p5.Image</a> is a canvas backed representation of an
 * image.
 *
 * p5 can display .gif, .jpg and .png images. Images may be displayed
 * in 2D and 3D space. Before an image is used, it must be loaded with the
 * <a href="#/p5/loadImage">loadImage()</a> function. The <a href="#/p5.Image">p5.Image</a> class contains fields for the width and
 * height of the image, as well as an array called <a href="#/p5.Image/pixels">pixels[]</a> that contains the
 * values for every pixel in the image.
 *
 * The methods described below allow easy access to the image's pixels and
 * alpha channel and simplify the process of compositing.
 *
 * Before using the <a href="#/p5.Image/pixels">pixels[]</a> array, be sure to use the <a href="#/p5.Image/loadPixels">loadPixels()</a> method on
 * the image to make sure that the pixel data is properly loaded.
 * @example
 * <div><code>
 * function setup() {
 *   let img = createImage(100, 100); // same as new p5.Image(100, 100);
 *   img.loadPixels();
 *   createCanvas(100, 100);
 *   background(0);
 *
 *   // helper for writing color to array
 *   function writeColor(image, x, y, red, green, blue, alpha) {
 *     let index = (x + y * width) * 4;
 *     image.pixels[index] = red;
 *     image.pixels[index + 1] = green;
 *     image.pixels[index + 2] = blue;
 *     image.pixels[index + 3] = alpha;
 *   }
 *
 *   let x, y;
 *   // fill with random colors
 *   for (y = 0; y < img.height; y++) {
 *     for (x = 0; x < img.width; x++) {
 *       let red = random(255);
 *       let green = random(255);
 *       let blue = random(255);
 *       let alpha = 255;
 *       writeColor(img, x, y, red, green, blue, alpha);
 *     }
 *   }
 *
 *   // draw a red line
 *   y = 0;
 *   for (x = 0; x < img.width; x++) {
 *     writeColor(img, x, y, 255, 0, 0, 255);
 *   }
 *
 *   // draw a green line
 *   y = img.height - 1;
 *   for (x = 0; x < img.width; x++) {
 *     writeColor(img, x, y, 0, 255, 0, 255);
 *   }
 *
 *   img.updatePixels();
 *   image(img, 0, 0);
 * }
 * </code></div>
 *
 * @class p5.Image
 * @constructor
 * @param {Number} width
 * @param {Number} height
 */o.default.Image=/*#__PURE__*/function(){function t(r,n){l(this,t),/**
     * Image width.
     * @property {Number} width
     * @readOnly
     * @example
     * <div><code>
     * let img;
     * function preload() {
     *   img = loadImage('assets/rockies.jpg');
     * }
     *
     * function setup() {
     *   createCanvas(100, 100);
     *   image(img, 0, 0);
     *   for (let i = 0; i < img.width; i++) {
     *     let c = img.get(i, img.height / 2);
     *     stroke(c);
     *     line(i, height / 2, i, height);
     *   }
     * }
     * </code></div>
     *
     * @alt
     * rocky mountains in top and horizontal lines in corresponding colors in bottom.
     *
     */this.width=r,/**
     * Image height.
     * @property {Number} height
     * @readOnly
     * @example
     * <div><code>
     * let img;
     * function preload() {
     *   img = loadImage('assets/rockies.jpg');
     * }
     *
     * function setup() {
     *   createCanvas(100, 100);
     *   image(img, 0, 0);
     *   for (let i = 0; i < img.height; i++) {
     *     let c = img.get(img.width / 2, i);
     *     stroke(c);
     *     line(0, i, width / 2, i);
     *   }
     * }
     * </code></div>
     *
     * @alt
     * rocky mountains on right and vertical lines in corresponding colors on left.
     *
     */this.height=n,this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height,this.drawingContext=this.canvas.getContext("2d"),this._pixelsState=this,this._pixelDensity=1,this.gifProperties=null,this._modified=!1,/**
     * Array containing the values for all the pixels in the display window.
     * These values are numbers. This array is the size (include an appropriate
     * factor for pixelDensity) of the display window x4,
     * representing the R, G, B, A values in order for each pixel, moving from
     * left to right across each row, then down each column. Retina and other
     * high density displays may have more pixels (by a factor of
     * pixelDensity^2).
     * For example, if the image is 100×100 pixels, there will be 40,000. With
     * pixelDensity = 2, there will be 160,000. The first four values
     * (indices 0-3) in the array will be the R, G, B, A values of the pixel at
     * (0, 0). The second four values (indices 4-7) will contain the R, G, B, A
     * values of the pixel at (1, 0). More generally, to set values for a pixel
     * at (x, y):
     * ```javascript
     * let d = pixelDensity();
     * for (let i = 0; i < d; i++) {
     *   for (let j = 0; j < d; j++) {
     *     // loop over
     *     index = 4 * ((y * d + j) * width * d + (x * d + i));
     *     pixels[index] = r;
     *     pixels[index+1] = g;
     *     pixels[index+2] = b;
     *     pixels[index+3] = a;
     *   }
     * }
     * ```
     *
     * Before accessing this array, the data must loaded with the <a href="#/p5.Image/loadPixels">loadPixels()</a>
     * function. After the array data has been modified, the <a href="#/p5.Image/updatePixels">updatePixels()</a>
     * function must be run to update the changes.
     * @property {Number[]} pixels
     * @example
     * <div>
     * <code>
     * let img = createImage(66, 66);
     * img.loadPixels();
     * for (let i = 0; i < img.width; i++) {
     *   for (let j = 0; j < img.height; j++) {
     *     img.set(i, j, color(0, 90, 102));
     *   }
     * }
     * img.updatePixels();
     * image(img, 17, 17);
     * </code>
     * </div>
     * <div>
     * <code>
     * let pink = color(255, 102, 204);
     * let img = createImage(66, 66);
     * img.loadPixels();
     * for (let i = 0; i < 4 * (width * height / 2); i += 4) {
     *   img.pixels[i] = red(pink);
     *   img.pixels[i + 1] = green(pink);
     *   img.pixels[i + 2] = blue(pink);
     *   img.pixels[i + 3] = alpha(pink);
     * }
     * img.updatePixels();
     * image(img, 17, 17);
     * </code>
     * </div>
     *
     * @alt
     * 66×66 turquoise rect in center of canvas
     * 66×66 pink rect in center of canvas
     *
     */this.pixels=[]}/**
   * Helper function for animating GIF-based images with time
   */return u(t,[{key:"_animateGif",value:function(t){var r=this.gifProperties,n=t._lastRealFrameTime;if(0===r.lastChangeTime&&(r.lastChangeTime=n),r.playing){r.timeDisplayed=n-r.lastChangeTime;var o=r.frames[r.displayIndex].delay;if(r.timeDisplayed>=o){//GIF is bound to 'realtime' so can skip frames
var a=Math.floor(r.timeDisplayed/o);if(r.timeDisplayed=0,r.lastChangeTime=n,r.displayIndex+=a,r.loopCount=Math.floor(r.displayIndex/r.numFrames),null!==r.loopLimit&&r.loopCount>=r.loopLimit)r.playing=!1;else{var s=r.displayIndex%r.numFrames;this.drawingContext.putImageData(r.frames[s].image,0,0),r.displayIndex=s,this.setModified(!0)}}}}/**
     * Helper fxn for sharing pixel methods
     */},{key:"_setProperty",value:function(t,r){this[t]=r,this.setModified(!0)}/**
     * Loads the pixels data for this image into the [pixels] attribute.
     *
     * @method loadPixels
     * @example
     * <div><code>
     * let myImage;
     * let halfImage;
     *
     * function preload() {
     *   myImage = loadImage('assets/rockies.jpg');
     * }
     *
     * function setup() {
     *   myImage.loadPixels();
     *   halfImage = 4 * myImage.width * myImage.height / 2;
     *   for (let i = 0; i < halfImage; i++) {
     *     myImage.pixels[i + halfImage] = myImage.pixels[i];
     *   }
     *   myImage.updatePixels();
     * }
     *
     * function draw() {
     *   image(myImage, 0, 0, width, height);
     * }
     * </code></div>
     *
     * @alt
     * 2 images of rocky mountains vertically stacked
     */},{key:"loadPixels",value:function(){o.default.Renderer2D.prototype.loadPixels.call(this),this.setModified(!0)}/**
     * Updates the backing canvas for this image with the contents of
     * the [pixels] array.
     *
     * If this image is an animated GIF then the pixels will be updated
     * in the frame that is currently displayed.
     *
     * @method updatePixels
     * @param {Integer} x x-offset of the target update area for the
     *                              underlying canvas
     * @param {Integer} y y-offset of the target update area for the
     *                              underlying canvas
     * @param {Integer} w width of the target update area for the
     *                              underlying canvas
     * @param {Integer} h height of the target update area for the
     *                              underlying canvas
     * @example
     * <div><code>
     * let myImage;
     * let halfImage;
     *
     * function preload() {
     *   myImage = loadImage('assets/rockies.jpg');
     * }
     *
     * function setup() {
     *   myImage.loadPixels();
     *   halfImage = 4 * myImage.width * myImage.height / 2;
     *   for (let i = 0; i < halfImage; i++) {
     *     myImage.pixels[i + halfImage] = myImage.pixels[i];
     *   }
     *   myImage.updatePixels();
     * }
     *
     * function draw() {
     *   image(myImage, 0, 0, width, height);
     * }
     * </code></div>
     *
     * @alt
     * 2 images of rocky mountains vertically stacked
     */},{key:"updatePixels",value:function(t,r,n,a){o.default.Renderer2D.prototype.updatePixels.call(this,t,r,n,a),this.setModified(!0)}/**
     * Get a region of pixels from an image.
     *
     * If no params are passed, the whole image is returned.
     * If x and y are the only params passed a single pixel is extracted.
     * If all params are passed a rectangle region is extracted and a <a href="#/p5.Image">p5.Image</a>
     * is returned.
     *
     * @method get
     * @param  {Number}               x x-coordinate of the pixel
     * @param  {Number}               y y-coordinate of the pixel
     * @param  {Number}               w width
     * @param  {Number}               h height
     * @return {p5.Image}             the rectangle <a href="#/p5.Image">p5.Image</a>
     * @example
     * <div><code>
     * let myImage;
     * let c;
     *
     * function preload() {
     *   myImage = loadImage('assets/rockies.jpg');
     * }
     *
     * function setup() {
     *   background(myImage);
     *   noStroke();
     *   c = myImage.get(60, 90);
     *   fill(c);
     *   rect(25, 25, 50, 50);
     * }
     *
     * //get() returns color here
     * </code></div>
     *
     * @alt
     * image of rocky mountains with 50×50 green rect in front
     */},{key:"get",value:function(t,r,n,a){return o.default._validateParameters("p5.Image.get",arguments),o.default.Renderer2D.prototype.get.apply(this,arguments)}},{key:"_getPixel",value:function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return o.default.Renderer2D.prototype._getPixel.apply(this,r)}/**
     * Set the color of a single pixel or write an image into
     * this <a href="#/p5.Image">p5.Image</a>.
     *
     * Note that for a large number of pixels this will
     * be slower than directly manipulating the pixels array
     * and then calling <a href="#/p5.Image/updatePixels">updatePixels()</a>.
     *
     * @method set
     * @param {Number}              x x-coordinate of the pixel
     * @param {Number}              y y-coordinate of the pixel
     * @param {Number|Number[]|Object}   a grayscale value | pixel array |
     *                                a <a href="#/p5.Color">p5.Color</a> | image to copy
     * @example
     * <div>
     * <code>
     * let img = createImage(66, 66);
     * img.loadPixels();
     * for (let i = 0; i < img.width; i++) {
     *   for (let j = 0; j < img.height; j++) {
     *     img.set(i, j, color(0, 90, 102, (i % img.width) * 2));
     *   }
     * }
     * img.updatePixels();
     * image(img, 17, 17);
     * image(img, 34, 34);
     * </code>
     * </div>
     *
     * @alt
     * 2 gradated dark turquoise rects fade left. 1 center 1 bottom right of canvas
     */},{key:"set",value:function(t,r,n){o.default.Renderer2D.prototype.set.call(this,t,r,n),this.setModified(!0)}/**
     * Resize the image to a new width and height. To make the image scale
     * proportionally, use 0 as the value for the wide or high parameter.
     * For instance, to make the width of an image 150 pixels, and change
     * the height using the same proportion, use resize(150, 0).
     *
     * @method resize
     * @param {Number} width the resized image width
     * @param {Number} height the resized image height
     * @example
     * <div><code>
     * let img;
     *
     * function preload() {
     *   img = loadImage('assets/rockies.jpg');
     * }
      * function draw() {
     *   image(img, 0, 0);
     * }
     *
     * function mousePressed() {
     *   img.resize(50, 100);
     * }
     * </code></div>
     *
     * @alt
     * image of rocky mountains. zoomed in
     */},{key:"resize",value:function(t,r){0===t&&0===r?(t=this.canvas.width,r=this.canvas.height):0===t?t=this.canvas.width*r/this.canvas.height:0===r&&(r=this.canvas.height*t/this.canvas.width),t=Math.floor(t),r=Math.floor(r);var n=document.createElement("canvas");if(n.width=t,n.height=r,this.gifProperties)for(var o=this.gifProperties,a=function(t,r){for(var n=0,o=0;o<r.height;o++)for(var a=0;a<r.width;a++){var s=Math.floor(a*t.width/r.width),l=(Math.floor(o*t.height/r.height)*t.width+s)*4;r.data[n++]=t.data[l++],r.data[n++]=t.data[l++],r.data[n++]=t.data[l++],r.data[n++]=t.data[l++]}},s=0;s<o.numFrames;s++){var l=this.drawingContext.createImageData(t,r);a(o.frames[s].image,l),o.frames[s].image=l}n.getContext("2d").drawImage(this.canvas,0,0,this.canvas.width,this.canvas.height,0,0,n.width,n.height),this.canvas.width=this.width=t,this.canvas.height=this.height=r,this.drawingContext.drawImage(n,0,0,t,r,0,0,t,r),this.pixels.length>0&&this.loadPixels(),this.setModified(!0)}/**
     * Copies a region of pixels from one image to another. If no
     * srcImage is specified this is used as the source. If the source
     * and destination regions aren't the same size, it will
     * automatically resize source pixels to fit the specified
     * target region.
     *
     * @method copy
     * @param  {p5.Image|p5.Element} srcImage source image
     * @param  {Integer} sx X coordinate of the source's upper left corner
     * @param  {Integer} sy Y coordinate of the source's upper left corner
     * @param  {Integer} sw source image width
     * @param  {Integer} sh source image height
     * @param  {Integer} dx X coordinate of the destination's upper left corner
     * @param  {Integer} dy Y coordinate of the destination's upper left corner
     * @param  {Integer} dw destination image width
     * @param  {Integer} dh destination image height
     * @example
     * <div><code>
     * let photo;
     * let bricks;
     * let x;
     * let y;
     *
     * function preload() {
     *   photo = loadImage('assets/rockies.jpg');
     *   bricks = loadImage('assets/bricks.jpg');
     * }
     *
     * function setup() {
     *   x = bricks.width / 2;
     *   y = bricks.height / 2;
     *   photo.copy(bricks, 0, 0, x, y, 0, 0, x, y);
     *   image(photo, 0, 0);
     * }
     * </code></div>
     *
     * @alt
     * image of rocky mountains and smaller image on top of bricks at top left
     */},{key:"copy",value:function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];o.default.prototype.copy.apply(this,r)}/**
     * Masks part of an image from displaying by loading another
     * image and using its alpha channel as an alpha channel for
     * this image. Masks are cumulative, once applied to an image
     * object, they cannot be removed.
     *
     * @method mask
     * @param {p5.Image} srcImage source image
     * @example
     * <div><code>
     * let photo, maskImage;
     * function preload() {
     *   photo = loadImage('assets/rockies.jpg');
     *   maskImage = loadImage('assets/mask2.png');
     * }
     *
     * function setup() {
     *   createCanvas(100, 100);
     *   photo.mask(maskImage);
     *   image(photo, 0, 0);
     * }
     * </code></div>
     *
     * @alt
     * image of rocky mountains with white at right
     *
     * http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/
     */},{key:"mask",value:function(t){void 0===t&&(t=this);var r=this.drawingContext.globalCompositeOperation,n=1;t instanceof o.default.Renderer&&(n=t._pInst._pixelDensity);var a=[t,0,0,n*t.width,n*t.height,0,0,this.width,this.height];if(this.drawingContext.globalCompositeOperation="destination-in",this.gifProperties){for(var s=0;s<this.gifProperties.frames.length;s++)this.drawingContext.putImageData(this.gifProperties.frames[s].image,0,0),this.copy.apply(this,a),this.gifProperties.frames[s].image=this.drawingContext.getImageData(0,0,this.width,this.height);this.drawingContext.putImageData(this.gifProperties.frames[this.gifProperties.displayIndex].image,0,0)}else this.copy.apply(this,a);this.drawingContext.globalCompositeOperation=r,this.setModified(!0)}/**
     * Applies an image filter to a <a href="#/p5.Image">p5.Image</a>
     *
     * THRESHOLD
     * Converts the image to black and white pixels depending if they are above or
     * below the threshold defined by the level parameter. The parameter must be
     * between 0.0 (black) and 1.0 (white). If no level is specified, 0.5 is used.
     *
     * GRAY
     * Converts any colors in the image to grayscale equivalents. No parameter
     * is used.
     *
     * OPAQUE
     * Sets the alpha channel to entirely opaque. No parameter is used.
     *
     * INVERT
     * Sets each pixel to its inverse value. No parameter is used.
     *
     * POSTERIZE
     * Limits each channel of the image to the number of colors specified as the
     * parameter. The parameter can be set to values between 2 and 255, but
     * results are most noticeable in the lower ranges.
     *
     * BLUR
     * Executes a Gaussian blur with the level parameter specifying the extent
     * of the blurring. If no parameter is used, the blur is equivalent to
     * Gaussian blur of radius 1. Larger values increase the blur.
     *
     * ERODE
     * Reduces the light areas. No parameter is used.
     *
     * DILATE
     * Increases the light areas. No parameter is used.
     *
     * filter() does not work in WEBGL mode.
     * A similar effect can be achieved in WEBGL mode using custom
     * shaders. Adam Ferriss has written
     * a <a href="https://github.com/aferriss/p5jsShaderExamples"
     * target='_blank'>selection of shader examples</a> that contains many
     * of the effects present in the filter examples.
     *
     * @method filter
     * @param  {Constant} filterType  either THRESHOLD, GRAY, OPAQUE, INVERT,
     *                                POSTERIZE, ERODE, DILATE or BLUR.
     *                                See Filters.js for docs on
     *                                each available filter
     * @param  {Number} [filterParam] an optional parameter unique
     *                                to each filter, see above
     * @example
     * <div><code>
     * let photo1;
     * let photo2;
     *
     * function preload() {
     *   photo1 = loadImage('assets/rockies.jpg');
     *   photo2 = loadImage('assets/rockies.jpg');
     * }
     *
     * function setup() {
     *   photo2.filter(GRAY);
     *   image(photo1, 0, 0);
     *   image(photo2, width / 2, 0);
     * }
     * </code></div>
     *
     * @alt
     * 2 images of rocky mountains left one in color, right in black and white
     */},{key:"filter",value:function(t,r){a.default.apply(this.canvas,a.default[t],r),this.setModified(!0)}/**
     * Copies a region of pixels from one image to another, using a specified
     * blend mode to do the operation.
     *
     * @method blend
     * @param  {p5.Image} srcImage source image
     * @param  {Integer} sx X coordinate of the source's upper left corner
     * @param  {Integer} sy Y coordinate of the source's upper left corner
     * @param  {Integer} sw source image width
     * @param  {Integer} sh source image height
     * @param  {Integer} dx X coordinate of the destination's upper left corner
     * @param  {Integer} dy Y coordinate of the destination's upper left corner
     * @param  {Integer} dw destination image width
     * @param  {Integer} dh destination image height
     * @param  {Constant} blendMode the blend mode. either
     *     BLEND, DARKEST, LIGHTEST, DIFFERENCE,
     *     MULTIPLY, EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,
     *     SOFT_LIGHT, DODGE, BURN, ADD or NORMAL.
     *
     * Available blend modes are: normal | multiply | screen | overlay |
     *            darken | lighten | color-dodge | color-burn | hard-light |
     *            soft-light | difference | exclusion | hue | saturation |
     *            color | luminosity
     *
     * http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/
     * @example
     * <div><code>
     * let mountains;
     * let bricks;
     *
     * function preload() {
     *   mountains = loadImage('assets/rockies.jpg');
     *   bricks = loadImage('assets/bricks_third.jpg');
     * }
     *
     * function setup() {
     *   mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, ADD);
     *   image(mountains, 0, 0);
     *   image(bricks, 0, 0);
     * }
     * </code></div>
     * <div><code>
     * let mountains;
     * let bricks;
     *
     * function preload() {
     *   mountains = loadImage('assets/rockies.jpg');
     *   bricks = loadImage('assets/bricks_third.jpg');
     * }
     *
     * function setup() {
     *   mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, DARKEST);
     *   image(mountains, 0, 0);
     *   image(bricks, 0, 0);
     * }
     * </code></div>
     * <div><code>
     * let mountains;
     * let bricks;
     *
     * function preload() {
     *   mountains = loadImage('assets/rockies.jpg');
     *   bricks = loadImage('assets/bricks_third.jpg');
     * }
     *
     * function setup() {
     *   mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, LIGHTEST);
     *   image(mountains, 0, 0);
     *   image(bricks, 0, 0);
     * }
     * </code></div>
     *
     * @alt
     * image of rocky mountains. Brick images on left and right. Right overexposed
     * image of rockies. Brickwall images on left and right. Right mortar transparent
     * image of rockies. Brickwall images on left and right. Right translucent
     */},{key:"blend",value:function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];o.default._validateParameters("p5.Image.blend",arguments),o.default.prototype.blend.apply(this,r),this.setModified(!0)}/**
     * helper method for web GL mode to indicate that an image has been
     * changed or unchanged since last upload. gl texture upload will
     * set this value to false after uploading the texture.
     * @method setModified
     * @param {boolean} val sets whether or not the image has been
     * modified.
     * @private
     */},{key:"setModified",value:function(t){this._modified=t;//enforce boolean?
}/**
     * helper method for web GL mode to figure out if the image
     * has been modified and might need to be re-uploaded to texture
     * memory between frames.
     * @method isModified
     * @private
     * @return {boolean} a boolean indicating whether or not the
     * image has been updated or modified since last texture upload.
     */},{key:"isModified",value:function(){return this._modified}/**
     * Saves the image to a file and force the browser to download it.
     * Accepts two strings for filename and file extension
     * Supports png (default), jpg, and gif
     *<br><br>
     * Note that the file will only be downloaded as an animated GIF
     * if the p5.Image was loaded from a GIF file.
     * @method save
     * @param {String} filename give your file a name
     * @param  {String} extension 'png' or 'jpg'
     * @example
     * <div><code>
     * let photo;
     *
     * function preload() {
     *   photo = loadImage('assets/rockies.jpg');
     * }
     *
     * function draw() {
     *   image(photo, 0, 0);
     * }
     *
     * function keyTyped() {
     *   if (key === 's') {
     *     photo.save('photo', 'png');
     *   }
     * }
     * </code></div>
     *
     * @alt
     * image of rocky mountains.
     */},{key:"save",value:function(t,r){this.gifProperties?o.default.prototype.encodeAndDownloadGif(this,t):o.default.prototype.saveCanvas(this.canvas,t,r)}// GIF Section
},{key:"reset",value:function(){if(this.gifProperties){var t=this.gifProperties;t.playing=!0,t.timeSinceStart=0,t.timeDisplayed=0,t.lastChangeTime=0,t.loopCount=0,t.displayIndex=0,this.drawingContext.putImageData(t.frames[0].image,0,0)}}/**
     * Gets the index for the frame that is currently visible in an animated GIF.
     *
     * @method getCurrentFrame
     * @return {Number}       The index for the currently displaying frame in animated GIF
     * @example
     * <div><code>
     * let gif;
     *
     * function preload() {
     *   gif = loadImage('assets/arnott-wallace-eye-loop-forever.gif');
     * }
     *
     * function draw() {
     *   let frame = gif.getCurrentFrame();
     *   image(gif, 0, 0);
     *   text(frame, 10, 90);
     * }
     * </code></div>
     * @alt
     * Animated image of a cartoon eye looking around and then
     * looking outwards, in the lower-left hand corner a number counts
     * up quickly to 124 and then starts back over at 0
     */},{key:"getCurrentFrame",value:function(){if(this.gifProperties){var t=this.gifProperties;return t.displayIndex%t.numFrames}}/**
     * Sets the index of the frame that is currently visible in an animated GIF
     *
     * @method setFrame
     * @param {Number}       index the index for the frame that should be displayed
     * @example
     * <div><code>
     * let gif;
     *
     * function preload() {
     *   gif = loadImage('assets/arnott-wallace-eye-loop-forever.gif');
     * }
     *
     * // Move your mouse up and down over canvas to see the GIF
     * // frames animate
     * function draw() {
     *   gif.pause();
     *   image(gif, 0, 0);
     *   // Get the highest frame number which is the number of frames - 1
     *   let maxFrame = gif.numFrames() - 1;
     *   // Set the current frame that is mapped to be relative to mouse position
     *   let frameNumber = floor(map(mouseY, 0, height, 0, maxFrame, true));
     *   gif.setFrame(frameNumber);
     * }
     * </code></div>
     * @alt
     * A still image of a cartoon eye that looks around when you move your mouse
     * up and down over the canvas
     */},{key:"setFrame",value:function(t){if(this.gifProperties){var r=this.gifProperties;t<r.numFrames&&t>=0?(r.timeDisplayed=0,r.lastChangeTime=0,r.displayIndex=t,this.drawingContext.putImageData(r.frames[t].image,0,0)):console.log("Cannot set GIF to a frame number that is higher than total number of frames or below zero.")}}/**
     * Returns the number of frames in an animated GIF
     *
     * @method numFrames
     * @return {Number}
     * @example     The number of frames in the animated GIF
     * <div><code>
     * let gif;
     *
     * function preload() {
     *   gif = loadImage('assets/arnott-wallace-eye-loop-forever.gif');
     * }
     *
     * // Move your mouse up and down over canvas to see the GIF
     * // frames animate
     * function draw() {
     *   gif.pause();
     *   image(gif, 0, 0);
     *   // Get the highest frame number which is the number of frames - 1
     *   let maxFrame = gif.numFrames() - 1;
     *   // Set the current frame that is mapped to be relative to mouse position
     *   let frameNumber = floor(map(mouseY, 0, height, 0, maxFrame, true));
     *   gif.setFrame(frameNumber);
     * }
     * </code></div>
     * @alt
     * A still image of a cartoon eye that looks around when you move your mouse
     * up and down over the canvas
     */},{key:"numFrames",value:function(){if(this.gifProperties)return this.gifProperties.numFrames}/**
     * Plays an animated GIF that was paused with
     * <a href="#/p5.Image/pause">pause()</a>
     *
     * @method play
     * @example
     * <div><code>
     * let gif;
     *
     * function preload() {
     *   gif = loadImage('assets/nancy-liang-wind-loop-forever.gif');
     * }
     *
     * function draw() {
     *   background(255);
     *   image(gif, 0, 0);
     * }
     *
     * function mousePressed() {
     *   gif.pause();
     * }
     *
     * function mouseReleased() {
     *   gif.play();
     * }
     * </code></div>
     * @alt
     * An animated GIF of a drawing of small child with
     * hair blowing in the wind, when you click the image
     * freezes when you release it animates again
     */},{key:"play",value:function(){this.gifProperties&&(this.gifProperties.playing=!0)}/**
     * Pauses an animated GIF.
     *
     * @method pause
     * @example
     * <div><code>
     * let gif;
     *
     * function preload() {
     *   gif = loadImage('assets/nancy-liang-wind-loop-forever.gif');
     * }
     *
     * function draw() {
     *   background(255);
     *   image(gif, 0, 0);
     * }
     *
     * function mousePressed() {
     *   gif.pause();
     * }
     *
     * function mouseReleased() {
     *   gif.play();
     * }
     * </code></div>
     * @alt
     * An animated GIF of a drawing of small child with
     * hair blowing in the wind, when you click the image
     * freezes when you release it animates again
     */},{key:"pause",value:function(){this.gifProperties&&(this.gifProperties.playing=!1)}/**
     * Changes the delay between frames in an animated GIF. There is an optional second parameter that
     * indicates an index for a specific frame that should have its delay modified. If no index is given, all frames
     * will have the new delay.
     *
     * @method delay
     * @param {Number}    d the amount in milliseconds to delay between switching frames
     * @param {Number}    [index] the index of the frame that should have the new delay value {optional}
     * @example
     * <div><code>
     * let gifFast, gifSlow;
     *
     * function preload() {
     *   gifFast = loadImage('assets/arnott-wallace-eye-loop-forever.gif');
     *   gifSlow = loadImage('assets/arnott-wallace-eye-loop-forever.gif');
     * }
     *
     * function setup() {
     *   gifFast.resize(width / 2, height / 2);
     *   gifSlow.resize(width / 2, height / 2);
     *
     *   //Change the delay here
     *   gifFast.delay(10);
     *   gifSlow.delay(100);
     * }
     *
     * function draw() {
     *   background(255);
     *   image(gifFast, 0, 0);
     *   image(gifSlow, width / 2, 0);
     * }
     * </code></div>
     * @alt
     * Two animated gifs of cartoon eyes looking around
     * The gif on the left animates quickly, on the right
     * the animation is much slower
     */},{key:"delay",value:function(t,r){if(this.gifProperties){var n=this.gifProperties;if(r<n.numFrames&&r>=0)n.frames[r].delay=t;else{// change all frames
var o=!0,a=!1,s=void 0;try{for(var l,c=n.frames[Symbol.iterator]();!(o=(l=c.next()).done);o=!0)l.value.delay=t}catch(t){a=!0,s=t}finally{try{o||null==c.return||c.return()}finally{if(a)throw s}}}}}}]),t}();var p=o.default.Image;n.default=p},{"../core/main":296,"./filters":317,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/web.dom-collections.iterator":254}],321:[function(t,r,n){t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.filter"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=s(t("../core/main")),a=s(t("./filters"));function s(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Image
 * @submodule Pixels
 * @for p5
 * @requires core
 */t("../color/p5.Color"),/**
 * <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference
 * /Global_Objects/Uint8ClampedArray' target='_blank'>Uint8ClampedArray</a>
 * containing the values for all the pixels in the display window.
 * These values are numbers. This array is the size (include an appropriate
 * factor for <a href="#/p5/pixelDensity">pixelDensity</a>) of the display window x4,
 * representing the R, G, B, A values in order for each pixel, moving from
 * left to right across each row, then down each column. Retina and other
 * high density displays will have more pixels[] (by a factor of
 * pixelDensity^2).
 * For example, if the image is 100×100 pixels, there will be 40,000. On a
 * retina display, there will be 160,000.
 *
 * The first four values (indices 0-3) in the array will be the R, G, B, A
 * values of the pixel at (0, 0). The second four values (indices 4-7) will
 * contain the R, G, B, A values of the pixel at (1, 0). More generally, to
 * set values for a pixel at (x, y):
 * ```javascript
 * let d = pixelDensity();
 * for (let i = 0; i < d; i++) {
 *   for (let j = 0; j < d; j++) {
 *     // loop over
 *     index = 4 * ((y * d + j) * width * d + (x * d + i));
 *     pixels[index] = r;
 *     pixels[index+1] = g;
 *     pixels[index+2] = b;
 *     pixels[index+3] = a;
 *   }
 * }
 * ```
 * While the above method is complex, it is flexible enough to work with
 * any pixelDensity. Note that <a href="#/p5/set">set()</a> will automatically take care of
 * setting all the appropriate values in <a href="#/p5/pixels">pixels[]</a> for a given (x, y) at
 * any pixelDensity, but the performance may not be as fast when lots of
 * modifications are made to the pixel array.
 *
 * Before accessing this array, the data must loaded with the <a href="#/p5/loadPixels">loadPixels()</a>
 * function. After the array data has been modified, the <a href="#/p5/updatePixels">updatePixels()</a>
 * function must be run to update the changes.
 *
 * Note that this is not a standard javascript array.  This means that
 * standard javascript functions such as <a href="#/p5/slice">slice()</a> or
 * <a href="#/p5/arrayCopy">arrayCopy()</a> do not
 * work.
 *
 * @property {Number[]} pixels
 * @example
 * <div>
 * <code>
 * let pink = color(255, 102, 204);
 * loadPixels();
 * let d = pixelDensity();
 * let halfImage = 4 * (width * d) * (height / 2 * d);
 * for (let i = 0; i < halfImage; i += 4) {
 *   pixels[i] = red(pink);
 *   pixels[i + 1] = green(pink);
 *   pixels[i + 2] = blue(pink);
 *   pixels[i + 3] = alpha(pink);
 * }
 * updatePixels();
 * </code>
 * </div>
 *
 * @alt
 * top half of canvas pink, bottom grey
 */o.default.prototype.pixels=[],/**
 * Copies a region of pixels from one image to another, using a specified
 * blend mode to do the operation.
 *
 * @method blend
 * @param  {p5.Image} srcImage source image
 * @param  {Integer} sx X coordinate of the source's upper left corner
 * @param  {Integer} sy Y coordinate of the source's upper left corner
 * @param  {Integer} sw source image width
 * @param  {Integer} sh source image height
 * @param  {Integer} dx X coordinate of the destination's upper left corner
 * @param  {Integer} dy Y coordinate of the destination's upper left corner
 * @param  {Integer} dw destination image width
 * @param  {Integer} dh destination image height
 * @param  {Constant} blendMode the blend mode. either
 *     BLEND, DARKEST, LIGHTEST, DIFFERENCE,
 *     MULTIPLY, EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,
 *     SOFT_LIGHT, DODGE, BURN, ADD or NORMAL.
 *
 * @example
 * <div><code>
 * let img0;
 * let img1;
 *
 * function preload() {
 *   img0 = loadImage('assets/rockies.jpg');
 *   img1 = loadImage('assets/bricks_third.jpg');
 * }
 *
 * function setup() {
 *   background(img0);
 *   image(img1, 0, 0);
 *   blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, LIGHTEST);
 * }
 * </code></div>
 * <div><code>
 * let img0;
 * let img1;
 *
 * function preload() {
 *   img0 = loadImage('assets/rockies.jpg');
 *   img1 = loadImage('assets/bricks_third.jpg');
 * }
 *
 * function setup() {
 *   background(img0);
 *   image(img1, 0, 0);
 *   blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, DARKEST);
 * }
 * </code></div>
 * <div><code>
 * let img0;
 * let img1;
 *
 * function preload() {
 *   img0 = loadImage('assets/rockies.jpg');
 *   img1 = loadImage('assets/bricks_third.jpg');
 * }
 *
 * function setup() {
 *   background(img0);
 *   image(img1, 0, 0);
 *   blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, ADD);
 * }
 * </code></div>
 *
 * @alt
 * image of rocky mountains. Brick images on left and right. Right overexposed
 * image of rockies. Brickwall images on left and right. Right mortar transparent
 * image of rockies. Brickwall images on left and right. Right translucent
 *
 *//**
 * @method blend
 * @param  {Integer} sx
 * @param  {Integer} sy
 * @param  {Integer} sw
 * @param  {Integer} sh
 * @param  {Integer} dx
 * @param  {Integer} dy
 * @param  {Integer} dw
 * @param  {Integer} dh
 * @param  {Constant} blendMode
 */o.default.prototype.blend=function(){for(var t,r=arguments.length,n=Array(r),a=0;a<r;a++)n[a]=arguments[a];o.default._validateParameters("blend",n),this._renderer?(t=this._renderer).blend.apply(t,n):o.default.Renderer2D.prototype.blend.apply(this,n)},/**
 * Copies a region of the canvas to another region of the canvas
 * and copies a region of pixels from an image used as the srcImg parameter
 * into the canvas srcImage is specified this is used as the source. If
 * the source and destination regions aren't the same size, it will
 * automatically resize source pixels to fit the specified
 * target region.
 *
 * @method copy
 * @param  {p5.Image|p5.Element} srcImage source image
 * @param  {Integer} sx X coordinate of the source's upper left corner
 * @param  {Integer} sy Y coordinate of the source's upper left corner
 * @param  {Integer} sw source image width
 * @param  {Integer} sh source image height
 * @param  {Integer} dx X coordinate of the destination's upper left corner
 * @param  {Integer} dy Y coordinate of the destination's upper left corner
 * @param  {Integer} dw destination image width
 * @param  {Integer} dh destination image height
 *
 * @example
 * <div><code>
 * let img;
 *
 * function preload() {
 *   img = loadImage('assets/rockies.jpg');
 * }
 *
 * function setup() {
 *   background(img);
 *   copy(img, 7, 22, 10, 10, 35, 25, 50, 50);
 *   stroke(255);
 *   noFill();
 *   // Rectangle shows area being copied
 *   rect(7, 22, 10, 10);
 * }
 * </code></div>
 *
 * @alt
 * image of rocky mountains. Brick images on left and right. Right overexposed
 * image of rockies. Brickwall images on left and right. Right mortar transparent
 * image of rockies. Brickwall images on left and right. Right translucent
 *//**
 * @method copy
 * @param  {Integer} sx
 * @param  {Integer} sy
 * @param  {Integer} sw
 * @param  {Integer} sh
 * @param  {Integer} dx
 * @param  {Integer} dy
 * @param  {Integer} dw
 * @param  {Integer} dh
 */o.default.prototype.copy=function(){for(var t,r,n,a,s,l,c,u,p,d=arguments.length,m=Array(d),f=0;f<d;f++)m[f]=arguments[f];if(o.default._validateParameters("copy",m),9===m.length)t=m[0],r=m[1],n=m[2],a=m[3],s=m[4],l=m[5],c=m[6],u=m[7],p=m[8];else if(8===m.length)t=this,r=m[0],n=m[1],a=m[2],s=m[3],l=m[4],c=m[5],u=m[6],p=m[7];else throw Error("Signature not supported");o.default.prototype._copyHelper(this,t,r,n,a,s,l,c,u,p)},o.default.prototype._copyHelper=function(t,r,n,a,s,l,c,u,p,d){r.loadPixels();var m=r.canvas.width/r.width,f=0,h=0;// adjust coord system for 3D when renderer
r._renderer&&r._renderer.isP3D&&(f=r.width/2,h=r.height/2),t._renderer&&t._renderer.isP3D?o.default.RendererGL.prototype.image.call(t._renderer,r,n+f,a+h,s,l,c,u,p,d):t.drawingContext.drawImage(r.canvas,m*(n+f),m*(a+h),m*s,m*l,c,u,p,d)},/**
 * Applies a filter to the canvas. The presets options are:
 *
 * THRESHOLD
 * Converts the image to black and white pixels depending if they are above or
 * below the threshold defined by the level parameter. The parameter must be
 * between 0.0 (black) and 1.0 (white). If no level is specified, 0.5 is used.
 *
 * GRAY
 * Converts any colors in the image to grayscale equivalents. No parameter
 * is used.
 *
 * OPAQUE
 * Sets the alpha channel to entirely opaque. No parameter is used.
 *
 * INVERT
 * Sets each pixel to its inverse value. No parameter is used.
 *
 * POSTERIZE
 * Limits each channel of the image to the number of colors specified as the
 * parameter. The parameter can be set to values between 2 and 255, but
 * results are most noticeable in the lower ranges.
 *
 * BLUR
 * Executes a Gaussian blur with the level parameter specifying the extent
 * of the blurring. If no parameter is used, the blur is equivalent to
 * Gaussian blur of radius 1. Larger values increase the blur.
 *
 * ERODE
 * Reduces the light areas. No parameter is used.
 *
 * DILATE
 * Increases the light areas. No parameter is used.
 *
 * filter() does not work in WEBGL mode.
 * A similar effect can be achieved in WEBGL mode using custom
 * shaders. Adam Ferriss has written
 * a <a href="https://github.com/aferriss/p5jsShaderExamples"
 * target='_blank'>selection of shader examples</a> that contains many
 * of the effects present in the filter examples.
 *
 * @method filter
 * @param  {Constant} filterType  either THRESHOLD, GRAY, OPAQUE, INVERT,
 *                                POSTERIZE, BLUR, ERODE, DILATE or BLUR.
 *                                See Filters.js for docs on
 *                                each available filter
 * @param  {Number} [filterParam] an optional parameter unique
 *                                to each filter, see above
 *
 * @example
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/bricks.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 *   filter(THRESHOLD);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/bricks.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 *   filter(GRAY);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/bricks.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 *   filter(OPAQUE);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/bricks.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 *   filter(INVERT);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/bricks.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 *   filter(POSTERIZE, 3);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/bricks.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 *   filter(DILATE);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/bricks.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 *   filter(BLUR, 3);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/bricks.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 *   filter(ERODE);
 * }
 * </code>
 * </div>
 *
 * @alt
 * black and white image of a brick wall.
 * greyscale image of a brickwall
 * image of a brickwall
 * jade colored image of a brickwall
 * red and pink image of a brickwall
 * image of a brickwall
 * blurry image of a brickwall
 * image of a brickwall
 * image of a brickwall with less detail
 */o.default.prototype.filter=function(t,r){o.default._validateParameters("filter",arguments),void 0!==this.canvas?a.default.apply(this.canvas,a.default[t],r):a.default.apply(this.elt,a.default[t],r)},/**
 * Get a region of pixels, or a single pixel, from the canvas.
 *
 * Returns an array of [R,G,B,A] values for any pixel or grabs a section of
 * an image. If no parameters are specified, the entire image is returned.
 * Use the x and y parameters to get the value of one pixel. Get a section of
 * the display window by specifying additional w and h parameters. When
 * getting an image, the x and y parameters define the coordinates for the
 * upper-left corner of the image, regardless of the current <a href="#/p5/imageMode">imageMode()</a>.
 *
 * Getting the color of a single pixel with get(x, y) is easy, but not as fast
 * as grabbing the data directly from <a href="#/p5/pixels">pixels[]</a>. The equivalent statement to
 * get(x, y) using <a href="#/p5/pixels">pixels[]</a> with pixel density d is
 * ```javascript
 * let x, y, d; // set these to the coordinates
 * let off = (y * width + x) * d * 4;
 * let components = [
 *   pixels[off],
 *   pixels[off + 1],
 *   pixels[off + 2],
 *   pixels[off + 3]
 * ];
 * print(components);
 * ```
 * See the reference for <a href="#/p5/pixels">pixels[]</a> for more information.
 *
 * If you want to extract an array of colors or a subimage from an p5.Image object,
 * take a look at <a href="#/p5.Image/get">p5.Image.get()</a>
 *
 * @method get
 * @param  {Number}         x x-coordinate of the pixel
 * @param  {Number}         y y-coordinate of the pixel
 * @param  {Number}         w width of the section to be returned
 * @param  {Number}         h height of the section to be returned
 * @return {p5.Image}       the rectangle <a href="#/p5.Image">p5.Image</a>
 * @example
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/rockies.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 *   let c = get();
 *   image(c, width / 2, 0);
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/rockies.jpg');
 * }
 * function setup() {
 *   image(img, 0, 0);
 *   let c = get(50, 90);
 *   fill(c);
 *   noStroke();
 *   rect(25, 25, 50, 50);
 * }
 * </code>
 * </div>
 *
 * @alt
 * 2 images of the rocky mountains, side-by-side
 * Image of the rocky mountains with 50×50 green rect in center of canvas
 *//**
 * @method get
 * @return {p5.Image}      the whole <a href="#/p5.Image">p5.Image</a>
 *//**
 * @method get
 * @param  {Number}        x
 * @param  {Number}        y
 * @return {Number[]}      color of pixel at x,y in array format [R, G, B, A]
 */o.default.prototype.get=function(t,r,n,a){var s;return o.default._validateParameters("get",arguments),(s=this._renderer).get.apply(s,arguments)},/**
 * Loads the pixel data for the display window into the <a href="#/p5/pixels">pixels[]</a> array. This
 * function must always be called before reading from or writing to <a href="#/p5/pixels">pixels[]</a>.
 * Note that only changes made with <a href="#/p5/set">set()</a> or direct manipulation of <a href="#/p5/pixels">pixels[]</a>
 * will occur.
 *
 * @method loadPixels
 * @example
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/rockies.jpg');
 * }
 *
 * function setup() {
 *   image(img, 0, 0, width, height);
 *   let d = pixelDensity();
 *   let halfImage = 4 * (width * d) * (height * d / 2);
 *   loadPixels();
 *   for (let i = 0; i < halfImage; i++) {
 *     pixels[i + halfImage] = pixels[i];
 *   }
 *   updatePixels();
 * }
 * </code>
 * </div>
 *
 * @alt
 * two images of the rocky mountains. one on top, one on bottom of canvas.
 */o.default.prototype.loadPixels=function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];o.default._validateParameters("loadPixels",r),this._renderer.loadPixels()},/**
 * Changes the color of any pixel, or writes an image directly to the
 * display window.
 * The x and y parameters specify the pixel to change and the c parameter
 * specifies the color value. This can be a <a href="#/p5.Color">p5.Color</a> object, or [R, G, B, A]
 * pixel array. It can also be a single grayscale value.
 * When setting an image, the x and y parameters define the coordinates for
 * the upper-left corner of the image, regardless of the current <a href="#/p5/imageMode">imageMode()</a>.
 *
 * After using <a href="#/p5/set">set()</a>, you must call <a href="#/p5/updatePixels">updatePixels()</a> for your changes to appear.
 * This should be called once all pixels have been set, and must be called before
 * calling .<a href="#/p5/get">get()</a> or drawing the image.
 *
 * Setting the color of a single pixel with set(x, y) is easy, but not as
 * fast as putting the data directly into <a href="#/p5/pixels">pixels[]</a>. Setting the <a href="#/p5/pixels">pixels[]</a>
 * values directly may be complicated when working with a retina display,
 * but will perform better when lots of pixels need to be set directly on
 * every loop. See the reference for <a href="#/p5/pixels">pixels[]</a> for more information.
 *
 * @method set
 * @param {Number}              x x-coordinate of the pixel
 * @param {Number}              y y-coordinate of the pixel
 * @param {Number|Number[]|Object} c insert a grayscale value | a pixel array |
 *                                a <a href="#/p5.Color">p5.Color</a> object | a <a href="#/p5.Image">p5.Image</a> to copy
 * @example
 * <div>
 * <code>
 * let black = color(0);
 * set(30, 20, black);
 * set(85, 20, black);
 * set(85, 75, black);
 * set(30, 75, black);
 * updatePixels();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * for (let i = 30; i < width - 15; i++) {
 *   for (let j = 20; j < height - 25; j++) {
 *     let c = color(204 - j, 153 - i, 0);
 *     set(i, j, c);
 *   }
 * }
 * updatePixels();
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/rockies.jpg');
 * }
 *
 * function setup() {
 *   set(0, 0, img);
 *   updatePixels();
 *   line(0, 0, width, height);
 *   line(0, height, width, 0);
 * }
 * </code>
 * </div>
 *
 * @alt
 * 4 black points in the shape of a square middle-right of canvas.
 * square with orangey-brown gradient lightening at bottom right.
 * image of the rocky mountains. with lines like an 'x' through the center.
 */o.default.prototype.set=function(t,r,n){this._renderer.set(t,r,n)},/**
 * Updates the display window with the data in the <a href="#/p5/pixels">pixels[]</a> array.
 * Use in conjunction with <a href="#/p5/loadPixels">loadPixels()</a>. If you're only reading pixels from
 * the array, there's no need to call <a href="#/p5/updatePixels">updatePixels()</a> — updating is only
 * necessary to apply changes. <a href="#/p5/updatePixels">updatePixels()</a> should be called anytime the
 * pixels array is manipulated or <a href="#/p5/set">set()</a> is called, and only changes made with
 * <a href="#/p5/set">set()</a> or direct changes to <a href="#/p5/pixels">pixels[]</a> will occur.
 *
 * @method updatePixels
 * @param  {Number} [x]    x-coordinate of the upper-left corner of region
 *                         to update
 * @param  {Number} [y]    y-coordinate of the upper-left corner of region
 *                         to update
 * @param  {Number} [w]    width of region to update
 * @param  {Number} [h]    height of region to update
 * @example
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/rockies.jpg');
 * }
 *
 * function setup() {
 *   image(img, 0, 0, width, height);
 *   let d = pixelDensity();
 *   let halfImage = 4 * (width * d) * (height * d / 2);
 *   loadPixels();
 *   for (let i = 0; i < halfImage; i++) {
 *     pixels[i + halfImage] = pixels[i];
 *   }
 *   updatePixels();
 * }
 * </code>
 * </div>
 * @alt
 * two images of the rocky mountains. one on top, one on bottom of canvas.
 */o.default.prototype.updatePixels=function(t,r,n,a){o.default._validateParameters("updatePixels",arguments),0!==this.pixels.length&&this._renderer.updatePixels(t,r,n,a)};var l=o.default;n.default=l},{"../color/p5.Color":282,"../core/main":296,"./filters":317,"core-js/modules/es.array.filter":173}],322:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.last-index-of"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.function.name"),t("core-js/modules/es.object.from-entries"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.promise"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/web.url"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.last-index-of"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.function.name"),t("core-js/modules/es.object.from-entries"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.promise"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/web.url"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=c(t("../core/main"));t("whatwg-fetch"),t("es6-promise/auto");var s=c(t("fetch-jsonp")),l=c(t("file-saver"));function c(t){return t&&t.__esModule?t:{default:t}}function u(t){return(u="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}/**
 * Loads a JSON file from a file or a URL, and returns an Object.
 * Note that even if the JSON file contains an Array, an Object will be
 * returned with index numbers as keys.
 *
 * This method is asynchronous, meaning it may not finish before the next
 * line in your sketch is executed. JSONP is supported via a polyfill and you
 * can pass in as the second argument an object with definitions of the json
 * callback following the syntax specified <a href="https://github.com/camsong/
 * fetch-jsonp">here</a>.
 *
 * This method is suitable for fetching files up to size of 64MB.
 * @method loadJSON
 * @param  {String}        path       name of the file or url to load
 * @param  {Object}        [jsonpOptions] options object for jsonp related settings
 * @param  {String}        [datatype] "json" or "jsonp"
 * @param  {function}      [callback] function to be executed after
 *                                    <a href="#/p5/loadJSON">loadJSON()</a> completes, data is passed
 *                                    in as first argument
 * @param  {function}      [errorCallback] function to be executed if
 *                                    there is an error, response is passed
 *                                    in as first argument
 * @return {Object|Array}             JSON data
 * @example
 *
 * Calling <a href="#/p5/loadJSON">loadJSON()</a> inside <a href="#/p5/preload">preload()</a> guarantees to complete the
 * operation before <a href="#/p5/setup">setup()</a> and <a href="#/p5/draw">draw()</a> are called.
 *
 * <div><code>
 * // Examples use USGS Earthquake API:
 * //   https://earthquake.usgs.gov/fdsnws/event/1/#methods
 * let earthquakes;
 * function preload() {
 *   // Get the most recent earthquake in the database
 *   let url =
    'https://earthquake.usgs.gov/earthquakes/feed/v1.0/' +
 *     'summary/all_day.geojson';
 *   earthquakes = loadJSON(url);
 * }
 *
 * function setup() {
 *   noLoop();
 * }
 *
 * function draw() {
 *   background(200);
 *   // Get the magnitude and name of the earthquake out of the loaded JSON
 *   let earthquakeMag = earthquakes.features[0].properties.mag;
 *   let earthquakeName = earthquakes.features[0].properties.place;
 *   ellipse(width / 2, height / 2, earthquakeMag * 10, earthquakeMag * 10);
 *   textAlign(CENTER);
 *   text(earthquakeName, 0, height - 30, width, 30);
 *   describe(`50×50 ellipse that changes from black to white
 *     depending on the current humidity`);
 * }
 * </code></div>
 *
 * Outside of preload(), you may supply a callback function to handle the
 * object:
 * <div><code>
 * function setup() {
 *   noLoop();
 *   let url =
    'https://earthquake.usgs.gov/earthquakes/feed/v1.0/' +
 *     'summary/all_day.geojson';
 *   loadJSON(url, drawEarthquake);
 * }
 *
 * function draw() {
 *   background(200);
 *   describe(`50×50 ellipse that changes from black to white
 *     depending on the current humidity`);
 * }
 *
 * function drawEarthquake(earthquakes) {
 *   // Get the magnitude and name of the earthquake out of the loaded JSON
 *   let earthquakeMag = earthquakes.features[0].properties.mag;
 *   let earthquakeName = earthquakes.features[0].properties.place;
 *   ellipse(width / 2, height / 2, earthquakeMag * 10, earthquakeMag * 10);
 *   textAlign(CENTER);
 *   text(earthquakeName, 0, height - 30, width, 30);
 * }
 * </code></div>
 */function p(t,r){if(void 0===(r=r||[]))for(var n=0;n<t.length;n++)r[n.toString()]=n;return Object.fromEntries(r.map(function(r,n){return[r,t[n]]}))}/**
 * Reads the contents of a file and creates an XML object with its values.
 * If the name of the file is used as the parameter, as in the above example,
 * the file must be located in the sketch directory/folder.
 *
 * Alternatively, the file maybe be loaded from anywhere on the local
 * computer using an absolute path (something that starts with / on Unix and
 * Linux, or a drive letter on Windows), or the filename parameter can be a
 * URL for a file found on a network.
 *
 * This method is asynchronous, meaning it may not finish before the next
 * line in your sketch is executed. Calling <a href="#/p5/loadXML">loadXML()</a> inside <a href="#/p5/preload">preload()</a>
 * guarantees to complete the operation before <a href="#/p5/setup">setup()</a> and <a href="#/p5/draw">draw()</a> are called.
 *
 * Outside of <a href="#/p5/preload">preload()</a>, you may supply a callback function to handle the
 * object.
 *
 * This method is suitable for fetching files up to size of 64MB.
 * @method loadXML
 * @param  {String}   filename   name of the file or URL to load
 * @param  {function} [callback] function to be executed after <a href="#/p5/loadXML">loadXML()</a>
 *                               completes, XML object is passed in as
 *                               first argument
 * @param  {function} [errorCallback] function to be executed if
 *                               there is an error, response is passed
 *                               in as first argument
 * @return {Object}              XML object containing data
 * @example
 * <div class='norender'><code>
 * // The following short XML file called "mammals.xml" is parsed
 * // in the code below.
 * //
 * // <?xml version="1.0"?>
 * // &lt;mammals&gt;
 * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
 * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
 * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
 * // &lt;/mammals&gt;
 *
 * let xml;
 *
 * function preload() {
 *   xml = loadXML('assets/mammals.xml');
 * }
 *
 * function setup() {
 *   let children = xml.getChildren('animal');
 *
 *   for (let i = 0; i < children.length; i++) {
 *     let id = children[i].getNum('id');
 *     let coloring = children[i].getString('species');
 *     let name = children[i].getContent();
 *     print(id + ', ' + coloring + ', ' + name);
 *   }
 *   describe('no image displayed');
 * }
 *
 * // Sketch prints:
 * // 0, Capra hircus, Goat
 * // 1, Panthera pardus, Leopard
 * // 2, Equus zebra, Zebra
 * </code></div>
 */// HELPERS
// =======
function d(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}/**
 *  Writes the contents of a <a href="#/p5.Table">Table</a> object to a file. Defaults to a
 *  text file with comma-separated-values ('csv') but can also
 *  use tab separation ('tsv'), or generate an HTML table ('html').
 *  The file saving process and location of the saved file will
 *  vary between web browsers.
 *
 *  @method saveTable
 *  @param  {p5.Table} Table  the <a href="#/p5.Table">Table</a> object to save to a file
 *  @param  {String} filename the filename to which the Table should be saved
 *  @param  {String} [options]  can be one of "tsv", "csv", or "html"
 *  @example
 *  <div><code>
 * let table;
 *
 * function setup() {
 *   table = new p5.Table();
 *
 *   table.addColumn('id');
 *   table.addColumn('species');
 *   table.addColumn('name');
 *
 *   let newRow = table.addRow();
 *   newRow.setNum('id', table.getRowCount() - 1);
 *   newRow.setString('species', 'Panthera leo');
 *   newRow.setString('name', 'Lion');
 *
 *   // To save, un-comment next line then click 'run'
 *   // saveTable(table, 'new.csv');
 *
 *   describe('no image displayed');
 * }
 *
 * // Saves the following to a file called 'new.csv':
 * // id,species,name
 * // 0,Panthera leo,Lion
 * </code></div>
 *//**
 *  Returns a file extension, or another string
 *  if the provided parameter has no extension.
 *
 *  @param   {String} filename
 *  @param   {String} [extension]
 *  @return  {String[]} [fileName, fileExtension]
 *
 *  @private
 */function m(t,r){r&&!0!==r&&"true"!==r||(r=""),t||(t="untitled");var n="";// make sure the file will have a name, see if filename needs extension
return t&&t.includes(".")&&(n=t.split(".").pop()),r&&n!==r&&(n=r,t="".concat(t,".").concat(n)),[t,n]}/**
 *  Helper function, a callback for download that deletes
 *  an invisible anchor element from the DOM once the file
 *  has been automatically downloaded.
 *
 *  @private
 */function f(t){document.body.removeChild(t.target)}t("../core/friendly_errors/validate_params"),t("../core/friendly_errors/file_errors"),t("../core/friendly_errors/fes_core"),/**
 * @method loadJSON
 * @param  {String}        path
 * @param  {String}        datatype
 * @param  {function}      [callback]
 * @param  {function}      [errorCallback]
 * @return {Object|Array}
 *//**
 * @method loadJSON
 * @param  {String}        path
 * @param  {function}      callback
 * @param  {function}      [errorCallback]
 * @return {Object|Array}
 */a.default.prototype.loadJSON=function(){for(var t,r,n,o=arguments.length,s=Array(o),l=0;l<o;l++)s[l]=arguments[l];a.default._validateParameters("loadJSON",s);for(var c=s[0],p={},d="json",m=1;m<s.length;m++){var f=s[m];"string"==typeof f?("jsonp"===f||"json"===f)&&(d=f):"function"==typeof f?t?r=f:t=f:"object"===u(f)&&(f.hasOwnProperty("jsonpCallback")||f.hasOwnProperty("jsonpCallbackFunction"))&&(d="jsonp",n=f)}var h=this;return this.httpDo(c,"GET",n,d,function(r){for(var n in r)p[n]=r[n];void 0!==t&&t(r),h._decrementPreload()},function(t){if(// Error handling
a.default._friendlyFileLoadError(5,c),r)r(t);else throw t}),p},/**
 * Reads the contents of a file and creates a String array of its individual
 * lines. If the name of the file is used as the parameter, as in the above
 * example, the file must be located in the sketch directory/folder.
 *
 * Alternatively, the file may be loaded from anywhere on the local
 * computer using an absolute path (something that starts with / on Unix and
 * Linux, or a drive letter on Windows), or the filename parameter can be a
 * URL for a file found on a network.
 *
 * This method is asynchronous, meaning it may not finish before the next
 * line in your sketch is executed.
 *
 * This method is suitable for fetching files up to size of 64MB.
 * @method loadStrings
 * @param  {String}   filename   name of the file or url to load
 * @param  {function} [callback] function to be executed after <a href="#/p5/loadStrings">loadStrings()</a>
 *                               completes, Array is passed in as first
 *                               argument
 * @param  {function} [errorCallback] function to be executed if
 *                               there is an error, response is passed
 *                               in as first argument
 * @return {String[]}            Array of Strings
 * @example
 *
 * Calling loadStrings() inside <a href="#/p5/preload">preload()</a> guarantees to complete the
 * operation before <a href="#/p5/setup">setup()</a> and <a href="#/p5/draw">draw()</a> are called.
 *
 * <div><code>
 * let result;
 * function preload() {
 *   result = loadStrings('assets/test.txt');
 * }

 * function setup() {
 *   background(200);
 *   text(random(result), 10, 10, 80, 80);
 *   describe(`randomly generated text from a file,
 *     for example "i smell like butter"`);
 * }
 * </code></div>
 *
 * Outside of preload(), you may supply a callback function to handle the
 * object:
 *
 * <div><code>
 * function setup() {
 *   loadStrings('assets/test.txt', pickString);
 *   describe(`randomly generated text from a file,
 *     for example "i have three feet"`);
 * }
 *
 * function pickString(result) {
 *   background(200);
 *   text(random(result), 10, 10, 80, 80);
 * }
 * </code></div>
 */a.default.prototype.loadStrings=function(){for(var t,r,n=arguments.length,o=Array(n),s=0;s<n;s++)o[s]=arguments[s];a.default._validateParameters("loadStrings",o);for(var l=[],c=1;c<o.length;c++){var u=o[c];"function"==typeof u&&(void 0===t?t=u:void 0===r&&(r=u))}var p=this;return a.default.prototype.httpDo.call(this,o[0],"GET","text",function(r){for(var n=r.replace(/\r\n/g,"\r").replace(/\n/g,"\r").split(/\r/),o=32768,a=0,s=n.length;a<s;a+=o)Array.prototype.push.apply(l,n.slice(a,Math.min(a+o,s)));void 0!==t&&t(l),p._decrementPreload()},function(t){if(// Error handling
a.default._friendlyFileLoadError(3,arguments[0]),r)r(t);else throw t}),l},/**
 * Reads the contents of a file or URL and creates a <a href="#/p5.Table">p5.Table</a> object with
 * its values. If a file is specified, it must be located in the sketch's
 * "data" folder. The filename parameter can also be a URL to a file found
 * online. By default, the file is assumed to be comma-separated (in CSV
 * format). Table only looks for a header row if the 'header' option is
 * included.
 *
 * This method is asynchronous, meaning it may not finish before the next
 * line in your sketch is executed. Calling <a href="#/p5/loadTable">loadTable()</a> inside <a href="#/p5/preload">preload()</a>
 * guarantees to complete the operation before <a href="#/p5/setup">setup()</a> and <a href="#/p5/draw">draw()</a> are called.
 * Outside of <a href="#/p5/preload">preload()</a>, you may supply a callback function to handle the
 * object:
 *
 * All files loaded and saved use UTF-8 encoding. This method is suitable for fetching files up to size of 64MB.
 * @method loadTable
 * @param  {String}         filename    name of the file or URL to load
 * @param  {String}         [extension] parse the table by comma-separated values "csv", semicolon-separated
 *                                      values "ssv", or tab-separated values "tsv"
 * @param  {String}         [header]    "header" to indicate table has header row
 * @param  {function}       [callback]  function to be executed after
 *                                      <a href="#/p5/loadTable">loadTable()</a> completes. On success, the
 *                                      <a href="#/p5.Table">Table</a> object is passed in as the
 *                                      first argument.
 * @param  {function}  [errorCallback]  function to be executed if
 *                                      there is an error, response is passed
 *                                      in as first argument
 * @return {Object}                     <a href="#/p5.Table">Table</a> object containing data
 *
 * @example
 * <div class='norender'>
 * <code>
 * // Given the following CSV file called "mammals.csv"
 * // located in the project's "assets" folder:
 * //
 * // id,species,name
 * // 0,Capra hircus,Goat
 * // 1,Panthera pardus,Leopard
 * // 2,Equus zebra,Zebra
 *
 * let table;
 *
 * function preload() {
 *   //my table is comma separated value "csv"
 *   //and has a header specifying the columns labels
 *   table = loadTable('assets/mammals.csv', 'csv', 'header');
 *   //the file can be remote
 *   //table = loadTable("http://p5js.org/reference/assets/mammals.csv",
 *   //                  "csv", "header");
 * }
 *
 * function setup() {
 *   //count the columns
 *   print(table.getRowCount() + ' total rows in table');
 *   print(table.getColumnCount() + ' total columns in table');
 *
 *   print(table.getColumn('name'));
 *   //["Goat", "Leopard", "Zebra"]
 *
 *   //cycle through the table
 *   for (let r = 0; r < table.getRowCount(); r++)
 *     for (let c = 0; c < table.getColumnCount(); c++) {
 *       print(table.getString(r, c));
 *     }
 *   describe(`randomly generated text from a file,
 *     for example "i smell like butter"`);
 * }
 * </code>
 * </div>
 */a.default.prototype.loadTable=function(t){var r,n,o,s=[],l=!1,c=t.substring(t.lastIndexOf(".")+1,t.length);"csv"===c?o=",":"ssv"===c?o=";":"tsv"===c&&(o="	");for(var u=1;u<arguments.length;u++)"function"==typeof arguments[u]?void 0===r?r=arguments[u]:void 0===n&&(n=arguments[u]):"string"==typeof arguments[u]&&(s.push(arguments[u]),"header"===arguments[u]&&(l=!0),"csv"===arguments[u]?o=",":"ssv"===arguments[u]?o=";":"tsv"===arguments[u]&&(o="	"));var d=new a.default.Table,m=this;return this.httpDo(t,"GET","table",function(t){for(var n,s,c={},u=0,f=1,h=2,y=4,g='"',v="\r",b="\n",x=[],j=0,w=null,_=function(){c.currentState=u,c.token=""},S=function(){w.push(c.token),_()},E=function(){c.escaped=!1,w=[],_()},T=function(){c.currentState=y,x.push(w),w=null};;){if(null==(n=t[j++])){if(c.escaped)throw Error("Unclosed quote in file.");if(w){S(),T();break}}// Handle opening quote
if(null===w&&E(),c.currentState===u){if(n===g){c.escaped=!0,c.currentState=f;continue}c.currentState=f}// mid-token and escaped, look for sequences and end quote
if(c.currentState===f&&c.escaped){if(n===g)t[j]===g?(c.token+=g,j++):(c.escaped=!1,c.currentState=h);else{if(n===v)continue;c.token+=n}continue}// fall-through: mid-token or post-token, not escaped
n===v?(t[j]===b&&j++,S(),T()):n===b?(S(),T()):n===o?S():c.currentState===f&&(c.token+=n)}// set up column names
if(l)d.columns=x.shift();else for(var M=0;M<x[0].length;M++)d.columns[M]="null";for(var C=0;C<x.length;C++)//Handles row of 'undefined' at end of some CSVs
(1!==x[C].length||"undefined"!==x[C][0]&&""!==x[C][0])&&((s=new a.default.TableRow).arr=x[C],s.obj=p(x[C],d.columns),d.addRow(s));"function"==typeof r&&r(d),m._decrementPreload()},function(r){// Error handling
a.default._friendlyFileLoadError(2,t),n?n(r):console.error(r)}),d},a.default.prototype.loadXML=function(){for(var t,r,n=arguments.length,o=Array(n),s=0;s<n;s++)o[s]=arguments[s];for(var l=new a.default.XML,c=1;c<o.length;c++){var u=o[c];"function"==typeof u&&(void 0===t?t=u:void 0===r&&(r=u))}var p=this;return this.httpDo(o[0],"GET","xml",function(r){for(var n in r)l[n]=r[n];void 0!==t&&t(l),p._decrementPreload()},function(t){if(// Error handling
a.default._friendlyFileLoadError(1,arguments[0]),r)r(t);else throw t}),l},/**
 * This method is suitable for fetching files up to size of 64MB.
 * @method loadBytes
 * @param {string}   file            name of the file or URL to load
 * @param {function} [callback]      function to be executed after <a href="#/p5/loadBytes">loadBytes()</a>
 *                                    completes
 * @param {function} [errorCallback] function to be executed if there
 *                                    is an error
 * @returns {Object} an object whose 'bytes' property will be the loaded buffer
 *
 * @example
 * <div class='norender'><code>
 * let data;
 *
 * function preload() {
 *   data = loadBytes('assets/mammals.xml');
 * }
 *
 * function setup() {
 *   for (let i = 0; i < 5; i++) {
 *     console.log(data.bytes[i].toString(16));
 *   }
 *   describe('no image displayed');
 * }
 * </code></div>
 */a.default.prototype.loadBytes=function(t,r,n){var o={},s=this;return this.httpDo(t,"GET","arrayBuffer",function(t){o.bytes=new Uint8Array(t),"function"==typeof r&&r(o),s._decrementPreload()},function(r){if(// Error handling
a.default._friendlyFileLoadError(6,t),n)n(r);else throw r}),o},/**
 * Method for executing an HTTP GET request. If data type is not specified,
 * p5 will try to guess based on the URL, defaulting to text. This is equivalent to
 * calling <code>httpDo(path, 'GET')</code>. The 'binary' datatype will return
 * a Blob object, and the 'arrayBuffer' datatype will return an ArrayBuffer
 * which can be used to initialize typed arrays (such as Uint8Array).
 *
 * @method httpGet
 * @param  {String}        path       name of the file or url to load
 * @param  {String}        [datatype] "json", "jsonp", "binary", "arrayBuffer",
 *                                    "xml", or "text"
 * @param  {Object|Boolean} [data]    param data passed sent with request
 * @param  {function}      [callback] function to be executed after
 *                                    <a href="#/p5/httpGet">httpGet()</a> completes, data is passed in
 *                                    as first argument
 * @param  {function}      [errorCallback] function to be executed if
 *                                    there is an error, response is passed
 *                                    in as first argument
 * @return {Promise} A promise that resolves with the data when the operation
 *                   completes successfully or rejects with the error after
 *                   one occurs.
 * @example
 * <div class='norender'><code>
 * // Examples use USGS Earthquake API:
 * //   https://earthquake.usgs.gov/fdsnws/event/1/#methods
 * let earthquakes;
 * function preload() {
 *   // Get the most recent earthquake in the database
 *   let url =
    'https://earthquake.usgs.gov/fdsnws/event/1/query?' +
 *     'format=geojson&limit=1&orderby=time';
 *   httpGet(url, 'jsonp', false, function(response) {
 *     // when the HTTP request completes, populate the variable that holds the
 *     // earthquake data used in the visualization.
 *     earthquakes = response;
 *   });
 * }
 *
 * function draw() {
 *   if (!earthquakes) {
 *     // Wait until the earthquake data has loaded before drawing.
 *     return;
 *   }
 *   background(200);
 *   // Get the magnitude and name of the earthquake out of the loaded JSON
 *   let earthquakeMag = earthquakes.features[0].properties.mag;
 *   let earthquakeName = earthquakes.features[0].properties.place;
 *   ellipse(width / 2, height / 2, earthquakeMag * 10, earthquakeMag * 10);
 *   textAlign(CENTER);
 *   text(earthquakeName, 0, height - 30, width, 30);
 *   noLoop();
 * }
 * </code></div>
 *//**
 * @method httpGet
 * @param  {String}        path
 * @param  {Object|Boolean} data
 * @param  {function}      [callback]
 * @param  {function}      [errorCallback]
 * @return {Promise}
 *//**
 * @method httpGet
 * @param  {String}        path
 * @param  {function}      callback
 * @param  {function}      [errorCallback]
 * @return {Promise}
 */a.default.prototype.httpGet=function(){a.default._validateParameters("httpGet",arguments);var t=Array.prototype.slice.call(arguments);return t.splice(1,0,"GET"),a.default.prototype.httpDo.apply(this,t)},/**
 * Method for executing an HTTP POST request. If data type is not specified,
 * p5 will try to guess based on the URL, defaulting to text. This is equivalent to
 * calling <code>httpDo(path, 'POST')</code>.
 *
 * @method httpPost
 * @param  {String}        path       name of the file or url to load
 * @param  {String}        [datatype] "json", "jsonp", "xml", or "text".
 *                                    If omitted, <a href="#/p5/httpPost">httpPost()</a> will guess.
 * @param  {Object|Boolean} [data]    param data passed sent with request
 * @param  {function}      [callback] function to be executed after
 *                                    <a href="#/p5/httpPost">httpPost()</a> completes, data is passed in
 *                                    as first argument
 * @param  {function}      [errorCallback] function to be executed if
 *                                    there is an error, response is passed
 *                                    in as first argument
 * @return {Promise} A promise that resolves with the data when the operation
 *                   completes successfully or rejects with the error after
 *                   one occurs.
 *
 * @example
 * <div>
 * <code>
 * // Examples use jsonplaceholder.typicode.com for a Mock Data API
 *
 * let url = 'https://jsonplaceholder.typicode.com/posts';
 * let postData = { userId: 1, title: 'p5 Clicked!', body: 'p5.js is very cool.' };
 *
 * function setup() {
 *   createCanvas(100, 100);
 *   background(200);
 * }
 *
 * function mousePressed() {
 *   httpPost(url, 'json', postData, function(result) {
 *     strokeWeight(2);
 *     text(result.body, mouseX, mouseY);
 *   });
 * }
 * </code>
 * </div>
 *
 * <div><code>
 * let url = 'ttps://invalidURL'; // A bad URL that will cause errors
 * let postData = { title: 'p5 Clicked!', body: 'p5.js is very cool.' };
 *
 * function setup() {
 *   createCanvas(100, 100);
 *   background(200);
 * }
 *
 * function mousePressed() {
 *   httpPost(
 *     url,
 *     'json',
 *     postData,
 *     function(result) {
 *       // ... won't be called
 *     },
 *     function(error) {
 *       strokeWeight(2);
 *       text(error.toString(), mouseX, mouseY);
 *     }
 *   );
 * }
 * </code></div>
 *//**
 * @method httpPost
 * @param  {String}        path
 * @param  {Object|Boolean} data
 * @param  {function}      [callback]
 * @param  {function}      [errorCallback]
 * @return {Promise}
 *//**
 * @method httpPost
 * @param  {String}        path
 * @param  {function}      callback
 * @param  {function}      [errorCallback]
 * @return {Promise}
 */a.default.prototype.httpPost=function(){a.default._validateParameters("httpPost",arguments);var t=Array.prototype.slice.call(arguments);return t.splice(1,0,"POST"),a.default.prototype.httpDo.apply(this,t)},/**
 * Method for executing an HTTP request. If data type is not specified,
 * p5 will try to guess based on the URL, defaulting to text.<br><br>
 * For more advanced use, you may also pass in the path as the first argument
 * and a object as the second argument, the signature follows the one specified
 * in the Fetch API specification.
 * This method is suitable for fetching files up to size of 64MB when "GET" is used.
 *
 * @method httpDo
 * @param  {String}        path       name of the file or url to load
 * @param  {String}        [method]   either "GET", "POST", or "PUT",
 *                                    defaults to "GET"
 * @param  {String}        [datatype] "json", "jsonp", "xml", or "text"
 * @param  {Object}        [data]     param data passed sent with request
 * @param  {function}      [callback] function to be executed after
 *                                    <a href="#/p5/httpGet">httpGet()</a> completes, data is passed in
 *                                    as first argument
 * @param  {function}      [errorCallback] function to be executed if
 *                                    there is an error, response is passed
 *                                    in as first argument
 * @return {Promise} A promise that resolves with the data when the operation
 *                   completes successfully or rejects with the error after
 *                   one occurs.
 *
 * @example
 * <div>
 * <code>
 * // Examples use USGS Earthquake API:
 * // https://earthquake.usgs.gov/fdsnws/event/1/#methods
 *
 * // displays an animation of all USGS earthquakes
 * let earthquakes;
 * let eqFeatureIndex = 0;
 *
 * function preload() {
 *   let url = 'https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson';
 *   httpDo(
 *     url,
 *     {
 *       method: 'GET',
 *       // Other Request options, like special headers for apis
 *       headers: { authorization: 'Bearer secretKey' }
 *     },
 *     function(res) {
 *       earthquakes = res;
 *     }
 *   );
 * }
 *
 * function draw() {
 *   // wait until the data is loaded
 *   if (!earthquakes || !earthquakes.features[eqFeatureIndex]) {
 *     return;
 *   }
 *   clear();
 *
 *   let feature = earthquakes.features[eqFeatureIndex];
 *   let mag = feature.properties.mag;
 *   let rad = mag / 11 * ((width + height) / 2);
 *   fill(255, 0, 0, 100);
 *   ellipse(width / 2 + random(-2, 2), height / 2 + random(-2, 2), rad, rad);
 *
 *   if (eqFeatureIndex >= earthquakes.features.length) {
 *     eqFeatureIndex = 0;
 *   } else {
 *     eqFeatureIndex += 1;
 *   }
 * }
 * </code>
 * </div>
 *//**
 * @method httpDo
 * @param  {String}        path
 * @param  {Object}        options   Request object options as documented in the
 *                                    "fetch" API
 * <a href="https://developer.mozilla.org/en/docs/Web/API/Fetch_API">reference</a>
 * @param  {function}      [callback]
 * @param  {function}      [errorCallback]
 * @return {Promise}
 */a.default.prototype.httpDo=function(){for(var t={},r=0,n="text/plain",o=arguments.length-1;o>0&&"function"==typeof(o<0||arguments.length<=o?void 0:arguments[o]);o--)r++;// The number of arguments minus callbacks
var l=arguments.length-r,c=arguments.length<=0?void 0:arguments[0];if(2===l&&"string"==typeof c&&"object"===u(arguments.length<=1?void 0:arguments[1]))// Intended for more advanced use, pass in Request parameters directly
f=new Request(c,arguments.length<=1?void 0:arguments[1]),d=arguments.length<=2?void 0:arguments[2],m=arguments.length<=3?void 0:arguments[3];else{for(var p,d,m,f,h,y,g="GET",v=1;v<arguments.length;v++){var b=v<0||arguments.length<=v?void 0:arguments[v];if("string"==typeof b)"GET"===b||"POST"===b||"PUT"===b||"DELETE"===b?g=b:"json"===b||"jsonp"===b||"binary"===b||"arrayBuffer"===b||"xml"===b||"text"===b||"table"===b?p=b:y=b;else if("number"==typeof b)y=b.toString();else if("object"===u(b)){if(b.hasOwnProperty("jsonpCallback")||b.hasOwnProperty("jsonpCallbackFunction"))for(var x in b)t[x]=b[x];else b instanceof a.default.XML?(y=b.serialize(),n="application/xml"):(y=JSON.stringify(b),n="application/json")}else"function"==typeof b&&(d?m=b:d=b)}// Provided with arguments
var j="GET"===g?new Headers:new Headers({"Content-Type":n});f=new Request(c,{method:g,mode:"cors",body:y,headers:j})}// do some sort of smart type checking
return p||(p=c.includes("json")?"json":c.includes("xml")?"xml":"text"),(h=(h="jsonp"===p?(0,s.default)(c,t):fetch(f)).then(function(t){if(t.ok){var r=0;switch("jsonp"!==p&&(r=t.headers.get("content-length")),r&&r>64e6&&a.default._friendlyFileLoadError(7,c),p){case"json":case"jsonp":return t.json();case"binary":return t.blob();case"arrayBuffer":return t.arrayBuffer();case"xml":return t.text().then(function(t){var r=new DOMParser().parseFromString(t,"text/xml");return new a.default.XML(r.documentElement)});default:return t.text()}}else{var n=Error(t.body);throw n.status=t.status,n.ok=!1,n}})).then(d||function(){}),h.catch(m||console.error),h},/**
 * @module IO
 * @submodule Output
 * @for p5
 */window.URL=window.URL||window.webkitURL,a.default.prototype._pWriters=[],/**
 * @method createWriter
 * @param {String} name name of the file to be created
 * @param {String} [extension]
 * @return {p5.PrintWriter}
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100);
 *   background(200);
 *   text('click here to save', 10, 10, 70, 80);
 * }
 *
 * function mousePressed() {
 *   if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {
 *     const writer = createWriter('squares.txt');
 *     for (let i = 0; i < 10; i++) {
 *       writer.print(i * i);
 *     }
 *     writer.close();
 *     writer.clear();
 *   }
 * }
 * </code>
 * </div>
 */a.default.prototype.createWriter=function(t,r){var n;// check that it doesn't already exist
for(var o in a.default.prototype._pWriters)if(a.default.prototype._pWriters[o].name===t)return(// if a p5.PrintWriter w/ this name already exists...
// return p5.prototype._pWriters[i]; // return it w/ contents intact.
// or, could return a new, empty one with a unique name:
n=new a.default.PrintWriter(t+this.millis(),r),a.default.prototype._pWriters.push(n),n);return n=new a.default.PrintWriter(t,r),a.default.prototype._pWriters.push(n),n},/**
 *  @class p5.PrintWriter
 *  @param  {String}     filename
 *  @param  {String}     [extension]
 */a.default.PrintWriter=function(t,r){var n=this;this.name=t,this.content="",/**
   * Writes data to the PrintWriter stream
   * @method write
   * @param {Array} data all data to be written by the PrintWriter
   * @example
   * <div class="norender notest">
   * <code>
   * // creates a file called 'newFile.txt'
   * let writer = createWriter('newFile.txt');
   * // write 'Hello world!'' to the file
   * writer.write(['Hello world!']);
   * // close the PrintWriter and save the file
   * writer.close();
   * </code>
   * </div>
   * <div class='norender notest'>
   * <code>
   * // creates a file called 'newFile2.txt'
   * let writer = createWriter('newFile2.txt');
   * // write 'apples,bananas,123' to the file
   * writer.write(['apples', 'bananas', 123]);
   * // close the PrintWriter and save the file
   * writer.close();
   * </code>
   * </div>
   * <div class='norender notest'>
   * <code>
   * // creates a file called 'newFile3.txt'
   * let writer = createWriter('newFile3.txt');
   * // write 'My name is: Teddy' to the file
   * writer.write('My name is:');
   * writer.write(' Teddy');
   * // close the PrintWriter and save the file
   * writer.close();
   * </code>
   * </div>
   * <div>
   * <code>
   * function setup() {
   *   createCanvas(100, 100);
   *   button = createButton('SAVE FILE');
   *   button.position(21, 40);
   *   button.mousePressed(createFile);
   * }
   *
   * function createFile() {
   *   // creates a file called 'newFile.txt'
   *   let writer = createWriter('newFile.txt');
   *   // write 'Hello world!'' to the file
   *   writer.write(['Hello world!']);
   *   // close the PrintWriter and save the file
   *   writer.close();
   * }
   * </code>
   * </div>
   */this.write=function(t){this.content+=t},/**
   * Writes data to the PrintWriter stream, and adds a new line at the end
   * @method print
   * @param {Array} data all data to be printed by the PrintWriter
   * @example
   * <div class='norender notest'>
   * <code>
   * // creates a file called 'newFile.txt'
   * let writer = createWriter('newFile.txt');
   * // creates a file containing
   * //  My name is:
   * //  Teddy
   * writer.print('My name is:');
   * writer.print('Teddy');
   * // close the PrintWriter and save the file
   * writer.close();
   * </code>
   * </div>
   * <div class='norender notest'>
   * <code>
   * let writer;
   *
   * function setup() {
   *   createCanvas(400, 400);
   *   // create a PrintWriter
   *   writer = createWriter('newFile.txt');
   * }
   *
   * function draw() {
   *   writer.print([mouseX, mouseY]);
   * }
   *
   * function mouseClicked() {
   *   writer.close();
   * }
   * </code>
   * </div>
   */this.print=function(t){this.content+="".concat(t,"\n")},/**
   * Clears the data already written to the PrintWriter object
   * @method clear
   * @example
   * <div class ="norender notest"><code>
   * // create writer object
   * let writer = createWriter('newFile.txt');
   * writer.write(['clear me']);
   * // clear writer object here
   * writer.clear();
   * // close writer
   * writer.close();
   * </code></div>
   * <div>
   * <code>
   * function setup() {
   *   button = createButton('CLEAR ME');
   *   button.position(21, 40);
   *   button.mousePressed(createFile);
   * }
   *
   * function createFile() {
   *   let writer = createWriter('newFile.txt');
   *   writer.write(['clear me']);
   *   writer.clear();
   *   writer.close();
   * }
   * </code>
   * </div>
   *
   */this.clear=function(){this.content=""},/**
   * Closes the PrintWriter
   * @method close
   * @example
   * <div class="norender notest">
   * <code>
   * // create a file called 'newFile.txt'
   * let writer = createWriter('newFile.txt');
   * // close the PrintWriter and save the file
   * writer.close();
   * </code>
   * </div>
   * <div class='norender notest'>
   * <code>
   * // create a file called 'newFile2.txt'
   * let writer = createWriter('newFile2.txt');
   * // write some data to the file
   * writer.write([100, 101, 102]);
   * // close the PrintWriter and save the file
   * writer.close();
   * </code>
   * </div>
   */this.close=function(){// convert String to Array for the writeFile Blob
var o=[];for(var s in o.push(this.content),a.default.prototype.writeFile(o,t,r),a.default.prototype._pWriters)a.default.prototype._pWriters[s].name===this.name&&a.default.prototype._pWriters.splice(s,1);n.clear(),n={}}},/**
 * @module IO
 * @submodule Output
 * @for p5
 */// object, filename, options --> saveJSON, saveStrings,
// filename, [extension] [canvas] --> saveImage
/**
 *  Saves a given element(image, text, json, csv, wav, or html) to the client's
 *  computer. The first parameter can be a pointer to element we want to save.
 *  The element can be one of <a href="#/p5.Element">p5.Element</a>,an Array of
 *  Strings, an Array of JSON, a JSON object, a <a href="#/p5.Table">p5.Table
 *  </a>, a <a href="#/p5.Image">p5.Image</a>, or a p5.SoundFile (requires
 *  p5.sound). The second parameter is a filename (including extension).The
 *  third parameter is for options specific to this type of object. This method
 *  will save a file that fits the given parameters.
 *  If it is called without specifying an element, by default it will save the
 *  whole canvas as an image file. You can optionally specify a filename as
 *  the first parameter in such a case.
 *  **Note that it is not recommended to
 *  call this method within draw, as it will open a new save dialog on every
 *  render.**
 *
 * @method save
 * @param  {Object|String} [objectOrFilename]  If filename is provided, will
 *                                             save canvas as an image with
 *                                             either png or jpg extension
 *                                             depending on the filename.
 *                                             If object is provided, will
 *                                             save depending on the object
 *                                             and filename (see examples
 *                                             above).
 * @param  {String} [filename] If an object is provided as the first
 *                               parameter, then the second parameter
 *                               indicates the filename,
 *                               and should include an appropriate
 *                               file extension (see examples above).
 * @param  {Boolean|String} [options]  Additional options depend on
 *                            filetype. For example, when saving JSON,
 *                            <code>true</code> indicates that the
 *                            output will be optimized for filesize,
 *                            rather than readability.
 *
 * @example
 * <div class="norender"><code>
 * // Saves the canvas as an image
 * cnv = createCanvas(300, 300);
 * save(cnv, 'myCanvas.jpg');
 *
 * // Saves the canvas as an image by default
 * save('myCanvas.jpg');
 * describe('An example for saving a canvas as an image.');
 * </code></div>
 *
 * <div class="norender"><code>
 * // Saves p5.Image as an image
 * img = createImage(10, 10);
 * save(img, 'myImage.png');
 * describe('An example for saving a p5.Image element as an image.');
 * </code></div>
 *
 * <div class="norender"><code>
 * // Saves p5.Renderer object as an image
 * obj = createGraphics(100, 100);
 * save(obj, 'myObject.png');
 * describe('An example for saving a p5.Renderer element.');
 * </code></div>
 *
 * <div class="norender"><code>
 * let myTable = new p5.Table();
 * // Saves table as html file
 * save(myTable, 'myTable.html');
 *
 * // Comma Separated Values
 * save(myTable, 'myTable.csv');
 *
 * // Tab Separated Values
 * save(myTable, 'myTable.tsv');
 *
 * describe(`An example showing how to save a table in formats of
 *   HTML, CSV and TSV.`);
 * </code></div>
 *
 * <div class="norender"><code>
 * let myJSON = { a: 1, b: true };
 *
 * // Saves pretty JSON
 * save(myJSON, 'my.json');
 *
 * // Optimizes JSON filesize
 * save(myJSON, 'my.json', true);
 *
 * describe('An example for saving JSON to a txt file with some extra arguments.');
 * </code></div>
 *
 * <div class="norender"><code>
 * // Saves array of strings to text file with line breaks after each item
 * let arrayOfStrings = ['a', 'b'];
 * save(arrayOfStrings, 'my.txt');
 * describe(`An example for saving an array of strings to text file
 *   with line breaks.`);
 * </code></div>
 */a.default.prototype.save=function(t,r,n){// parse the arguments and figure out which things we are saving
var o=arguments,s=this._curElement?this._curElement.elt:this.elt;// =================================================
if(0===o.length){a.default.prototype.saveCanvas(s);return}if(o[0]instanceof a.default.Renderer||o[0]instanceof a.default.Graphics){// otherwise, parse the arguments
// if first param is a p5Graphics, then saveCanvas
a.default.prototype.saveCanvas(o[0].elt,o[1],o[2]);return}if(1===o.length&&"string"==typeof o[0])a.default.prototype.saveCanvas(s,o[0]);else switch(m(o[1],o[2])[1]){case"json":a.default.prototype.saveJSON(o[0],o[1],o[2]);return;case"txt":a.default.prototype.saveStrings(o[0],o[1],o[2]);return;// =================================================
// OPTION 3: decide based on object...
default:o[0]instanceof Array?a.default.prototype.saveStrings(o[0],o[1],o[2]):o[0]instanceof a.default.Table?a.default.prototype.saveTable(o[0],o[1],o[2]):o[0]instanceof a.default.Image?a.default.prototype.saveCanvas(o[0].canvas,o[1]):o[0]instanceof a.default.SoundFile&&a.default.prototype.saveSound(o[0],o[1],o[2],o[3])}},/**
 *  Writes the contents of an Array or a JSON object to a .json file.
 *  The file saving process and location of the saved file will
 *  vary between web browsers.
 *
 *  @method saveJSON
 *  @param  {Array|Object} json
 *  @param  {String} filename
 *  @param  {Boolean} [optimize]   If true, removes line breaks
 *                                 and spaces from the output
 *                                 file to optimize filesize
 *                                 (but not readability).
 *  @example
 * <div><code>
 * let json = {}; // new  JSON Object
 *
 * json.id = 0;
 * json.species = 'Panthera leo';
 * json.name = 'Lion';
 *
 * function setup() {
 *   createCanvas(100, 100);
 *   background(200);
 *   text('click here to save', 10, 10, 70, 80);
 *   describe('no image displayed');
 * }
 *
 * function mousePressed() {
 *   if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {
 *     saveJSON(json, 'lion.json');
 *   }
 * }
 *
 * // saves the following to a file called "lion.json":
 * // {
 * //   "id": 0,
 * //   "species": "Panthera leo",
 * //   "name": "Lion"
 * // }
 * </code></div>
 */a.default.prototype.saveJSON=function(t,r,n){var o;a.default._validateParameters("saveJSON",arguments),o=n?JSON.stringify(t):JSON.stringify(t,void 0,2),this.saveStrings(o.split("\n"),r,"json")},a.default.prototype.saveJSONObject=a.default.prototype.saveJSON,a.default.prototype.saveJSONArray=a.default.prototype.saveJSON,/**
 *  Writes an array of Strings to a text file, one line per String.
 *  The file saving process and location of the saved file will
 *  vary between web browsers.
 *
 *  @method saveStrings
 *  @param  {String[]} list   string array to be written
 *  @param  {String} filename filename for output
 *  @param  {String} [extension] the filename's extension
 *  @param  {Boolean} [isCRLF] if true, change line-break to CRLF
 *  @example
 * <div><code>
 * let words = 'apple bear cat dog';
 *
 * // .split() outputs an Array
 * let list = split(words, ' ');
 *
 * function setup() {
 *   createCanvas(100, 100);
 *   background(200);
 *   text('click here to save', 10, 10, 70, 80);
 *   describe('no image displayed');
 * }
 *
 * function mousePressed() {
 *   if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {
 *     saveStrings(list, 'nouns.txt');
 *   }
 * }
 *
 * // Saves the following to a file called 'nouns.txt':
 * //
 * // apple
 * // bear
 * // cat
 * // dog
 * </code></div>
 */a.default.prototype.saveStrings=function(t,r,n,o){a.default._validateParameters("saveStrings",arguments);for(var s=n||"txt",l=this.createWriter(r,s),c=0;c<t.length;c++)o?l.write(t[c]+"\r\n"):l.write(t[c]+"\n");l.close(),l.clear()},a.default.prototype.saveTable=function(t,r,n){a.default._validateParameters("saveTable",arguments),o=void 0===n?r.substring(r.lastIndexOf(".")+1,r.length):n;var o,s=this.createWriter(r,o),l=t.columns,c=",";if("tsv"===o&&(c="	"),"html"!==o){// make header if it has values
if("0"!==l[0]){for(var u=0;u<l.length;u++)u<l.length-1?s.write(l[u]+c):s.write(l[u]);s.write("\n")}// make rows
for(var p=0;p<t.rows.length;p++){var m=void 0;for(m=0;m<t.rows[p].arr.length;m++)m<t.rows[p].arr.length-1?"csv"===o&&String(t.rows[p].arr[m]).includes(",")?s.write('"'+t.rows[p].arr[m]+'"'+c):s.write(t.rows[p].arr[m]+c):"csv"===o&&String(t.rows[p].arr[m]).includes(",")?s.write('"'+t.rows[p].arr[m]+'"'):s.write(t.rows[p].arr[m]);s.write("\n")}}else{// otherwise, make HTML
s.print("<html>"),s.print("<head>");var f='  <meta http-equiv="content-type" content';if(f+='="text/html;charset=utf-8" />',s.print(f),s.print("</head>"),s.print("<body>"),s.print("  <table>"),"0"!==l[0]){s.print("    <tr>");for(var h=0;h<l.length;h++){var y=d(l[h]);s.print("      <td>".concat(y)),s.print("      </td>")}s.print("    </tr>")}// make rows
for(var g=0;g<t.rows.length;g++){s.print("    <tr>");for(var v=0;v<t.columns.length;v++){var b=d(t.rows[g].getString(v));s.print("      <td>".concat(b)),s.print("      </td>")}s.print("    </tr>")}s.print("  </table>"),s.print("</body>"),s.print("</html>")}// close and clear the pWriter
s.close(),s.clear()},/**
 *  Generate a blob of file data as a url to prepare for download.
 *  Accepts an array of data, a filename, and an extension (optional).
 *  This is a private function because it does not do any formatting,
 *  but it is used by <a href="#/p5/saveStrings">saveStrings</a>, <a href="#/p5/saveJSON">saveJSON</a>, <a href="#/p5/saveTable">saveTable</a> etc.
 *
 *  @param  {Array} dataToDownload
 *  @param  {String} filename
 *  @param  {String} [extension]
 *  @private
 */a.default.prototype.writeFile=function(t,r,n){var o="application/octet-stream";a.default.prototype._isSafari()&&(o="text/plain");var s=new Blob(t,{type:o});a.default.prototype.downloadFile(s,r,n)},/**
 *  Forces download. Accepts a url to filedata/blob, a filename,
 *  and an extension (optional).
 *  This is a private function because it does not do any formatting,
 *  but it is used by <a href="#/p5/saveStrings">saveStrings</a>, <a href="#/p5/saveJSON">saveJSON</a>, <a href="#/p5/saveTable">saveTable</a> etc.
 *
 *  @method downloadFile
 *  @private
 *  @param  {String|Blob} data    either an href generated by createObjectURL,
 *                                or a Blob object containing the data
 *  @param  {String} [filename]
 *  @param  {String} [extension]
 */a.default.prototype.downloadFile=function(t,r,n){var o=m(r,n),s=o[0];if(t instanceof Blob){l.default.saveAs(t,s);return}var c=document.createElement("a");if(c.href=t,c.download=s,c.onclick=function(t){f(t),t.stopPropagation()},c.style.display="none",document.body.appendChild(c),a.default.prototype._isSafari()){var u="Hello, Safari user! To download this file...\n";u+='1. Go to File --> Save As.\n2. Choose "Page Source" as the Format.\n'+'3. Name it with this extension: ."'.concat(o[1],'"'),alert(u)}c.click()},a.default.prototype._checkFileExtension=m,/**
 *  Returns true if the browser is Safari, false if not.
 *  Safari makes trouble for downloading files.
 *
 *  @return  {Boolean} [description]
 *  @private
 */a.default.prototype._isSafari=function(){return Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor")>0};var h=a.default;n.default=h},{"../core/friendly_errors/fes_core":287,"../core/friendly_errors/file_errors":288,"../core/friendly_errors/validate_params":291,"../core/main":296,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.includes":176,"core-js/modules/es.array.index-of":177,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.last-index-of":180,"core-js/modules/es.array.map":181,"core-js/modules/es.array.slice":182,"core-js/modules/es.array.splice":184,"core-js/modules/es.function.name":185,"core-js/modules/es.object.from-entries":193,"core-js/modules/es.object.to-string":198,"core-js/modules/es.promise":199,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.includes":207,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.replace":212,"core-js/modules/es.string.split":214,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.typed-array.copy-within":221,"core-js/modules/es.typed-array.every":222,"core-js/modules/es.typed-array.fill":223,"core-js/modules/es.typed-array.filter":224,"core-js/modules/es.typed-array.find":226,"core-js/modules/es.typed-array.find-index":225,"core-js/modules/es.typed-array.for-each":229,"core-js/modules/es.typed-array.includes":230,"core-js/modules/es.typed-array.index-of":231,"core-js/modules/es.typed-array.iterator":234,"core-js/modules/es.typed-array.join":235,"core-js/modules/es.typed-array.last-index-of":236,"core-js/modules/es.typed-array.map":237,"core-js/modules/es.typed-array.reduce":239,"core-js/modules/es.typed-array.reduce-right":238,"core-js/modules/es.typed-array.reverse":240,"core-js/modules/es.typed-array.set":241,"core-js/modules/es.typed-array.slice":242,"core-js/modules/es.typed-array.some":243,"core-js/modules/es.typed-array.sort":244,"core-js/modules/es.typed-array.subarray":245,"core-js/modules/es.typed-array.to-locale-string":246,"core-js/modules/es.typed-array.to-string":247,"core-js/modules/es.typed-array.uint8-array":250,"core-js/modules/web.dom-collections.iterator":254,"core-js/modules/web.url":256,"es6-promise/auto":257,"fetch-jsonp":259,"file-saver":260,"whatwg-fetch":273}],323:[function(t,r,n){t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.regexp.constructor"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.match"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.regexp.constructor"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.match"),t("core-js/modules/es.string.replace"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}function s(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function l(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function c(t,r,n){return r&&l(t.prototype,r),n&&l(t,n),t}/**
 *  Table Options
 *  Generic class for handling tabular data, typically from a
 *  CSV, TSV, or other sort of spreadsheet file.
 *  CSV files are
 *  <a href="http://en.wikipedia.org/wiki/Comma-separated_values">
 *  comma separated values</a>, often with the data in quotes. TSV
 *  files use tabs as separators, and usually don't bother with the
 *  quotes.
 *  File names should end with .csv if they're comma separated.
 *  A rough "spec" for CSV can be found
 *  <a href="http://tools.ietf.org/html/rfc4180">here</a>.
 *  To load files, use the <a href="#/p5/loadTable">loadTable</a> method.
 *  To save tables to your computer, use the <a href="#/p5/save">save</a> method
 *   or the <a href="#/p5/saveTable">saveTable</a> method.
 *
 *  Possible options include:
 *  <ul>
 *  <li>csv - parse the table as comma-separated values
 *  <li>tsv - parse the table as tab-separated values
 *  <li>header - this table has a header (title) row
 *  </ul>
 *//**
 *  <a href="#/p5.Table">Table</a> objects store data with multiple rows and columns, much
 *  like in a traditional spreadsheet. Tables can be generated from
 *  scratch, dynamically, or using data from an existing file.
 *
 *  @class p5.Table
 *  @constructor
 *  @param  {p5.TableRow[]}     [rows] An array of p5.TableRow objects
 */o.default.Table=/*#__PURE__*/function(){/**
   * An array containing the names of the columns in the table, if the "header" the table is
   * loaded with the "header" parameter.
   * @property columns {String[]}
   * @example
   * <div class="norender">
   * <code>
   * // Given the CSV file "mammals.csv"
   * // in the project's "assets" folder:
   * //
   * // id,species,name
   * // 0,Capra hircus,Goat
   * // 1,Panthera pardus,Leopard
   * // 2,Equus zebra,Zebra
   *
   * let table;
   *
   * function preload() {
   *   //my table is comma separated value "csv"
   *   //and has a header specifying the columns labels
   *   table = loadTable('assets/mammals.csv', 'csv', 'header');
   * }
   *
   * function setup() {
   *   //print the column names
   *   for (let c = 0; c < table.getColumnCount(); c++) {
   *     print('column ' + c + ' is named ' + table.columns[c]);
   *   }
   * }
   * </code>
   * </div>
   */function t(r){s(this,t),this.columns=[],/**
    * An array containing the <a href="#/p5.Table">p5.TableRow</a> objects that make up the
    * rows of the table. The same result as calling <a href="#/p5/getRows">getRows()</a>
    * @property rows {p5.TableRow[]}
    */this.rows=[]}/**
  *  Use <a href="#/p5/addRow">addRow()</a> to add a new row of data to a <a href="#/p5.Table">p5.Table</a> object. By default,
  *  an empty row is created. Typically, you would store a reference to
  *  the new row in a TableRow object (see newRow in the example above),
  *  and then set individual values using <a href="#/p5/set">set()</a>.
  *
  *  If a <a href="#/p5.TableRow">p5.TableRow</a> object is included as a parameter, then that row is
  *  duplicated and added to the table.
  *
  *  @method  addRow
  *  @param   {p5.TableRow} [row] row to be added to the table
  *  @return  {p5.TableRow} the row that was added
  *
  * @example
  * <div class="norender">
  * <code>
  * // Given the CSV file "mammals.csv"
  * // in the project's "assets" folder:
  * //
  * // id,species,name
  * // 0,Capra hircus,Goat
  * // 1,Panthera pardus,Leopard
  * // 2,Equus zebra,Zebra
  *
  * let table;
  *
  * function preload() {
  *   //my table is comma separated value "csv"
  *   //and has a header specifying the columns labels
  *   table = loadTable('assets/mammals.csv', 'csv', 'header');
  * }
  *
  * function setup() {
  *   //add a row
  *   let newRow = table.addRow();
  *   newRow.setString('id', table.getRowCount() - 1);
  *   newRow.setString('species', 'Canis Lupus');
  *   newRow.setString('name', 'Wolf');
  *
  *   //print the results
  *   for (let r = 0; r < table.getRowCount(); r++)
  *     for (let c = 0; c < table.getColumnCount(); c++)
  *       print(table.getString(r, c));
  *
  *   describe('no image displayed');
  * }
  * </code>
  * </div>
  */return c(t,[{key:"addRow",value:function(t){// make sure it is a valid TableRow
var r=t||new o.default.TableRow;if(void 0===r.arr||void 0===r.obj)throw Error("invalid TableRow: ".concat(r));return r.table=this,this.rows.push(r),r}/**
    * Removes a row from the table object.
    *
    * @method  removeRow
    * @param   {Integer} id ID number of the row to remove
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   //remove the first row
    *   table.removeRow(0);
    *
    *   //print the results
    *   for (let r = 0; r < table.getRowCount(); r++)
    *     for (let c = 0; c < table.getColumnCount(); c++)
    *       print(table.getString(r, c));
    *
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"removeRow",value:function(t){this.rows[t].table=null;var r=this.rows.splice(t+1,this.rows.length);this.rows.pop(),this.rows=this.rows.concat(r)}/**
    * Returns a reference to the specified <a href="#/p5.TableRow">p5.TableRow</a>. The reference
    * can then be used to get and set values of the selected row.
    *
    * @method  getRow
    * @param  {Integer}   rowID ID number of the row to get
    * @return {p5.TableRow} <a href="#/p5.TableRow">p5.TableRow</a> object
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   let row = table.getRow(1);
    *   //print it column by column
    *   //note: a row is an object, not an array
    *   for (let c = 0; c < table.getColumnCount(); c++) {
    *     print(row.getString(c));
    *   }
    *
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"getRow",value:function(t){return this.rows[t]}/**
    *  Gets all rows from the table. Returns an array of <a href="#/p5.TableRow">p5.TableRow</a>s.
    *
    *  @method  getRows
    *  @return {p5.TableRow[]}   Array of <a href="#/p5.TableRow">p5.TableRow</a>s
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   let rows = table.getRows();
    *
    *   //warning: rows is an array of objects
    *   for (let r = 0; r < rows.length; r++) {
    *     rows[r].set('name', 'Unicorn');
    *   }
    *
    *   //print the results
    *   for (let r = 0; r < table.getRowCount(); r++)
    *     for (let c = 0; c < table.getColumnCount(); c++)
    *       print(table.getString(r, c));
    *
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"getRows",value:function(){return this.rows}/**
    *  Finds the first row in the Table that contains the value
    *  provided, and returns a reference to that row. Even if
    *  multiple rows are possible matches, only the first matching
    *  row is returned. The column to search may be specified by
    *  either its ID or title.
    *
    *  @method  findRow
    *  @param  {String} value  The value to match
    *  @param  {Integer|String} column ID number or title of the
    *                                 column to search
    *  @return {p5.TableRow}
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   //find the animal named zebra
    *   let row = table.findRow('Zebra', 'name');
    *   //find the corresponding species
    *   print(row.getString('species'));
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"findRow",value:function(t,r){// try the Object
if("string"==typeof r){for(var n=0;n<this.rows.length;n++)if(this.rows[n].obj[r]===t)return this.rows[n]}else for(var o=0;o<this.rows.length;o++)if(this.rows[o].arr[r]===t)return this.rows[o];// otherwise...
return null}/**
    *  Finds the rows in the Table that contain the value
    *  provided, and returns references to those rows. Returns an
    *  Array, so for must be used to iterate through all the rows,
    *  as shown in the example above. The column to search may be
    *  specified by either its ID or title.
    *
    *  @method  findRows
    *  @param  {String} value  The value to match
    *  @param  {Integer|String} column ID number or title of the
    *                                 column to search
    *  @return {p5.TableRow[]}        An Array of TableRow objects
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   //add another goat
    *   let newRow = table.addRow();
    *   newRow.setString('id', table.getRowCount() - 1);
    *   newRow.setString('species', 'Scape Goat');
    *   newRow.setString('name', 'Goat');
    *
    *   //find the rows containing animals named Goat
    *   let rows = table.findRows('Goat', 'name');
    *   print(rows.length + ' Goats found');
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"findRows",value:function(t,r){var n=[];if("string"==typeof r)for(var o=0;o<this.rows.length;o++)this.rows[o].obj[r]===t&&n.push(this.rows[o]);else // try the Array
for(var a=0;a<this.rows.length;a++)this.rows[a].arr[r]===t&&n.push(this.rows[a]);return n}/**
    * Finds the first row in the Table that matches the regular
    * expression provided, and returns a reference to that row.
    * Even if multiple rows are possible matches, only the first
    * matching row is returned. The column to search may be
    * specified by either its ID or title.
    *
    * @method  matchRow
    * @param  {String|RegExp} regexp The regular expression to match
    * @param  {String|Integer} column The column ID (number) or
    *                                  title (string)
    * @return {p5.TableRow}        TableRow object
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   //Search using specified regex on a given column, return TableRow object
    *   let mammal = table.matchRow(new RegExp('ant'), 1);
    *   print(mammal.getString(1));
    *   //Output "Panthera pardus"
    * }
    * </code>
    * </div>
    */},{key:"matchRow",value:function(t,r){if("number"==typeof r){for(var n=0;n<this.rows.length;n++)if(this.rows[n].arr[r].match(t))return this.rows[n]}else for(var o=0;o<this.rows.length;o++)if(this.rows[o].obj[r].match(t))return this.rows[o];return null}/**
    * Finds the rows in the Table that match the regular expression provided,
    * and returns references to those rows. Returns an array, so for must be
    * used to iterate through all the rows, as shown in the example. The
    * column to search may be specified by either its ID or title.
    *
    * @method  matchRows
    * @param  {String} regexp The regular expression to match
    * @param  {String|Integer} [column] The column ID (number) or
    *                                  title (string)
    * @return {p5.TableRow[]}          An Array of TableRow objects
    * @example
    * <div class="norender">
    * <code>
    * let table;
    *
    * function setup() {
    *   table = new p5.Table();
    *
    *   table.addColumn('name');
    *   table.addColumn('type');
    *
    *   let newRow = table.addRow();
    *   newRow.setString('name', 'Lion');
    *   newRow.setString('type', 'Mammal');
    *
    *   newRow = table.addRow();
    *   newRow.setString('name', 'Snake');
    *   newRow.setString('type', 'Reptile');
    *
    *   newRow = table.addRow();
    *   newRow.setString('name', 'Mosquito');
    *   newRow.setString('type', 'Insect');
    *
    *   newRow = table.addRow();
    *   newRow.setString('name', 'Lizard');
    *   newRow.setString('type', 'Reptile');
    *
    *   let rows = table.matchRows('R.*', 'type');
    *   for (let i = 0; i < rows.length; i++) {
    *     print(rows[i].getString('name') + ': ' + rows[i].getString('type'));
    *   }
    * }
    * // Sketch prints:
    * // Snake: Reptile
    * // Lizard: Reptile
    * </code>
    * </div>
    */},{key:"matchRows",value:function(t,r){var n=[];if("number"==typeof r)for(var o=0;o<this.rows.length;o++)this.rows[o].arr[r].match(t)&&n.push(this.rows[o]);else for(var a=0;a<this.rows.length;a++)this.rows[a].obj[r].match(t)&&n.push(this.rows[a]);return n}/**
    *  Retrieves all values in the specified column, and returns them
    *  as an array. The column may be specified by either its ID or title.
    *
    *  @method  getColumn
    *  @param  {String|Number} column String or Number of the column to return
    *  @return {Array}       Array of column values
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   //getColumn returns an array that can be printed directly
    *   print(table.getColumn('species'));
    *   //outputs ["Capra hircus", "Panthera pardus", "Equus zebra"]
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"getColumn",value:function(t){var r=[];if("string"==typeof t)for(var n=0;n<this.rows.length;n++)r.push(this.rows[n].obj[t]);else for(var o=0;o<this.rows.length;o++)r.push(this.rows[o].arr[t]);return r}/**
    *  Removes all rows from a Table. While all rows are removed,
    *  columns and column titles are maintained.
    *
    *  @method  clearRows
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   table.clearRows();
    *   print(table.getRowCount() + ' total rows in table');
    *   print(table.getColumnCount() + ' total columns in table');
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"clearRows",value:function(){delete this.rows,this.rows=[]}/**
    *  Use <a href="#/p5/addColumn">addColumn()</a> to add a new column to a <a href="#/p5.Table">Table</a> object.
    *  Typically, you will want to specify a title, so the column
    *  may be easily referenced later by name. (If no title is
    *  specified, the new column's title will be null.)
    *
    *  @method  addColumn
    *  @param {String} [title] title of the given column
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   table.addColumn('carnivore');
    *   table.set(0, 'carnivore', 'no');
    *   table.set(1, 'carnivore', 'yes');
    *   table.set(2, 'carnivore', 'no');
    *
    *   //print the results
    *   for (let r = 0; r < table.getRowCount(); r++)
    *     for (let c = 0; c < table.getColumnCount(); c++)
    *       print(table.getString(r, c));
    *
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"addColumn",value:function(t){var r=t||null;this.columns.push(r)}/**
    *  Returns the total number of columns in a Table.
    *
    *  @method  getColumnCount
    *  @return {Integer} Number of columns in this table
    * @example
    * <div>
    * <code>
    * // given the cvs file "blobs.csv" in /assets directory
    * // ID, Name, Flavor, Shape, Color
    * // Blob1, Blobby, Sweet, Blob, Pink
    * // Blob2, Saddy, Savory, Blob, Blue
    *
    * let table;
    *
    * function preload() {
    *   table = loadTable('assets/blobs.csv');
    * }
    *
    * function setup() {
    *   createCanvas(200, 100);
    *   textAlign(CENTER);
    *   background(255);
    * }
    *
    * function draw() {
    *   let numOfColumn = table.getColumnCount();
    *   text('There are ' + numOfColumn + ' columns in the table.', 100, 50);
    * }
    * </code>
    * </div>
    */},{key:"getColumnCount",value:function(){return this.columns.length}/**
    *  Returns the total number of rows in a Table.
    *
    *  @method  getRowCount
    *  @return {Integer} Number of rows in this table
    * @example
    * <div>
    * <code>
    * // given the cvs file "blobs.csv" in /assets directory
    * //
    * // ID, Name, Flavor, Shape, Color
    * // Blob1, Blobby, Sweet, Blob, Pink
    * // Blob2, Saddy, Savory, Blob, Blue
    *
    * let table;
    *
    * function preload() {
    *   table = loadTable('assets/blobs.csv');
    * }
    *
    * function setup() {
    *   createCanvas(200, 100);
    *   textAlign(CENTER);
    *   background(255);
    * }
    *
    * function draw() {
    *   text('There are ' + table.getRowCount() + ' rows in the table.', 100, 50);
    * }
    * </code>
    * </div>
    */},{key:"getRowCount",value:function(){return this.rows.length}/**
    *  Removes any of the specified characters (or "tokens").
    *
    *  If no column is specified, then the values in all columns and
    *  rows are processed. A specific column may be referenced by
    *  either its ID or title.
    *
    *  @method  removeTokens
    *  @param  {String} chars  String listing characters to be removed
    *  @param  {String|Integer} [column] Column ID (number)
    *                                   or name (string)
    *
    * @example
    * <div class="norender"><code>
    * function setup() {
    *   let table = new p5.Table();
    *
    *   table.addColumn('name');
    *   table.addColumn('type');
    *
    *   let newRow = table.addRow();
    *   newRow.setString('name', '   $Lion  ,');
    *   newRow.setString('type', ',,,Mammal');
    *
    *   newRow = table.addRow();
    *   newRow.setString('name', '$Snake  ');
    *   newRow.setString('type', ',,,Reptile');
    *
    *   table.removeTokens(',$ ');
    *   print(table.getArray());
    * }
    *
    * // prints:
    * //  0  "Lion"   "Mamal"
    * //  1  "Snake"  "Reptile"
    * </code></div>
    */},{key:"removeTokens",value:function(t,r){for(var n=function(t){return t.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&")},o=[],a=0;a<t.length;a++)o.push(n(t.charAt(a)));var s=RegExp(o.join("|"),"g");if(void 0===r)for(var l=0;l<this.columns.length;l++)for(var c=0;c<this.rows.length;c++){var u=this.rows[c].arr[l];u=u.replace(s,""),this.rows[c].arr[l]=u,this.rows[c].obj[this.columns[l]]=u}else if("string"==typeof r)for(var p=0;p<this.rows.length;p++){var d=this.rows[p].obj[r];d=d.replace(s,""),this.rows[p].obj[r]=d;var m=this.columns.indexOf(r);this.rows[p].arr[m]=d}else for(var f=0;f<this.rows.length;f++){var h=this.rows[f].arr[r];h=h.replace(s,""),this.rows[f].arr[r]=h,this.rows[f].obj[this.columns[r]]=h}}/**
    *  Trims leading and trailing whitespace, such as spaces and tabs,
    *  from String table values. If no column is specified, then the
    *  values in all columns and rows are trimmed. A specific column
    *  may be referenced by either its ID or title.
    *
    *  @method  trim
    *  @param  {String|Integer} [column] Column ID (number)
    *                                   or name (string)
    * @example
    * <div class="norender"><code>
    * function setup() {
    *   let table = new p5.Table();
    *
    *   table.addColumn('name');
    *   table.addColumn('type');
    *
    *   let newRow = table.addRow();
    *   newRow.setString('name', '   Lion  ,');
    *   newRow.setString('type', ' Mammal  ');
    *
    *   newRow = table.addRow();
    *   newRow.setString('name', '  Snake  ');
    *   newRow.setString('type', '  Reptile  ');
    *
    *   table.trim();
    *   print(table.getArray());
    * }
    *
    * // prints:
    * //  0  "Lion"   "Mamal"
    * //  1  "Snake"  "Reptile"
    * </code></div>
    */},{key:"trim",value:function(t){var r=RegExp(" ","g");if(void 0===t)for(var n=0;n<this.columns.length;n++)for(var o=0;o<this.rows.length;o++){var a=this.rows[o].arr[n];a=a.replace(r,""),this.rows[o].arr[n]=a,this.rows[o].obj[this.columns[n]]=a}else if("string"==typeof t)for(var s=0;s<this.rows.length;s++){var l=this.rows[s].obj[t];l=l.replace(r,""),this.rows[s].obj[t]=l;var c=this.columns.indexOf(t);this.rows[s].arr[c]=l}else for(var u=0;u<this.rows.length;u++){var p=this.rows[u].arr[t];p=p.replace(r,""),this.rows[u].arr[t]=p,this.rows[u].obj[this.columns[t]]=p}}/**
    *  Use <a href="#/p5/removeColumn">removeColumn()</a> to remove an existing column from a Table
    *  object. The column to be removed may be identified by either
    *  its title (a String) or its index value (an int).
    *  removeColumn(0) would remove the first column, removeColumn(1)
    *  would remove the second column, and so on.
    *
    *  @method  removeColumn
    *  @param  {String|Integer} column columnName (string) or ID (number)
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   table.removeColumn('id');
    *   print(table.getColumnCount());
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"removeColumn",value:function(t){"string"==typeof t?(// find the position of c in the columns
r=t,n=this.columns.indexOf(t)):(n=t,r=this.columns[t]);var r,n,o=this.columns.splice(n+1,this.columns.length);this.columns.pop(),this.columns=this.columns.concat(o);for(var a=0;a<this.rows.length;a++){var s=this.rows[a].arr,l=s.splice(n+1,s.length);s.pop(),this.rows[a].arr=s.concat(l),delete this.rows[a].obj[r]}}/**
    * Stores a value in the Table's specified row and column.
    * The row is specified by its ID, while the column may be specified
    * by either its ID or title.
    *
    * @method  set
    * @param {Integer} row row ID
    * @param {String|Integer} column column ID (Number)
    *                               or title (String)
    * @param {String|Number} value  value to assign
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   table.set(0, 'species', 'Canis Lupus');
    *   table.set(0, 'name', 'Wolf');
    *
    *   //print the results
    *   for (let r = 0; r < table.getRowCount(); r++)
    *     for (let c = 0; c < table.getColumnCount(); c++)
    *       print(table.getString(r, c));
    *
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"set",value:function(t,r,n){this.rows[t].set(r,n)}/**
    * Stores a Float value in the Table's specified row and column.
    * The row is specified by its ID, while the column may be specified
    * by either its ID or title.
    *
    * @method setNum
    * @param {Integer} row row ID
    * @param {String|Integer} column column ID (Number)
    *                               or title (String)
    * @param {Number} value  value to assign
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   table.setNum(1, 'id', 1);
    *
    *   print(table.getColumn(0));
    *   //["0", 1, "2"]
    *
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"setNum",value:function(t,r,n){this.rows[t].setNum(r,n)}/**
    * Stores a String value in the Table's specified row and column.
    * The row is specified by its ID, while the column may be specified
    * by either its ID or title.
    *
    * @method  setString
    * @param {Integer} row row ID
    * @param {String|Integer} column column ID (Number)
    *                               or title (String)
    * @param {String} value  value to assign
    * @example
    * <div class="norender"><code>
    * // Given the CSV file "mammals.csv" in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   //add a row
    *   let newRow = table.addRow();
    *   newRow.setString('id', table.getRowCount() - 1);
    *   newRow.setString('species', 'Canis Lupus');
    *   newRow.setString('name', 'Wolf');
    *
    *   print(table.getArray());
    *
    *   describe('no image displayed');
    * }
    * </code></div>
    */},{key:"setString",value:function(t,r,n){this.rows[t].setString(r,n)}/**
    * Retrieves a value from the Table's specified row and column.
    * The row is specified by its ID, while the column may be specified by
    * either its ID or title.
    *
    * @method  get
    * @param {Integer} row row ID
    * @param  {String|Integer} column columnName (string) or
    *                                   ID (number)
    * @return {String|Number}
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   print(table.get(0, 1));
    *   //Capra hircus
    *   print(table.get(0, 'species'));
    *   //Capra hircus
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"get",value:function(t,r){return this.rows[t].get(r)}/**
    * Retrieves a Float value from the Table's specified row and column.
    * The row is specified by its ID, while the column may be specified by
    * either its ID or title.
    *
    * @method  getNum
    * @param {Integer} row row ID
    * @param  {String|Integer} column columnName (string) or
    *                                   ID (number)
    * @return {Number}
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   print(table.getNum(1, 0) + 100);
    *   //id 1 + 100 = 101
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"getNum",value:function(t,r){return this.rows[t].getNum(r)}/**
    * Retrieves a String value from the Table's specified row and column.
    * The row is specified by its ID, while the column may be specified by
    * either its ID or title.
    *
    * @method  getString
    * @param {Integer} row row ID
    * @param  {String|Integer} column columnName (string) or
    *                                   ID (number)
    * @return {String}
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   // table is comma separated value "CSV"
    *   // and has specifiying header for column labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   print(table.getString(0, 0)); // 0
    *   print(table.getString(0, 1)); // Capra hircus
    *   print(table.getString(0, 2)); // Goat
    *   print(table.getString(1, 0)); // 1
    *   print(table.getString(1, 1)); // Panthera pardus
    *   print(table.getString(1, 2)); // Leopard
    *   print(table.getString(2, 0)); // 2
    *   print(table.getString(2, 1)); // Equus zebra
    *   print(table.getString(2, 2)); // Zebra
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"getString",value:function(t,r){return this.rows[t].getString(r)}/**
    * Retrieves all table data and returns as an object. If a column name is
    * passed in, each row object will be stored with that attribute as its
    * title.
    *
    * @method  getObject
    * @param {String} [headerColumn] Name of the column which should be used to
    *                              title each row object (optional)
    * @return {Object}
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   let tableObject = table.getObject();
    *
    *   print(tableObject);
    *   //outputs an object
    *
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"getObject",value:function(t){for(var r,n={},o=0;o<this.rows.length;o++)if(r=this.rows[o].obj,"string"==typeof t){if(this.columns.indexOf(t)>=0)n[r[t]]=r;else throw Error('This table has no column named "'.concat(t,'"'))}else n[o]=this.rows[o].obj;return n}/**
    * Retrieves all table data and returns it as a multidimensional array.
    *
    * @method  getArray
    * @return {Array}
    *
    * @example
    * <div class="norender">
    * <code>
    * // Given the CSV file "mammals.csv"
    * // in the project's "assets" folder
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leoperd
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   // table is comma separated value "CSV"
    *   // and has specifiying header for column labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   let tableArray = table.getArray();
    *   for (let i = 0; i < tableArray.length; i++) {
    *     print(tableArray[i]);
    *   }
    *   describe('no image displayed');
    * }
    * </code>
    * </div>
    */},{key:"getArray",value:function(){for(var t=[],r=0;r<this.rows.length;r++)t.push(this.rows[r].arr);return t}}]),t}();var u=o.default;n.default=u},{"../core/main":296,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.index-of":177,"core-js/modules/es.array.join":179,"core-js/modules/es.array.splice":184,"core-js/modules/es.regexp.constructor":202,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.match":209,"core-js/modules/es.string.replace":212}],324:[function(t,r,n){t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.from-entries"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.split"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.from-entries"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.split"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}function s(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function l(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function c(t,r,n){return r&&l(t.prototype,r),n&&l(t,n),t}/**
 *  A TableRow object represents a single row of data values,
 *  stored in columns, from a table.
 *
 *  A Table Row contains both an ordered array, and an unordered
 *  JSON object.
 *
 *  @class p5.TableRow
 *  @constructor
 *  @param {String} [str]       optional: populate the row with a
 *                              string of values, separated by the
 *                              separator
 *  @param {String} [separator] comma separated values (csv) by default
 */o.default.TableRow=/*#__PURE__*/function(){function t(r,n){s(this,t);var o=[];r&&(n=n||",",o=r.split(n)),this.arr=o,this.obj=Object.fromEntries(o.entries()),this.table=null}/**
  *  Stores a value in the TableRow's specified column.
  *  The column may be specified by either its ID or title.
  *
  *  @method  set
  *  @param {String|Integer} column Column ID (Number)
  *                                or Title (String)
  *  @param {String|Number} value  The value to be stored
  *
  * @example
  * <div class="norender"><code>
  * // Given the CSV file "mammals.csv" in the project's "assets" folder:
  * //
  * // id,species,name
  * // 0,Capra hircus,Goat
  * // 1,Panthera pardus,Leopard
  * // 2,Equus zebra,Zebra
  *
  * let table;
  *
  * function preload() {
  *   //my table is comma separated value "csv"
  *   //and has a header specifying the columns labels
  *   table = loadTable('assets/mammals.csv', 'csv', 'header');
  * }
  *
  * function setup() {
  *   let rows = table.getRows();
  *   for (let r = 0; r < rows.length; r++) {
  *     rows[r].set('name', 'Unicorn');
  *   }
  *
  *   //print the results
  *   print(table.getArray());
  *
  *   describe('no image displayed');
  * }
  * </code></div>
  */return c(t,[{key:"set",value:function(t,r){// if typeof column is string, use .obj
if("string"==typeof t){var n=this.table.columns.indexOf(t);// index of columnID
if(n>=0)this.obj[t]=r,this.arr[n]=r;else throw Error('This table has no column named "'.concat(t,'"'))}else // if typeof column is number, use .arr
if(t<this.table.columns.length){this.arr[t]=r;var o=this.table.columns[t];this.obj[o]=r}else throw Error("Column #".concat(t," is out of the range of this table"))}/**
    *  Stores a Float value in the TableRow's specified column.
    *  The column may be specified by either its ID or title.
    *
    *  @method  setNum
    *  @param {String|Integer} column Column ID (Number)
    *                                or Title (String)
    *  @param {Number|String} value  The value to be stored
    *                                as a Float
    * @example
    * <div class="norender"><code>
    * // Given the CSV file "mammals.csv" in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   let rows = table.getRows();
    *   for (let r = 0; r < rows.length; r++) {
    *     rows[r].setNum('id', r + 10);
    *   }
    *
    *   print(table.getArray());
    *
    *   describe('no image displayed');
    * }
    * </code></div>
    */},{key:"setNum",value:function(t,r){var n=parseFloat(r);this.set(t,n)}/**
    *  Stores a String value in the TableRow's specified column.
    *  The column may be specified by either its ID or title.
    *
    *  @method  setString
    *  @param {String|Integer} column Column ID (Number)
    *                                or Title (String)
    *  @param {String|Number|Boolean|Object} value  The value to be stored
    *                                as a String
    * @example
    * <div class="norender"><code>
    * // Given the CSV file "mammals.csv" in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   let rows = table.getRows();
    *   for (let r = 0; r < rows.length; r++) {
    *     let name = rows[r].getString('name');
    *     rows[r].setString('name', 'A ' + name + ' named George');
    *   }
    *
    *   print(table.getArray());
    *
    *   describe('no image displayed');
    * }
    * </code></div>
    */},{key:"setString",value:function(t,r){var n=r.toString();this.set(t,n)}/**
    *  Retrieves a value from the TableRow's specified column.
    *  The column may be specified by either its ID or title.
    *
    *  @method  get
    *  @param  {String|Integer} column columnName (string) or
    *                                   ID (number)
    *  @return {String|Number}
    *
    * @example
    * <div class="norender"><code>
    * // Given the CSV file "mammals.csv" in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   let names = [];
    *   let rows = table.getRows();
    *   for (let r = 0; r < rows.length; r++) {
    *     names.push(rows[r].get('name'));
    *   }
    *
    *   print(names);
    *
    *   describe('no image displayed');
    * }
    * </code></div>
    */},{key:"get",value:function(t){return"string"==typeof t?this.obj[t]:this.arr[t]}/**
    *  Retrieves a Float value from the TableRow's specified
    *  column. The column may be specified by either its ID or
    *  title.
    *
    *  @method  getNum
    *  @param  {String|Integer} column columnName (string) or
    *                                   ID (number)
    *  @return {Number}  Float Floating point number
    * @example
    * <div class="norender"><code>
    * // Given the CSV file "mammals.csv" in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   let rows = table.getRows();
    *   let minId = Infinity;
    *   let maxId = -Infinity;
    *   for (let r = 0; r < rows.length; r++) {
    *     let id = rows[r].getNum('id');
    *     minId = min(minId, id);
    *     maxId = min(maxId, id);
    *   }
    *   print('minimum id = ' + minId + ', maximum id = ' + maxId);
    *   describe('no image displayed');
    * }
    * </code></div>
    */},{key:"getNum",value:function(t){var r;if("NaN"===(r="string"==typeof t?parseFloat(this.obj[t]):parseFloat(this.arr[t])).toString())throw"Error: ".concat(this.obj[t]," is NaN (Not a Number)");return r}/**
    *  Retrieves an String value from the TableRow's specified
    *  column. The column may be specified by either its ID or
    *  title.
    *
    *  @method  getString
    *  @param  {String|Integer} column columnName (string) or
    *                                   ID (number)
    *  @return {String}  String
    * @example
    * <div class="norender"><code>
    * // Given the CSV file "mammals.csv" in the project's "assets" folder:
    * //
    * // id,species,name
    * // 0,Capra hircus,Goat
    * // 1,Panthera pardus,Leopard
    * // 2,Equus zebra,Zebra
    *
    * let table;
    *
    * function preload() {
    *   //my table is comma separated value "csv"
    *   //and has a header specifying the columns labels
    *   table = loadTable('assets/mammals.csv', 'csv', 'header');
    * }
    *
    * function setup() {
    *   let rows = table.getRows();
    *   let longest = '';
    *   for (let r = 0; r < rows.length; r++) {
    *     let species = rows[r].getString('species');
    *     if (longest.length < species.length) {
    *       longest = species;
    *     }
    *   }
    *
    *   print('longest: ' + longest);
    *
    *   describe('no image displayed');
    * }
    * </code></div>
    */},{key:"getString",value:function(t){return"string"==typeof t?this.obj[t].toString():this.arr[t].toString()}}]),t}();var u=o.default;n.default=u},{"../core/main":296,"core-js/modules/es.array.index-of":177,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.from-entries":193,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.split":214,"core-js/modules/web.dom-collections.iterator":254}],325:[function(t,r,n){t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.number.constructor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.replace"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.number.constructor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.replace"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}function s(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function l(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function c(t,r,n){return r&&l(t.prototype,r),n&&l(t,n),t}/**
 * XML is a representation of an XML object, able to parse XML code. Use
 * <a href="#/p5/loadXML">loadXML()</a> to load external XML files and create XML objects.
 *
 * @class p5.XML
 * @constructor
 * @example
 * <div class='norender'><code>
 * // The following short XML file called "mammals.xml" is parsed
 * // in the code below.
 * //
 * // <?xml version="1.0"?>
 * // &lt;mammals&gt;
 * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
 * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
 * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
 * // &lt;/mammals&gt;
 *
 * let xml;
 *
 * function preload() {
 *   xml = loadXML('assets/mammals.xml');
 * }
 *
 * function setup() {
 *   let children = xml.getChildren('animal');
 *
 *   for (let i = 0; i < children.length; i++) {
 *     let id = children[i].getNum('id');
 *     let coloring = children[i].getString('species');
 *     let name = children[i].getContent();
 *     print(id + ', ' + coloring + ', ' + name);
 *   }
 *
 *   describe('no image displayed');
 * }
 *
 * // Sketch prints:
 * // 0, Capra hircus, Goat
 * // 1, Panthera pardus, Leopard
 * // 2, Equus zebra, Zebra
 * </code></div>
 */function u(t){for(var r=[],n=0;n<t.length;n++)r.push(new o.default.XML(t[n]));return r}o.default.XML=/*#__PURE__*/function(){function t(r){if(s(this,t),r)this.DOM=r;else{var n=document.implementation.createDocument(null,"doc");this.DOM=n.createElement("root")}}/**
  * Gets a copy of the element's parent. Returns the parent as another
  * <a href="#/p5.XML">p5.XML</a> object.
  *
  * @method getParent
  * @return {p5.XML}   element parent
  * @example
  * <div class='norender'><code>
  * // The following short XML file called "mammals.xml" is parsed
  * // in the code below.
  * //
  * // <?xml version="1.0"?>
  * // &lt;mammals&gt;
  * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
  * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
  * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
  * // &lt;/mammals&gt;
  *
  * let xml;
  *
  * function preload() {
  *   xml = loadXML('assets/mammals.xml');
  * }
  *
  * function setup() {
  *   let children = xml.getChildren('animal');
  *   let parent = children[1].getParent();
  *   print(parent.getName());
  * }
  *
  * // Sketch prints:
  * // mammals
  * </code></div>
  */return c(t,[{key:"getParent",value:function(){return new o.default.XML(this.DOM.parentElement)}/**
    *  Gets the element's full name, which is returned as a String.
    *
    * @method getName
    * @return {String} the name of the node
    * @example&lt;animal
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   print(xml.getName());
    * }
    *
    * // Sketch prints:
    * // mammals
    * </code></div>
    */},{key:"getName",value:function(){return this.DOM.tagName}/**
    * Sets the element's name, which is specified as a String.
    *
    * @method setName
    * @param {String} the new name of the node
    * @example&lt;animal
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   print(xml.getName());
    *   xml.setName('fish');
    *   print(xml.getName());
    * }
    *
    * // Sketch prints:
    * // mammals
    * // fish
    * </code></div>
    */},{key:"setName",value:function(t){var r=this.DOM.innerHTML,n=this.DOM.attributes,o=document.implementation.createDocument(null,"default").createElement(t);o.innerHTML=r;for(var a=0;a<n.length;a++)o.setAttribute(n[a].nodeName,n.nodeValue);this.DOM=o}/**
    * Checks whether or not the element has any children, and returns the result
    * as a boolean.
    *
    * @method hasChildren
    * @return {boolean}
    * @example&lt;animal
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   print(xml.hasChildren());
    * }
    *
    * // Sketch prints:
    * // true
    * </code></div>
    */},{key:"hasChildren",value:function(){return this.DOM.children.length>0}/**
    * Get the names of all of the element's children, and returns the names as an
    * array of Strings. This is the same as looping through and calling <a href="#/p5.XML/getName">getName()</a>
    * on each child element individually.
    *
    * @method listChildren
    * @return {String[]} names of the children of the element
    * @example&lt;animal
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   print(xml.listChildren());
    * }
    *
    * // Sketch prints:
    * // ["animal", "animal", "animal"]
    * </code></div>
    */},{key:"listChildren",value:function(){for(var t=[],r=0;r<this.DOM.childNodes.length;r++)t.push(this.DOM.childNodes[r].nodeName);return t}/**
    * Returns all of the element's children as an array of <a href="#/p5.XML">p5.XML</a> objects. When
    * the name parameter is specified, then it will return all children that match
    * that name.
    *
    * @method getChildren
    * @param {String} [name] element name
    * @return {p5.XML[]} children of the element
    * @example&lt;animal
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   let animals = xml.getChildren('animal');
    *
    *   for (let i = 0; i < animals.length; i++) {
    *     print(animals[i].getContent());
    *   }
    * }
    *
    * // Sketch prints:
    * // "Goat"
    * // "Leopard"
    * // "Zebra"
    * </code></div>
    */},{key:"getChildren",value:function(t){return t?u(this.DOM.getElementsByTagName(t)):u(this.DOM.children)}/**
    * Returns the first of the element's children that matches the name parameter
    * or the child of the given index.It returns undefined if no matching
    * child is found.
    *
    * @method getChild
    * @param {String|Integer} name element name or index
    * @return {p5.XML}
    * @example&lt;animal
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   let firstChild = xml.getChild('animal');
    *   print(firstChild.getContent());
    * }
    *
    * // Sketch prints:
    * // "Goat"
    * </code></div>
    * <div class='norender'><code>
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   let secondChild = xml.getChild(1);
    *   print(secondChild.getContent());
    * }
    *
    * // Sketch prints:
    * // "Leopard"
    * </code></div>
    */},{key:"getChild",value:function(t){if("string"!=typeof t)return new o.default.XML(this.DOM.children[t]);var r=!0,n=!1,a=void 0;try{for(var s,l=this.DOM.children[Symbol.iterator]();!(r=(s=l.next()).done);r=!0){var c=s.value;if(c.tagName===t)return new o.default.XML(c)}}catch(t){n=!0,a=t}finally{try{r||null==l.return||l.return()}finally{if(n)throw a}}}/**
    * Appends a new child to the element. The child can be specified with
    * either a String, which will be used as the new tag's name, or as a
    * reference to an existing <a href="#/p5.XML">p5.XML</a> object.
    * A reference to the newly created child is returned as an <a href="#/p5.XML">p5.XML</a> object.
    *
    * @method addChild
    * @param {p5.XML} node a <a href="#/p5.XML">p5.XML</a> Object which will be the child to be added
    * @example
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   let child = new p5.XML();
    *   child.setName('animal');
    *   child.setAttribute('id', '3');
    *   child.setAttribute('species', 'Ornithorhynchus anatinus');
    *   child.setContent('Platypus');
    *   xml.addChild(child);
    *
    *   let animals = xml.getChildren('animal');
    *   print(animals[animals.length - 1].getContent());
    * }
    *
    * // Sketch prints:
    * // "Goat"
    * // "Leopard"
    * // "Zebra"
    * </code></div>
    */},{key:"addChild",value:function(t){t instanceof o.default.XML&&this.DOM.appendChild(t.DOM)}/**
    * Removes the element specified by name or index.
    *
    * @method removeChild
    * @param {String|Integer} name element name or index
    * @example
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   xml.removeChild('animal');
    *   let children = xml.getChildren();
    *   for (let i = 0; i < children.length; i++) {
    *     print(children[i].getContent());
    *   }
    * }
    *
    * // Sketch prints:
    * // "Leopard"
    * // "Zebra"
    * </code></div>
    * <div class='norender'><code>
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   xml.removeChild(1);
    *   let children = xml.getChildren();
    *   for (let i = 0; i < children.length; i++) {
    *     print(children[i].getContent());
    *   }
    * }
    *
    * // Sketch prints:
    * // "Goat"
    * // "Zebra"
    * </code></div>
    */},{key:"removeChild",value:function(t){var r=-1;if("string"==typeof t){for(var n=0;n<this.DOM.children.length;n++)if(this.DOM.children[n].tagName===t){r=n;break}}else r=t;-1!==r&&this.DOM.removeChild(this.DOM.children[r])}/**
    * Counts the specified element's number of attributes, returned as an Number.
    *
    * @method getAttributeCount
    * @return {Integer}
    * @example
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   let firstChild = xml.getChild('animal');
    *   print(firstChild.getAttributeCount());
    * }
    *
    * // Sketch prints:
    * // 2
    * </code></div>
    */},{key:"getAttributeCount",value:function(){return this.DOM.attributes.length}/**
    * Gets all of the specified element's attributes, and returns them as an
    * array of Strings.
    *
    * @method listAttributes
    * @return {String[]} an array of strings containing the names of attributes
    * @example
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   let firstChild = xml.getChild('animal');
    *   print(firstChild.listAttributes());
    * }
    *
    * // Sketch prints:
    * // ["id", "species"]
    * </code></div>
    */},{key:"listAttributes",value:function(){var t=[],r=!0,n=!1,o=void 0;try{for(var a,s=this.DOM.attributes[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var l=a.value;t.push(l.nodeName)}}catch(t){n=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(n)throw o}}return t}/**
    *  Checks whether or not an element has the specified attribute.
    *
    * @method hasAttribute
    * @param {String} the attribute to be checked
    * @return {boolean} true if attribute found else false
    * @example
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   let firstChild = xml.getChild('animal');
    *   print(firstChild.hasAttribute('species'));
    *   print(firstChild.hasAttribute('color'));
    * }
    *
    * // Sketch prints:
    * // true
    * // false
    * </code></div>
    */},{key:"hasAttribute",value:function(t){var r={},n=!0,o=!1,a=void 0;try{for(var s,l=this.DOM.attributes[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){var c=s.value;r[c.nodeName]=c.nodeValue}}catch(t){o=!0,a=t}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}return!!r[t]}/**
    * Returns an attribute value of the element as an Number. If the defaultValue
    * parameter is specified and the attribute doesn't exist, then defaultValue
    * is returned. If no defaultValue is specified and the attribute doesn't
    * exist, the value 0 is returned.
    *
    * @method getNum
    * @param {String} name            the non-null full name of the attribute
    * @param {Number} [defaultValue]  the default value of the attribute
    * @return {Number}
    * @example
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   let firstChild = xml.getChild('animal');
    *   print(firstChild.getNum('id'));
    * }
    *
    * // Sketch prints:
    * // 0
    * </code></div>
    */},{key:"getNum",value:function(t,r){var n={},o=!0,a=!1,s=void 0;try{for(var l,c=this.DOM.attributes[Symbol.iterator]();!(o=(l=c.next()).done);o=!0){var u=l.value;n[u.nodeName]=u.nodeValue}}catch(t){a=!0,s=t}finally{try{o||null==c.return||c.return()}finally{if(a)throw s}}return Number(n[t])||r||0}/**
    * Returns an attribute value of the element as an String. If the defaultValue
    * parameter is specified and the attribute doesn't exist, then defaultValue
    * is returned. If no defaultValue is specified and the attribute doesn't
    * exist, null is returned.
    *
    * @method getString
    * @param {String} name            the non-null full name of the attribute
    * @param {Number} [defaultValue]  the default value of the attribute
    * @return {String}
    * @example
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   let firstChild = xml.getChild('animal');
    *   print(firstChild.getString('species'));
    * }
    *
    * // Sketch prints:
    * // "Capra hircus"
    * </code></div>
    */},{key:"getString",value:function(t,r){var n={},o=!0,a=!1,s=void 0;try{for(var l,c=this.DOM.attributes[Symbol.iterator]();!(o=(l=c.next()).done);o=!0){var u=l.value;n[u.nodeName]=u.nodeValue}}catch(t){a=!0,s=t}finally{try{o||null==c.return||c.return()}finally{if(a)throw s}}return n[t]?String(n[t]):r||null}/**
    * Sets the content of an element's attribute. The first parameter specifies
    * the attribute name, while the second specifies the new content.
    *
    * @method setAttribute
    * @param {String} name            the full name of the attribute
    * @param {Number|String|Boolean} value  the value of the attribute
    * @example
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   let firstChild = xml.getChild('animal');
    *   print(firstChild.getString('species'));
    *   firstChild.setAttribute('species', 'Jamides zebra');
    *   print(firstChild.getString('species'));
    * }
    *
    * // Sketch prints:
    * // "Capra hircus"
    * // "Jamides zebra"
    * </code></div>
    */},{key:"setAttribute",value:function(t,r){this.DOM.setAttribute(t,r)}/**
    * Returns the content of an element. If there is no such content,
    * defaultValue is returned if specified, otherwise null is returned.
    *
    * @method getContent
    * @param {String} [defaultValue] value returned if no content is found
    * @return {String}
    * @example
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   let firstChild = xml.getChild('animal');
    *   print(firstChild.getContent());
    * }
    *
    * // Sketch prints:
    * // "Goat"
    * </code></div>
    */},{key:"getContent",value:function(t){var r;return(r=(r=this.DOM.textContent).replace(/\s\s+/g,","))||t||null}/**
    * Sets the element's content.
    *
    * @method setContent
    * @param {String} text the new content
    * @example
    * <div class='norender'><code>
    * // The following short XML file called "mammals.xml" is parsed
    * // in the code below.
    * //
    * // <?xml version="1.0"?>
    * // &lt;mammals&gt;
    * //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;
    * //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;
    * //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;
    * // &lt;/mammals&gt;
    *
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   let firstChild = xml.getChild('animal');
    *   print(firstChild.getContent());
    *   firstChild.setContent('Mountain Goat');
    *   print(firstChild.getContent());
    * }
    *
    * // Sketch prints:
    * // "Goat"
    * // "Mountain Goat"
    * </code></div>
    */},{key:"setContent",value:function(t){this.DOM.children.length||(this.DOM.textContent=t)}/**
    * Serializes the element into a string. This function is useful for preparing
    * the content to be sent over a http request or saved to file.
    *
    * @method serialize
    * @return {String} Serialized string of the element
    * @example
    * <div class='norender'><code>
    * let xml;
    *
    * function preload() {
    *   xml = loadXML('assets/mammals.xml');
    * }
    *
    * function setup() {
    *   print(xml.serialize());
    * }
    *
    * // Sketch prints:
    * // <mammals>
    * //   <animal id="0" species="Capra hircus">Goat</animal>
    * //   <animal id="1" species="Panthera pardus">Leopard</animal>
    * //   <animal id="2" species="Equus zebra">Zebra</animal>
    * // </mammals>
    * </code></div>
    */},{key:"serialize",value:function(){return new XMLSerializer().serializeToString(this.DOM)}}]),t}();var p=o.default;n.default=p},{"../core/main":296,"core-js/modules/es.array.iterator":178,"core-js/modules/es.number.constructor":189,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.replace":212,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/web.dom-collections.iterator":254}],326:[function(t,r,n){t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.math.hypot"),t("core-js/modules/es.number.constructor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.math.hypot"),t("core-js/modules/es.number.constructor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Math
 * @submodule Calculation
 * @for p5
 * @requires core
 */// This won't under- or overflow in intermediate steps
// https://en.wikipedia.org/wiki/Hypot
function s(t,r,n){// Use the native implementation if it's available
if("function"==typeof Math.hypot)return Math.hypot.apply(null,arguments);for(var o=arguments.length,a=[],s=0,l=0;l<o;l++){var c=arguments[l];if((c=+c)==1/0||c===-1/0)return 1/0;(c=Math.abs(c))>s&&(s=c),a[l]=c}0===s&&(s=1);for(var u=0,p=0,d=0;d<o;d++){var m=a[d]/s,f=m*m-p,h=u+f;p=h-u-f,u=h}return Math.sqrt(u)*s}/**
 * Calculates the fractional part of a number.
 *
 * @method fract
 * @param {Number} num Number whose fractional part needs to be found out
 * @returns {Number} fractional part of x, i.e, {x}
 * @example
 * <div><code>
 * text(7345.73472742, 10, 25);
 * text(fract(7345.73472742), 10, 75);
 * describe(`first row having a number and the second having
 *   the fractional part of the number`);
 * </code></div>
 *
 * <div><code>
 * text(1.4215e-15, 10, 25);
 * text(fract(1.4215e-15), 10, 75);
 * describe(`first row having a number expressed in scientific
 *   notation and the second having the fractional part of the number`);
 * </code></div>
 *//**
 * Calculates the absolute value (magnitude) of a number. Maps to Math.abs().
 * The absolute value of a number is always positive.
 *
 * @method abs
 * @param  {Number} n number to compute
 * @return {Number}   absolute value of given number
 * @example
 * <div class = "norender"><code>
 * function setup() {
 *   let x = -3;
 *   let y = abs(x);
 *
 *   print(x); // -3
 *   print(y); // 3
 *
 *   describe('no image displayed');
 * }
 * </code></div>
 */o.default.prototype.abs=Math.abs,/**
 * Calculates the closest int value that is greater than or equal to the
 * value of the parameter. Maps to Math.ceil(). For example, ceil(9.03)
 * returns the value 10.
 *
 * @method ceil
 * @param  {Number} n number to round up
 * @return {Integer}   rounded up number
 * @example
 * <div><code>
 * function draw() {
 *   background(200);
 *   // map, mouseX between 0 and 5.
 *   let ax = map(mouseX, 0, 100, 0, 5);
 *   let ay = 66;
 *
 *   //Get the ceiling of the mapped number.
 *   let bx = ceil(map(mouseX, 0, 100, 0, 5));
 *   let by = 33;
 *
 *   // Multiply the mapped numbers by 20 to more easily
 *   // see the changes.
 *   stroke(0);
 *   fill(0);
 *   line(0, ay, ax * 20, ay);
 *   line(0, by, bx * 20, by);
 *
 *   // Reformat the float returned by map and draw it.
 *   noStroke();
 *   text(nfc(ax, 2), ax, ay - 5);
 *   text(nfc(bx, 1), bx, by - 5);
 *
 *   describe(`2 horizontal lines & number sets. increase with
 *     mouse x. bottom to 2 decimals`);
 * }
 * </code></div>
 */o.default.prototype.ceil=Math.ceil,/**
 * Constrains a value between a minimum and maximum value.
 *
 * @method constrain
 * @param  {Number} n    number to constrain
 * @param  {Number} low  minimum limit
 * @param  {Number} high maximum limit
 * @return {Number}      constrained number
 * @example
 * <div><code>
 * function draw() {
 *   background(200);
 *
 *   let leftWall = 25;
 *   let rightWall = 75;
 *
 *   // xm is just the mouseX, while
 *   // xc is the mouseX, but constrained
 *   // between the leftWall and rightWall!
 *   let xm = mouseX;
 *   let xc = constrain(mouseX, leftWall, rightWall);
 *
 *   // Draw the walls.
 *   stroke(150);
 *   line(leftWall, 0, leftWall, height);
 *   line(rightWall, 0, rightWall, height);
 *
 *   // Draw xm and xc as circles.
 *   noStroke();
 *   fill(150);
 *   ellipse(xm, 33, 9, 9); // Not Constrained
 *   fill(0);
 *   ellipse(xc, 66, 9, 9); // Constrained
 *
 *   describe(`2 vertical lines. 2 ellipses move with mouse X,
 *     1 does not move past lines`);
 * }
 * </code></div>
 */o.default.prototype.constrain=function(t,r,n){return o.default._validateParameters("constrain",arguments),Math.max(Math.min(t,n),r)},/**
 * Calculates the distance between two points, in either two or three dimensions.
 * If you looking for distance between two vectors see <a herf="#/p5.Vector/dist">p5.Vector.dist()</a>
 *
 * @method dist
 * @param  {Number} x1 x-coordinate of the first point
 * @param  {Number} y1 y-coordinate of the first point
 * @param  {Number} x2 x-coordinate of the second point
 * @param  {Number} y2 y-coordinate of the second point
 * @return {Number}    distance between the two points
 *
 * @example
 * <div><code>
 * // Move your mouse inside the canvas to see the
 * // change in distance between two points!
 * function draw() {
 *   background(200);
 *   fill(0);
 *
 *   let x1 = 10;
 *   let y1 = 90;
 *   let x2 = mouseX;
 *   let y2 = mouseY;
 *
 *   line(x1, y1, x2, y2);
 *   ellipse(x1, y1, 7, 7);
 *   ellipse(x2, y2, 7, 7);
 *
 *   // d is the length of the line
 *   // the distance from point 1 to point 2.
 *   let d = dist(x1, y1, x2, y2);
 *
 *   // Let's write d along the line we are drawing!
 *   push();
 *   translate((x1 + x2) / 2, (y1 + y2) / 2);
 *   rotate(atan2(y2 - y1, x2 - x1));
 *   text(nfc(d, 1), 0, -5);
 *   pop();
 *   // Fancy!
 *
 *   describe(`2 ellipses joined by line. 1 ellipse moves with
 *     mouse X&Y. Distance displayed.`);
 * }
 * </code></div>
 *//**
 * @method dist
 * @param  {Number} x1
 * @param  {Number} y1
 * @param  {Number} z1 z-coordinate of the first point
 * @param  {Number} x2
 * @param  {Number} y2
 * @param  {Number} z2 z-coordinate of the second point
 * @return {Number}    distance between the two points
 */o.default.prototype.dist=function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return(o.default._validateParameters("dist",r),4===r.length)?s(r[2]-r[0],r[3]-r[1]):6===r.length?s(r[3]-r[0],r[4]-r[1],r[5]-r[2]):void 0},/**
 * Returns Euler's number e (2.71828...) raised to the power of the n
 * parameter. Maps to Math.exp().
 *
 * @method exp
 * @param  {Number} n exponent to raise
 * @return {Number}   e^n
 * @example
 * <div><code>
 * function draw() {
 *   background(200);
 *
 *   // Compute the exp() function with a value between 0 and 2
 *   let xValue = map(mouseX, 0, width, 0, 2);
 *   let yValue = exp(xValue);
 *
 *   let y = map(yValue, 0, 8, height, 0);
 *
 *   let legend = 'exp (' + nfc(xValue, 3) + ')\n= ' + nf(yValue, 1, 4);
 *   stroke(150);
 *   line(mouseX, y, mouseX, height);
 *   fill(0);
 *   text(legend, 5, 15);
 *   noStroke();
 *   ellipse(mouseX, y, 7, 7);
 *
 *   // Draw the exp(x) curve,
 *   // over the domain of x from 0 to 2
 *   noFill();
 *   stroke(0);
 *   beginShape();
 *   for (let x = 0; x < width; x++) {
 *     xValue = map(x, 0, width, 0, 2);
 *     yValue = exp(xValue);
 *     y = map(yValue, 0, 8, height, 0);
 *     vertex(x, y);
 *   }
 *
 *   endShape();
 *   line(0, 0, 0, height);
 *   line(0, height - 1, width, height - 1);
 *
 *   describe('ellipse moves along a curve with mouse x. e^n displayed.');
 * }
 * </code></div>
 */o.default.prototype.exp=Math.exp,/**
 * Calculates the closest int value that is less than or equal to the
 * value of the parameter. Maps to Math.floor().
 *
 * @method floor
 * @param  {Number} n number to round down
 * @return {Integer}  rounded down number
 * @example
 * <div><code>
 * function draw() {
 *   background(200);
 *   //map, mouseX between 0 and 5.
 *   let ax = map(mouseX, 0, 100, 0, 5);
 *   let ay = 66;
 *
 *   //Get the floor of the mapped number.
 *   let bx = floor(map(mouseX, 0, 100, 0, 5));
 *   let by = 33;
 *
 *   // Multiply the mapped numbers by 20 to more easily
 *   // see the changes.
 *   stroke(0);
 *   fill(0);
 *   line(0, ay, ax * 20, ay);
 *   line(0, by, bx * 20, by);
 *
 *   // Reformat the float returned by map and draw it.
 *   noStroke();
 *   text(nfc(ax, 2), ax, ay - 5);
 *   text(nfc(bx, 1), bx, by - 5);
 *
 *   describe(`2 horizontal lines & number sets.
 *     increase with mouse x. bottom to 2 decimals`);
 * }
 * </code></div>
 */o.default.prototype.floor=Math.floor,/**
 * Calculates a number between two numbers at a specific increment. The amt
 * parameter is the amount to interpolate between the two values where 0.0
 * is equal to the first point, 0.1 is very near the first point, 0.5 is
 * half-way in between, and 1.0 is equal to the second point. If the
 * value of amt is more than 1.0 or less than 0.0, the number will be
 * calculated accordingly in the ratio of the two given numbers. The lerp()
 * function is convenient for creating motion along a straight
 * path and for drawing dotted lines.
 *
 * @method lerp
 * @param  {Number} start first value
 * @param  {Number} stop  second value
 * @param  {Number} amt   number
 * @return {Number}       lerped value
 * @example
 * <div><code>
 * function setup() {
 *   background(200);
 *   let a = 20;
 *   let b = 80;
 *   let c = lerp(a, b, 0.2);
 *   let d = lerp(a, b, 0.5);
 *   let e = lerp(a, b, 0.8);
 *
 *   let y = 50;
 *
 *   strokeWeight(5);
 *   stroke(0); // Draw the original points in black
 *   point(a, y);
 *   point(b, y);
 *
 *   stroke(100); // Draw the lerp points in gray
 *   point(c, y);
 *   point(d, y);
 *   point(e, y);
 *
 *   describe(`5 points horizontally staggered mid-canvas.
 *     mid 3 are grey, outer black`);
 * }
 * </code></div>
 */o.default.prototype.lerp=function(t,r,n){return o.default._validateParameters("lerp",arguments),n*(r-t)+t},/**
 * Calculates the natural logarithm (the base-e logarithm) of a number. This
 * function expects the n parameter to be a value greater than 0.0. Maps to
 * Math.log().
 *
 * @method log
 * @param  {Number} n number greater than 0
 * @return {Number}   natural logarithm of n
 * @example
 * <div><code>
 * function draw() {
 *   background(200);
 *   let maxX = 2.8;
 *   let maxY = 1.5;
 *
 *   // Compute the natural log of a value between 0 and maxX
 *   let xValue = map(mouseX, 0, width, 0, maxX);
 *   let yValue, y;
 *   if (xValue > 0) {
    // Cannot take the log of a negative number.
 *     yValue = log(xValue);
 *     y = map(yValue, -maxY, maxY, height, 0);
 *
 *     // Display the calculation occurring.
 *     let legend = 'log(' + nf(xValue, 1, 2) + ')\n= ' + nf(yValue, 1, 3);
 *     stroke(150);
 *     line(mouseX, y, mouseX, height);
 *     fill(0);
 *     text(legend, 5, 15);
 *     noStroke();
 *     ellipse(mouseX, y, 7, 7);
 *   }
 *
 *   // Draw the log(x) curve,
 *   // over the domain of x from 0 to maxX
 *   noFill();
 *   stroke(0);
 *   beginShape();
 *   for (let x = 0; x < width; x++) {
 *     xValue = map(x, 0, width, 0, maxX);
 *     yValue = log(xValue);
 *     y = map(yValue, -maxY, maxY, height, 0);
 *     vertex(x, y);
 *   }
 *   endShape();
 *   line(0, 0, 0, height);
 *   line(0, height / 2, width, height / 2);
 *
 *   describe(`ellipse moves along a curve with mouse x.
 *     natural logarithm of n displayed.`);
 * }
 * </code></div>
 */o.default.prototype.log=Math.log,/**
 * Calculates the magnitude (or length) of a vector. A vector is a direction
 * in space commonly used in computer graphics and linear algebra. Because it
 * has no "start" position, the magnitude of a vector can be thought of as
 * the distance from the coordinate 0,0 to its x,y value. Therefore, <a href="#/p5/mag">mag()</a> is
 * a shortcut for writing dist(0, 0, x, y).
 *
 * @method mag
 * @param  {Number} a first value
 * @param  {Number} b second value
 * @return {Number}   magnitude of vector from (0,0) to (a,b)
 * @example
 * <div><code>
 * function setup() {
 *   let x1 = 20;
 *   let x2 = 80;
 *   let y1 = 30;
 *   let y2 = 70;
 *
 *   line(0, 0, x1, y1);
 *   print(mag(x1, y1)); // Prints "36.05551275463989"
 *   line(0, 0, x2, y1);
 *   print(mag(x2, y1)); // Prints "85.44003745317531"
 *   line(0, 0, x1, y2);
 *   print(mag(x1, y2)); // Prints "72.80109889280519"
 *   line(0, 0, x2, y2);
 *   print(mag(x2, y2)); // Prints "106.3014581273465"
 *
 *   describe('4 lines of different length radiate from top left of canvas.');
 * }
 * </code></div>
 */o.default.prototype.mag=function(t,r){return o.default._validateParameters("mag",arguments),s(t,r)},/**
 * Re-maps a number from one range to another.
 *
 * In the first example above, the number 25 is converted from a value in the
 * range of 0 to 100 into a value that ranges from the left edge of the
 * window (0) to the right edge (width).
 *
 * @method map
 * @param  {Number} value  the incoming value to be converted
 * @param  {Number} start1 lower bound of the value's current range
 * @param  {Number} stop1  upper bound of the value's current range
 * @param  {Number} start2 lower bound of the value's target range
 * @param  {Number} stop2  upper bound of the value's target range
 * @param  {Boolean} [withinBounds] constrain the value to the newly mapped range
 * @return {Number}        remapped number
 * @example
 *   <div><code>
 * let value = 25;
 * let m = map(value, 0, 100, 0, width);
 * ellipse(m, 50, 10, 10);
 * describe('10×10 white ellipse with in mid left canvas');
</code></div>
 *
 *   <div><code>
 * function setup() {
 *   noStroke();
 * }
 *
 * function draw() {
 *   background(204);
 *   let x1 = map(mouseX, 0, width, 25, 75);
 *   ellipse(x1, 25, 25, 25);
 *   //This ellipse is constrained to the 0-100 range
 *   //after setting withinBounds to true
 *   let x2 = map(mouseX, 0, width, 0, 100, true);
 *   ellipse(x2, 75, 25, 25);
 *
 *   describe(`Two 25×25 white ellipses move with mouse x.
 *     Bottom has more range from X`);
 * }
</code></div>
 */o.default.prototype.map=function(t,r,n,a,s,l){o.default._validateParameters("map",arguments);var c=(t-r)/(n-r)*(s-a)+a;return l?a<s?this.constrain(c,a,s):this.constrain(c,s,a):c},/**
 * Determines the largest value in a sequence of numbers, and then returns
 * that value. <a href="#/p5/max">max()</a> accepts any number of Number parameters, or an Array
 * of any length.
 *
 * @method max
 * @param  {Number} n0 Number to compare
 * @param  {Number} n1 Number to compare
 * @return {Number}             maximum Number
 * @example
 * <div><code>
 * function setup() {
 *   // Change the elements in the array and run the sketch
 *   // to show how max() works!
 *   let numArray = [2, 1, 5, 4, 8, 9];
 *   fill(0);
 *   noStroke();
 *   text('Array Elements', 0, 10);
 *   // Draw all numbers in the array
 *   let spacing = 15;
 *   let elemsY = 25;
 *   for (let i = 0; i < numArray.length; i++) {
 *     text(numArray[i], i * spacing, elemsY);
 *   }
 *   let maxX = 33;
 *   let maxY = 80;
 *   // Draw the Maximum value in the array.
 *   textSize(32);
 *   text(max(numArray), maxX, maxY);
 *
 *   describe(`Small text at top reads: Array Elements 2 1 5 4 8 9.
 *     Large text at center: 9`);
 * }
 * </code></div>
 *//**
 * @method max
 * @param  {Number[]} nums Numbers to compare
 * @return {Number}
 */o.default.prototype.max=function(){for(var t=function(t){var r=-1/0,n=!0,o=!1,a=void 0;try{for(var s,l=t[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){var c=s.value;r=c>r?c:r}}catch(t){o=!0,a=t}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}return r},r=arguments.length,n=Array(r),o=0;o<r;o++)n[o]=arguments[o];return t(n[0]instanceof Array?n[0]:n)},/**
 * Determines the smallest value in a sequence of numbers, and then returns
 * that value. <a href="#/p5/min">min()</a> accepts any number of Number parameters, or an Array
 * of any length.
 *
 * @method min
 * @param  {Number} n0 Number to compare
 * @param  {Number} n1 Number to compare
 * @return {Number}             minimum Number
 * @example
 * <div><code>
 * function setup() {
 *   // Change the elements in the array and run the sketch
 *   // to show how min() works!
 *   let numArray = [2, 1, 5, 4, 8, 9];
 *   fill(0);
 *   noStroke();
 *   text('Array Elements', 0, 10);
 *   // Draw all numbers in the array
 *   let spacing = 15;
 *   let elemsY = 25;
 *   for (let i = 0; i < numArray.length; i++) {
 *     text(numArray[i], i * spacing, elemsY);
 *   }
 *   let maxX = 33;
 *   let maxY = 80;
 *   // Draw the Minimum value in the array.
 *   textSize(32);
 *   text(min(numArray), maxX, maxY);
 *
 *   describe(`Small text at top reads: Array Elements 2 1 5 4 8 9.
 *     Large text at center: 1`);
 * }
 * </code></div>
 *//**
 * @method min
 * @param  {Number[]} nums Numbers to compare
 * @return {Number}
 */o.default.prototype.min=function(){for(var t=function(t){var r=1/0,n=!0,o=!1,a=void 0;try{for(var s,l=t[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){var c=s.value;r=c<r?c:r}}catch(t){o=!0,a=t}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}return r},r=arguments.length,n=Array(r),o=0;o<r;o++)n[o]=arguments[o];return t(n[0]instanceof Array?n[0]:n)},/**
 * Normalizes a number from another range into a value between 0 and 1.
 * Identical to map(value, low, high, 0, 1).
 * Numbers outside of the range are not clamped to 0 and 1, because
 * out-of-range values are often intentional and useful. (See the example above.)
 *
 * @method norm
 * @param  {Number} value incoming value to be normalized
 * @param  {Number} start lower bound of the value's current range
 * @param  {Number} stop  upper bound of the value's current range
 * @return {Number}       normalized number
 * @example
 * <div><code>
 * function draw() {
 *   background(200);
 *   let currentNum = mouseX;
 *   let lowerBound = 0;
 *   let upperBound = width; //100;
 *   let normalized = norm(currentNum, lowerBound, upperBound);
 *   let lineY = 70;
 *   stroke(3);
 *   line(0, lineY, width, lineY);
 *   //Draw an ellipse mapped to the non-normalized value.
 *   noStroke();
 *   fill(50);
 *   let s = 7; // ellipse size
 *   ellipse(currentNum, lineY, s, s);
 *
 *   // Draw the guide
 *   let guideY = lineY + 15;
 *   text('0', 0, guideY);
 *   textAlign(RIGHT);
 *   text('100', width, guideY);
 *
 *   // Draw the normalized value
 *   textAlign(LEFT);
 *   fill(0);
 *   textSize(32);
 *   let normalY = 40;
 *   let normalX = 20;
 *   text(normalized, normalX, normalY);
 *
 *   describe(`ellipse moves with mouse. 0 shown left, 100 right,
 *     and updating values center`);
 * }
 * </code></div>
 */o.default.prototype.norm=function(t,r,n){return o.default._validateParameters("norm",arguments),this.map(t,r,n,0,1)},/**
 * Facilitates exponential expressions. The <a href="#/p5/pow">pow()</a> function is an efficient
 * way of multiplying numbers by themselves (or their reciprocals) in large
 * quantities. For example, pow(3, 5) is equivalent to the expression
 * 3 &times; 3 &times; 3 &times; 3 &times; 3 and pow(3, -5) is equivalent to 1 /
 * 3 &times; 3 &times; 3 &times; 3 &times; 3. Maps to
 * Math.pow().
 *
 * @method pow
 * @param  {Number} n base of the exponential expression
 * @param  {Number} e power by which to raise the base
 * @return {Number}   n^e
 * @example
 * <div><code>
 * function setup() {
 *   //Exponentially increase the size of an ellipse.
 *   let eSize = 3; // Original Size
 *   let eLoc = 10; // Original Location
 *
 *   ellipse(eLoc, eLoc, eSize, eSize);
 *
 *   ellipse(eLoc * 2, eLoc * 2, pow(eSize, 2), pow(eSize, 2));
 *
 *   ellipse(eLoc * 4, eLoc * 4, pow(eSize, 3), pow(eSize, 3));
 *
 *   ellipse(eLoc * 8, eLoc * 8, pow(eSize, 4), pow(eSize, 4));
 *
 *   describe('small to large ellipses radiating from top left of canvas');
 * }
 * </code></div>
 */o.default.prototype.pow=Math.pow,/**
 * Calculates the integer closest to the n parameter. For example,
 * round(133.8) returns the value 134. Maps to Math.round().
 *
 * @method round
 * @param  {Number} n number to round
 * @param  {Number} [decimals] number of decimal places to round to, default is 0
 * @return {Integer}  rounded number
 * @example
 * <div><code>
 * let x = round(3.7);
 * text(x, width / 2, height / 2);
 * describe('"4" written in middle of canvas');
 * </code></div>
 * <div><code>
 * let x = round(12.782383, 2);
 * text(x, width / 2, height / 2);
 * describe('"12.78" written in middle of canvas');
 * </code></div>
 * <div><code>
 * function draw() {
 *   background(200);
 *   //map, mouseX between 0 and 5.
 *   let ax = map(mouseX, 0, 100, 0, 5);
 *   let ay = 66;
 *
 *   // Round the mapped number.
 *   let bx = round(map(mouseX, 0, 100, 0, 5));
 *   let by = 33;
 *
 *   // Multiply the mapped numbers by 20 to more easily
 *   // see the changes.
 *   stroke(0);
 *   fill(0);
 *   line(0, ay, ax * 20, ay);
 *   line(0, by, bx * 20, by);
 *
 *   // Reformat the float returned by map and draw it.
 *   noStroke();
 *   text(nfc(ax, 2), ax, ay - 5);
 *   text(nfc(bx, 1), bx, by - 5);
 *
 *   describe('two horizontal lines rounded values displayed on top.');
 * }
 * </code></div>
 */o.default.prototype.round=function(t,r){if(!r)return Math.round(t);var n=Math.pow(10,r);return Math.round(t*n)/n},/**
 * Squares a number (multiplies a number by itself). The result is always a
 * positive number, as multiplying two negative numbers always yields a
 * positive result. For example, -1 * -1 = 1.
 *
 * @method sq
 * @param  {Number} n number to square
 * @return {Number}   squared number
 * @example
 * <div><code>
 * function draw() {
 *   background(200);
 *   let eSize = 7;
 *   let x1 = map(mouseX, 0, width, 0, 10);
 *   let y1 = 80;
 *   let x2 = sq(x1);
 *   let y2 = 20;
 *
 *   // Draw the non-squared.
 *   line(0, y1, width, y1);
 *   ellipse(x1, y1, eSize, eSize);
 *
 *   // Draw the squared.
 *   line(0, y2, width, y2);
 *   ellipse(x2, y2, eSize, eSize);
 *
 *   // Draw dividing line.
 *   stroke(100);
 *   line(0, height / 2, width, height / 2);
 *
 *   // Draw text.
 *   let spacing = 15;
 *   noStroke();
 *   fill(0);
 *   text('x = ' + x1, 0, y1 + spacing);
 *   text('sq(x) = ' + x2, 0, y2 + spacing);
 *
 *   describe(`horizontal center line squared values displayed on
 *     top and regular on bottom.`);
 * }
 * </code></div>
 */o.default.prototype.sq=function(t){return t*t},/**
 * Calculates the square root of a number. The square root of a number is
 * always positive, even though there may be a valid negative root. The
 * square root s of number a is such that s*s = a. It is the opposite of
 * squaring. Maps to Math.sqrt().
 *
 * @method sqrt
 * @param  {Number} n non-negative number to square root
 * @return {Number}   square root of number
 * @example
 * <div><code>
 * function draw() {
 *   background(200);
 *   let eSize = 7;
 *   let x1 = mouseX;
 *   let y1 = 80;
 *   let x2 = sqrt(x1);
 *   let y2 = 20;
 *
 *   // Draw the non-squared.
 *   line(0, y1, width, y1);
 *   ellipse(x1, y1, eSize, eSize);
 *
 *   // Draw the squared.
 *   line(0, y2, width, y2);
 *   ellipse(x2, y2, eSize, eSize);
 *
 *   // Draw dividing line.
 *   stroke(100);
 *   line(0, height / 2, width, height / 2);
 *
 *   // Draw text.
 *   noStroke();
 *   fill(0);
 *   let spacing = 15;
 *   text('x = ' + x1, 0, y1 + spacing);
 *   text('sqrt(x) = ' + x2, 0, y2 + spacing);
 *
 *   describe(`horizontal center line squareroot values displayed on
 *     top and regular on bottom.`);
 * }
 * </code></div>
 */o.default.prototype.sqrt=Math.sqrt,o.default.prototype.fract=function(t){o.default._validateParameters("fract",arguments);var r=0,n=Number(t);if(isNaN(n)||Math.abs(n)===1/0)return n;if(n<0&&(n=-n,r=1),String(n).includes(".")&&!String(n).includes("e")){var a=String(n);return Math.abs(r-(a=Number("0"+a.slice(a.indexOf(".")))))}return n<1?Math.abs(r-n):0};var l=o.default;n.default=l},{"../core/main":296,"core-js/modules/es.array.includes":176,"core-js/modules/es.array.index-of":177,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.map":181,"core-js/modules/es.array.slice":182,"core-js/modules/es.math.hypot":187,"core-js/modules/es.number.constructor":189,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.includes":207,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/web.dom-collections.iterator":254}],327:[function(t,r,n){t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.to-string"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}function s(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function l(t,r,n){return(l=s()?Reflect.construct:function(t,r,n){var o=[null];o.push.apply(o,r);var a=new(Function.bind.apply(t,o));return n&&c(a,n.prototype),a}).apply(null,arguments)}function c(t,r){return(c=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t})(t,r)}/**
 * Creates a new <a href="#/p5.Vector">p5.Vector</a> (the datatype for storing vectors). This provides a
 * two or three-dimensional vector, specifically a Euclidean (also known as
 * geometric) vector. A vector is an entity that has both magnitude and
 * direction.
 *
 * @method createVector
 * @param {Number} [x] x component of the vector
 * @param {Number} [y] y component of the vector
 * @param {Number} [z] z component of the vector
 * @return {p5.Vector}
 * @example
 * <div><code>
 * let v1;
 * function setup() {
 *   createCanvas(100, 100);
 *   stroke(255, 0, 255);
 *   v1 = createVector(width / 2, height / 2);
 * }
 *
 * function draw() {
 *   background(255);
 *   line(v1.x, v1.y, mouseX, mouseY);
 *   describe('draws a line from center of canvas to mouse pointer position.');
 * }
 * </code></div>
 */o.default.prototype.createVector=function(t,r,n){return this instanceof o.default?l(o.default.Vector,[this._fromRadians.bind(this),this._toRadians.bind(this)].concat(Array.prototype.slice.call(arguments))):new o.default.Vector(t,r,n)};var u=o.default;n.default=u},{"../core/main":296,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.slice":182,"core-js/modules/es.object.to-string":198,"core-js/modules/es.reflect.construct":200,"core-js/modules/es.regexp.to-string":204}],328:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o,a=s(t("../core/main"));function s(t){return t&&t.__esModule?t:{default:t}}//////////////////////////////////////////////////////////////
// http://mrl.nyu.edu/~perlin/noise/
// Adapting from PApplet.java
// which was adapted from toxi
// which was adapted from the german demo group farbrausch
// as used in their demo "art": http://www.farb-rausch.de/fr010src.zip
// someday we might consider using "improved noise"
// http://mrl.nyu.edu/~perlin/paper445.pdf
// See: https://github.com/shiffman/The-Nature-of-Code-Examples-p5.js/
//      blob/main/introduction/Noise1D/noise.js
/**
 * @module Math
 * @submodule Noise
 * @for p5
 * @requires core
 */var l=4,c=16,u=8,p=256,d=4095,m=4,f=.5,h=function(t){return .5*(1-Math.cos(t*Math.PI))};/**
 * Returns the Perlin noise value at specified coordinates. Perlin noise is
 * a random sequence generator producing a more naturally ordered, harmonic
 * succession of numbers compared to the standard <a href="#/p5/random">random()</a> function.
 * It was invented by Ken Perlin in the 1980s and been used since in
 * graphical applications to produce procedural textures, natural motion,
 * shapes, terrains etc.<br /><br /> The main difference to the
 * <a href="#/p5/random">random()</a> function is that Perlin noise is defined in an infinite
 * n-dimensional space where each pair of coordinates corresponds to a
 * fixed semi-random value (fixed only for the lifespan of the program; see
 * the <a href="#/p5/noiseSeed">noiseSeed()</a> function). p5.js can compute 1D, 2D and 3D noise,
 * depending on the number of coordinates given. The resulting value will
 * always be between 0.0 and 1.0. The noise value can be animated by moving
 * through the noise space as demonstrated in the example above. The 2nd
 * and 3rd dimensions can also be interpreted as time.<br /><br />The actual
 * noise is structured similar to an audio signal, in respect to the
 * function's use of frequencies. Similar to the concept of harmonics in
 * physics, Perlin noise is computed over several octaves which are added
 * together for the final result. <br /><br />Another way to adjust the
 * character of the resulting sequence is the scale of the input
 * coordinates. As the function works within an infinite space the value of
 * the coordinates doesn't matter as such, only the distance between
 * successive coordinates does (eg. when using <a href="#/p5/noise">noise()</a> within a
 * loop). As a general rule the smaller the difference between coordinates,
 * the smoother the resulting noise sequence will be. Steps of 0.005-0.03
 * work best for most applications, but this will differ depending on use.
 *
 * @method noise
 * @param  {Number} x   x-coordinate in noise space
 * @param  {Number} [y] y-coordinate in noise space
 * @param  {Number} [z] z-coordinate in noise space
 * @return {Number}     Perlin noise value (between 0 and 1) at specified
 *                      coordinates
 * @example
 * <div>
 * <code>
 * let xoff = 0.0;
 *
 * function draw() {
 *   background(204);
 *   xoff = xoff + 0.01;
 *   let n = noise(xoff) * width;
 *   line(n, 0, n, height);
 *   describe(`vertical line moves left to right with updating
 *     noise values.`);
 * }
 * </code>
 * </div>
 * <div>
 * <code>let noiseScale=0.02;
 *
 * function draw() {
 *   background(0);
 *   for (let x=0; x < width; x++) {
 *     let noiseVal = noise((mouseX+x)*noiseScale, mouseY*noiseScale);
 *     stroke(noiseVal*255);
 *     line(x, mouseY+noiseVal*80, x, height);
 *   }
 *   describe(`horizontal wave pattern effected by mouse x-position
 *     & updating noise values.`);
 * }
 * </code>
 * </div>
 */a.default.prototype.noise=function(t){var r,n,a,s,y,g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,v=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(null==o){o=Array(d+1);for(var b=0;b<d+1;b++)o[b]=Math.random()}t<0&&(t=-t),g<0&&(g=-g),v<0&&(v=-v);for(var x=Math.floor(t),j=Math.floor(g),w=Math.floor(v),_=t-x,S=g-j,E=v-w,T=0,M=.5,C=0;C<m;C++){var O=x+(j<<l)+(w<<u);r=h(_),n=h(S),a=o[O&d],a+=r*(o[O+1&d]-a),s=o[O+c&d],s+=r*(o[O+c+1&d]-s),a+=n*(s-a),O+=p,s=o[O&d],s+=r*(o[O+1&d]-s),y=o[O+c&d],y+=r*(o[O+c+1&d]-y),s+=n*(y-s),a+=h(E)*(s-a),T+=a*M,M*=f,x<<=1,j<<=1,S*=2,w<<=1,E*=2,(_*=2)>=1&&(x++,_--),S>=1&&(j++,S--),E>=1&&(w++,E--)}return T},/**
 *
 * Adjusts the character and level of detail produced by the Perlin noise
 * function. Similar to harmonics in physics, noise is computed over
 * several octaves. Lower octaves contribute more to the output signal and
 * as such define the overall intensity of the noise, whereas higher octaves
 * create finer-grained details in the noise sequence.
 *
 * By default, noise is computed over 4 octaves with each octave contributing
 * exactly half as much as its predecessor, starting at 50% strength for the 1st
 * octave. This falloff amount can be changed by adding an additional function
 * parameter. Eg. a falloff factor of 0.75 means each octave will now have
 * 75% impact (25% less) of the previous lower octave. Any value between
 * 0.0 and 1.0 is valid, however, note that values greater than 0.5 might
 * result in greater than 1.0 values returned by <a href="#/p5/noise">noise()</a>.
 *
 * By changing these parameters, the signal created by the <a href="#/p5/noise">noise()</a>
 * function can be adapted to fit very specific needs and characteristics.
 *
 * @method noiseDetail
 * @param {Number} lod number of octaves to be used by the noise
 * @param {Number} falloff falloff factor for each octave
 * @example
 * <div>
 * <code>
 * let noiseVal;
 * let noiseScale = 0.02;
 *
 * function setup() {
 *   createCanvas(100, 100);
 * }
 *
 * function draw() {
 *   background(0);
 *   for (let y = 0; y < height; y++) {
 *     for (let x = 0; x < width / 2; x++) {
 *       noiseDetail(2, 0.2);
 *       noiseVal = noise((mouseX + x) * noiseScale, (mouseY + y) * noiseScale);
 *       stroke(noiseVal * 255);
 *       point(x, y);
 *       noiseDetail(8, 0.65);
 *       noiseVal = noise(
 *         (mouseX + x + width / 2) * noiseScale,
 *         (mouseY + y) * noiseScale
 *       );
 *       stroke(noiseVal * 255);
 *       point(x + width / 2, y);
 *     }
 *   }
 *   describe(`2 vertical grey smokey patterns affected by
 *     mouse x-position and noise.`);
 * }
 * </code>
 * </div>
 */a.default.prototype.noiseDetail=function(t,r){t>0&&(m=t),r>0&&(f=r)},/**
 * Sets the seed value for <a href="#/p5/noise">noise()</a>. By default,
 * <a href="#/p5/noise">noise()</a> produces different results each time
 * the program is run. Set the `seed` parameter to a constant to return
 * the same pseudo-random numbers each time the software is run.
 *
 * @method noiseSeed
 * @param {Number} seed   the seed value
 * @example
 * <div>
 * <code>let xoff = 0.0;
 *
 * function setup() {
 *   noiseSeed(99);
 *   stroke(0, 10);
 * }
 *
 * function draw() {
 *   xoff = xoff + .01;
 *   let n = noise(xoff) * width;
 *   line(n, 0, n, height);
 *   describe(`vertical grey lines drawing in pattern affected by noise.`);
 * }
 * </code>
 * </div>
 */a.default.prototype.noiseSeed=function(t){// Linear Congruential Generator
// Variant of a Lehman Generator
var r=function(){// Set to values from http://en.wikipedia.org/wiki/Numerical_Recipes
// m is basically chosen to be large (as it is the max period)
// and for its relationships to a and c
var t,r,n=4294967296,o=1664525,a=1013904223;// a - 1 should be divisible by m's prime factors
return{setSeed:function(o){// pick a random seed if val is undefined or null
// the >>> 0 casts the seed to an unsigned 32-bit integer
r=t=(null==o?Math.random()*n:o)>>>0},getSeed:function(){return t},rand:function(){// if z = m then z / m = 0 therefore (z % m) / m < 1 always
return(// define the recurrence relationship
(r=(o*r+a)%n)/n)}}}();r.setSeed(t),o=Array(d+1);for(var n=0;n<d+1;n++)o[n]=r.rand()};var y=a.default;n.default=y},{"../core/main":296}],329:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.every"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.some"),t("core-js/modules/es.math.sign"),t("core-js/modules/es.number.constructor"),t("core-js/modules/es.number.is-finite"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.sub"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.every"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.some"),t("core-js/modules/es.math.sign"),t("core-js/modules/es.number.constructor"),t("core-js/modules/es.number.is-finite"),t("core-js/modules/es.string.sub"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=p(t("../core/main")),l=u(t("../core/constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}function d(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function m(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function f(t,r,n){return r&&m(t.prototype,r),n&&m(t,n),t}/// HELPERS FOR REMAINDER METHOD
var h=function(t,r){return 0!==t&&(this.x=this.x%t),0!==r&&(this.y=this.y%r),this},y=function(t,r,n){return 0!==t&&(this.x=this.x%t),0!==r&&(this.y=this.y%r),0!==n&&(this.z=this.z%n),this};/**
 * A class to describe a two or three-dimensional vector, specifically
 * a Euclidean (also known as geometric) vector. A vector is an entity
 * that has both magnitude and direction. The datatype, however, stores
 * the components of the vector (`x`, `y` for 2D; or `x`, `y`, `z` for 3D). The magnitude
 * and direction can be accessed via the methods <a href="#/p5.Vector/mag">p5.Vector.mag()</a> and <a href="#/p5.Vector/heading">heading()</a>.
 *
 * In many of the p5.js examples, you will see <a href="#/p5.Vector">p5.Vector</a> used to describe a
 * position, velocity, or acceleration. For example, if you consider a rectangle
 * moving across the screen, at any given instant it has a position (a vector
 * that points from the origin to its location), a velocity (the rate at which
 * the object's position changes per time unit, expressed as a vector), and
 * acceleration (the rate at which the object's velocity changes per time
 * unit, expressed as a vector).
 *
 * Since vectors represent groupings of values, we cannot simply use
 * traditional addition/multiplication/etc. Instead, we'll need to do some
 * "vector" math, which is made easy by the methods inside the <a href="#/p5.Vector">p5.Vector</a> class.
 *
 * @class p5.Vector
 * @constructor
 * @param {Number} [x] x component of the vector
 * @param {Number} [y] y component of the vector
 * @param {Number} [z] z component of the vector
 * @example
 * <div>
 * <code>
 * let v1 = createVector(40, 50);
 * let v2 = createVector(40, 50);
 *
 * ellipse(v1.x, v1.y, 50, 50);
 * ellipse(v2.x, v2.y, 50, 50);
 * v1.add(v2);
 * ellipse(v1.x, v1.y, 50, 50);
 *
 * describe(`2 white ellipses. One center-left the other
 *   bottom right and off canvas`);
 * </code>
 * </div>
 */s.default.Vector=/*#__PURE__*/function(){// This is how it comes in with createVector()
// This check if the first argument is a function
function t(){var r,n,o;d(this,t),"function"==typeof(arguments.length<=0?void 0:arguments[0])?(this.isPInst=!0,this._fromRadians=arguments.length<=0?void 0:arguments[0],this._toRadians=arguments.length<=1?void 0:arguments[1],r=(arguments.length<=2?void 0:arguments[2])||0,n=(arguments.length<=3?void 0:arguments[3])||0,o=(arguments.length<=4?void 0:arguments[4])||0):(r=(arguments.length<=0?void 0:arguments[0])||0,n=(arguments.length<=1?void 0:arguments[1])||0,o=(arguments.length<=2?void 0:arguments[2])||0),this.x=r,/**
     * The y component of the vector
     * @property y {Number}
     */this.y=n,/**
     * The z component of the vector
     * @property z {Number}
     */this.z=o}/**
  * Returns a string representation of a vector `v` by calling `String(v)`
  * or `v.toString()`. This method is useful for logging vectors in the
  * console.
  * @method  toString
  * @return {String}
  * @example
  * <div class = "norender">
  * <code>
  * function setup() {
  *   let v = createVector(20, 30);
  *   print(String(v)); // prints "p5.Vector Object : [20, 30, 0]"
  * }
  * </code>
  * </div>
  *
  * <div>
  * <code>
  * function draw() {
  *   background(240);
  *
  *   let v0 = createVector(0, 0);
  *   let v1 = createVector(mouseX, mouseY);
  *   drawArrow(v0, v1, 'black');
  *
  *   noStroke();
  *   text(v1.toString(), 10, 25, 90, 75);
  * }
  *
  * // draw an arrow for a vector at a given base position
  * function drawArrow(base, vec, myColor) {
  *   push();
  *   stroke(myColor);
  *   strokeWeight(3);
  *   fill(myColor);
  *   translate(base.x, base.y);
  *   line(0, 0, vec.x, vec.y);
  *   rotate(vec.heading());
  *   let arrowSize = 7;
  *   translate(vec.mag() - arrowSize, 0);
  *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
  *   pop();
  * }
  * </code>
  * </div>
  */return f(t,[{key:"toString",value:function(){return"p5.Vector Object : [".concat(this.x,", ").concat(this.y,", ").concat(this.z,"]")}/**
    * Sets the `x`, `y`, and `z` components of the vector using two or three separate
    * variables, the data from a <a href="#/p5.Vector">p5.Vector</a>, or the values from a float array.
    * @method set
    * @param {Number} [x] The x component of the vector
    * @param {Number} [y] The y component of the vector
    * @param {Number} [z] The z component of the vector
    * @chainable
    * @example
    * <div class="norender">
    * <code>
    * function setup() {
    *   let v = createVector(1, 2, 3);
    *   v.set(4, 5, 6); // Sets vector to [4, 5, 6]
    *
    *   let v1 = createVector(0, 0, 0);
    *   let arr = [1, 2, 3];
    *   v1.set(arr); // Sets vector to [1, 2, 3]
    * }
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * let v0, v1;
    * function setup() {
    *   createCanvas(100, 100);
    *
    *   v0 = createVector(0, 0);
    *   v1 = createVector(50, 50);
    * }
    *
    * function draw() {
    *   background(240);
    *
    *   drawArrow(v0, v1, 'black');
    *   v1.set(v1.x + random(-1, 1), v1.y + random(-1, 1));
    *
    *   noStroke();
    *   text('x: ' + round(v1.x) + ' y: ' + round(v1.y), 20, 90);
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"set",value:function(t,r,n){return t instanceof s.default.Vector?(this.x=t.x||0,this.y=t.y||0,this.z=t.z||0):Array.isArray(t)?(this.x=t[0]||0,this.y=t[1]||0,this.z=t[2]||0):(this.x=t||0,this.y=r||0,this.z=n||0),this}/**
    * Gets a copy of the vector, returns a <a href="#/p5.Vector">p5.Vector</a> object.
    *
    * @method copy
    * @return {p5.Vector} A copy of the <a href="#/p5.Vector">p5.Vector</a> object
    * @example
    * <div class="norender">
    * <code>
    * let v1 = createVector(1, 2, 3);
    * let v2 = v1.copy();
    * print(v1.x === v2.x && v1.y === v2.y && v1.z === v2.z);
    * // Prints "true"
    * </code>
    * </div>
    */},{key:"copy",value:function(){return this.isPInst?new s.default.Vector(this._fromRadians,this._toRadians,this.x,this.y,this.z):new s.default.Vector(this.x,this.y,this.z)}/**
    * Adds `x`, `y`, and `z` components to a vector, adds one vector to another, or
    * adds two independent vectors together. The version of the method that adds
    * two vectors together is a static method and returns a <a href="#/p5.Vector">p5.Vector</a>, the others
    * act directly on the vector. Additionally, you may provide arguments to this method as an array.
    * See the examples for more context.
    *
    * @method add
    * @param  {Number} x   The x component of the vector to be added
    * @param  {Number} [y] The y component of the vector to be added
    * @param  {Number} [z] The z component of the vector to be added
    * @chainable
    * @example
    * <div class="norender">
    * <code>
    * let v = createVector(1, 2, 3);
    * v.add(4, 5, 6);
    * // v's components are set to [5, 7, 9]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * let v = createVector(1, 2, 3);
    * // Provide arguments as an array
    * let arr = [4, 5, 6];
    * v.add(arr);
    * // v's components are set to [5, 7, 9]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * // Static method
    * let v1 = createVector(1, 2, 3);
    * let v2 = createVector(2, 3, 4);
    *
    * let v3 = p5.Vector.add(v1, v2);
    * // v3 has components [3, 5, 7]
    * print(v3);
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * // red vector + blue vector = purple vector
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(0, 0);
    *   let v1 = createVector(mouseX, mouseY);
    *   drawArrow(v0, v1, 'red');
    *
    *   let v2 = createVector(-30, 20);
    *   drawArrow(v1, v2, 'blue');
    *
    *   let v3 = p5.Vector.add(v1, v2);
    *   drawArrow(v0, v3, 'purple');
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"add",value:function(t,r,n){return t instanceof s.default.Vector?(this.x+=t.x||0,this.y+=t.y||0,this.z+=t.z||0):Array.isArray(t)?(this.x+=t[0]||0,this.y+=t[1]||0,this.z+=t[2]||0):(this.x+=t||0,this.y+=r||0,this.z+=n||0),this}/**
    * Gives the remainder of a vector when it is divided by another vector.
    * See examples for more context.
    *
    * @method rem
    * @param {Number} x The x component of divisor vector
    * @param {Number} y The y component of divisor vector
    * @param {Number} z The z component of divisor vector
    * @chainable
    * @example
    * <div class='norender'>
    * <code>
    * let v = createVector(3, 4, 5);
    * v.rem(2, 3, 4);
    * // v's components are set to [1, 1, 1]
    * </code>
    * </div>
    * <div class="norender">
    * <code>
    * // Static method
    * let v1 = createVector(3, 4, 5);
    * let v2 = createVector(2, 3, 4);
    *
    * let v3 = p5.Vector.rem(v1, v2);
    * // v3 has components [1, 1, 1]
    * print(v3);
    * </code>
    * </div>
    */},{key:"rem",value:function(t,r,n){if(t instanceof s.default.Vector){if([t.x,t.y,t.z].every(Number.isFinite)){var o=parseFloat(t.x),a=parseFloat(t.y),l=parseFloat(t.z);return y.call(this,o,a,l)}}else if(Array.isArray(t)){if(t.every(function(t){return Number.isFinite(t)})){if(2===t.length)return h.call(this,t[0],t[1]);if(3===t.length)return y.call(this,t[0],t[1],t[2])}}else if(1==arguments.length){if(Number.isFinite(arguments[0])&&0!==arguments[0])return this.x=this.x%arguments[0],this.y=this.y%arguments[0],this.z=this.z%arguments[0],this}else if(2==arguments.length){var c=Array.prototype.slice.call(arguments);if(c.every(function(t){return Number.isFinite(t)})&&2===c.length)return h.call(this,c[0],c[1])}else if(3==arguments.length){var u=Array.prototype.slice.call(arguments);if(u.every(function(t){return Number.isFinite(t)})&&3===u.length)return y.call(this,u[0],u[1],u[2])}}/**
    * Subtracts `x`, `y`, and `z` components from a vector, subtracts one vector from
    * another, or subtracts two independent vectors. The version of the method
    * that subtracts two vectors is a static method and returns a <a href="#/p5.Vector">p5.Vector</a>, the
    * others act directly on the vector. Additionally, you may provide arguments to this method as an array.
    * See the examples for more context.
    *
    * @method sub
    * @param  {Number} x   The x component of the vector to subtract
    * @param  {Number} [y] The y component of the vector to subtract
    * @param  {Number} [z] The z component of the vector to subtract
    * @chainable
    * @example
    * <div class="norender">
    * <code>
    * let v = createVector(4, 5, 6);
    * v.sub(1, 1, 1);
    * // v's components are set to [3, 4, 5]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * let v = createVector(4, 5, 6);
    * // Provide arguments as an array
    * let arr = [1, 1, 1];
    * v.sub(arr);
    * // v's components are set to [3, 4, 5]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * // Static method
    * let v1 = createVector(2, 3, 4);
    * let v2 = createVector(1, 2, 3);
    *
    * let v3 = p5.Vector.sub(v1, v2);
    * // v3 has components [1, 1, 1]
    * print(v3);
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * // red vector - blue vector = purple vector
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(0, 0);
    *   let v1 = createVector(70, 50);
    *   drawArrow(v0, v1, 'red');
    *
    *   let v2 = createVector(mouseX, mouseY);
    *   drawArrow(v0, v2, 'blue');
    *
    *   let v3 = p5.Vector.sub(v1, v2);
    *   drawArrow(v2, v3, 'purple');
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"sub",value:function(t,r,n){return t instanceof s.default.Vector?(this.x-=t.x||0,this.y-=t.y||0,this.z-=t.z||0):Array.isArray(t)?(this.x-=t[0]||0,this.y-=t[1]||0,this.z-=t[2]||0):(this.x-=t||0,this.y-=r||0,this.z-=n||0),this}/**
    * Multiplies the vector by a scalar, multiplies the `x`, `y`, and `z` components from a vector, or multiplies
    * the `x`, `y`, and `z` components of two independent vectors. When multiplying a vector by a scalar, the `x`, `y`,
    * and `z` components of the vector are all multiplied by the scalar. When multiplying a vector by a vector,
    * the `x`, `y`, `z` components of both vectors are multiplied by each other
    * (for example, with two vectors `a` and `b`: `a.x * b.x`, `a.y * b.y`, `a.z * b.z`). The static version of this method
    * creates a new <a href="#/p5.Vector">p5.Vector</a> while the non-static version acts on the vector
    * directly. Additionally, you may provide arguments to this function as an array.
    * See the examples for more context.
    *
    * @method mult
    * @param  {Number} n The number to multiply with the vector
    * @chainable
    * @example
    * <div class="norender">
    * <code>
    * let v = createVector(1, 2, 3);
    * v.mult(2);
    * // v's components are set to [2, 4, 6]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * let v0 = createVector(1, 2, 3);
    * let v1 = createVector(2, 3, 4);
    * v0.mult(v1); // v0's components are set to [2, 6, 12]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * let v0 = createVector(1, 2, 3);
    * // Provide arguments as an array
    * let arr = [2, 3, 4];
    * v0.mult(arr); // v0's components are set to [2, 6, 12]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * let v0 = createVector(1, 2, 3);
    * let v1 = createVector(2, 3, 4);
    * const result = p5.Vector.mult(v0, v1);
    * print(result); // result's components are set to [2, 6, 12]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * // Static method
    * let v1 = createVector(1, 2, 3);
    * let v2 = p5.Vector.mult(v1, 2);
    * // v2 has components [2, 4, 6]
    * print(v2);
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(50, 50);
    *   let v1 = createVector(25, -25);
    *   drawArrow(v0, v1, 'red');
    *
    *   let num = map(mouseX, 0, width, -2, 2, true);
    *   let v2 = p5.Vector.mult(v1, num);
    *   drawArrow(v0, v2, 'blue');
    *
    *   noStroke();
    *   text('multiplied by ' + num.toFixed(2), 5, 90);
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"mult",value:function(t,r,n){if(t instanceof s.default.Vector)return Number.isFinite(t.x)&&Number.isFinite(t.y)&&Number.isFinite(t.z)&&"number"==typeof t.x&&"number"==typeof t.y&&"number"==typeof t.z?(this.x*=t.x,this.y*=t.y,this.z*=t.z):console.warn("p5.Vector.prototype.mult:","x contains components that are either undefined or not finite numbers"),this;if(Array.isArray(t))return t.every(function(t){return Number.isFinite(t)})&&t.every(function(t){return"number"==typeof t})?1===t.length?(this.x*=t[0],this.y*=t[0],this.z*=t[0]):2===t.length?(this.x*=t[0],this.y*=t[1]):3===t.length&&(this.x*=t[0],this.y*=t[1],this.z*=t[2]):console.warn("p5.Vector.prototype.mult:","x contains elements that are either undefined or not finite numbers"),this;var o=Array.prototype.slice.call(arguments);return o.every(function(t){return Number.isFinite(t)})&&o.every(function(t){return"number"==typeof t})?(1==arguments.length&&(this.x*=t,this.y*=t,this.z*=t),2==arguments.length&&(this.x*=t,this.y*=r),3==arguments.length&&(this.x*=t,this.y*=r,this.z*=n)):console.warn("p5.Vector.prototype.mult:","x, y, or z arguments are either undefined or not a finite number"),this}/**
    * Divides the vector by a scalar, divides a vector by the `x`, `y`, and `z` arguments, or divides the `x`, `y`, and
    * `z` components of two vectors against each other. When dividing a vector by a scalar, the `x`, `y`,
    * and `z` components of the vector are all divided by the scalar. When dividing a vector by a vector,
    * the `x`, `y`, `z` components of the source vector are treated as the dividend, and the `x`, `y`, `z` components
    * of the argument is treated as the divisor. (For example, with two vectors
    * `a` and `b`: `a.x / b.x`, `a.y / b.y`, `a.z / b.z`.) If any component of the second vector is 0, a division by 0
    * error will be logged, unless both two vectors have 0 in their `z` components, in which case only the `x` and `y`
    * components will be divided.
    * The static version of this method creates a
    * new <a href="#/p5.Vector">p5.Vector</a> while the non-static version acts on the vector directly.
    * Additionally, you may provide arguments to this method as an array.
    * See the examples for more context.
    *
    * @method div
    * @param  {number}    n The number to divide the vector by
    * @chainable
    * @example
    * <div class="norender">
    * <code>
    * let v = createVector(6, 4, 2);
    * v.div(2); //v's components are set to [3, 2, 1]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * let v0 = createVector(9, 4, 2);
    * let v1 = createVector(3, 2, 4);
    * v0.div(v1); // v0's components are set to [3, 2, 0.5]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * let v0 = createVector(9, 4, 2);
    * // Provide arguments as an array
    * let arr = [3, 2, 4];
    * v0.div(arr); // v0's components are set to [3, 2, 0.5]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * let v0 = createVector(9, 4, 2);
    * let v1 = createVector(3, 2, 4);
    * let result = p5.Vector.div(v0, v1);
    * print(result); // result's components are set to [3, 2, 0.5]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * // Static method
    * let v1 = createVector(6, 4, 2);
    * let v2 = p5.Vector.div(v1, 2);
    * // v2 has components [3, 2, 1]
    * print(v2);
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(0, 100);
    *   let v1 = createVector(50, -50);
    *   drawArrow(v0, v1, 'red');
    *
    *   let num = map(mouseX, 0, width, 10, 0.5, true);
    *   let v2 = p5.Vector.div(v1, num);
    *   drawArrow(v0, v2, 'blue');
    *
    *   noStroke();
    *   text('divided by ' + num.toFixed(2), 10, 90);
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"div",value:function(t,r,n){if(t instanceof s.default.Vector){// new p5.Vector will check that values are valid upon construction but it's possible
// that someone could change the value of a component after creation, which is why we still
// perform this check
if(Number.isFinite(t.x)&&Number.isFinite(t.y)&&Number.isFinite(t.z)&&"number"==typeof t.x&&"number"==typeof t.y&&"number"==typeof t.z){var o=0===t.z&&0===this.z;if(0===t.x||0===t.y||!o&&0===t.z)return console.warn("p5.Vector.prototype.div:","divide by 0"),this;this.x/=t.x,this.y/=t.y,o||(this.z/=t.z)}else console.warn("p5.Vector.prototype.div:","x contains components that are either undefined or not finite numbers");return this}if(Array.isArray(t)){if(t.every(function(t){return Number.isFinite(t)})&&t.every(function(t){return"number"==typeof t})){if(t.some(function(t){return 0===t}))return console.warn("p5.Vector.prototype.div:","divide by 0"),this;1===t.length?(this.x/=t[0],this.y/=t[0],this.z/=t[0]):2===t.length?(this.x/=t[0],this.y/=t[1]):3===t.length&&(this.x/=t[0],this.y/=t[1],this.z/=t[2])}else console.warn("p5.Vector.prototype.div:","x contains components that are either undefined or not finite numbers");return this}var a=Array.prototype.slice.call(arguments);if(a.every(function(t){return Number.isFinite(t)})&&a.every(function(t){return"number"==typeof t})){if(a.some(function(t){return 0===t}))return console.warn("p5.Vector.prototype.div:","divide by 0"),this;1==arguments.length&&(this.x/=t,this.y/=t,this.z/=t),2==arguments.length&&(this.x/=t,this.y/=r),3==arguments.length&&(this.x/=t,this.y/=r,this.z/=n)}else console.warn("p5.Vector.prototype.div:","x, y, or z arguments are either undefined or not a finite number");return this}/**
    * Calculates the magnitude (length) of the vector and returns the result as
    * a float. (This is simply the equation `sqrt(x*x + y*y + z*z)`.)
    *
    * @method mag
    * @return {Number} The magnitude of the vector
    * @example
    * <div>
    * <code>
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(0, 0);
    *   let v1 = createVector(mouseX, mouseY);
    *   drawArrow(v0, v1, 'black');
    *
    *   noStroke();
    *   text('vector length: ' + v1.mag().toFixed(2), 10, 70, 90, 30);
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    * <div class="norender">
    * <code>
    * let v = createVector(20.0, 30.0, 40.0);
    * let m = v.mag();
    * print(m); // Prints "53.85164807134504"
    * </code>
    * </div>
    */},{key:"mag",value:function(){return Math.sqrt(this.magSq())}/**
    * Calculates the squared magnitude of the vector and returns the result
    * as a float. (This is simply the equation `x*x + y*y + z*z`.)
    * Faster if the real length is not required in the
    * case of comparing vectors, etc.
    *
    * @method magSq
    * @return {number} The squared magnitude of the vector
    * @example
    * <div class="norender">
    * <code>
    * // Static method
    * let v1 = createVector(6, 4, 2);
    * print(v1.magSq()); // Prints "56"
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(0, 0);
    *   let v1 = createVector(mouseX, mouseY);
    *   drawArrow(v0, v1, 'black');
    *
    *   noStroke();
    *   text('vector length squared: ' + v1.magSq().toFixed(2), 10, 45, 90, 55);
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"magSq",value:function(){var t=this.x,r=this.y,n=this.z;return t*t+r*r+n*n}/**
    * Calculates the dot product of two vectors. The version of the method
    * that computes the dot product of two independent vectors is a static
    * method. See the examples for more context.
    *
    * @method dot
    * @param  {Number} x   The x component of the vector
    * @param  {Number} [y] The y component of the vector
    * @param  {Number} [z] The z component of the vector
    * @return {Number}       The dot product
    *
    * @example
    * <div class="norender">
    * <code>
    * let v1 = createVector(1, 2, 3);
    * let v2 = createVector(2, 3, 4);
    *
    * print(v1.dot(v2)); // Prints "20"
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * //Static method
    * let v1 = createVector(1, 2, 3);
    * let v2 = createVector(3, 2, 1);
    * print(p5.Vector.dot(v1, v2)); // Prints "10"
    * </code>
    * </div>
    */},{key:"dot",value:function(t,r,n){return t instanceof s.default.Vector?this.dot(t.x,t.y,t.z):this.x*(t||0)+this.y*(r||0)+this.z*(n||0)}/**
    * Calculates and returns a vector composed of the cross product between
    * two vectors. Both the static and non-static methods return a new <a href="#/p5.Vector">p5.Vector</a>.
    * See the examples for more context.
    *
    * @method cross
    * @param  {p5.Vector} v <a href="#/p5.Vector">p5.Vector</a> to be crossed
    * @return {p5.Vector}   <a href="#/p5.Vector">p5.Vector</a> composed of cross product
    * @example
    * <div class="norender">
    * <code>
    * let v1 = createVector(1, 2, 3);
    * let v2 = createVector(1, 2, 3);
    *
    * let v = v1.cross(v2); // v's components are [0, 0, 0]
    * print(v);
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * // Static method
    * let v1 = createVector(1, 0, 0);
    * let v2 = createVector(0, 1, 0);
    *
    * let crossProduct = p5.Vector.cross(v1, v2);
    * // crossProduct has components [0, 0, 1]
    * print(crossProduct);
    * </code>
    * </div>
    */},{key:"cross",value:function(t){var r=this.y*t.z-this.z*t.y,n=this.z*t.x-this.x*t.z,o=this.x*t.y-this.y*t.x;return this.isPInst?new s.default.Vector(this._fromRadians,this._toRadians,r,n,o):new s.default.Vector(r,n,o)}/**
    * Calculates the Euclidean distance between two points (considering a
    * point as a vector object).
    * If you are looking to calculate distance between 2 points see <a href="#/p5/dist">dist()</a>
    *
    * @method dist
    * @param  {p5.Vector} v The x, y, and z coordinates of a <a href="#/p5.Vector">p5.Vector</a>
    * @return {Number}      The distance
    * @example
    * <div class="norender">
    * <code>
    * let v1 = createVector(1, 0, 0);
    * let v2 = createVector(0, 1, 0);
    *
    * let distance = v1.dist(v2); // distance is 1.4142...
    * print(distance);
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * // Static method
    * let v1 = createVector(1, 0, 0);
    * let v2 = createVector(0, 1, 0);
    *
    * let distance = p5.Vector.dist(v1, v2);
    * // distance is 1.4142...
    * print(distance);
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(0, 0);
    *
    *   let v1 = createVector(70, 50);
    *   drawArrow(v0, v1, 'red');
    *
    *   let v2 = createVector(mouseX, mouseY);
    *   drawArrow(v0, v2, 'blue');
    *
    *   noStroke();
    *   text('distance between vectors: ' + v2.dist(v1).toFixed(2), 5, 50, 95, 50);
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"dist",value:function(t){return t.copy().sub(this).mag()}/**
    * Normalize the vector to length 1 (make it a unit vector).
    *
    * @method normalize
    * @return {p5.Vector} The normalized <a href="#/p5.Vector">p5.Vector</a>
    * @example
    * <div class="norender">
    * <code>
    * let v = createVector(10, 20, 2);
    * // v has components [10.0, 20.0, 2.0]
    * v.normalize();
    * // v's components are set to
    * // [0.4454354, 0.8908708, 0.089087084]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * // Static method
    * let v_initial = createVector(10, 20, 2);
    * // v_initial has components [10.0, 20.0, 2.0]
    * let v_normalized = p5.Vector.normalize(v_initial);
    * print(v_normalized);
    * // returns a new vector with components set to
    * // [0.4454354, 0.8908708, 0.089087084]
    * // v_initial remains unchanged
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(50, 50);
    *   let v1 = createVector(mouseX - 50, mouseY - 50);
    *
    *   drawArrow(v0, v1, 'red');
    *   v1.normalize();
    *   drawArrow(v0, v1.mult(35), 'blue');
    *
    *   noFill();
    *   ellipse(50, 50, 35 * 2);
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"normalize",value:function(){var t=this.mag();// here we multiply by the reciprocal instead of calling 'div()'
return 0!==t&&this.mult(1/t),this}/**
    * Limit the magnitude of this vector to the value used for the `max`
    * parameter.
    *
    * @method limit
    * @param  {Number}    max The maximum magnitude for the vector
    * @chainable
    * @example
    * <div class="norender">
    * <code>
    * let v = createVector(10, 20, 2);
    * // v has components [10.0, 20.0, 2.0]
    * v.limit(5);
    * // v's components are set to
    * // [2.2271771, 4.4543543, 0.4454354]
    * </code>
    * </div>
    * <div>
    * <code>
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(50, 50);
    *   let v1 = createVector(mouseX - 50, mouseY - 50);
    *
    *   drawArrow(v0, v1, 'red');
    *   drawArrow(v0, v1.limit(35), 'blue');
    *
    *   noFill();
    *   ellipse(50, 50, 35 * 2);
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"limit",value:function(t){var r=this.magSq();return r>t*t&&this.div(Math.sqrt(r))//normalize it
.mult(t),this}/**
    * Set the magnitude of this vector to the value used for the `len`
    * parameter.
    *
    * @method setMag
    * @param  {number}    len The new length for this vector
    * @chainable
    * @example
    * <div class="norender">
    * <code>
    * let v = createVector(3, 4, 0);
    * // v has components [3.0, 4.0, 0.0]
    * v.setMag(10);
    * // v's components are set to [6.0, 8.0, 0.0]
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(0, 0);
    *   let v1 = createVector(50, 50);
    *
    *   drawArrow(v0, v1, 'red');
    *
    *   let length = map(mouseX, 0, width, 0, 141, true);
    *   v1.setMag(length);
    *   drawArrow(v0, v1, 'blue');
    *
    *   noStroke();
    *   text('magnitude set to: ' + length.toFixed(2), 10, 70, 90, 30);
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"setMag",value:function(t){return this.normalize().mult(t)}/**
    * Calculate the angle of rotation for this vector (only 2D vectors).
    * p5.Vectors created using <a href="#/p5/createVector">createVector()</a>
    * will take the current <a href="#/p5/angleMode">angleMode()</a> into
    * consideration, and give the angle in radians or degrees accordingly.
    *
    * @method heading
    * @return {Number} The angle of rotation
    * @example
    * <div class = "norender">
    * <code>
    * function setup() {
    *   let v1 = createVector(30, 50);
    *   print(v1.heading()); // 1.0303768265243125
    *
    *   v1 = createVector(40, 50);
    *   print(v1.heading()); // 0.8960553845713439
    *
    *   v1 = createVector(30, 70);
    *   print(v1.heading()); // 1.1659045405098132
    * }
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(50, 50);
    *   let v1 = createVector(mouseX - 50, mouseY - 50);
    *
    *   drawArrow(v0, v1, 'black');
    *
    *   let myHeading = v1.heading();
    *   noStroke();
    *   text(
    *     'vector heading: ' +
    *       myHeading.toFixed(2) +
    *       ' radians or ' +
    *       degrees(myHeading).toFixed(2) +
    *       ' degrees',
    *     10,
    *     50,
    *     90,
    *     50
    *   );
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"heading",value:function(){var t=Math.atan2(this.y,this.x);return this.isPInst?this._fromRadians(t):t}/**
    * Rotate the vector to a specific angle (only 2D vectors); magnitude remains the
    * same.
    *
    * @method setHeading
    * @param  {number}    angle The angle of rotation
    * @chainable
    * @example
    * <div class="norender">
    * <code>
    * let v = createVector(10.0, 20.0);
    * // result of v.heading() is 1.1071487177940904
    * v.setHeading(Math.PI);
    * // result of v.heading() is now 3.141592653589793
    * </code>
    * </div>
    */},{key:"setHeading",value:function(t){this.isPInst&&(t=this._toRadians(t));var r=this.mag();return this.x=r*Math.cos(t),this.y=r*Math.sin(t),this}/**
    * Rotate the vector by an angle (only 2D vectors); magnitude remains the
    * same.
    *
    * @method rotate
    * @param  {number}    angle The angle of rotation
    * @chainable
    * @example
    * <div class="norender">
    * <code>
    * let v = createVector(10.0, 20.0);
    * // v has components [10.0, 20.0, 0.0]
    * v.rotate(HALF_PI);
    * // v's components are set to [-20.0, 9.999999, 0.0]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * // static function implementation
    * let v = createVector(10.0, 20.0);
    * // v has components [10.0, 20.0, 0.0]
    * let rotated_v = p5.Vector.rotate(v, HALF_PI);
    * console.log(rotated_v);
    * // rotated_v's components are set to [-20.0, 9.999999, 0.0]
    * console.log(v);
    * // v's components remains the same (i.e, [10.0, 20.0, 0.0])
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * let angle = 0;
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(50, 50);
    *   let v1 = createVector(50, 0);
    *
    *   drawArrow(v0, v1.rotate(angle), 'black');
    *   angle += 0.01;
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"rotate",value:function(t){var r=this.heading()+t;this.isPInst&&(r=this._toRadians(r));var n=this.mag();return this.x=Math.cos(r)*n,this.y=Math.sin(r)*n,this}/**
    * Calculates and returns the angle between two vectors. This method will take
    * the current <a href="#/p5/angleMode">angleMode</a> into consideration, and
    * give the angle in radians or degrees accordingly.
    *
    * @method angleBetween
    * @param  {p5.Vector}    value The x, y, and z components of a <a href="#/p5.Vector">p5.Vector</a>
    * @return {Number}       The angle between
    * @example
    * <div class="norender">
    * <code>
    * let v1 = createVector(1, 0, 0);
    * let v2 = createVector(0, 1, 0);
    *
    * let angle = v1.angleBetween(v2);
    * // angle is PI/2
    * print(angle);
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * function draw() {
    *   background(240);
    *   let v0 = createVector(50, 50);
    *
    *   let v1 = createVector(50, 0);
    *   drawArrow(v0, v1, 'red');
    *
    *   let v2 = createVector(mouseX - 50, mouseY - 50);
    *   drawArrow(v0, v2, 'blue');
    *
    *   let angleBetween = v1.angleBetween(v2);
    *   noStroke();
    *   text(
    *     'angle between: ' +
    *       angleBetween.toFixed(2) +
    *       ' radians or ' +
    *       degrees(angleBetween).toFixed(2) +
    *       ' degrees',
    *     10,
    *     50,
    *     90,
    *     50
    *   );
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"angleBetween",value:function(t){if(0==this.magSq()*t.magSq())return NaN;var r=this.cross(t),n=Math.atan2(r.mag(),this.dot(t))*Math.sign(r.z||1);// The dot product computes the cos value, and the cross product computes
return this.isPInst&&(n=this._fromRadians(n)),n}/**
    * Linear interpolate the vector to another vector.
    *
    * @method lerp
    * @param  {Number}    x   The x component
    * @param  {Number}    y   The y component
    * @param  {Number}    z   The z component
    * @param  {Number}    amt The amount of interpolation; some value between 0.0
    *                         (old vector) and 1.0 (new vector). 0.9 is very near
    *                         the new vector. 0.5 is halfway in between.
    * @chainable
    *
    * @example
    * <div class="norender">
    * <code>
    * let v = createVector(1, 1, 0);
    *
    * v.lerp(3, 3, 0, 0.5); // v now has components [2,2,0]
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * let v1 = createVector(0, 0, 0);
    * let v2 = createVector(100, 100, 0);
    *
    * let v3 = p5.Vector.lerp(v1, v2, 0.5);
    * // v3 has components [50,50,0]
    * print(v3);
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * let step = 0.01;
    * let amount = 0;
    *
    * function draw() {
    *   background(240);
    *   let v0 = createVector(0, 0);
    *
    *   let v1 = createVector(mouseX, mouseY);
    *   drawArrow(v0, v1, 'red');
    *
    *   let v2 = createVector(90, 90);
    *   drawArrow(v0, v2, 'blue');
    *
    *   if (amount > 1 || amount < 0) {
    *     step *= -1;
    *   }
    *   amount += step;
    *   let v3 = p5.Vector.lerp(v1, v2, amount);
    *
    *   drawArrow(v0, v3, 'purple');
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"lerp",value:function(t,r,n,o){return t instanceof s.default.Vector?this.lerp(t.x,t.y,t.z,r):(this.x+=(t-this.x)*o||0,this.y+=(r-this.y)*o||0,this.z+=(n-this.z)*o||0,this)}/**
    * Performs spherical linear interpolation with the other vector
    * and returns the resulting vector.
    * This works in both 3D and 2D. As for 2D, the result of slerping
    * between 2D vectors is always a 2D vector.
    *
    * @method slerp
    * @param {p5.Vector} v the p5.Vector to slerp to
    * @param {Number} amt The amount of interpolation. some value between 0.0
    *                     (old vector) and 1.0 (new vector). 0.9 is very near
    *                     the new vector. 0.5 is halfway in between.
    * @return {p5.Vector}
    *
    * @example
    * <div class="norender">
    * <code>
    *
    * const v1 = createVector(1, 0, 0);
    * const v2 = createVector(0, 1, 0);
    *
    * const v = v1.slerp(v2, 1/3);
    * print(v.toString());
    * // v's components are almost [cos(30°), sin(30°), 0]
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * let needle;
    * function setup() {
    *   createCanvas(100, 100);
    *   stroke(0);
    *   strokeWeight(4);
    *
    *   needle = createVector(50, 0);
    * }
    *
    * function draw(){
    *   background(255);
    *   translate(50, 50);
    *
    *   const v = createVector(mouseX - 50, mouseY - 50).setMag(50);
    *   // slerp between v and needle vector.
    *   // needle vector is changed by slerp function.
    *   needle.slerp(v, 0.05);
    *
    *   line(0, 0, needle.x, needle.y);
    * }
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * function setup(){
    *   createCanvas(100, 100, WEBGL);
    * }
    *
    * function draw(){
    *   background(255);
    *
    *   const vx = createVector(30, 0, 0);
    *   const vy = createVector(0, 30, 0);
    *   const vz = createVector(0, 0, 30);
    *
    *   const t = map(sin(frameCount * TAU / 120), -1, 1, 0, 1);
    *   // v1, v2, v3 is not changed by slerp function.
    *   // because this function is static version.
    *   const vSlerpXY = p5.Vector.slerp(vx, vy, t);
    *   const vSlerpYZ = p5.Vector.slerp(vy, vz, t);
    *   const vSlerpZX = p5.Vector.slerp(vz, vx, t);
    *   strokeWeight(6);
    *   strokeCap(SQUARE);
    *   stroke('red');
    *   line(0, 0, 0, vSlerpXY.x, vSlerpXY.y, vSlerpXY.z);
    *   stroke('green');
    *   line(0, 0, 0, vSlerpYZ.x, vSlerpYZ.y, vSlerpYZ.z);
    *   stroke('blue');
    *   line(0, 0, 0, vSlerpZX.x, vSlerpZX.y, vSlerpZX.z);
    * }
    * </code>
    * </div>
    */},{key:"slerp",value:function(t,r){// edge cases.
if(0===r)return this;if(1===r)return this.set(t);// calculate magnitudes
var n=this.mag(),o=t.mag();if(0==n*o)return this.mult(1-r).add(t.x*r,t.y*r,t.z*r),this;// the cross product of 'this' and 'v' is the axis of rotation
var a=this.cross(t),s=a.mag(),l=Math.atan2(s,this.dot(t));// so we will divide the cases
if(s>0)a.x/=s,a.y/=s,a.z/=s;else{if(l<.5*Math.PI)return(// if the norm is 0 and the angle is less than PI/2,
// the angle is very close to 0, so do linear interpolation.
this.mult(1-r).add(t.x*r,t.y*r,t.z*r),this);// Since 'axis' is a unit vector, ey is a vector of the same length as 'this'.
// If the norm is 0 and the angle is more than PI/2, the angle is
// very close to PI.
// In this case v can be regarded as '-this', so take any vector
// that is orthogonal to 'this' and use that as the axis.
0===this.z&&0===t.z?// this makes the result also a 2D vector.
a.set(0,0,1):0!==this.x?a.set(this.y,-this.x,0).normalize():a.set(1,0,0)}var c=a.cross(this),u=1-r+r*o/n,p=u*Math.cos(r*l),d=u*Math.sin(r*l);// interpolate the length with 'this' and 'v'.
return this.x=this.x*p+c.x*d,this.y=this.y*p+c.y*d,this.z=this.z*p+c.z*d,this}/**
    * Reflect a vector about a normal to a line in 2D, or about a normal to a
    * plane in 3D.
    *
    * @method reflect
    * @param  {p5.Vector} surfaceNormal  the <a href="#/p5.Vector">p5.Vector</a>
    *                                    to reflect about.
    * @chainable
    * @example
    * <div class="norender">
    * <code>
    * let v = createVector(4, 6); // incoming vector, this example vector is heading to the right and downward
    * let n = createVector(0, -1); // surface normal to a plane (this example normal points directly upwards)
    * v.reflect(n); // v is reflected about the surface normal n.  v's components are now set to [4, -6]
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(0, 0);
    *   let v1 = createVector(mouseX, mouseY);
    *   drawArrow(v0, v1, 'red');
    *
    *   let n = createVector(0, -30);
    *   drawArrow(v1, n, 'blue');
    *
    *   let r = v1.copy();
    *   r.reflect(n);
    *   drawArrow(v1, r, 'purple');
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"reflect",value:function(t){return t.normalize(),this.sub(t.mult(2*this.dot(t)))}/**
    * Return a representation of this vector as a float array. This is only
    * for temporary use. If used in any other fashion, the contents should be
    * copied by using the <b>p5.Vector.<a href="#/p5.Vector/copy">copy()</a></b>
    * method to copy into your own vector.
    *
    * @method array
    * @return {Number[]} An Array with the 3 values
    * @example
    * <div class = "norender">
    * <code>
    * function setup() {
    *   let v = createVector(20, 30);
    *   print(v.array()); // Prints : Array [20, 30, 0]
    * }
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * let v = createVector(10.0, 20.0, 30.0);
    * let f = v.array();
    * print(f[0]); // Prints "10.0"
    * print(f[1]); // Prints "20.0"
    * print(f[2]); // Prints "30.0"
    * </code>
    * </div>
    */},{key:"array",value:function(){return[this.x||0,this.y||0,this.z||0]}/**
    * Equality check against a <a href="#/p5.Vector">p5.Vector</a>.
    *
    * @method equals
    * @param {Number} [x] The x component of the vector
    * @param {Number} [y] The y component of the vector
    * @param {Number} [z] The z component of the vector
    * @return {Boolean} Whether the vectors are equal
    * @example
    * <div class = "norender">
    * <code>
    * let v1 = createVector(5, 10, 20);
    * let v2 = createVector(5, 10, 20);
    * let v3 = createVector(13, 10, 19);
    *
    * print(v1.equals(v2.x, v2.y, v2.z)); // true
    * print(v1.equals(v3.x, v3.y, v3.z)); // false
    * </code>
    * </div>
    *
    * <div class="norender">
    * <code>
    * let v1 = createVector(10.0, 20.0, 30.0);
    * let v2 = createVector(10.0, 20.0, 30.0);
    * let v3 = createVector(0.0, 0.0, 0.0);
    * print(v1.equals(v2)); // true
    * print(v1.equals(v3)); // false
    * </code>
    * </div>
    */},{key:"equals",value:function(t,r,n){var o,a,l;return t instanceof s.default.Vector?(o=t.x||0,a=t.y||0,l=t.z||0):Array.isArray(t)?(o=t[0]||0,a=t[1]||0,l=t[2]||0):(o=t||0,a=r||0,l=n||0),this.x===o&&this.y===a&&this.z===l}// Static Methods
}],[{key:"fromAngle",value:function(t,r){return void 0===r&&(r=1),new s.default.Vector(r*Math.cos(t),r*Math.sin(t),0)}/**
    * Make a new 3D vector from a pair of ISO spherical angles.
    *
    * @method fromAngles
    * @static
    * @param {Number}     theta    The polar angle, in radians (zero is up)
    * @param {Number}     phi      The azimuthal angle, in radians
    *                               (zero is out of the screen)
    * @param {Number}     [length] The length of the new vector (defaults to 1)
    * @return {p5.Vector}          A new <a href="#/p5.Vector">p5.Vector</a> object
    * @example
    * <div modernizr='webgl'>
    * <code>
    * function setup() {
    *   createCanvas(100, 100, WEBGL);
    *   fill(255);
    *   noStroke();
    * }
    * function draw() {
    *   background(255);
    *
    *   let t = millis() / 1000;
    *
    *   // add three point lights
    *   pointLight(color('#f00'), p5.Vector.fromAngles(t * 1.0, t * 1.3, 100));
    *   pointLight(color('#0f0'), p5.Vector.fromAngles(t * 1.1, t * 1.2, 100));
    *   pointLight(color('#00f'), p5.Vector.fromAngles(t * 1.2, t * 1.1, 100));
    *
    *   sphere(35);
    * }
    * </code>
    * </div>
    */},{key:"fromAngles",value:function(t,r,n){void 0===n&&(n=1);var o=Math.cos(r),a=Math.sin(r),l=Math.cos(t),c=Math.sin(t);return new s.default.Vector(n*c*a,-n*l,n*c*o)}/**
    * Make a new 2D unit vector from a random angle.
    *
    * @method random2D
    * @static
    * @return {p5.Vector} A new <a href="#/p5.Vector">p5.Vector</a> object
    * @example
    * <div class="norender">
    * <code>
    * let v = p5.Vector.random2D();
    * // May make v's attributes something like:
    * // [0.61554617, -0.51195765, 0.0] or
    * // [-0.4695841, -0.14366731, 0.0] or
    * // [0.6091097, -0.22805278, 0.0]
    * print(v);
    * </code>
    * </div>
    *
    * <div>
    * <code>
    * function setup() {
    *   frameRate(1);
    * }
    *
    * function draw() {
    *   background(240);
    *
    *   let v0 = createVector(50, 50);
    *   let v1 = p5.Vector.random2D();
    *   drawArrow(v0, v1.mult(50), 'black');
    * }
    *
    * // draw an arrow for a vector at a given base position
    * function drawArrow(base, vec, myColor) {
    *   push();
    *   stroke(myColor);
    *   strokeWeight(3);
    *   fill(myColor);
    *   translate(base.x, base.y);
    *   line(0, 0, vec.x, vec.y);
    *   rotate(vec.heading());
    *   let arrowSize = 7;
    *   translate(vec.mag() - arrowSize, 0);
    *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);
    *   pop();
    * }
    * </code>
    * </div>
    */},{key:"random2D",value:function(){return this.fromAngle(Math.random()*l.TWO_PI)}/**
    * Make a new random 3D unit vector.
    *
    * @method random3D
    * @static
    * @return {p5.Vector} A new <a href="#/p5.Vector">p5.Vector</a> object
    * @example
    * <div class="norender">
    * <code>
    * let v = p5.Vector.random3D();
    * // May make v's attributes something like:
    * // [0.61554617, -0.51195765, 0.599168] or
    * // [-0.4695841, -0.14366731, -0.8711202] or
    * // [0.6091097, -0.22805278, -0.7595902]
    * print(v);
    * </code>
    * </div>
    */},{key:"random3D",value:function(){var t=Math.random()*l.TWO_PI,r=2*Math.random()-1,n=Math.sqrt(1-r*r),o=n*Math.cos(t),a=n*Math.sin(t);return new s.default.Vector(o,a,r)}// Returns a copy of a vector.
},{key:"copy",value:function(t){return t.copy(t)}// Adds two vectors together and returns a new one.
},{key:"add",value:function(t,r,n){return n?n.set(t):(n=t.copy(),3==arguments.length&&s.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.add")),n.add(r),n}// Returns a vector remainder when it is divided by another vector
},{key:"rem",value:function(t,r){if(t instanceof s.default.Vector&&r instanceof s.default.Vector){var n=t.copy();return n.rem(r),n}}/*
    * Subtracts one <a href="#/p5.Vector">p5.Vector</a> from another and returns a new one.  The second
    * vector (`v2`) is subtracted from the first (`v1`), resulting in `v1-v2`.
    */},{key:"sub",value:function(t,r,n){return n?n.set(t):(n=t.copy(),3==arguments.length&&s.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.sub")),n.sub(r),n}/**
    * Multiplies a vector by a scalar and returns a new vector.
    */},{key:"mult",value:function(t,r,n){return n?n.set(t):(n=t.copy(),3==arguments.length&&s.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.mult")),n.mult(r),n}/**
    * Rotates the vector (only 2D vectors) by the given angle; magnitude remains the same. Returns a new vector.
    */},{key:"rotate",value:function(t,r,n){return 2==arguments.length?n=t.copy():(n instanceof s.default.Vector||s.default._friendlyError("The target parameter should be of type p5.Vector","p5.Vector.rotate"),n.set(t)),n.rotate(r),n}/**
    * Divides a vector by a scalar and returns a new vector.
    */},{key:"div",value:function(t,r,n){return n?n.set(t):(n=t.copy(),3==arguments.length&&s.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.div")),n.div(r),n}/**
    * Calculates the dot product of two vectors.
    */},{key:"dot",value:function(t,r){return t.dot(r)}/**
    * Calculates the cross product of two vectors.
    */},{key:"cross",value:function(t,r){return t.cross(r)}/**
    * Calculates the Euclidean distance between two points (considering a
    * point as a vector object).
    */},{key:"dist",value:function(t,r){return t.dist(r)}/**
    * Linear interpolate a vector to another vector and return the result as a
    * new vector.
    */},{key:"lerp",value:function(t,r,n,o){return o?o.set(t):(o=t.copy(),4==arguments.length&&s.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.lerp")),o.lerp(r,n),o}/**
    * Performs spherical linear interpolation with the other vector
    * and returns the resulting vector.
    * This works in both 3D and 2D. As for 2D, the result of slerping
    * between 2D vectors is always a 2D vector.
    */},{key:"slerp",value:function(t,r,n,o){return o?o.set(t):(o=t.copy(),4==arguments.length&&s.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.slerp")),o.slerp(r,n),o}/**
    * Calculates the magnitude (length) of the vector and returns the result as
    * a float (this is simply the equation `sqrt(x*x + y*y + z*z)`.)
    */},{key:"mag",value:function(t){return t.mag()}/**
    * Calculates the squared magnitude of the vector and returns the result
    * as a float (this is simply the equation <em>(x\*x + y\*y + z\*z)</em>.)
    * Faster if the real length is not required in the
    * case of comparing vectors, etc.
    */},{key:"magSq",value:function(t){return t.magSq()}/**
    * Normalize the vector to length 1 (make it a unit vector).
    */},{key:"normalize",value:function(t,r){return arguments.length<2?r=t.copy():(r instanceof s.default.Vector||s.default._friendlyError("The target parameter should be of type p5.Vector","p5.Vector.normalize"),r.set(t)),r.normalize()}/**
    * Limit the magnitude of the vector to the value used for the <b>max</b>
    * parameter.
    */},{key:"limit",value:function(t,r,n){return arguments.length<3?n=t.copy():(n instanceof s.default.Vector||s.default._friendlyError("The target parameter should be of type p5.Vector","p5.Vector.limit"),n.set(t)),n.limit(r)}/**
    * Set the magnitude of the vector to the value used for the <b>len</b>
    * parameter.
    */},{key:"setMag",value:function(t,r,n){return arguments.length<3?n=t.copy():(n instanceof s.default.Vector||s.default._friendlyError("The target parameter should be of type p5.Vector","p5.Vector.setMag"),n.set(t)),n.setMag(r)}/**
    * Calculate the angle of rotation for this vector (only 2D vectors).
    * p5.Vectors created using <a href="#/p5/createVector">createVector()</a>
    * will take the current <a href="#/p5/angleMode">angleMode</a> into
    * consideration, and give the angle in radians or degrees accordingly.
    */},{key:"heading",value:function(t){return t.heading()}/**
    * Calculates and returns the angle between two vectors. This function will take
    * the <a href="#/p5/angleMode">angleMode</a> on v1 into consideration, and
    * give the angle in radians or degrees accordingly.
    */},{key:"angleBetween",value:function(t,r){return t.angleBetween(r)}/**
    * Reflect a vector about a normal to a line in 2D, or about a normal to a
    * plane in 3D.
    */},{key:"reflect",value:function(t,r,n){return arguments.length<3?n=t.copy():(n instanceof s.default.Vector||s.default._friendlyError("The target parameter should be of type p5.Vector","p5.Vector.reflect"),n.set(t)),n.reflect(r)}/**
    * Return a representation of this vector as a float array. This is only
    * for temporary use. If used in any other fashion, the contents should be
    * copied by using the <b>p5.Vector.<a href="#/p5.Vector/copy">copy()</a></b>
    * method to copy into your own vector.
    */},{key:"array",value:function(t){return t.array()}/**
    * Equality check against a <a href="#/p5.Vector">p5.Vector</a>
    */},{key:"equals",value:function(t,r){var n;return t instanceof s.default.Vector?n=t:t instanceof Array?n=new s.default.Vector().set(t):s.default._friendlyError("The v1 parameter should be of type Array or p5.Vector","p5.Vector.equals"),n.equals(r)}}]),t}();var g=s.default.Vector;n.default=g},{"../core/constants":284,"../core/main":296,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.every":171,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.slice":182,"core-js/modules/es.array.some":183,"core-js/modules/es.math.sign":188,"core-js/modules/es.number.constructor":189,"core-js/modules/es.number.is-finite":190,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.sub":216,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],330:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Math
 * @submodule Random
 * @for p5
 * @requires core
 */// variables used for random number generators
var s="_lcg_random_state",l=4294967296,c=1664525,u=1013904223,p=0;// Set to values from http://en.wikipedia.org/wiki/Numerical_Recipes
o.default.prototype._lcg=function(t){// we've just used % m, so / m is always < 1
return(// define the recurrence relationship
this[t]=(c*this[t]+u)%l,this[t]/l)},o.default.prototype._lcgSetSeed=function(t,r){// pick a random seed if val is undefined or null
// the >>> 0 casts the seed to an unsigned 32-bit integer
this[t]=(null==r?Math.random()*l:r)>>>0},/**
 * Sets the seed value for <a href="#/p5/random">random()</a>.
 *
 * By default, <a href="#/p5/random">random()</a> produces different results each time the program
 * is run. Set the seed parameter to a constant to return the same
 * pseudo-random numbers each time the software is run.
 *
 * @method randomSeed
 * @param {Number} seed   the seed value
 * @example
 * <div>
 * <code>
 * randomSeed(99);
 * for (let i = 0; i < 100; i++) {
 *   let r = random(0, 255);
 *   stroke(r);
 *   line(i, 0, i, 100);
 * }
 * describe('many vertical lines drawn in white, black, or grey.');
 * </code>
 * </div>
 */o.default.prototype.randomSeed=function(t){this._lcgSetSeed(s,t),this._gaussian_previous=!1},/**
 * Return a random floating-point number.
 *
 * Takes either 0, 1 or 2 arguments.
 *
 * If no argument is given, returns a random number from 0
 * up to (but not including) 1.
 *
 * If one argument is given and it is a number, returns a random number from 0
 * up to (but not including) the number.
 *
 * If one argument is given and it is an array, returns a random element from
 * that array.
 *
 * If two arguments are given, returns a random number from the
 * first argument up to (but not including) the second argument.
 *
 * @method random
 * @param  {Number} [min]   the lower bound (inclusive)
 * @param  {Number} [max]   the upper bound (exclusive)
 * @return {Number} the random number
 * @example
 * <div>
 * <code>
 * for (let i = 0; i < 100; i++) {
 *   let r = random(50);
 *   stroke(r * 5);
 *   line(50, i, 50 + r, i);
 * }
 * describe(`100 horizontal lines from center canvas to right.
 *   The size and fill change each time.`);
 * </code>
 * </div>
 * <div>
 * <code>
 * for (let i = 0; i < 100; i++) {
 *   let r = random(-50, 50);
 *   line(50, i, 50 + r, i);
 * }
 * describe(`100 horizontal lines from center of canvas.
 *   The height & side change each render.`);
 * </code>
 * </div>
 * <div>
 * <code>
 * // Get a random element from an array using the random(Array) syntax
 * let words = ['apple', 'bear', 'cat', 'dog'];
 * let word = random(words); // select random word
 * text(word, 10, 50); // draw the word
 * describe('word displayed at random. Either apple, bear, cat, or dog.');
 * </code>
 * </div>
 *//**
 * @method random
 * @param  {Array} choices   the array to choose from
 * @return {*} the random element from the array
 * @example
 */o.default.prototype.random=function(t,r){if(o.default._validateParameters("random",arguments),n=null!=this[s]?this._lcg(s):Math.random(),void 0===t)return n;if(void 0===r)return t instanceof Array?t[Math.floor(n*t.length)]:n*t;if(t>r){var n,a=t;t=r,r=a}return n*(r-t)+t},/**
 *
 * Returns a random number fitting a Gaussian, or
 * normal, distribution. There is theoretically no minimum or maximum
 * value that <a href="#/p5/randomGaussian">randomGaussian()</a> might return. Rather, there is
 * just a very low probability that values far from the mean will be
 * returned; and a higher probability that numbers near the mean will
 * be returned.
 *
 * Takes either 0, 1 or 2 arguments.<br>
 * If no args, the mean is 0 and the standard deviation is 1.<br>
 * If one arg, that arg is the mean and the standard deviation is 1.<br>
 * If two args, the first arg is the mean and the second is the standard deviation.
 *
 * @method randomGaussian
 * @param  {Number} [mean]  the mean
 * @param  {Number} [sd]    the standard deviation
 * @return {Number} the random number
 * @example
 * <div>
 * <code>
 * for (let y = 0; y < 100; y++) {
 *   let x = randomGaussian(50, 15);
 *   line(50, y, x, y);
 * }
 * describe(`100 horizontal lines from center of canvas.
 *   The height & side change each render.`);
 * </code>
 * </div>
 * <div>
 * <code>
 * let distribution = new Array(360);
 *
 * function setup() {
 *   createCanvas(100, 100);
 *   for (let i = 0; i < distribution.length; i++) {
 *     distribution[i] = floor(randomGaussian(0, 15));
 *   }
 * }
 *
 * function draw() {
 *   background(204);
 *
 *   translate(width / 2, width / 2);
 *
 *   for (let i = 0; i < distribution.length; i++) {
 *     rotate(TWO_PI / distribution.length);
 *     stroke(0);
 *     let dist = abs(distribution[i]);
 *     line(0, 0, dist, 0);
 *   }
 *
 *   describe(`black lines radiate from center of canvas.
 *     The size changes each render.`);
 * }
 * </code>
 * </div>
 */o.default.prototype.randomGaussian=function(t){var r,n,o,a,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(this._gaussian_previous)r=p,this._gaussian_previous=!1;else{do a=(n=this.random(2)-1)*n+(o=this.random(2)-1)*o;while(a>=1)r=n*(a=Math.sqrt(-2*Math.log(a)/a)),p=o*a,this._gaussian_previous=!0}return r*s+(t||0)};var d=o.default;n.default=d},{"../core/main":296}],331:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=p(t("../core/main")),l=u(t("../core/constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Math
 * @submodule Trigonometry
 * @for p5
 * @requires core
 * @requires constants
 *//*
 * all DEGREES/RADIANS conversion should be done in the p5 instance
 * if possible, using the p5._toRadians(), p5._fromRadians() methods.
 */s.default.prototype._angleMode=l.RADIANS,/**
 * The inverse of <a href="#/p5/cos">cos()</a>, returns the arc cosine of a value.
 * This function expects the values in the range of -1 to 1 and values are returned in
 * the range 0 to PI (3.1415927) if the <a href="#/p5/angleMode">angleMode()</a> is RADIANS
 * or 0 to 180 if the <a href="#/p5/angleMode">angleMode()</a> is DEGREES.
 *
 * @method acos
 * @param  {Number} value the value whose arc cosine is to be returned
 * @return {Number}       the arc cosine of the given value
 *
 * @example
 * <div class= “norender">
 * <code>
 * let a = PI;
 * let c = cos(a);
 * let ac = acos(c);
 * // Prints: "3.1415927 : -1.0 : 3.1415927"
 * print(a + ' : ' + c + ' : ' + ac);
 * </code>
 * </div>
 *
 * <div class= “norender">
 * <code>
 * let a = PI + PI / 4.0;
 * let c = cos(a);
 * let ac = acos(c);
 * // Prints: "3.926991 : -0.70710665 : 2.3561943"
 * print(a + ' : ' + c + ' : ' + ac);
 * </code>
 * </div>
 */s.default.prototype.acos=function(t){return this._fromRadians(Math.acos(t))},/**
 * The inverse of <a href="#/p5/sin">sin()</a>, returns the arc sine of a value.
 * This function expects the values in the range of -1 to 1 and values are returned
 * in the range -PI/2 to PI/2 if the angleMode is RADIANS or -90 to 90 if the angle
 * mode is DEGREES.
 *
 * @method asin
 * @param  {Number} value the value whose arc sine is to be returned
 * @return {Number}       the arc sine of the given value
 *
 * @example
 * <div class= “norender">
 * <code>
 * let a = PI / 3.0;
 * let s = sin(a);
 * let as = asin(s);
 * // Prints: "1.0471975 : 0.86602540 : 1.0471975"
 * print(a + ' : ' + s + ' : ' + as);
 * </code>
 * </div>
 *
 * <div class= “norender">
 * <code>
 * let a = PI + PI / 3.0;
 * let s = sin(a);
 * let as = asin(s);
 * // Prints: "4.1887902 : -0.86602540 : -1.0471975"
 * print(a + ' : ' + s + ' : ' + as);
 * </code>
 * </div>
 */s.default.prototype.asin=function(t){return this._fromRadians(Math.asin(t))},/**
 * The inverse of <a href="#/p5/tan">tan()</a>, returns the arc tangent of a value.
 * This function expects the values in the range of -Infinity to Infinity (exclusive) and
 * values are returned in the range -PI/2 to PI/2 if the angleMode is RADIANS or
 * -90 to 90 if the angle mode is DEGREES.
 *
 * @method atan
 * @param  {Number} value the value whose arc tangent is to be returned
 * @return {Number}       the arc tangent of the given value
 *
 * @example
 * <div class= “norender">
 * <code>
 * let a = PI / 3.0;
 * let t = tan(a);
 * let at = atan(t);
 * // Prints: "1.0471975 : 1.7320508 : 1.0471975"
 * print(a + ' : ' + t + ' : ' + at);
 * </code>
 * </div>
 *
 * <div class= “norender">
 * <code>
 * let a = PI + PI / 3.0;
 * let t = tan(a);
 * let at = atan(t);
 * // Prints: "4.1887902 : 1.7320508 : 1.0471975"
 * print(a + ' : ' + t + ' : ' + at);
 * </code>
 * </div>
 */s.default.prototype.atan=function(t){return this._fromRadians(Math.atan(t))},/**
 * Calculates the angle (in radians) from a specified point to the coordinate
 * origin as measured from the positive x-axis. Values are returned as a
 * float in the range from PI to -PI if the <a href="#/p5/angleMode">angleMode()</a>
 * is RADIANS or 180 to -180 if the <a href="#/p5/angleMode">angleMode()</a> is DEGREES.
 * The <a href="#/p5/">atan2()</a> function is most often used for orienting geometry
 * to the position of the cursor.
 *
 * Note: The y-coordinate of the point is the first parameter, and the
 * x-coordinate is the second parameter, due to the structure of calculating
 * the tangent.
 *
 * @method atan2
 * @param  {Number} y y-coordinate of the point
 * @param  {Number} x x-coordinate of the point
 * @return {Number}   the arc tangent of the given point
 *
 * @example
 * <div>
 * <code>
 * function draw() {
 *   background(204);
 *   translate(width / 2, height / 2);
 *   let a = atan2(mouseY - height / 2, mouseX - width / 2);
 *   rotate(a);
 *   rect(-30, -5, 60, 10);
 *   describe('60×10 rect at center of canvas rotates with mouse movements');
 * }
 * </code>
 * </div>
 */s.default.prototype.atan2=function(t,r){return this._fromRadians(Math.atan2(t,r))},/**
 * Calculates the cosine of an angle. This function takes into account the
 * current <a href="#/p5/angleMode">angleMode</a>. Values are returned in the range -1 to 1.
 *
 * @method cos
 * @param  {Number} angle the angle
 * @return {Number}       the cosine of the angle
 *
 * @example
 * <div>
 * <code>
 * let a = 0.0;
 * let inc = TWO_PI / 25.0;
 * for (let i = 0; i < 25; i++) {
 *   line(i * 4, 50, i * 4, 50 + cos(a) * 40.0);
 *   a = a + inc;
 * }
 * describe(`vertical black lines form wave patterns, extend-down on
 *   left and right side`);
 * </code>
 * </div>
 */s.default.prototype.cos=function(t){return Math.cos(this._toRadians(t))},/**
 * Calculates the sine of an angle. This function takes into account the
 * current <a href="#/p5/angleMode">angleMode</a>. Values are returned in the range -1 to 1.
 *
 * @method sin
 * @param  {Number} angle the angle
 * @return {Number}       the sine of the angle
 *
 * @example
 * <div>
 * <code>
 * let a = 0.0;
 * let inc = TWO_PI / 25.0;
 * for (let i = 0; i < 25; i++) {
 *   line(i * 4, 50, i * 4, 50 + sin(a) * 40.0);
 *   a = a + inc;
 * }
 * describe(`vertical black lines extend down and up from center
 *   to form wave pattern.`);
 * </code>
 * </div>
 */s.default.prototype.sin=function(t){return Math.sin(this._toRadians(t))},/**
 * Calculates the tangent of an angle. This function takes into account
 * the current <a href="#/p5/angleMode">angleMode</a>. Values are returned in the range of all real numbers.
 *
 * @method tan
 * @param  {Number} angle the angle
 * @return {Number}       the tangent of the angle
 *
 * @example
 * <div>
 * <code>
 * let a = 0.0;
 * let inc = TWO_PI / 50.0;
 * for (let i = 0; i < 100; i = i + 2) {
 *   line(i, 50, i, 50 + tan(a) * 2.0);
 *   a = a + inc;
 * }
 * describe(`vertical black lines end down and up from center to
 *   form spike pattern.`);
 * </code>
 */s.default.prototype.tan=function(t){return Math.tan(this._toRadians(t))},/**
 * Converts a radian measurement to its corresponding value in degrees.
 * Radians and degrees are two ways of measuring the same thing. There are
 * 360 degrees in a circle and 2*PI radians in a circle. For example,
 * 90° = PI/2 = 1.5707964. This function does not take into account the
 * current <a href="#/p5/angleMode">angleMode()</a>.
 *
 * @method degrees
 * @param  {Number} radians the radians value to convert to degrees
 * @return {Number}         the converted angle
 *
 * @example
 * <div class= “norender">
 * <code>
 * let rad = PI / 4;
 * let deg = degrees(rad);
 * print(rad + ' radians is ' + deg + ' degrees');
 * // Prints: 0.7853981633974483 radians is 45 degrees
 * </code>
 * </div>
 */s.default.prototype.degrees=function(t){return t*l.RAD_TO_DEG},/**
 * Converts a degree measurement to its corresponding value in radians.
 * Radians and degrees are two ways of measuring the same thing. There are
 * 360 degrees in a circle and 2*PI radians in a circle. For example,
 * 90° = PI/2 = 1.5707964. This function does not take into account the
 * current <a href="#/p5/angleMode">angleMode</a>.
 *
 * @method radians
 * @param  {Number} degrees the degree value to convert to radians
 * @return {Number}         the converted angle
 *
 * @example
 * <div class= “norender">
 * <code>
 * let deg = 45.0;
 * let rad = radians(deg);
 * print(deg + ' degrees is ' + rad + ' radians');
 * // Prints: 45 degrees is 0.7853981633974483 radians
 * </code>
 * </div>
 */s.default.prototype.radians=function(t){return t*l.DEG_TO_RAD},/**
 * Sets the current mode of p5 to the given mode. Default mode is RADIANS.
 *
 * Calling <a href="#/p5/angleMode">angleMode()</a> with no arguments returns current anglemode.
 * @method angleMode
 * @param {Constant} mode either RADIANS or DEGREES
 * @example
 * <div>
 * <code>
 * function draw() {
 *   background(204);
 *   angleMode(DEGREES); // Change the mode to DEGREES
 *   let a = atan2(mouseY - height / 2, mouseX - width / 2);
 *   translate(width / 2, height / 2);
 *   push();
 *   rotate(a);
 *   rect(-20, -5, 40, 10); // Larger rectangle is rotating in degrees
 *   pop();
 *   angleMode(RADIANS); // Change the mode to RADIANS
 *   rotate(a); // variable a stays the same
 *   rect(-40, -5, 20, 10); // Smaller rectangle is rotating in radians
 *   describe(`40×10 rect in center rotates with mouse moves.
 *     20×10 rect moves faster.`);
 * }
 * </code>
 * </div>
 *
 *//**
 * @method angleMode
 * @return {Constant} mode either RADIANS or DEGREES
 */s.default.prototype.angleMode=function(t){if(s.default._validateParameters("angleMode",arguments),void 0===t)return this._angleMode;(t===l.DEGREES||t===l.RADIANS)&&(this._angleMode=t)},/**
 * converts angles from the current angleMode to RADIANS
 *
 * @method _toRadians
 * @private
 * @param {Number} angle
 * @returns {Number}
 */s.default.prototype._toRadians=function(t){return this._angleMode===l.DEGREES?t*l.DEG_TO_RAD:t},/**
 * converts angles from the current angleMode to DEGREES
 *
 * @method _toDegrees
 * @private
 * @param {Number} angle
 * @returns {Number}
 */s.default.prototype._toDegrees=function(t){return this._angleMode===l.RADIANS?t*l.RAD_TO_DEG:t},/**
 * converts angles from RADIANS into the current angleMode
 *
 * @method _fromRadians
 * @private
 * @param {Number} angle
 * @returns {Number}
 */s.default.prototype._fromRadians=function(t){return this._angleMode===l.DEGREES?t*l.RAD_TO_DEG:t};var d=s.default;n.default=d},{"../core/constants":284,"../core/main":296,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],332:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Typography
 * @submodule Attributes
 * @for p5
 * @requires core
 * @requires constants
 *//**
 * Sets the current alignment for drawing text. Accepts two
 * arguments: horizAlign (LEFT, CENTER, or RIGHT) and
 * vertAlign (TOP, BOTTOM, CENTER, or BASELINE).
 *
 * The horizAlign parameter is in reference to the x value
 * of the <a href="#/p5/text">text()</a> function, while the vertAlign parameter
 * is in reference to the y value.
 *
 * So if you write textAlign(LEFT), you are aligning the left
 * edge of your text to the x value you give in <a href="#/p5/text">text()</a>.
 * If you write textAlign(RIGHT, TOP), you are aligning the right edge
 * of your text to the x value and the top edge of the text
 * to the y value.
 *
 * @method textAlign
 * @param {Constant} horizAlign horizontal alignment, either LEFT,
 *                            CENTER, or RIGHT
 * @param {Constant} [vertAlign] vertical alignment, either TOP,
 *                            BOTTOM, CENTER, or BASELINE
 * @chainable
 * @example
 * <div>
 * <code>
 * textSize(16);
 * textAlign(RIGHT);
 * text('ABCD', 50, 30);
 * textAlign(CENTER);
 * text('EFGH', 50, 50);
 * textAlign(LEFT);
 * text('IJKL', 50, 70);
 * describe(`Letters ABCD displayed at top left, EFGH at center, and
 *   IJKL at bottom right.`);
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * textSize(16);
 * strokeWeight(0.5);
 *
 * line(0, 12, width, 12);
 * textAlign(CENTER, TOP);
 * text('TOP', 0, 12, width);
 *
 * line(0, 37, width, 37);
 * textAlign(CENTER, CENTER);
 * text('CENTER', 0, 37, width);
 *
 * line(0, 62, width, 62);
 * textAlign(CENTER, BASELINE);
 * text('BASELINE', 0, 62, width);
 *
 * line(0, 97, width, 97);
 * textAlign(CENTER, BOTTOM);
 * text('BOTTOM', 0, 97, width);
 *
 * describe(`The names of the four vertical alignments (TOP, CENTER, BASELINE,
 *   and BOTTOM) rendered each showing that alignment's placement relative to a
 *   horizontal line.`);
 * </code>
 * </div>
 *//**
 * @method textAlign
 * @return {Object}
 */o.default.prototype.textAlign=function(t,r){var n;return o.default._validateParameters("textAlign",arguments),(n=this._renderer).textAlign.apply(n,arguments)},/**
 * Sets/gets the spacing, in pixels, between lines of text. This setting will be
 * used in all subsequent calls to the <a href="#/p5/text">text()</a> function.
 *
 * @method textLeading
 * @param {Number} leading the size in pixels for spacing between lines
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * let lines = 'L1\nL2\nL3'; // "\n" is a "new line" character
 * textSize(12);
 *
 * textLeading(10);
 * text(lines, 10, 25);
 *
 * textLeading(20);
 * text(lines, 40, 25);
 *
 * textLeading(30);
 * text(lines, 70, 25);
 *
 * describe(`A set of L1, L2, and L3, displayed vertically 3 times.
 *   Spacing increases for each set.`);
 * </code>
 * </div>
 *//**
 * @method textLeading
 * @return {Number}
 */o.default.prototype.textLeading=function(t){var r;return o.default._validateParameters("textLeading",arguments),(r=this._renderer).textLeading.apply(r,arguments)},/**
 * Sets/gets the current font size. This size will be used in all subsequent
 * calls to the <a href="#/p5/text">text()</a> function. Font size is measured in pixels.
 *
 * @method textSize
 * @param {Number} theSize the size of the letters in units of pixels
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * textSize(12);
 * text('Font Size 12', 10, 30);
 * textSize(14);
 * text('Font Size 14', 10, 60);
 * textSize(16);
 * text('Font Size 16', 10, 90);
 *
 * describe(`'Font Size 12' displayed small,
 *   'Font Size 14' medium, and
 *   'Font Size 16' large`);
 * </code>
 * </div>
 *//**
 * @method textSize
 * @return {Number}
 */o.default.prototype.textSize=function(t){var r;return o.default._validateParameters("textSize",arguments),(r=this._renderer).textSize.apply(r,arguments)},/**
 * Sets/gets the style of the text for system fonts to NORMAL, ITALIC, BOLD or BOLDITALIC.
 * Note: this may be is overridden by CSS styling. For non-system fonts
 * (opentype, truetype, etc.) please load styled fonts instead.
 *
 * @method textStyle
 * @param {Constant} theStyle styling for text, either NORMAL,
 *                            ITALIC, BOLD or BOLDITALIC
 * @chainable
 * @example
 * <div>
 * <code>
 * strokeWeight(0);
 * textSize(12);
 * textStyle(NORMAL);
 * text('Font Style Normal', 10, 15);
 * textStyle(ITALIC);
 * text('Font Style Italic', 10, 40);
 * textStyle(BOLD);
 * text('Font Style Bold', 10, 65);
 * textStyle(BOLDITALIC);
 * text('Font Style Bold Italic', 10, 90);
 * describe(`The words “Font Style Normal” displayed normally,
 *   “Font Style Italic” in italic,
 *   “Font Style Bold” in bold, and
 *   “Font Style Bold Italic” in bold italics.`);
 * </code>
 * </div>
 *//**
 * @method textStyle
 * @return {String}
 */o.default.prototype.textStyle=function(t){var r;return o.default._validateParameters("textStyle",arguments),(r=this._renderer).textStyle.apply(r,arguments)},/**
 * Calculates and returns the width of any character or text string.
 *
 * @method textWidth
 * @param {String} theText the String of characters to measure
 * @return {Number} the calculated width
 * @example
 * <div>
 * <code>
 * textSize(28);
 *
 * let aChar = 'P';
 * let cWidth = textWidth(aChar);
 * text(aChar, 0, 40);
 * line(cWidth, 0, cWidth, 50);
 *
 * let aString = 'p5.js';
 * let sWidth = textWidth(aString);
 * text(aString, 0, 85);
 * line(sWidth, 50, sWidth, 100);
 *
 * describe('Letter P and p5.js are displayed with vertical lines at end.');
 * </code>
 * </div>
 */o.default.prototype.textWidth=function(){for(var t,r=arguments.length,n=Array(r),a=0;a<r;a++)n[a]=arguments[a];return(n[0]+="",o.default._validateParameters("textWidth",n),0===n[0].length)?0:(t=this._renderer).textWidth.apply(t,n)},/**
 * Returns the ascent of the current font at its current size. The ascent
 * represents the distance, in pixels, of the tallest character above
 * the baseline.
 * @method textAscent
 * @return {Number}
 * @example
 * <div>
 * <code>
 * let base = height * 0.75;
 * let scalar = 0.8; // Different for each font
 *
 * textSize(32); // Set initial text size
 * let asc = textAscent() * scalar; // Calc ascent
 * line(0, base - asc, width, base - asc);
 * text('dp', 0, base); // Draw text on baseline
 *
 * textSize(64); // Increase text size
 * asc = textAscent() * scalar; // Recalc ascent
 * line(40, base - asc, width, base - asc);
 * text('dp', 40, base); // Draw text on baseline
 * </code>
 * </div>
 */o.default.prototype.textAscent=function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return o.default._validateParameters("textAscent",r),this._renderer.textAscent()},/**
 * Returns the descent of the current font at its current size. The descent
 * represents the distance, in pixels, of the character with the longest
 * descender below the baseline.
 * @method textDescent
 * @return {Number}
 * @example
 * <div>
 * <code>
 * let base = height * 0.75;
 * let scalar = 0.8; // Different for each font
 *
 * textSize(32); // Set initial text size
 * let desc = textDescent() * scalar; // Calc descent
 * line(0, base + desc, width, base + desc);
 * text('dp', 0, base); // Draw text on baseline
 *
 * textSize(64); // Increase text size
 * desc = textDescent() * scalar; // Recalc descent
 * line(40, base + desc, width, base + desc);
 * text('dp', 40, base); // Draw text on baseline
 * </code>
 * </div>
 */o.default.prototype.textDescent=function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return o.default._validateParameters("textDescent",r),this._renderer.textDescent()},/**
 * Helper function to measure ascent and descent.
 */o.default.prototype._updateTextMetrics=function(){return this._renderer._updateTextMetrics()},/**
 * Specifies how lines of text are wrapped within a text box. This requires a max-width set on the text area, specified in <a href="#/p5/text">text()</a> as parameter `x2`.
 *
 * WORD wrap style only breaks lines at spaces. A single string without spaces that exceeds the boundaries of the canvas or text area is not truncated, and will overflow the desired area, disappearing at the canvas edge.
 *
 * CHAR wrap style breaks lines wherever needed to stay within the text box.
 *
 * WORD is the default wrap style, and both styles will still break lines at any line breaks (`\n`) specified in the original text. The text area max-height parameter (`y2`) also still applies to wrapped text in both styles, lines of text that do not fit within the text area will not be drawn to the screen.
 *
 * @method textWrap
 * @param {Constant} wrapStyle text wrapping style, either WORD or CHAR
 * @return {String} wrapStyle
 * @example
 * <div>
 * <code>
 * textSize(20);
 * textWrap(WORD);
 * text('Have a wonderful day', 0, 10, 100);
 * </code>
 * </div>
 * <div>
 * <code>
 * textSize(20);
 * textWrap(CHAR);
 * text('Have a wonderful day', 0, 10, 100);
 * </code>
 * </div>
 * <div>
 * <code>
 * textSize(20);
 * textWrap(CHAR);
 * text('祝你有美好的一天', 0, 10, 100);
 * </code>
 * </div>
 * <div>
 * <code>
 * const scream = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
 * textSize(20);
 * textWrap(WORD);
 * text(scream, 0, 0, 100);
 * fill(0, 0, 0, 75);
 * text(scream, 0, 20, 100);
 * fill(0, 0, 0, 50);
 * text(scream, 0, 40, 100);
 * fill(0, 0, 0, 25);
 * text(scream, 0, 60, 100);
 * strokeWeight(2);
 * ellipseMode(CENTER);
 * fill(255);
 * ellipse(15, 50, 15, 15);
 * fill(0);
 * ellipse(11, 47, 1, 1);
 * ellipse(19, 47, 1, 1);
 * ellipse(15, 52, 5, 5);
 * line(15, 60, 15, 70);
 * line(15, 65, 5, 55);
 * line(15, 65, 25, 55);
 * line(15, 70, 10, 80);
 * line(15, 70, 20, 80);
 * </code>
 * </div>
 */o.default.prototype.textWrap=function(t){if("WORD"!==t&&"CHAR"!==t)throw"Error: textWrap accepts only WORD or CHAR";return this._renderer.textWrap(t)};var s=o.default;n.default=s},{"../core/main":296}],333:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.last-index-of"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.split"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.last-index-of"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.split"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=d(t("../core/main")),l=p(t("../core/constants")),c=p(t("opentype.js"));function u(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return u=function(){return t},t}function p(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=u();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function d(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Typography
 * @submodule Loading & Displaying
 * @for p5
 * @requires core
 */t("../core/friendly_errors/validate_params"),t("../core/friendly_errors/file_errors"),t("../core/friendly_errors/fes_core"),/**
 * Loads an opentype font file (.otf, .ttf) from a file or a URL,
 * and returns a <a href="#/p5.Font">p5.Font</a> object. This function
 * is asynchronous, meaning it may not finish before the next line in
 * your sketch is executed.
 *
 * The path to the font should be relative to the HTML file
 * that links in your sketch. Loading fonts from a URL or other
 * remote location may be blocked due to your browser's built-in
 * security.
 *
 * @method loadFont
 * @param  {String}        path       name of the file or url to load
 * @param  {Function}      [callback] function to be executed after
 *                                    <a href="#/p5/loadFont">loadFont()</a> completes
 * @param  {Function}      [onError]  function to be executed if
 *                                    an error occurs
 * @return {p5.Font}                  <a href="#/p5.Font">p5.Font</a> object
 * @example
 *
 * Calling loadFont() inside <a href="#/p5/preload">preload()</a> guarantees
 * that the load operation will have completed before <a href="#/p5/setup">setup()</a>
 * and <a href="#/p5/draw">draw()</a> are called.
 *
 * <div><code>
 * let myFont;
 * function preload() {
 *   myFont = loadFont('assets/inconsolata.otf');
 * }
 *
 * function setup() {
 *   fill('#ED225D');
 *   textFont(myFont);
 *   textSize(36);
 *   text('p5*js', 10, 50);
 * }
 * </code></div>
 *
 * Outside of <a href="#/p5/preload">preload()</a>, you may supply a
 * callback function to handle the object:
 *
 * <div><code>
 * function setup() {
 *   loadFont('assets/inconsolata.otf', drawText);
 * }
 *
 * function drawText(font) {
 *   fill('#ED225D');
 *   textFont(font, 36);
 *   text('p5*js', 10, 50);
 * }
 * </code></div>
 *
 * You can also use the font filename string (without the file extension) to
 * style other HTML elements.
 *
 * <div><code>
 * function preload() {
 *   loadFont('assets/inconsolata.otf');
 * }
 *
 * function setup() {
 *   let myDiv = createDiv('hello there');
 *   myDiv.style('font-family', 'Inconsolata');
 * }
 * </code></div>
 *
 * @alt
 * p5*js in p5's theme dark pink
 * p5*js in p5's theme dark pink
 */s.default.prototype.loadFont=function(t,r,n){s.default._validateParameters("loadFont",arguments);var o=new s.default.Font(this),a=this;return c.load(t,function(l,c){if(l)return(s.default._friendlyFileLoadError(4,t),void 0!==n)?n(l):void console.error(l,t);o.font=c,void 0!==r&&r(o),a._decrementPreload();var u,p,d=["ttf","otf","woff","woff2"],m=t.split("\\").pop().split("/").pop(),f=m.lastIndexOf(".");d.includes(f<1?null:m.slice(f+1))&&(u=m.slice(0,-1!==f?f:0),(p=document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: ".concat(u,";\nsrc: url(").concat(t,");\n}\n"))),document.head.appendChild(p))}),o},/**
 * Draws text to the screen. Displays the information specified in the first
 * parameter on the screen in the position specified by the additional
 * parameters. A default font will be used unless a font is set with the
 * <a href="#/p5/textFont">textFont()</a> function and a default size will be
 * used unless a font is set with <a href="#/p5/textSize">textSize()</a>. Change
 * the color of the text with the <a href="#/p5/fill">fill()</a> function. Change
 * the outline of the text with the <a href="#/p5/stroke">stroke()</a> and
 * <a href="#/p5/strokeWeight">strokeWeight()</a> functions.
 *
 * The text displays in relation to the <a href="#/p5/textAlign">textAlign()</a>
 * function, which gives the option to draw to the left, right, and center of the
 * coordinates.
 *
 * The x2 and y2 parameters define a rectangular area to display within and
 * may only be used with string data. When these parameters are specified,
 * they are interpreted based on the current <a href="#/p5/rectMode">rectMode()</a>
 * setting. Text that does not fit completely within the rectangle specified will
 * not be drawn to the screen. If x2 and y2 are not specified, the baseline
 * alignment is the default, which means that the text will be drawn upwards
 * from x and y.
 *
 * <b>WEBGL</b>: Only opentype/truetype fonts are supported. You must load a font
 * using the <a href="#/p5/loadFont">loadFont()</a> method (see the example above).
 * <a href="#/p5/stroke">stroke()</a> currently has no effect in webgl mode.
 * Learn more about working with text in webgl mode on the
 * <a href="https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5#text">wiki</a>.
 *
 * @method text
 * @param {String|Object|Array|Number|Boolean} str the alphanumeric
 *                                             symbols to be displayed
 * @param {Number} x   x-coordinate of text
 * @param {Number} y   y-coordinate of text
 * @param {Number} [x2]  by default, the width of the text box,
 *                     see <a href="#/p5/rectMode">rectMode()</a> for more info
 * @param {Number} [y2]  by default, the height of the text box,
 *                     see <a href="#/p5/rectMode">rectMode()</a> for more info
 * @chainable
 * @example
 * <div>
 * <code>
 * textSize(32);
 * text('word', 10, 30);
 * fill(0, 102, 153);
 * text('word', 10, 60);
 * fill(0, 102, 153, 51);
 * text('word', 10, 90);
 * </code>
 * </div>
 * <div>
 * <code>
 * let s = 'The quick brown fox jumped over the lazy dog.';
 * fill(50);
 * text(s, 10, 10, 70, 80); // Text wraps within text box
 * </code>
 * </div>
 *
 * <div modernizr='webgl'>
 * <code>
 * let inconsolata;
 * function preload() {
 *   inconsolata = loadFont('assets/inconsolata.otf');
 * }
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   textFont(inconsolata);
 *   textSize(width / 3);
 *   textAlign(CENTER, CENTER);
 * }
 * function draw() {
 *   background(0);
 *   let time = millis();
 *   rotateX(time / 1000);
 *   rotateZ(time / 1234);
 *   text('p5.js', 0, 0);
 * }
 * </code>
 * </div>
 *
 * @alt
 * 'word' displayed 3 times going from black, blue to translucent blue
 * The text 'The quick brown fox jumped over the lazy dog' displayed.
 * The text 'p5.js' spinning in 3d
 */s.default.prototype.text=function(t,r,n,o,a){var l;return s.default._validateParameters("text",arguments),this._renderer._doFill||this._renderer._doStroke?(l=this._renderer).text.apply(l,arguments):this},/**
 * Sets the current font that will be drawn with the <a href="#/p5/text">text()</a> function.
 * If textFont() is called without any argument, it will return the current font if one has
 * been set already. If not, it will return the name of the default font as a string.
 * If textFont() is called with a font to use, it will return the p5 object.
 *
 * <b>WEBGL</b>: Only fonts loaded via <a href="#/p5/loadFont">loadFont()</a> are supported.
 *
 * @method textFont
 * @return {Object} the current font / p5 Object
 *
 * @example
 * <div>
 * <code>
 * fill(0);
 * textSize(12);
 * textFont('Georgia');
 * text('Georgia', 12, 30);
 * textFont('Helvetica');
 * text('Helvetica', 12, 60);
 * </code>
 * </div>
 * <div>
 * <code>
 * let fontRegular, fontItalic, fontBold;
 * function preload() {
 *   fontRegular = loadFont('assets/Regular.otf');
 *   fontItalic = loadFont('assets/Italic.ttf');
 *   fontBold = loadFont('assets/Bold.ttf');
 * }
 * function setup() {
 *   background(210);
 *   fill(0)
    .strokeWeight(0)
    .textSize(10);
 *   textFont(fontRegular);
 *   text('Font Style Normal', 10, 30);
 *   textFont(fontItalic);
 *   text('Font Style Italic', 10, 50);
 *   textFont(fontBold);
 *   text('Font Style Bold', 10, 70);
 * }
 * </code>
 * </div>
 *
 * @alt
 * word 'Georgia' displayed in font Georgia and 'Helvetica' in font Helvetica
 * words Font Style Normal displayed normally, Italic in italic and bold in bold
 *//**
 * @method textFont
 * @param {Object|String} font a font loaded via <a href="#/p5/loadFont">loadFont()</a>,
 * or a String representing a <a href="https://mzl.la/2dOw8WD">web safe font</a>
 * (a font that is generally available across all systems)
 * @param {Number} [size] the font size to use
 * @chainable
 */s.default.prototype.textFont=function(t,r){if(s.default._validateParameters("textFont",arguments),arguments.length){if(!t)throw Error("null font passed to textFont");return this._renderer._setProperty("_textFont",t),r&&(this._renderer._setProperty("_textSize",r),this._renderer._leadingSet||this._renderer._setProperty("_textLeading",r*l._DEFAULT_LEADMULT)),this._renderer._applyTextProperties()}return this._renderer._textFont};var m=s.default;n.default=m},{"../core/constants":284,"../core/friendly_errors/fes_core":287,"../core/friendly_errors/file_errors":288,"../core/friendly_errors/validate_params":291,"../core/main":296,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.includes":176,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.last-index-of":180,"core-js/modules/es.array.slice":182,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.split":214,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254,"opentype.js":269}],334:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.function.name"),t("core-js/modules/es.number.to-fixed"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.split"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.function.name"),t("core-js/modules/es.number.to-fixed"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.split"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=u(t("../core/main")),s=c(t("../core/constants"));function l(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return l=function(){return t},t}function c(t){if(t&&t.__esModule)return t;if(null===t||"object"!==p(t)&&"function"!=typeof t)return{default:t};var r=l();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var s=o?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}function u(t){return t&&t.__esModule?t:{default:t}}function p(t){return(p="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}function d(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function m(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function f(t,r,n){return r&&m(t.prototype,r),n&&m(t,n),t}/**
 * Base class for font handling
 * @class p5.Font
 * @constructor
 * @param {p5} [pInst] pointer to p5 instance
 */function h(t,r){for(var n=b(r,{sampleFactor:.1,simplifyThreshold:0}),o=E(t,0,1),a=o/(o*n.sampleFactor),s=[],l=0;l<o;l+=a)s.push(E(t,l));return n.simplifyThreshold&&y(s,n.simplifyThreshold),s}function y(t){for(var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=0,o=t.length-1;t.length>3&&o>=0;--o)j(x(t,o-1),x(t,o),x(t,o+1),r)&&(// Remove the middle point
t.splice(o%t.length,1),n++);return n}function g(t){for(var r,n=[],o=0;o<t.length;o++)"M"===t[o].type&&(r&&n.push(r),r=[]),r.push(v(t[o]));return n.push(r),n}function v(t){var r=[t.type];// else if (cmd.type === 'Z') { /* no-op */ }
return"M"===t.type||"L"===t.type?r.push(t.x,t.y):"C"===t.type?r.push(t.x1,t.y1,t.x2,t.y2,t.x,t.y):"Q"===t.type&&r.push(t.x1,t.y1,t.x,t.y),r}function b(t,r){if("object"!==p(t))t=r;else for(var n in r)void 0===t[n]&&(t[n]=r[n]);return t}//////////////////////// Helpers ////////////////////////////
function x(t,r){var n=t.length;return t[r<0?r%n+n:r%n]}function j(t,r,n,o){if(!o)return 0===w(t,r,n);void 0===j.tmpPoint1&&(j.tmpPoint1=[],j.tmpPoint2=[]);var a=j.tmpPoint1,s=j.tmpPoint2;return a.x=r.x-t.x,a.y=r.y-t.y,s.x=n.x-r.x,s.y=n.y-r.y,Math.acos((a.x*s.x+a.y*s.y)/(Math.sqrt(a.x*a.x+a.y*a.y)*Math.sqrt(s.x*s.x+s.y*s.y)))<o}function w(t,r,n){return(r[0]-t[0])*(n[1]-t[1])-(n[0]-t[0])*(r[1]-t[1])}// Portions of below code copyright 2008 Dmitry Baranovskiy (via MIT license)
function _(t,r,n,o,a,s,l,c,u){var p=1-u,d=Math.pow(p,3),m=Math.pow(p,2),f=u*u,h=f*u,y=d*t+3*m*u*n+3*p*u*u*a+h*l,g=d*r+3*m*u*o+3*p*u*u*s+h*c,v=t+2*u*(n-t)+f*(a-2*n+t),b=r+2*u*(o-r)+f*(s-2*o+r),x=n+2*u*(a-n)+f*(l-2*a+n),j=o+2*u*(s-o)+f*(c-2*s+o),w=90-180*Math.atan2(v-x,b-j)/Math.PI;return(v>x||b<j)&&(w+=180),{x:y,y:g,m:{x:v,y:b},n:{x:x,y:j},start:{x:p*t+u*n,y:p*r+u*o},end:{x:p*a+u*l,y:p*s+u*c},alpha:w}}function S(t,r,n,o,a,s,l,c,u){return null==u?R(t,r,n,o,a,s,l,c):_(t,r,n,o,a,s,l,c,L(t,r,n,o,a,s,l,c,u))}function E(t,r,n){t=M(t);for(var o,a,s,l,c,u="",p={},d=0,m=0,f=t.length;m<f;m++){if("M"===(s=t[m])[0])o=+s[1],a=+s[2];else{if(d+(l=S(o,a,s[1],s[2],s[3],s[4],s[5],s[6]))>r&&!n)return{x:(c=S(o,a,s[1],s[2],s[3],s[4],s[5],s[6],r-d)).x,y:c.y,alpha:c.alpha};d+=l,o=+s[5],a=+s[6]}u+=s.shift()+s}return p.end=u,(c=n?d:_(o,a,s[0],s[1],s[2],s[3],s[4],s[5],1)).alpha&&(c={x:c.x,y:c.y,alpha:c.alpha}),c}function T(t){var r=[],n=0,o=0,a=0,s=0,l=0;if(!t)return r;"M"===t[0][0]&&(n=+t[0][1],o=+t[0][2],a=n,s=o,l++,r[0]=["M",n,o]);for(var c,u,p,d=3===t.length&&"M"===t[0][0]&&"R"===t[1][0].toUpperCase()&&"Z"===t[2][0].toUpperCase(),m=l,f=t.length;m<f;m++){if(r.push(u=[]),(p=t[m])[0]!==String.prototype.toUpperCase.call(p[0]))switch(u[0]=String.prototype.toUpperCase.call(p[0]),u[0]){case"A":u[1]=p[1],u[2]=p[2],u[3]=p[3],u[4]=p[4],u[5]=p[5],u[6]=+(p[6]+n),u[7]=+(p[7]+o);break;case"V":u[1]=+p[1]+o;break;case"H":u[1]=+p[1]+n;break;case"R":c=[n,o].concat(p.slice(1));for(var h=2,y=c.length;h<y;h++)c[h]=+c[h]+n,c[++h]=+c[h]+o;r.pop(),r=r.concat(O(c,d));break;case"M":a=+p[1]+n,s=+p[2]+o;break;default:for(var g=1,v=p.length;g<v;g++)u[g]=+p[g]+(g%2?n:o)}else if("R"===p[0])c=[n,o].concat(p.slice(1)),r.pop(),r=r.concat(O(c,d)),u=["R"].concat(p.slice(-2));else for(var b=0,x=p.length;b<x;b++)u[b]=p[b];switch(u[0]){case"Z":n=a,o=s;break;case"H":n=u[1];break;case"V":o=u[1];break;case"M":a=u[u.length-2],s=u[u.length-1];break;default:n=u[u.length-2],o=u[u.length-1]}}return r}function M(t,r){var n,o=T(t),a=r&&T(r),s={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},l={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},c=[],u=[],p=function(t,r,n){var o,a,s={T:1,Q:1};if(!t)return["C",r.x,r.y,r.x,r.y,r.x,r.y];switch(t[0]in s||(r.qx=r.qy=null),t[0]){case"M":r.X=t[1],r.Y=t[2];break;case"A":t=["C"].concat(C.apply(0,[r.x,r.y].concat(t.slice(1))));break;case"S":"C"===n||"S"===n?(o=2*r.x-r.bx,a=2*r.y-r.by):(o=r.x,a=r.y),t=["C",o,a].concat(t.slice(1));break;case"T":"Q"===n||"T"===n?(r.qx=2*r.x-r.qx,r.qy=2*r.y-r.qy):(r.qx=r.x,r.qy=r.y),t=["C"].concat(A(r.x,r.y,r.qx,r.qy,t[1],t[2]));break;case"Q":r.qx=t[1],r.qy=t[2],t=["C"].concat(A(r.x,r.y,t[1],t[2],t[3],t[4]));break;case"L":t=["C"].concat(N(r.x,r.y,t[1],t[2]));break;case"H":t=["C"].concat(N(r.x,r.y,t[1],r.y));break;case"V":t=["C"].concat(N(r.x,r.y,r.x,t[1]));break;case"Z":t=["C"].concat(N(r.x,r.y,r.X,r.Y))}return t},d=function(t,r){if(t[r].length>7){t[r].shift();for(var s=t[r];s.length;)c[r]="A",a&&(u[r]="A"),t.splice(r++,0,["C"].concat(s.splice(0,6)));t.splice(r,1),n=Math.max(o.length,a&&a.length||0)}},m=function(t,r,s,l,c){t&&r&&"M"===t[c][0]&&"M"!==r[c][0]&&(r.splice(c,0,["M",l.x,l.y]),s.bx=0,s.by=0,s.x=t[c][1],s.y=t[c][2],n=Math.max(o.length,a&&a.length||0))},f="",h="";n=Math.max(o.length,a&&a.length||0);for(var y=0;y<n;y++){o[y]&&(f=o[y][0]),"C"!==f&&(c[y]=f,y&&(h=c[y-1])),o[y]=p(o[y],s,h),"A"!==c[y]&&"C"===f&&(c[y]="C"),d(o,y),a&&(a[y]&&(f=a[y][0]),"C"!==f&&(u[y]=f,y&&(h=u[y-1])),a[y]=p(a[y],l,h),"A"!==u[y]&&"C"===f&&(u[y]="C"),d(a,y)),m(o,a,s,l,y),m(a,o,l,s,y);var g=o[y],v=a&&a[y],b=g.length,x=a&&v.length;s.x=g[b-2],s.y=g[b-1],s.bx=parseFloat(g[b-4])||s.x,s.by=parseFloat(g[b-3])||s.y,l.bx=a&&(parseFloat(v[x-4])||l.x),l.by=a&&(parseFloat(v[x-3])||l.y),l.x=a&&v[x-2],l.y=a&&v[x-1]}return a?[o,a]:o}function C(t,r,n,o,a,s,l,c,u,p){// for more information of where this Math came from visit:
// http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes
var d,m,f,h,y,g=Math.PI,v=120*g/180,b=g/180*(+a||0),x=[],j=function(t,r,n){return{x:t*Math.cos(n)-r*Math.sin(n),y:t*Math.sin(n)+r*Math.cos(n)}};if(p)d=p[0],m=p[1],f=p[2],h=p[3];else{t=(y=j(t,r,-b)).x,r=y.y,c=(y=j(c,u,-b)).x,u=y.y;var w=(t-c)/2,_=(r-u)/2,S=w*w/(n*n)+_*_/(o*o);S>1&&(n*=S=Math.sqrt(S),o*=S);var E=n*n,T=o*o,M=(s===l?-1:1)*Math.sqrt(Math.abs((E*T-E*_*_-T*w*w)/(E*_*_+T*w*w)));f=M*n*_/o+(t+c)/2,h=-(M*o)*w/n+(r+u)/2,d=Math.asin(((r-h)/o).toFixed(9)),m=Math.asin(((u-h)/o).toFixed(9)),d=t<f?g-d:d,m=c<f?g-m:m,d<0&&(d=2*g+d),m<0&&(m=2*g+m),l&&d>m&&(d-=2*g),!l&&m>d&&(m-=2*g)}var O=m-d;if(Math.abs(O)>v){var N=m,A=c,R=u;x=C(c=f+n*Math.cos(m=d+v*(l&&m>d?1:-1)),u=h+o*Math.sin(m),n,o,a,0,l,A,R,[m,N,f,h])}O=m-d;var L=Math.cos(d),I=Math.cos(m),P=Math.tan(O/4),D=4/3*n*P,F=4/3*o*P,U=[t,r],B=[t+D*Math.sin(d),r-F*L],G=[c+D*Math.sin(m),u-F*I],V=[c,u];if(B[0]=2*U[0]-B[0],B[1]=2*U[1]-B[1],p)return[B,G,V].concat(x);x=[B,G,V].concat(x).join().split(",");for(var z=[],H=0,W=x.length;H<W;H++)z[H]=H%2?j(x[H-1],x[H],b).y:j(x[H],x[H+1],b).x;return z}// http://schepers.cc/getting-to-the-point
function O(t,r){for(var n=[],o=0,a=t.length;a-2*!r>o;o+=2){var s=[{x:+t[o-2],y:+t[o-1]},{x:+t[o],y:+t[o+1]},{x:+t[o+2],y:+t[o+3]},{x:+t[o+4],y:+t[o+5]}];r?o?a-4===o?s[3]={x:+t[0],y:+t[1]}:a-2===o&&(s[2]={x:+t[0],y:+t[1]},s[3]={x:+t[2],y:+t[3]}):s[0]={x:+t[a-2],y:+t[a-1]}:a-4===o?s[3]=s[2]:o||(s[0]={x:+t[o],y:+t[o+1]}),n.push(["C",(-s[0].x+6*s[1].x+s[2].x)/6,(-s[0].y+6*s[1].y+s[2].y)/6,(s[1].x+6*s[2].x-s[3].x)/6,(s[1].y+6*s[2].y-s[3].y)/6,s[2].x,s[2].y])}return n}function N(t,r,n,o){return[t,r,n,o,n,o]}function A(t,r,n,o,a,s){return[1/3*t+2/3*n,1/3*r+2/3*o,1/3*a+2/3*n,1/3*s+2/3*o,a,s]}function R(t,r,n,o,a,s,l,c,u){null==u&&(u=1);for(var p=(u=u>1?1:u<0?0:u)/2,d=12,m=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],f=0,h=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],y=0;y<d;y++){var g=p*m[y]+p,v=I(g,t,n,a,l),b=I(g,r,o,s,c),x=v*v+b*b;f+=h[y]*Math.sqrt(x)}return p*f}function L(t,r,n,o,a,s,l,c,u){if(!(u<0||R(t,r,n,o,a,s,l,c)<u)){var p,d=1,m=d/2,f=d-m,h=.01;for(p=R(t,r,n,o,a,s,l,c,f);Math.abs(p-u)>h;)m/=2,f+=(p<u?1:-1)*m,p=R(t,r,n,o,a,s,l,c,f);return f}}function I(t,r,n,o,a){var s=t*(-3*r+9*n-9*o+3*a)+6*r-12*n+6*o;return t*s-3*r+3*n}function P(){for(var t="",r=arguments.length-1;r>=0;--r)t+="？".concat(r<0||arguments.length<=r?void 0:arguments[r]);return t}a.default.Font=/*#__PURE__*/function(){function t(r){d(this,t),this.parent=r,this.cache={},/**
    * Underlying opentype font implementation
    * @property font
    */this.font=void 0}/**
  * Returns a tight bounding box for the given text string using this
  * font
  *
  * @method textBounds
  * @param  {String} line     a line of text
  * @param  {Number} x        x-position
  * @param  {Number} y        y-position
  * @param  {Number} [fontSize] font size to use (optional) Default is 12.
  * @param  {Object} [options] opentype options (optional)
  *                            opentype fonts contains alignment and baseline options.
  *                            Default is 'LEFT' and 'alphabetic'
  *
  * @return {Object}          a rectangle object with properties: x, y, w, h
  *
  * @example
  * <div>
  * <code>
  * let font;
  * let textString = 'Lorem ipsum dolor sit amet.';
  * function preload() {
  *   font = loadFont('./assets/Regular.otf');
  * }
  * function setup() {
  *   background(210);
  *
  *   let bbox = font.textBounds(textString, 10, 30, 12);
  *   fill(255);
  *   stroke(0);
  *   rect(bbox.x, bbox.y, bbox.w, bbox.h);
  *   fill(0);
  *   noStroke();
  *
  *   textFont(font);
  *   textSize(12);
  *   text(textString, 10, 30);
  *
  *   describe(`Words “Lorem ipsum dol” go off canvas and
  *     contained by white bounding box`);
  * }
  * </code>
  * </div>
  */return f(t,[{key:"textBounds",value:function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0,l=a&&a.renderer&&a.renderer._pInst||this.parent,c=l._renderer.drawingContext,u=c.textAlign||s.LEFT,p=c.textBaseline||s.BASELINE,d=!1;if(o=o||l._renderer._textSize,d&&(f=P("textBounds",t,r,n,o,u,p),m=this.cache[f]),!m){var m,f,h,y,g=[],v=[],b=[];b[0]=[];var x=[],j=this._scale(o),w=l._renderer.textLeading(),_=0;this.font.forEachGlyph(t,r,n,o,a,function(t,r,n,o){var a=t.getMetrics();0===t.index||10===t.index?b[_+=1]=[]:(b[_].push(r+a.xMin*j),b[_].push(r+a.xMax*j),x.push(n+_*w+-a.yMin*j),x.push(n+_*w+-a.yMax*j))}),b[_].length>0&&(g[_]=Math.min.apply(null,b[_]),v[_]=Math.max.apply(null,b[_]));for(var S=0,E=0;E<=_;E++){g[E]=Math.min.apply(null,b[E]),v[E]=Math.max.apply(null,b[E]);var T=v[E]-g[E];T>S&&(S=T)}var M=Math.min.apply(null,g);m={x:M,y:h=Math.min.apply(null,x),h:Math.max.apply(null,x)-h,w:S,advance:M-r},y=this._handleAlignment(l._renderer,t,m.x,m.y,m.w+m.advance),m.x=y.x,m.y=y.y,d&&(this.cache[f]=m)}return m}/**
    * Computes an array of points following the path for specified text
    *
    * @method textToPoints
    * @param  {String} txt     a line of text
    * @param  {Number} x        x-position
    * @param  {Number} y        y-position
    * @param  {Number} fontSize font size to use (optional)
    * @param  {Object} [options] an (optional) object that can contain:
    *
    * <br>sampleFactor - the ratio of path-length to number of samples
    * (default=.1); higher values yield more points and are therefore
    * more precise
    *
    * <br>simplifyThreshold - if set to a non-zero value, collinear points will be
    * be removed from the polygon; the value represents the threshold angle to use
    * when determining whether two edges are collinear
    *
    * @return {Array}  an array of points, each with x, y, alpha (the path angle)
    * @example
    * <div>
    * <code>
    * let font;
    * function preload() {
    *   font = loadFont('assets/inconsolata.otf');
    * }
    *
    * let points;
    * let bounds;
    * function setup() {
    *   createCanvas(100, 100);
    *   stroke(0);
    *   fill(255, 104, 204);
    *
    *   points = font.textToPoints('p5', 0, 0, 10, {
    *     sampleFactor: 5,
    *     simplifyThreshold: 0
    *   });
    *   bounds = font.textBounds(' p5 ', 0, 0, 10);
    * }
    *
    * function draw() {
    *   background(255);
    *   beginShape();
    *   translate(-bounds.x * width / bounds.w, -bounds.y * height / bounds.h);
    *   for (let i = 0; i < points.length; i++) {
    *     let p = points[i];
    *     vertex(
    *       p.x * width / bounds.w +
    *         sin(20 * p.y / bounds.h + millis() / 1000) * width / 30,
    *       p.y * height / bounds.h
    *     );
    *   }
    *   endShape(CLOSE);
    * }
    * </code>
    * </div>
    */},{key:"textToPoints",value:function(t,r,n,o,a){var s=0,l=[],c=this._getGlyphs(t);function u(r){return c[r].name&&"space"===c[r].name||t.length===c.length&&" "//||
===t[r]}o=o||this.parent._renderer._textSize;for(var p=0;p<c.length;p++){if(!u(p))for(var d=g(c[p].getPath(r,n,o).commands),m=0;m<d.length;m++)for(var f=h(d[m],a),y=0;y<f.length;y++)f[y].x+=s,l.push(f[y]);s+=c[p].advanceWidth*this._scale(o)}return l}// ----------------------------- End API ------------------------------
},{key:"_getGlyphs",value:function(t){return this.font.stringToGlyphs(t)}/**
    * Returns an opentype path for the supplied string and position.
    *
    * @private
    * @param  {String} line     a line of text
    * @param  {Number} x        x-position
    * @param  {Number} y        y-position
    * @param  {Object} options opentype options (optional)
    * @return {Object}     the opentype path
    */},{key:"_getPath",value:function(t,r,n,o){var a=(o&&o.renderer&&o.renderer._pInst||this.parent)._renderer,s=this._handleAlignment(a,t,r,n);return this.font.getPath(t,s.x,s.y,a._textSize,o)}/*
    * Creates an SVG-formatted path-data string
    * (See http://www.w3.org/TR/SVG/paths.html#PathData)
    * from the given opentype path or string/position
    *
    * @param  {Object} path    an opentype path, OR the following:
    *
    * @param  {String} line     a line of text
    * @param  {Number} x        x-position
    * @param  {Number} y        y-position
    * @param  {Object} options opentype options (optional), set options.decimals
    * to set the decimal precision of the path-data
    *
    * @return {Object}     this p5.Font object
    */},{key:"_getPathData",value:function(t,r,n,o){var a=3;// create path from string/position
return"string"==typeof t&&arguments.length>2?t=this._getPath(t,r,n,o):"object"===p(r)&&(o=r),o&&"number"==typeof o.decimals&&(a=o.decimals),t.toPathData(a)}/*
    * Creates an SVG <path> element, as a string,
    * from the given opentype path or string/position
    *
    * @param  {Object} path    an opentype path, OR the following:
    *
    * @param  {String} line     a line of text
    * @param  {Number} x        x-position
    * @param  {Number} y        y-position
    * @param  {Object} options opentype options (optional), set options.decimals
    * to set the decimal precision of the path-data in the <path> element,
    *  options.fill to set the fill color for the <path> element,
    *  options.stroke to set the stroke color for the <path> element,
    *  options.strokeWidth to set the strokeWidth for the <path> element.
    *
    * @return {Object}     this p5.Font object
    */},{key:"_getSVG",value:function(t,r,n,o){var a=3;// create path from string/position
return"string"==typeof t&&arguments.length>2?t=this._getPath(t,r,n,o):"object"===p(r)&&(o=r),o&&("number"==typeof o.decimals&&(a=o.decimals),"number"==typeof o.strokeWidth&&(t.strokeWidth=o.strokeWidth),void 0!==o.fill&&(t.fill=o.fill),void 0!==o.stroke&&(t.stroke=o.stroke)),t.toSVG(a)}/*
    * Renders an opentype path or string/position
    * to the current graphics context
    *
    * @param  {Object} path    an opentype path, OR the following:
    *
    * @param  {String} line     a line of text
    * @param  {Number} x        x-position
    * @param  {Number} y        y-position
    * @param  {Object} options opentype options (optional)
    *
    * @return {p5.Font}     this p5.Font object
    */},{key:"_renderPath",value:function(t,r,n,o){var a=o&&o.renderer||this.parent._renderer,l=a.drawingContext;m="object"===p(t)&&t.commands?t.commands:this._getPath(t,r,n,o).commands,l.beginPath();var c=!0,u=!1,d=void 0;try{for(var m,f,h=m[Symbol.iterator]();!(c=(f=h.next()).done);c=!0){var y=f.value;"M"===y.type?l.moveTo(y.x,y.y):"L"===y.type?l.lineTo(y.x,y.y):"C"===y.type?l.bezierCurveTo(y.x1,y.y1,y.x2,y.y2,y.x,y.y):"Q"===y.type?l.quadraticCurveTo(y.x1,y.y1,y.x,y.y):"Z"===y.type&&l.closePath()}// only draw stroke if manually set by user
}catch(t){u=!0,d=t}finally{try{c||null==h.return||h.return()}finally{if(u)throw d}}return a._doStroke&&a._strokeSet&&l.stroke(),a._doFill&&(a._fillSet||a._setFill(s._DEFAULT_TEXT_FILL),l.fill()),this}},{key:"_textWidth",value:function(t,r){return this.font.getAdvanceWidth(t,r)}},{key:"_textAscent",value:function(t){return this.font.ascender*this._scale(t)}},{key:"_textDescent",value:function(t){return-this.font.descender*this._scale(t)}},{key:"_scale",value:function(t){return 1/this.font.unitsPerEm*(t||this.parent._renderer._textSize)}},{key:"_handleAlignment",value:function(t,r,n,o,a){var l=t._textSize;switch(void 0===a&&(a=this._textWidth(r,l)),t._textAlign){case s.CENTER:n-=a/2;break;case s.RIGHT:n-=a}switch(t._textBaseline){case s.TOP:o+=this._textAscent(l);break;case s.CENTER:o+=this._textAscent(l)/2;break;case s.BOTTOM:o-=this._textDescent(l)}return{x:n,y:o}}}]),t}();var D=a.default;n.default=D},{"../core/constants":284,"../core/main":296,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.fill":172,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.join":179,"core-js/modules/es.array.slice":182,"core-js/modules/es.array.splice":184,"core-js/modules/es.function.name":185,"core-js/modules/es.number.to-fixed":191,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.split":214,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],335:[function(t,r,n){t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.array-buffer.constructor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.array-buffer.constructor"),t("core-js/modules/es.object.to-string"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Data
 * @submodule Array Functions
 * @for p5
 * @requires core
 *//**
 * Adds a value to the end of an array. Extends the length of
 * the array by one. Maps to Array.push().
 *
 * @method append
 * @deprecated Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push">array.push(value)</a> instead.
 * @param {Array} array Array to append
 * @param {any} value to be added to the Array
 * @return {Array} the array that was appended to
 * @example
 * <div class='norender'><code>
 * function setup() {
 *   let myArray = ['Mango', 'Apple', 'Papaya'];
 *   print(myArray); // ['Mango', 'Apple', 'Papaya']
 *
 *   append(myArray, 'Peach');
 *   print(myArray); // ['Mango', 'Apple', 'Papaya', 'Peach']
 * }
 * </code></div>
 */o.default.prototype.append=function(t,r){return t.push(r),t},/**
 * Copies an array (or part of an array) to another array. The src array is
 * copied to the dst array, beginning at the position specified by
 * srcPosition and into the position specified by dstPosition. The number of
 * elements to copy is determined by length. Note that copying values
 * overwrites existing values in the destination array. To append values
 * instead of overwriting them, use <a href="#/p5/concat">concat()</a>.
 *
 * The simplified version with only two arguments, arrayCopy(src, dst),
 * copies an entire array to another of the same size. It is equivalent to
 * arrayCopy(src, 0, dst, 0, src.length).
 *
 * Using this function is far more efficient for copying array data than
 * iterating through a for() loop and copying each element individually.
 *
 * @method arrayCopy
 * @deprecated Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin">arr1.copyWithin(arr2)</a> instead.
 * @param {Array}  src           the source Array
 * @param {Integer} srcPosition  starting position in the source Array
 * @param {Array}  dst           the destination Array
 * @param {Integer} dstPosition   starting position in the destination Array
 * @param {Integer} length        number of Array elements to be copied
 *
 * @example
 * <div class='norender'><code>
 * let src = ['A', 'B', 'C'];
 * let dst = [1, 2, 3];
 * let srcPosition = 1;
 * let dstPosition = 0;
 * let length = 2;
 *
 * print(src); // ['A', 'B', 'C']
 * print(dst); // [ 1 ,  2 ,  3 ]
 *
 * arrayCopy(src, srcPosition, dst, dstPosition, length);
 * print(dst); // ['B', 'C', 3]
 * </code></div>
 *//**
 * @method arrayCopy
 * @deprecated Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin">arr1.copyWithin(arr2)</a> instead.
 * @param {Array}  src
 * @param {Array}  dst
 * @param {Integer} [length]
 */o.default.prototype.arrayCopy=function(t,r,n,o,a){var s,l;void 0!==a?(l=Math.min(a,t.length),s=o,t=t.slice(r,l+r)):(l=void 0!==n?Math.min(// src, dst, length
// rename  so we don't get confused
l=n,t.length):t.length,s=0,n=r,t=t.slice(0,l)),// we must modify the actual values of the array
// instead of reassigning arrays
Array.prototype.splice.apply(n,[s,l].concat(t))},/**
 * Concatenates two arrays, maps to Array.concat(). Does not modify the
 * input arrays.
 *
 * @method concat
 * @deprecated Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat">arr1.concat(arr2)</a> instead.
 * @param {Array} a first Array to concatenate
 * @param {Array} b second Array to concatenate
 * @return {Array} concatenated array
 *
 * @example
 * <div class = 'norender'><code>
 * function setup() {
 *   let arr1 = ['A', 'B', 'C'];
 *   let arr2 = [1, 2, 3];
 *
 *   print(arr1); // ['A','B','C']
 *   print(arr2); // [1,2,3]
 *
 *   let arr3 = concat(arr1, arr2);
 *
 *   print(arr1); // ['A','B','C']
 *   print(arr2); // [1, 2, 3]
 *   print(arr3); // ['A','B','C', 1, 2, 3]
 * }
 * </code></div>
 */o.default.prototype.concat=function(t,r){return t.concat(r)},/**
 * Reverses the order of an array, maps to Array.reverse()
 *
 * @method reverse
 * @deprecated Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse">array.reverse()</a> instead.
 * @param {Array} list Array to reverse
 * @return {Array} the reversed list
 * @example
 * <div class='norender'><code>
 * function setup() {
 *   let myArray = ['A', 'B', 'C'];
 *   print(myArray); // ['A','B','C']
 *
 *   reverse(myArray);
 *   print(myArray); // ['C','B','A']
 * }
 * </code></div>
 */o.default.prototype.reverse=function(t){return t.reverse()},/**
 * Decreases an array by one element and returns the shortened array,
 * maps to Array.pop().
 *
 * @method shorten
 * @deprecated Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop">array.pop()</a> instead.
 * @param  {Array} list Array to shorten
 * @return {Array} shortened Array
 * @example
 * <div class = 'norender'><code>
 * function setup() {
 *   let myArray = ['A', 'B', 'C'];
 *   print(myArray); // ['A', 'B', 'C']
 *   let newArray = shorten(myArray);
 *   print(myArray); // ['A','B','C']
 *   print(newArray); // ['A','B']
 * }
 * </code></div>
 */o.default.prototype.shorten=function(t){return t.pop(),t},/**
 * Randomizes the order of the elements of an array. Implements
 * <a href='http://Bost.Ocks.org/mike/shuffle/' target=_blank>
 * Fisher-Yates Shuffle Algorithm</a>.
 *
 * @method shuffle
 * @param  {Array}   array  Array to shuffle
 * @param  {Boolean} [bool] modify passed array
 * @return {Array}   shuffled Array
 * @example
 * <div><code>
 * function setup() {
 *   let regularArr = ['ABC', 'def', createVector(), TAU, Math.E];
 *   print(regularArr);
 *   shuffle(regularArr, true); // force modifications to passed array
 *   print(regularArr);
 *
 *   // By default shuffle() returns a shuffled cloned array:
 *   let newArr = shuffle(regularArr);
 *   print(regularArr);
 *   print(newArr);
 * }
 * </code></div>
 */o.default.prototype.shuffle=function(t,r){for(var n,o,a=ArrayBuffer&&ArrayBuffer.isView&&ArrayBuffer.isView(t),s=(t=r||a?t:t.slice()).length;s>1;)n=this.random(0,1)*s|0,o=t[--s],t[s]=t[n],t[n]=o;return t},/**
 * Sorts an array of numbers from smallest to largest, or puts an array of
 * words in alphabetical order. The original array is not modified; a
 * re-ordered array is returned. The count parameter states the number of
 * elements to sort. For example, if there are 12 elements in an array and
 * count is set to 5, only the first 5 elements in the array will be sorted.
 *
 * @method sort
 * @deprecated Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort">array.sort()</a> instead.
 * @param {Array} list Array to sort
 * @param {Integer} [count] number of elements to sort, starting from 0
 * @return {Array} the sorted list
 *
 * @example
 * <div class = 'norender'><code>
 * function setup() {
 *   let words = ['banana', 'apple', 'pear', 'lime'];
 *   print(words); // ['banana', 'apple', 'pear', 'lime']
 *   let count = 4; // length of array
 *
 *   words = sort(words, count);
 *   print(words); // ['apple', 'banana', 'lime', 'pear']
 * }
 * </code></div>
 * <div class = 'norender'><code>
 * function setup() {
 *   let numbers = [2, 6, 1, 5, 14, 9, 8, 12];
 *   print(numbers); // [2, 6, 1, 5, 14, 9, 8, 12]
 *   let count = 5; // Less than the length of the array
 *
 *   numbers = sort(numbers, count);
 *   print(numbers); // [1,2,5,6,14,9,8,12]
 * }
 * </code></div>
 */o.default.prototype.sort=function(t,r){var n=r?t.slice(0,Math.min(r,t.length)):t,o=r?t.slice(Math.min(r,t.length)):[];return(n="string"==typeof n[0]?n.sort():n.sort(function(t,r){return t-r})).concat(o)},/**
 * Inserts a value or an array of values into an existing array. The first
 * parameter specifies the initial array to be modified, and the second
 * parameter defines the data to be inserted. The third parameter is an index
 * value which specifies the array position from which to insert data.
 * (Remember that array index numbering starts at zero, so the first position
 * is 0, the second position is 1, and so on.)
 *
 * @method splice
 * @deprecated Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice">array.splice()</a> instead.
 * @param {Array}  list Array to splice into
 * @param {any}    value value to be spliced in
 * @param {Integer} position in the array from which to insert data
 * @return {Array} the list
 *
 * @example
 * <div class = 'norender'><code>
 * function setup() {
 *   let myArray = [0, 1, 2, 3, 4];
 *   let insArray = ['A', 'B', 'C'];
 *   print(myArray); // [0, 1, 2, 3, 4]
 *   print(insArray); // ['A','B','C']
 *
 *   splice(myArray, insArray, 3);
 *   print(myArray); // [0,1,2,'A','B','C',3,4]
 * }
 * </code></div>
 */o.default.prototype.splice=function(t,r,n){return(// note that splice returns spliced elements and not an array
Array.prototype.splice.apply(t,[n,0].concat(r)),t)},/**
 * Extracts an array of elements from an existing array. The list parameter
 * defines the array from which the elements will be copied, and the start
 * and count parameters specify which elements to extract. If no count is
 * given, elements will be extracted from the start to the end of the array.
 * When specifying the start, remember that the first array element is 0.
 * This function does not change the source array.
 *
 * @method subset
 * @deprecated Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice">array.slice()</a> instead.
 * @param  {Array}  list    Array to extract from
 * @param  {Integer} start   position to begin
 * @param  {Integer} [count] number of values to extract
 * @return {Array}          Array of extracted elements
 *
 * @example
 * <div class = 'norender'><code>
 * function setup() {
 *   let myArray = [1, 2, 3, 4, 5];
 *   print(myArray); // [1, 2, 3, 4, 5]
 *
 *   let sub1 = subset(myArray, 0, 3);
 *   let sub2 = subset(myArray, 2, 2);
 *   print(sub1); // [1,2,3]
 *   print(sub2); // [3,4]
 * }
 * </code></div>
 */o.default.prototype.subset=function(t,r,n){return void 0!==n?t.slice(r,r+n):t.slice(r,t.length)};var s=o.default;n.default=s},{"../core/main":296,"core-js/modules/es.array-buffer.constructor":168,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.slice":182,"core-js/modules/es.array.splice":184,"core-js/modules/es.object.to-string":198}],336:[function(t,r,n){t("core-js/modules/es.array.map"),t("core-js/modules/es.number.constructor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.repeat"),t("core-js/modules/es.array.map"),t("core-js/modules/es.number.constructor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.repeat"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Data
 * @submodule Conversion
 * @for p5
 * @requires core
 *//**
 * Converts a string to its floating point representation. The contents of a
 * string must resemble a number, or NaN (not a number) will be returned.
 * For example, float("1234.56") evaluates to 1234.56, but float("giraffe")
 * will return NaN.
 *
 * When an array of values is passed in, then an array of floats of the same
 * length is returned.
 *
 * @method float
 * @param {String}  str float string to parse
 * @return {Number}     floating point representation of string
 * @example
 * <div><code>
 * let str = '20';
 * let diameter = float(str);
 * ellipse(width / 2, height / 2, diameter, diameter);
 * </code></div>
 * <div class='norender'><code>
 * print(float('10.31')); // 10.31
 * print(float('Infinity')); // Infinity
 * print(float('-Infinity')); // -Infinity
 * </code></div>
 *
 * @alt
 * 20 by 20 white ellipse in the center of the canvas
 */o.default.prototype.float=function(t){return t instanceof Array?t.map(parseFloat):parseFloat(t)},/**
 * Converts a boolean, string, or float to its integer representation.
 * When an array of values is passed in, then an int array of the same length
 * is returned.
 *
 * @method int
 * @param {String|Boolean|Number}       n value to parse
 * @param {Integer}       [radix] the radix to convert to (default: 10)
 * @return {Number}                     integer representation of value
 *
 * @example
 * <div class='norender'><code>
 * print(int('10')); // 10
 * print(int(10.31)); // 10
 * print(int(-10)); // -10
 * print(int(true)); // 1
 * print(int(false)); // 0
 * print(int([false, true, '10.3', 9.8])); // [0, 1, 10, 9]
 * print(int(Infinity)); // Infinity
 * print(int('-Infinity')); // -Infinity
 * </code></div>
 *//**
 * @method int
 * @param {Array} ns                    values to parse
 * @param {Integer}       [radix]
 * @return {Number[]}                   integer representation of values
 */o.default.prototype.int=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;return t===1/0||"Infinity"===t?1/0:t===-1/0||"-Infinity"===t?-1/0:"string"==typeof t?parseInt(t,r):"number"==typeof t?0|t:"boolean"==typeof t?t?1:0:t instanceof Array?t.map(function(t){return o.default.prototype.int(t,r)}):void 0},/**
 * Converts a boolean, string or number to its string representation.
 * When an array of values is passed in, then an array of strings of the same
 * length is returned.
 *
 * @method str
 * @param {String|Boolean|Number|Array} n value to parse
 * @return {String}                     string representation of value
 * @example
 * <div class='norender'><code>
 * print(str('10')); // "10"
 * print(str(10.31)); // "10.31"
 * print(str(-10)); // "-10"
 * print(str(true)); // "true"
 * print(str(false)); // "false"
 * print(str([true, '10.3', 9.8])); // [ "true", "10.3", "9.8" ]
 * </code></div>
 */o.default.prototype.str=function(t){return t instanceof Array?t.map(o.default.prototype.str):String(t)},/**
 * Converts a number or string to its boolean representation.
 * For a number, any non-zero value (positive or negative) evaluates to true,
 * while zero evaluates to false. For a string, the value "true" evaluates to
 * true, while any other value evaluates to false. When an array of number or
 * string values is passed in, then a array of booleans of the same length is
 * returned.
 *
 * @method boolean
 * @param {String|Boolean|Number|Array} n value to parse
 * @return {Boolean}                    boolean representation of value
 * @example
 * <div class='norender'><code>
 * print(boolean(0)); // false
 * print(boolean(1)); // true
 * print(boolean('true')); // true
 * print(boolean('abcd')); // false
 * print(boolean([0, 12, 'true'])); // [false, true, true]
 * </code></div>
 */o.default.prototype.boolean=function(t){return"number"==typeof t?0!==t:"string"==typeof t?"true"===t.toLowerCase():"boolean"==typeof t?t:t instanceof Array?t.map(o.default.prototype.boolean):void 0},/**
 * Converts a number, string representation of a number, or boolean to its byte
 * representation. A byte can be only a whole number between -128 and 127, so
 * when a value outside of this range is converted, it wraps around to the
 * corresponding byte representation. When an array of number, string or boolean
 * values is passed in, then an array of bytes the same length is returned.
 *
 * @method byte
 * @param {String|Boolean|Number}       n value to parse
 * @return {Number}                     byte representation of value
 *
 * @example
 * <div class='norender'><code>
 * print(byte(127)); // 127
 * print(byte(128)); // -128
 * print(byte(23.4)); // 23
 * print(byte('23.4')); // 23
 * print(byte('hello')); // NaN
 * print(byte(true)); // 1
 * print(byte([0, 255, '100'])); // [0, -1, 100]
 * </code></div>
 *//**
 * @method byte
 * @param {Array} ns                   values to parse
 * @return {Number[]}                  array of byte representation of values
 */o.default.prototype.byte=function(t){var r=o.default.prototype.int(t,10);return"number"==typeof r?(r+128)%256-128:r instanceof Array?r.map(o.default.prototype.byte):void 0},/**
 * Converts a number or string to its corresponding single-character
 * string representation. If a string parameter is provided, it is first
 * parsed as an integer and then translated into a single-character string.
 * When an array of number or string values is passed in, then an array of
 * single-character strings of the same length is returned.
 *
 * @method char
 * @param {String|Number}       n value to parse
 * @return {String}             string representation of value
 *
 * @example
 * <div class='norender'><code>
 * print(char(65)); // "A"
 * print(char('65')); // "A"
 * print(char([65, 66, 67])); // [ "A", "B", "C" ]
 * print(join(char([65, 66, 67]), '')); // "ABC"
 * </code></div>
 *//**
 * @method char
 * @param {Array} ns              values to parse
 * @return {String[]}             array of string representation of values
 */o.default.prototype.char=function(t){return"number"!=typeof t||isNaN(t)?t instanceof Array?t.map(o.default.prototype.char):"string"==typeof t?o.default.prototype.char(parseInt(t,10)):void 0:String.fromCharCode(t)},/**
 * Converts a single-character string to its corresponding integer
 * representation. When an array of single-character string values is passed
 * in, then an array of integers of the same length is returned.
 *
 * @method unchar
 * @param {String} n     value to parse
 * @return {Number}      integer representation of value
 *
 * @example
 * <div class='norender'><code>
 * print(unchar('A')); // 65
 * print(unchar(['A', 'B', 'C'])); // [ 65, 66, 67 ]
 * print(unchar(split('ABC', ''))); // [ 65, 66, 67 ]
 * </code></div>
 *//**
 * @method unchar
 * @param {Array} ns       values to parse
 * @return {Number[]}      integer representation of values
 */o.default.prototype.unchar=function(t){return"string"==typeof t&&1===t.length?t.charCodeAt(0):t instanceof Array?t.map(o.default.prototype.unchar):void 0},/**
 * Converts a number to a string in its equivalent hexadecimal notation. If a
 * second parameter is passed, it is used to set the number of characters to
 * generate in the hexadecimal notation. When an array is passed in, an
 * array of strings in hexadecimal notation of the same length is returned.
 *
 * @method hex
 * @param {Number} n     value to parse
 * @param {Number} [digits]
 * @return {String}      hexadecimal string representation of value
 *
 * @example
 * <div class='norender'><code>
 * print(hex(255)); // "000000FF"
 * print(hex(255, 6)); // "0000FF"
 * print(hex([0, 127, 255], 6)); // [ "000000", "00007F", "0000FF" ]
 * print(Infinity); // "FFFFFFFF"
 * print(-Infinity); // "00000000"
 * </code></div>
 *//**
 * @method hex
 * @param {Number[]} ns    array of values to parse
 * @param {Number} [digits]
 * @return {String[]}      hexadecimal string representation of values
 */o.default.prototype.hex=function(t,r){if(r=null==r?r=8:r,t instanceof Array)return t.map(function(t){return o.default.prototype.hex(t,r)});if(t===1/0||t===-1/0)return(t===1/0?"F":"0").repeat(r);if("number"==typeof t){t<0&&(t=4294967295+t+1);for(var n=Number(t).toString(16).toUpperCase();n.length<r;)n="0".concat(n);return n.length>=r&&(n=n.substring(n.length-r,n.length)),n}},/**
 * Converts a string representation of a hexadecimal number to its equivalent
 * integer value. When an array of strings in hexadecimal notation is passed
 * in, an array of integers of the same length is returned.
 *
 * @method unhex
 * @param {String} n value to parse
 * @return {Number}      integer representation of hexadecimal value
 *
 * @example
 * <div class='norender'><code>
 * print(unhex('A')); // 10
 * print(unhex('FF')); // 255
 * print(unhex(['FF', 'AA', '00'])); // [ 255, 170, 0 ]
 * </code></div>
 *//**
 * @method unhex
 * @param {Array} ns values to parse
 * @return {Number[]}      integer representations of hexadecimal value
 */o.default.prototype.unhex=function(t){return t instanceof Array?t.map(o.default.prototype.unhex):parseInt("0x".concat(t),16)};var s=o.default;n.default=s},{"../core/main":296,"core-js/modules/es.array.map":181,"core-js/modules/es.number.constructor":189,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.repeat":211}],337:[function(t,r,n){t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.number.to-fixed"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.constructor"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.match"),t("core-js/modules/es.string.pad-start"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),t("core-js/modules/es.string.trim"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.filter"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.number.to-fixed"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.constructor"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.match"),t("core-js/modules/es.string.pad-start"),t("core-js/modules/es.string.replace"),t("core-js/modules/es.string.split"),t("core-js/modules/es.string.trim"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}function s(t,r){return u(t)||c(t,r)||l()}function l(){throw TypeError("Invalid attempt to destructure non-iterable instance")}function c(t,r){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)){var n=[],o=!0,a=!1,s=void 0;try{for(var l,c=t[Symbol.iterator]();!(o=(l=c.next()).done)&&(n.push(l.value),!r||n.length!==r);o=!0);}catch(t){a=!0,s=t}finally{try{o||null==c.return||c.return()}finally{if(a)throw s}}return n}}function u(t){if(Array.isArray(t))return t}//return p5; //LM is this a mistake?
function p(t,r,n){var o=s(t.toString().split("."),2),a=o[0],l=o[1];if(void 0===n)return a=a.padStart(r,"0"),l?a+"."+l:a;var c=s(t.toFixed(n).toString().split("."),2);return a=c[0],l=c[1],(a=a.padStart(r,"0"))+"."+l}/**
 * Utility function for formatting numbers into strings and placing
 * appropriate commas to mark units of 1000. There are two versions: one
 * for formatting ints, and one for formatting an array of ints. The value
 * for the right parameter should always be a positive integer.
 *
 * @method nfc
 * @param  {Number|String}   num     the Number to format
 * @param  {Integer|String}  [right] number of digits to the right of the
 *                                  decimal point
 * @return {String}           formatted String
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   background(200);
 *   let num = 11253106.115;
 *   let numArr = [1, 1, 2];
 *
 *   noStroke();
 *   fill(0);
 *   textSize(12);
 *
 *   // Draw formatted numbers
 *   text(nfc(num, 4), 10, 30);
 *   text(nfc(numArr, 2), 10, 80);
 *
 *   // Draw dividing line
 *   stroke(120);
 *   line(0, 50, width, 50);
 * }
 * </code>
 * </div>
 *
 * @alt
 * "11,253,106.115" top middle and "1.00,1.00,2.00" displayed bottom mid
 */function d(t,r){var n=(t=t.toString()).indexOf("."),o=-1!==n?t.substring(n):"",a=-1!==n?t.substring(0,n):t;if(a=a.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","),0===r)o="";else if(void 0!==r){if(r>o.length)for(var s=r-(o+=-1===n?".":"").length+1,l=0;l<s;l++)o+="0";else o=o.substring(0,r+1)}return a+o}/**
 * Utility function for formatting numbers into strings. Similar to <a href="#/p5/nf">nf()</a> but
 * puts a "+" in front of positive numbers and a "-" in front of negative
 * numbers. There are two versions: one for formatting floats, and one for
 * formatting ints. The values for left, and right parameters
 * should always be positive integers.
 *
 * @method nfp
 * @param {Number} num      the Number to format
 * @param {Integer}      [left]   number of digits to the left of the decimal
 *                                point
 * @param {Integer}      [right]  number of digits to the right of the
 *                                decimal point
 * @return {String}         formatted String
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   background(200);
 *   let num1 = 11253106.115;
 *   let num2 = -11253106.115;
 *
 *   noStroke();
 *   fill(0);
 *   textSize(12);
 *
 *   // Draw formatted numbers
 *   text(nfp(num1, 4, 2), 10, 30);
 *   text(nfp(num2, 4, 2), 10, 80);
 *
 *   // Draw dividing line
 *   stroke(120);
 *   line(0, 50, width, 50);
 * }
 * </code>
 * </div>
 *
 * @alt
 * "+11253106.11" top middle and "-11253106.11" displayed bottom middle
 */function m(t){return parseFloat(t)>0?"+".concat(t.toString()):t.toString()}/**
 * Utility function for formatting numbers into strings. Similar to <a href="#/p5/nf">nf()</a> but
 * puts an additional "_" (space) in front of positive numbers just in case to align it with negative
 * numbers which includes "-" (minus) sign.
 *
 * The main usecase of nfs() can be seen when one wants to align the digits (place values) of a non-negative
 * number with some negative number (See the example to get a clear picture).
 * There are two versions: one for formatting float, and one for formatting int.
 *
 * The values for the digits, left, and right parameters should always be positive integers.
 *
 * (IMP): The result on the canvas basically the expected alignment can vary based on the typeface you are using.
 *
 * (NOTE): Be cautious when using left and right parameters as it prepends numbers of 0's if the parameter
 * if greater than the current length of the number.
 *
 * For example if number is 123.2 and left parameter passed is 4 which is greater than length of 123
 * (integer part) i.e 3 than result will be 0123.2. Same case for right parameter i.e. if right is 3 than
 * the result will be 123.200.
 *
 * @method nfs
 * @param {Number}       num      the Number to format
 * @param {Integer}      [left]   number of digits to the left of the decimal
 *                                point
 * @param {Integer}      [right]  number of digits to the right of the
 *                                decimal point
 * @return {String}         formatted String
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   background(200);
 *   let num1 = 321;
 *   let num2 = -1321;
 *
 *   noStroke();
 *   fill(0);
 *   textSize(16);
 *
 *   // nfs() aligns num1 (positive number) with num2 (negative number) by
 *   // adding a blank space in front of the num1 (positive number)
 *   // [left = 4] in num1 add one 0 in front, to align the digits with num2
 *   // [right = 2] in num1 and num2 adds two 0's after both numbers
 *   // To see the differences check the example of nf() too.
 *   text(nfs(num1, 4, 2), 10, 30);
 *   text(nfs(num2, 4, 2), 10, 80);
 *   // Draw dividing line
 *   stroke(120);
 *   line(0, 50, width, 50);
 * }
 * </code>
 * </div>
 *
 * @alt
 * "0321.00" top middle and "-1321.00" displayed bottom middle
 */function f(t){return parseFloat(t)>=0?" ".concat(t.toString()):t.toString()}/**
 * The <a href="#/p5/split">split()</a> function maps to String.split(), it breaks a String into
 * pieces using a character or string as the delimiter. The delim parameter
 * specifies the character or characters that mark the boundaries between
 * each piece. A String[] array is returned that contains each of the pieces.
 *
 * The <a href="#/p5/splitTokens">splitTokens()</a> function works in a similar fashion, except that it
 * splits using a range of characters instead of a specific character or
 * sequence.
 *
 * @method split
 * @param  {String} value the String to be split
 * @param  {String} delim the String used to separate the data
 * @return {String[]}  Array of Strings
 * @example
 * <div>
 * <code>
 * let names = 'Pat,Xio,Alex';
 * let splitString = split(names, ',');
 * text(splitString[0], 5, 30);
 * text(splitString[1], 5, 50);
 * text(splitString[2], 5, 70);
 * </code>
 * </div>
 *
 * @alt
 * "pat" top left, "Xio" mid left and "Alex" displayed bottom left
 */t("../core/friendly_errors/validate_params"),t("../core/friendly_errors/file_errors"),t("../core/friendly_errors/fes_core"),/**
 * Combines an array of Strings into one String, each separated by the
 * character(s) used for the separator parameter. To join arrays of ints or
 * floats, it's necessary to first convert them to Strings using <a href="#/p5/nf">nf()</a> or
 * nfs().
 *
 * @method join
 * @param  {Array}  list      array of Strings to be joined
 * @param  {String} separator String to be placed between each item
 * @return {String}           joined String
 * @example
 * <div>
 * <code>
 * let array = ['Hello', 'world!'];
 * let separator = ' ';
 * let message = join(array, separator);
 * text(message, 5, 50);
 * </code>
 * </div>
 *
 * @alt
 * "hello world!" displayed middle left of canvas.
 */o.default.prototype.join=function(t,r){return o.default._validateParameters("join",arguments),t.join(r)},/**
 * This function is used to apply a regular expression to a piece of text,
 * and return matching groups (elements found inside parentheses) as a
 * String array. If there are no matches, a null value will be returned.
 * If no groups are specified in the regular expression, but the sequence
 * matches, an array of length 1 (with the matched text as the first element
 * of the array) will be returned.
 *
 * To use the function, first check to see if the result is null. If the
 * result is null, then the sequence did not match at all. If the sequence
 * did match, an array is returned.
 *
 * If there are groups (specified by sets of parentheses) in the regular
 * expression, then the contents of each will be returned in the array.
 * Element [0] of a regular expression match returns the entire matching
 * string, and the match groups start at element [1] (the first group is [1],
 * the second [2], and so on).
 *
 * @method match
 * @param  {String} str    the String to be searched
 * @param  {String} regexp the regexp to be used for matching
 * @return {String[]}      Array of Strings found
 * @example
 * <div>
 * <code>
 * let string = 'Hello p5js*!';
 * let regexp = 'p5js\\*';
 * let m = match(string, regexp);
 * text(m, 5, 50);
 * </code>
 * </div>
 *
 * @alt
 * "p5js*" displayed middle left of canvas.
 */o.default.prototype.match=function(t,r){return o.default._validateParameters("match",arguments),t.match(r)},/**
 * This function is used to apply a regular expression to a piece of text,
 * and return a list of matching groups (elements found inside parentheses)
 * as a two-dimensional String array. If there are no matches, a null value
 * will be returned. If no groups are specified in the regular expression,
 * but the sequence matches, a two dimensional array is still returned, but
 * the second dimension is only of length one.
 *
 * To use the function, first check to see if the result is null. If the
 * result is null, then the sequence did not match at all. If the sequence
 * did match, a 2D array is returned.
 *
 * If there are groups (specified by sets of parentheses) in the regular
 * expression, then the contents of each will be returned in the array.
 * Assuming a loop with counter variable i, element [i][0] of a regular
 * expression match returns the entire matching string, and the match groups
 * start at element [i][1] (the first group is [i][1], the second [i][2],
 * and so on).
 *
 * @method matchAll
 * @param  {String} str    the String to be searched
 * @param  {String} regexp the regexp to be used for matching
 * @return {String[]}         2d Array of Strings found
 * @example
 * <div class="norender">
 * <code>
 * let string = 'Hello p5js*! Hello world!';
 * let regexp = 'Hello';
 * matchAll(string, regexp);
 * </code>
 * </div>
 */o.default.prototype.matchAll=function(t,r){o.default._validateParameters("matchAll",arguments);for(var n=RegExp(r,"g"),a=n.exec(t),s=[];null!==a;)s.push(a),// match start: match.index
// capturing group n: match[n]
a=n.exec(t);return s},/**
 * Utility function for formatting numbers into strings. There are two
 * versions: one for formatting floats, and one for formatting ints.
 *
 * The values for the digits, left, and right parameters should always
 * be positive integers.
 *
 * (NOTE): Be cautious when using left and right parameters as it prepends numbers of 0's if the parameter
 * if greater than the current length of the number.
 *
 * For example if number is 123.2 and left parameter passed is 4 which is greater than length of 123
 * (integer part) i.e 3 than result will be 0123.2. Same case for right parameter i.e. if right is 3 than
 * the result will be 123.200.
 *
 * @method nf
 * @param {Number|String}       num      the Number to format
 * @param {Integer|String}      [left]   number of digits to the left of the
 *                                decimal point
 * @param {Integer|String}      [right]  number of digits to the right of the
 *                                decimal point
 * @return {String}               formatted String
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   background(200);
 *   let num1 = 321;
 *   let num2 = -1321;
 *
 *   noStroke();
 *   fill(0);
 *   textSize(16);
 *
 *   text(nf(num1, 4, 2), 10, 30);
 *   text(nf(num2, 4, 2), 10, 80);
 *   // Draw dividing line
 *   stroke(120);
 *   line(0, 50, width, 50);
 * }
 * </code>
 * </div>
 *
 * @alt
 * "0321.00" middle top, -1321.00" middle bottom canvas
 *//**
 * @method nf
 * @param {Array}        nums     the Numbers to format
 * @param {Integer|String}      [left]
 * @param {Integer|String}      [right]
 * @return {String[]}                formatted Strings
 */o.default.prototype.nf=function(t,r,n){return(o.default._validateParameters("nf",arguments),t instanceof Array)?t.map(function(t){return p(t,r,n)}):"[object Arguments]"!==Object.prototype.toString.call(t)?p(t,r,n):3===t.length?this.nf(t[0],t[1],t[2]):2===t.length?this.nf(t[0],t[1]):this.nf(t[0])},/**
 * @method nfc
 * @param  {Array}    nums     the Numbers to format
 * @param  {Integer|String}  [right]
 * @return {String[]}           formatted Strings
 */o.default.prototype.nfc=function(t,r){return(o.default._validateParameters("nfc",arguments),t instanceof Array)?t.map(function(t){return d(t,r)}):d(t,r)},/**
 * @method nfp
 * @param {Number[]} nums      the Numbers to format
 * @param {Integer}      [left]
 * @param {Integer}      [right]
 * @return {String[]}         formatted Strings
 */o.default.prototype.nfp=function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];o.default._validateParameters("nfp",r);var a=o.default.prototype.nf.apply(this,r);return a instanceof Array?a.map(m):m(a)},/**
 * @method nfs
 * @param {Array}        nums     the Numbers to format
 * @param {Integer}      [left]
 * @param {Integer}      [right]
 * @return {String[]}         formatted Strings
 */o.default.prototype.nfs=function(){for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];o.default._validateParameters("nfs",r);var a=o.default.prototype.nf.apply(this,r);return a instanceof Array?a.map(f):f(a)},o.default.prototype.split=function(t,r){return o.default._validateParameters("split",arguments),t.split(r)},/**
 * The <a href="#/p5/splitTokens">splitTokens()</a> function splits a String at one or many character
 * delimiters or "tokens." The delim parameter specifies the character or
 * characters to be used as a boundary.
 *
 * If no delim characters are specified, any whitespace character is used to
 * split. Whitespace characters include tab (\t), line feed (\n), carriage
 * return (\r), form feed (\f), and space.
 *
 * @method splitTokens
 * @param  {String} value   the String to be split
 * @param  {String} [delim] list of individual Strings that will be used as
 *                          separators
 * @return {String[]}          Array of Strings
 * @example
 * <div class = "norender">
 * <code>
 * function setup() {
 *   let myStr = 'Mango, Banana, Lime';
 *   let myStrArr = splitTokens(myStr, ',');
 *
 *   print(myStrArr); // prints : ["Mango"," Banana"," Lime"]
 * }
 * </code>
 * </div>
 */o.default.prototype.splitTokens=function(t,r){if(o.default._validateParameters("splitTokens",arguments),void 0!==r){var n,a=r,s=/\]/g.exec(a),l=/\[/g.exec(a);l&&s?(a=a.slice(0,s.index)+a.slice(s.index+1),l=/\[/g.exec(a),a=a.slice(0,l.index)+a.slice(l.index+1),n=RegExp("[\\[".concat(a,"\\]]"),"g")):s?(a=a.slice(0,s.index)+a.slice(s.index+1),n=RegExp("[".concat(a,"\\]]"),"g")):l?(a=a.slice(0,l.index)+a.slice(l.index+1),n=RegExp("[".concat(a,"\\[]"),"g")):n=RegExp("[".concat(a,"]"),"g")}else n=/\s/g;return t.split(n).filter(function(t){return t})},/**
 * Removes whitespace characters from the beginning and end of a String. In
 * addition to standard whitespace characters such as space, carriage return,
 * and tab, this function also removes the Unicode "nbsp" character.
 *
 * @method trim
 * @param  {String} str a String to be trimmed
 * @return {String}       a trimmed String
 *
 * @example
 * <div>
 * <code>
 * let string = trim('  No new lines\n   ');
 * text(string + ' here', 2, 50);
 * </code>
 * </div>
 *
 * @alt
 * "No new lines here" displayed center canvas
 *//**
 * @method trim
 * @param  {Array} strs an Array of Strings to be trimmed
 * @return {String[]}   an Array of trimmed Strings
 */o.default.prototype.trim=function(t){return(o.default._validateParameters("trim",arguments),t instanceof Array)?t.map(this.trim):t.trim()};var h=o.default;n.default=h},{"../core/friendly_errors/fes_core":287,"../core/friendly_errors/file_errors":288,"../core/friendly_errors/validate_params":291,"../core/main":296,"core-js/modules/es.array.filter":173,"core-js/modules/es.array.index-of":177,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.join":179,"core-js/modules/es.array.map":181,"core-js/modules/es.array.slice":182,"core-js/modules/es.number.to-fixed":191,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.constructor":202,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.match":209,"core-js/modules/es.string.pad-start":210,"core-js/modules/es.string.replace":212,"core-js/modules/es.string.split":214,"core-js/modules/es.string.trim":217,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/web.dom-collections.iterator":254}],338:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module IO
 * @submodule Time & Date
 * @for p5
 * @requires core
 *//**
 * p5.js communicates with the clock on your computer. The <a href="#/p5/day">day()</a> function
 * returns the current day as a value from 1 - 31.
 *
 * @method day
 * @return {Integer} the current day
 * @example
 * <div>
 * <code>
 * let d = day();
 * text('Current day: \n' + d, 5, 50);
 * </code>
 * </div>
 *
 * @alt
 * Current day is displayed
 */o.default.prototype.day=function(){return new Date().getDate()},/**
 * p5.js communicates with the clock on your computer. The <a href="#/p5/hour">hour()</a> function
 * returns the current hour as a value from 0 - 23.
 *
 * @method hour
 * @return {Integer} the current hour
 * @example
 * <div>
 * <code>
 * let h = hour();
 * text('Current hour:\n' + h, 5, 50);
 * </code>
 * </div>
 *
 * @alt
 * Current hour is displayed
 */o.default.prototype.hour=function(){return new Date().getHours()},/**
 * p5.js communicates with the clock on your computer. The <a href="#/p5/minute">minute()</a> function
 * returns the current minute as a value from 0 - 59.
 *
 * @method minute
 * @return {Integer} the current minute
 * @example
 * <div>
 * <code>
 * let m = minute();
 * text('Current minute: \n' + m, 5, 50);
 * </code>
 * </div>
 *
 * @alt
 * Current minute is displayed
 */o.default.prototype.minute=function(){return new Date().getMinutes()},/**
 * Returns the number of milliseconds (thousandths of a second) since
 * starting the sketch (when `setup()` is called). This information is often
 * used for timing events and animation sequences.
 *
 * @method millis
 * @return {Number} the number of milliseconds since starting the sketch
 * @example
 * <div>
 * <code>
 * let millisecond = millis();
 * text('Milliseconds \nrunning: \n' + millisecond, 5, 40);
 * </code>
 * </div>
 *
 * @alt
 * number of milliseconds since sketch has started displayed
 */o.default.prototype.millis=function(){return -1===this._millisStart?0:window.performance.now()-this._millisStart},/**
 * p5.js communicates with the clock on your computer. The <a href="#/p5/month">month()</a> function
 * returns the current month as a value from 1 - 12.
 *
 * @method month
 * @return {Integer} the current month
 * @example
 * <div>
 * <code>
 * let m = month();
 * text('Current month: \n' + m, 5, 50);
 * </code>
 * </div>
 *
 * @alt
 * Current month is displayed
 */o.default.prototype.month=function(){//January is 0!
return new Date().getMonth()+1},/**
 * p5.js communicates with the clock on your computer. The <a href="#/p5/second">second()</a> function
 * returns the current second as a value from 0 - 59.
 *
 * @method second
 * @return {Integer} the current second
 * @example
 * <div>
 * <code>
 * let s = second();
 * text('Current second: \n' + s, 5, 50);
 * </code>
 * </div>
 *
 * @alt
 * Current second is displayed
 */o.default.prototype.second=function(){return new Date().getSeconds()},/**
 * p5.js communicates with the clock on your computer. The <a href="#/p5/year">year()</a> function
 * returns the current year as an integer (2014, 2015, 2016, etc).
 *
 * @method year
 * @return {Integer} the current year
 * @example
 * <div>
 * <code>
 * let y = year();
 * text('Current year: \n' + y, 5, 50);
 * </code>
 * </div>
 *
 * @alt
 * Current year is displayed
 */o.default.prototype.year=function(){return new Date().getFullYear()};var s=o.default;n.default=s},{"../core/main":296}],339:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.math.hypot"),t("core-js/modules/es.math.sign"),t("core-js/modules/es.number.to-fixed"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.math.hypot"),t("core-js/modules/es.math.sign"),t("core-js/modules/es.number.to-fixed"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=p(t("../core/main"));t("./p5.Geometry");var l=u(t("../core/constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Shape
 * @submodule 3D Primitives
 * @for p5
 * @requires core
 * @requires p5.Geometry
 *//**
 * Draw a plane with given a width and height
 * @method plane
 * @param  {Number} [width]    width of the plane
 * @param  {Number} [height]   height of the plane
 * @param  {Integer} [detailX]  Optional number of triangle
 *                             subdivisions in x-dimension
 * @param {Integer} [detailY]   Optional number of triangle
 *                             subdivisions in y-dimension
 * @chainable
 * @example
 * <div>
 * <code>
 * // draw a plane
 * // with width 50 and height 50
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('a white plane with black wireframe lines');
 * }
 *
 * function draw() {
 *   background(200);
 *   plane(50, 50);
 * }
 * </code>
 * </div>
 *
 * @alt
 * Nothing displayed on canvas
 * Rotating interior view of a box with sides that change color.
 * 3d red and green gradient.
 * Rotating interior view of a cylinder with sides that change color.
 * Rotating view of a cylinder with sides that change color.
 * 3d red and green gradient.
 * rotating view of a multi-colored cylinder with concave sides.
 */s.default.prototype.plane=function(t,r,n,o){this._assert3d("plane"),s.default._validateParameters("plane",arguments),void 0===t&&(t=50),void 0===r&&(r=t),void 0===n&&(n=1),void 0===o&&(o=1);var a="plane|".concat(n,"|").concat(o);if(!this._renderer.geometryInHash(a)){var l=function(){for(var t,r,n,o=0;o<=this.detailY;o++){r=o/this.detailY;for(var a=0;a<=this.detailX;a++)t=a/this.detailX,n=new s.default.Vector(t-.5,r-.5,0),this.vertices.push(n),this.uvs.push(t,r)}},c=new s.default.Geometry(n,o,l);c.computeFaces().computeNormals(),n<=1&&o<=1?c._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"),this._renderer.createBuffers(a,c)}return this._renderer.drawBuffersScaled(a,t,r,1),this},/**
 * Draw a box with given width, height and depth
 * @method  box
 * @param  {Number} [width]     width of the box
 * @param  {Number} [height]    height of the box
 * @param  {Number} [depth]     depth of the box
 * @param {Integer} [detailX]  Optional number of triangle
 *                            subdivisions in x-dimension
 * @param {Integer} [detailY]  Optional number of triangle
 *                            subdivisions in y-dimension
 * @chainable
 * @example
 * <div>
 * <code>
 * // draw a spinning box
 * // with width, height and depth of 50
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('a white box rotating in 3D space');
 * }
 *
 * function draw() {
 *   background(200);
 *   rotateX(frameCount * 0.01);
 *   rotateY(frameCount * 0.01);
 *   box(50);
 * }
 * </code>
 * </div>
 */s.default.prototype.box=function(t,r,n,o,a){this._assert3d("box"),s.default._validateParameters("box",arguments),void 0===t&&(t=50),void 0===r&&(r=t),void 0===n&&(n=r);var l=this._renderer.attributes&&this._renderer.attributes.perPixelLighting;void 0===o&&(o=l?1:4),void 0===a&&(a=l?1:4);var c="box|".concat(o,"|").concat(a);if(!this._renderer.geometryInHash(c)){var u=function(){var t=this,r=[[0,4,2,6],[1,3,5,7],[0,1,4,5],[2,6,3,7],[0,2,1,3],[4,5,6,7]// 0, 0, +1] // +z
];//to avoid diagonal stroke lines across face of box
this.edges=[[0,1],[1,3],[3,2],[6,7],[8,9],[9,11],[14,15],[16,17],[17,19],[18,19],[20,21],[22,23]],r.forEach(function(r,n){for(var o=4*n,a=0;a<4;a++){var l=r[a],c=new s.default.Vector(((1&l)*2-1)/2,((2&l)-1)/2,((4&l)/2-1)/2);//inspired by lightgl:
t.vertices.push(c),t.uvs.push(1&a,(2&a)/2)}t.faces.push([o,o+1,o+2]),t.faces.push([o+2,o+1,o+3])})},p=new s.default.Geometry(o,a,u);p.computeNormals(),o<=4&&a<=4?p._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"),//initialize our geometry buffer with
//the key val pair:
//geometry Id, Geom object
this._renderer.createBuffers(c,p)}return this._renderer.drawBuffersScaled(c,t,r,n),this},/**
 * Draw a sphere with given radius.
 *
 * DetailX and detailY determines the number of subdivisions in the x-dimension
 * and the y-dimension of a sphere. More subdivisions make the sphere seem
 * smoother. The recommended maximum values are both 24. Using a value greater
 * than 24 may cause a warning or slow down the browser.
 * @method sphere
 * @param  {Number} [radius]          radius of circle
 * @param  {Integer} [detailX]        optional number of subdivisions in x-dimension
 * @param  {Integer} [detailY]        optional number of subdivisions in y-dimension
 *
 * @chainable
 * @example
 * <div>
 * <code>
 * // draw a sphere with radius 40
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('a white sphere with black wireframe lines');
 * }
 *
 * function draw() {
 *   background(205, 102, 94);
 *   sphere(40);
 * }
 * </code>
 * </div>
 *
 * @example
 * <div>
 * <code>
 * let detailX;
 * // slide to see how detailX works
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   detailX = createSlider(3, 24, 3);
 *   detailX.position(10, height + 5);
 *   detailX.style('width', '80px');
 *   describe(
 *     'a white sphere with low detail on the x-axis, including a slider to adjust detailX'
 *   );
 * }
 *
 * function draw() {
 *   background(205, 105, 94);
 *   rotateY(millis() / 1000);
 *   sphere(40, detailX.value(), 16);
 * }
 * </code>
 * </div>
 *
 * @example
 * <div>
 * <code>
 * let detailY;
 * // slide to see how detailY works
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   detailY = createSlider(3, 16, 3);
 *   detailY.position(10, height + 5);
 *   detailY.style('width', '80px');
 *   describe(
 *     'a white sphere with low detail on the y-axis, including a slider to adjust detailY'
 *   );
 * }
 *
 * function draw() {
 *   background(205, 105, 94);
 *   rotateY(millis() / 1000);
 *   sphere(40, 16, detailY.value());
 * }
 * </code>
 * </div>
 */s.default.prototype.sphere=function(t,r,n){return this._assert3d("sphere"),s.default._validateParameters("sphere",arguments),void 0===t&&(t=50),void 0===r&&(r=24),void 0===n&&(n=16),this.ellipsoid(t,t,t,r,n),this};/**
 * @private
 * Helper function for creating both cones and cylinders
 * Will only generate well-defined geometry when bottomRadius, height > 0
 * and topRadius >= 0
 * If topRadius == 0, topCap should be false
 */var d=function(t,r,n,o,a,l,c){t=t<=0?1:t,r=r<0?0:r,n=n<=0?t:n,o=o<3?3:o;var u,p,d,m=(l=void 0===l||l)?-2:0,f=(a=a<1?1:a)+((c=void 0===c?0!==r:c)?2:0),h=Math.atan2(t-r,n),y=Math.sin(h),g=Math.cos(h);for(u=m;u<=f;++u){var v=u/a,b=n*v,x=void 0;for(u<0?(//for the bottomCap edge
b=0,v=0,x=t):u>a?(//for the topCap edge
b=n,v=1,x=r):x=t+(r-t)*v,(-2===u||u===a+2)&&(x=0),b-=n/2,p=0;p<o;++p){var j=p/(o-1),w=2*Math.PI*j,_=Math.sin(w),S=Math.cos(w);this.vertices.push(new s.default.Vector(_*x,b,S*x));var E=void 0;E=u<0?new s.default.Vector(0,-1,0):u>a&&r?new s.default.Vector(0,1,0):new s.default.Vector(_*g,y,S*g),this.vertexNormals.push(E),this.uvs.push(j,v)}}var T=0;if(l){for(d=0;d<o;++d){var M=(d+1)%o;this.faces.push([T+d,T+o+M,T+o+d])}T+=2*o}for(u=0;u<a;++u){for(p=0;p<o;++p){var C=(p+1)%o;this.faces.push([T+p,T+C,T+o+C]),this.faces.push([T+p,T+o+C,T+o+p])}T+=o}if(c)for(T+=o,p=0;p<o;++p)this.faces.push([T+p,T+(p+1)%o,T+o])};/**
 * Draw a cylinder with given radius and height
 *
 * DetailX and detailY determines the number of subdivisions in the x-dimension
 * and the y-dimension of a cylinder. More subdivisions make the cylinder seem smoother.
 * The recommended maximum value for detailX is 24. Using a value greater than 24
 * may cause a warning or slow down the browser.
 *
 * @method cylinder
 * @param  {Number}  [radius]    radius of the surface
 * @param  {Number}  [height]    height of the cylinder
 * @param  {Integer} [detailX]   number of subdivisions in x-dimension;
 *                               default is 24
 * @param  {Integer} [detailY]   number of subdivisions in y-dimension;
 *                               default is 1
 * @param  {Boolean} [bottomCap] whether to draw the bottom of the cylinder
 * @param  {Boolean} [topCap]    whether to draw the top of the cylinder
 * @chainable
 * @example
 * <div>
 * <code>
 * // draw a spinning cylinder
 * // with radius 20 and height 50
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('a rotating white cylinder');
 * }
 *
 * function draw() {
 *   background(205, 105, 94);
 *   rotateX(frameCount * 0.01);
 *   rotateZ(frameCount * 0.01);
 *   cylinder(20, 50);
 * }
 * </code>
 * </div>
 *
 * @example
 * <div>
 * <code>
 * // slide to see how detailX works
 * let detailX;
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   detailX = createSlider(3, 24, 3);
 *   detailX.position(10, height + 5);
 *   detailX.style('width', '80px');
 *   describe(
 *     'a rotating white cylinder with limited X detail, with a slider that adjusts detailX'
 *   );
 * }
 *
 * function draw() {
 *   background(205, 105, 94);
 *   rotateY(millis() / 1000);
 *   cylinder(20, 75, detailX.value(), 1);
 * }
 * </code>
 * </div>
 *
 * @example
 * <div>
 * <code>
 * // slide to see how detailY works
 * let detailY;
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   detailY = createSlider(1, 16, 1);
 *   detailY.position(10, height + 5);
 *   detailY.style('width', '80px');
 *   describe(
 *     'a rotating white cylinder with limited Y detail, with a slider that adjusts detailY'
 *   );
 * }
 *
 * function draw() {
 *   background(205, 105, 94);
 *   rotateY(millis() / 1000);
 *   cylinder(20, 75, 16, detailY.value());
 * }
 * </code>
 * </div>
 */s.default.prototype.cylinder=function(t,r,n,o,a,l){this._assert3d("cylinder"),s.default._validateParameters("cylinder",arguments),void 0===t&&(t=50),void 0===r&&(r=t),void 0===n&&(n=24),void 0===o&&(o=1),void 0===l&&(l=!0),void 0===a&&(a=!0);var c="cylinder|".concat(n,"|").concat(o,"|").concat(a,"|").concat(l);if(!this._renderer.geometryInHash(c)){var u=new s.default.Geometry(n,o);d.call(u,1,1,1,n,o,a,l),n<=24&&o<=16?u._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(c,u)}return this._renderer.drawBuffersScaled(c,t,r,t),this},/**
 * Draw a cone with given radius and height
 *
 * DetailX and detailY determine the number of subdivisions in the x-dimension and
 * the y-dimension of a cone. More subdivisions make the cone seem smoother. The
 * recommended maximum value for detailX is 24. Using a value greater than 24
 * may cause a warning or slow down the browser.
 * @method cone
 * @param  {Number}  [radius]  radius of the bottom surface
 * @param  {Number}  [height]  height of the cone
 * @param  {Integer} [detailX] number of segments,
 *                             the more segments the smoother geometry
 *                             default is 24
 * @param  {Integer} [detailY] number of segments,
 *                             the more segments the smoother geometry
 *                             default is 1
 * @param  {Boolean} [cap]     whether to draw the base of the cone
 * @chainable
 * @example
 * <div>
 * <code>
 * // draw a spinning cone
 * // with radius 40 and height 70
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('a rotating white cone');
 * }
 *
 * function draw() {
 *   background(200);
 *   rotateX(frameCount * 0.01);
 *   rotateZ(frameCount * 0.01);
 *   cone(40, 70);
 * }
 * </code>
 * </div>
 *
 * @example
 * <div>
 * <code>
 * // slide to see how detailx works
 * let detailX;
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   detailX = createSlider(3, 16, 3);
 *   detailX.position(10, height + 5);
 *   detailX.style('width', '80px');
 *   describe(
 *     'a rotating white cone with limited X detail, with a slider that adjusts detailX'
 *   );
 * }
 *
 * function draw() {
 *   background(205, 102, 94);
 *   rotateY(millis() / 1000);
 *   cone(30, 65, detailX.value(), 16);
 * }
 * </code>
 * </div>
 *
 * @example
 * <div>
 * <code>
 * // slide to see how detailY works
 * let detailY;
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   detailY = createSlider(3, 16, 3);
 *   detailY.position(10, height + 5);
 *   detailY.style('width', '80px');
 *   describe(
 *     'a rotating white cone with limited Y detail, with a slider that adjusts detailY'
 *   );
 * }
 *
 * function draw() {
 *   background(205, 102, 94);
 *   rotateY(millis() / 1000);
 *   cone(30, 65, 16, detailY.value());
 * }
 * </code>
 * </div>
 */s.default.prototype.cone=function(t,r,n,o,a){this._assert3d("cone"),s.default._validateParameters("cone",arguments),void 0===t&&(t=50),void 0===r&&(r=t),void 0===n&&(n=24),void 0===o&&(o=1),void 0===a&&(a=!0);var l="cone|".concat(n,"|").concat(o,"|").concat(a);if(!this._renderer.geometryInHash(l)){var c=new s.default.Geometry(n,o);d.call(c,1,0,1,n,o,a,!1),n<=24&&o<=16?c._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(l,c)}return this._renderer.drawBuffersScaled(l,t,r,t),this},/**
 * Draw an ellipsoid with given radius
 *
 * DetailX and detailY determine the number of subdivisions in the x-dimension and
 * the y-dimension of a cone. More subdivisions make the ellipsoid appear to be smoother.
 * Avoid detail number above 150, it may crash the browser.
 * @method ellipsoid
 * @param  {Number} [radiusx]         x-radius of ellipsoid
 * @param  {Number} [radiusy]         y-radius of ellipsoid
 * @param  {Number} [radiusz]         z-radius of ellipsoid
 * @param  {Integer} [detailX]        number of segments,
 *                                    the more segments the smoother geometry
 *                                    default is 24. Avoid detail number above
 *                                    150, it may crash the browser.
 * @param  {Integer} [detailY]        number of segments,
 *                                    the more segments the smoother geometry
 *                                    default is 16. Avoid detail number above
 *                                    150, it may crash the browser.
 * @chainable
 * @example
 * <div>
 * <code>
 * // draw an ellipsoid
 * // with radius 30, 40 and 40.
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('a white 3d ellipsoid');
 * }
 *
 * function draw() {
 *   background(205, 105, 94);
 *   ellipsoid(30, 40, 40);
 * }
 * </code>
 * </div>
 *
 * @example
 * <div>
 * <code>
 * // slide to see how detailX works
 * let detailX;
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   detailX = createSlider(2, 24, 12);
 *   detailX.position(10, height + 5);
 *   detailX.style('width', '80px');
 *   describe(
 *     'a rotating white ellipsoid with limited X detail, with a slider that adjusts detailX'
 *   );
 * }
 *
 * function draw() {
 *   background(205, 105, 94);
 *   rotateY(millis() / 1000);
 *   ellipsoid(30, 40, 40, detailX.value(), 8);
 * }
 * </code>
 * </div>
 *
 * @example
 * <div>
 * <code>
 * // slide to see how detailY works
 * let detailY;
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   detailY = createSlider(2, 24, 6);
 *   detailY.position(10, height + 5);
 *   detailY.style('width', '80px');
 *   describe(
 *     'a rotating white ellipsoid with limited Y detail, with a slider that adjusts detailY'
 *   );
 * }
 *
 * function draw() {
 *   background(205, 105, 9);
 *   rotateY(millis() / 1000);
 *   ellipsoid(30, 40, 40, 12, detailY.value());
 * }
 * </code>
 * </div>
 */s.default.prototype.ellipsoid=function(t,r,n,o,a){this._assert3d("ellipsoid"),s.default._validateParameters("ellipsoid",arguments),void 0===t&&(t=50),void 0===r&&(r=t),void 0===n&&(n=t),void 0===o&&(o=24),void 0===a&&(a=16);var l="ellipsoid|".concat(o,"|").concat(a);if(!this._renderer.geometryInHash(l)){var c=function(){for(var t=0;t<=this.detailY;t++)for(var r=t/this.detailY,n=Math.PI*r-Math.PI/2,o=Math.cos(n),a=Math.sin(n),l=0;l<=this.detailX;l++){var c=l/this.detailX,u=2*Math.PI*c,p=Math.cos(u),d=Math.sin(u),m=new s.default.Vector(o*d,a,o*p);this.vertices.push(m),this.vertexNormals.push(m),this.uvs.push(c,r)}},u=new s.default.Geometry(o,a,c);u.computeFaces(),o<=24&&a<=24?u._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"),this._renderer.createBuffers(l,u)}return this._renderer.drawBuffersScaled(l,t,r,n),this},/**
 * Draw a torus with given radius and tube radius
 *
 * DetailX and detailY determine the number of subdivisions in the x-dimension and
 * the y-dimension of a torus. More subdivisions make the torus appear to be smoother.
 * The default and maximum values for detailX and detailY are 24 and 16, respectively.
 * Setting them to relatively small values like 4 and 6 allows you to create new
 * shapes other than a torus.
 * @method torus
 * @param  {Number} [radius]      radius of the whole ring
 * @param  {Number} [tubeRadius]  radius of the tube
 * @param  {Integer} [detailX]    number of segments in x-dimension,
 *                                the more segments the smoother geometry
 *                                default is 24
 * @param  {Integer} [detailY]    number of segments in y-dimension,
 *                                the more segments the smoother geometry
 *                                default is 16
 * @chainable
 * @example
 * <div>
 * <code>
 * // draw a spinning torus
 * // with ring radius 30 and tube radius 15
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('a rotating white torus');
 * }
 *
 * function draw() {
 *   background(205, 102, 94);
 *   rotateX(frameCount * 0.01);
 *   rotateY(frameCount * 0.01);
 *   torus(30, 15);
 * }
 * </code>
 * </div>
 *
 * @example
 * <div>
 * <code>
 * // slide to see how detailX works
 * let detailX;
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   detailX = createSlider(3, 24, 3);
 *   detailX.position(10, height + 5);
 *   detailX.style('width', '80px');
 *   describe(
 *     'a rotating white torus with limited X detail, with a slider that adjusts detailX'
 *   );
 * }
 *
 * function draw() {
 *   background(205, 102, 94);
 *   rotateY(millis() / 1000);
 *   torus(30, 15, detailX.value(), 12);
 * }
 * </code>
 * </div>
 *
 * @example
 * <div>
 * <code>
 * // slide to see how detailY works
 * let detailY;
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   detailY = createSlider(3, 16, 3);
 *   detailY.position(10, height + 5);
 *   detailY.style('width', '80px');
 *   describe(
 *     'a rotating white torus with limited Y detail, with a slider that adjusts detailY'
 *   );
 * }
 *
 * function draw() {
 *   background(205, 102, 94);
 *   rotateY(millis() / 1000);
 *   torus(30, 15, 16, detailY.value());
 * }
 * </code>
 * </div>
 */s.default.prototype.torus=function(t,r,n,o){if(this._assert3d("torus"),s.default._validateParameters("torus",arguments),void 0===t)t=50;else if(!t)return;// nothing to draw
if(void 0===r)r=10;else if(!r)return;// nothing to draw
void 0===n&&(n=24),void 0===o&&(o=16);var a=(r/t).toPrecision(4),l="torus|".concat(a,"|").concat(n,"|").concat(o);if(!this._renderer.geometryInHash(l)){var c=function(){for(var t=0;t<=this.detailY;t++)for(var r=t/this.detailY,n=2*Math.PI*r,o=Math.cos(n),l=Math.sin(n),c=1+a*o,u=0;u<=this.detailX;u++){var p=u/this.detailX,d=2*Math.PI*p,m=Math.cos(d),f=Math.sin(d),h=new s.default.Vector(c*m,c*f,a*l),y=new s.default.Vector(o*m,o*f,l);this.vertices.push(h),this.vertexNormals.push(y),this.uvs.push(p,r)}},u=new s.default.Geometry(n,o,c);u.computeFaces(),n<=24&&o<=16?u._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(l,u)}return this._renderer.drawBuffersScaled(l,t,t,t),this},/// 2D primitives
/////////////////////////
//
// Note: Documentation is not generated on the p5.js website for functions on
// the p5.RendererGL prototype.
/**
 * Draws a point, a coordinate in space at the dimension of one pixel,
 * given x, y and z coordinates. The color of the point is determined
 * by the current stroke, while the point size is determined by current
 * stroke weight.
 * @private
 * @param {Number} x x-coordinate of point
 * @param {Number} y y-coordinate of point
 * @param {Number} z z-coordinate of point
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 * }
 *
 * function draw() {
 *   background(50);
 *   stroke(255);
 *   strokeWeight(4);
 *   point(25, 0);
 *   strokeWeight(3);
 *   point(-25, 0);
 *   strokeWeight(2);
 *   point(0, 25);
 *   strokeWeight(1);
 *   point(0, -25);
 * }
 * </code>
 * </div>
 */s.default.RendererGL.prototype.point=function(t,r,n){void 0===n&&(n=0);var o=[];return o.push(new s.default.Vector(t,r,n)),this._drawPoints(o,this.immediateMode.buffers.point),this},s.default.RendererGL.prototype.triangle=function(t){var r=t[0],n=t[1],o=t[2],a=t[3],l=t[4],c=t[5],u="tri";if(!this.geometryInHash(u)){var p=function(){var t=[];t.push(new s.default.Vector(0,0,0)),t.push(new s.default.Vector(1,0,0)),t.push(new s.default.Vector(0,1,0)),this.edges=[[0,1],[1,2],[2,0]],this.vertices=t,this.faces=[[0,1,2]],this.uvs=[0,0,1,0,1,1]},d=new s.default.Geometry(1,1,p);d._edgesToVertices(),d.computeNormals(),this.createBuffers(u,d)}// only one triangle is cached, one point is at the origin, and the
// two adjacent sides are tne unit vectors along the X & Y axes.
//
// this matrix multiplication transforms those two unit vectors
// onto the required vector prior to rendering, and moves the
// origin appropriately.
var m=this.uMVMatrix.copy();try{// triangle orientation.
var f=Math.sign(r*a-o*n+o*c-l*a+l*n-r*c),h=new s.default.Matrix([o-r,a-n,0,0,l-r,c-n,0,0,0,0,f,0,r,n,0,1// the resulting origin
]).mult(this.uMVMatrix);this.uMVMatrix=h,this.drawBuffers(u)}finally{this.uMVMatrix=m}return this},s.default.RendererGL.prototype.ellipse=function(t){this.arc(t[0],t[1],t[2],t[3],0,l.TWO_PI,l.OPEN,t[4])},s.default.RendererGL.prototype.arc=function(t){var r,n,o=arguments[0],a=arguments[1],c=arguments[2],u=arguments[3],p=arguments[4],d=arguments[5],m=arguments[6],f=arguments[7]||25;if(Math.abs(d-p)>=l.TWO_PI?(r="ellipse",n="".concat(r,"|").concat(f,"|")):(r="arc",n="".concat(r,"|").concat(p,"|").concat(d,"|").concat(m,"|").concat(f,"|")),!this.geometryInHash(n)){var h=function(){// if the start and stop angles are not the same, push vertices to the array
if(p.toFixed(10)!==d.toFixed(10)){// if the mode specified is PIE or null, push the mid point of the arc in vertices
(m===l.PIE||void 0===m)&&(this.vertices.push(new s.default.Vector(.5,.5,0)),this.uvs.push([.5,.5]));// vertices for the perimeter of the circle
for(var t=0;t<=f;t++){var r=(d-p)*(t/f)+p,n=.5+Math.cos(r)/2,o=.5+Math.sin(r)/2;this.vertices.push(new s.default.Vector(n,o,0)),this.uvs.push([n,o]),t<f-1&&(this.faces.push([0,t+1,t+2]),this.edges.push([t+1,t+2]))}// check the mode specified in order to push vertices and faces, different for each mode
switch(m){case l.PIE:this.faces.push([0,this.vertices.length-2,this.vertices.length-1]),this.edges.push([0,1]),this.edges.push([this.vertices.length-2,this.vertices.length-1]),this.edges.push([0,this.vertices.length-1]);break;case l.CHORD:this.edges.push([0,1]),this.edges.push([0,this.vertices.length-1]);break;case l.OPEN:this.edges.push([0,1]);break;default:this.faces.push([0,this.vertices.length-2,this.vertices.length-1]),this.edges.push([this.vertices.length-2,this.vertices.length-1])}}},y=new s.default.Geometry(f,1,h);y.computeNormals(),f<=50?y._edgesToVertices(y):this._doStroke&&console.log("Cannot apply a stroke to an ".concat(r," with more than 50 detail")),this.createBuffers(n,y)}var g=this.uMVMatrix.copy();try{this.uMVMatrix.translate([o,a,0]),this.uMVMatrix.scale(c,u,1),this.drawBuffers(n)}finally{this.uMVMatrix=g}return this},s.default.RendererGL.prototype.rect=function(t){var r=t[0],n=t[1],o=t[2],a=t[3];if(void 0===t[4]){// Use the retained mode for drawing rectangle,
// if args for rounding rectangle is not provided by user.
var c=this._pInst._glAttributes.perPixelLighting,u=t[4]||(c?1:24),p=t[5]||(c?1:16),d="rect|".concat(u,"|").concat(p);if(!this.geometryInHash(d)){var m=function(){for(var t=0;t<=this.detailY;t++)for(var r=t/this.detailY,n=0;n<=this.detailX;n++){var o=n/this.detailX,a=new s.default.Vector(o,r,0);this.vertices.push(a),this.uvs.push(o,r)}// using stroke indices to avoid stroke over face(s) of rectangle
u>0&&p>0&&(this.edges=[[0,u],[u,(u+1)*(p+1)-1],[(u+1)*(p+1)-1,(u+1)*p],[(u+1)*p,0]])},f=new s.default.Geometry(u,p,m);f.computeFaces().computeNormals()._edgesToVertices(),this.createBuffers(d,f)}// only a single rectangle (of a given detail) is cached: a square with
// opposite corners at (0,0) & (1,1).
//
// before rendering, this square is scaled & moved to the required location.
var h=this.uMVMatrix.copy();try{this.uMVMatrix.translate([r,n,0]),this.uMVMatrix.scale(o,a,1),this.drawBuffers(d)}finally{this.uMVMatrix=h}}else{// Use Immediate mode to round the rectangle corner,
// if args for rounding corners is provided by user
var y=t[4],g=void 0===t[5]?y:t[5],v=void 0===t[6]?g:t[6],b=void 0===t[7]?v:t[7],x=r,j=n,w=o,_=a;if(w+=x,_+=j,x>w){var S=x;x=w,w=S}if(j>_){var E=j;j=_,_=E}var T=Math.min((w-x)/2,(_-j)/2);y>T&&(y=T),g>T&&(g=T),v>T&&(v=T),b>T&&(b=T);var M=x,C=j,O=w,N=_;this.beginShape(),0!==g?(this.vertex(O-g,C),this.quadraticVertex(O,C,O,C+g)):this.vertex(O,C),0!==v?(this.vertex(O,N-v),this.quadraticVertex(O,N,O-v,N)):this.vertex(O,N),0!==b?(this.vertex(M+b,N),this.quadraticVertex(M,N,M,N-b)):this.vertex(M,N),0!==y?(this.vertex(M,C+y),this.quadraticVertex(M,C,M+y,C)):this.vertex(M,C),this.immediateMode.geometry.uvs.length=0;var A=!0,R=!1,L=void 0;try{for(var I,P=this.immediateMode.geometry.vertices[Symbol.iterator]();!(A=(I=P.next()).done);A=!0){var D=I.value,F=(D.x-M)/o,U=(D.y-C)/a;this.immediateMode.geometry.uvs.push(F,U)}}catch(t){R=!0,L=t}finally{try{A||null==P.return||P.return()}finally{if(R)throw L}}this.endShape(l.CLOSE)}return this},/* eslint-disable max-len */s.default.RendererGL.prototype.quad=function(t,r,n,o,a,l,c,u,p,d,m,f,h,y){void 0===h&&(h=2),void 0===y&&(y=2);var g="quad|".concat(t,"|").concat(r,"|").concat(n,"|").concat(o,"|").concat(a,"|").concat(l,"|").concat(c,"|").concat(u,"|").concat(p,"|").concat(d,"|").concat(m,"|").concat(f,"|").concat(h,"|").concat(y);if(!this.geometryInHash(g)){var v=new s.default.Geometry(h,y,function(){for(var h=1/(this.detailX-1),y=1/(this.detailY-1),g=0;g<this.detailY;g++)for(var v=0;v<this.detailX;v++){var b=v*h,x=g*y,j=(1-x)*t+x*d,w=(1-x)*r+x*m,_=(1-x)*n+x*f,S=(1-b)*j+b*((1-x)*o+x*c),E=(1-b)*w+b*((1-x)*a+x*u),T=(1-b)*_+b*((1-x)*l+x*p);this.vertices.push(new s.default.Vector(S,E,T)),this.uvs.push([b,x])}});v.faces=[];for(var b=0;b<y-1;b++)for(var x=0;x<h-1;x++){var j=x+b*h,w=x+1+b*h,_=x+1+(b+1)*h,S=x+(b+1)*h;v.faces.push([j,w,_]),v.faces.push([j,_,S])}v.computeNormals()._makeTriangleEdges()._edgesToVertices(),this.createBuffers(g,v)}return this.drawBuffers(g),this},//is based on Bernstein polynomial
// pretier-ignore
s.default.RendererGL.prototype.bezier=function(t,r,n,o,a,s,l,c,u,p,d,m){8==arguments.length&&(d=c,p=l,c=s,l=a,a=o,o=n,n=s=u=m=0);var f=this._pInst._bezierDetail||20;//value of Bezier detail
this.beginShape();for(var h=0;h<=f;h++){var y=Math.pow(1-h/f,3),g=3*(h/f)*Math.pow(1-h/f,2),v=3*Math.pow(h/f,2)*(1-h/f),b=Math.pow(h/f,3);this.vertex(t*y+o*g+l*v+p*b,r*y+a*g+c*v+d*b,n*y+s*g+u*v+m*b)}return this.endShape(),this},s.default.RendererGL.prototype.curve=function(t,r,n,o,a,s,l,c,u,p,d,m){8==arguments.length&&(p=l,d=c,l=a,c=o,a=o=n,n=s=u=m=0);var f=this._pInst._curveDetail;this.beginShape();for(var h=0;h<=f;h++){var y=.5*Math.pow(h/f,3),g=.5*Math.pow(h/f,2),v=h/f*.5,b=y*(-t+3*o-3*l+p)+g*(2*t-5*o+4*l-p)+v*(-t+l)+.5*(2*o),x=y*(-r+3*a-3*c+d)+g*(2*r-5*a+4*c-d)+v*(-r+c)+.5*(2*a),j=y*(-n+3*s-3*u+m)+g*(2*n-5*s+4*u-m)+v*(-n+u)+.5*(2*s);this.vertex(b,x,j)}return this.endShape(),this},/**
 * Draw a line given two points
 * @private
 * @param {Number} x0 x-coordinate of first vertex
 * @param {Number} y0 y-coordinate of first vertex
 * @param {Number} z0 z-coordinate of first vertex
 * @param {Number} x1 x-coordinate of second vertex
 * @param {Number} y1 y-coordinate of second vertex
 * @param {Number} z1 z-coordinate of second vertex
 * @chainable
 * @example
 * <div>
 * <code>
 * //draw a line
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 * }
 *
 * function draw() {
 *   background(200);
 *   rotateX(frameCount * 0.01);
 *   rotateY(frameCount * 0.01);
 *   // Use fill instead of stroke to change the color of shape.
 *   fill(255, 0, 0);
 *   line(10, 10, 0, 60, 60, 20);
 * }
 * </code>
 * </div>
 */s.default.RendererGL.prototype.line=function(){return 6==arguments.length?(this.beginShape(l.LINES),this.vertex(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2]),this.vertex(arguments.length<=3?void 0:arguments[3],arguments.length<=4?void 0:arguments[4],arguments.length<=5?void 0:arguments[5]),this.endShape()):4==arguments.length&&(this.beginShape(l.LINES),this.vertex(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],0),this.vertex(arguments.length<=2?void 0:arguments[2],arguments.length<=3?void 0:arguments[3],0),this.endShape()),this},s.default.RendererGL.prototype.bezierVertex=function(){if(0===this.immediateMode._bezierVertex.length)throw Error("vertex() must be used once before calling bezierVertex()");var t,r,n,o,a,s,l,c=[],u=[],p=[],d=arguments.length;if(t=0,0===this._lookUpTableBezier.length||this._lutBezierDetail!==this._pInst._curveDetail){this._lookUpTableBezier=[],this._lutBezierDetail=this._pInst._curveDetail;for(var m=1/this._lutBezierDetail,f=0,h=1,y=0;f<1;){if(t=parseFloat(f.toFixed(6)),this._lookUpTableBezier[y]=this._bezierCoefficients(t),h.toFixed(6)===m.toFixed(6)){t=parseFloat(h.toFixed(6))+parseFloat(f.toFixed(6)),++y,this._lookUpTableBezier[y]=this._bezierCoefficients(t);break}f+=m,h-=m,++y}}var g=this._lookUpTableBezier.length,v=[];// fillColors[0]: start point color
for(l=0;l<4;l++)v.push([]);v[0]=this.immediateMode.geometry.vertexColors.slice(-4),v[3]=this.curFillColor.slice();var b=[];for(l=0;l<4;l++)b.push([]);if(b[0]=this.immediateMode.geometry.vertexStrokeColors.slice(-4),b[3]=this.curStrokeColor.slice(),6===d){this.isBezier=!0,c=[this.immediateMode._bezierVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=2?void 0:arguments[2],arguments.length<=4?void 0:arguments[4]],u=[this.immediateMode._bezierVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=3?void 0:arguments[3],arguments.length<=5?void 0:arguments[5]];// points, and the end point determines the intermediate color.
var x=Math.hypot(c[0]-c[1],u[0]-u[1]),j=Math.hypot(c[1]-c[2],u[1]-u[2]),w=Math.hypot(c[2]-c[3],u[2]-u[3]),_=x+j+w;for(x/=_,w/=_,s=0;s<4;s++)v[1].push(v[0][s]*(1-x)+v[3][s]*x),v[2].push(v[0][s]*w+v[3][s]*(1-w)),b[1].push(b[0][s]*(1-x)+b[3][s]*x),b[2].push(b[0][s]*w+b[3][s]*(1-w));for(a=0;a<g;a++){for(l=0,// Interpolate colors using control points
this.curFillColor=[0,0,0,0],this.curStrokeColor=[0,0,0,0],r=n=0;l<4;l++){for(s=0;s<4;s++)this.curFillColor[s]+=this._lookUpTableBezier[a][l]*v[l][s],this.curStrokeColor[s]+=this._lookUpTableBezier[a][l]*b[l][s];r+=c[l]*this._lookUpTableBezier[a][l],n+=u[l]*this._lookUpTableBezier[a][l]}this.vertex(r,n)}// so that we leave currentColor with the last value the user set it to
this.curFillColor=v[3],this.curStrokeColor=b[3],this.immediateMode._bezierVertex[0]=arguments.length<=4?void 0:arguments[4],this.immediateMode._bezierVertex[1]=arguments.length<=5?void 0:arguments[5]}else if(9===d){this.isBezier=!0,c=[this.immediateMode._bezierVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=3?void 0:arguments[3],arguments.length<=6?void 0:arguments[6]],u=[this.immediateMode._bezierVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=4?void 0:arguments[4],arguments.length<=7?void 0:arguments[7]],p=[this.immediateMode._bezierVertex[2],arguments.length<=2?void 0:arguments[2],arguments.length<=5?void 0:arguments[5],arguments.length<=8?void 0:arguments[8]];// points, and the end point determines the intermediate color.
var S=Math.hypot(c[0]-c[1],u[0]-u[1],p[0]-p[1]),E=Math.hypot(c[1]-c[2],u[1]-u[2],p[1]-p[2]),T=Math.hypot(c[2]-c[3],u[2]-u[3],p[2]-p[3]),M=S+E+T;for(S/=M,T/=M,s=0;s<4;s++)v[1].push(v[0][s]*(1-S)+v[3][s]*S),v[2].push(v[0][s]*T+v[3][s]*(1-T)),b[1].push(b[0][s]*(1-S)+b[3][s]*S),b[2].push(b[0][s]*T+b[3][s]*(1-T));for(a=0;a<g;a++){for(l=0,// Interpolate colors using control points
this.curFillColor=[0,0,0,0],this.curStrokeColor=[0,0,0,0],r=n=o=0;l<4;l++){for(s=0;s<4;s++)this.curFillColor[s]+=this._lookUpTableBezier[a][l]*v[l][s],this.curStrokeColor[s]+=this._lookUpTableBezier[a][l]*b[l][s];r+=c[l]*this._lookUpTableBezier[a][l],n+=u[l]*this._lookUpTableBezier[a][l],o+=p[l]*this._lookUpTableBezier[a][l]}this.vertex(r,n,o)}// so that we leave currentColor with the last value the user set it to
this.curFillColor=v[3],this.curStrokeColor=b[3],this.immediateMode._bezierVertex[0]=arguments.length<=6?void 0:arguments[6],this.immediateMode._bezierVertex[1]=arguments.length<=7?void 0:arguments[7],this.immediateMode._bezierVertex[2]=arguments.length<=8?void 0:arguments[8]}},s.default.RendererGL.prototype.quadraticVertex=function(){if(0===this.immediateMode._quadraticVertex.length)throw Error("vertex() must be used once before calling quadraticVertex()");var t,r,n,o,a,s,l,c=[],u=[],p=[],d=arguments.length;if(t=0,0===this._lookUpTableQuadratic.length||this._lutQuadraticDetail!==this._pInst._curveDetail){this._lookUpTableQuadratic=[],this._lutQuadraticDetail=this._pInst._curveDetail;for(var m=1/this._lutQuadraticDetail,f=0,h=1,y=0;f<1;){if(t=parseFloat(f.toFixed(6)),this._lookUpTableQuadratic[y]=this._quadraticCoefficients(t),h.toFixed(6)===m.toFixed(6)){t=parseFloat(h.toFixed(6))+parseFloat(f.toFixed(6)),++y,this._lookUpTableQuadratic[y]=this._quadraticCoefficients(t);break}f+=m,h-=m,++y}}var g=this._lookUpTableQuadratic.length,v=[];// fillColors[0]: start point color
for(l=0;l<3;l++)v.push([]);v[0]=this.immediateMode.geometry.vertexColors.slice(-4),v[2]=this.curFillColor.slice();var b=[];for(l=0;l<3;l++)b.push([]);if(b[0]=this.immediateMode.geometry.vertexStrokeColors.slice(-4),b[2]=this.curStrokeColor.slice(),4===d){this.isQuadratic=!0,c=[this.immediateMode._quadraticVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=2?void 0:arguments[2]],u=[this.immediateMode._quadraticVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=3?void 0:arguments[3]];// point, and the end point determines the intermediate color.
var x=Math.hypot(c[0]-c[1],u[0]-u[1]),j=x+Math.hypot(c[1]-c[2],u[1]-u[2]);for(x/=j,s=0;s<4;s++)v[1].push(v[0][s]*(1-x)+v[2][s]*x),b[1].push(b[0][s]*(1-x)+b[2][s]*x);for(a=0;a<g;a++){for(l=0,// Interpolate colors using control points
this.curFillColor=[0,0,0,0],this.curStrokeColor=[0,0,0,0],r=n=0;l<3;l++){for(s=0;s<4;s++)this.curFillColor[s]+=this._lookUpTableQuadratic[a][l]*v[l][s],this.curStrokeColor[s]+=this._lookUpTableQuadratic[a][l]*b[l][s];r+=c[l]*this._lookUpTableQuadratic[a][l],n+=u[l]*this._lookUpTableQuadratic[a][l]}this.vertex(r,n)}// so that we leave currentColor with the last value the user set it to
this.curFillColor=v[2],this.curStrokeColor=b[2],this.immediateMode._quadraticVertex[0]=arguments.length<=2?void 0:arguments[2],this.immediateMode._quadraticVertex[1]=arguments.length<=3?void 0:arguments[3]}else if(6===d){this.isQuadratic=!0,c=[this.immediateMode._quadraticVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=3?void 0:arguments[3]],u=[this.immediateMode._quadraticVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=4?void 0:arguments[4]],p=[this.immediateMode._quadraticVertex[2],arguments.length<=2?void 0:arguments[2],arguments.length<=5?void 0:arguments[5]];// point, and the end point determines the intermediate color.
var w=Math.hypot(c[0]-c[1],u[0]-u[1],p[0]-p[1]),_=w+Math.hypot(c[1]-c[2],u[1]-u[2],p[1]-p[2]);for(w/=_,s=0;s<4;s++)v[1].push(v[0][s]*(1-w)+v[2][s]*w),b[1].push(b[0][s]*(1-w)+b[2][s]*w);for(a=0;a<g;a++){for(l=0,// Interpolate colors using control points
this.curFillColor=[0,0,0,0],this.curStrokeColor=[0,0,0,0],r=n=o=0;l<3;l++){for(s=0;s<4;s++)this.curFillColor[s]+=this._lookUpTableQuadratic[a][l]*v[l][s],this.curStrokeColor[s]+=this._lookUpTableQuadratic[a][l]*b[l][s];r+=c[l]*this._lookUpTableQuadratic[a][l],n+=u[l]*this._lookUpTableQuadratic[a][l],o+=p[l]*this._lookUpTableQuadratic[a][l]}this.vertex(r,n,o)}// so that we leave currentColor with the last value the user set it to
this.curFillColor=v[2],this.curStrokeColor=b[2],this.immediateMode._quadraticVertex[0]=arguments.length<=3?void 0:arguments[3],this.immediateMode._quadraticVertex[1]=arguments.length<=4?void 0:arguments[4],this.immediateMode._quadraticVertex[2]=arguments.length<=5?void 0:arguments[5]}},s.default.RendererGL.prototype.curveVertex=function(){var t,r,n,o,a,s=[],l=[],c=[];t=0;var u=arguments.length;if(0===this._lookUpTableBezier.length||this._lutBezierDetail!==this._pInst._curveDetail){this._lookUpTableBezier=[],this._lutBezierDetail=this._pInst._curveDetail;for(var p=1/this._lutBezierDetail,d=0,m=1,f=0;d<1;){if(t=parseFloat(d.toFixed(6)),this._lookUpTableBezier[f]=this._bezierCoefficients(t),m.toFixed(6)===p.toFixed(6)){t=parseFloat(m.toFixed(6))+parseFloat(d.toFixed(6)),++f,this._lookUpTableBezier[f]=this._bezierCoefficients(t);break}d+=p,m-=p,++f}}var h=this._lookUpTableBezier.length;if(2===u){if(this.immediateMode._curveVertex.push(arguments.length<=0?void 0:arguments[0]),this.immediateMode._curveVertex.push(arguments.length<=1?void 0:arguments[1]),8===this.immediateMode._curveVertex.length){for(a=0,this.isCurve=!0,s=this._bezierToCatmull([this.immediateMode._curveVertex[0],this.immediateMode._curveVertex[2],this.immediateMode._curveVertex[4],this.immediateMode._curveVertex[6]]),l=this._bezierToCatmull([this.immediateMode._curveVertex[1],this.immediateMode._curveVertex[3],this.immediateMode._curveVertex[5],this.immediateMode._curveVertex[7]]);a<h;a++)r=s[0]*this._lookUpTableBezier[a][0]+s[1]*this._lookUpTableBezier[a][1]+s[2]*this._lookUpTableBezier[a][2]+s[3]*this._lookUpTableBezier[a][3],n=l[0]*this._lookUpTableBezier[a][0]+l[1]*this._lookUpTableBezier[a][1]+l[2]*this._lookUpTableBezier[a][2]+l[3]*this._lookUpTableBezier[a][3],this.vertex(r,n);for(a=0;a<u;a++)this.immediateMode._curveVertex.shift()}}else if(3===u&&(this.immediateMode._curveVertex.push(arguments.length<=0?void 0:arguments[0]),this.immediateMode._curveVertex.push(arguments.length<=1?void 0:arguments[1]),this.immediateMode._curveVertex.push(arguments.length<=2?void 0:arguments[2]),12===this.immediateMode._curveVertex.length)){for(a=0,this.isCurve=!0,s=this._bezierToCatmull([this.immediateMode._curveVertex[0],this.immediateMode._curveVertex[3],this.immediateMode._curveVertex[6],this.immediateMode._curveVertex[9]]),l=this._bezierToCatmull([this.immediateMode._curveVertex[1],this.immediateMode._curveVertex[4],this.immediateMode._curveVertex[7],this.immediateMode._curveVertex[10]]),c=this._bezierToCatmull([this.immediateMode._curveVertex[2],this.immediateMode._curveVertex[5],this.immediateMode._curveVertex[8],this.immediateMode._curveVertex[11]]);a<h;a++)r=s[0]*this._lookUpTableBezier[a][0]+s[1]*this._lookUpTableBezier[a][1]+s[2]*this._lookUpTableBezier[a][2]+s[3]*this._lookUpTableBezier[a][3],n=l[0]*this._lookUpTableBezier[a][0]+l[1]*this._lookUpTableBezier[a][1]+l[2]*this._lookUpTableBezier[a][2]+l[3]*this._lookUpTableBezier[a][3],o=c[0]*this._lookUpTableBezier[a][0]+c[1]*this._lookUpTableBezier[a][1]+c[2]*this._lookUpTableBezier[a][2]+c[3]*this._lookUpTableBezier[a][3],this.vertex(r,n,o);for(a=0;a<u;a++)this.immediateMode._curveVertex.shift()}},s.default.RendererGL.prototype.image=function(t,r,n,o,a,s,c,u,p){this._isErasing&&this.blendMode(this._cachedBlendMode),this._pInst.push(),this._pInst.noLights(),this._pInst.noStroke(),this._pInst.texture(t),this._pInst.textureMode(l.NORMAL);var d=0;r<=t.width&&(d=r/t.width);var m=1;r+o<=t.width&&(m=(r+o)/t.width);var f=0;n<=t.height&&(f=n/t.height);var h=1;n+a<=t.height&&(h=(n+a)/t.height),this.beginShape(),this.vertex(s,c,0,d,f),this.vertex(s+u,c,0,m,f),this.vertex(s+u,c+p,0,m,h),this.vertex(s,c+p,0,d,h),this.endShape(l.CLOSE),this._pInst.pop(),this._isErasing&&this.blendMode(l.REMOVE)};var m=s.default;n.default=m},{"../core/constants":284,"../core/main":296,"./p5.Geometry":346,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.for-each":174,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.slice":182,"core-js/modules/es.math.hypot":187,"core-js/modules/es.math.sign":188,"core-js/modules/es.number.to-fixed":191,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],340:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.math.hypot"),t("core-js/modules/es.math.sign"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.math.hypot"),t("core-js/modules/es.math.sign"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=u(t("../core/main")),s=c(t("../core/constants"));function l(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return l=function(){return t},t}function c(t){if(t&&t.__esModule)return t;if(null===t||"object"!==p(t)&&"function"!=typeof t)return{default:t};var r=l();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var s=o?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}function u(t){return t&&t.__esModule?t:{default:t}}function p(t){return(p="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}/**
 * Allows movement around a 3D sketch using a mouse or trackpad or touch.
 * Left-clicking and dragging or swipe motion will rotate the camera position
 * about the center of the sketch, right-clicking and dragging or multi-swipe
 * will pan the camera position without rotation, and using the mouse wheel
 * (scrolling) or pinch in/out will move the camera further or closer
 * from the center of the sketch. This function can be called with parameters
 * dictating sensitivity to mouse/touch movement along the X and Y axes.
 * Calling this function without parameters is equivalent to calling
 * orbitControl(1,1). To reverse direction of movement in either axis,
 * enter a negative number for sensitivity.
 * @method orbitControl
 * @for p5
 * @param  {Number} [sensitivityX] sensitivity to mouse movement along X axis
 * @param  {Number} [sensitivityY] sensitivity to mouse movement along Y axis
 * @param  {Number} [sensitivityZ] sensitivity to scroll movement along Z axis
 * @param  {Object} [options] An optional object that can contain additional settings,
 * disableTouchActions - Boolean, default value is true.
 * Setting this to true makes mobile interactions smoother by preventing
 * accidental interactions with the page while orbiting. But if you're already
 * doing it via css or want the default touch actions, consider setting it to false.
 * freeRotation - Boolean, default value is false.
 * By default, horizontal movement of the mouse or touch pointer rotates the camera
 * around the y-axis, and vertical movement rotates the camera around the x-axis.
 * But if setting this option to true, the camera always rotates in the direction
 * the pointer is moving. For zoom and move, the behavior is the same regardless of
 * true/false.
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   normalMaterial();
 *   describe(
 *     'Camera orbits around a box when mouse is hold-clicked & then moved.'
 *   );
 * }
 * function draw() {
 *   background(200);
 *
 *   // If you execute the line commented out instead of next line, the direction of rotation
 *   // will be the direction the mouse or touch pointer moves, not around the X or Y axis.
 *   orbitControl();
 *   // orbitControl(1, 1, 1, {freeRotation: true});
 *
 *   rotateY(0.5);
 *   box(30, 50);
 * }
 * </code>
 * </div>
 *
 * @alt
 * Camera orbits around a box when mouse is hold-clicked & then moved.
 */// implementation based on three.js 'orbitControls':
// https://github.com/mrdoob/three.js/blob/6afb8595c0bf8b2e72818e42b64e6fe22707d896/examples/jsm/controls/OrbitControls.js#L22
a.default.prototype.orbitControl=function(t,r,n,o){var s=this;this._assert3d("orbitControl"),a.default._validateParameters("orbitControl",arguments);var l=this._renderer._curCamera;void 0===t&&(t=1),void 0===r&&(r=t),void 0===n&&(n=1),"object"!==p(o)&&(o={}),!0!==this.contextMenuDisabled&&(this.canvas.oncontextmenu=function(){return!1},this._setProperty("contextMenuDisabled",!0)),!0!==this.wheelDefaultDisabled&&(this.canvas.onwheel=function(){return!1},this._setProperty("wheelDefaultDisabled",!0));// 'touchActionsDisabled' flag to p5 instance
var c=o.disableTouchActions,u=void 0===c||c;!0!==this.touchActionsDisabled&&u&&(this.canvas.style["touch-action"]="none",this._setProperty("touchActionsDisabled",!0));// the pointer moves. default value is false (normal behavior)
var d=o.freeRotation,m=void 0!==d&&d,f=[];// get moved touches.
this.touches.forEach(function(t){s._renderer.prevTouches.forEach(function(r){if(t.id===r.id){var n={x:t.x,y:t.y,px:r.x,py:r.y};f.push(n)}})}),this._renderer.prevTouches=this.touches;// https://github.com/freshfork/p5.EasyCam/blob/9782964680f6a5c4c9bee825c475d9f2021d5134/p5.easycam.js#L1124
// variables for interaction
var h=0,y=0,g=0,v=0,b=0,x=.85,j=.6,w=.15,_=.01,S=4e-4,E=this.height<this.width?this.height:this.width,T=!1;if(f.length>0){if(/* for touch */// if length === 1, rotate
// if length > 1, zoom and move
// for touch, it is calculated based on one moved touch pointer position.
T=f[0].x>0&&f[0].x<this.width&&f[0].y>0&&f[0].y<this.height,1===f.length){var M=f[0];y=-t*(M.x-M.px)/E,g=r*(M.y-M.py)/E}else{var C=f[0],O=f[1];// decreases, move the camera closer when it increases.
h=-(Math.hypot(C.x-O.x,C.y-O.y)-Math.hypot(C.px-O.px,C.py-O.py))*n*S,// the center of gravity of the two touch points.
v=.5*(C.x+O.x)-.5*(C.px+O.px),b=.5*(C.y+O.y)-.5*(C.py+O.py)}this.touches.length>0?T&&(// Initiate an interaction if touched in the canvas
this._renderer.executeRotateAndMove=!0,this._renderer.executeZoom=!0):(// End an interaction when the touch is released
this._renderer.executeRotateAndMove=!1,this._renderer.executeZoom=!1)}else /* for mouse */// if wheelDeltaY !== 0, zoom
// if mouseLeftButton is down, rotate
// if mouseRightButton is down, move
// For mouse, it is calculated based on the mouse position.
T=this.mouseX>0&&this.mouseX<this.width&&this.mouseY>0&&this.mouseY<this.height,0!==this._mouseWheelDeltaY?(h=Math.sign(this._mouseWheelDeltaY)*n*_,this._mouseWheelDeltaY=0,T&&(this._renderer.executeZoom=!0)):this._renderer.zoomFlag=!1,this.mouseIsPressed?(this.mouseButton===this.LEFT?(y=-t*this.movedX/E,g=r*this.movedY/E):this.mouseButton===this.RIGHT&&(v=this.movedX,b=this.movedY),T&&(this._renderer.executeRotateAndMove=!0)):this._renderer.executeRotateAndMove=!1;// interactions
// move process
if(0!==h&&this._renderer.executeZoom&&(this._renderer.zoomVelocity+=h),Math.abs(this._renderer.zoomVelocity)>.001?(m?l._orbitFree(0,0,this._renderer.zoomVelocity):l._orbit(0,0,this._renderer.zoomVelocity),0!==l.projMatrix.mat4[15]&&(l.projMatrix.mat4[0]*=Math.pow(10,-this._renderer.zoomVelocity),l.projMatrix.mat4[5]*=Math.pow(10,-this._renderer.zoomVelocity),this._renderer.uPMatrix.mat4[0]=l.projMatrix.mat4[0],this._renderer.uPMatrix.mat4[5]=l.projMatrix.mat4[5]),this._renderer.zoomVelocity*=x):this._renderer.zoomVelocity=0,(0!==y||0!==g)&&this._renderer.executeRotateAndMove&&this._renderer.rotateVelocity.add(y*j,g*j),this._renderer.rotateVelocity.magSq()>1e-6?(m?l._orbitFree(-this._renderer.rotateVelocity.x,this._renderer.rotateVelocity.y,0):l._orbit(this._renderer.rotateVelocity.x,this._renderer.rotateVelocity.y,0),// damping
this._renderer.rotateVelocity.mult(x)):this._renderer.rotateVelocity.set(0,0),(0!==v||0!==b)&&this._renderer.executeRotateAndMove){// Normalize movement distance
var N=2*v/this.width,A=-(2*b)/this.height;this._renderer.moveVelocity.add(N*w,A*w)}if(this._renderer.moveVelocity.magSq()>1e-6){// Translate the camera so that the entire object moves
// perpendicular to the line of sight when the mouse is moved
// or when the centers of gravity of the two touch pointers move.
var R,L,I=l._getLocalAxes(),P=l.eyeX-l.centerX,D=l.eyeY-l.centerY,F=l.eyeZ-l.centerZ,U=Math.sqrt(P*P+D*D+F*F),B=new a.default.Vector(l.centerX,l.centerY,l.centerZ);// Calculate the z coordinate in the view coordinates of
B=l.cameraMatrix.multiplyPoint(B),B=this._renderer.uPMatrix.multiplyAndNormalizePoint(B),// in the normalized device coordinate system.
B.x-=this._renderer.moveVelocity.x,B.y-=this._renderer.moveVelocity.y;var G=this._renderer.uPMatrix.mat4;0===G[15]?(R=(G[8]+B.x)/G[0]*U,L=(G[9]+B.y)/G[5]*U):(R=(B.x-G[12])/G[0],L=(B.y-G[13])/G[5]),l.setPosition(l.eyeX+R*I.x[0]+L*I.y[0],l.eyeY+R*I.x[1]+L*I.y[1],l.eyeZ+R*I.x[2]+L*I.y[2]),this._renderer.moveVelocity.mult(x)}else this._renderer.moveVelocity.set(0,0);return this},/**
 * debugMode() helps visualize 3D space by adding a grid to indicate where the
 * ‘ground’ is in a sketch and an axes icon which indicates the +X, +Y, and +Z
 * directions. This function can be called without parameters to create a
 * default grid and axes icon, or it can be called according to the examples
 * above to customize the size and position of the grid and/or axes icon.  The
 * grid is drawn using the most recently set stroke color and weight.  To
 * specify these parameters, add a call to stroke() and strokeWeight()
 * just before the end of the draw() loop.
 *
 * By default, the grid will run through the origin (0,0,0) of the sketch
 * along the XZ plane
 * and the axes icon will be offset from the origin.  Both the grid and axes
 * icon will be sized according to the current canvas size.  Note that because the
 * grid runs parallel to the default camera view, it is often helpful to use
 * debugMode along with orbitControl to allow full view of the grid.
 * @method debugMode
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   camera(0, -30, 100, 0, 0, 0, 0, 1, 0);
 *   normalMaterial();
 *   debugMode();
 *   describe(
 *     'a 3D box is centered on a grid in a 3D sketch. an icon indicates the direction of each axis: a red line points +X, a green line +Y, and a blue line +Z. the grid and icon disappear when the spacebar is pressed.'
 *   );
 * }
 *
 * function draw() {
 *   background(200);
 *   orbitControl();
 *   box(15, 30);
 *   // Press the spacebar to turn debugMode off!
 *   if (keyIsDown(32)) {
 *     noDebugMode();
 *   }
 * }
 * </code>
 * </div>
 * @alt
 * a 3D box is centered on a grid in a 3D sketch. an icon
 * indicates the direction of each axis: a red line points +X,
 * a green line +Y, and a blue line +Z. the grid and icon disappear when the
 * spacebar is pressed.
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   camera(0, -30, 100, 0, 0, 0, 0, 1, 0);
 *   normalMaterial();
 *   debugMode(GRID);
 *   describe('a 3D box is centered on a grid in a 3D sketch.');
 * }
 *
 * function draw() {
 *   background(200);
 *   orbitControl();
 *   box(15, 30);
 * }
 * </code>
 * </div>
 * @alt
 * a 3D box is centered on a grid in a 3D sketch.
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   camera(0, -30, 100, 0, 0, 0, 0, 1, 0);
 *   normalMaterial();
 *   debugMode(AXES);
 *   describe(
 *     'a 3D box is centered in a 3D sketch. an icon indicates the direction of each axis: a red line points +X, a green line +Y, and a blue line +Z.'
 *   );
 * }
 *
 * function draw() {
 *   background(200);
 *   orbitControl();
 *   box(15, 30);
 * }
 * </code>
 * </div>
 * @alt
 * a 3D box is centered in a 3D sketch. an icon
 * indicates the direction of each axis: a red line points +X,
 * a green line +Y, and a blue line +Z.
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   camera(0, -30, 100, 0, 0, 0, 0, 1, 0);
 *   normalMaterial();
 *   debugMode(GRID, 100, 10, 0, 0, 0);
 *   describe('a 3D box is centered on a grid in a 3D sketch');
 * }
 *
 * function draw() {
 *   background(200);
 *   orbitControl();
 *   box(15, 30);
 * }
 * </code>
 * </div>
 * @alt
 * a 3D box is centered on a grid in a 3D sketch
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   camera(0, -30, 100, 0, 0, 0, 0, 1, 0);
 *   normalMaterial();
 *   debugMode(100, 10, 0, 0, 0, 20, 0, -40, 0);
 *   describe(
 *     'a 3D box is centered on a grid in a 3D sketch. an icon indicates the direction of each axis: a red line points +X, a green line +Y, and a blue line +Z.'
 *   );
 * }
 *
 * function draw() {
 *   noStroke();
 *   background(200);
 *   orbitControl();
 *   box(15, 30);
 *   // set the stroke color and weight for the grid!
 *   stroke(255, 0, 150);
 *   strokeWeight(0.8);
 * }
 * </code>
 * </div>
 * @alt
 * a 3D box is centered on a grid in a 3D sketch. an icon
 * indicates the direction of each axis: a red line points +X,
 * a green line +Y, and a blue line +Z.
 *//**
 * @method debugMode
 * @param {Constant} mode either GRID or AXES
 *//**
 * @method debugMode
 * @param {Constant} mode
 * @param {Number} [gridSize] size of one side of the grid
 * @param {Number} [gridDivisions] number of divisions in the grid
 * @param {Number} [xOff] X axis offset from origin (0,0,0)
 * @param {Number} [yOff] Y axis offset from origin (0,0,0)
 * @param {Number} [zOff] Z axis offset from origin (0,0,0)
 *//**
 * @method debugMode
 * @param {Constant} mode
 * @param {Number} [axesSize] size of axes icon
 * @param {Number} [xOff]
 * @param {Number} [yOff]
 * @param {Number} [zOff]
 *//**
 * @method debugMode
 * @param {Number} [gridSize]
 * @param {Number} [gridDivisions]
 * @param {Number} [gridXOff]
 * @param {Number} [gridYOff]
 * @param {Number} [gridZOff]
 * @param {Number} [axesSize]
 * @param {Number} [axesXOff]
 * @param {Number} [axesYOff]
 * @param {Number} [axesZOff]
 */a.default.prototype.debugMode=function(){this._assert3d("debugMode");for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];a.default._validateParameters("debugMode",r);// start by removing existing 'post' registered debug methods
for(var o=this._registeredMethods.post.length-1;o>=0;o--)(this._registeredMethods.post[o].toString()===this._grid().toString()||this._registeredMethods.post[o].toString()===this._axesIcon().toString())&&this._registeredMethods.post.splice(o,1);// then add new debugMode functions according to the argument list
r[0]===s.GRID?this.registerMethod("post",this._grid.call(this,r[1],r[2],r[3],r[4],r[5])):r[0]===s.AXES?this.registerMethod("post",this._axesIcon.call(this,r[1],r[2],r[3],r[4])):(this.registerMethod("post",this._grid.call(this,r[0],r[1],r[2],r[3],r[4])),this.registerMethod("post",this._axesIcon.call(this,r[5],r[6],r[7],r[8])))},/**
 * Turns off debugMode() in a 3D sketch.
 * @method noDebugMode
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   camera(0, -30, 100, 0, 0, 0, 0, 1, 0);
 *   normalMaterial();
 *   debugMode();
 *   describe(
 *     'a 3D box is centered on a grid in a 3D sketch. an icon indicates the direction of each axis: a red line points +X, a green line +Y, and a blue line +Z. the grid and icon disappear when the spacebar is pressed.'
 *   );
 * }
 *
 * function draw() {
 *   background(200);
 *   orbitControl();
 *   box(15, 30);
 *   // Press the spacebar to turn debugMode off!
 *   if (keyIsDown(32)) {
 *     noDebugMode();
 *   }
 * }
 * </code>
 * </div>
 * @alt
 * a 3D box is centered on a grid in a 3D sketch. an icon
 * indicates the direction of each axis: a red line points +X,
 * a green line +Y, and a blue line +Z. the grid and icon disappear when the
 * spacebar is pressed.
 */a.default.prototype.noDebugMode=function(){this._assert3d("noDebugMode");// start by removing existing 'post' registered debug methods
for(var t=this._registeredMethods.post.length-1;t>=0;t--)(this._registeredMethods.post[t].toString()===this._grid().toString()||this._registeredMethods.post[t].toString()===this._axesIcon().toString())&&this._registeredMethods.post.splice(t,1)},/**
 * For use with debugMode
 * @private
 * @method _grid
 * @param {Number} [size] size of grid sides
 * @param {Number} [div] number of grid divisions
 * @param {Number} [xOff] offset of grid center from origin in X axis
 * @param {Number} [yOff] offset of grid center from origin in Y axis
 * @param {Number} [zOff] offset of grid center from origin in Z axis
 */a.default.prototype._grid=function(t,r,n,o,a){void 0===t&&(t=this.width/2),void 0===r&&(r=4>Math.round(t/30)?4:Math.round(t/30)),void 0===n&&(n=0),void 0===o&&(o=0),void 0===a&&(a=0);var s=t/r,l=t/2;return function(){this.push(),this.stroke(255*this._renderer.curStrokeColor[0],255*this._renderer.curStrokeColor[1],255*this._renderer.curStrokeColor[2]),this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0],this._renderer._curCamera.cameraMatrix.mat4[1],this._renderer._curCamera.cameraMatrix.mat4[2],this._renderer._curCamera.cameraMatrix.mat4[3],this._renderer._curCamera.cameraMatrix.mat4[4],this._renderer._curCamera.cameraMatrix.mat4[5],this._renderer._curCamera.cameraMatrix.mat4[6],this._renderer._curCamera.cameraMatrix.mat4[7],this._renderer._curCamera.cameraMatrix.mat4[8],this._renderer._curCamera.cameraMatrix.mat4[9],this._renderer._curCamera.cameraMatrix.mat4[10],this._renderer._curCamera.cameraMatrix.mat4[11],this._renderer._curCamera.cameraMatrix.mat4[12],this._renderer._curCamera.cameraMatrix.mat4[13],this._renderer._curCamera.cameraMatrix.mat4[14],this._renderer._curCamera.cameraMatrix.mat4[15]);for(var t=0;t<=r;t++)this.beginShape(this.LINES),this.vertex(-l+n,o,t*s-l+a),this.vertex(+l+n,o,t*s-l+a),this.endShape();// Lines along Z axis
for(var c=0;c<=r;c++)this.beginShape(this.LINES),this.vertex(c*s-l+n,o,-l+a),this.vertex(c*s-l+n,o,+l+a),this.endShape();this.pop()}},/**
 * For use with debugMode
 * @private
 * @method _axesIcon
 * @param {Number} [size] size of axes icon lines
 * @param {Number} [xOff] offset of icon from origin in X axis
 * @param {Number} [yOff] offset of icon from origin in Y axis
 * @param {Number} [zOff] offset of icon from origin in Z axis
 */a.default.prototype._axesIcon=function(t,r,n,o){return void 0===t&&(t=this.width/20>40?this.width/20:40),void 0===r&&(r=-this.width/4),void 0===n&&(n=r),void 0===o&&(o=r),function(){this.push(),this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0],this._renderer._curCamera.cameraMatrix.mat4[1],this._renderer._curCamera.cameraMatrix.mat4[2],this._renderer._curCamera.cameraMatrix.mat4[3],this._renderer._curCamera.cameraMatrix.mat4[4],this._renderer._curCamera.cameraMatrix.mat4[5],this._renderer._curCamera.cameraMatrix.mat4[6],this._renderer._curCamera.cameraMatrix.mat4[7],this._renderer._curCamera.cameraMatrix.mat4[8],this._renderer._curCamera.cameraMatrix.mat4[9],this._renderer._curCamera.cameraMatrix.mat4[10],this._renderer._curCamera.cameraMatrix.mat4[11],this._renderer._curCamera.cameraMatrix.mat4[12],this._renderer._curCamera.cameraMatrix.mat4[13],this._renderer._curCamera.cameraMatrix.mat4[14],this._renderer._curCamera.cameraMatrix.mat4[15]),this.strokeWeight(2),this.stroke(255,0,0),this.beginShape(this.LINES),this.vertex(r,n,o),this.vertex(r+t,n,o),this.endShape(),this.stroke(0,255,0),this.beginShape(this.LINES),this.vertex(r,n,o),this.vertex(r,n+t,o),this.endShape(),this.stroke(0,0,255),this.beginShape(this.LINES),this.vertex(r,n,o),this.vertex(r,n,o+t),this.endShape(),this.pop()}};var d=a.default;n.default=d},{"../core/constants":284,"../core/main":296,"core-js/modules/es.array.for-each":174,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.splice":184,"core-js/modules/es.math.hypot":187,"core-js/modules/es.math.sign":188,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.for-each":253,"core-js/modules/web.dom-collections.iterator":254}],341:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module 3D
 * @submodule Lights
 * @for p5
 * @requires core
 *//**
 * Creates an ambient light with the given color.
 *
 * Ambient light does not come from a specific direction.
 * Objects are evenly lit from all sides. Ambient lights are
 * almost always used in combination with other types of lights.
 *
 * Note: lights need to be called (whether directly or indirectly)
 * within draw() to remain persistent in a looping program.
 * Placing them in setup() will cause them to only have an effect
 * the first time through the loop.
 *
 * @method ambientLight
 * @param  {Number}        v1       red or hue value relative to
 *                                   the current color range
 * @param  {Number}        v2       green or saturation value
 *                                   relative to the current color range
 * @param  {Number}        v3       blue or brightness value
 *                                   relative to the current color range
 * @param  {Number}        [alpha]  alpha value relative to current
 *                                   color range (default is 0-255)
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   noStroke();
 *   describe('sphere with coral color under black light');
 * }
 * function draw() {
 *   background(100);
 *   ambientLight(0); // black light (no light)
 *   ambientMaterial(255, 127, 80); // coral material
 *   sphere(40);
 * }
 * </code>
 * </div>
 * @alt
 * sphere with coral color under black light
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   noStroke();
 *   describe('sphere with coral color under white light');
 * }
 * function draw() {
 *   background(100);
 *   ambientLight(255); // white light
 *   ambientMaterial(255, 127, 80); // coral material
 *   sphere(40);
 * }
 * </code>
 * </div>
 * @alt
 * sphere with coral color under white light
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100,100,WEBGL);
 *   camera(0,-100,300);
 * }
 * function draw() {
 *   background(230);
 *   ambientMaterial(237,34,93); //Pink Material
 *   ambientLight(mouseY);
 *   //As you move the mouse up to down it changes from no ambient light to full ambient light.
 *   rotateY(millis()/2000);
 *   box(100);
 * }
 * </code>
 * </div>
 * @alt
 * pink ambient material cube under the ambient light
 *//**
 * @method ambientLight
 * @param  {Number}        gray    number specifying value between
 *                                  white and black
 * @param  {Number}        [alpha]
 * @chainable
 *//**
 * @method ambientLight
 * @param  {String}        value   a color string
 * @chainable
 *//**
 * @method ambientLight
 * @param  {Number[]}      values  an array containing the red,green,blue &
 *                                  and alpha components of the color
 * @chainable
 *//**
 * @method ambientLight
 * @param  {p5.Color}      color   color as a <a href="#/p5.Color">p5.Color</a>
 * @chainable
 */o.default.prototype.ambientLight=function(t,r,n,a){this._assert3d("ambientLight"),o.default._validateParameters("ambientLight",arguments);var s=this.color.apply(this,arguments);return this._renderer.ambientLightColors.push(s._array[0],s._array[1],s._array[2]),this._renderer._enableLighting=!0,this},/**
 * Sets the color of the specular highlight of a non-ambient light
 * (i.e. all lights except <a href="#/p5/ambientLight">ambientLight()</a>).
 *
 * specularColor() affects only the lights which are created after
 * it in the code.
 *
 * This function is used in combination with
 * <a href="#/p5/specularMaterial">specularMaterial()</a>.
 * If a geometry does not use specularMaterial(), this function
 * will have no effect.
 *
 * The default color is white (255, 255, 255), which is used if
 * specularColor() is not explicitly called.
 *
 * Note: specularColor is equivalent to the Processing function
 * <a href="https://processing.org/reference/lightSpecular_.html">lightSpecular</a>.
 *
 * @method specularColor
 * @param  {Number}        v1      red or hue value relative to
 *                                  the current color range
 * @param  {Number}        v2      green or saturation value
 *                                  relative to the current color range
 * @param  {Number}        v3      blue or brightness value
 *                                  relative to the current color range
 * @chainable
 * @example
 * <div>
 * <code>
 * let setRedSpecularColor = true;
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   noStroke();
 *   describe(
 *     'Sphere with specular highlight. Clicking the mouse toggles the specular highlight color between red and the default white.'
 *   );
 * }
 *
 * function draw() {
 *   background(0);
 *
 *   ambientLight(60);
 *
 *   // add a point light to showcase specular color
 *   // -- use mouse location to position the light
 *   let lightPosX = mouseX - width / 2;
 *   let lightPosY = mouseY - height / 2;
 *   // -- set the light's specular color
 *   if (setRedSpecularColor) {
 *     specularColor(255, 0, 0); // red specular highlight
 *   }
 *   // -- create the light
 *   pointLight(200, 200, 200, lightPosX, lightPosY, 50); // white light
 *
 *   // use specular material with high shininess
 *   specularMaterial(150);
 *   shininess(50);
 *
 *   sphere(30, 64, 64);
 * }
 *
 * function mouseClicked() {
 *   setRedSpecularColor = !setRedSpecularColor;
 * }
 * </code>
 * </div>
 *
 * @alt
 * Sphere with specular highlight. Clicking the mouse toggles the
 * specular highlight color between red and the default white.
 *//**
 * @method specularColor
 * @param  {Number}        gray    number specifying value between
 *                                  white and black
 * @chainable
 *//**
 * @method specularColor
 * @param  {String}        value   color as a CSS string
 * @chainable
 *//**
 * @method specularColor
 * @param  {Number[]}      values  color as an array containing the
 *                                  red, green, and blue components
 * @chainable
 *//**
 * @method specularColor
 * @param  {p5.Color}      color   color as a <a href="#/p5.Color">p5.Color</a>
 * @chainable
 */o.default.prototype.specularColor=function(t,r,n){this._assert3d("specularColor"),o.default._validateParameters("specularColor",arguments);var a=this.color.apply(this,arguments);return this._renderer.specularColors=[a._array[0],a._array[1],a._array[2]],this},/**
 * Creates a directional light with the given color and direction.
 *
 * Directional light comes from one direction.
 * The direction is specified as numbers inclusively between -1 and 1.
 * For example, setting the direction as (0, -1, 0) will cause the
 * geometry to be lit from below (since the light will be facing
 * directly upwards). Similarly, setting the direction as (1, 0, 0)
 * will cause the geometry to be lit from the left (since the light
 * will be facing directly rightwards).
 *
 * Directional lights do not have a specific point of origin, and
 * therefore cannot be positioned closer or farther away from a geometry.
 *
 * A maximum of **5** directional lights can be active at once.
 *
 * Note: lights need to be called (whether directly or indirectly)
 * within draw() to remain persistent in a looping program.
 * Placing them in setup() will cause them to only have an effect
 * the first time through the loop.
 *
 * @method directionalLight
 * @param  {Number}    v1         red or hue value relative to the current
 *                                 color range
 * @param  {Number}    v2         green or saturation value relative to the
 *                                 current color range
 * @param  {Number}    v3         blue or brightness value relative to the
 *                                 current color range
 * @param  {Number}    x          x component of direction (inclusive range of -1 to 1)
 * @param  {Number}    y          y component of direction (inclusive range of -1 to 1)
 * @param  {Number}    z          z component of direction (inclusive range of -1 to 1)
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe(
 *     'scene with sphere and directional light. The direction of the light is controlled with the mouse position.'
 *   );
 * }
 * function draw() {
 *   background(0);
 *   //move your mouse to change light direction
 *   let dirX = (mouseX / width - 0.5) * 2;
 *   let dirY = (mouseY / height - 0.5) * 2;
 *   directionalLight(250, 250, 250, -dirX, -dirY, -1);
 *   noStroke();
 *   sphere(40);
 * }
 * </code>
 * </div>
 *
 * @alt
 * scene with sphere and directional light. The direction of
 * the light is controlled with the mouse position.
 *//**
 * @method directionalLight
 * @param  {Number}    v1
 * @param  {Number}    v2
 * @param  {Number}    v3
 * @param  {p5.Vector} direction  direction of light as a
 *                                 <a href="#/p5.Vector">p5.Vector</a>
 * @chainable
 *//**
 * @method directionalLight
 * @param  {p5.Color|Number[]|String} color  color as a <a href="#/p5.Color">p5.Color</a>,
 *                                            as an array, or as a CSS string
 * @param  {Number}                   x
 * @param  {Number}                   y
 * @param  {Number}                   z
 * @chainable
 *//**
 * @method directionalLight
 * @param  {p5.Color|Number[]|String} color
 * @param  {p5.Vector}                direction
 * @chainable
 */o.default.prototype.directionalLight=function(t,r,n,a,s,l){this._assert3d("directionalLight"),o.default._validateParameters("directionalLight",arguments),c=t instanceof o.default.Color?t:this.color(t,r,n);var c,u,p,d,m=arguments[arguments.length-1];"number"==typeof m?(u=arguments[arguments.length-3],p=arguments[arguments.length-2],d=arguments[arguments.length-1]):(u=m.x,p=m.y,d=m.z);var f=Math.sqrt(u*u+p*p+d*d);return this._renderer.directionalLightDirections.push(u/f,p/f,d/f),this._renderer.directionalLightDiffuseColors.push(c._array[0],c._array[1],c._array[2]),Array.prototype.push.apply(this._renderer.directionalLightSpecularColors,this._renderer.specularColors),this._renderer._enableLighting=!0,this},/**
 * Creates a point light with the given color and position.
 *
 * A point light emits light from a single point in all directions.
 * Because the light is emitted from a specific point (position),
 * it has a different effect when it is positioned farther vs. nearer
 * an object.
 *
 * A maximum of **5** point lights can be active at once.
 *
 * Note: lights need to be called (whether directly or indirectly)
 * within draw() to remain persistent in a looping program.
 * Placing them in setup() will cause them to only have an effect
 * the first time through the loop.
 *
 * @method pointLight
 * @param  {Number}    v1  red or hue value relative to the current
 *                          color range
 * @param  {Number}    v2  green or saturation value relative to the
 *                          current color range
 * @param  {Number}    v3  blue or brightness value relative to the
 *                          current color range
 * @param  {Number}    x   x component of position
 * @param  {Number}    y   y component of position
 * @param  {Number}    z   z component of position
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe(
 *     'scene with sphere and point light. The position of the light is controlled with the mouse position.'
 *   );
 * }
 * function draw() {
 *   background(0);
 *   // move your mouse to change light position
 *   let locX = mouseX - width / 2;
 *   let locY = mouseY - height / 2;
 *   // to set the light position,
 *   // think of the world's coordinate as:
 *   // -width/2,-height/2 ----------- width/2,-height/2
 *   //                   |           |
 *   //                   |    0,0    |
 *   //                   |           |
 *   //  -width/2,height/2 ----------- width/2,height/2
 *   pointLight(250, 250, 250, locX, locY, 50);
 *   noStroke();
 *   sphere(40);
 * }
 * </code>
 * </div>
 *
 * @alt
 * scene with sphere and point light. The position of
 * the light is controlled with the mouse position.
 *//**
 * @method pointLight
 * @param  {Number}     v1
 * @param  {Number}     v2
 * @param  {Number}     v3
 * @param  {p5.Vector}  position of light as a <a href="#/p5.Vector">p5.Vector</a>
 * @chainable
 *//**
 * @method pointLight
 * @param  {p5.Color|Number[]|String} color  color as a <a href="#/p5.Color">p5.Color</a>,
 *                                            as an array, or as a CSS string
 * @param  {Number}                   x
 * @param  {Number}                   y
 * @param  {Number}                   z
 * @chainable
 *//**
 * @method pointLight
 * @param  {p5.Color|Number[]|String} color
 * @param  {p5.Vector}                position
 * @chainable
 */o.default.prototype.pointLight=function(t,r,n,a,s,l){this._assert3d("pointLight"),o.default._validateParameters("pointLight",arguments),c=t instanceof o.default.Color?t:this.color(t,r,n);var c,u,p,d,m=arguments[arguments.length-1];return"number"==typeof m?(u=arguments[arguments.length-3],p=arguments[arguments.length-2],d=arguments[arguments.length-1]):(u=m.x,p=m.y,d=m.z),this._renderer.pointLightPositions.push(u,p,d),this._renderer.pointLightDiffuseColors.push(c._array[0],c._array[1],c._array[2]),Array.prototype.push.apply(this._renderer.pointLightSpecularColors,this._renderer.specularColors),this._renderer._enableLighting=!0,this},/**
 * Places an ambient and directional light in the scene.
 * The lights are set to ambientLight(128, 128, 128) and
 * directionalLight(128, 128, 128, 0, 0, -1).
 *
 * Note: lights need to be called (whether directly or indirectly)
 * within draw() to remain persistent in a looping program.
 * Placing them in setup() will cause them to only have an effect
 * the first time through the loop.
 *
 * @method lights
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('the light is partially ambient and partially directional');
 * }
 * function draw() {
 *   background(0);
 *   lights();
 *   rotateX(millis() / 1000);
 *   rotateY(millis() / 1000);
 *   rotateZ(millis() / 1000);
 *   box();
 * }
 * </code>
 * </div>
 *
 * @alt
 * the light is partially ambient and partially directional
 */o.default.prototype.lights=function(){this._assert3d("lights");var t=this.color("rgb(128,128,128)");return this.ambientLight(t),this.directionalLight(t,0,0,-1),this},/**
 * Sets the falloff rate for <a href="#/p5/pointLight">pointLight()</a>
 * and <a href="#/p5/spotLight">spotLight()</a>.
 *
 * lightFalloff() affects only the lights which are created after it
 * in the code.
 *
 * The `constant`, `linear`, an `quadratic` parameters are used to calculate falloff as follows:
 *
 * d = distance from light position to vertex position
 *
 * falloff = 1 / (CONSTANT + d \* LINEAR + (d \* d) \* QUADRATIC)
 *
 * @method lightFalloff
 * @param {Number} constant   CONSTANT value for determining falloff
 * @param {Number} linear     LINEAR value for determining falloff
 * @param {Number} quadratic  QUADRATIC value for determining falloff
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   noStroke();
 *   describe(
 *     'Two spheres with different falloff values show different intensity of light'
 *   );
 * }
 * function draw() {
 *   ortho();
 *   background(0);
 *
 *   let locX = mouseX - width / 2;
 *   let locY = mouseY - height / 2;
 *   locX /= 2; // half scale
 *
 *   lightFalloff(1, 0, 0);
 *   push();
 *   translate(-25, 0, 0);
 *   pointLight(250, 250, 250, locX - 25, locY, 50);
 *   sphere(20);
 *   pop();
 *
 *   lightFalloff(0.97, 0.03, 0);
 *   push();
 *   translate(25, 0, 0);
 *   pointLight(250, 250, 250, locX + 25, locY, 50);
 *   sphere(20);
 *   pop();
 * }
 * </code>
 * </div>
 *
 * @alt
 * Two spheres with different falloff values show different intensity of light
 */o.default.prototype.lightFalloff=function(t,r,n){return this._assert3d("lightFalloff"),o.default._validateParameters("lightFalloff",arguments),t<0&&(t=0,console.warn("Value of constant argument in lightFalloff() should be never be negative. Set to 0.")),r<0&&(r=0,console.warn("Value of linear argument in lightFalloff() should be never be negative. Set to 0.")),n<0&&(n=0,console.warn("Value of quadratic argument in lightFalloff() should be never be negative. Set to 0.")),0===t&&0===r&&0===n&&(t=1,console.warn("Either one of the three arguments in lightFalloff() should be greater than zero. Set constant argument to 1.")),this._renderer.constantAttenuation=t,this._renderer.linearAttenuation=r,this._renderer.quadraticAttenuation=n,this},/**
 * Creates a spot light with the given color, position,
 * light direction, angle, and concentration.
 *
 * Like a <a href="#/p5/pointLight">pointLight()</a>, a spotLight()
 * emits light from a specific point (position). It has a different effect
 * when it is positioned farther vs. nearer an object.
 *
 * However, unlike a pointLight(), the light is emitted in **one direction**
 * along a conical shape. The shape of the cone can be controlled using
 * the `angle` and `concentration` parameters.
 *
 * The `angle` parameter is used to
 * determine the radius of the cone. And the `concentration`
 * parameter is used to focus the light towards the center of
 * the cone. Both parameters are optional, however if you want
 * to specify `concentration`, you must also specify `angle`.
 * The minimum concentration value is 1.
 *
 * A maximum of **5** spot lights can be active at once.
 *
 * Note: lights need to be called (whether directly or indirectly)
 * within draw() to remain persistent in a looping program.
 * Placing them in setup() will cause them to only have an effect
 * the first time through the loop.
 *
 * @method spotLight
 * @param  {Number}    v1               red or hue value relative to the current color range
 * @param  {Number}    v2               green or saturation value relative to the current color range
 * @param  {Number}    v3               blue or brightness value relative to the current color range
 * @param  {Number}    x                x component of position
 * @param  {Number}    y                y component of position
 * @param  {Number}    z                z component of position
 * @param  {Number}    rx               x component of light direction (inclusive range of -1 to 1)
 * @param  {Number}    ry               y component of light direction (inclusive range of -1 to 1)
 * @param  {Number}    rz               z component of light direction (inclusive range of -1 to 1)
 * @param  {Number}    [angle]          angle of cone. Defaults to PI/3
 * @param  {Number}    [concentration]  concentration of cone. Defaults to 100
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe(
 *     'scene with sphere and spot light. The position of the light is controlled with the mouse position.'
 *   );
 * }
 * function draw() {
 *   background(0);
 *   // move your mouse to change light position
 *   let locX = mouseX - width / 2;
 *   let locY = mouseY - height / 2;
 *   // to set the light position,
 *   // think of the world's coordinate as:
 *   // -width/2,-height/2 ----------- width/2,-height/2
 *   //                   |           |
 *   //                   |    0,0    |
 *   //                   |           |
 *   //  -width/2,height/2 ----------- width/2,height/2
 *   ambientLight(50);
 *   spotLight(0, 250, 0, locX, locY, 100, 0, 0, -1, Math.PI / 16);
 *   noStroke();
 *   sphere(40);
 * }
 * </code>
 * </div>
 *
 * @alt
 * scene with sphere and spot light. The position of
 * the light is controlled with the mouse position.
 *//**
 * @method spotLight
 * @param  {p5.Color|Number[]|String} color           color as a <a href="#/p5.Color">p5.Color</a>,
 *                                                     as an array, or as a CSS string
 * @param  {p5.Vector}                position        position of light as a <a href="#/p5.Vector">p5.Vector</a>
 * @param  {p5.Vector}                direction       direction of light as a <a href="#/p5.Vector">p5.Vector</a>
 * @param  {Number}                   [angle]
 * @param  {Number}                   [concentration]
 *//**
 * @method spotLight
 * @param  {Number}     v1
 * @param  {Number}     v2
 * @param  {Number}     v3
 * @param  {p5.Vector}  position
 * @param  {p5.Vector}  direction
 * @param  {Number}     [angle]
 * @param  {Number}     [concentration]
 *//**
 * @method spotLight
 * @param  {p5.Color|Number[]|String} color
 * @param  {Number}                   x
 * @param  {Number}                   y
 * @param  {Number}                   z
 * @param  {p5.Vector}                direction
 * @param  {Number}                   [angle]
 * @param  {Number}                   [concentration]
 *//**
 * @method spotLight
 * @param  {p5.Color|Number[]|String} color
 * @param  {p5.Vector}                position
 * @param  {Number}                   rx
 * @param  {Number}                   ry
 * @param  {Number}                   rz
 * @param  {Number}                   [angle]
 * @param  {Number}                   [concentration]
 *//**
 * @method spotLight
 * @param  {Number}     v1
 * @param  {Number}     v2
 * @param  {Number}     v3
 * @param  {Number}     x
 * @param  {Number}     y
 * @param  {Number}     z
 * @param  {p5.Vector}  direction
 * @param  {Number}     [angle]
 * @param  {Number}     [concentration]
 *//**
 * @method spotLight
 * @param  {Number}     v1
 * @param  {Number}     v2
 * @param  {Number}     v3
 * @param  {p5.Vector}  position
 * @param  {Number}     rx
 * @param  {Number}     ry
 * @param  {Number}     rz
 * @param  {Number}     [angle]
 * @param  {Number}     [concentration]
 *//**
 * @method spotLight
 * @param  {p5.Color|Number[]|String} color
 * @param  {Number}                   x
 * @param  {Number}                   y
 * @param  {Number}                   z
 * @param  {Number}                   rx
 * @param  {Number}                   ry
 * @param  {Number}                   rz
 * @param  {Number}                   [angle]
 * @param  {Number}                   [concentration]
 */o.default.prototype.spotLight=function(t,r,n,a,s,l,c,u,p,d,m){this._assert3d("spotLight"),o.default._validateParameters("spotLight",arguments);var f,h,y,g=arguments.length;switch(g){case 11:case 10:f=this.color(t,r,n),h=new o.default.Vector(a,s,l),y=new o.default.Vector(c,u,p);break;case 9:t instanceof o.default.Color?(f=t,h=new o.default.Vector(r,n,a),y=new o.default.Vector(s,l,c),d=u,m=p):a instanceof o.default.Vector?(f=this.color(t,r,n),h=a,y=new o.default.Vector(s,l,c),d=u,m=p):c instanceof o.default.Vector?(f=this.color(t,r,n),h=new o.default.Vector(a,s,l),y=c,d=u,m=p):(f=this.color(t,r,n),h=new o.default.Vector(a,s,l),y=new o.default.Vector(c,u,p));break;case 8:t instanceof o.default.Color?(f=t,h=new o.default.Vector(r,n,a),y=new o.default.Vector(s,l,c)):a instanceof o.default.Vector?(f=this.color(t,r,n),h=a,y=new o.default.Vector(s,l,c)):(f=this.color(t,r,n),h=new o.default.Vector(a,s,l),y=c),d=u;break;case 7:t instanceof o.default.Color&&r instanceof o.default.Vector?(f=t,h=r,y=new o.default.Vector(n,a,s),d=l,m=c):t instanceof o.default.Color&&s instanceof o.default.Vector?(f=t,h=new o.default.Vector(r,n,a),y=s,d=l,m=c):a instanceof o.default.Vector&&s instanceof o.default.Vector?(f=this.color(t,r,n),h=a,y=s,d=l,m=c):t instanceof o.default.Color?(f=t,h=new o.default.Vector(r,n,a),y=new o.default.Vector(s,l,c)):a instanceof o.default.Vector?(f=this.color(t,r,n),h=a,y=new o.default.Vector(s,l,c)):(f=this.color(t,r,n),h=new o.default.Vector(a,s,l),y=c);break;case 6:a instanceof o.default.Vector&&s instanceof o.default.Vector?(f=this.color(t,r,n),h=a,y=s,d=l):t instanceof o.default.Color&&s instanceof o.default.Vector?(f=t,h=new o.default.Vector(r,n,a),y=s,d=l):t instanceof o.default.Color&&r instanceof o.default.Vector&&(f=t,h=r,y=new o.default.Vector(n,a,s),d=l);break;case 5:t instanceof o.default.Color&&r instanceof o.default.Vector&&n instanceof o.default.Vector?(f=t,h=r,y=n,d=a,m=s):a instanceof o.default.Vector&&s instanceof o.default.Vector?(f=this.color(t,r,n),h=a,y=s):t instanceof o.default.Color&&s instanceof o.default.Vector?(f=t,h=new o.default.Vector(r,n,a),y=s):t instanceof o.default.Color&&r instanceof o.default.Vector&&(f=t,h=r,y=new o.default.Vector(n,a,s));break;case 4:f=t,h=r,y=n,d=a;break;case 3:f=t,h=r,y=n;break;default:return console.warn("Sorry, input for spotlight() is not in prescribed format. Too ".concat(g<3?"few":"many"," arguments were provided")),this}return this._renderer.spotLightDiffuseColors.push(f._array[0],f._array[1],f._array[2]),Array.prototype.push.apply(this._renderer.spotLightSpecularColors,this._renderer.specularColors),this._renderer.spotLightPositions.push(h.x,h.y,h.z),y.normalize(),this._renderer.spotLightDirections.push(y.x,y.y,y.z),void 0===d&&(d=Math.PI/3),void 0!==m&&m<1?(m=1,console.warn("Value of concentration needs to be greater than 1. Setting it to 1")):void 0===m&&(m=100),d=this._renderer._pInst._toRadians(d),this._renderer.spotLightAngle.push(Math.cos(d)),this._renderer.spotLightConc.push(m),this._renderer._enableLighting=!0,this},/**
 * Removes all lights present in a sketch.
 *
 * All subsequent geometry is rendered without lighting (until a new
 * light is created with a call to one of the lighting functions
 * (<a href="#/p5/lights">lights()</a>,
 * <a href="#/p5/ambientLight">ambientLight()</a>,
 * <a href="#/p5/directionalLight">directionalLight()</a>,
 * <a href="#/p5/pointLight">pointLight()</a>,
 * <a href="#/p5/spotLight">spotLight()</a>).
 *
 * @method noLights
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe(
 *     'Three white spheres. Each appears as a different color due to lighting.'
 *   );
 * }
 * function draw() {
 *   background(200);
 *   noStroke();
 *
 *   ambientLight(255, 0, 0);
 *   translate(-30, 0, 0);
 *   ambientMaterial(255);
 *   sphere(13);
 *
 *   noLights();
 *   translate(30, 0, 0);
 *   ambientMaterial(255);
 *   sphere(13);
 *
 *   ambientLight(0, 255, 0);
 *   translate(30, 0, 0);
 *   ambientMaterial(255);
 *   sphere(13);
 * }
 * </code>
 * </div>
 *
 * @alt
 * Three white spheres. Each appears as a different
 * color due to lighting.
 */o.default.prototype.noLights=function(){this._assert3d("noLights");for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return o.default._validateParameters("noLights",r),this._renderer._enableLighting=!1,this._renderer.ambientLightColors.length=0,this._renderer.specularColors=[1,1,1],this._renderer.directionalLightDirections.length=0,this._renderer.directionalLightDiffuseColors.length=0,this._renderer.directionalLightSpecularColors.length=0,this._renderer.pointLightPositions.length=0,this._renderer.pointLightDiffuseColors.length=0,this._renderer.pointLightSpecularColors.length=0,this._renderer.spotLightPositions.length=0,this._renderer.spotLightDirections.length=0,this._renderer.spotLightDiffuseColors.length=0,this._renderer.spotLightSpecularColors.length=0,this._renderer.spotLightAngle.length=0,this._renderer.spotLightConc.length=0,this._renderer.constantAttenuation=1,this._renderer.linearAttenuation=0,this._renderer.quadraticAttenuation=0,this._renderer._useShininess=1,this};var s=o.default;n.default=s},{"../core/main":296}],342:[function(t,r,n){t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.match"),t("core-js/modules/es.string.split"),t("core-js/modules/es.string.trim"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.splice"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.match"),t("core-js/modules/es.string.split"),t("core-js/modules/es.string.trim"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}/**
 * @module Shape
 * @submodule 3D Models
 * @for p5
 * @requires core
 * @requires p5.Geometry
 *//**
 * Parse OBJ lines into model. For reference, this is what a simple model of a
 * square might look like:
 *
 * v -0.5 -0.5 0.5
 * v -0.5 -0.5 -0.5
 * v -0.5 0.5 -0.5
 * v -0.5 0.5 0.5
 *
 * f 4 3 2 1
 */function s(t,r){for(var n={v:[],vt:[],vn:[]},a={},s=0;s<r.length;++s){// Each line is a separate object (vertex, face, vertex normal, etc)
// For each line, split it into tokens on whitespace. The first token
// describes the type.
var l=r[s].trim().split(/\b\s+/);if(l.length>0){if("v"===l[0]||"vn"===l[0]){// Check if this line describes a vertex or vertex normal.
// It will have three numeric parameters.
var c=new o.default.Vector(parseFloat(l[1]),parseFloat(l[2]),parseFloat(l[3]));n[l[0]].push(c)}else if("vt"===l[0]){// Check if this line describes a texture coordinate.
// It will have two numeric parameters U and V (W is omitted).
// Because of WebGL texture coordinates rendering behaviour, the V
// coordinate is inversed.
var u=[parseFloat(l[1]),1-parseFloat(l[2])];n[l[0]].push(u)}else if("f"===l[0])// OBJ faces can have more than three points. Triangulate points.
for(var p=3;p<l.length;++p){for(var d=[],m=[1,p-1,p],f=0;f<m.length;++f){// Now, convert the given token into an index
var h=l[m[f]],y=0;// previous nth vertex. I haven't seen this used in practice, but
// it might be good to implement this in the future.
if(void 0!==a[h])y=a[h];else{for(var g=h.split("/"),v=0;v<g.length;v++)g[v]=parseInt(g[v])-1;y=a[h]=t.vertices.length,t.vertices.push(n.v[g[0]].copy()),n.vt[g[1]]?t.uvs.push(n.vt[g[1]].slice()):t.uvs.push([0,0]),n.vn[g[2]]&&t.vertexNormals.push(n.vn[g[2]].copy())}d.push(y)}d[0]!==d[1]&&d[0]!==d[2]&&d[1]!==d[2]&&t.faces.push(d)}}}// If the model doesn't have normals, compute the normals
return 0===t.vertexNormals.length&&t.computeNormals(),t}/**
 * STL files can be of two types, ASCII and Binary,
 *
 * We need to convert the arrayBuffer to an array of strings,
 * to parse it as an ASCII file.
 */function l(t,r){if(c(r))p(t,r);else{var n=new DataView(r);if(!("TextDecoder"in window))return console.warn("Sorry, ASCII STL loading only works in browsers that support TextDecoder (https://caniuse.com/#feat=textencoder)"),t;d(t,new TextDecoder("utf-8").decode(n).split("\n"))}return t}/**
 * This function checks if the file is in ASCII format or in Binary format
 *
 * It is done by searching keyword `solid` at the start of the file.
 *
 * An ASCII STL data must begin with `solid` as the first six bytes.
 * However, ASCII STLs lacking the SPACE after the `d` are known to be
 * plentiful. So, check the first 5 bytes for `solid`.
 *
 * Several encodings, such as UTF-8, precede the text with up to 5 bytes:
 * https://en.wikipedia.org/wiki/Byte_order_mark#Byte_order_marks_by_encoding
 * Search for `solid` to start anywhere after those prefixes.
 */function c(t){for(var r=new DataView(t),n=[115,111,108,105,100],o=0;o<5;o++)// If "solid" text is matched to the current offset, declare it to be an ASCII STL.
if(u(n,r,o))return!1;// Couldn't find "solid" text at the beginning; it is binary STL.
return!0}/**
 * This function matches the `query` at the provided `offset`
 */function u(t,r,n){// Check if each byte in query matches the corresponding byte from the current offset
for(var o=0,a=t.length;o<a;o++)if(t[o]!==r.getUint8(n+o,!1))return!1;return!0}/**
 * This function parses the Binary STL files.
 * https://en.wikipedia.org/wiki/STL_%28file_format%29#Binary_STL
 *
 * Currently there is no support for the colors provided in STL files.
 */function p(t,r){for(var n,a,s,l,c,u,p,d=new DataView(r),m=d.getUint32(80,!0),f=!1,h=0;h<70;h++)1129270351/*COLO*/===d.getUint32(h,!1)&&82/*'R'*/===d.getUint8(h+4)&&61/*'='*/===d.getUint8(h+5)&&(f=!0,p=[],n=d.getUint8(h+6)/255,a=d.getUint8(h+7)/255,s=d.getUint8(h+8)/255);for(var y=84,g=50,v=0;v<m;v++){var b=y+v*g,x=d.getFloat32(b,!0),j=d.getFloat32(b+4,!0),w=d.getFloat32(b+8,!0);if(f){var _=d.getUint16(b+48,!0);(32768&_)==0?(// facet has its own unique color
l=(31&_)/31,c=(_>>5&31)/31,u=(_>>10&31)/31):(l=n,c=a,u=s)}for(var S=new o.default.Vector(x,j,w),E=1;E<=3;E++){var T=b+12*E,M=new o.default.Vector(d.getFloat32(T,!0),d.getFloat32(T+4,!0),d.getFloat32(T+8,!0));t.vertices.push(M),t.vertexNormals.push(S),f&&p.push(l,c,u)}t.faces.push([3*v,3*v+1,3*v+2]),t.uvs.push([0,0],[0,0],[0,0])}return t}/**
 * ASCII STL file starts with `solid 'nameOfFile'`
 * Then contain the normal of the face, starting with `facet normal`
 * Next contain a keyword indicating the start of face vertex, `outer loop`
 * Next comes the three vertex, starting with `vertex x y z`
 * Vertices ends with `endloop`
 * Face ends with `endfacet`
 * Next face starts with `facet normal`
 * The end of the file is indicated by `endsolid`
 */function d(t,r){for(var n,a,s="",l=[],c=0;c<r.length;++c){for(var u=r[c].trim(),p=u.split(" "),d=0;d<p.length;++d)""===p[d]&&p.splice(d,1);if(0!==p.length)switch(s){case"":// First run
if("solid"!==p[0]){// Invalid state
console.error(u),console.error('Invalid state "'.concat(p[0],'", should be "solid"'));return}s="solid";break;case"solid":// First face
if("facet"!==p[0]||"normal"!==p[1]){// Invalid state
console.error(u),console.error('Invalid state "'.concat(p[0],'", should be "facet normal"'));return}// Push normal for first face
n=new o.default.Vector(parseFloat(p[2]),parseFloat(p[3]),parseFloat(p[4])),t.vertexNormals.push(n,n,n),s="facet normal";break;case"facet normal":// After normal is defined
if("outer"!==p[0]||"loop"!==p[1]){// Invalid State
console.error(u),console.error('Invalid state "'.concat(p[0],'", should be "outer loop"'));return}s="vertex";break;case"vertex":if("vertex"===p[0])//Vertex of triangle
a=new o.default.Vector(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3])),t.vertices.push(a),t.uvs.push([0,0]),l.push(t.vertices.indexOf(a));else if("endloop"===p[0])// End of vertices
t.faces.push(l),l=[],s="endloop";else{// Invalid State
console.error(u),console.error('Invalid state "'.concat(p[0],'", should be "vertex" or "endloop"'));return}break;case"endloop":if("endfacet"!==p[0]){// End of face
console.error(u),console.error('Invalid state "'.concat(p[0],'", should be "endfacet"'));return}s="endfacet";break;case"endfacet":if("endsolid"===p[0]);else if("facet"===p[0]&&"normal"===p[1])// Next face
n=new o.default.Vector(parseFloat(p[2]),parseFloat(p[3]),parseFloat(p[4])),t.vertexNormals.push(n,n,n),s="facet normal";else{// Invalid State
console.error(u),console.error('Invalid state "'.concat(p[0],'", should be "endsolid" or "facet normal"'));return}break;default:console.error('Invalid state "'.concat(s,'"'))}}return t}/**
 * Render a 3d model to the screen.
 *
 * @method model
 * @param  {p5.Geometry} model Loaded 3d model to be rendered
 * @example
 * <div>
 * <code>
 * //draw a spinning octahedron
 * let octahedron;
 *
 * function preload() {
 *   octahedron = loadModel('assets/octahedron.obj');
 * }
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('Vertically rotating 3-d octahedron.');
 * }
 *
 * function draw() {
 *   background(200);
 *   rotateX(frameCount * 0.01);
 *   rotateY(frameCount * 0.01);
 *   model(octahedron);
 * }
 * </code>
 * </div>
 *
 * @alt
 * Vertically rotating 3-d octahedron.
 */t("./p5.Geometry"),/**
 * Load a 3d model from an OBJ or STL file.
 *
 * <a href="#/p5/loadModel">loadModel()</a> should be placed inside of <a href="#/p5/preload">preload()</a>.
 * This allows the model to load fully before the rest of your code is run.
 *
 * One of the limitations of the OBJ and STL format is that it doesn't have a built-in
 * sense of scale. This means that models exported from different programs might
 * be very different sizes. If your model isn't displaying, try calling
 * <a href="#/p5/loadModel">loadModel()</a> with the normalized parameter set to true. This will resize the
 * model to a scale appropriate for p5. You can also make additional changes to
 * the final size of your model with the <a href="#/p5/scale">scale()</a> function.
 *
 * Also, the support for colored STL files is not present. STL files with color will be
 * rendered without color properties.
 *
 * @method loadModel
 * @param  {String} path              Path of the model to be loaded
 * @param  {Boolean} normalize        If true, scale the model to a
 *                                      standardized size when loading
 * @param  {function(p5.Geometry)} [successCallback] Function to be called
 *                                     once the model is loaded. Will be passed
 *                                     the 3D model object.
 * @param  {function(Event)} [failureCallback] called with event error if
 *                                         the model fails to load.
 * @param  {String} [fileType]          The file extension of the model
 *                                      (<code>.stl</code>, <code>.obj</code>).
 * @return {p5.Geometry} the <a href="#/p5.Geometry">p5.Geometry</a> object
 *
 * @example
 * <div>
 * <code>
 * //draw a spinning octahedron
 * let octahedron;
 *
 * function preload() {
 *   octahedron = loadModel('assets/octahedron.obj');
 * }
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('Vertically rotating 3-d octahedron.');
 * }
 *
 * function draw() {
 *   background(200);
 *   rotateX(frameCount * 0.01);
 *   rotateY(frameCount * 0.01);
 *   model(octahedron);
 * }
 * </code>
 * </div>
 *
 * @alt
 * Vertically rotating 3-d octahedron.
 *
 * @example
 * <div>
 * <code>
 * //draw a spinning teapot
 * let teapot;
 *
 * function preload() {
 *   // Load model with normalise parameter set to true
 *   teapot = loadModel('assets/teapot.obj', true);
 * }
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('Vertically rotating 3-d teapot with red, green and blue gradient.');
 * }
 *
 * function draw() {
 *   background(200);
 *   scale(0.4); // Scaled to make model fit into canvas
 *   rotateX(frameCount * 0.01);
 *   rotateY(frameCount * 0.01);
 *   normalMaterial(); // For effect
 *   model(teapot);
 * }
 * </code>
 * </div>
 *
 * @alt
 * Vertically rotating 3-d teapot with red, green and blue gradient.
 *//**
 * @method loadModel
 * @param  {String} path
 * @param  {function(p5.Geometry)} [successCallback]
 * @param  {function(Event)} [failureCallback]
 * @param  {String} [fileType]
 * @return {p5.Geometry} the <a href="#/p5.Geometry">p5.Geometry</a> object
 */o.default.prototype.loadModel=function(t){o.default._validateParameters("loadModel",arguments);var r,n,a,c=t.slice(-4);"boolean"==typeof arguments[1]?(r=arguments[1],n=arguments[2],a=arguments[3],void 0!==arguments[4]&&(c=arguments[4])):(r=!1,n=arguments[1],a=arguments[2],void 0!==arguments[3]&&(c=arguments[3]));var u=new o.default.Geometry;u.gid="".concat(t,"|").concat(r);var p=this;return c.match(/\.stl$/i)?this.httpDo(t,"GET","arrayBuffer",function(t){l(u,t),r&&u.normalize(),p._decrementPreload(),"function"==typeof n&&n(u)},a):c.match(/\.obj$/i)?this.loadStrings(t,function(t){s(u,t),r&&u.normalize(),p._decrementPreload(),"function"==typeof n&&n(u)},a):(o.default._friendlyFileLoadError(3,t),a?a():o.default._friendlyError("Sorry, the file type is invalid. Only OBJ and STL files are supported.")),u},o.default.prototype.model=function(t){this._assert3d("model"),o.default._validateParameters("model",arguments),t.vertices.length>0&&(this._renderer.geometryInHash(t.gid)||(0===t.edges.length&&t._makeTriangleEdges(),t._edgesToVertices(),this._renderer.createBuffers(t.gid,t)),this._renderer.drawBuffers(t.gid))};var m=o.default;n.default=m},{"../core/main":296,"./p5.Geometry":346,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.index-of":177,"core-js/modules/es.array.slice":182,"core-js/modules/es.array.splice":184,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.string.match":209,"core-js/modules/es.string.split":214,"core-js/modules/es.string.trim":217}],343:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.join"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=p(t("../core/main")),l=u(t("../core/constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}/**
 * @module 3D
 * @submodule Material
 * @for p5
 * @requires core
 */t("./p5.Texture"),/**
 * Creates a new <a href="#/p5.Shader">p5.Shader</a> object
 * from the provided vertex and fragment shader files.
 *
 * The shader files are loaded asynchronously in the
 * background, so this method should be used in <a href="#/p5/preload">preload()</a>.
 *
 * Note, shaders can only be used in WEBGL mode.
 *
 * @method loadShader
 * @param {String} vertFilename path to file containing vertex shader
 * source code
 * @param {String} fragFilename path to file containing fragment shader
 * source code
 * @param {function} [callback] callback to be executed after loadShader
 * completes. On success, the p5.Shader object is passed as the first argument.
 * @param {function} [errorCallback] callback to be executed when an error
 * occurs inside loadShader. On error, the error is passed as the first
 * argument.
 * @return {p5.Shader} a shader object created from the provided
 * vertex and fragment shader files.
 *
 * @example
 * <div modernizr='webgl'>
 * <code>
 * let mandel;
 * function preload() {
 *   // load the shader definitions from files
 *   mandel = loadShader('assets/shader.vert', 'assets/shader.frag');
 * }
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   // use the shader
 *   shader(mandel);
 *   noStroke();
 *   mandel.setUniform('p', [-0.74364388703, 0.13182590421]);
 *   describe('zooming Mandelbrot set. a colorful, infinitely detailed fractal.');
 * }
 *
 * function draw() {
 *   mandel.setUniform('r', 1.5 * exp(-6.5 * (1 + sin(millis() / 2000))));
 *   quad(-1, -1, 1, -1, 1, 1, -1, 1);
 * }
 * </code>
 * </div>
 *
 * @alt
 * zooming Mandelbrot set. a colorful, infinitely detailed fractal.
 */s.default.prototype.loadShader=function(t,r,n,o){s.default._validateParameters("loadShader",arguments),o||(o=console.error);var a=new s.default.Shader,l=this,c=!1,u=!1,p=function(){l._decrementPreload(),n&&n(a)};return this.loadStrings(t,function(t){a._vertSrc=t.join("\n"),u=!0,c&&p()},o),this.loadStrings(r,function(t){a._fragSrc=t.join("\n"),c=!0,u&&p()},o),a},/**
 * Creates a new <a href="#/p5.Shader">p5.Shader</a> object
 * from the provided vertex and fragment shader code.
 *
 * Note, shaders can only be used in WEBGL mode.
 *
 * @method createShader
 * @param {String} vertSrc source code for the vertex shader
 * @param {String} fragSrc source code for the fragment shader
 * @returns {p5.Shader} a shader object created from the provided
 * vertex and fragment shaders.
 *
 * @example
 * <div modernizr='webgl'>
 * <code>
 * // the 'varying's are shared between both vertex & fragment shaders
 * let varying = 'precision highp float; varying vec2 vPos;';
 *
 * // the vertex shader is called for each vertex
 * let vs =
 *   varying +
 *   'attribute vec3 aPosition;' +
 *   'void main() { vPos = (gl_Position = vec4(aPosition,1.0)).xy; }';
 *
 * // the fragment shader is called for each pixel
 * let fs =
 *   varying +
 *   'uniform vec2 p;' +
 *   'uniform float r;' +
 *   'const int I = 500;' +
 *   'void main() {' +
 *   '  vec2 c = p + vPos * r, z = c;' +
 *   '  float n = 0.0;' +
 *   '  for (int i = I; i > 0; i --) {' +
 *   '    if(z.x*z.x+z.y*z.y > 4.0) {' +
 *   '      n = float(i)/float(I);' +
 *   '      break;' +
 *   '    }' +
 *   '    z = vec2(z.x*z.x-z.y*z.y, 2.0*z.x*z.y) + c;' +
 *   '  }' +
 *   '  gl_FragColor = vec4(0.5-cos(n*17.0)/2.0,0.5-cos(n*13.0)/2.0,0.5-cos(n*23.0)/2.0,1.0);' +
 *   '}';
 *
 * let mandel;
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *
 *   // create and initialize the shader
 *   mandel = createShader(vs, fs);
 *   shader(mandel);
 *   noStroke();
 *
 *   // 'p' is the center point of the Mandelbrot image
 *   mandel.setUniform('p', [-0.74364388703, 0.13182590421]);
 *   describe('zooming Mandelbrot set. a colorful, infinitely detailed fractal.');
 * }
 *
 * function draw() {
 *   // 'r' is the size of the image in Mandelbrot-space
 *   mandel.setUniform('r', 1.5 * exp(-6.5 * (1 + sin(millis() / 2000))));
 *   quad(-1, -1, 1, -1, 1, 1, -1, 1);
 * }
 * </code>
 * </div>
 *
 * @alt
 * zooming Mandelbrot set. a colorful, infinitely detailed fractal.
 */s.default.prototype.createShader=function(t,r){return this._assert3d("createShader"),s.default._validateParameters("createShader",arguments),new s.default.Shader(this._renderer,t,r)},/**
 * Sets the <a href="#/p5.Shader">p5.Shader</a> object to
 * be used to render subsequent shapes.
 *
 * Custom shaders can be created using the
 * <a href="#/p5/createShader">createShader()</a> and
 * <a href="#/p5/loadShader">loadShader()</a> functions.
 *
 * Use <a href="#/p5/resetShader">resetShader()</a> to
 * restore the default shaders.
 *
 * Note, shaders can only be used in WEBGL mode.
 *
 * @method shader
 * @chainable
 * @param {p5.Shader} s the <a href="#/p5.Shader">p5.Shader</a> object
 * to use for rendering shapes.
 *
 * @example
 * <div modernizr='webgl'>
 * <code>
 * // Click within the image to toggle
 * // the shader used by the quad shape
 * // Note: for an alternative approach to the same example,
 * // involving changing uniforms please refer to:
 * // https://p5js.org/reference/#/p5.Shader/setUniform
 *
 * let redGreen;
 * let orangeBlue;
 * let showRedGreen = false;
 *
 * function preload() {
 *   // note that we are using two instances
 *   // of the same vertex and fragment shaders
 *   redGreen = loadShader('assets/shader.vert', 'assets/shader-gradient.frag');
 *   orangeBlue = loadShader('assets/shader.vert', 'assets/shader-gradient.frag');
 * }
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *
 *   // initialize the colors for redGreen shader
 *   shader(redGreen);
 *   redGreen.setUniform('colorCenter', [1.0, 0.0, 0.0]);
 *   redGreen.setUniform('colorBackground', [0.0, 1.0, 0.0]);
 *
 *   // initialize the colors for orangeBlue shader
 *   shader(orangeBlue);
 *   orangeBlue.setUniform('colorCenter', [1.0, 0.5, 0.0]);
 *   orangeBlue.setUniform('colorBackground', [0.226, 0.0, 0.615]);
 *
 *   noStroke();
 *
 *   describe(
 *     'canvas toggles between a circular gradient of orange and blue vertically. and a circular gradient of red and green moving horizontally when mouse is clicked/pressed.'
 *   );
 * }
 *
 * function draw() {
 *   // update the offset values for each shader,
 *   // moving orangeBlue in vertical and redGreen
 *   // in horizontal direction
 *   orangeBlue.setUniform('offset', [0, sin(millis() / 2000) + 1]);
 *   redGreen.setUniform('offset', [sin(millis() / 2000), 1]);
 *
 *   if (showRedGreen === true) {
 *     shader(redGreen);
 *   } else {
 *     shader(orangeBlue);
 *   }
 *   quad(-1, -1, 1, -1, 1, 1, -1, 1);
 * }
 *
 * function mouseClicked() {
 *   showRedGreen = !showRedGreen;
 * }
 * </code>
 * </div>
 *
 * @alt
 * canvas toggles between a circular gradient of orange and blue vertically. and a circular gradient of red and green moving horizontally when mouse is clicked/pressed.
 */s.default.prototype.shader=function(t){return this._assert3d("shader"),s.default._validateParameters("shader",arguments),void 0===t._renderer&&(t._renderer=this._renderer),t.init(),t.isStrokeShader()?this._renderer.userStrokeShader=t:(this._renderer.userFillShader=t,this._renderer._useNormalMaterial=!1),this},/**
 * Restores the default shaders. Code that runs after resetShader()
 * will not be affected by the shader previously set by
 * <a href="#/p5/shader">shader()</a>
 *
 * @method resetShader
 * @chainable
 * @example
 * <div>
 * <code>
 * // This variable will hold our shader object
 * let shaderProgram;
 *
 * // This variable will hold our vertex shader source code
 * let vertSrc = `
 *    attribute vec3 aPosition;
 *    attribute vec2 aTexCoord;
 *    uniform mat4 uProjectionMatrix;
 *    uniform mat4 uModelViewMatrix;
 *    varying vec2 vTexCoord;
 *
 *    void main() {
 *      vTexCoord = aTexCoord;
 *      vec4 position = vec4(aPosition, 1.0);
 *      gl_Position = uProjectionMatrix * uModelViewMatrix * position;
 *    }
 * `;
 *
 * // This variable will hold our fragment shader source code
 * let fragSrc = `
 *    precision mediump float;
 *
 *    varying vec2 vTexCoord;
 *
 *    void main() {
 *      vec2 uv = vTexCoord;
 *      vec3 color = vec3(uv.x, uv.y, min(uv.x + uv.y, 1.0));
 *      gl_FragColor = vec4(color, 1.0);
 *    }
 * `;
 *
 * function setup() {
 *   // Shaders require WEBGL mode to work
 *   createCanvas(100, 100, WEBGL);
 *
 *   // Create our shader
 *   shaderProgram = createShader(vertSrc, fragSrc);
 *
 *   describe(
 *     'Two rotating cubes. The left one is painted using a custom (user-defined) shader, while the right one is painted using the default fill shader.'
 *   );
 * }
 *
 * function draw() {
 *   // Clear the scene
 *   background(200);
 *
 *   // Draw a box using our shader
 *   // shader() sets the active shader with our shader
 *   shader(shaderProgram);
 *   push();
 *   translate(-width / 4, 0, 0);
 *   rotateX(millis() * 0.00025);
 *   rotateY(millis() * 0.0005);
 *   box(width / 4);
 *   pop();
 *
 *   // Draw a box using the default fill shader
 *   // resetShader() restores the default fill shader
 *   resetShader();
 *   fill(255, 0, 0);
 *   push();
 *   translate(width / 4, 0, 0);
 *   rotateX(millis() * 0.00025);
 *   rotateY(millis() * 0.0005);
 *   box(width / 4);
 *   pop();
 * }
 * </code>
 * </div>
 * @alt
 * Two rotating cubes. The left one is painted using a custom (user-defined) shader,
 * while the right one is painted using the default fill shader.
 */s.default.prototype.resetShader=function(){return this._renderer.userFillShader=this._renderer.userStrokeShader=null,this},/**
 * Sets the texture that will be used to render subsequent shapes.
 *
 * A texture is like a "skin" that wraps around a 3D geometry. Currently
 * supported textures are images, video, and offscreen renders.
 *
 * To texture a geometry created with <a href="#/p5/beginShape">beginShape()</a>,
 * you will need to specify uv coordinates in <a href="#/p5/vertex">vertex()</a>.
 *
 * Note, texture() can only be used in WEBGL mode.
 *
 * You can view more materials in this
 * <a href="https://p5js.org/examples/3d-materials.html">example</a>.
 *
 * @method texture
 * @param {p5.Image|p5.MediaElement|p5.Graphics|p5.Texture|p5.Framebuffer|p5.FramebufferTexture} tex  image to use as texture
 * @chainable
 * @example
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/laDefense.jpg');
 * }
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('spinning cube with a texture from an image');
 * }
 *
 * function draw() {
 *   background(0);
 *   rotateZ(frameCount * 0.01);
 *   rotateX(frameCount * 0.01);
 *   rotateY(frameCount * 0.01);
 *   //pass image as texture
 *   texture(img);
 *   box(width / 2);
 * }
 * </code>
 * </div>
 * @alt
 * spinning cube with a texture from an image
 *
 * @example
 * <div>
 * <code>
 * let pg;
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   pg = createGraphics(200, 200);
 *   pg.textSize(75);
 *   describe('plane with a texture from an image created by createGraphics()');
 * }
 *
 * function draw() {
 *   background(0);
 *   pg.background(255);
 *   pg.text('hello!', 0, 100);
 *   //pass image as texture
 *   texture(pg);
 *   rotateX(0.5);
 *   noStroke();
 *   plane(50);
 * }
 * </code>
 * </div>
 * @alt
 * plane with a texture from an image created by createGraphics()
 *
 * @example
 * <div>
 * <code>
 * let vid;
 * function preload() {
 *   vid = createVideo('assets/fingers.mov');
 *   vid.hide();
 * }
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('rectangle with video as texture');
 * }
 *
 * function draw() {
 *   background(0);
 *   //pass video frame as texture
 *   texture(vid);
 *   rect(-40, -40, 80, 80);
 * }
 *
 * function mousePressed() {
 *   vid.loop();
 * }
 * </code>
 * </div>
 *
 * @alt
 * rectangle with video as texture
 *
 * @example
 * <div>
 * <code>
 * let img;
 *
 * function preload() {
 *   img = loadImage('assets/laDefense.jpg');
 * }
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('quad with a texture, mapped using normalized coordinates');
 * }
 *
 * function draw() {
 *   background(0);
 *   texture(img);
 *   textureMode(NORMAL);
 *   beginShape();
 *   vertex(-40, -40, 0, 0);
 *   vertex(40, -40, 1, 0);
 *   vertex(40, 40, 1, 1);
 *   vertex(-40, 40, 0, 1);
 *   endShape();
 * }
 * </code>
 * </div>
 * @alt
 * quad with a texture, mapped using normalized coordinates
 */s.default.prototype.texture=function(t){return this._assert3d("texture"),s.default._validateParameters("texture",arguments),t.gifProperties&&t._animateGif(this),this._renderer.drawMode=l.TEXTURE,this._renderer._useNormalMaterial=!1,this._renderer._tex=t,this._renderer._setProperty("_doFill",!0),this},/**
 * Sets the coordinate space for texture mapping. The default mode is IMAGE
 * which refers to the actual coordinates of the image.
 * NORMAL refers to a normalized space of values ranging from 0 to 1.
 *
 * With IMAGE, if an image is 100×200 pixels, mapping the image onto the entire
 * size of a quad would require the points (0,0) (100, 0) (100,200) (0,200).
 * The same mapping in NORMAL is (0,0) (1,0) (1,1) (0,1).
 * @method  textureMode
 * @param {Constant} mode either IMAGE or NORMAL
 * @example
 * <div>
 * <code>
 * let img;
 *
 * function preload() {
 *   img = loadImage('assets/laDefense.jpg');
 * }
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('quad with a texture, mapped using normalized coordinates');
 * }
 *
 * function draw() {
 *   texture(img);
 *   textureMode(NORMAL);
 *   beginShape();
 *   vertex(-50, -50, 0, 0);
 *   vertex(50, -50, 1, 0);
 *   vertex(50, 50, 1, 1);
 *   vertex(-50, 50, 0, 1);
 *   endShape();
 * }
 * </code>
 * </div>
 * @alt
 * quad with a texture, mapped using normalized coordinates
 *
 * @example
 * <div>
 * <code>
 * let img;
 *
 * function preload() {
 *   img = loadImage('assets/laDefense.jpg');
 * }
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('quad with a texture, mapped using image coordinates');
 * }
 *
 * function draw() {
 *   texture(img);
 *   textureMode(IMAGE);
 *   beginShape();
 *   vertex(-50, -50, 0, 0);
 *   vertex(50, -50, img.width, 0);
 *   vertex(50, 50, img.width, img.height);
 *   vertex(-50, 50, 0, img.height);
 *   endShape();
 * }
 * </code>
 * </div>
 * @alt
 * quad with a texture, mapped using image coordinates
 */s.default.prototype.textureMode=function(t){t!==l.IMAGE&&t!==l.NORMAL?console.warn("You tried to set ".concat(t," textureMode only supports IMAGE & NORMAL ")):this._renderer.textureMode=t},/**
 * Sets the global texture wrapping mode. This controls how textures behave
 * when their uv's go outside of the 0 to 1 range. There are three options:
 * CLAMP, REPEAT, and MIRROR.
 *
 * CLAMP causes the pixels at the edge of the texture to extend to the bounds.
 * REPEAT causes the texture to tile repeatedly until reaching the bounds.
 * MIRROR works similarly to REPEAT but it flips the texture with every new tile.
 *
 * REPEAT & MIRROR are only available if the texture
 * is a power of two size (128, 256, 512, 1024, etc.).
 *
 * This method will affect all textures in your sketch until a subsequent
 * textureWrap() call is made.
 *
 * If only one argument is provided, it will be applied to both the
 * horizontal and vertical axes.
 * @method textureWrap
 * @param {Constant} wrapX either CLAMP, REPEAT, or MIRROR
 * @param {Constant} [wrapY] either CLAMP, REPEAT, or MIRROR
 * @example
 * <div>
 * <code>
 * let img;
 * function preload() {
 *   img = loadImage('assets/rockies128.jpg');
 * }
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   textureWrap(MIRROR);
 *   describe('an image of the rocky mountains repeated in mirrored tiles');
 * }
 *
 * function draw() {
 *   background(0);
 *
 *   let dX = mouseX;
 *   let dY = mouseY;
 *
 *   let u = lerp(1.0, 2.0, dX);
 *   let v = lerp(1.0, 2.0, dY);
 *
 *   scale(width / 2);
 *
 *   texture(img);
 *
 *   beginShape(TRIANGLES);
 *   vertex(-1, -1, 0, 0, 0);
 *   vertex(1, -1, 0, u, 0);
 *   vertex(1, 1, 0, u, v);
 *
 *   vertex(1, 1, 0, u, v);
 *   vertex(-1, 1, 0, 0, v);
 *   vertex(-1, -1, 0, 0, 0);
 *   endShape();
 * }
 * </code>
 * </div>
 *
 * @alt
 * an image of the rocky mountains repeated in mirrored tiles
 */s.default.prototype.textureWrap=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t;this._renderer.textureWrapX=t,this._renderer.textureWrapY=r;var n=!0,o=!1,a=void 0;try{for(var s,l=this._renderer.textures.values()[Symbol.iterator]();!(n=(s=l.next()).done);n=!0)s.value.setWrapMode(t,r)}catch(t){o=!0,a=t}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}},/**
 * Sets the current material as a normal material.
 *
 * A normal material is not affected by light. It is often used as
 * a placeholder material when debugging.
 *
 * Surfaces facing the X-axis become red, those facing the Y-axis
 * become green, and those facing the Z-axis become blue.
 *
 * You can view more materials in this
 * <a href="https://p5js.org/examples/3d-materials.html">example</a>.
 *
 * @method normalMaterial
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('Sphere with normal material');
 * }
 *
 * function draw() {
 *   background(200);
 *   normalMaterial();
 *   sphere(40);
 * }
 * </code>
 * </div>
 * @alt
 * Sphere with normal material
 */s.default.prototype.normalMaterial=function(){this._assert3d("normalMaterial");for(var t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return s.default._validateParameters("normalMaterial",r),this._renderer.drawMode=l.FILL,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!0,this._renderer.curFillColor=[1,1,1,1],this._renderer._setProperty("_doFill",!0),this.noStroke(),this},/**
 * Sets the ambient color of the material.
 *
 * The ambientMaterial() color represents the components
 * of the **ambientLight()** color that the object reflects.
 *
 * Consider an ambientMaterial() with the color yellow (255, 255, 0).
 * If the ambientLight() emits the color white (255, 255, 255), then the object
 * will appear yellow as it will reflect the red and green components
 * of the light. If the ambientLight() emits the color red (255, 0, 0), then
 * the object will appear red as it will reflect the red component
 * of the light. If the ambientLight() emits the color blue (0, 0, 255),
 * then the object will appear black, as there is no component of
 * the light that it can reflect.
 *
 * You can view more materials in this
 * <a href="https://p5js.org/examples/3d-materials.html">example</a>.
 *
 * @method ambientMaterial
 * @param  {Number} v1  red or hue value relative to the current
 *                       color range
 * @param  {Number} v2  green or saturation value relative to the
 *                       current color range
 * @param  {Number} v3  blue or brightness value relative to the
 *                       current color range
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('sphere reflecting red, blue, and green light');
 * }
 * function draw() {
 *   background(0);
 *   noStroke();
 *   ambientLight(255);
 *   ambientMaterial(70, 130, 230);
 *   sphere(40);
 * }
 * </code>
 * </div>
 * @alt
 * sphere reflecting red, blue, and green light
 *
 * @example
 * <div>
 * <code>
 * // ambientLight is both red and blue (magenta),
 * // so object only reflects it's red and blue components
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('box reflecting only red and blue light');
 * }
 * function draw() {
 *   background(70);
 *   ambientLight(255, 0, 255); // magenta light
 *   ambientMaterial(255); // white material
 *   box(30);
 * }
 * </code>
 * </div>
 * @alt
 * box reflecting only red and blue light
 *
 * @example
 * <div>
 * <code>
 * // ambientLight is green. Since object does not contain
 * // green, it does not reflect any light
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('box reflecting no light');
 * }
 * function draw() {
 *   background(70);
 *   ambientLight(0, 255, 0); // green light
 *   ambientMaterial(255, 0, 255); // magenta material
 *   box(30);
 * }
 * </code>
 * </div>
 * @alt
 * box reflecting no light
 *//**
 * @method ambientMaterial
 * @param  {Number} gray  number specifying value between
 *                         white and black
 * @chainable
 *//**
 * @method ambientMaterial
 * @param  {p5.Color|Number[]|String} color
 *           color as a <a href="#/p5.Color">p5.Color</a>,
 *            as an array, or as a CSS string
 * @chainable
 */s.default.prototype.ambientMaterial=function(t,r,n){this._assert3d("ambientMaterial"),s.default._validateParameters("ambientMaterial",arguments);var o=s.default.prototype.color.apply(this,arguments);return this._renderer._hasSetAmbient=!0,this._renderer.curAmbientColor=o._array,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this._renderer._setProperty("_doFill",!0),this},/**
 * Sets the emissive color of the material.
 *
 * An emissive material will display the emissive color at
 * full strength regardless of lighting. This can give the
 * appearance that the object is glowing.
 *
 * Note, "emissive" is a misnomer in the sense that the material
 * does not actually emit light that will affect surrounding objects.
 *
 * You can view more materials in this
 * <a href="https://p5js.org/examples/3d-materials.html">example</a>.
 *
 * @method emissiveMaterial
 * @param  {Number} v1       red or hue value relative to the current
 *                            color range
 * @param  {Number} v2       green or saturation value relative to the
 *                            current color range
 * @param  {Number} v3       blue or brightness value relative to the
 *                            current color range
 * @param  {Number} [alpha]  alpha value relative to current color
 *                            range (default is 0-255)
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('sphere with green emissive material');
 * }
 * function draw() {
 *   background(0);
 *   noStroke();
 *   ambientLight(0);
 *   emissiveMaterial(130, 230, 0);
 *   sphere(40);
 * }
 * </code>
 * </div>
 *
 * @alt
 * sphere with green emissive material
 *//**
 * @method emissiveMaterial
 * @param  {Number} gray  number specifying value between
 *                         white and black
 * @chainable
 *//**
 * @method emissiveMaterial
 * @param  {p5.Color|Number[]|String} color
 *           color as a <a href="#/p5.Color">p5.Color</a>,
 *            as an array, or as a CSS string
 * @chainable
 */s.default.prototype.emissiveMaterial=function(t,r,n,o){this._assert3d("emissiveMaterial"),s.default._validateParameters("emissiveMaterial",arguments);var a=s.default.prototype.color.apply(this,arguments);return this._renderer.curEmissiveColor=a._array,this._renderer._useEmissiveMaterial=!0,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this},/**
 * Sets the specular color of the material.
 *
 * A specular material is reflective (shiny). The shininess can be
 * controlled by the <a href="#/p5/shininess">shininess()</a> function.
 *
 * Like <a href="#/p5/ambientMaterial">ambientMaterial()</a>,
 * the specularMaterial() color is the color the object will reflect
 * under <a href="#/p5/ambientLight">ambientLight()</a>.
 * However unlike ambientMaterial(), for all other types of lights
 * (<a href="#/p5/directionalLight">directionalLight()</a>,
 * <a href="#/p5/pointLight">pointLight()</a>,
 * <a href="#/p5/spotLight">spotLight()</a>),
 * a specular material will reflect the **color of the light source**.
 * This is what gives it its "shiny" appearance.
 *
 * You can view more materials in this
 * <a href="https://p5js.org/examples/3d-materials.html">example</a>.
 *
 * @method specularMaterial
 * @param  {Number} gray number specifying value between white and black.
 * @param  {Number} [alpha] alpha value relative to current color range
 *                                 (default is 0-255)
 * @chainable
 *
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   noStroke();
 *   describe('torus with specular material');
 * }
 *
 * function draw() {
 *   background(0);
 *
 *   ambientLight(60);
 *
 *   // add point light to showcase specular material
 *   let locX = mouseX - width / 2;
 *   let locY = mouseY - height / 2;
 *   pointLight(255, 255, 255, locX, locY, 50);
 *
 *   specularMaterial(250);
 *   shininess(50);
 *   torus(30, 10, 64, 64);
 * }
 * </code>
 * </div>
 * @alt
 * torus with specular material
 *//**
 * @method specularMaterial
 * @param  {Number}        v1      red or hue value relative to
 *                                 the current color range
 * @param  {Number}        v2      green or saturation value
 *                                 relative to the current color range
 * @param  {Number}        v3      blue or brightness value
 *                                 relative to the current color range
 * @param  {Number}        [alpha]
 * @chainable
 *//**
 * @method specularMaterial
 * @param  {p5.Color|Number[]|String} color
 *           color as a <a href="#/p5.Color">p5.Color</a>,
 *            as an array, or as a CSS string
 * @chainable
 */s.default.prototype.specularMaterial=function(t,r,n,o){this._assert3d("specularMaterial"),s.default._validateParameters("specularMaterial",arguments);var a=s.default.prototype.color.apply(this,arguments);return this._renderer.curSpecularColor=a._array,this._renderer._useSpecularMaterial=!0,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this},/**
 * Sets the amount of gloss ("shininess") of a
 * <a href="#/p5/specularMaterial">specularMaterial()</a>.
 *
 * The default and minimum value is 1.
 *
 * @method shininess
 * @param {Number} shine  degree of shininess
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('two spheres, one more shiny than the other');
 * }
 * function draw() {
 *   background(0);
 *   noStroke();
 *   let locX = mouseX - width / 2;
 *   let locY = mouseY - height / 2;
 *   ambientLight(60, 60, 60);
 *   pointLight(255, 255, 255, locX, locY, 50);
 *   specularMaterial(250);
 *   translate(-25, 0, 0);
 *   shininess(1);
 *   sphere(20);
 *   translate(50, 0, 0);
 *   shininess(20);
 *   sphere(20);
 * }
 * </code>
 * </div>
 * @alt
 * two spheres, one more shiny than the other
 */s.default.prototype.shininess=function(t){return this._assert3d("shininess"),s.default._validateParameters("shininess",arguments),t<1&&(t=1),this._renderer._useShininess=t,this},/**
 * @private blends colors according to color components.
 * If alpha value is less than 1, or non-standard blendMode
 * we need to enable blending on our gl context.
 * @param  {Number[]} color [description]
 * @return {Number[]]}  Normalized numbers array
 */s.default.RendererGL.prototype._applyColorBlend=function(t){var r=this.GL,n=this.drawMode===l.TEXTURE,o=this.userFillShader||this.userStrokeShader||this.userPointShader||n||this.curBlendMode!==l.BLEND||t[t.length-1]<1||this._isErasing;return o!==this._isBlending&&(o||this.curBlendMode!==l.BLEND&&this.curBlendMode!==l.ADD?r.enable(r.BLEND):r.disable(r.BLEND),r.depthMask(!0),this._isBlending=o),this._applyBlendMode(),t},/**
 * @private sets blending in gl context to curBlendMode
 * @param  {Number[]} color [description]
 * @return {Number[]]}  Normalized numbers array
 */s.default.RendererGL.prototype._applyBlendMode=function(){if(this._cachedBlendMode!==this.curBlendMode){var t=this.GL;switch(this.curBlendMode){case l.BLEND:t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case l.ADD:t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ONE);break;case l.REMOVE:t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_ALPHA);break;case l.MULTIPLY:t.blendEquation(t.FUNC_ADD),t.blendFunc(t.DST_COLOR,t.ONE_MINUS_SRC_ALPHA);break;case l.SCREEN:t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ONE_MINUS_SRC_COLOR);break;case l.EXCLUSION:t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE_MINUS_DST_COLOR,t.ONE_MINUS_SRC_COLOR,t.ONE,t.ONE);break;case l.REPLACE:t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO);break;case l.SUBTRACT:t.blendEquationSeparate(t.FUNC_REVERSE_SUBTRACT,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case l.DARKEST:this.blendExt?(t.blendEquationSeparate(this.blendExt.MIN||this.blendExt.MIN_EXT,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE,t.ONE,t.ONE)):console.warn("blendMode(DARKEST) does not work in your browser in WEBGL mode.");break;case l.LIGHTEST:this.blendExt?(t.blendEquationSeparate(this.blendExt.MAX||this.blendExt.MAX_EXT,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE,t.ONE,t.ONE)):console.warn("blendMode(LIGHTEST) does not work in your browser in WEBGL mode.");break;default:console.error("Oops! Somehow RendererGL set curBlendMode to an unsupported mode.")}this._isErasing||(this._cachedBlendMode=this.curBlendMode)}};var d=s.default;n.default=d},{"../core/constants":284,"../core/main":296,"./p5.Texture":353,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.join":179,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],344:[function(t,r,n){t("core-js/modules/es.array.slice"),t("core-js/modules/es.math.hypot"),t("core-js/modules/es.string.sub"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.math.hypot"),t("core-js/modules/es.string.sub"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}function s(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function l(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function c(t,r,n){return r&&l(t.prototype,r),n&&l(t,n),t}////////////////////////////////////////////////////////////////////////////////
// p5.Prototype Methods
////////////////////////////////////////////////////////////////////////////////
/**
 * Sets the position of the current camera in a 3D sketch.
 * Parameters for this function define the camera's position,
 * the center of the sketch (where the camera is pointing),
 * and an up direction (the orientation of the camera).
 *
 * This function simulates the movements of the camera, allowing objects to be
 * viewed from various angles. Remember, it does not move the objects themselves
 * but the camera instead. For example when the centerX value is positive,
 * and the camera is rotating to the right side of the sketch,
 * the object will seem like it's moving to the left.
 *
 * See this <a href = "https://www.openprocessing.org/sketch/740258">example</a>
 * to view the position of your camera.
 *
 * If no parameters are given, the following default is used:
 * camera(0, 0, (height/2) / tan(PI/6), 0, 0, 0, 0, 1, 0)
 * @method camera
 * @constructor
 * @for p5
 * @param  {Number} [x]        camera position value on x axis
 * @param  {Number} [y]        camera position value on y axis
 * @param  {Number} [z]        camera position value on z axis
 * @param  {Number} [centerX]  x coordinate representing center of the sketch
 * @param  {Number} [centerY]  y coordinate representing center of the sketch
 * @param  {Number} [centerZ]  z coordinate representing center of the sketch
 * @param  {Number} [upX]      x component of direction 'up' from camera
 * @param  {Number} [upY]      y component of direction 'up' from camera
 * @param  {Number} [upZ]      z component of direction 'up' from camera
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   describe('a square moving closer and then away from the camera.');
 * }
 * function draw() {
 *   background(204);
 *   //move the camera away from the plane by a sin wave
 *   camera(0, 0, 20 + sin(frameCount * 0.01) * 10, 0, 0, 0, 0, 1, 0);
 *   plane(10, 10);
 * }
 * </code>
 * </div>
 *
 * @example
 * <div>
 * <code>
 * //move slider to see changes!
 * //sliders control the first 6 parameters of camera()
 * let sliderGroup = [];
 * let X;
 * let Y;
 * let Z;
 * let centerX;
 * let centerY;
 * let centerZ;
 * let h = 20;
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   //create sliders
 *   for (var i = 0; i < 6; i++) {
 *     if (i === 2) {
 *       sliderGroup[i] = createSlider(10, 400, 200);
 *     } else {
 *       sliderGroup[i] = createSlider(-400, 400, 0);
 *     }
 *     h = map(i, 0, 6, 5, 85);
 *     sliderGroup[i].position(10, height + h);
 *     sliderGroup[i].style('width', '80px');
 *   }
 *   describe(
 *     'White square repeatedly grows to fill canvas and then shrinks. An interactive example of a red cube with 3 sliders for moving it across x, y, z axis and 3 sliders for shifting its center.'
 *   );
 * }
 *
 * function draw() {
 *   background(60);
 *   // assigning sliders' value to each parameters
 *   X = sliderGroup[0].value();
 *   Y = sliderGroup[1].value();
 *   Z = sliderGroup[2].value();
 *   centerX = sliderGroup[3].value();
 *   centerY = sliderGroup[4].value();
 *   centerZ = sliderGroup[5].value();
 *   camera(X, Y, Z, centerX, centerY, centerZ, 0, 1, 0);
 *   stroke(255);
 *   fill(255, 102, 94);
 *   box(85);
 * }
 * </code>
 * </div>
 * @alt
 * White square repeatedly grows to fill canvas and then shrinks.
 * An interactive example of a red cube with 3 sliders for moving it across x, y,
 * z axis and 3 sliders for shifting its center.
 */o.default.prototype.camera=function(){var t;this._assert3d("camera");for(var r=arguments.length,n=Array(r),a=0;a<r;a++)n[a]=arguments[a];return o.default._validateParameters("camera",n),(t=this._renderer._curCamera).camera.apply(t,n),this},/**
 * Sets a perspective projection for the current camera in a 3D sketch.
 * This projection represents depth through foreshortening: objects
 * that are close to the camera appear their actual size while those
 * that are further away from the camera appear smaller.
 *
 * The parameters to this function define the viewing frustum
 * (the truncated pyramid within which objects are seen by the camera) through
 * vertical field of view, aspect ratio (usually width/height), and near and far
 * clipping planes.
 *
 * If no parameters are given, the following default is used:
 * perspective(PI/3, width/height, eyeZ/10, eyeZ*10),
 * where eyeZ is equal to ((height/2) / tan(PI/6)).
 * @method  perspective
 * @for p5
 * @param  {Number} [fovy]   camera frustum vertical field of view,
 *                           from bottom to top of view, in <a href="#/p5/angleMode">angleMode</a> units
 * @param  {Number} [aspect] camera frustum aspect ratio
 * @param  {Number} [near]   frustum near plane length
 * @param  {Number} [far]    frustum far plane length
 * @chainable
 * @example
 * <div>
 * <code>
 * //drag the mouse to look around!
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   perspective(PI / 3.0, width / height, 0.1, 500);
 *   describe(
 *     'two colored 3D boxes move back and forth, rotating as mouse is dragged.'
 *   );
 * }
 * function draw() {
 *   background(200);
 *   orbitControl();
 *   normalMaterial();
 *
 *   rotateX(-0.3);
 *   rotateY(-0.2);
 *   translate(0, 0, -50);
 *
 *   push();
 *   translate(-15, 0, sin(frameCount / 30) * 95);
 *   box(30);
 *   pop();
 *   push();
 *   translate(15, 0, sin(frameCount / 30 + PI) * 95);
 *   box(30);
 *   pop();
 * }
 * </code>
 * </div>
 *
 * @alt
 * two colored 3D boxes move back and forth, rotating as mouse is dragged.
 */o.default.prototype.perspective=function(){var t;this._assert3d("perspective");for(var r=arguments.length,n=Array(r),a=0;a<r;a++)n[a]=arguments[a];return o.default._validateParameters("perspective",n),(t=this._renderer._curCamera).perspective.apply(t,n),this},/**
 * Sets an orthographic projection for the current camera in a 3D sketch
 * and defines a box-shaped viewing frustum within which objects are seen.
 * In this projection, all objects with the same dimension appear the same
 * size, regardless of whether they are near or far from the camera.
 *
 * The parameters to this function specify the viewing frustum where
 * left and right are the minimum and maximum x values, top and bottom are
 * the minimum and maximum y values, and near and far are the minimum and
 * maximum z values.
 *
 * If no parameters are given, the following default is used:
 * ortho(-width/2, width/2, -height/2, height/2).
 * @method  ortho
 * @for p5
 * @param  {Number} [left]   camera frustum left plane
 * @param  {Number} [right]  camera frustum right plane
 * @param  {Number} [bottom] camera frustum bottom plane
 * @param  {Number} [top]    camera frustum top plane
 * @param  {Number} [near]   camera frustum near plane
 * @param  {Number} [far]    camera frustum far plane
 * @chainable
 * @example
 * <div>
 * <code>
 * //drag the mouse to look around!
 * //there's no vanishing point
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   ortho(-width / 2, width / 2, height / 2, -height / 2, 0, 500);
 *   describe(
 *     'two 3D boxes move back and forth along same plane, rotating as mouse is dragged.'
 *   );
 * }
 * function draw() {
 *   background(200);
 *   orbitControl();
 *   normalMaterial();
 *
 *   rotateX(0.2);
 *   rotateY(-0.2);
 *   push();
 *   translate(-15, 0, sin(frameCount / 30) * 65);
 *   box(30);
 *   pop();
 *   push();
 *   translate(15, 0, sin(frameCount / 30 + PI) * 65);
 *   box(30);
 *   pop();
 * }
 * </code>
 * </div>
 *
 * @alt
 * two 3D boxes move back and forth along same plane, rotating as mouse is dragged.
 */o.default.prototype.ortho=function(){var t;this._assert3d("ortho");for(var r=arguments.length,n=Array(r),a=0;a<r;a++)n[a]=arguments[a];return o.default._validateParameters("ortho",n),(t=this._renderer._curCamera).ortho.apply(t,n),this},/**
 * Sets the frustum of the current camera as defined by
 * the parameters.
 *
 * A frustum is a geometric form: a pyramid with its top
 * cut off. With the viewer's eye at the imaginary top of
 * the pyramid, the six planes of the frustum act as clipping
 * planes when rendering a 3D view. Thus, any form inside the
 * clipping planes is visible; anything outside
 * those planes is not visible.
 *
 * Setting the frustum changes the perspective of the scene being rendered.
 * This can be achieved more simply in many cases by using
 * <a href="https://p5js.org/reference/#/p5/perspective">perspective()</a>.
 *
 * If no parameters are given, the following default is used:
 * frustum(-width/20, width/20, height/20, -height/20, eyeZ/10, eyeZ*10),
 * where eyeZ is equal to ((height/2) / tan(PI/6)).
 * @method frustum
 * @for p5
 * @param  {Number} [left]   camera frustum left plane
 * @param  {Number} [right]  camera frustum right plane
 * @param  {Number} [bottom] camera frustum bottom plane
 * @param  {Number} [top]    camera frustum top plane
 * @param  {Number} [near]   camera frustum near plane
 * @param  {Number} [far]    camera frustum far plane
 * @chainable
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   setAttributes('antialias', true);
 *   frustum(-0.1, 0.1, -0.1, 0.1, 0.1, 200);
 *   describe(
 *     'two 3D boxes move back and forth along same plane, rotating as mouse is dragged.'
 *   );
 * }
 * function draw() {
 *   background(200);
 *   orbitControl();
 *   normalMaterial();
 *
 *   rotateY(-0.2);
 *   rotateX(-0.3);
 *   push();
 *   translate(-15, 0, sin(frameCount / 30) * 25);
 *   box(30);
 *   pop();
 *   push();
 *   translate(15, 0, sin(frameCount / 30 + PI) * 25);
 *   box(30);
 *   pop();
 * }
 * </code>
 * </div>
 *
 * @alt
 * two 3D boxes move back and forth along same plane, rotating as mouse is dragged.
 */o.default.prototype.frustum=function(){var t;this._assert3d("frustum");for(var r=arguments.length,n=Array(r),a=0;a<r;a++)n[a]=arguments[a];return o.default._validateParameters("frustum",n),(t=this._renderer._curCamera).frustum.apply(t,n),this},// p5.Camera
////////////////////////////////////////////////////////////////////////////////
/**
 * Creates a new <a href="#/p5.Camera">p5.Camera</a> object and sets it
 * as the current (active) camera.
 *
 * The new camera is initialized with a default position
 * (see <a href="#/p5.Camera/camera">camera()</a>)
 * and a default perspective projection
 * (see <a href="#/p5.Camera/perspective">perspective()</a>).
 * Its properties can be controlled with the <a href="#/p5.Camera">p5.Camera</a>
 * methods.
 *
 * Note: Every 3D sketch starts with a default camera initialized.
 * This camera can be controlled with the global methods
 * <a href="#/p5/camera">camera()</a>,
 * <a href="#/p5/perspective">perspective()</a>, <a href="#/p5/ortho">ortho()</a>,
 * and <a href="#/p5/frustum">frustum()</a> if it is the only camera
 * in the scene.
 * @method createCamera
 * @return {p5.Camera} The newly created camera object.
 * @for p5
 * @example
 * <div><code>
 * // Creates a camera object and animates it around a box.
 * let camera;
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   background(0);
 *   camera = createCamera();
 *   describe('An example that creates a camera and moves it around the box.');
 * }
 *
 * function draw() {
 *   background(0);
 *   // The camera will automatically
 *   // rotate to look at [0, 0, 0].
 *   camera.lookAt(0, 0, 0);
 *
 *   // The camera will move on the
 *   // x axis.
 *   camera.setPosition(sin(frameCount / 60) * 200, 0, 100);
 *   box(20);
 *
 *   // A 'ground' box to give the viewer
 *   // a better idea of where the camera
 *   // is looking.
 *   translate(0, 50, 0);
 *   rotateX(HALF_PI);
 *   box(150, 150, 20);
 * }
 * </code></div>
 *
 * @alt
 * An example that creates a camera and moves it around the box.
 */o.default.prototype.createCamera=function(){this._assert3d("createCamera");var t=new o.default.Camera(this._renderer);// compute default camera settings, then set a default camera
return t._computeCameraDefaultSettings(),t._setDefaultCamera(),this._renderer._curCamera=t,t},/**
 * This class describes a camera for use in p5's
 * <a href="https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5">
 * WebGL mode</a>. It contains camera position, orientation, and projection
 * information necessary for rendering a 3D scene.
 *
 * New p5.Camera objects can be made through the
 * <a href="#/p5/createCamera">createCamera()</a> function and controlled through
 * the methods described below. A camera created in this way will use a default
 * position in the scene and a default perspective projection until these
 * properties are changed through the various methods available. It is possible
 * to create multiple cameras, in which case the current camera
 * can be set through the <a href="#/p5/setCamera">setCamera()</a> method.
 *
 * Note:
 * The methods below operate in two coordinate systems: the 'world' coordinate
 * system describe positions in terms of their relationship to the origin along
 * the X, Y and Z axes whereas the camera's 'local' coordinate system
 * describes positions from the camera's point of view: left-right, up-down,
 * and forward-backward. The <a href="#/p5.Camera/move">move()</a> method,
 * for instance, moves the camera along its own axes, whereas the
 * <a href="#/p5.Camera/setPosition">setPosition()</a>
 * method sets the camera's position in world-space.
 *
 * The camera object propreties
 * <code>eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ</code>
 * which describes camera position, orientation, and projection
 * are also accessible via the camera object generated using
 * <a href="#/p5/createCamera">createCamera()</a>
 *
 * @class p5.Camera
 * @param {rendererGL} rendererGL instance of WebGL renderer
 * @example
 * <div>
 * <code>
 * let cam;
 * let delta = 0.01;
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   normalMaterial();
 *   cam = createCamera();
 *   // set initial pan angle
 *   cam.pan(-0.8);
 *   describe(
 *     'camera view pans left and right across a series of rotating 3D boxes.'
 *   );
 * }
 *
 * function draw() {
 *   background(200);
 *
 *   // pan camera according to angle 'delta'
 *   cam.pan(delta);
 *
 *   // every 160 frames, switch direction
 *   if (frameCount % 160 === 0) {
 *     delta *= -1;
 *   }
 *
 *   rotateX(frameCount * 0.01);
 *   translate(-100, 0, 0);
 *   box(20);
 *   translate(35, 0, 0);
 *   box(20);
 *   translate(35, 0, 0);
 *   box(20);
 *   translate(35, 0, 0);
 *   box(20);
 *   translate(35, 0, 0);
 *   box(20);
 *   translate(35, 0, 0);
 *   box(20);
 *   translate(35, 0, 0);
 *   box(20);
 * }
 * </code>
 * </div>
 *
 * @alt
 * camera view pans left and right across a series of rotating 3D boxes.
 */o.default.Camera=/*#__PURE__*/function(){function t(r){s(this,t),this._renderer=r,this.cameraType="default",this.cameraMatrix=new o.default.Matrix,this.projMatrix=new o.default.Matrix,this.yScale=1}/**
  * camera position value on x axis
  * @property {Number} eyeX
  * @readonly
  * @example
  *
  * <div class='norender'><code>
  * let cam, div;
  * function setup() {
  *   createCanvas(100, 100, WEBGL);
  *   background(0);
  *   cam = createCamera();
  *   div = createDiv();
  *   div.position(0, 0);
  *   describe('An example showing the use of camera object properties');
  * }
  *
  * function draw() {
  *   orbitControl();
  *   box(10);
  *   div.html('eyeX = ' + cam.eyeX);
  * }
  * </code></div>
  *
  * @alt
  * An example showing the use of camera object properties
  *
  */return(/**
  * camera position value on y axis
  * @property {Number} eyeY
  * @readonly
  * @example
  * <div class='norender'><code>
  * let cam, div;
  * function setup() {
  *   createCanvas(100, 100, WEBGL);
  *   background(0);
  *   cam = createCamera();
  *   div = createDiv();
  *   div.position(0, 0);
  *   describe('An example showing the use of camera object properties');
  * }
  *
  * function draw() {
  *   orbitControl();
  *   box(10);
  *   div.html('eyeY = ' + cam.eyeY);
  * }
  * </code></div>
  *
  * @alt
  * An example showing the use of camera object properties
  *
  *//**
  * camera position value on z axis
  * @property {Number} eyeZ
  * @readonly
  * @example
  * <div class='norender'><code>
  * let cam, div;
  * function setup() {
  *   createCanvas(100, 100, WEBGL);
  *   background(0);
  *   cam = createCamera();
  *   div = createDiv();
  *   div.position(0, 0);
  *   describe('An example showing the use of camera object properties');
  * }
  *
  * function draw() {
  *   orbitControl();
  *   box(10);
  *   div.html('eyeZ = ' + cam.eyeZ);
  * }
  * </code></div>
  *
  * @alt
  * An example showing the use of camera object properties
  *
  *//**
  * x coordinate representing center of the sketch
  * @property {Number} centerX
  * @readonly
  * @example
  * <div class='norender'><code>
  * let cam, div;
  * function setup() {
  *   createCanvas(100, 100, WEBGL);
  *   background(255);
  *   cam = createCamera();
  *   cam.lookAt(1, 0, 0);
  *   div = createDiv('centerX = ' + cam.centerX);
  *   div.position(0, 0);
  *   div.style('color', 'white');
  *   describe('An example showing the use of camera object properties');
  * }
  *
  * function draw() {
  *   orbitControl();
  *   box(10);
  * }
  * </code></div>
  *
  * @alt
  * An example showing the use of camera object properties
  *
  *//**
  * y coordinate representing center of the sketch
  * @property {Number} centerY
  * @readonly
  * @example
  * <div class='norender'><code>
  * let cam, div;
  * function setup() {
  *   createCanvas(100, 100, WEBGL);
  *   background(255);
  *   cam = createCamera();
  *   cam.lookAt(0, 1, 0);
  *   div = createDiv('centerY = ' + cam.centerY);
  *   div.position(0, 0);
  *   div.style('color', 'white');
  *   describe('An example showing the use of camera object properties');
  * }
  *
  * function draw() {
  *   orbitControl();
  *   box(10);
  * }
  * </code></div>
  *
  * @alt
  * An example showing the use of camera object properties
  *
  *//**
  * z coordinate representing center of the sketch
  * @property {Number} centerZ
  * @readonly
  * @example
  * <div class='norender'><code>
  * let cam, div;
  * function setup() {
  *   createCanvas(100, 100, WEBGL);
  *   background(255);
  *   cam = createCamera();
  *   cam.lookAt(0, 0, 1);
  *   div = createDiv('centerZ = ' + cam.centerZ);
  *   div.position(0, 0);
  *   div.style('color', 'white');
  *   describe('An example showing the use of camera object properties');
  * }
  *
  * function draw() {
  *   orbitControl();
  *   box(10);
  * }
  * </code></div>
  *
  * @alt
  * An example showing the use of camera object properties
  *
  *//**
  * x component of direction 'up' from camera
  * @property {Number} upX
  * @readonly
  * @example
  * <div class='norender'><code>
  * let cam, div;
  * function setup() {
  *   createCanvas(100, 100, WEBGL);
  *   background(255);
  *   cam = createCamera();
  *   div = createDiv('upX = ' + cam.upX);
  *   div.position(0, 0);
  *   div.style('color', 'blue');
  *   div.style('font-size', '18px');
  *   describe('An example showing the use of camera object properties');
  * }
  * </code></div>
  *
  * @alt
  * An example showing the use of camera object properties
  *
  *//**
  * y component of direction 'up' from camera
  * @property {Number} upY
  * @readonly
  * @example
  * <div class='norender'><code>
  * let cam, div;
  * function setup() {
  *   createCanvas(100, 100, WEBGL);
  *   background(255);
  *   cam = createCamera();
  *   div = createDiv('upY = ' + cam.upY);
  *   div.position(0, 0);
  *   div.style('color', 'blue');
  *   div.style('font-size', '18px');
  *   describe('An example showing the use of camera object properties');
  * }
  * </code></div>
  *
  * @alt
  * An example showing the use of camera object properties
  *
  *//**
  * z component of direction 'up' from camera
  * @property {Number} upZ
  * @readonly
  * @example
  * <div class='norender'><code>
  * let cam, div;
  * function setup() {
  *   createCanvas(100, 100, WEBGL);
  *   background(255);
  *   cam = createCamera();
  *   div = createDiv('upZ = ' + cam.upZ);
  *   div.position(0, 0);
  *   div.style('color', 'blue');
  *   div.style('font-size', '18px');
  *   describe('An example showing the use of camera object properties');
  * }
  * </code></div>
  *
  * @alt
  * An example showing the use of camera object properties
  *
  */////////////////////////////////////////////////////////////////////////////////
// Camera Projection Methods
////////////////////////////////////////////////////////////////////////////////
/**
  * Sets a perspective projection.
  * Accepts the same parameters as the global
  * <a href="#/p5/perspective">perspective()</a>.
  * More information on this function can be found there.
  * @method perspective
  * @for p5.Camera
  * @example
  * <div>
  * <code>
  * // drag the mouse to look around!
  *
  * let cam;
  *
  * function setup() {
  *   createCanvas(100, 100, WEBGL);
  *   // create a camera
  *   cam = createCamera();
  *   // give it a perspective projection
  *   cam.perspective(PI / 3.0, width / height, 0.1, 500);
  * }
  *
  * function draw() {
  *   background(200);
  *   orbitControl();
  *   normalMaterial();
  *
  *   rotateX(-0.3);
  *   rotateY(-0.2);
  *   translate(0, 0, -50);
  *
  *   push();
  *   translate(-15, 0, sin(frameCount / 30) * 95);
  *   box(30);
  *   pop();
  *   push();
  *   translate(15, 0, sin(frameCount / 30 + PI) * 95);
  *   box(30);
  *   pop();
  * }
  * </code>
  * </div>
  * @alt
  * two colored 3D boxes move back and forth, rotating as mouse is dragged.
  */c(t,[{key:"perspective",value:function(t,r,n,a){this.cameraType=arguments.length>0?"custom":"default",void 0===t?(t=this.defaultCameraFOV,// perspective leads to a smaller than expected FOV (because
// _computeCameraDefaultSettings computes in radians)
this.cameraFOV=t):this.cameraFOV=this._renderer._pInst._toRadians(t),void 0===r&&(r=this.defaultAspectRatio),void 0===n&&(n=this.defaultCameraNear),void 0===a&&(a=this.defaultCameraFar),n<=1e-4&&(n=.01,console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")),a<n&&console.log("Perspective far plane value is less than near plane value. Nothing will be shown."),this.aspectRatio=r,this.cameraNear=n,this.cameraFar=a,this.projMatrix=o.default.Matrix.identity();var s=1/Math.tan(this.cameraFOV/2),l=1/(this.cameraNear-this.cameraFar);/* eslint-disable indent */this.projMatrix.set(s/r,0,0,0,0,-s*this.yScale,0,0,0,0,(a+n)*l,-1,0,0,2*a*n*l,0),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15])}/**
    * Sets an orthographic projection.
    * Accepts the same parameters as the global
    * <a href="#/p5/ortho">ortho()</a>.
    * More information on this function can be found there.
    * @method ortho
    * @for p5.Camera
    * @example
    * <div>
    * <code>
    * // drag the mouse to look around!
    * // there's no vanishing point
    *
    * let cam;
    *
    * function setup() {
    *   createCanvas(100, 100, WEBGL);
    *   // create a camera
    *   cam = createCamera();
    *   // give it an orthographic projection
    *   cam.ortho(-width / 2, width / 2, height / 2, -height / 2, 0, 500);
    * }
    * function draw() {
    *   background(200);
    *   orbitControl();
    *   normalMaterial();
    *
    *   rotateX(0.2);
    *   rotateY(-0.2);
    *   push();
    *   translate(-15, 0, sin(frameCount / 30) * 65);
    *   box(30);
    *   pop();
    *   push();
    *   translate(15, 0, sin(frameCount / 30 + PI) * 65);
    *   box(30);
    *   pop();
    * }
    * </code>
    * </div>
    * @alt
    * two 3D boxes move back and forth along same plane, rotating as mouse is dragged.
    */},{key:"ortho",value:function(t,r,n,a,s,l){void 0===t&&(t=-this._renderer.width/2),void 0===r&&(r=+this._renderer.width/2),void 0===n&&(n=-this._renderer.height/2),void 0===a&&(a=+this._renderer.height/2),void 0===s&&(s=0),void 0===l&&(l=Math.max(this._renderer.width,this._renderer.height)),this.cameraNear=s,this.cameraFar=l;var c=r-t,u=a-n,p=l-s,d=2/c,m=2/u*this.yScale,f=-2/p,h=-(r+t)/c,y=-(a+n)/u,g=-(l+s)/p;this.projMatrix=o.default.Matrix.identity(),/* eslint-disable indent */this.projMatrix.set(d,0,0,0,0,-m,0,0,0,0,f,0,h,y,g,1),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15]),this.cameraType="custom"}/**
    * Sets the camera's frustum.
    * Accepts the same parameters as the global
    * <a href="#/p5/frustum">frustum()</a>.
    * More information on this function can be found there.
    * @method frustum
    * @for p5.Camera
    * @example
    * <div>
    * <code>
    * let cam;
    *
    * function setup() {
    *   x = createCanvas(100, 100, WEBGL);
    *   setAttributes('antialias', true);
    *   // create a camera
    *   cam = createCamera();
    *   // set its frustum
    *   cam.frustum(-0.1, 0.1, -0.1, 0.1, 0.1, 200);
    * }
    *
    * function draw() {
    *   background(200);
    *   orbitControl();
    *   normalMaterial();
    *
    *   rotateY(-0.2);
    *   rotateX(-0.3);
    *   push();
    *   translate(-15, 0, sin(frameCount / 30) * 25);
    *   box(30);
    *   pop();
    *   push();
    *   translate(15, 0, sin(frameCount / 30 + PI) * 25);
    *   box(30);
    *   pop();
    * }
    * </code>
    * </div>
    * @alt
    * two 3D boxes move back and forth along same plane, rotating as mouse is dragged.
    */},{key:"frustum",value:function(t,r,n,a,s,l){void 0===t&&(t=-(.05*this._renderer.width)),void 0===r&&(r=.05*+this._renderer.width),void 0===n&&(n=.05*+this._renderer.height),void 0===a&&(a=-(.05*this._renderer.height)),void 0===s&&(s=this.defaultCameraNear),void 0===l&&(l=this.defaultCameraFar),this.cameraNear=s,this.cameraFar=l;var c=r-t,u=a-n,p=l-s,d=+(2*s)/c,m=+(2*s)/u*this.yScale,f=-(2*l*s)/p,h=(r+t)/c,y=(a+n)/u,g=-(l+s)/p;this.projMatrix=o.default.Matrix.identity(),/* eslint-disable indent */this.projMatrix.set(d,0,0,0,0,-m,0,0,h,y,g,-1,0,0,f,0),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15]),this.cameraType="custom"}////////////////////////////////////////////////////////////////////////////////
},{key:"_rotateView",value:function(t,r,n,a){var s=this.centerX,l=this.centerY,c=this.centerZ;s-=this.eyeX,l-=this.eyeY,c-=this.eyeZ;var u=o.default.Matrix.identity(this._renderer._pInst);u.rotate(this._renderer._pInst._toRadians(t),r,n,a);/* eslint-disable max-len */var p=[s*u.mat4[0]+l*u.mat4[4]+c*u.mat4[8],s*u.mat4[1]+l*u.mat4[5]+c*u.mat4[9],s*u.mat4[2]+l*u.mat4[6]+c*u.mat4[10]];/* eslint-enable max-len */// add eye position back into center
p[0]+=this.eyeX,p[1]+=this.eyeY,p[2]+=this.eyeZ,this.camera(this.eyeX,this.eyeY,this.eyeZ,p[0],p[1],p[2],this.upX,this.upY,this.upZ)}/**
    * Panning rotates the camera view to the left and right.
    * @method pan
    * @param {Number} angle amount to rotate camera in current
    * <a href="#/p5/angleMode">angleMode</a> units.
    * Greater than 0 values rotate counterclockwise (to the left).
    * @example
    * <div>
    * <code>
    * let cam;
    * let delta = 0.01;
    *
    * function setup() {
    *   createCanvas(100, 100, WEBGL);
    *   normalMaterial();
    *   cam = createCamera();
    *   // set initial pan angle
    *   cam.pan(-0.8);
    * }
    *
    * function draw() {
    *   background(200);
    *
    *   // pan camera according to angle 'delta'
    *   cam.pan(delta);
    *
    *   // every 160 frames, switch direction
    *   if (frameCount % 160 === 0) {
    *     delta *= -1;
    *   }
    *
    *   rotateX(frameCount * 0.01);
    *   translate(-100, 0, 0);
    *   box(20);
    *   translate(35, 0, 0);
    *   box(20);
    *   translate(35, 0, 0);
    *   box(20);
    *   translate(35, 0, 0);
    *   box(20);
    *   translate(35, 0, 0);
    *   box(20);
    *   translate(35, 0, 0);
    *   box(20);
    *   translate(35, 0, 0);
    *   box(20);
    * }
    * </code>
    * </div>
    *
    * @alt
    * camera view pans left and right across a series of rotating 3D boxes.
    */},{key:"pan",value:function(t){var r=this._getLocalAxes();this._rotateView(t,r.y[0],r.y[1],r.y[2])}/**
    * Tilting rotates the camera view up and down.
    * @method tilt
    * @param {Number} angle amount to rotate camera in current
    * <a href="#/p5/angleMode">angleMode</a> units.
    * Greater than 0 values rotate counterclockwise (to the left).
    * @example
    * <div>
    * <code>
    * let cam;
    * let delta = 0.01;
    *
    * function setup() {
    *   createCanvas(100, 100, WEBGL);
    *   normalMaterial();
    *   cam = createCamera();
    *   // set initial tilt
    *   cam.tilt(-0.8);
    * }
    *
    * function draw() {
    *   background(200);
    *
    *   // pan camera according to angle 'delta'
    *   cam.tilt(delta);
    *
    *   // every 160 frames, switch direction
    *   if (frameCount % 160 === 0) {
    *     delta *= -1;
    *   }
    *
    *   rotateY(frameCount * 0.01);
    *   translate(0, -100, 0);
    *   box(20);
    *   translate(0, 35, 0);
    *   box(20);
    *   translate(0, 35, 0);
    *   box(20);
    *   translate(0, 35, 0);
    *   box(20);
    *   translate(0, 35, 0);
    *   box(20);
    *   translate(0, 35, 0);
    *   box(20);
    *   translate(0, 35, 0);
    *   box(20);
    * }
    * </code>
    * </div>
    *
    * @alt
    * camera view tilts up and down across a series of rotating 3D boxes.
    */},{key:"tilt",value:function(t){var r=this._getLocalAxes();this._rotateView(t,r.x[0],r.x[1],r.x[2])}/**
    * Reorients the camera to look at a position in world space.
    * @method lookAt
    * @for p5.Camera
    * @param {Number} x x position of a point in world space
    * @param {Number} y y position of a point in world space
    * @param {Number} z z position of a point in world space
    * @example
    * <div>
    * <code>
    * let cam;
    *
    * function setup() {
    *   createCanvas(100, 100, WEBGL);
    *   normalMaterial();
    *   cam = createCamera();
    * }
    *
    * function draw() {
    *   background(200);
    *
    *   // look at a new random point every 60 frames
    *   if (frameCount % 60 === 0) {
    *     cam.lookAt(random(-100, 100), random(-50, 50), 0);
    *   }
    *
    *   rotateX(frameCount * 0.01);
    *   translate(-100, 0, 0);
    *   box(20);
    *   translate(35, 0, 0);
    *   box(20);
    *   translate(35, 0, 0);
    *   box(20);
    *   translate(35, 0, 0);
    *   box(20);
    *   translate(35, 0, 0);
    *   box(20);
    *   translate(35, 0, 0);
    *   box(20);
    *   translate(35, 0, 0);
    *   box(20);
    * }
    * </code>
    * </div>
    *
    * @alt
    * camera view of rotating 3D cubes changes to look at a new random
    * point every second .
    */},{key:"lookAt",value:function(t,r,n){this.camera(this.eyeX,this.eyeY,this.eyeZ,t,r,n,this.upX,this.upY,this.upZ)}////////////////////////////////////////////////////////////////////////////////
},{key:"camera",value:function(t,r,n,o,a,s,l,c,u){void 0===t&&(t=this.defaultEyeX,r=this.defaultEyeY,n=this.defaultEyeZ,o=t,a=r,s=0,l=0,c=1,u=0),this.eyeX=t,this.eyeY=r,this.eyeZ=n,void 0!==o&&(this.centerX=o,this.centerY=a,this.centerZ=s),void 0!==l&&(this.upX=l,this.upY=c,this.upZ=u);var p=this._getLocalAxes();// the camera affects the model view matrix, insofar as it
// inverse translates the world to the eye position of the camera
// and rotates it.
/* eslint-disable indent */this.cameraMatrix.set(p.x[0],p.y[0],p.z[0],0,p.x[1],p.y[1],p.z[1],0,p.x[2],p.y[2],p.z[2],0,0,0,0,1);/* eslint-enable indent */var d=-t,m=-r,f=-n;return this.cameraMatrix.translate([d,m,f]),this._isActive()&&this._renderer.uMVMatrix.set(this.cameraMatrix.mat4[0],this.cameraMatrix.mat4[1],this.cameraMatrix.mat4[2],this.cameraMatrix.mat4[3],this.cameraMatrix.mat4[4],this.cameraMatrix.mat4[5],this.cameraMatrix.mat4[6],this.cameraMatrix.mat4[7],this.cameraMatrix.mat4[8],this.cameraMatrix.mat4[9],this.cameraMatrix.mat4[10],this.cameraMatrix.mat4[11],this.cameraMatrix.mat4[12],this.cameraMatrix.mat4[13],this.cameraMatrix.mat4[14],this.cameraMatrix.mat4[15]),this}/**
    * Move camera along its local axes while maintaining current camera orientation.
    * @method move
    * @param {Number} x amount to move along camera's left-right axis
    * @param {Number} y amount to move along camera's up-down axis
    * @param {Number} z amount to move along camera's forward-backward axis
    * @example
    * <div>
    * <code>
    * // see the camera move along its own axes while maintaining its orientation
    * let cam;
    * let delta = 0.5;
    *
    * function setup() {
    *   createCanvas(100, 100, WEBGL);
    *   normalMaterial();
    *   cam = createCamera();
    * }
    *
    * function draw() {
    *   background(200);
    *
    *   // move the camera along its local axes
    *   cam.move(delta, delta, 0);
    *
    *   // every 100 frames, switch direction
    *   if (frameCount % 150 === 0) {
    *     delta *= -1;
    *   }
    *
    *   translate(-10, -10, 0);
    *   box(50, 8, 50);
    *   translate(15, 15, 0);
    *   box(50, 8, 50);
    *   translate(15, 15, 0);
    *   box(50, 8, 50);
    *   translate(15, 15, 0);
    *   box(50, 8, 50);
    *   translate(15, 15, 0);
    *   box(50, 8, 50);
    *   translate(15, 15, 0);
    *   box(50, 8, 50);
    * }
    * </code>
    * </div>
    *
    * @alt
    * camera view moves along a series of 3D boxes, maintaining the same
    * orientation throughout the move
    */},{key:"move",value:function(t,r,n){var o=this._getLocalAxes(),a=[o.x[0]*t,o.x[1]*t,o.x[2]*t],s=[o.y[0]*r,o.y[1]*r,o.y[2]*r],l=[o.z[0]*n,o.z[1]*n,o.z[2]*n];// scale local axes by movement amounts
this.camera(this.eyeX+a[0]+s[0]+l[0],this.eyeY+a[1]+s[1]+l[1],this.eyeZ+a[2]+s[2]+l[2],this.centerX+a[0]+s[0]+l[0],this.centerY+a[1]+s[1]+l[1],this.centerZ+a[2]+s[2]+l[2],this.upX,this.upY,this.upZ)}/**
    * Set camera position in world-space while maintaining current camera
    * orientation.
    * @method setPosition
    * @param {Number} x x position of a point in world space
    * @param {Number} y y position of a point in world space
    * @param {Number} z z position of a point in world space
    * @example
    * <div>
    * <code>
    * // press '1' '2' or '3' keys to set camera position
    *
    * let cam;
    *
    * function setup() {
    *   createCanvas(100, 100, WEBGL);
    *   normalMaterial();
    *   cam = createCamera();
    * }
    *
    * function draw() {
    *   background(200);
    *
    *   // '1' key
    *   if (keyIsDown(49)) {
    *     cam.setPosition(30, 0, 80);
    *   }
    *   // '2' key
    *   if (keyIsDown(50)) {
    *     cam.setPosition(0, 0, 80);
    *   }
    *   // '3' key
    *   if (keyIsDown(51)) {
    *     cam.setPosition(-30, 0, 80);
    *   }
    *
    *   box(20);
    * }
    * </code>
    * </div>
    *
    * @alt
    * camera position changes as the user presses keys, altering view of a 3D box
    */},{key:"setPosition",value:function(t,r,n){var o=t-this.eyeX,a=r-this.eyeY,s=n-this.eyeZ;this.camera(t,r,n,this.centerX+o,this.centerY+a,this.centerZ+s,this.upX,this.upY,this.upZ)}/**
    * Copies information about the argument camera's view and projection to
    * the target camera. If the target camera is active, it will be reflected
    * on the screen.
    *
    * @method set
    * @param {p5.Camera} cam source camera
    *
    * @example
    * <div>
    * <code>
    * let cam, initialCam;
    *
    * function setup() {
    *   createCanvas(100, 100, WEBGL);
    *   strokeWeight(3);
    *
    *   // Set the initial state to initialCamera and set it to the camera
    *   // used for drawing. Then set cam to be the active camera.
    *   cam = createCamera();
    *   initialCam = createCamera();
    *   initialCam.camera(100, 100, 100, 0, 0, 0, 0, 0, -1);
    *   cam.set(initialCam);
    *
    *   setCamera(cam);
    * }
    *
    * function draw() {
    *   orbitControl();
    *   background(255);
    *   box(50);
    *   translate(0, 0, -25);
    *   plane(100);
    * }
    *
    * function doubleClicked(){
    *   // Double-click to return the camera to its initial position.
    *   cam.set(initialCam);
    * }
    * </code>
    * </div>
    * @alt
    * Prepare two cameras. One is the camera that sets the initial state,
    * and the other is the camera that moves with interaction.
    * Draw a plane and a box on top of it, operate the camera using orbitControl().
    * Double-click to set the camera in the initial state and return to
    * the initial state.
    */},{key:"set",value:function(t){for(var r=["eyeX","eyeY","eyeZ","centerX","centerY","centerZ","upX","upY","upZ","cameraFOV","aspectRatio","cameraNear","cameraFar","cameraType"],n=0,o=r;n<o.length;n++){var a=o[n];this[a]=t[a]}this.cameraMatrix=t.cameraMatrix.copy(),this.projMatrix=t.projMatrix.copy(),this._isActive()&&(this._renderer.uMVMatrix.mat4=this.cameraMatrix.mat4.slice(),this._renderer.uPMatrix.mat4=this.projMatrix.mat4.slice())}/**
    * For the cameras cam0 and cam1 with the given arguments, their view are combined
    * with the parameter amt that represents the quantity, and the obtained view is applied.
    * For example, if cam0 is looking straight ahead and cam1 is looking straight
    * to the right and amt is 0.5, the applied camera will look to the halfway
    * between front and right.
    * If the applied camera is active, the applied result will be reflected on the screen.
    * When applying this function, all cameras involved must have exactly the same projection
    * settings. For example, if one is perspective, ortho, frustum, the other two must also be
    * perspective, ortho, frustum respectively. However, if all cameras have ortho settings,
    * interpolation is possible if the ratios of left, right, top and bottom are equal to each other.
    * For example, when it is changed by orbitControl().
    *
    * @method slerp
    * @param {p5.Camera} cam0 first p5.Camera
    * @param {p5.Camera} cam1 second p5.Camera
    * @param {Number} amt amount to use for interpolation during slerp
    *
    * @example
    * <div>
    * <code>
    * let cam0, cam1, cam;
    * function setup() {
    *   createCanvas(100, 100, WEBGL);
    *   strokeWeight(3);
    *
    *   // camera for slerp.
    *   cam = createCamera();
    *   // cam0 is looking at the cube from the front.
    *   // cam1 is pointing straight to the right in the cube
    *   // at the same position as cam0 by doing a pan(-PI/2).
    *   cam0 = createCamera();
    *   cam1 = createCamera();
    *   cam1.pan(-PI/2);
    *
    *   // we only use cam.
    *   setCamera(cam);
    * }
    *
    * function draw() {
    *   // calculate amount.
    *   const amt = 0.5 - 0.5 * cos(frameCount * TAU / 120);
    *   // slerp cam0 and cam1 with amt, set to cam.
    *   // When amt moves from 0 to 1, cam moves from cam0 to cam1,
    *   // shaking the camera to the right.
    *   cam.slerp(cam0, cam1, amt);
    *
    *   background(255);
    *   // Every time the camera turns right, the cube drifts left.
    *   box(40);
    * }
    * </code>
    * </div>
    * @alt
    * Prepare two cameras. One camera is facing straight ahead to the cube and the other
    * camera is in the same position and looking straight to the right.
    * If you use a camera which interpolates these with slerp(), the facing direction
    * of the camera will change smoothly between the front and the right.
    *
    * @example
    * <div>
    * <code>
    * let cam, lastCam, initialCam;
    * let countForReset = 30;
    * // This sample uses orbitControl() to move the camera.
    * // Double-clicking the canvas restores the camera to its initial state.
    * function setup() {
    *   createCanvas(100, 100, WEBGL);
    *   strokeWeight(3);
    *
    *   cam = createCamera(); // main camera
    *   lastCam = createCamera(); // Camera for recording loc info before reset
    *   initialCam = createCamera(); // Camera for recording the initial state
    *
    *   setCamera(cam); // set main camera
    * }
    *
    * function draw() {
    *   if (countForReset < 30) {
    *     // if the reset count is less than 30,
    *     // it will move closer to the original camera as it increases.
    *     countForReset++;
    *     cam.slerp(lastCam, initialCam, countForReset / 30);
    *   } else {
    *     // if the count is 30,
    *     // you can freely move the main camera with orbitControl().
    *     orbitControl();
    *   }
    *
    *   background(255);
    *   box(40);
    * }
    * // A double-click sets countForReset to 0 and initiates a reset.
    * function doubleClicked() {
    *   if (countForReset === 30) {
    *     countForReset = 0;
    *     lastCam.set(cam);
    *   }
    * }
    * </code>
    * </div>
    * @alt
    * There is a camera, drawing a cube. The camera can be moved freely with
    * orbitControl(). Double-click to smoothly return the camera to its initial state.
    * The camera cannot be moved during that time.
    */},{key:"slerp",value:function(t,r,n){// If t is 0 or 1, do not interpolate and set the argument camera.
if(0===n){this.set(t);return}// For this cameras is ortho, assume that cam0 and cam1 are also ortho
if(1===n){this.set(r);return}0!==this.projMatrix.mat4[15]&&(this.projMatrix.mat4[0]=t.projMatrix.mat4[0]*Math.pow(r.projMatrix.mat4[0]/t.projMatrix.mat4[0],n),this.projMatrix.mat4[5]=t.projMatrix.mat4[5]*Math.pow(r.projMatrix.mat4[5]/t.projMatrix.mat4[5],n),this._isActive()&&(this._renderer.uPMatrix.mat4=this.projMatrix.mat4.slice()));var a,s,l,c,u=new o.default.Vector(t.eyeX,t.eyeY,t.eyeZ),p=new o.default.Vector(r.eyeX,r.eyeY,r.eyeZ),d=new o.default.Vector(t.centerX,t.centerY,t.centerZ),m=new o.default.Vector(r.centerX,r.centerY,r.centerZ),f=o.default.Vector.dist(u,d),h=f*Math.pow(o.default.Vector.dist(p,m)/f,n),y=o.default.Vector.sub(u,p),g=u.copy().sub(p).sub(d).add(m),v=g.magSq(),b=1;v>1e-6&&(b=Math.max(0,Math.min(b=o.default.Vector.dot(y,g)/v,1)));// that are between the new viewpoint and the new center position.
var x=o.default.Vector.lerp(o.default.Vector.lerp(u,d,b),o.default.Vector.lerp(p,m,b),n),j=t.cameraMatrix.createSubMatrix3x3(),w=r.cameraMatrix.createSubMatrix3x3(),_=j.column(2),S=w.column(2),E=j.column(1),T=w.column(1),M=new o.default.Vector,C=new o.default.Vector,O=new o.default.Vector,N=new o.default.Vector,A=w.mult3x3(j.copy().transpose3x3()),R=A.diagonal(),L=.5*(R[0]+R[1]+R[2]-1);// Prepare each of rotation matrix from their camera matrix
// so in that case we execute linearly interpolate.
if(1-L<1e-7){// Obtain the front vector and up vector by linear interpolation
// and normalize them.
// calculate newEye, newCenter with newFront vector.
M.set(o.default.Vector.lerp(_,S,n)).normalize(),O.set(M).mult(b*h).add(x),N.set(M).mult((b-1)*h).add(x),C.set(o.default.Vector.lerp(E,T,n)).normalize(),this.camera(O.x,O.y,O.z,N.x,N.y,N.z,C.x,C.y,C.z);return}// Calculates the axis vector and the angle of the difference orthogonal matrix.
var I=1/(1-L),P=Math.max(R[0],R[1],R[2]),D=A.mat3[1]+A.mat3[3],F=A.mat3[2]+A.mat3[6],U=A.mat3[5]+A.mat3[7];P===R[0]?(a=Math.sqrt((R[0]-L)*I),I/=a,s=.5*D*I,l=.5*F*I,c=.5*(A.mat3[7]-A.mat3[5])/a):P===R[1]?(s=Math.sqrt((R[1]-L)*I),I/=s,l=.5*U*I,a=.5*D*I,c=.5*(A.mat3[2]-A.mat3[6])/s):(l=Math.sqrt((R[2]-L)*I),I/=l,a=.5*F*I,s=.5*U*I,c=.5*(A.mat3[3]-A.mat3[1])/l);// Multiplying mat0 by the first matrix yields mat1, but by creating a state
// in the middle of that matrix, you can obtain a matrix that is
// an intermediate state between mat0 and mat1.
var B=n*Math.atan2(c,L),G=Math.cos(B),V=Math.sin(B),z=1-G,H=a*s,W=s*l,q=l*a,X=new o.default.Matrix("mat3",[G+z*a*a,z*H-V*l,z*q+V*s,z*H+V*l,G+z*s*s,z*W-V*a,z*q-V*s,z*W+V*a,G+z*l*l]);// calculate newEye, newCenter with newFront vector.
X.multiplyVec3(_,M),O.set(M).mult(b*h).add(x),N.set(M).mult((b-1)*h).add(x),X.multiplyVec3(E,C),// The eye position and center position are calculated based on the front vector.
this.camera(O.x,O.y,O.z,N.x,N.y,N.z,C.x,C.y,C.z)}////////////////////////////////////////////////////////////////////////////////
},{key:"_computeCameraDefaultSettings",value:function(){this.defaultCameraFOV=60/180*Math.PI,this.defaultAspectRatio=this._renderer.width/this._renderer.height,this.defaultEyeX=0,this.defaultEyeY=0,this.defaultEyeZ=this._renderer.height/2/Math.tan(this.defaultCameraFOV/2),this.defaultCenterX=0,this.defaultCenterY=0,this.defaultCenterZ=0,this.defaultCameraNear=.1*this.defaultEyeZ,this.defaultCameraFar=10*this.defaultEyeZ}//detect if user didn't set the camera
},{key:"_setDefaultCamera",value:function(){this.cameraFOV=this.defaultCameraFOV,this.aspectRatio=this.defaultAspectRatio,this.eyeX=this.defaultEyeX,this.eyeY=this.defaultEyeY,this.eyeZ=this.defaultEyeZ,this.centerX=this.defaultCenterX,this.centerY=this.defaultCenterY,this.centerZ=this.defaultCenterZ,this.upX=0,this.upY=1,this.upZ=0,this.cameraNear=this.defaultCameraNear,this.cameraFar=this.defaultCameraFar,this.perspective(),this.camera(),this.cameraType="default"}},{key:"_resize",value:function(){// If we're using the default camera, update the aspect ratio
"default"===this.cameraType?(this._computeCameraDefaultSettings(),this._setDefaultCamera()):this.perspective(this.cameraFOV,this._renderer.width/this._renderer.height)}/**
    * Returns a copy of a camera.
    * @method copy
    * @private
    */},{key:"copy",value:function(){var t=new o.default.Camera(this._renderer);return t.cameraFOV=this.cameraFOV,t.aspectRatio=this.aspectRatio,t.eyeX=this.eyeX,t.eyeY=this.eyeY,t.eyeZ=this.eyeZ,t.centerX=this.centerX,t.centerY=this.centerY,t.centerZ=this.centerZ,t.upX=this.upX,t.upY=this.upY,t.upZ=this.upZ,t.cameraNear=this.cameraNear,t.cameraFar=this.cameraFar,t.cameraType=this.cameraType,t.cameraMatrix=this.cameraMatrix.copy(),t.projMatrix=this.projMatrix.copy(),t}/**
    * Returns a camera's local axes: left-right, up-down, and forward-backward,
    * as defined by vectors in world-space.
    * @method _getLocalAxes
    * @private
    */},{key:"_getLocalAxes",value:function(){// calculate camera local Z vector
var t=this.eyeX-this.centerX,r=this.eyeY-this.centerY,n=this.eyeZ-this.centerZ,o=Math.sqrt(t*t+r*r+n*n);0!==o&&(t/=o,r/=o,n/=o);var a=this.upX,s=this.upY,l=this.upZ,c=s*n-l*r,u=-a*n+l*t,p=a*r-s*t;a=r*p-n*u,s=-t*p+n*c,l=t*u-r*c;// non-perpendicular unit-length vectors; so normalize x, y here:
var d=Math.sqrt(c*c+u*u+p*p);0!==d&&(c/=d,u/=d,p/=d);var m=Math.sqrt(a*a+s*s+l*l);return 0!==m&&(a/=m,s/=m,l/=m),{x:[c,u,p],y:[a,s,l],z:[t,r,n]}}/**
    * Orbits the camera about center point. For use with orbitControl().
    * @method _orbit
    * @private
    * @param {Number} dTheta change in spherical coordinate theta
    * @param {Number} dPhi change in spherical coordinate phi
    * @param {Number} dRadius change in radius
    */},{key:"_orbit",value:function(t,r,n){// Calculate the vector and its magnitude from the center to the viewpoint
var a=this.eyeX-this.centerX,s=this.eyeY-this.centerY,l=this.eyeZ-this.centerZ,c=Math.hypot(a,s,l),u=new o.default.Vector(a,s,l).normalize(),p=new o.default.Vector(this.upX,this.upY,this.upZ).normalize(),d=new o.default.Vector.cross(p,u).normalize(),m=new o.default.Vector.cross(d,p);// update camRadius
(c*=Math.pow(10,n))<this.cameraNear&&(c=this.cameraNear),c>this.cameraFar&&(c=this.cameraFar);// calculate updated camera angle
// Find the angle between the "up" and the "front", add dPhi to that.
// angleBetween() may return negative value. Since this specification is subject to change
// due to version updates, it cannot be adopted, so here we calculate using a method
// that directly obtains the absolute value.
var f=Math.acos(Math.max(-1,Math.min(1,o.default.Vector.dot(u,p))))+r,h=t;// Rotate by dTheta in the shortest direction from "vertical" to "side"
(f<=0||f>=Math.PI)&&(this.upX*=-1,this.upY*=-1,this.upZ*=-1),p.mult(Math.cos(f)),m.mult(Math.cos(h)*Math.sin(f)),d.mult(Math.sin(h)*Math.sin(f)),u.set(p).add(m).add(d),this.eyeX=c*u.x+this.centerX,this.eyeY=c*u.y+this.centerY,this.eyeZ=c*u.z+this.centerZ,this.camera(this.eyeX,this.eyeY,this.eyeZ,this.centerX,this.centerY,this.centerZ,this.upX,this.upY,this.upZ)}/**
    * Orbits the camera about center point. For use with orbitControl().
    * Unlike _orbit(), the direction of rotation always matches the direction of pointer movement.
    * @method _orbitFree
    * @private
    * @param {Number} dx the x component of the rotation vector.
    * @param {Number} dy the y component of the rotation vector.
    * @param {Number} dRadius change in radius
    */},{key:"_orbitFree",value:function(t,r,n){// Calculate the vector and its magnitude from the center to the viewpoint
var a=this.eyeX-this.centerX,s=this.eyeY-this.centerY,l=this.eyeZ-this.centerZ,c=Math.hypot(a,s,l),u=new o.default.Vector(a,s,l).normalize(),p=new o.default.Vector(this.upX,this.upY,this.upZ),d=new o.default.Vector.cross(p,u).normalize(),m=new o.default.Vector.cross(u,d),f=Math.atan2(r,t);m.mult(Math.sin(f)),d.mult(Math.cos(f)).add(m);var h=Math.sqrt(t*t+r*r),y=new o.default.Vector.cross(u,d);// The vector that is orthogonal to both the front vector and
(c*=Math.pow(10,n))<this.cameraNear&&(c=this.cameraNear),c>this.cameraFar&&(c=this.cameraFar);// If the axis vector is likened to the z-axis, the front vector is
// the x-axis and the side vector is the y-axis. Rotate the up and front
// vectors respectively by thinking of them as rotations around the z-axis.
// Calculate the components by taking the dot product and
// calculate a rotation based on that.
var g=Math.cos(h),v=Math.sin(h),b=p.dot(u),x=p.dot(d),j=b*g+x*v,w=-b*v+x*g,_=p.dot(y);p.x=j*u.x+w*d.x+_*y.x,p.y=j*u.y+w*d.y+_*y.y,p.z=j*u.z+w*d.z+_*y.z,// so let's make the front vector into the vector from the center to the new eye.
d.mult(-v),u.mult(g).add(d).mult(c),this.camera(u.x+this.centerX,u.y+this.centerY,u.z+this.centerZ,this.centerX,this.centerY,this.centerZ,p.x,p.y,p.z)}/**
    * Returns true if camera is currently attached to renderer.
    * @method _isActive
    * @private
    */},{key:"_isActive",value:function(){return this===this._renderer._curCamera}}]),t)}(),/**
 * Sets the current (active) camera of a 3D sketch.
 * Allows for switching between multiple cameras.
 * @method setCamera
 * @param  {p5.Camera} cam  p5.Camera object
 * @for p5
 * @example
 * <div>
 * <code>
 * let cam1, cam2;
 * let currentCamera;
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   normalMaterial();
 *
 *   cam1 = createCamera();
 *   cam2 = createCamera();
 *   cam2.setPosition(30, 0, 50);
 *   cam2.lookAt(0, 0, 0);
 *   cam2.ortho();
 *
 *   // set variable for previously active camera:
 *   currentCamera = 1;
 *
 *   describe(
 *     'Canvas switches between two camera views, each showing a series of spinning 3D boxes.'
 *   );
 * }
 *
 * function draw() {
 *   background(200);
 *
 *   // camera 1:
 *   cam1.lookAt(0, 0, 0);
 *   cam1.setPosition(sin(frameCount / 60) * 200, 0, 100);
 *
 *   // every 100 frames, switch between the two cameras
 *   if (frameCount % 100 === 0) {
 *     if (currentCamera === 1) {
 *       setCamera(cam1);
 *       currentCamera = 0;
 *     } else {
 *       setCamera(cam2);
 *       currentCamera = 1;
 *     }
 *   }
 *
 *   drawBoxes();
 * }
 *
 * function drawBoxes() {
 *   rotateX(frameCount * 0.01);
 *   translate(-100, 0, 0);
 *   box(20);
 *   translate(35, 0, 0);
 *   box(20);
 *   translate(35, 0, 0);
 *   box(20);
 *   translate(35, 0, 0);
 *   box(20);
 *   translate(35, 0, 0);
 *   box(20);
 *   translate(35, 0, 0);
 *   box(20);
 *   translate(35, 0, 0);
 *   box(20);
 * }
 * </code>
 * </div>
 *
 * @alt
 * Canvas switches between two camera views, each showing a series of spinning
 * 3D boxes.
 */o.default.prototype.setCamera=function(t){this._renderer._curCamera=t,this._renderer.uPMatrix.set(t.projMatrix.mat4[0],t.projMatrix.mat4[1],t.projMatrix.mat4[2],t.projMatrix.mat4[3],t.projMatrix.mat4[4],t.projMatrix.mat4[5],t.projMatrix.mat4[6],t.projMatrix.mat4[7],t.projMatrix.mat4[8],t.projMatrix.mat4[9],t.projMatrix.mat4[10],t.projMatrix.mat4[11],t.projMatrix.mat4[12],t.projMatrix.mat4[13],t.projMatrix.mat4[14],t.projMatrix.mat4[15])};var u=o.default.Camera;n.default=u},{"../core/main":296,"core-js/modules/es.array.slice":182,"core-js/modules/es.math.hypot":187,"core-js/modules/es.string.sub":216}],345:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.reflect.get"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.typed-array.float32-array"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.uint8-clamped-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.reflect.get"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.typed-array.float32-array"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.uint8-clamped-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=d(t("../core/main")),s=p(t("../core/constants")),l=t("./p5.Texture"),c=t("./p5.RendererGL");function u(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return u=function(){return t},t}function p(t){if(t&&t.__esModule)return t;if(null===t||"object"!==w(t)&&"function"!=typeof t)return{default:t};var r=u();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var s=o?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}function d(t){return t&&t.__esModule?t:{default:t}}function m(t){return y(t)||h(t)||f()}function f(){throw TypeError("Invalid attempt to spread non-iterable instance")}function h(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function y(t){if(Array.isArray(t)){for(var r=0,n=Array(t.length);r<t.length;r++)n[r]=t[r];return n}}function g(t,r){return x(t)||b(t,r)||v()}function v(){throw TypeError("Invalid attempt to destructure non-iterable instance")}function b(t,r){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)){var n=[],o=!0,a=!1,s=void 0;try{for(var l,c=t[Symbol.iterator]();!(o=(l=c.next()).done)&&(n.push(l.value),!r||n.length!==r);o=!0);}catch(t){a=!0,s=t}finally{try{o||null==c.return||c.return()}finally{if(a)throw s}}return n}}function x(t){if(Array.isArray(t))return t}function j(t,r,n){return r in t?Object.defineProperty(t,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[r]=n,t}function w(t){return(w="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}function _(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function S(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function E(t,r,n){return r&&S(t.prototype,r),n&&S(t,n),t}function T(t,r,n){return(T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,r,n){var o=M(t,r);if(o){var a=Object.getOwnPropertyDescriptor(o,r);return a.get?a.get.call(n):a.value}})(t,r,n||t)}function M(t,r){for(;!Object.prototype.hasOwnProperty.call(t,r)&&null!==(t=L(t)););return t}function C(t,r){if("function"!=typeof r&&null!==r)throw TypeError("Super expression must either be null or a function");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),r&&O(t,r)}function O(t,r){return(O=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t})(t,r)}function N(t){function r(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}return function(){var n,o=L(t);if(r()){var a=L(this).constructor;n=Reflect.construct(o,arguments,a)}else n=o.apply(this,arguments);return A(this,n)}}function A(t,r){return r&&("object"===w(r)||"function"==typeof r)?r:R(t)}function R(t){if(void 0===t)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function L(t){return(L=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var I=/*#__PURE__*/function(t){C(n,t);var r=N(n);/**
   * A <a href="#/p5.Camera">p5.Camera</a> attached to a
   * <a href="#/p5.Framebuffer">p5.Framebuffer</a>.
   *
   * @class p5.FramebufferCamera
   * @constructor
   * @param {p5.Framebuffer} framebuffer The framebuffer this camera is
   * attached to
   * @private
   */function n(t){var o;return _(this,n),(o=r.call(this,t.target._renderer)).fbo=t,// images and graphics. Framebuffer cameras need to invert their y
// axes when being rendered to so that the texture comes out rightway up
// when read in shaders or image().
o.yScale=-1,o}return E(n,[{key:"_computeCameraDefaultSettings",value:function(){T(L(n.prototype),"_computeCameraDefaultSettings",this).call(this),this.defaultAspectRatio=this.fbo.width/this.fbo.height,this.defaultEyeZ=this.fbo.height/2/Math.tan(this.defaultCameraFOV/2),this.defaultCameraNear=.1*this.defaultEyeZ,this.defaultCameraFar=10*this.defaultEyeZ}/**
     * Resets the camera to a default perspective camera sized to match
     * the p5.Framebuffer it is attached to.
     *
     * @method resize
     * @private
     */},{key:"_resize",value:function(){// If we're using the default camera, update the aspect ratio
"default"===this.cameraType?(this._computeCameraDefaultSettings(),this._setDefaultCamera()):this.perspective(this.cameraFOV,this.fbo.width/this.fbo.height)}}]),n}(a.default.Camera);a.default.FramebufferCamera=I;var P=/*#__PURE__*/function(){/**
   * A <a href="#/p5.Texture">p5.Texture</a> corresponding to a property of a
   * <a href="#/p5.Framebuffer">p5.Framebuffer</a>.
   *
   * @class p5.FramebufferTexture
   * @param {p5.Framebuffer} framebuffer The framebuffer represented by this
   * texture
   * @param {String} property The property of the framebuffer represented by
   * this texture, either `color` or `depth`
   * @private
   */function t(r,n){_(this,t),this.framebuffer=r,this.property=n}return E(t,[{key:"rawTexture",value:function(){return this.framebuffer[this.property]}},{key:"width",get:function(){return this.framebuffer.width*this.framebuffer.density}},{key:"height",get:function(){return this.framebuffer.height*this.framebuffer.density}}]),t}();a.default.FramebufferTexture=P;var D=/*#__PURE__*/function(){/**
   * An object that one can draw to and then read as a texture. While similar
   * to a p5.Graphics, using a p5.Framebuffer as a texture will generally run
   * much faster, as it lives within the same WebGL context as the canvas it
   * is created on. It only works in WebGL mode.
   *
   * @class p5.Framebuffer
   * @constructor
   * @param {p5.Graphics|p5} target A p5 global instance or p5.Graphics
   * @param {Object} [settings] A settings object
   */function t(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};_(this,t),this.target=r,this.target._renderer.framebuffers.add(this),/**
     * A <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference
     * /Global_Objects/Uint8ClampedArray' target='_blank'>Uint8ClampedArray</a>
     * containing the values for all the pixels in the Framebuffer.
     *
     * Like the <a href="#/p5/pixels">main canvas pixels property</a>, call
     * <a href="#/p5.Framebuffer/loadPixels">loadPixels()</a> before reading
     * it, and call <a href="#/p5.Framebuffer.updatePixels">updatePixels()</a>
     * afterwards to update its data.
     *
     * Note that updating pixels via this property will be slower than
     * <a href="#/p5.Framebuffer/begin">drawing to the framebuffer directly.</a>
     * Consider using a shader instead of looping over pixels.
     *
     * @property {Number[]} pixels
     */this.pixels=[],this.format=n.format||s.UNSIGNED_BYTE,this.channels=n.channels||(r._renderer._pInst._glAttributes.alpha?s.RGBA:s.RGB),this.useDepth=void 0===n.depth||n.depth,this.depthFormat=n.depthFormat||s.FLOAT,this.textureFiltering=n.textureFiltering||s.LINEAR,void 0===n.antialias?this.antialiasSamples=r._renderer._pInst._glAttributes.antialias?2:0:"number"==typeof n.antialias?this.antialiasSamples=n.antialias:this.antialiasSamples=n.antialias?2:0,this.antialias=this.antialiasSamples>0,this.antialias&&r.webglVersion!==s.WEBGL2&&(console.warn("Antialiasing is unsupported in a WebGL 1 context"),this.antialias=!1),n.width&&n.height?(this.width=n.width,this.height=n.height,this.autoSized=!1):(void 0===n.width!=(void 0===n.height)&&console.warn("Please supply both width and height for a framebuffer to give it a size. Only one was given, so the framebuffer will match the size of its canvas."),this.width=r.width,this.height=r.height,this.autoSized=!0),this.density=n.density||r.pixelDensity();var o=r._renderer.GL;if(this.gl=o,this._checkIfFormatsAvailable(),this.framebuffer=o.createFramebuffer(),!this.framebuffer)throw Error("Unable to create a framebuffer");if(this.antialias&&(this.aaFramebuffer=o.createFramebuffer(),!this.aaFramebuffer))throw Error("Unable to create a framebuffer for antialiasing");this._recreateTextures();var a=this.target._renderer._curCamera;this.defaultCamera=this.createCamera(),this.target._renderer._curCamera=a}/**
   * Resizes the framebuffer to the given width and height.
   *
   * @method resize
   * @param {Number} width
   * @param {Number} height
   *
   * @example
   * <div>
   * <code>
   * let framebuffer;
   * function setup() {
   *   createCanvas(100, 100, WEBGL);
   *   framebuffer = createFramebuffer();
   *   noStroke();
   * }
   *
   * function mouseMoved() {
   *   framebuffer.resize(
   *     max(20, mouseX),
   *     max(20, mouseY)
   *   );
   * }
   *
   * function draw() {
   *   // Draw to the framebuffer
   *   framebuffer.begin();
   *   background(255);
   *   normalMaterial();
   *   sphere(20);
   *   framebuffer.end();
   *
   *   background(100);
   *   // Draw the framebuffer to the main canvas
   *   image(framebuffer, -width/2, -height/2);
   * }
   * </code>
   * </div>
   *
   * @alt
   * A red, green, and blue sphere is drawn in the middle of a white rectangle
   * which starts in the top left of the canvas and whose bottom right is at
   * the user's mouse
   */return E(t,[{key:"resize",value:function(t,r){this.autoSized=!1,this.width=t,this.height=r,this._handleResize()}/**
     * Gets or sets the pixel scaling for high pixel density displays. By
     * default, the density will match that of the canvas the framebuffer was
     * created on, which will match the display density.
     *
     * Call this method with no arguments to get the current density, or pass
     * in a number to set the density.
     *
     * @method pixelDensity
     * @param {Number} [density] A scaling factor for the number of pixels per
     * side of the framebuffer
     */},{key:"pixelDensity",value:function(t){if(!t)return this.density;this.autoSized=!1,this.density=t,this._handleResize()}/**
     * Gets or sets whether or not this framebuffer will automatically resize
     * along with the canvas it's attached to in order to match its size.
     *
     * Call this method with no arguments to see if it is currently auto-sized,
     * or pass in a boolean to set this property.
     *
     * @method autoSized
     * @param {Boolean} [autoSized] Whether or not the framebuffer should resize
     * along with the canvas it's attached to
     */},{key:"autoSized",value:function(t){if(void 0===t)return this.autoSized;this.autoSized=t,this._handleResize()}/**
     * Checks the capabilities of the current WebGL environment to see if the
     * settings supplied by the user are capable of being fulfilled. If they
     * are not, warnings will be logged and the settings will be changed to
     * something close that can be fulfilled.
     *
     * @private
     */},{key:"_checkIfFormatsAvailable",value:function(){var t=this.gl;this.useDepth&&this.target.webglVersion===s.WEBGL&&!t.getExtension("WEBGL_depth_texture")&&(console.warn("Unable to create depth textures in this environment. Falling back to a framebuffer without depth."),this.useDepth=!1),this.useDepth&&this.target.webglVersion===s.WEBGL&&this.depthFormat===s.FLOAT&&(console.warn("FLOAT depth format is unavailable in WebGL 1. Defaulting to UNSIGNED_INT."),this.depthFormat=s.UNSIGNED_INT),[s.UNSIGNED_BYTE,s.FLOAT,s.HALF_FLOAT].includes(this.format)||(console.warn("Unknown Framebuffer format. Please use UNSIGNED_BYTE, FLOAT, or HALF_FLOAT. Defaulting to UNSIGNED_BYTE."),this.format=s.UNSIGNED_BYTE),this.useDepth&&![s.UNSIGNED_INT,s.FLOAT].includes(this.depthFormat)&&(console.warn("Unknown Framebuffer depth format. Please use UNSIGNED_INT or FLOAT. Defaulting to FLOAT."),this.depthFormat=s.FLOAT);var r=(0,l.checkWebGLCapabilities)(this.target._renderer);r.float||this.format!==s.FLOAT||(console.warn("This environment does not support FLOAT textures. Falling back to UNSIGNED_BYTE."),this.format=s.UNSIGNED_BYTE),this.useDepth&&!r.float&&this.depthFormat===s.FLOAT&&(console.warn("This environment does not support FLOAT depth textures. Falling back to UNSIGNED_INT."),this.depthFormat=s.UNSIGNED_INT),r.halfFloat||this.format!==s.HALF_FLOAT||(console.warn("This environment does not support HALF_FLOAT textures. Falling back to UNSIGNED_BYTE."),this.format=s.UNSIGNED_BYTE),this.channels===s.RGB&&[s.FLOAT,s.HALF_FLOAT].includes(this.format)&&(console.warn("FLOAT and HALF_FLOAT formats do not work cross-platform with only RGB channels. Falling back to RGBA."),this.channels=s.RGBA)}/**
     * Creates new textures and renderbuffers given the current size of the
     * framebuffer.
     *
     * @private
     */},{key:"_recreateTextures",value:function(){var t=this.gl;this._updateSize();var r=t.getParameter(t.TEXTURE_BINDING_2D),n=t.getParameter(t.FRAMEBUFFER_BINDING),o=t.createTexture();if(!o)throw Error("Unable to create color texture");t.bindTexture(t.TEXTURE_2D,o);var l=this._glColorFormat();if(t.texImage2D(t.TEXTURE_2D,0,l.internalFormat,this.width*this.density,this.height*this.density,0,l.format,l.type,null),this.colorTexture=o,t.bindFramebuffer(t.FRAMEBUFFER,this.framebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,o,0),this.useDepth){// Create the depth texture
var c=t.createTexture();if(!c)throw Error("Unable to create depth texture");var u=this._glDepthFormat();t.bindTexture(t.TEXTURE_2D,c),t.texImage2D(t.TEXTURE_2D,0,u.internalFormat,this.width*this.density,this.height*this.density,0,u.format,u.type,null),t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,c,0),this.depthTexture=c}// Create separate framebuffer for antialiasing
if(this.antialias){if(this.colorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,this.colorRenderbuffer),t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.max(0,Math.min(this.antialiasSamples,t.getParameter(t.MAX_SAMPLES))),l.internalFormat,this.width*this.density,this.height*this.density),this.useDepth){var p=this._glDepthFormat();this.depthRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,this.depthRenderbuffer),t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.max(0,Math.min(this.antialiasSamples,t.getParameter(t.MAX_SAMPLES))),p.internalFormat,this.width*this.density,this.height*this.density)}t.bindFramebuffer(t.FRAMEBUFFER,this.aaFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,this.colorRenderbuffer),this.useDepth&&t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,this.depthRenderbuffer)}if(this.useDepth){this.depth=new P(this,"depthTexture");var d=t.NEAREST;this.depthP5Texture=new a.default.Texture(this.target._renderer,this.depth,{minFilter:d,magFilter:d}),this.target._renderer.textures.set(this.depth,this.depthP5Texture)}this.color=new P(this,"colorTexture");var m=this.textureFiltering===s.LINEAR?t.LINEAR:t.NEAREST;this.colorP5Texture=new a.default.Texture(this.target._renderer,this.color,{glMinFilter:m,glMagFilter:m}),this.target._renderer.textures.set(this.color,this.colorP5Texture),t.bindTexture(t.TEXTURE_2D,r),t.bindFramebuffer(t.FRAMEBUFFER,n)}/**
     * To create a WebGL texture, one needs to supply three pieces of information:
     * the type (the data type each channel will be stored as, e.g. int or float),
     * the format (the color channels that will each be stored in the previously
     * specified type, e.g. rgb or rgba), and the internal format (the specifics
     * of how data for each channel, in the aforementioned type, will be packed
     * together, such as how many bits to use, e.g. RGBA32F or RGB565.)
     *
     * The format and channels asked for by the user hint at what these values
     * need to be, and the WebGL version affects what options are avaiable.
     * This method returns the values for these three properties, given the
     * framebuffer's settings.
     *
     * @private
     */},{key:"_glColorFormat",value:function(){var t,r,n,o,a,l=this.gl;return{internalFormat:(t=this.format===s.FLOAT?l.FLOAT:this.format===s.HALF_FLOAT?this.target.webglVersion===s.WEBGL2?l.HALF_FLOAT:l.getExtension("OES_texture_half_float").HALF_FLOAT_OES:l.UNSIGNED_BYTE,r=this.channels===s.RGBA?l.RGBA:l.RGB,n=this.target.webglVersion===s.WEBGL2?(j(a={},l.FLOAT,j({},l.RGBA,l.RGBA32F)),j(a,l.HALF_FLOAT,j({},l.RGBA,l.RGBA16F)),j(a,l.UNSIGNED_BYTE,(j(o={},l.RGBA,l.RGBA8),j(o,l.RGB,l.RGB8),o)),a)[t][r]:this.format===s.HALF_FLOAT?l.RGBA:r),format:r,type:t}}/**
     * To create a WebGL texture, one needs to supply three pieces of information:
     * the type (the data type each channel will be stored as, e.g. int or float),
     * the format (the color channels that will each be stored in the previously
     * specified type, e.g. rgb or rgba), and the internal format (the specifics
     * of how data for each channel, in the aforementioned type, will be packed
     * together, such as how many bits to use, e.g. RGBA32F or RGB565.)
     *
     * This method takes into account the settings asked for by the user and
     * returns values for these three properties that can be used for the
     * texture storing depth information.
     *
     * @private
     */},{key:"_glDepthFormat",value:function(){var t,r,n,o=this.gl;return t=this.depthFormat===s.FLOAT?o.FLOAT:o.UNSIGNED_INT,r=o.DEPTH_COMPONENT,{internalFormat:n=this.target.webglVersion===s.WEBGL2?this.depthFormat===s.FLOAT?o.DEPTH_COMPONENT32F:o.DEPTH_COMPONENT24:o.DEPTH_COMPONENT,format:r,type:t}}/**
     * A method that will be called when recreating textures. If the framebuffer
     * is auto-sized, it will update its width, height, and density properties.
     *
     * @private
     */},{key:"_updateSize",value:function(){this.autoSized&&(this.width=this.target.width,this.height=this.target.height,this.density=this.target.pixelDensity())}/**
     * Called when the canvas that the framebuffer is attached to resizes. If the
     * framebuffer is auto-sized, it will update its textures to match the new
     * size.
     *
     * @private
     */},{key:"_canvasSizeChanged",value:function(){this.autoSized&&this._handleResize()}/**
     * Called when the size of the framebuffer has changed (either by being
     * manually updated or from auto-size updates when its canvas changes size.)
     * Old textures and renderbuffers will be deleted, and then recreated with the
     * new size.
     *
     * @private
     */},{key:"_handleResize",value:function(){var t=this.color,r=this.depth,n=this.colorRenderbuffer,o=this.depthRenderbuffer;this._deleteTexture(t),r&&this._deleteTexture(r);var a=this.gl;n&&a.deleteRenderbuffer(n),o&&a.deleteRenderbuffer(o),this._recreateTextures(),this.defaultCamera._resize()}/**
     * Creates and returns a new
     * <a href="#/p5.FramebufferCamera">p5.FramebufferCamera</a> to be used
     * while drawing to this framebuffer. The camera will be set as the
     * currently active camera.
     *
     * @method createCamera
     * @returns {p5.Camera} A new camera
     */},{key:"createCamera",value:function(){var t=new I(this);return t._computeCameraDefaultSettings(),t._setDefaultCamera(),this.target._renderer._curCamera=t,t}/**
     * Given a raw texture wrapper, delete its stored texture from WebGL memory,
     * and remove it from p5's list of active textures.
     *
     * @param {p5.FramebufferTexture} texture
     * @private
     */},{key:"_deleteTexture",value:function(t){this.gl.deleteTexture(t.rawTexture()),this.target._renderer.textures.delete(t)}/**
     * Removes the framebuffer and frees its resources.
     *
     * @method remove
     *
     * @example
     * <div>
     * <code>
     * let framebuffer;
     * function setup() {
     *   createCanvas(100, 100, WEBGL);
     * }
     *
     * function draw() {
     *   const useFramebuffer = (frameCount % 120) > 60;
     *   if (useFramebuffer && !framebuffer) {
     *     // Create a new framebuffer for us to use
     *     framebuffer = createFramebuffer();
     *   } else if (!useFramebuffer && framebuffer) {
     *     // Free the old framebuffer's resources
     *     framebuffer.remove();
     *     framebuffer = undefined;
     *   }
     *
     *   background(255);
     *   if (useFramebuffer) {
     *     // Draw to the framebuffer
     *     framebuffer.begin();
     *     background(255);
     *     rotateX(frameCount * 0.01);
     *     rotateY(frameCount * 0.01);
     *     fill(255, 0, 0);
     *     box(30);
     *     framebuffer.end();
     *
     *     image(framebuffer, -width/2, -height/2);
     *   }
     * }
     * </code>
     * </div>
     *
     * @alt
     * A rotating red cube blinks on and off every second.
     */},{key:"remove",value:function(){var t=this.gl;this._deleteTexture(this.color),this.depth&&this._deleteTexture(this.depth),t.deleteFramebuffer(this.framebuffer),this.aaFramebuffer&&t.deleteFramebuffer(this.aaFramebuffer),this.depthRenderbuffer&&t.deleteRenderbuffer(this.depthRenderbuffer),this.colorRenderbuffer&&t.deleteRenderbuffer(this.colorRenderbuffer),this.target._renderer.framebuffers.delete(this)}/**
     * Begin drawing to this framebuffer. Subsequent drawing functions to the
     * canvas the framebuffer is attached to will not be immediately visible, and
     * will instead be drawn to the framebuffer's texture. Call
     * <a href="#/p5.Framebuffer/end">end()</a> when finished to make draw
     * functions go right to the canvas again and to be able to read the
     * contents of the framebuffer's texture.
     *
     * @method begin
     *
     * @example
     * <div>
     * <code>
     * let framebuffer;
     * function setup() {
     *   createCanvas(100, 100, WEBGL);
     *   framebuffer = createFramebuffer();
     *   noStroke();
     * }
     *
     * function draw() {
     *   // Draw to the framebuffer
     *   framebuffer.begin();
     *   background(255);
     *   translate(0, 10*sin(frameCount * 0.01), 0);
     *   rotateX(frameCount * 0.01);
     *   rotateY(frameCount * 0.01);
     *   fill(255, 0, 0);
     *   box(50);
     *   framebuffer.end();
     *
     *   background(100);
     *   // Draw the framebuffer to the main canvas
     *   image(framebuffer, -50, -50, 25, 25);
     *   image(framebuffer, 0, 0, 35, 35);
     * }
     * </code>
     * </div>
     *
     * @alt
     * A video of a floating and rotating red cube is pasted twice on the
     * canvas: once in the top left, and again, larger, in the bottom right.
     */},{key:"begin",value:function(){var t=this.gl;this.prevFramebuffer=t.getParameter(t.FRAMEBUFFER_BINDING),this.antialias?// than directly to the texture. In end() we will copy from the
// renderbuffer to the texture.
t.bindFramebuffer(t.FRAMEBUFFER,this.aaFramebuffer):t.bindFramebuffer(t.FRAMEBUFFER,this.framebuffer),this.prevViewport=t.getParameter(t.VIEWPORT),t.viewport(0,0,this.width*this.density,this.height*this.density),this.target.push(),// RendererGL.reset() does, but this does not try to clear any buffers;
// it only sets the camera.
this.target.setCamera(this.defaultCamera),this.target._renderer.uMVMatrix.set(this.target._renderer._curCamera.cameraMatrix.mat4[0],this.target._renderer._curCamera.cameraMatrix.mat4[1],this.target._renderer._curCamera.cameraMatrix.mat4[2],this.target._renderer._curCamera.cameraMatrix.mat4[3],this.target._renderer._curCamera.cameraMatrix.mat4[4],this.target._renderer._curCamera.cameraMatrix.mat4[5],this.target._renderer._curCamera.cameraMatrix.mat4[6],this.target._renderer._curCamera.cameraMatrix.mat4[7],this.target._renderer._curCamera.cameraMatrix.mat4[8],this.target._renderer._curCamera.cameraMatrix.mat4[9],this.target._renderer._curCamera.cameraMatrix.mat4[10],this.target._renderer._curCamera.cameraMatrix.mat4[11],this.target._renderer._curCamera.cameraMatrix.mat4[12],this.target._renderer._curCamera.cameraMatrix.mat4[13],this.target._renderer._curCamera.cameraMatrix.mat4[14],this.target._renderer._curCamera.cameraMatrix.mat4[15])}/**
     * After having previously called
     * <a href="#/p5.Framebuffer/begin">begin()</a>, this method stops drawing
     * functions from going to the framebuffer's texture, allowing them to go
     * right to the canvas again. After this, one can read from the framebuffer's
     * texture.
     *
     * @method end
     */},{key:"end",value:function(){var t=this.gl;if(this.antialias){t.bindFramebuffer(t.READ_FRAMEBUFFER,this.aaFramebuffer),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,this.framebuffer);var r=[[t.COLOR_BUFFER_BIT,this.colorP5Texture.glMagFilter]];this.useDepth&&r.push([t.DEPTH_BUFFER_BIT,this.depthP5Texture.glMagFilter]);for(var n=0,o=r;n<o.length;n++){var a=g(o[n],2),s=a[0],l=a[1];t.blitFramebuffer(0,0,this.width*this.density,this.height*this.density,0,0,this.width*this.density,this.height*this.density,s,l)}}t.bindFramebuffer(t.FRAMEBUFFER,this.prevFramebuffer),t.viewport.apply(t,m(this.prevViewport)),this.target.pop()}/**
     * Run a function while drawing to the framebuffer rather than to its canvas.
     * This is equivalent to calling `framebuffer.begin()`, running the function,
     * and then calling `framebuffer.end()`, but ensures that one never
     * accidentally forgets `begin` or `end`.
     *
     * @method draw
     * @param {Function} callback A function to run that draws to the canvas. The
     * function will immediately be run, but it will draw to the framebuffer
     * instead of the canvas.
     *
     * @example
     * <div>
     * <code>
     * let framebuffer;
     * function setup() {
     *   createCanvas(100, 100, WEBGL);
     *   framebuffer = createFramebuffer();
     *   noStroke();
     * }
     *
     * function draw() {
     *   // Draw to the framebuffer
     *   framebuffer.draw(function() {
     *     background(255);
     *     translate(0, 10*sin(frameCount * 0.01), 0);
     *     rotateX(frameCount * 0.01);
     *     rotateY(frameCount * 0.01);
     *     fill(255, 0, 0);
     *     box(50);
     *   });
     *
     *   background(100);
     *   // Draw the framebuffer to the main canvas
     *   image(framebuffer, -50, -50, 25, 25);
     *   image(framebuffer, 0, 0, 35, 35);
     * }
     * </code>
     * </div>
     *
     * @alt
     * A video of a floating and rotating red cube is pasted twice on the
     * canvas: once in the top left, and again, larger, in the bottom right.
     */},{key:"draw",value:function(t){this.begin(),t(),this.end()}/**
     * Call this befpre updating <a href="#/p5.Framebuffer/pixels">pixels</a>
     * and calling <a href="#/p5.Framebuffer/updatePixels">updatePixels</a>
     * to replace the content of the framebuffer with the data in the pixels
     * array.
     */},{key:"loadPixels",value:function(){var t=this.gl,r=t.getParameter(t.FRAMEBUFFER_BINDING);t.bindFramebuffer(t.FRAMEBUFFER,this.framebuffer);var n=this._glColorFormat();this.pixels=(0,c.readPixelsWebGL)(this.pixels,t,this.framebuffer,0,0,this.width*this.density,this.height*this.density,n.format,n.type),t.bindFramebuffer(t.FRAMEBUFFER,r)}/**
     * Get a region of pixels from the canvas in the form of a
     * <a href="#/p5.Image">p5.Image</a>, or a single pixel as an array of
     * numbers.
     *
     * Returns an array of [R,G,B,A] values for any pixel or grabs a section of
     * an image. If the Framebuffer has been set up to not store alpha values, then
     * only [R,G,B] will be returned. If no parameters are specified, the entire
     * image is returned.
     * Use the x and y parameters to get the value of one pixel. Get a section of
     * the display window by specifying additional w and h parameters. When
     * getting an image, the x and y parameters define the coordinates for the
     * upper-left corner of the image, regardless of the current <a href="#/p5/imageMode">imageMode()</a>.
     *
     * @method get
     * @param  {Number}         x x-coordinate of the pixel
     * @param  {Number}         y y-coordinate of the pixel
     * @param  {Number}         w width of the section to be returned
     * @param  {Number}         h height of the section to be returned
     * @return {p5.Image}       the rectangle <a href="#/p5.Image">p5.Image</a>
     */},{key:"get",value:function(t,r,n,o){a.default._validateParameters("p5.Framebuffer.get",arguments);var s=this._glColorFormat();if(void 0===t&&void 0===r)t=0,r=0,n=this.width,o=this.height;else if(void 0===n&&void 0===o)return(t<0||r<0||t>=this.width||r>=this.height)&&(console.warn("The x and y values passed to p5.Framebuffer.get are outside of its range and will be clamped."),t=this.target.constrain(t,0,this.width-1),r=this.target.constrain(r,0,this.height-1)),(0,c.readPixelWebGL)(this.gl,this.framebuffer,t*this.density,r*this.density,s.format,s.type);t=this.target.constrain(t,0,this.width-1),r=this.target.constrain(r,0,this.height-1),n=this.target.constrain(n,1,this.width-t),o=this.target.constrain(o,1,this.height-r);var l=(0,c.readPixelsWebGL)(void 0,this.gl,this.framebuffer,t*this.density,r*this.density,n*this.density,o*this.density,s.format,s.type),u=new Uint8ClampedArray(n*o*this.density*this.density*4);// Framebuffer data might be either a Uint8Array or Float32Array
// framebuffer is in RGB mode instead of RGBA) to 255
u.fill(255);for(var p=s.type===this.gl.RGB?3:4,d=0;d<o*this.density;d++)for(var m=0;m<n*this.density;m++)for(var f=0;f<4;f++){var h=(d*n*this.density+m)*4+f;if(f<p){// Find the index of this pixel in `rawData`, which might have a
// different number of channels
var y=4===p?h:(d*n*this.density+m)*p+f;u[h]=l[y]}}// Create an image from the data
var g=new a.default.Image(n*this.density,o*this.density);return g.imageData=g.canvas.getContext("2d").createImageData(g.width,g.height),g.imageData.data.set(u),g.pixels=g.imageData.data,g.updatePixels(),1!==this.density&&g.resize(n,o),g}/**
     * Call this after initially calling <a href="#/p5.Framebuffer/loadPixels">
     * loadPixels()</a> and updating <a href="#/p5.Framebuffer/pixels">pixels</a>
     * to replace the content of the framebuffer with the data in the pixels
     * array.
     *
     * This will also clear the depth buffer so that any future drawing done
     * afterwards will go on top.
     *
     * @example
     * <div>
     * <code>
     * let framebuffer;
     * function setup() {
     *   createCanvas(100, 100, WEBGL);
     *   framebuffer = createFramebuffer();
     * }
      * function draw() {
     *   noStroke();
     *   lights();
     *
     *   // Draw a sphere to the framebuffer
     *   framebuffer.begin();
     *   background(0);
     *   sphere(25);
     *   framebuffer.end();
     *
     *   // Load its pixels and draw a gradient over the lower half of the canvas
     *   framebuffer.loadPixels();
     *   for (let y = height/2; y < height; y++) {
     *     for (let x = 0; x < width; x++) {
     *       const idx = (y * width + x) * 4;
     *       framebuffer.pixels[idx] = (x / width) * 255;
     *       framebuffer.pixels[idx + 1] = (y / height) * 255;
     *       framebuffer.pixels[idx + 2] = 255;
     *       framebuffer.pixels[idx + 3] = 255;
     *     }
     *   }
     *   framebuffer.updatePixels();
     *
     *   // Draw a cube on top of the pixels we just wrote
     *   framebuffer.begin();
     *   push();
     *   translate(20, 20);
     *   rotateX(0.5);
     *   rotateY(0.5);
     *   box(20);
     *   pop();
     *   framebuffer.end();
     *
     *   image(framebuffer, -width/2, -height/2);
     *   noLoop();
     * }
     * </code>
     * </div>
     *
     * @alt
     * A sphere partly occluded by a gradient from cyan to white to magenta on
     * the lower half of the canvas, with a 3D cube drawn on top of that in the
     * lower right corner.
     */},{key:"updatePixels",value:function(){var t=this.gl;this.colorP5Texture.bindTexture();var r=this._glColorFormat(),n=r.format===t.RGBA?4:3,o=this.width*this.height*this.density*this.density*n,a=r.type===t.UNSIGNED_BYTE?Uint8Array:Float32Array;if(!(this.pixels instanceof a)||this.pixels.length!==o)throw Error("The pixels array has not been set correctly. Please call loadPixels() before updatePixels().");t.texImage2D(t.TEXTURE_2D,0,r.internalFormat,this.width*this.density,this.height*this.density,0,r.format,r.type,this.pixels),this.colorP5Texture.unbindTexture(),this.prevFramebuffer=t.getParameter(t.FRAMEBUFFER_BINDING),this.antialias?(// We need to make sure the antialiased framebuffer also has the updated
// pixels so that if more is drawn to it, it goes on top of the updated
// pixels instead of replacing them.
// We can't blit the framebuffer to the multisampled antialias
// framebuffer to leave both in the same state, so instead we have
// to use image() to put the framebuffer texture onto the antialiased
// framebuffer.
this.begin(),this.target.push(),this.target.imageMode(this.target.CENTER),this.target.resetMatrix(),this.target.noStroke(),this.target.clear(),this.target.image(this,0,0),this.target.pop(),this.useDepth&&(t.clearDepth(1),t.clear(t.DEPTH_BUFFER_BIT)),this.end()):(t.bindFramebuffer(t.FRAMEBUFFER,this.framebuffer),this.useDepth&&(t.clearDepth(1),t.clear(t.DEPTH_BUFFER_BIT)),t.bindFramebuffer(t.FRAMEBUFFER,this.prevFramebuffer))}}]),t}();/**
 * A texture with the color information of the framebuffer. Pass this (or the
 * framebuffer itself) to <a href="#/p5/texture">texture()</a> to draw it to
 * the canvas, or pass it to a shader with
 * <a href="#/p5.Shader/setUniform">setUniform()</a> to read its data.
 *
 * Since Framebuffers are controlled by WebGL, their y coordinates are stored
 * flipped compared to images and videos. When texturing with a framebuffer
 * texture, you may want to flip vertically, e.g. with
 * `plane(framebuffer.width, -framebuffer.height)`.
 *
 * @property {p5.FramebufferTexture} color
 * @for p5.Framebuffer
 *
 * @example
 * <div>
 * <code>
 * let framebuffer;
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   framebuffer = createFramebuffer();
 *   noStroke();
 * }
 *
 * function draw() {
 *   // Draw to the framebuffer
 *   framebuffer.begin();
 *   background(255);
 *   normalMaterial();
 *   sphere(20);
 *   framebuffer.end();
 *
 *   // Draw the framebuffer to the main canvas
 *   image(framebuffer.color, -width/2, -height/2);
 * }
 * </code>
 * </div>
 *
 * @alt
 * A red, green, and blue sphere in the middle of the canvas
 *//**
 * A texture with the depth information of the framebuffer. If the framebuffer
 * was created with `{ depth: false }` in its settings, then this property will
 * be undefined. Pass this to <a href="#/p5/texture">texture()</a> to draw it to
 * the canvas, or pass it to a shader with
 * <a href="#/p5.Shader/setUniform">setUniform()</a> to read its data.
 *
 * Since Framebuffers are controlled by WebGL, their y coordinates are stored
 * flipped compared to images and videos. When texturing with a framebuffer
 * texture, you may want to flip vertically, e.g. with
 * `plane(framebuffer.width, -framebuffer.height)`.
 *
 * @property {p5.FramebufferTexture|undefined} depth
 * @for p5.Framebuffer
 *
 * @example
 * <div>
 * <code>
 * let framebuffer;
 * let depthShader;
 *
 * const vert = `
 * precision highp float;
 * attribute vec3 aPosition;
 * attribute vec2 aTexCoord;
 * uniform mat4 uModelViewMatrix;
 * uniform mat4 uProjectionMatrix;
 * varying vec2 vTexCoord;
 * void main() {
 *   vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);
 *   gl_Position = uProjectionMatrix * viewModelPosition;
 *   vTexCoord = aTexCoord;
 * }
 * `;
 *
 * const frag = `
 * precision highp float;
 * varying vec2 vTexCoord;
 * uniform sampler2D depth;
 * void main() {
 *   float depthVal = texture2D(depth, vTexCoord).r;
 *   gl_FragColor = mix(
 *     vec4(1., 1., 0., 1.), // yellow
 *     vec4(0., 0., 1., 1.), // blue
 *     pow(depthVal, 6.)
 *   );
 * }
 * `;
 *
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   framebuffer = createFramebuffer();
 *   depthShader = createShader(vert, frag);
 *   noStroke();
 * }
 *
 * function draw() {
 *   // Draw to the framebuffer
 *   framebuffer.begin();
 *   background(255);
 *   rotateX(frameCount * 0.01);
 *   box(20, 20, 100);
 *   framebuffer.end();
 *
 *   push();
 *   shader(depthShader);
 *   depthShader.setUniform('depth', framebuffer.depth);
 *   plane(framebuffer.width, framebuffer.height);
 *   pop();
 * }
 * </code>
 * </div>
 *
 * @alt
 * A video of a rectangular prism rotating, with parts closest to the camera
 * appearing yellow and colors getting progressively more blue the farther
 * from the camera they go
 */a.default.Framebuffer=D;var F=D;n.default=F},{"../core/constants":284,"../core/main":296,"./p5.RendererGL":351,"./p5.Texture":353,"core-js/modules/es.array.fill":172,"core-js/modules/es.array.from":175,"core-js/modules/es.array.includes":176,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.get-prototype-of":196,"core-js/modules/es.object.to-string":198,"core-js/modules/es.reflect.construct":200,"core-js/modules/es.reflect.get":201,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.includes":207,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.typed-array.copy-within":221,"core-js/modules/es.typed-array.every":222,"core-js/modules/es.typed-array.fill":223,"core-js/modules/es.typed-array.filter":224,"core-js/modules/es.typed-array.find":226,"core-js/modules/es.typed-array.find-index":225,"core-js/modules/es.typed-array.float32-array":227,"core-js/modules/es.typed-array.for-each":229,"core-js/modules/es.typed-array.includes":230,"core-js/modules/es.typed-array.index-of":231,"core-js/modules/es.typed-array.iterator":234,"core-js/modules/es.typed-array.join":235,"core-js/modules/es.typed-array.last-index-of":236,"core-js/modules/es.typed-array.map":237,"core-js/modules/es.typed-array.reduce":239,"core-js/modules/es.typed-array.reduce-right":238,"core-js/modules/es.typed-array.reverse":240,"core-js/modules/es.typed-array.set":241,"core-js/modules/es.typed-array.slice":242,"core-js/modules/es.typed-array.some":243,"core-js/modules/es.typed-array.sort":244,"core-js/modules/es.typed-array.subarray":245,"core-js/modules/es.typed-array.to-locale-string":246,"core-js/modules/es.typed-array.to-string":247,"core-js/modules/es.typed-array.uint8-array":250,"core-js/modules/es.typed-array.uint8-clamped-array":251,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],346:[function(t,r,n){t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.string.sub"),t("core-js/modules/web.dom-collections.for-each"),t("core-js/modules/es.array.for-each"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.string.sub"),t("core-js/modules/web.dom-collections.for-each"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}function s(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function l(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function c(t,r,n){return r&&l(t.prototype,r),n&&l(t,n),t}/**
 * p5 Geometry class
 * @class p5.Geometry
 * @constructor
 * @param  {Integer} [detailX] number of vertices along the x-axis.
 * @param  {Integer} [detailY] number of vertices along the y-axis.
 * @param {function} [callback] function to call upon object instantiation.
 */o.default.Geometry=/*#__PURE__*/function(){function t(r,n,o){return s(this,t),//@type [p5.Vector]
this.vertices=[],this.lineVertices=[],// line segment, both should be equal. At an endpoint, one or the other
// will not exist and will be all 0. In joins between line segments, they
// may be different, as they will be the tangents on either side of the join.
this.lineTangentsIn=[],this.lineTangentsOut=[],// side of the centerline the vertex will be placed. The sign of the number
// will represent the side of the centerline, and the absolute value will be
// used as an enum to determine which part of the cap or join each vertex
// represents. See the doc comments for _addCap and _addJoin for diagrams.
this.lineSides=[],//@type [p5.Vector]
//[p5.Vector, p5.Vector, p5.Vector,p5.Vector, p5.Vector, p5.Vector,...]
this.vertexNormals=[],//[[0, 1, 2], [2, 1, 3], ...]
this.faces=[],//[[0.0,0.0],[1.0,0.0], ...]
this.uvs=[],//based on faces for most objects;
this.edges=[],this.vertexColors=[],this.vertexStrokeColors=[],// vertexStrokeColors in _edgesToVertices()
this.lineVertexColors=[],this.detailX=void 0!==r?r:1,this.detailY=void 0!==n?n:1,this.dirtyFlags={},o instanceof Function&&o.call(this),this;// TODO: is this a constructor?
}return c(t,[{key:"reset",value:function(){this.lineVertices.length=0,this.lineTangentsIn.length=0,this.lineTangentsOut.length=0,this.lineSides.length=0,this.vertices.length=0,this.edges.length=0,this.vertexColors.length=0,this.vertexStrokeColors.length=0,this.lineVertexColors.length=0,this.vertexNormals.length=0,this.uvs.length=0,this.dirtyFlags={}}/**
    * computes faces for geometry objects based on the vertices.
    * @method computeFaces
    * @chainable
    */},{key:"computeFaces",value:function(){this.faces.length=0;for(var t,r,n,o,a=this.detailX+1,s=0;s<this.detailY;s++)for(var l=0;l<this.detailX;l++)t=s*a+l,r=s*a+l+1,n=(s+1)*a+l+1,o=(s+1)*a+l,this.faces.push([t,r,o]),this.faces.push([o,r,n]);return this}},{key:"_getFaceNormal",value:function(t){//This assumes that vA->vB->vC is a counter-clockwise ordering
var r=this.faces[t],n=this.vertices[r[0]],a=this.vertices[r[1]],s=this.vertices[r[2]],l=o.default.Vector.sub(a,n),c=o.default.Vector.sub(s,n),u=o.default.Vector.cross(l,c),p=o.default.Vector.mag(u),d=p/(o.default.Vector.mag(l)*o.default.Vector.mag(c));return 0===d||isNaN(d)?(console.warn("p5.Geometry.prototype._getFaceNormal:","face has colinear sides or a repeated vertex"),u):(d>1&&(d=1),u.mult(Math.asin(d)/p))}/**
    * computes smooth normals per vertex as an average of each
    * face.
    * @method computeNormals
    * @chainable
    */},{key:"computeNormals",value:function(){var t,r=this,n=this.vertexNormals,a=this.vertices,s=this.faces;for(t=0,n.length=0;t<a.length;++t)n.push(new o.default.Vector);for(// loop through all the faces adding its normal to the normal
// of each of its vertices
s.forEach(function(t,o){for(var a=r._getFaceNormal(o),s=0;s<3;++s)n[t[s]].add(a)}),t=0;t<a.length;++t)n[t].normalize();return this}/**
    * Averages the vertex normals. Used in curved
    * surfaces
    * @method averageNormals
    * @chainable
    */},{key:"averageNormals",value:function(){for(var t=0;t<=this.detailY;t++){var r=this.detailX+1,n=o.default.Vector.add(this.vertexNormals[t*r],this.vertexNormals[t*r+this.detailX]);n=o.default.Vector.div(n,2),this.vertexNormals[t*r]=n,this.vertexNormals[t*r+this.detailX]=n}return this}/**
    * Averages pole normals.  Used in spherical primitives
    * @method averagePoleNormals
    * @chainable
    */},{key:"averagePoleNormals",value:function(){for(var t=new o.default.Vector(0,0,0),r=0;r<this.detailX;r++)t.add(this.vertexNormals[r]);t=o.default.Vector.div(t,this.detailX);for(var n=0;n<this.detailX;n++)this.vertexNormals[n]=t;//average the south pole
t=new o.default.Vector(0,0,0);for(var a=this.vertices.length-1;a>this.vertices.length-1-this.detailX;a--)t.add(this.vertexNormals[a]);t=o.default.Vector.div(t,this.detailX);for(var s=this.vertices.length-1;s>this.vertices.length-1-this.detailX;s--)this.vertexNormals[s]=t;return this}/**
    * Create a 2D array for establishing stroke connections
    * @private
    * @chainable
    */},{key:"_makeTriangleEdges",value:function(){this.edges.length=0;for(var t=0;t<this.faces.length;t++)this.edges.push([this.faces[t][0],this.faces[t][1]]),this.edges.push([this.faces[t][1],this.faces[t][2]]),this.edges.push([this.faces[t][2],this.faces[t][0]]);return this}/**
    * Converts each line segment into the vertices and vertex attributes needed
    * to turn the line into a polygon on screen. This will include:
    * - Two triangles line segment to create a rectangle
    * - Two triangles per endpoint to create a stroke cap rectangle. A fragment
    *   shader is responsible for displaying the appropriate cap style within
    *   that rectangle.
    * - Four triangles per join between adjacent line segments, creating a quad on
    *   either side of the join, perpendicular to the lines. A vertex shader will
    *   discard the quad in the "elbow" of the join, and a fragment shader will
    *   display the appropriate join style within the remaining quad.
    *
    * @private
    * @chainable
    */},{key:"_edgesToVertices",value:function(){this.lineVertices.length=0,this.lineTangentsIn.length=0,this.lineTangentsOut.length=0,this.lineSides.length=0;for(var t,r=this.edges.length>1&&this.edges[0][0]===this.edges[this.edges.length-1][1],n=!1,o=0;o<this.edges.length;o++){var a=this.edges[o-1],s=this.edges[o],l=this.vertices[s[0]],c=this.vertices[s[1]],u=this.vertexStrokeColors.length>0?this.vertexStrokeColors.slice(4*s[0],(s[0]+1)*4):[0,0,0,0],p=this.vertexStrokeColors.length>0?this.vertexStrokeColors.slice(4*s[1],(s[1]+1)*4):[0,0,0,0],d=c.copy().sub(l).normalize(),m=d.magSq()>0;m&&this._addSegment(l,c,u,p,d),o>0&&a[1]===s[0]?(t&&m&&d.dot(t)<1-1e-8&&this._addJoin(l,t,d,u),!m||n||r||(this._addCap(l,d.copy().mult(-1),u),n=!0)):(n=!1,m&&(!r||o>0)&&(this._addCap(l,d.copy().mult(-1),u),n=!0),t&&(!r||o<this.edges.length-1)&&(// Close off the last segment with a cap
this._addCap(this.vertices[a[1]],t,u),t=void 0)),o===this.edges.length-1&&(r?this._addJoin(c,d,this.vertices[this.edges[0][1]].copy().sub(c).normalize(),p):this._addCap(c,d,p)),m&&(t=d)}return this}/**
    * Adds the vertices and vertex attributes for two triangles making a rectangle
    * for a straight line segment. A vertex shader is responsible for picking
    * proper coordinates on the screen given the centerline positions, the tangent,
    * and the side of the centerline each vertex belongs to. Sides follow the
    * following scheme:
    *
    *  -1            -1
    *   o-------------o
    *   |             |
    *   o-------------o
    *   1             1
    *
    * @private
    * @chainable
    */},{key:"_addSegment",value:function(t,r,n,o,a){var s=t.array(),l=r.array(),c=a.array();this.lineSides.push(1,-1,1,1,-1,-1);for(var u=0,p=[this.lineTangentsIn,this.lineTangentsOut];u<p.length;u++)p[u].push(c,c,c,c,c,c);return this.lineVertices.push(s,s,l,l,s,l),this.lineVertexColors.push(n,n,o,o,n,o),this}/**
    * Adds the vertices and vertex attributes for two triangles representing the
    * stroke cap of a line. A fragment shader is responsible for displaying the
    * appropriate cap style within the rectangle they make.
    *
    * The lineSides buffer will include the following values for the points on
    * the cap rectangle:
    *
    *           -1  -2
    * -----------o---o
    *            |   |
    * -----------o---o
    *            1   2
    * @private
    * @chainable
    */},{key:"_addCap",value:function(t,r,n){for(var o=t.array(),a=r.array(),s=[0,0,0],l=0;l<6;l++)this.lineVertices.push(o),this.lineTangentsIn.push(a),this.lineTangentsOut.push(s),this.lineVertexColors.push(n);return this.lineSides.push(-1,-2,2,2,1,-1),this}/**
    * Adds the vertices and vertex attributes for four triangles representing a
    * join between two adjacent line segments. This creates a quad on either side
    * of the shared vertex of the two line segments, with each quad perpendicular
    * to the lines. A vertex shader will discard all but the quad in the "elbow" of
    * the join, and a fragment shader will display the appropriate join style
    * within the remaining quad.
    *
    * The lineSides buffer will include the following values for the points on
    * the join rectangles:
    *
    *            -1     -2
    * -------------o----o
    *              |    |
    *       1 o----o----o -3
    *         |    | 0  |
    * --------o----o    |
    *        2|    3    |
    *         |         |
    *         |         |
    * @private
    * @chainable
    */},{key:"_addJoin",value:function(t,r,n,o){for(var a=t.array(),s=r.array(),l=n.array(),c=0;c<12;c++)this.lineVertices.push(a),this.lineTangentsIn.push(s),this.lineTangentsOut.push(l),this.lineVertexColors.push(o);for(var u=0,p=[-1,1];u<p.length;u++){var d=p[u];this.lineSides.push(d,2*d,3*d,d,3*d,0)}return this}/**
    * Modifies all vertices to be centered within the range -100 to 100.
    * @method normalize
    * @chainable
    */},{key:"normalize",value:function(){if(this.vertices.length>0){for(var t=this.vertices[0].copy(),r=this.vertices[0].copy(),n=0;n<this.vertices.length;n++)t.x=Math.max(t.x,this.vertices[n].x),r.x=Math.min(r.x,this.vertices[n].x),t.y=Math.max(t.y,this.vertices[n].y),r.y=Math.min(r.y,this.vertices[n].y),t.z=Math.max(t.z,this.vertices[n].z),r.z=Math.min(r.z,this.vertices[n].z);for(var a=o.default.Vector.lerp(t,r,.5),s=o.default.Vector.sub(t,r),l=200/Math.max(Math.max(s.x,s.y),s.z),c=0;c<this.vertices.length;c++)this.vertices[c].sub(a),this.vertices[c].mult(l)}return this}}]),t}();var u=o.default.Geometry;n.default=u},{"../core/main":296,"core-js/modules/es.array.for-each":174,"core-js/modules/es.array.slice":182,"core-js/modules/es.string.sub":216,"core-js/modules/web.dom-collections.for-each":253}],347:[function(t,r,n){t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.typed-array.float32-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.typed-array.float32-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}function s(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function l(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function c(t,r,n){return r&&l(t.prototype,r),n&&l(t,n),t}var u=Array,p=function(t){return Array.isArray(t)};"undefined"!=typeof Float32Array&&(u=Float32Array,p=function(t){return Array.isArray(t)||t instanceof Float32Array}),o.default.Matrix=/*#__PURE__*/function(){function t(){var r,n;return s(this,t),arguments.length&&(r=arguments.length-1,(r<0||arguments.length<=r?void 0:arguments[r])instanceof o.default)&&(this.p5=(n=arguments.length-1,n<0||arguments.length<=n?void 0:arguments[n])),(arguments.length<=0?void 0:arguments[0])==="mat3"?this.mat3=Array.isArray(arguments.length<=1?void 0:arguments[1])?arguments.length<=1?void 0:arguments[1]:new u([1,0,0,0,1,0,0,0,1]):this.mat4=Array.isArray(arguments.length<=0?void 0:arguments[0])?arguments.length<=0?void 0:arguments[0]:new u([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this}/**
  * Sets the x, y, and z component of the vector using two or three separate
  * variables, the data from a p5.Matrix, or the values from a float array.
  *
  * @method set
  * @param {p5.Matrix|Float32Array|Number[]} [inMatrix] the input p5.Matrix or
  *                                     an Array of length 16
  * @chainable
  */return(/**
  * @method set
  * @param {Number[]} elements 16 numbers passed by value to avoid
  *                                     array copying.
  * @chainable
  */c(t,[{key:"set",value:function(t){return t instanceof o.default.Matrix?this.mat4=t.mat4:p(t)?this.mat4=t:16==arguments.length&&(this.mat4[0]=arguments[0],this.mat4[1]=arguments[1],this.mat4[2]=arguments[2],this.mat4[3]=arguments[3],this.mat4[4]=arguments[4],this.mat4[5]=arguments[5],this.mat4[6]=arguments[6],this.mat4[7]=arguments[7],this.mat4[8]=arguments[8],this.mat4[9]=arguments[9],this.mat4[10]=arguments[10],this.mat4[11]=arguments[11],this.mat4[12]=arguments[12],this.mat4[13]=arguments[13],this.mat4[14]=arguments[14],this.mat4[15]=arguments[15]),this}/**
    * Gets a copy of the vector, returns a p5.Matrix object.
    *
    * @method get
    * @return {p5.Matrix} the copy of the p5.Matrix object
    */},{key:"get",value:function(){return new o.default.Matrix(this.mat4,this.p5)}/**
    * return a copy of this matrix.
    * If this matrix is 4x4, a 4x4 matrix with exactly the same entries will be
    * generated. The same is true if this matrix is 3x3.
    *
    * @method copy
    * @return {p5.Matrix}   the result matrix
    */},{key:"copy",value:function(){if(void 0!==this.mat3){var t=new o.default.Matrix("mat3",this.p5);return t.mat3[0]=this.mat3[0],t.mat3[1]=this.mat3[1],t.mat3[2]=this.mat3[2],t.mat3[3]=this.mat3[3],t.mat3[4]=this.mat3[4],t.mat3[5]=this.mat3[5],t.mat3[6]=this.mat3[6],t.mat3[7]=this.mat3[7],t.mat3[8]=this.mat3[8],t}var r=new o.default.Matrix(this.p5);return r.mat4[0]=this.mat4[0],r.mat4[1]=this.mat4[1],r.mat4[2]=this.mat4[2],r.mat4[3]=this.mat4[3],r.mat4[4]=this.mat4[4],r.mat4[5]=this.mat4[5],r.mat4[6]=this.mat4[6],r.mat4[7]=this.mat4[7],r.mat4[8]=this.mat4[8],r.mat4[9]=this.mat4[9],r.mat4[10]=this.mat4[10],r.mat4[11]=this.mat4[11],r.mat4[12]=this.mat4[12],r.mat4[13]=this.mat4[13],r.mat4[14]=this.mat4[14],r.mat4[15]=this.mat4[15],r}/**
    * return an identity matrix
    * @method identity
    * @return {p5.Matrix}   the result matrix
    */},{key:"transpose",/**
    * transpose according to a given matrix
    * @method transpose
    * @param  {p5.Matrix|Float32Array|Number[]} a  the matrix to be
    *                                               based on to transpose
    * @chainable
    */value:function(t){var r,n,a,s,l,c;return t instanceof o.default.Matrix?(r=t.mat4[1],n=t.mat4[2],a=t.mat4[3],s=t.mat4[6],l=t.mat4[7],c=t.mat4[11],this.mat4[0]=t.mat4[0],this.mat4[1]=t.mat4[4],this.mat4[2]=t.mat4[8],this.mat4[3]=t.mat4[12],this.mat4[4]=r,this.mat4[5]=t.mat4[5],this.mat4[6]=t.mat4[9],this.mat4[7]=t.mat4[13],this.mat4[8]=n,this.mat4[9]=s,this.mat4[10]=t.mat4[10],this.mat4[11]=t.mat4[14],this.mat4[12]=a,this.mat4[13]=l,this.mat4[14]=c,this.mat4[15]=t.mat4[15]):p(t)&&(r=t[1],n=t[2],a=t[3],s=t[6],l=t[7],c=t[11],this.mat4[0]=t[0],this.mat4[1]=t[4],this.mat4[2]=t[8],this.mat4[3]=t[12],this.mat4[4]=r,this.mat4[5]=t[5],this.mat4[6]=t[9],this.mat4[7]=t[13],this.mat4[8]=n,this.mat4[9]=s,this.mat4[10]=t[10],this.mat4[11]=t[14],this.mat4[12]=a,this.mat4[13]=l,this.mat4[14]=c,this.mat4[15]=t[15]),this}/**
    * invert  matrix according to a give matrix
    * @method invert
    * @param  {p5.Matrix|Float32Array|Number[]} a   the matrix to be
    *                                                based on to invert
    * @chainable
    */},{key:"invert",value:function(t){t instanceof o.default.Matrix?(r=t.mat4[0],n=t.mat4[1],a=t.mat4[2],s=t.mat4[3],l=t.mat4[4],c=t.mat4[5],u=t.mat4[6],d=t.mat4[7],m=t.mat4[8],f=t.mat4[9],h=t.mat4[10],y=t.mat4[11],g=t.mat4[12],v=t.mat4[13],b=t.mat4[14],x=t.mat4[15]):p(t)&&(r=t[0],n=t[1],a=t[2],s=t[3],l=t[4],c=t[5],u=t[6],d=t[7],m=t[8],f=t[9],h=t[10],y=t[11],g=t[12],v=t[13],b=t[14],x=t[15]);var r,n,a,s,l,c,u,d,m,f,h,y,g,v,b,x,j=r*c-n*l,w=r*u-a*l,_=r*d-s*l,S=n*u-a*c,E=n*d-s*c,T=a*d-s*u,M=m*v-f*g,C=m*b-h*g,O=m*x-y*g,N=f*b-h*v,A=f*x-y*v,R=h*x-y*b,L=j*R-w*A+_*N+S*O-E*C+T*M;return L?(L=1/L,this.mat4[0]=(c*R-u*A+d*N)*L,this.mat4[1]=(a*A-n*R-s*N)*L,this.mat4[2]=(v*T-b*E+x*S)*L,this.mat4[3]=(h*E-f*T-y*S)*L,this.mat4[4]=(u*O-l*R-d*C)*L,this.mat4[5]=(r*R-a*O+s*C)*L,this.mat4[6]=(b*_-g*T-x*w)*L,this.mat4[7]=(m*T-h*_+y*w)*L,this.mat4[8]=(l*A-c*O+d*M)*L,this.mat4[9]=(n*O-r*A-s*M)*L,this.mat4[10]=(g*E-v*_+x*j)*L,this.mat4[11]=(f*_-m*E-y*j)*L,this.mat4[12]=(c*C-l*N-u*M)*L,this.mat4[13]=(r*N-n*C+a*M)*L,this.mat4[14]=(v*w-g*S-b*j)*L,this.mat4[15]=(m*S-f*w+h*j)*L,this):null}/**
    * Inverts a 3×3 matrix
    * @method invert3x3
    * @chainable
    */},{key:"invert3x3",value:function(){var t=this.mat3[0],r=this.mat3[1],n=this.mat3[2],o=this.mat3[3],a=this.mat3[4],s=this.mat3[5],l=this.mat3[6],c=this.mat3[7],u=this.mat3[8],p=u*a-s*c,d=-u*o+s*l,m=c*o-a*l,f=t*p+r*d+n*m;return f?(f=1/f,this.mat3[0]=p*f,this.mat3[1]=(-u*r+n*c)*f,this.mat3[2]=(s*r-n*a)*f,this.mat3[3]=d*f,this.mat3[4]=(u*t-n*l)*f,this.mat3[5]=(-s*t+n*o)*f,this.mat3[6]=m*f,this.mat3[7]=(-c*t+r*l)*f,this.mat3[8]=(a*t-r*o)*f,this):null}/**
    * This function is only for 3x3 matrices.
    * transposes a 3×3 p5.Matrix by a mat3
    * If there is an array of arguments, the matrix obtained by transposing
    * the 3x3 matrix generated based on that array is set.
    * If no arguments, it transposes itself and returns it.
    *
    * @method transpose3x3
    * @param  {Number[]} mat3 1-dimensional array
    * @chainable
    */},{key:"transpose3x3",value:function(t){void 0===t&&(t=this.mat3);var r=t[1],n=t[2],o=t[5];return this.mat3[0]=t[0],this.mat3[1]=t[3],this.mat3[2]=t[6],this.mat3[3]=r,this.mat3[4]=t[4],this.mat3[5]=t[7],this.mat3[6]=n,this.mat3[7]=o,this.mat3[8]=t[8],this}/**
    * converts a 4×4 matrix to its 3×3 inverse transform
    * commonly used in MVMatrix to NMatrix conversions.
    * @method invertTranspose
    * @param  {p5.Matrix} mat4 the matrix to be based on to invert
    * @chainable
    * @todo  finish implementation
    */},{key:"inverseTranspose",value:function(t){var r=t.mat4;void 0===this.mat3?o.default._friendlyError("sorry, this function only works with mat3"):(//convert mat4 -> mat3
this.mat3[0]=r[0],this.mat3[1]=r[1],this.mat3[2]=r[2],this.mat3[3]=r[4],this.mat3[4]=r[5],this.mat3[5]=r[6],this.mat3[6]=r[8],this.mat3[7]=r[9],this.mat3[8]=r[10]);var n=this.invert3x3();// check inverse succeeded
if(n)n.transpose3x3(this.mat3);else for(var a=0;a<9;a++)this.mat3[a]=0;return this}/**
    * inspired by Toji's mat4 determinant
    * @method determinant
    * @return {Number} Determinant of our 4×4 matrix
    */},{key:"determinant",value:function(){var t=this.mat4[0]*this.mat4[5]-this.mat4[1]*this.mat4[4],r=this.mat4[0]*this.mat4[6]-this.mat4[2]*this.mat4[4],n=this.mat4[0]*this.mat4[7]-this.mat4[3]*this.mat4[4],o=this.mat4[1]*this.mat4[6]-this.mat4[2]*this.mat4[5],a=this.mat4[1]*this.mat4[7]-this.mat4[3]*this.mat4[5],s=this.mat4[2]*this.mat4[7]-this.mat4[3]*this.mat4[6],l=this.mat4[8]*this.mat4[13]-this.mat4[9]*this.mat4[12],c=this.mat4[8]*this.mat4[14]-this.mat4[10]*this.mat4[12],u=this.mat4[8]*this.mat4[15]-this.mat4[11]*this.mat4[12],p=this.mat4[9]*this.mat4[14]-this.mat4[10]*this.mat4[13],d=this.mat4[9]*this.mat4[15]-this.mat4[11]*this.mat4[13];// Calculate the determinant
return t*(this.mat4[10]*this.mat4[15]-this.mat4[11]*this.mat4[14])-r*d+n*p+o*u-a*c+s*l}/**
    * multiply two mat4s
    * @method mult
    * @param {p5.Matrix|Float32Array|Number[]} multMatrix The matrix
    *                                                we want to multiply by
    * @chainable
    */},{key:"mult",value:function(t){if(t===this||t===this.mat4)r=this.copy().mat4;// only need to allocate in this rare case
else if(t instanceof o.default.Matrix)r=t.mat4;else if(p(t))r=t;else{if(16!=arguments.length)return;// nothing to do.
r=arguments}// each row is used for the multiplier
var r,n=this.mat4[0],a=this.mat4[1],s=this.mat4[2],l=this.mat4[3];return this.mat4[0]=n*r[0]+a*r[4]+s*r[8]+l*r[12],this.mat4[1]=n*r[1]+a*r[5]+s*r[9]+l*r[13],this.mat4[2]=n*r[2]+a*r[6]+s*r[10]+l*r[14],this.mat4[3]=n*r[3]+a*r[7]+s*r[11]+l*r[15],n=this.mat4[4],a=this.mat4[5],s=this.mat4[6],l=this.mat4[7],this.mat4[4]=n*r[0]+a*r[4]+s*r[8]+l*r[12],this.mat4[5]=n*r[1]+a*r[5]+s*r[9]+l*r[13],this.mat4[6]=n*r[2]+a*r[6]+s*r[10]+l*r[14],this.mat4[7]=n*r[3]+a*r[7]+s*r[11]+l*r[15],n=this.mat4[8],a=this.mat4[9],s=this.mat4[10],l=this.mat4[11],this.mat4[8]=n*r[0]+a*r[4]+s*r[8]+l*r[12],this.mat4[9]=n*r[1]+a*r[5]+s*r[9]+l*r[13],this.mat4[10]=n*r[2]+a*r[6]+s*r[10]+l*r[14],this.mat4[11]=n*r[3]+a*r[7]+s*r[11]+l*r[15],n=this.mat4[12],a=this.mat4[13],s=this.mat4[14],l=this.mat4[15],this.mat4[12]=n*r[0]+a*r[4]+s*r[8]+l*r[12],this.mat4[13]=n*r[1]+a*r[5]+s*r[9]+l*r[13],this.mat4[14]=n*r[2]+a*r[6]+s*r[10]+l*r[14],this.mat4[15]=n*r[3]+a*r[7]+s*r[11]+l*r[15],this}},{key:"apply",value:function(t){if(t===this||t===this.mat4)r=this.copy().mat4;// only need to allocate in this rare case
else if(t instanceof o.default.Matrix)r=t.mat4;else if(p(t))r=t;else{if(16!=arguments.length)return;// nothing to do.
r=arguments}var r,n=this.mat4,a=n[0],s=n[4],l=n[8],c=n[12];// each row is used for the multiplier
n[0]=r[0]*a+r[1]*s+r[2]*l+r[3]*c,n[4]=r[4]*a+r[5]*s+r[6]*l+r[7]*c,n[8]=r[8]*a+r[9]*s+r[10]*l+r[11]*c,n[12]=r[12]*a+r[13]*s+r[14]*l+r[15]*c;var u=n[1],d=n[5],m=n[9],f=n[13];n[1]=r[0]*u+r[1]*d+r[2]*m+r[3]*f,n[5]=r[4]*u+r[5]*d+r[6]*m+r[7]*f,n[9]=r[8]*u+r[9]*d+r[10]*m+r[11]*f,n[13]=r[12]*u+r[13]*d+r[14]*m+r[15]*f;var h=n[2],y=n[6],g=n[10],v=n[14];n[2]=r[0]*h+r[1]*y+r[2]*g+r[3]*v,n[6]=r[4]*h+r[5]*y+r[6]*g+r[7]*v,n[10]=r[8]*h+r[9]*y+r[10]*g+r[11]*v,n[14]=r[12]*h+r[13]*y+r[14]*g+r[15]*v;var b=n[3],x=n[7],j=n[11],w=n[15];return n[3]=r[0]*b+r[1]*x+r[2]*j+r[3]*w,n[7]=r[4]*b+r[5]*x+r[6]*j+r[7]*w,n[11]=r[8]*b+r[9]*x+r[10]*j+r[11]*w,n[15]=r[12]*b+r[13]*x+r[14]*j+r[15]*w,this}/**
    * scales a p5.Matrix by scalars or a vector
    * @method scale
    * @param  {p5.Vector|Float32Array|Number[]} s vector to scale by
    * @chainable
    */},{key:"scale",value:function(t,r,n){return t instanceof o.default.Vector?(// x is a vector, extract the components from it.
r=t.y,n=t.z,t=t.x):t instanceof Array&&(// x is an array, extract the components from it.
r=t[1],n=t[2],t=t[0]),this.mat4[0]*=t,this.mat4[1]*=t,this.mat4[2]*=t,this.mat4[3]*=t,this.mat4[4]*=r,this.mat4[5]*=r,this.mat4[6]*=r,this.mat4[7]*=r,this.mat4[8]*=n,this.mat4[9]*=n,this.mat4[10]*=n,this.mat4[11]*=n,this}/**
    * rotate our Matrix around an axis by the given angle.
    * @method rotate
    * @param  {Number} a The angle of rotation in radians
    * @param  {p5.Vector|Number[]} axis  the axis(es) to rotate around
    * @chainable
    * inspired by Toji's gl-matrix lib, mat4 rotation
    */},{key:"rotate",value:function(t,r,n,a){r instanceof o.default.Vector?(// x is a vector, extract the components from it.
n=r.y,a=r.z,r=r.x):r instanceof Array&&(// x is an array, extract the components from it.
n=r[1],a=r[2],r=r[0]);var s=Math.sqrt(r*r+n*n+a*a);r*=1/s,n*=1/s,a*=1/s;var l=this.mat4[0],c=this.mat4[1],u=this.mat4[2],p=this.mat4[3],d=this.mat4[4],m=this.mat4[5],f=this.mat4[6],h=this.mat4[7],y=this.mat4[8],g=this.mat4[9],v=this.mat4[10],b=this.mat4[11],x=Math.sin(t),j=Math.cos(t),w=1-j,_=r*r*w+j,S=n*r*w+a*x,E=a*r*w-n*x,T=r*n*w-a*x,M=n*n*w+j,C=a*n*w+r*x,O=r*a*w+n*x,N=n*a*w-r*x,A=a*a*w+j;return this.mat4[0]=l*_+d*S+y*E,this.mat4[1]=c*_+m*S+g*E,this.mat4[2]=u*_+f*S+v*E,this.mat4[3]=p*_+h*S+b*E,this.mat4[4]=l*T+d*M+y*C,this.mat4[5]=c*T+m*M+g*C,this.mat4[6]=u*T+f*M+v*C,this.mat4[7]=p*T+h*M+b*C,this.mat4[8]=l*O+d*N+y*A,this.mat4[9]=c*O+m*N+g*A,this.mat4[10]=u*O+f*N+v*A,this.mat4[11]=p*O+h*N+b*A,this}/**
    * @todo  finish implementing this method!
    * translates
    * @method translate
    * @param  {Number[]} v vector to translate by
    * @chainable
    */},{key:"translate",value:function(t){var r=t[0],n=t[1],o=t[2]||0;this.mat4[12]+=this.mat4[0]*r+this.mat4[4]*n+this.mat4[8]*o,this.mat4[13]+=this.mat4[1]*r+this.mat4[5]*n+this.mat4[9]*o,this.mat4[14]+=this.mat4[2]*r+this.mat4[6]*n+this.mat4[10]*o,this.mat4[15]+=this.mat4[3]*r+this.mat4[7]*n+this.mat4[11]*o}},{key:"rotateX",value:function(t){this.rotate(t,1,0,0)}},{key:"rotateY",value:function(t){this.rotate(t,0,1,0)}},{key:"rotateZ",value:function(t){this.rotate(t,0,0,1)}/**
    * sets the perspective matrix
    * @method perspective
    * @param  {Number} fovy   [description]
    * @param  {Number} aspect [description]
    * @param  {Number} near   near clipping plane
    * @param  {Number} far    far clipping plane
    * @chainable
    */},{key:"perspective",value:function(t,r,n,o){var a=1/Math.tan(t/2),s=1/(n-o);return this.mat4[0]=a/r,this.mat4[1]=0,this.mat4[2]=0,this.mat4[3]=0,this.mat4[4]=0,this.mat4[5]=a,this.mat4[6]=0,this.mat4[7]=0,this.mat4[8]=0,this.mat4[9]=0,this.mat4[10]=(o+n)*s,this.mat4[11]=-1,this.mat4[12]=0,this.mat4[13]=0,this.mat4[14]=2*o*n*s,this.mat4[15]=0,this}/**
    * sets the ortho matrix
    * @method ortho
    * @param  {Number} left   [description]
    * @param  {Number} right  [description]
    * @param  {Number} bottom [description]
    * @param  {Number} top    [description]
    * @param  {Number} near   near clipping plane
    * @param  {Number} far    far clipping plane
    * @chainable
    */},{key:"ortho",value:function(t,r,n,o,a,s){var l=1/(t-r),c=1/(n-o),u=1/(a-s);return this.mat4[0]=-2*l,this.mat4[1]=0,this.mat4[2]=0,this.mat4[3]=0,this.mat4[4]=0,this.mat4[5]=-2*c,this.mat4[6]=0,this.mat4[7]=0,this.mat4[8]=0,this.mat4[9]=0,this.mat4[10]=2*u,this.mat4[11]=0,this.mat4[12]=(t+r)*l,this.mat4[13]=(o+n)*c,this.mat4[14]=(s+a)*u,this.mat4[15]=1,this}/**
    * apply a matrix to a vector with x,y,z,w components
    * get the results in the form of an array
    * @method multiplyVec4
    * @param {Number}
    * @return {Number[]}
    */},{key:"multiplyVec4",value:function(t,r,n,o){var a=[,,,,],s=this.mat4;return a[0]=s[0]*t+s[4]*r+s[8]*n+s[12]*o,a[1]=s[1]*t+s[5]*r+s[9]*n+s[13]*o,a[2]=s[2]*t+s[6]*r+s[10]*n+s[14]*o,a[3]=s[3]*t+s[7]*r+s[11]*n+s[15]*o,a}/**
    * Applies a matrix to a vector.
    * The fourth component is set to 1.
    * Returns a vector consisting of the first
    * through third components of the result.
    *
    * @method multiplyPoint
    * @param {p5.Vector}
    * @return {p5.Vector}
    */},{key:"multiplyPoint",value:function(t){var r=t.x,n=t.y,a=t.z,s=this.multiplyVec4(r,n,a,1);return new o.default.Vector(s[0],s[1],s[2])}/**
    * Applies a matrix to a vector.
    * The fourth component is set to 1.
    * Returns the result of dividing the 1st to 3rd components
    * of the result by the 4th component as a vector.
    *
    * @method multiplyAndNormalizePoint
    * @param {p5.Vector}
    * @return {p5.Vector}
    */},{key:"multiplyAndNormalizePoint",value:function(t){var r=t.x,n=t.y,a=t.z,s=this.multiplyVec4(r,n,a,1);return s[0]/=s[3],s[1]/=s[3],s[2]/=s[3],new o.default.Vector(s[0],s[1],s[2])}/**
    * Applies a matrix to a vector.
    * The fourth component is set to 0.
    * Returns a vector consisting of the first
    * through third components of the result.
    *
    * @method multiplyDirection
    * @param {p5.Vector}
    * @return {p5.Vector}
    */},{key:"multiplyDirection",value:function(t){var r=t.x,n=t.y,a=t.z,s=this.multiplyVec4(r,n,a,0);return new o.default.Vector(s[0],s[1],s[2])}/**
    * This function is only for 3x3 matrices.
    * multiply two mat3s. It is an operation to multiply the 3x3 matrix of
    * the argument from the right. Arguments can be a 3x3 p5.Matrix,
    * a Float32Array of length 9, or a javascript array of length 9.
    * In addition, it can also be done by enumerating 9 numbers.
    *
    * @method mult3x3
    * @param {p5.Matrix|Float32Array|Number[]} multMatrix The matrix
    *                                                we want to multiply by
    * @chainable
    */},{key:"mult3x3",value:function(t){if(t===this||t===this.mat3)r=this.copy().mat3;// only need to allocate in this rare case
else if(t instanceof o.default.Matrix)r=t.mat3;else if(p(t))r=t;else{if(9!=arguments.length)return;// nothing to do.
r=arguments}// each row is used for the multiplier
var r,n=this.mat3[0],a=this.mat3[1],s=this.mat3[2];return this.mat3[0]=n*r[0]+a*r[3]+s*r[6],this.mat3[1]=n*r[1]+a*r[4]+s*r[7],this.mat3[2]=n*r[2]+a*r[5]+s*r[8],n=this.mat3[3],a=this.mat3[4],s=this.mat3[5],this.mat3[3]=n*r[0]+a*r[3]+s*r[6],this.mat3[4]=n*r[1]+a*r[4]+s*r[7],this.mat3[5]=n*r[2]+a*r[5]+s*r[8],n=this.mat3[6],a=this.mat3[7],s=this.mat3[8],this.mat3[6]=n*r[0]+a*r[3]+s*r[6],this.mat3[7]=n*r[1]+a*r[4]+s*r[7],this.mat3[8]=n*r[2]+a*r[5]+s*r[8],this}/**
    * This function is only for 3x3 matrices.
    * A function that returns a column vector of a 3x3 matrix.
    *
    * @method column
    * @param {Number} columnIndex matrix column number
    * @return {p5.Vector}
    */},{key:"column",value:function(t){return new o.default.Vector(this.mat3[t],this.mat3[t+3],this.mat3[t+6])}/**
    * This function is only for 3x3 matrices.
    * A function that returns a row vector of a 3x3 matrix.
    *
    * @method row
    * @param {Number} columnIndex matrix row number
    * @return {p5.Vector}
    */},{key:"row",value:function(t){return new o.default.Vector(this.mat3[3*t],this.mat3[3*t+1],this.mat3[3*t+2])}/**
    * Returns the diagonal elements of the matrix in the form of an array.
    * A 3x3 matrix will return an array of length 3.
    * A 4x4 matrix will return an array of length 4.
    *
    * @method diagonal
    * @return {Number[]} An array obtained by arranging the diagonal elements
    *                    of the matrix in ascending order of index
    */},{key:"diagonal",value:function(){return void 0!==this.mat3?[this.mat3[0],this.mat3[4],this.mat3[8]]:[this.mat4[0],this.mat4[5],this.mat4[10],this.mat4[15]]}/**
    * This function is only for 3x3 matrices.
    * Takes a vector and returns the vector resulting from multiplying to
    * that vector by this matrix from left.
    *
    * @method multiplyVec3
    * @param {p5.Vector} multVector the vector to which this matrix applies
    * @param {p5.Vector} [target] The vector to receive the result
    * @return {p5.Vector}
    */},{key:"multiplyVec3",value:function(t,r){return void 0===r&&(r=t.copy()),r.x=this.row(0).dot(t),r.y=this.row(1).dot(t),r.z=this.row(2).dot(t),r}/**
    * This function is only for 4x4 matrices.
    * Creates a 3x3 matrix whose entries are the top left 3x3 part and returns it.
    *
    * @method createSubMatrix3x3
    * @return {p5.Matrix}
    */},{key:"createSubMatrix3x3",value:function(){var t=new o.default.Matrix("mat3");return t.mat3[0]=this.mat4[0],t.mat3[1]=this.mat4[1],t.mat3[2]=this.mat4[2],t.mat3[3]=this.mat4[4],t.mat3[4]=this.mat4[5],t.mat3[5]=this.mat4[6],t.mat3[6]=this.mat4[8],t.mat3[7]=this.mat4[9],t.mat3[8]=this.mat4[10],t}/**
    * PRIVATE
    */}],[{key:"identity",value:function(t){return new o.default.Matrix(t)}}]),t)}();var d=o.default.Matrix;n.default=d},{"../core/main":296,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.to-string":198,"core-js/modules/es.typed-array.copy-within":221,"core-js/modules/es.typed-array.every":222,"core-js/modules/es.typed-array.fill":223,"core-js/modules/es.typed-array.filter":224,"core-js/modules/es.typed-array.find":226,"core-js/modules/es.typed-array.find-index":225,"core-js/modules/es.typed-array.float32-array":227,"core-js/modules/es.typed-array.for-each":229,"core-js/modules/es.typed-array.includes":230,"core-js/modules/es.typed-array.index-of":231,"core-js/modules/es.typed-array.iterator":234,"core-js/modules/es.typed-array.join":235,"core-js/modules/es.typed-array.last-index-of":236,"core-js/modules/es.typed-array.map":237,"core-js/modules/es.typed-array.reduce":239,"core-js/modules/es.typed-array.reduce-right":238,"core-js/modules/es.typed-array.reverse":240,"core-js/modules/es.typed-array.set":241,"core-js/modules/es.typed-array.slice":242,"core-js/modules/es.typed-array.some":243,"core-js/modules/es.typed-array.sort":244,"core-js/modules/es.typed-array.subarray":245,"core-js/modules/es.typed-array.to-locale-string":246,"core-js/modules/es.typed-array.to-string":247}],348:[function(t,r,n){t("core-js/modules/es.array.map"),t("core-js/modules/es.array.map"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}function s(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function l(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function c(t,r,n){return r&&l(t.prototype,r),n&&l(t,n),t}o.default.RenderBuffer=/*#__PURE__*/function(){function t(r,n,o,a,l,c){s(this,t),this.size=r,this.src=n,this.dst=o,this.attr=a,this._renderer=l,this.map=c}/**
  * Enables and binds the buffers used by shader when the appropriate data exists in geometry.
  * Must always be done prior to drawing geometry in WebGL.
  * @param {p5.Geometry} geometry Geometry that is going to be drawn
  * @param {p5.Shader} shader Active shader
  * @private
  */return c(t,[{key:"_prepareBuffer",value:function(t,r){var n,o=r.attributes,a=this._renderer.GL;n=t.model?t.model:t;// loop through each of the buffer definitions
var s=o[this.attr];if(s){// check if the model has the appropriate source array
var l=t[this.dst],c=n[this.src];if(c.length>0){// check if we need to create the GL buffer
var u=!l;if(u&&(t[this.dst]=l=a.createBuffer()),// bind the buffer
a.bindBuffer(a.ARRAY_BUFFER,l),u||!1!==n.dirtyFlags[this.src]){var p=this.map,d=p?p(c):c;// get the values from the model, possibly transformed
this._renderer._bindBuffer(l,a.ARRAY_BUFFER,d),n.dirtyFlags[this.src]=!1}// enable the attribute
r.enableAttrib(s,this.size)}else{var m=s.location;if(-1===m||!this._renderer.registerEnabled[m])return;// Disable register corresponding to unused attribute
a.disableVertexAttribArray(m),this._renderer.registerEnabled[m]=!1}}}}]),t}();var u=o.default.RenderBuffer;n.default=u},{"../core/main":296,"core-js/modules/es.array.map":181}],349:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.map"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=p(t("../core/main")),l=u(t("../core/constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}function d(t){return h(t)||f(t)||m()}function m(){throw TypeError("Invalid attempt to spread non-iterable instance")}function f(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function h(t){if(Array.isArray(t)){for(var r=0,n=Array(t.length);r<t.length;r++)n[r]=t[r];return n}}/**
 * Begin shape drawing.  This is a helpful way of generating
 * custom shapes quickly.  However in WEBGL mode, application
 * performance will likely drop as a result of too many calls to
 * <a href="#/p5/beginShape">beginShape()</a> / <a href="#/p5/endShape">endShape()</a>.  As a high performance alternative,
 * please use p5.js geometry primitives.
 * @private
 * @method beginShape
 * @param  {Number} mode webgl primitives mode.  beginShape supports the
 *                       following modes:
 *                       POINTS,LINES,LINE_STRIP,LINE_LOOP,TRIANGLES,
 *                       TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP,
 *                       and TESS(WEBGL only)
 * @chainable
 */t("./p5.RenderBuffer"),s.default.RendererGL.prototype.beginShape=function(t){return this.immediateMode.shapeMode=void 0!==t?t:l.TESS,this.immediateMode.geometry.reset(),this};var y={vertices:1,vertexNormals:1,vertexColors:4,vertexStrokeColors:4,uvs:2};/**
 * adds a vertex to be drawn in a custom Shape.
 * @private
 * @method vertex
 * @param  {Number} x x-coordinate of vertex
 * @param  {Number} y y-coordinate of vertex
 * @param  {Number} z z-coordinate of vertex
 * @chainable
 * @TODO implement handling of <a href="#/p5.Vector">p5.Vector</a> args
 */s.default.RendererGL.prototype.vertex=function(t,r){// WebGL 1 doesn't support QUADS or QUAD_STRIP, so we duplicate data to turn
// QUADS into TRIANGLES and QUAD_STRIP into TRIANGLE_STRIP. (There is no extra
// work to convert QUAD_STRIP here, since the only difference is in how edges
// are rendered.)
if(this.immediateMode.shapeMode===l.QUADS&&this.immediateMode.geometry.vertices.length%6==3)for(var n in y){var o,a,c,u=y[n],p=this.immediateMode.geometry[n];p.push.apply(p,d(p.slice(p.length-3*u,p.length-2*u)).concat(d(p.slice(p.length-u,p.length))))}o=a=c=0,3==arguments.length?o=arguments[2]:4==arguments.length?(// (x, y, u, v) mode: z assumed to be 0.
a=arguments[2],c=arguments[3]):5==arguments.length&&(// (x, y, z, u, v) mode
o=arguments[2],a=arguments[3],c=arguments[4]);var m=new s.default.Vector(t,r,o);this.immediateMode.geometry.vertices.push(m),this.immediateMode.geometry.vertexNormals.push(this._currentNormal);var f=this.curFillColor||[.5,.5,.5,1];this.immediateMode.geometry.vertexColors.push(f[0],f[1],f[2],f[3]);var h=this.curStrokeColor||[.5,.5,.5,1];return this.immediateMode.geometry.vertexStrokeColors.push(h[0],h[1],h[2],h[3]),this.textureMode===l.IMAGE&&(null!==this._tex?this._tex.width>0&&this._tex.height>0&&(a/=this._tex.width,c/=this._tex.height):!this.isProcessingVertices&&null===this._tex&&arguments.length>=4&&console.warn("You must first call texture() before using vertex() with image based u and v coordinates")),this.immediateMode.geometry.uvs.push(a,c),this.immediateMode._bezierVertex[0]=t,this.immediateMode._bezierVertex[1]=r,this.immediateMode._bezierVertex[2]=o,this.immediateMode._quadraticVertex[0]=t,this.immediateMode._quadraticVertex[1]=r,this.immediateMode._quadraticVertex[2]=o,this},/**
 * Sets the normal to use for subsequent vertices.
 * @method vertexNormal
 * @param  {Number} x
 * @param  {Number} y
 * @param  {Number} z
 * @chainable
 *
 * @method vertexNormal
 * @param  {Vector} v
 * @chainable
 */s.default.RendererGL.prototype.normal=function(t,r,n){return t instanceof s.default.Vector?this._currentNormal=t:this._currentNormal=new s.default.Vector(t,r,n),this},/**
 * End shape drawing and render vertices to screen.
 * @chainable
 */s.default.RendererGL.prototype.endShape=function(t,r,n,o,a,s){return this.immediateMode.shapeMode===l.POINTS?this._drawPoints(this.immediateMode.geometry.vertices,this.immediateMode.buffers.point):(this.isProcessingVertices=!0,this._processVertices.apply(this,arguments),this.isProcessingVertices=!1,this._doFill&&this.immediateMode.geometry.vertices.length>1&&this._drawImmediateFill(),this._doStroke&&this.immediateMode.geometry.lineVertices.length>1&&this._drawImmediateStroke(),this.isBezier=!1,this.isQuadratic=!1,this.isCurve=!1,this.immediateMode._bezierVertex.length=0,this.immediateMode._quadraticVertex.length=0,this.immediateMode._curveVertex.length=0),this},/**
 * Called from endShape(). This function calculates the stroke vertices for custom shapes and
 * tesselates shapes when applicable.
 * @private
 * @param  {Number} mode webgl primitives mode.  beginShape supports the
 *                       following modes:
 *                       POINTS,LINES,LINE_STRIP,LINE_LOOP,TRIANGLES,
 *                       TRIANGLE_STRIP, TRIANGLE_FAN and TESS(WEBGL only)
 */s.default.RendererGL.prototype._processVertices=function(t){if(0!==this.immediateMode.geometry.vertices.length){var r=this._doStroke,n=t===l.CLOSE;r&&(this.immediateMode.geometry.edges=this._calculateEdges(this.immediateMode.shapeMode,this.immediateMode.geometry.vertices,n),this.immediateMode.geometry._edgesToVertices());// For hollow shapes, user must set mode to TESS
var o=this.immediateMode.shapeMode===l.TESS,a=this._doFill&&(this.isBezier||this.isQuadratic||this.isCurve||o)&&this.immediateMode.shapeMode!==l.LINES;// We tesselate when drawing curves or convex shapes
a&&this._tesselateShape()}},/**
 * Called from _processVertices(). This function calculates the stroke vertices for custom shapes and
 * tesselates shapes when applicable.
 * @private
 * @returns  {Array[Number]} indices for custom shape vertices indicating edges.
 */s.default.RendererGL.prototype._calculateEdges=function(t,r,n){var o=[],a=0;switch(t){case l.TRIANGLE_STRIP:for(a=0;a<r.length-2;a++)o.push([a,a+1]),o.push([a,a+2]);o.push([a,a+1]);break;case l.TRIANGLE_FAN:for(a=1;a<r.length-1;a++)o.push([0,a]),o.push([a,a+1]);o.push([0,r.length-1]);break;case l.TRIANGLES:for(a=0;a<r.length-2;a+=3)o.push([a,a+1]),o.push([a+1,a+2]),o.push([a+2,a]);break;case l.LINES:for(a=0;a<r.length-1;a+=2)o.push([a,a+1]);break;case l.QUADS:// Quads have been broken up into two triangles by `vertex()`:
// 0   3--5
// | \  \ |
// 1--2   4
for(a=0;a<r.length-5;a+=6)o.push([a,a+1]),o.push([a+1,a+2]),o.push([a+3,a+5]),o.push([a+4,a+5]);break;case l.QUAD_STRIP:// 0---2---4
// |   |   |
// 1---3---5
for(a=0;a<r.length-2;a+=2)o.push([a,a+1]),o.push([a,a+2]),o.push([a+1,a+3]);o.push([a,a+1]);break;default:for(a=0;a<r.length-1;a++)o.push([a,a+1])}return n&&o.push([r.length-1,0]),o},/**
 * Called from _processVertices() when applicable. This function tesselates immediateMode.geometry.
 * @private
 */s.default.RendererGL.prototype._tesselateShape=function(){var t=this;this.immediateMode.shapeMode=l.TRIANGLES;var r=[this._flatten(this.immediateMode.geometry.vertices.map(function(r,n){return[r.x,r.y,r.z,t.immediateMode.geometry.uvs[2*n],t.immediateMode.geometry.uvs[2*n+1],t.immediateMode.geometry.vertexColors[4*n],t.immediateMode.geometry.vertexColors[4*n+1],t.immediateMode.geometry.vertexColors[4*n+2],t.immediateMode.geometry.vertexColors[4*n+3],t.immediateMode.geometry.vertexNormals[n].x,t.immediateMode.geometry.vertexNormals[n].y,t.immediateMode.geometry.vertexNormals[n].z]}))],n=this._triangulate(r);this.immediateMode.geometry.vertices=[],this.immediateMode.geometry.vertexNormals=[],this.immediateMode.geometry.uvs=[];for(var o=[],a=0,c=n.length;a<c;a+=s.default.RendererGL.prototype.tessyVertexSize)o.push.apply(o,d(n.slice(a+5,a+9))),this.normal.apply(this,d(n.slice(a+9,a+12))),this.vertex.apply(this,d(n.slice(a,a+5)));this.immediateMode.geometry.vertexColors=o},/**
 * Called from endShape(). Responsible for calculating normals, setting shader uniforms,
 * enabling all appropriate buffers, applying color blend, and drawing the fill geometry.
 * @private
 */s.default.RendererGL.prototype._drawImmediateFill=function(){var t=this.GL;this._useVertexColor=this.immediateMode.geometry.vertexColors.length>0;var r=this._getImmediateFillShader();this._setFillUniforms(r);var n=!0,o=!1,a=void 0;try{for(var s,c=this.immediateMode.buffers.fill[Symbol.iterator]();!(n=(s=c.next()).done);n=!0)s.value._prepareBuffer(this.immediateMode.geometry,r);// LINE_STRIP and LINES are not used for rendering, instead
// they only indicate a way to modify vertices during the _processVertices() step
}catch(t){o=!0,a=t}finally{try{n||null==c.return||c.return()}finally{if(o)throw a}}(this.immediateMode.shapeMode===l.LINE_STRIP||this.immediateMode.shapeMode===l.LINES)&&(this.immediateMode.shapeMode=l.TRIANGLE_FAN),this.immediateMode.shapeMode===l.QUADS?this.immediateMode.shapeMode=l.TRIANGLES:this.immediateMode.shapeMode===l.QUAD_STRIP&&(this.immediateMode.shapeMode=l.TRIANGLE_STRIP),this._applyColorBlend(this.curFillColor),t.drawArrays(this.immediateMode.shapeMode,0,this.immediateMode.geometry.vertices.length),r.unbindShader()},/**
 * Called from endShape(). Responsible for calculating normals, setting shader uniforms,
 * enabling all appropriate buffers, applying color blend, and drawing the stroke geometry.
 * @private
 */s.default.RendererGL.prototype._drawImmediateStroke=function(){var t=this.GL,r=t.isEnabled(t.CULL_FACE);t.disable(t.CULL_FACE);var n=this._getImmediateStrokeShader();this._useLineColor=this.immediateMode.geometry.vertexStrokeColors.length>0,this._setStrokeUniforms(n);var o=!0,a=!1,s=void 0;try{for(var l,c=this.immediateMode.buffers.stroke[Symbol.iterator]();!(o=(l=c.next()).done);o=!0)l.value._prepareBuffer(this.immediateMode.geometry,n)}catch(t){a=!0,s=t}finally{try{o||null==c.return||c.return()}finally{if(a)throw s}}this._applyColorBlend(this.curStrokeColor),t.drawArrays(t.TRIANGLES,0,this.immediateMode.geometry.lineVertices.length),r&&t.enable(t.CULL_FACE),n.unbindShader()};var g=s.default.RendererGL;n.default=g},{"../core/constants":284,"../core/main":296,"./p5.RenderBuffer":348,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.fill":172,"core-js/modules/es.array.from":175,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.map":181,"core-js/modules/es.array.slice":182,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],350:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.some"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.typed-array.float32-array"),t("core-js/modules/es.typed-array.uint16-array"),t("core-js/modules/es.typed-array.uint32-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.some"),t("core-js/modules/es.object.keys"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.typed-array.float32-array"),t("core-js/modules/es.typed-array.uint16-array"),t("core-js/modules/es.typed-array.uint32-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var s=p(t("../core/main"));t("./p5.RendererGL"),t("./p5.RenderBuffer");var l=u(t("../core/constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}//Retained Mode. The default mode for rendering 3D primitives
//in WEBGL.
var d=0;/**
 * _initBufferDefaults
 * @private
 * @description initializes buffer defaults. runs each time a new geometry is
 * registered
 * @param  {String} gId  key of the geometry object
 * @returns {Object} a new buffer object
 */s.default.RendererGL.prototype._initBufferDefaults=function(t){if(this._freeBuffers(t),++d>1e3){var r=Object.keys(this.retainedMode.geometry)[0];delete this.retainedMode.geometry[r],d--}//create a new entry in our retainedMode.geometry
return this.retainedMode.geometry[t]={}},s.default.RendererGL.prototype._freeBuffers=function(t){var r=this.retainedMode.geometry[t];if(r){delete this.retainedMode.geometry[t],d--;var n=this.GL;r.indexBuffer&&n.deleteBuffer(r.indexBuffer),o(this.retainedMode.buffers.stroke),o(this.retainedMode.buffers.fill)}function o(t){var o=!0,a=!1,s=void 0;try{for(var l,c=t[Symbol.iterator]();!(o=(l=c.next()).done);o=!0){var u=l.value;r[u.dst]&&(n.deleteBuffer(r[u.dst]),r[u.dst]=null)}}catch(t){a=!0,s=t}finally{try{o||null==c.return||c.return()}finally{if(a)throw s}}}// free all the buffers
},/**
 * creates a buffers object that holds the WebGL render buffers
 * for a geometry.
 * @private
 * @param  {String} gId    key of the geometry object
 * @param  {p5.Geometry}  model contains geometry data
 */s.default.RendererGL.prototype.createBuffers=function(t,r){var n=this.GL,o=this._initBufferDefaults(t);//initialize the gl buffers for our geom groups
o.model=r;var a=o.indexBuffer;if(r.faces.length){a||(a=o.indexBuffer=n.createBuffer());var l=s.default.RendererGL.prototype._flatten(r.faces),c=l.some(function(t){return t>65535}),u=c?Uint32Array:Uint16Array;// If any face references a vertex with an index greater than the maximum
this._bindBuffer(a,n.ELEMENT_ARRAY_BUFFER,l,u),// different enum value to WebGL draw triangles. This happens in
// the _drawElements function.
o.indexBufferType=c?n.UNSIGNED_INT:n.UNSIGNED_SHORT,o.vertexCount=3*r.faces.length}else a&&(n.deleteBuffer(a),o.indexBuffer=null),o.vertexCount=r.vertices?r.vertices.length:0;return o.lineVertexCount=r.lineVertices?r.lineVertices.length:0,o},/**
 * Draws buffers given a geometry key ID
 * @private
 * @param  {String} gId     ID in our geom hash
 * @chainable
 */s.default.RendererGL.prototype.drawBuffers=function(t){var r=this.GL,n=this.retainedMode.geometry[t];if(this._doFill){this._useVertexColor=n.model.vertexColors.length>0;var o=this._getRetainedFillShader();this._setFillUniforms(o);var a=!0,s=!1,l=void 0;try{for(var c,u=this.retainedMode.buffers.fill[Symbol.iterator]();!(a=(c=u.next()).done);a=!0)c.value._prepareBuffer(n,o)}catch(t){s=!0,l=t}finally{try{a||null==u.return||u.return()}finally{if(s)throw l}}n.indexBuffer&&this._bindBuffer(n.indexBuffer,r.ELEMENT_ARRAY_BUFFER),this._applyColorBlend(this.curFillColor),this._drawElements(r.TRIANGLES,t),o.unbindShader()}if(this._doStroke&&n.lineVertexCount>0){var p=r.isEnabled(r.CULL_FACE);// Prevent strokes from getting removed by culling
r.disable(r.CULL_FACE);var d=this._getRetainedStrokeShader();this._useLineColor=n.model.vertexStrokeColors.length>0,this._setStrokeUniforms(d);var m=!0,f=!1,h=void 0;try{for(var y,g=this.retainedMode.buffers.stroke[Symbol.iterator]();!(m=(y=g.next()).done);m=!0)y.value._prepareBuffer(n,d)}catch(t){f=!0,h=t}finally{try{m||null==g.return||g.return()}finally{if(f)throw h}}this._applyColorBlend(this.curStrokeColor),this._drawArrays(r.TRIANGLES,t),p&&r.enable(r.CULL_FACE),d.unbindShader()}return this},/**
 * Calls drawBuffers() with a scaled model/view matrix.
 *
 * This is used by various 3d primitive methods (in primitives.js, eg. plane,
 * box, torus, etc...) to allow caching of un-scaled geometries. Those
 * geometries are generally created with unit-length dimensions, cached as
 * such, and then scaled appropriately in this method prior to rendering.
 *
 * @private
 * @method drawBuffersScaled
 * @param {String} gId     ID in our geom hash
 * @param {Number} scaleX  the amount to scale in the X direction
 * @param {Number} scaleY  the amount to scale in the Y direction
 * @param {Number} scaleZ  the amount to scale in the Z direction
 */s.default.RendererGL.prototype.drawBuffersScaled=function(t,r,n,o){var a=this.uMVMatrix.copy();try{this.uMVMatrix.scale(r,n,o),this.drawBuffers(t)}finally{this.uMVMatrix=a}},s.default.RendererGL.prototype._drawArrays=function(t,r){return this.GL.drawArrays(t,0,this.retainedMode.geometry[r].lineVertexCount),this},s.default.RendererGL.prototype._drawElements=function(t,r){var n=this.retainedMode.geometry[r],o=this.GL;if(n.indexBuffer){// If this model is using a Uint32Array we need to ensure the
// OES_element_index_uint WebGL extension is enabled.
if(this._pInst.webglVersion!==l.WEBGL2&&n.indexBufferType===o.UNSIGNED_INT&&!o.getExtension("OES_element_index_uint"))throw Error("Unable to render a 3d model with > 65535 triangles. Your web browser does not support the WebGL Extension OES_element_index_uint.");// we're drawing faces
o.drawElements(o.TRIANGLES,n.vertexCount,n.indexBufferType,0)}else o.drawArrays(t||o.TRIANGLES,0,n.vertexCount)},s.default.RendererGL.prototype._drawPoints=function(t,r){var n=this.GL,o=this._getImmediatePointShader();this._setPointUniforms(o),this._bindBuffer(r,n.ARRAY_BUFFER,this._vToNArray(t),Float32Array,n.STATIC_DRAW),o.enableAttrib(o.attributes.aPosition,3),this._applyColorBlend(this.curStrokeColor),n.drawArrays(n.Points,0,t.length),o.unbindShader()};var m=s.default.RendererGL;n.default=m},{"../core/constants":284,"../core/main":296,"./p5.RenderBuffer":348,"./p5.RendererGL":351,"core-js/modules/es.array.fill":172,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.some":183,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.keys":197,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.typed-array.copy-within":221,"core-js/modules/es.typed-array.every":222,"core-js/modules/es.typed-array.fill":223,"core-js/modules/es.typed-array.filter":224,"core-js/modules/es.typed-array.find":226,"core-js/modules/es.typed-array.find-index":225,"core-js/modules/es.typed-array.float32-array":227,"core-js/modules/es.typed-array.for-each":229,"core-js/modules/es.typed-array.includes":230,"core-js/modules/es.typed-array.index-of":231,"core-js/modules/es.typed-array.iterator":234,"core-js/modules/es.typed-array.join":235,"core-js/modules/es.typed-array.last-index-of":236,"core-js/modules/es.typed-array.map":237,"core-js/modules/es.typed-array.reduce":239,"core-js/modules/es.typed-array.reduce-right":238,"core-js/modules/es.typed-array.reverse":240,"core-js/modules/es.typed-array.set":241,"core-js/modules/es.typed-array.slice":242,"core-js/modules/es.typed-array.some":243,"core-js/modules/es.typed-array.sort":244,"core-js/modules/es.typed-array.subarray":245,"core-js/modules/es.typed-array.to-locale-string":246,"core-js/modules/es.typed-array.to-string":247,"core-js/modules/es.typed-array.uint16-array":248,"core-js/modules/es.typed-array.uint32-array":249,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],351:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.copy-within"),t("core-js/modules/es.array.every"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.some"),t("core-js/modules/es.map"),t("core-js/modules/es.object.assign"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.set"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.typed-array.float32-array"),t("core-js/modules/es.typed-array.float64-array"),t("core-js/modules/es.typed-array.int16-array"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.uint16-array"),t("core-js/modules/es.typed-array.uint32-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.concat"),t("core-js/modules/es.array.copy-within"),t("core-js/modules/es.array.every"),t("core-js/modules/es.array.fill"),t("core-js/modules/es.array.from"),t("core-js/modules/es.array.includes"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.array.some"),t("core-js/modules/es.map"),t("core-js/modules/es.object.assign"),t("core-js/modules/es.object.get-prototype-of"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.reflect.construct"),t("core-js/modules/es.regexp.to-string"),t("core-js/modules/es.set"),t("core-js/modules/es.string.includes"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.typed-array.float32-array"),t("core-js/modules/es.typed-array.float64-array"),t("core-js/modules/es.typed-array.int16-array"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.uint16-array"),t("core-js/modules/es.typed-array.uint32-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.readPixelsWebGL=I,n.readPixelWebGL=P,n.default=void 0;var a=p(t("../core/main")),s=u(t("../core/constants")),l=p(t("libtess"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==d(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var s=o?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}function d(t){return(d="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}function m(t){return y(t)||h(t)||f()}function f(){throw TypeError("Invalid attempt to spread non-iterable instance")}function h(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function y(t){if(Array.isArray(t)){for(var r=0,n=Array(t.length);r<t.length;r++)n[r]=t[r];return n}}function g(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function v(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function b(t,r,n){return r&&v(t.prototype,r),n&&v(t,n),t}function x(t,r){if("function"!=typeof r&&null!==r)throw TypeError("Super expression must either be null or a function");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),r&&j(t,r)}function j(t,r){return(j=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t})(t,r)}function w(t){function r(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}return function(){var n,o=E(t);if(r()){var a=E(this).constructor;n=Reflect.construct(o,arguments,a)}else n=o.apply(this,arguments);return _(this,n)}}function _(t,r){return r&&("object"===d(r)||"function"==typeof r)?r:S(t)}function S(t){if(void 0===t)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function E(t){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}t("./p5.Shader"),t("./p5.Camera"),t("../core/p5.Renderer"),t("./p5.Matrix"),t("path");var T={},M={},C="",O=function(t,r){C+="#define STROKE_CAP_".concat(t," ").concat(r,"\n"),T[s[t]]=r},N=function(t,r){C+="#define STROKE_JOIN_".concat(t," ").concat(r,"\n"),M[s[t]]=r};// the values in JS objects
O("ROUND",0),O("PROJECT",1),O("SQUARE",2),N("ROUND",0),N("MITER",1),N("BEVEL",2);var A="precision highp float;\nprecision highp int;\n\nuniform mat4 uViewMatrix;\n\nuniform bool uUseLighting;\n\nuniform int uAmbientLightCount;\nuniform vec3 uAmbientColor[5];\n\nuniform int uDirectionalLightCount;\nuniform vec3 uLightingDirection[5];\nuniform vec3 uDirectionalDiffuseColors[5];\nuniform vec3 uDirectionalSpecularColors[5];\n\nuniform int uPointLightCount;\nuniform vec3 uPointLightLocation[5];\nuniform vec3 uPointLightDiffuseColors[5];	\nuniform vec3 uPointLightSpecularColors[5];\n\nuniform int uSpotLightCount;\nuniform float uSpotLightAngle[5];\nuniform float uSpotLightConc[5];\nuniform vec3 uSpotLightDiffuseColors[5];\nuniform vec3 uSpotLightSpecularColors[5];\nuniform vec3 uSpotLightLocation[5];\nuniform vec3 uSpotLightDirection[5];\n\nuniform bool uSpecular;\nuniform float uShininess;\n\nuniform float uConstantAttenuation;\nuniform float uLinearAttenuation;\nuniform float uQuadraticAttenuation;\n\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n  float specular;\n  float diffuse;\n};\n\nfloat _phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = reflect(lightDirection, surfaceNormal);\n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat _lambertDiffuse(vec3 lightDirection, vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult _light(vec3 viewDirection, vec3 normal, vec3 lightVector) {\n\n  vec3 lightDir = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  if (uSpecular)\n    lr.specular = _phongSpecular(lightDir, viewDirection, normal, uShininess);\n  lr.diffuse = _lambertDiffuse(lightDir, normal);\n  return lr;\n}\n\nvoid totalLight(\n  vec3 modelPosition,\n  vec3 normal,\n  out vec3 totalDiffuse,\n  out vec3 totalSpecular\n) {\n\n  totalSpecular = vec3(0.0);\n\n  if (!uUseLighting) {\n    totalDiffuse = vec3(1.0);\n    return;\n  }\n\n  totalDiffuse = vec3(0.0);\n\n  vec3 viewDirection = normalize(-modelPosition);\n\n  for (int j = 0; j < 5; j++) {\n    if (j < uDirectionalLightCount) {\n      vec3 lightVector = (uViewMatrix * vec4(uLightingDirection[j], 0.0)).xyz;\n      vec3 lightColor = uDirectionalDiffuseColors[j];\n      vec3 specularColor = uDirectionalSpecularColors[j];\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if (j < uPointLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      //calculate attenuation\n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n      vec3 lightColor = lightFalloff * uPointLightDiffuseColors[j];\n      vec3 specularColor = lightFalloff * uPointLightSpecularColors[j];\n\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if(j < uSpotLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uSpotLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n\n      vec3 lightDirection = (uViewMatrix * vec4(uSpotLightDirection[j], 0.0)).xyz;\n      float spotDot = dot(normalize(lightVector), normalize(lightDirection));\n      float spotFalloff;\n      if(spotDot < uSpotLightAngle[j]) {\n        spotFalloff = 0.0;\n      }\n      else {\n        spotFalloff = pow(spotDot, uSpotLightConc[j]);\n      }\n      lightFalloff *= spotFalloff;\n\n      vec3 lightColor = uSpotLightDiffuseColors[j];\n      vec3 specularColor = uSpotLightSpecularColors[j];\n     \n      LightResult result = _light(viewDirection, normal, lightVector);\n      \n      totalDiffuse += result.diffuse * lightColor * lightFalloff;\n      totalSpecular += result.specular * lightColor * specularColor * lightFalloff;\n    }\n  }\n\n  totalDiffuse *= diffuseFactor;\n  totalSpecular *= specularFactor;\n}\n",R="#ifdef WEBGL2\n\n#define IN in\n#define OUT out\n\n#ifdef FRAGMENT_SHADER\nout vec4 outColor;\n#define OUT_COLOR outColor\n#endif\n#define TEXTURE texture\n\n#else\n\n#ifdef FRAGMENT_SHADER\n#define IN varying\n#else\n#define IN attribute\n#endif\n#define OUT varying\n#define TEXTURE texture2D\n\n#ifdef FRAGMENT_SHADER\n#define OUT_COLOR gl_FragColor\n#endif\n\n#endif\n",L={immediateVert:"attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nvarying vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n",vertexColorFrag:"precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vec4(vColor.rgb, 1.) * vColor.a;\n}\n",normalVert:"attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nuniform vec4 uMaterialColor;\nuniform bool uUseVertexColor;\n\nvarying vec3 vVertexNormal;\nvarying highp vec2 vVertTexCoord;\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertTexCoord = aTexCoord;\n  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);\n}\n",normalFrag:"precision mediump float;\nvarying vec3 vVertexNormal;\nvoid main(void) {\n  gl_FragColor = vec4(vVertexNormal, 1.0);\n}",basicFrag:"precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vec4(vColor.rgb, 1.) * vColor.a;\n}\n",lightVert:A+"// include lighting.glgl\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nuniform bool uUseVertexColor;\nuniform vec4 uMaterialColor;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\nvarying vec4 vColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * viewModelPosition;\n\n  vec3 vertexNormal = normalize(uNormalMatrix * aNormal);\n  vVertTexCoord = aTexCoord;\n\n  totalLight(viewModelPosition.xyz, vertexNormal, vDiffuseColor, vSpecularColor);\n\n  for (int i = 0; i < 8; i++) {\n    if (i < uAmbientLightCount) {\n      vDiffuseColor += uAmbientColor[i];\n    }\n  }\n  \n  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);\n}\n",lightTextureFrag:"precision highp float;\n\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\nvarying vec4 vColor;\n\nvoid main(void) {\n  if(uEmissive && !isTexture) {\n    gl_FragColor = vColor;\n  }\n  else {\n    vec4 baseColor = isTexture\n      // Textures come in with premultiplied alpha. To apply tint and still have\n      // premultiplied alpha output, we need to multiply the RGB channels by the\n      // tint RGB, and all channels by the tint alpha.\n      ? texture2D(uSampler, vVertTexCoord) * vec4(uTint.rgb/255., 1.) * (uTint.a/255.)\n      // Colors come in with unmultiplied alpha, so we need to multiply the RGB\n      // channels by alpha to convert it to premultiplied alpha.\n      : vec4(vColor.rgb * vColor.a, vColor.a);\n    gl_FragColor = vec4(baseColor.rgb * vDiffuseColor + vSpecularColor, baseColor.a);\n  }\n}\n",phongVert:"precision highp float;\nprecision highp int;\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\nattribute vec4 aVertexColor;\n\nuniform vec3 uAmbientColor[5];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nuniform bool uUseVertexColor;\nuniform vec4 uMaterialColor;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\nvarying vec4 vColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = uNormalMatrix * aNormal;\n  vTexCoord = aTexCoord;\n\n  // TODO: this should be a uniform\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 5; i++) {\n    if (i < uAmbientLightCount) {\n      vAmbientColor += uAmbientColor[i];\n    }\n  }\n  \n  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);\n}\n",phongFrag:A+"// include lighting.glsl\nprecision highp float;\nprecision highp int;\n\nuniform bool uHasSetAmbient;\nuniform vec4 uSpecularMatColor;\nuniform vec4 uAmbientMatColor;\nuniform vec4 uEmissiveMatColor;\n\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\nvarying vec4 vColor;\n\nvoid main(void) {\n\n  vec3 diffuse;\n  vec3 specular;\n  totalLight(vViewPosition, normalize(vNormal), diffuse, specular);\n\n  // Calculating final color as result of all lights (plus emissive term).\n\n  vec4 baseColor = isTexture\n    // Textures come in with premultiplied alpha. To apply tint and still have\n    // premultiplied alpha output, we need to multiply the RGB channels by the\n    // tint RGB, and all channels by the tint alpha.\n    ? texture2D(uSampler, vTexCoord) * vec4(uTint.rgb/255., 1.) * (uTint.a/255.)\n    // Colors come in with unmultiplied alpha, so we need to multiply the RGB\n    // channels by alpha to convert it to premultiplied alpha.\n    : vec4(vColor.rgb * vColor.a, vColor.a);\n  gl_FragColor = vec4(diffuse * baseColor.rgb + \n                    vAmbientColor * (\n                      uHasSetAmbient ? uAmbientMatColor.rgb : baseColor.rgb\n                    ) + \n                    specular * uSpecularMatColor.rgb + \n                    uEmissiveMatColor.rgb, baseColor.a);\n}\n",fontVert:R+"IN vec3 aPosition;\nIN vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nOUT vec2 vTexCoord;\nOUT float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // Expand glyph bounding boxes by 1px on each side to give a bit of room\n  // for antialiasing\n  vec2 pixelScale = vec2(\n    1. / uModelViewMatrix[0][0],\n    1. / uModelViewMatrix[1][1]\n  );\n  vec2 offset = pixelScale * normalize(aTexCoord - vec2(0.5, 0.5)) * vec2(1., -1.);\n  vec2 textureOffset = offset * (1. / vec2(\n    uGlyphRect.z - uGlyphRect.x,\n    uGlyphRect.w - uGlyphRect.y\n  ));\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n\n  positionVec4.xy += offset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord + textureOffset;\n  w = gl_Position.w;\n}\n",fontFrag:R+"#ifndef WEBGL2\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n#if 0\n  // simulate integer math using floats\n	#define int float\n	#define ivec2 vec2\n	#define INT(x) float(x)\n\n	int ifloor(float v) { return floor(v); }\n	ivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n	precision highp int;\n	#define INT(x) x\n\n	int ifloor(float v) { return int(v); }\n	int ifloor(int v) { return v; }\n	ivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nIN vec2 vTexCoord;\n\n// some helper functions\nint ROUND(float v) { return ifloor(v + 0.5); }\nivec2 ROUND(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = ROUND(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return TEXTURE(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  OUT_COLOR = vec4(uMaterialColor.rgb, 1.) * uMaterialColor.a;\n  OUT_COLOR *= saturate(max(antialias, cover));\n}\n",lineVert:C+"/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nprecision mediump float;\nprecision mediump int;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform bool uUseLineColor;\nuniform vec4 uMaterialColor;\n\nuniform vec4 uViewport;\nuniform int uPerspective;\nuniform int uStrokeJoin;\n\nattribute vec4 aPosition;\nattribute vec3 aTangentIn;\nattribute vec3 aTangentOut;\nattribute float aSide;\nattribute vec4 aVertexColor;\n\nvarying vec4 vColor;\nvarying vec2 vTangent;\nvarying vec2 vCenter;\nvarying vec2 vPosition;\nvarying float vMaxDist;\nvarying float vCap;\nvarying float vJoin;\n\nvec2 lineIntersection(vec2 aPoint, vec2 aDir, vec2 bPoint, vec2 bDir) {\n  // Rotate and translate so a starts at the origin and goes out to the right\n  bPoint -= aPoint;\n  vec2 rotatedBFrom = vec2(\n    bPoint.x*aDir.x + bPoint.y*aDir.y,\n    bPoint.y*aDir.x - bPoint.x*aDir.y\n  );\n  vec2 bTo = bPoint + bDir;\n  vec2 rotatedBTo = vec2(\n    bTo.x*aDir.x + bTo.y*aDir.y,\n    bTo.y*aDir.x - bTo.x*aDir.y\n  );\n  float intersectionDistance =\n    rotatedBTo.x + (rotatedBFrom.x - rotatedBTo.x) * rotatedBTo.y /\n    (rotatedBTo.y - rotatedBFrom.y);\n  return aPoint + aDir * intersectionDistance;\n}\n\nvoid main() {\n  // Caps have one of either the in or out tangent set to 0\n  vCap = (aTangentIn == vec3(0.)) != (aTangentOut == (vec3(0.)))\n    ? 1. : 0.;\n\n  // Joins have two unique, defined tangents\n  vJoin = (\n    aTangentIn != vec3(0.) &&\n    aTangentOut != vec3(0.) &&\n    aTangentIn != aTangentOut\n  ) ? 1. : 0.;\n\n  vec4 posp = uModelViewMatrix * aPosition;\n  vec4 posqIn = uModelViewMatrix * (aPosition + vec4(aTangentIn, 0));\n  vec4 posqOut = uModelViewMatrix * (aPosition + vec4(aTangentOut, 0));\n\n  float facingCamera = pow(\n    // The word space tangent's z value is 0 if it's facing the camera\n    abs(normalize(posqIn-posp).z),\n\n    // Using pow() here to ramp `facingCamera` up from 0 to 1 really quickly\n    // so most lines get scaled and don't get clipped\n    0.25\n  );\n\n  // using a scale <1 moves the lines towards the camera\n  // in order to prevent popping effects due to half of\n  // the line disappearing behind the geometry faces.\n  float scale = mix(1., 0.995, facingCamera);\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  posp.xyz = posp.xyz * scale;\n  posqIn.xyz = posqIn.xyz * scale;\n  posqOut.xyz = posqOut.xyz * scale;\n\n  vec4 p = uProjectionMatrix * posp;\n  vec4 qIn = uProjectionMatrix * posqIn;\n  vec4 qOut = uProjectionMatrix * posqOut;\n  vCenter = p.xy;\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangentIn = normalize((qIn.xy*p.w - p.xy*qIn.w) * uViewport.zw);\n  vec2 tangentOut = normalize((qOut.xy*p.w - p.xy*qOut.w) * uViewport.zw);\n\n  vec2 curPerspScale;\n  if(uPerspective == 1) {\n    // Perspective ---\n    // convert from world to clip by multiplying with projection scaling factor\n    // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n    // invert Y, projections in Processing invert Y\n    curPerspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;\n  } else {\n    // No Perspective ---\n    // multiply by W (to cancel out division by W later in the pipeline) and\n    // convert from screen to clip (derived from clip to screen above)\n    curPerspScale = p.w / (0.5 * uViewport.zw);\n  }\n\n  vec2 offset;\n  if (vJoin == 1.) {\n    vTangent = normalize(tangentIn + tangentOut);\n    vec2 normalIn = vec2(-tangentIn.y, tangentIn.x);\n    vec2 normalOut = vec2(-tangentOut.y, tangentOut.x);\n    float side = sign(aSide);\n    float sideEnum = abs(aSide);\n\n    // We generate vertices for joins on either side of the centerline, but\n    // the \"elbow\" side is the only one needing a join. By not setting the\n    // offset for the other side, all its vertices will end up in the same\n    // spot and not render, effectively discarding it.\n    if (sign(dot(tangentOut, vec2(-tangentIn.y, tangentIn.x))) != side) {\n      // Side enums:\n      //   1: the side going into the join\n      //   2: the middle of the join\n      //   3: the side going out of the join\n      if (sideEnum == 2.) {\n        // Calculate the position + tangent on either side of the join, and\n        // find where the lines intersect to find the elbow of the join\n        vec2 c = (posp.xy/posp.w + vec2(1.,1.)) * 0.5 * uViewport.zw;\n        vec2 intersection = lineIntersection(\n          c + (side * normalIn * uStrokeWeight / 2.) * curPerspScale,\n          tangentIn,\n          c + (side * normalOut * uStrokeWeight / 2.) * curPerspScale,\n          tangentOut\n        );\n        offset = (intersection - c);\n\n        // When lines are thick and the angle of the join approaches 180, the\n        // elbow might be really far from the center. We'll apply a limit to\n        // the magnitude to avoid lines going across the whole screen when this\n        // happens.\n        float mag = length(offset);\n        float maxMag = 3. * uStrokeWeight;\n        if (mag > maxMag) {\n          offset *= maxMag / mag;\n        }\n      } else if (sideEnum == 1.) {\n        offset = side * normalIn * curPerspScale * uStrokeWeight / 2.;\n      } else if (sideEnum == 3.) {\n        offset = side * normalOut * curPerspScale * uStrokeWeight / 2.;\n      }\n    }\n    if (uStrokeJoin == STROKE_JOIN_BEVEL) {\n      vec2 avgNormal = vec2(-vTangent.y, vTangent.x);\n      vMaxDist = abs(dot(avgNormal, normalIn * uStrokeWeight / 2.));\n    } else {\n      vMaxDist = uStrokeWeight / 2.;\n    }\n  } else {\n    vec2 tangent = aTangentIn == vec3(0.) ? tangentOut : tangentIn;\n    vTangent = tangent;\n    vec2 normal = vec2(-tangent.y, tangent.x);\n\n    float normalOffset = sign(aSide);\n    // Caps will have side values of -2 or 2 on the edge of the cap that\n    // extends out from the line\n    float tangentOffset = abs(aSide) - 1.;\n    offset = (normal * normalOffset + tangent * tangentOffset) *\n      uStrokeWeight * 0.5 * curPerspScale;\n    vMaxDist = uStrokeWeight / 2.;\n  }\n  vPosition = vCenter + offset / curPerspScale;\n\n  gl_Position.xy = p.xy + offset.xy;\n  gl_Position.zw = p.zw;\n  \n  vColor = (uUseLineColor ? aVertexColor : uMaterialColor);\n}\n",lineFrag:C+"precision mediump float;\nprecision mediump int;\n\nuniform vec4 uMaterialColor;\nuniform int uStrokeCap;\nuniform int uStrokeJoin;\nuniform float uStrokeWeight;\n\nvarying vec4 vColor;\nvarying vec2 vTangent;\nvarying vec2 vCenter;\nvarying vec2 vPosition;\nvarying float vMaxDist;\nvarying float vCap;\nvarying float vJoin;\n\nfloat distSquared(vec2 a, vec2 b) {\n  vec2 aToB = b - a;\n  return dot(aToB, aToB);\n}\n\nvoid main() {\n  if (vCap > 0.) {\n    if (\n      uStrokeCap == STROKE_CAP_ROUND &&\n      distSquared(vPosition, vCenter) > uStrokeWeight * uStrokeWeight * 0.25\n    ) {\n      discard;\n    } else if (\n      uStrokeCap == STROKE_CAP_SQUARE &&\n      dot(vPosition - vCenter, vTangent) > 0.\n    ) {\n      discard;\n    }\n    // Use full area for PROJECT\n  } else if (vJoin > 0.) {\n    if (\n      uStrokeJoin == STROKE_JOIN_ROUND &&\n      distSquared(vPosition, vCenter) > uStrokeWeight * uStrokeWeight * 0.25\n    ) {\n      discard;\n    } else if (uStrokeJoin == STROKE_JOIN_BEVEL) {\n      vec2 normal = vec2(-vTangent.y, vTangent.x);\n      if (abs(dot(vPosition - vCenter, normal)) > vMaxDist) {\n        discard;\n      }\n    }\n    // Use full area for MITER\n  }\n  gl_FragColor = vec4(vColor.rgb, 1.) * vColor.a;\n}\n",pointVert:"attribute vec3 aPosition;\nuniform float uPointSize;\nvarying float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvoid main() {\n	vec4 positionVec4 =  vec4(aPosition, 1.0);\n	gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n	gl_PointSize = uPointSize;\n	vStrokeWeight = uPointSize;\n}",pointFrag:"precision mediump float;\nprecision mediump int;\nuniform vec4 uMaterialColor;\nvarying float vStrokeWeight;\n\nvoid main(){\n  float mask = 0.0;\n\n  // make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n  // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n  mask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n  // if strokeWeight is 1 or less lets just draw a square\n  // this prevents weird artifacting from carving circles when our points are really small\n  // if strokeWeight is larger than 1, we just use it as is\n\n  mask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n  // throw away the borders of the mask\n  // otherwise we get weird alpha blending issues\n\n  if(mask > 0.98){\n    discard;\n  }\n\n  gl_FragColor = vec4(uMaterialColor.rgb, 1.) * uMaterialColor.a;\n}\n"};/**
 * @private
 * @param {Uint8Array|Float32Array|undefined} pixels An existing pixels array to reuse if the size is the same
 * @param {WebGLRenderingContext} gl The WebGL context
 * @param {WebGLFramebuffer|null} framebuffer The Framebuffer to read
 * @param {Number} x The x coordiante to read, premultiplied by pixel density
 * @param {Number} y The y coordiante to read, premultiplied by pixel density
 * @param {Number} width The width in pixels to be read (factoring in pixel density)
 * @param {Number} height The height in pixels to be read (factoring in pixel density)
 * @param {GLEnum} format Either RGB or RGBA depending on how many channels to read
 * @param {GLEnum} type The datatype of each channel, e.g. UNSIGNED_BYTE or FLOAT
 * @param {Number|undefined} flipY If provided, the total height with which to flip the y axis about
 * @returns {Uint8Array|Float32Array} pixels A pixels array with the current state of the
 * WebGL context read into it
 */function I(t,r,n,o,a,s,l,c,u,p){// Record the currently bound framebuffer so we can go back to it after, and
// bind the framebuffer we want to read from
var d=r.getParameter(r.FRAMEBUFFER_BINDING);r.bindFramebuffer(r.FRAMEBUFFER,n);var m=c===r.RGBA?4:3,f=s*l*m,h=u===r.UNSIGNED_BYTE?Uint8Array:Float32Array;// Make a pixels buffer if it doesn't already exist
if(t instanceof h&&t.length===f||(t=new h(f)),r.readPixels(o,p?p-a-l:a,s,l,c,u,t),r.bindFramebuffer(r.FRAMEBUFFER,d),p)for(var y=Math.floor(l/2),g=new h(s*m),v=0;v<y;v++){var b=v*s*4,x=(l-v-1)*s*4;g.set(t.subarray(b,b+4*s)),t.copyWithin(b,x,x+4*s),t.set(g,x)}return t}/**
 * @private
 * @param {WebGLRenderingContext} gl The WebGL context
 * @param {WebGLFramebuffer|null} framebuffer The Framebuffer to read
 * @param {Number} x The x coordinate to read, premultiplied by pixel density
 * @param {Number} y The y coordinate to read, premultiplied by pixel density
 * @param {GLEnum} format Either RGB or RGBA depending on how many channels to read
 * @param {GLEnum} type The datatype of each channel, e.g. UNSIGNED_BYTE or FLOAT
 * @param {Number|undefined} flipY If provided, the total height with which to flip the y axis about
 * @returns {Number[]} pixels The channel data for the pixel at that location
 */function P(t,r,n,o,a,s,l){// Record the currently bound framebuffer so we can go back to it after, and
// bind the framebuffer we want to read from
var c=t.getParameter(t.FRAMEBUFFER_BINDING);t.bindFramebuffer(t.FRAMEBUFFER,r);var u=a===t.RGBA?4:3,p=new(s===t.UNSIGNED_BYTE?Uint8Array:Float32Array)(u);return t.readPixels(n,l?l-o-1:o,1,1,a,s,p),t.bindFramebuffer(t.FRAMEBUFFER,c),Array.from(p)}/**
 * 3D graphics class
 * @private
 * @class p5.RendererGL
 * @constructor
 * @extends p5.Renderer
 * @todo extend class to include public method for offscreen
 * rendering (FBO).
 *//**
 * @module Rendering
 * @submodule Rendering
 * @for p5
 *//**
 * Set attributes for the WebGL Drawing context.
 * This is a way of adjusting how the WebGL
 * renderer works to fine-tune the display and performance.
 *
 * Note that this will reinitialize the drawing context
 * if called after the WebGL canvas is made.
 *
 * If an object is passed as the parameter, all attributes
 * not declared in the object will be set to defaults.
 *
 * The available attributes are:
 * <br>
 * alpha - indicates if the canvas contains an alpha buffer
 * default is true
 *
 * depth - indicates whether the drawing buffer has a depth buffer
 * of at least 16 bits - default is true
 *
 * stencil - indicates whether the drawing buffer has a stencil buffer
 * of at least 8 bits
 *
 * antialias - indicates whether or not to perform anti-aliasing
 * default is false (true in Safari)
 *
 * premultipliedAlpha - indicates that the page compositor will assume
 * the drawing buffer contains colors with pre-multiplied alpha
 * default is true
 *
 * preserveDrawingBuffer - if true the buffers will not be cleared and
 * and will preserve their values until cleared or overwritten by author
 * (note that p5 clears automatically on draw loop)
 * default is true
 *
 * perPixelLighting - if true, per-pixel lighting will be used in the
 * lighting shader otherwise per-vertex lighting is used.
 * default is true.
 *
 * version - either 1 or 2, to specify which WebGL version to ask for. By
 * default, WebGL 2 will be requested. If WebGL2 is not available, it will
 * fall back to WebGL 1. You can check what version is used with by looking at
 * the global `webglVersion` property.
 *
 * @method setAttributes
 * @for p5
 * @param  {String}  key Name of attribute
 * @param  {Boolean}        value New value of named attribute
 * @example
 * <div>
 * <code>
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 * }
 *
 * function draw() {
 *   background(255);
 *   push();
 *   rotateZ(frameCount * 0.02);
 *   rotateX(frameCount * 0.02);
 *   rotateY(frameCount * 0.02);
 *   fill(0, 0, 0);
 *   box(50);
 *   pop();
 * }
 * </code>
 * </div>
 * <br>
 * Now with the antialias attribute set to true.
 * <br>
 * <div>
 * <code>
 * function setup() {
 *   setAttributes('antialias', true);
 *   createCanvas(100, 100, WEBGL);
 * }
 *
 * function draw() {
 *   background(255);
 *   push();
 *   rotateZ(frameCount * 0.02);
 *   rotateX(frameCount * 0.02);
 *   rotateY(frameCount * 0.02);
 *   fill(0, 0, 0);
 *   box(50);
 *   pop();
 * }
 * </code>
 * </div>
 *
 * <div>
 * <code>
 * // press the mouse button to disable perPixelLighting
 * function setup() {
 *   createCanvas(100, 100, WEBGL);
 *   noStroke();
 *   fill(255);
 * }
 *
 * let lights = [
 *   { c: '#f00', t: 1.12, p: 1.91, r: 0.2 },
 *   { c: '#0f0', t: 1.21, p: 1.31, r: 0.2 },
 *   { c: '#00f', t: 1.37, p: 1.57, r: 0.2 },
 *   { c: '#ff0', t: 1.12, p: 1.91, r: 0.7 },
 *   { c: '#0ff', t: 1.21, p: 1.31, r: 0.7 },
 *   { c: '#f0f', t: 1.37, p: 1.57, r: 0.7 }
 * ];
 *
 * function draw() {
 *   let t = millis() / 1000 + 1000;
 *   background(0);
 *   directionalLight(color('#222'), 1, 1, 1);
 *
 *   for (let i = 0; i < lights.length; i++) {
 *     let light = lights[i];
 *     pointLight(
 *       color(light.c),
 *       p5.Vector.fromAngles(t * light.t, t * light.p, width * light.r)
 *     );
 *   }
 *
 *   specularMaterial(255);
 *   sphere(width * 0.1);
 *
 *   rotateX(t * 0.77);
 *   rotateY(t * 0.83);
 *   rotateZ(t * 0.91);
 *   torus(width * 0.3, width * 0.07, 24, 10);
 * }
 *
 * function mousePressed() {
 *   setAttributes('perPixelLighting', false);
 *   noStroke();
 *   fill(255);
 * }
 * function mouseReleased() {
 *   setAttributes('perPixelLighting', true);
 *   noStroke();
 *   fill(255);
 * }
 * </code>
 * </div>
 *
 * @alt a rotating cube with smoother edges
 *//**
 * @method setAttributes
 * @for p5
 * @param  {Object}  obj object with key-value pairs
 */a.default.prototype.setAttributes=function(t,r){if(void 0===this._glAttributes){console.log("You are trying to use setAttributes on a p5.Graphics object that does not use a WEBGL renderer.");return}var n=!0;if(void 0!==r?(null===this._glAttributes&&(this._glAttributes={}),this._glAttributes[t]!==r&&(//changing value of previously altered attribute
this._glAttributes[t]=r,n=!1)):t instanceof Object&&this._glAttributes!==t&&(this._glAttributes=t,n=!1),this._renderer.isP3D&&!n){if(!this._setupDone){for(var o in this._renderer.retainedMode.geometry)if(this._renderer.retainedMode.geometry.hasOwnProperty(o)){a.default._friendlyError("Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()");return}}this.push(),this._renderer._resetContext(),this.pop(),this._renderer._curCamera&&(this._renderer._curCamera._renderer=this._renderer)}},a.default.RendererGL=/*#__PURE__*/function(t){x(n,t);var r=w(n);function n(t,o,l,c){var u;return g(this,n),(u=r.call(this,t,o,l))._setAttributeDefaults(o),u._initContext(),u.isP3D=!0,// This redundant property is useful in reminding you that you are
// interacting with WebGLRenderingContext, still worth considering future removal
u.GL=u.drawingContext,u._pInst._setProperty("drawingContext",u.drawingContext),u._isErasing=!1,u._enableLighting=!1,u.ambientLightColors=[],u.specularColors=[1,1,1],u.directionalLightDirections=[],u.directionalLightDiffuseColors=[],u.directionalLightSpecularColors=[],u.pointLightPositions=[],u.pointLightDiffuseColors=[],u.pointLightSpecularColors=[],u.spotLightPositions=[],u.spotLightDirections=[],u.spotLightDiffuseColors=[],u.spotLightSpecularColors=[],u.spotLightAngle=[],u.spotLightConc=[],u.drawMode=s.FILL,u.curFillColor=u._cachedFillStyle=[1,1,1,1],u.curAmbientColor=u._cachedFillStyle=[1,1,1,1],u.curSpecularColor=u._cachedFillStyle=[0,0,0,0],u.curEmissiveColor=u._cachedFillStyle=[0,0,0,0],u.curStrokeColor=u._cachedStrokeStyle=[0,0,0,1],u.curBlendMode=s.BLEND,u._cachedBlendMode=void 0,u.webglVersion===s.WEBGL2?u.blendExt=u.GL:u.blendExt=u.GL.getExtension("EXT_blend_minmax"),u._isBlending=!1,u._hasSetAmbient=!1,u._useSpecularMaterial=!1,u._useEmissiveMaterial=!1,u._useNormalMaterial=!1,u._useShininess=1,u._useLineColor=!1,u._useVertexColor=!1,u.registerEnabled=[],u._tint=[255,255,255,255],u.constantAttenuation=1,u.linearAttenuation=0,u.quadraticAttenuation=0,/**
    * model view, projection, & normal
    * matrices
    */u.uMVMatrix=new a.default.Matrix,u.uPMatrix=new a.default.Matrix,u.uNMatrix=new a.default.Matrix("mat3"),u._currentNormal=new a.default.Vector(0,0,1),u._curCamera=new a.default.Camera(S(u)),u._curCamera._computeCameraDefaultSettings(),u._curCamera._setDefaultCamera(),// for executing orbitControl()
u.prevTouches=[],u.zoomVelocity=0,u.rotateVelocity=new a.default.Vector(0,0),u.moveVelocity=new a.default.Vector(0,0),u.executeZoom=!1,u.executeRotateAndMove=!1,u._defaultLightShader=void 0,u._defaultImmediateModeShader=void 0,u._defaultNormalShader=void 0,u._defaultColorShader=void 0,u._defaultPointShader=void 0,u.userFillShader=void 0,u.userStrokeShader=void 0,u.userPointShader=void 0,// Geometry and Material hashes stored here
u.retainedMode={geometry:{},buffers:{stroke:[new a.default.RenderBuffer(4,"lineVertexColors","lineColorBuffer","aVertexColor",S(u),u._flatten),new a.default.RenderBuffer(3,"lineVertices","lineVerticesBuffer","aPosition",S(u),u._flatten),new a.default.RenderBuffer(3,"lineTangentsIn","lineTangentsInBuffer","aTangentIn",S(u),u._flatten),new a.default.RenderBuffer(3,"lineTangentsOut","lineTangentsOutBuffer","aTangentOut",S(u),u._flatten),new a.default.RenderBuffer(1,"lineSides","lineSidesBuffer","aSide",S(u))],fill:[new a.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",S(u),u._vToNArray),new a.default.RenderBuffer(3,"vertexNormals","normalBuffer","aNormal",S(u),u._vToNArray),new a.default.RenderBuffer(4,"vertexColors","colorBuffer","aVertexColor",S(u)),new a.default.RenderBuffer(3,"vertexAmbients","ambientBuffer","aAmbientColor",S(u)),new a.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",S(u),u._flatten)],text:[new a.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",S(u),u._vToNArray),new a.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",S(u),u._flatten)]}},// Geometry and Material hashes stored here
u.immediateMode={geometry:new a.default.Geometry,shapeMode:s.TRIANGLE_FAN,_bezierVertex:[],_quadraticVertex:[],_curveVertex:[],buffers:{fill:[new a.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",S(u),u._vToNArray),new a.default.RenderBuffer(3,"vertexNormals","normalBuffer","aNormal",S(u),u._vToNArray),new a.default.RenderBuffer(4,"vertexColors","colorBuffer","aVertexColor",S(u)),new a.default.RenderBuffer(3,"vertexAmbients","ambientBuffer","aAmbientColor",S(u)),new a.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",S(u),u._flatten)],stroke:[new a.default.RenderBuffer(4,"lineVertexColors","lineColorBuffer","aVertexColor",S(u),u._flatten),new a.default.RenderBuffer(3,"lineVertices","lineVerticesBuffer","aPosition",S(u),u._flatten),new a.default.RenderBuffer(3,"lineTangentsIn","lineTangentsInBuffer","aTangentIn",S(u),u._flatten),new a.default.RenderBuffer(3,"lineTangentsOut","lineTangentsOutBuffer","aTangentOut",S(u),u._flatten),new a.default.RenderBuffer(1,"lineSides","lineSidesBuffer","aSide",S(u))],point:u.GL.createBuffer()}},u.pointSize=5,u.curStrokeWeight=1,u.curStrokeCap=s.ROUND,u.curStrokeJoin=s.ROUND,u.textures=new Map,u.framebuffers=new Set,u.textureMode=s.IMAGE,u.textureWrapX=s.CLAMP,u.textureWrapY=s.CLAMP,u._tex=null,u._curveTightness=6,u._lookUpTableBezier=[],u._lookUpTableQuadratic=[],u._lutBezierDetail=0,u._lutQuadraticDetail=0,u.isProcessingVertices=!1,u._tessy=u._initTessy(),u.fontInfos={},u._curShader=void 0,u}//////////////////////////////////////////////
return(// Setting
//////////////////////////////////////////////
b(n,[{key:"_setAttributeDefaults",value:function(t){var r={alpha:!0,depth:!0,stencil:!0,antialias:navigator.userAgent.toLowerCase().includes("safari"),premultipliedAlpha:!0,preserveDrawingBuffer:!0,perPixelLighting:!0,version:2};null===t._glAttributes?t._glAttributes=r:t._glAttributes=Object.assign(r,t._glAttributes)}},{key:"_initContext",value:function(){if(1!==this._pInst._glAttributes.version&&(this.drawingContext=this.canvas.getContext("webgl2",this._pInst._glAttributes)),this.webglVersion=this.drawingContext?s.WEBGL2:s.WEBGL,this._pInst._setProperty("webglVersion",this.webglVersion),this.drawingContext||// disabled via `setAttributes({ version: 1 })` or because the device
// doesn't support it), fall back to a WebGL1 context
(this.drawingContext=this.canvas.getContext("webgl",this._pInst._glAttributes)||this.canvas.getContext("experimental-webgl",this._pInst._glAttributes)),null===this.drawingContext)throw Error("Error creating webgl context");var t=this.drawingContext;t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),// they match the way we render colors. This will make framebuffer textures
// be encoded the same way as textures from everything else.
t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0),this._viewport=this.drawingContext.getParameter(this.drawingContext.VIEWPORT)}//This is helper function to reset the context anytime the attributes
},{key:"_resetContext",value:function(t,r){var n=this.width,o=this.height,s=this.canvas.id,l=this._pInst instanceof a.default.Graphics;if(l){var c=this._pInst;c.canvas.parentNode.removeChild(c.canvas),c.canvas=document.createElement("canvas"),(c._pInst._userNode||document.body).appendChild(c.canvas),a.default.Element.call(c,c.canvas,c._pInst),c.width=n,c.height=o}else{var u=this.canvas;u&&u.parentNode.removeChild(u),(u=document.createElement("canvas")).id=s,this._pInst._userNode?this._pInst._userNode.appendChild(u):document.body.appendChild(u),this._pInst.canvas=u,this.canvas=u}var p=new a.default.RendererGL(this._pInst.canvas,this._pInst,!l);this._pInst._setProperty("_renderer",p),p.resize(n,o),p._applyDefaults(),l||this._pInst._elements.push(p),"function"==typeof r&&//we finish switching out the renderer
setTimeout(function(){r.apply(window._renderer,t)},0)}/**
    * @class p5.RendererGL
    */},{key:"_update",value:function(){// reset model view and apply initial camera transform
// (containing only look at info; no projection).
this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0],this._curCamera.cameraMatrix.mat4[1],this._curCamera.cameraMatrix.mat4[2],this._curCamera.cameraMatrix.mat4[3],this._curCamera.cameraMatrix.mat4[4],this._curCamera.cameraMatrix.mat4[5],this._curCamera.cameraMatrix.mat4[6],this._curCamera.cameraMatrix.mat4[7],this._curCamera.cameraMatrix.mat4[8],this._curCamera.cameraMatrix.mat4[9],this._curCamera.cameraMatrix.mat4[10],this._curCamera.cameraMatrix.mat4[11],this._curCamera.cameraMatrix.mat4[12],this._curCamera.cameraMatrix.mat4[13],this._curCamera.cameraMatrix.mat4[14],this._curCamera.cameraMatrix.mat4[15]),this.ambientLightColors.length=0,this.specularColors=[1,1,1],this.directionalLightDirections.length=0,this.directionalLightDiffuseColors.length=0,this.directionalLightSpecularColors.length=0,this.pointLightPositions.length=0,this.pointLightDiffuseColors.length=0,this.pointLightSpecularColors.length=0,this.spotLightPositions.length=0,this.spotLightDirections.length=0,this.spotLightDiffuseColors.length=0,this.spotLightSpecularColors.length=0,this.spotLightAngle.length=0,this.spotLightConc.length=0,this._enableLighting=!1,this._tint=[255,255,255,255],this.GL.clear(this.GL.DEPTH_BUFFER_BIT)}/**
    * [background description]
    */},{key:"background",value:function(){var t,r=(t=this._pInst).color.apply(t,arguments),n=r.levels[0]/255,o=r.levels[1]/255,a=r.levels[2]/255,s=r.levels[3]/255;this.clear(n,o,a,s)}//////////////////////////////////////////////
},{key:"fill",value:function(t,r,n,o){//see material.js for more info on color blending in webgl
var l=a.default.prototype.color.apply(this._pInst,arguments);this.curFillColor=l._array,this.drawMode=s.FILL,this._useNormalMaterial=!1,this._tex=null}/**
    * Basic stroke material for geometry with a given color
    * @method  stroke
    * @param  {Number|Number[]|String|p5.Color} v1  gray value,
    * red or hue value (depending on the current color mode),
    * or color Array, or CSS color string
    * @param  {Number}            [v2] green or saturation value
    * @param  {Number}            [v3] blue or brightness value
    * @param  {Number}            [a]  opacity
    * @example
    * <div>
    * <code>
    * function setup() {
    *   createCanvas(200, 200, WEBGL);
    * }
    *
    * function draw() {
    *   background(0);
    *   stroke(240, 150, 150);
    *   fill(100, 100, 240);
    *   rotateX(frameCount * 0.01);
    *   rotateY(frameCount * 0.01);
    *   box(75, 75, 75);
    * }
    * </code>
    * </div>
    *
    * @alt
    * black canvas with purple cube with pink outline spinning
    */},{key:"stroke",value:function(t,r,n,o){var s=a.default.prototype.color.apply(this._pInst,arguments);this.curStrokeColor=s._array}},{key:"strokeCap",value:function(t){this.curStrokeCap=t}},{key:"strokeJoin",value:function(t){this.curStrokeJoin=t}},{key:"filter",value:function(t){// filter can be achieved using custom shaders.
// https://github.com/aferriss/p5jsShaderExamples
// https://itp-xstory.github.io/p5js-shaders/#/
a.default._friendlyError("filter() does not work in WEBGL mode")}},{key:"blendMode",value:function(t){t===s.DARKEST||t===s.LIGHTEST||t===s.ADD||t===s.BLEND||t===s.SUBTRACT||t===s.SCREEN||t===s.EXCLUSION||t===s.REPLACE||t===s.MULTIPLY||t===s.REMOVE?this.curBlendMode=t:(t===s.BURN||t===s.OVERLAY||t===s.HARD_LIGHT||t===s.SOFT_LIGHT||t===s.DODGE)&&console.warn("BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.")}},{key:"erase",value:function(t,r){this._isErasing||(this._applyBlendMode(s.REMOVE),this._isErasing=!0,this._cachedFillStyle=this.curFillColor.slice(),this.curFillColor=[1,1,1,t/255],this._cachedStrokeStyle=this.curStrokeColor.slice(),this.curStrokeColor=[1,1,1,r/255])}},{key:"noErase",value:function(){this._isErasing&&(this._isErasing=!1,this.curFillColor=this._cachedFillStyle.slice(),this.curStrokeColor=this._cachedStrokeStyle.slice(),this.blendMode(this._cachedBlendMode))}/**
    * Change weight of stroke
    * @method  strokeWeight
    * @param  {Number} stroke weight to be used for drawing
    * @example
    * <div>
    * <code>
    * function setup() {
    *   createCanvas(200, 400, WEBGL);
    *   setAttributes('antialias', true);
    * }
    *
    * function draw() {
    *   background(0);
    *   noStroke();
    *   translate(0, -100, 0);
    *   stroke(240, 150, 150);
    *   fill(100, 100, 240);
    *   push();
    *   strokeWeight(8);
    *   rotateX(frameCount * 0.01);
    *   rotateY(frameCount * 0.01);
    *   sphere(75);
    *   pop();
    *   push();
    *   translate(0, 200, 0);
    *   strokeWeight(1);
    *   rotateX(frameCount * 0.01);
    *   rotateY(frameCount * 0.01);
    *   sphere(75);
    *   pop();
    * }
    * </code>
    * </div>
    *
    * @alt
    * black canvas with two purple rotating spheres with pink
    * outlines the sphere on top has much heavier outlines,
    */},{key:"strokeWeight",value:function(t){this.curStrokeWeight!==t&&(this.pointSize=t,this.curStrokeWeight=t)}// x,y are canvas-relative (pre-scaled by _pixelDensity)
},{key:"_getPixel",value:function(t,r){var n=this.GL;return P(n,null,t,r,n.RGBA,n.UNSIGNED_BYTE,this._pInst.height*this._pInst.pixelDensity())}/**
    * Loads the pixels data for this canvas into the pixels[] attribute.
    * Note that updatePixels() and set() do not work.
    * Any pixel manipulation must be done directly to the pixels[] array.
    *
    * @private
    * @method loadPixels
    */},{key:"loadPixels",value:function(){var t=this._pixelsState;//@todo_FES
if(!0!==this._pInst._glAttributes.preserveDrawingBuffer){console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.");return}var r=this._pInst._pixelDensity,n=this.GL;t._setProperty("pixels",I(t.pixels,n,null,0,0,this.width*r,this.height*r,n.RGBA,n.UNSIGNED_BYTE,this.height*r))}},{key:"updatePixels",value:function(){var t=this._getTempFramebuffer();t.pixels=this._pixelsState.pixels,t.updatePixels(),this._pInst.push(),this._pInst.resetMatrix(),this._pInst.clear(),this._pInst.imageMode(s.CENTER),this._pInst.image(t,0,0),this._pInst.pop(),this.GL.clearDepth(1),this.GL.clear(this.GL.DEPTH_BUFFER_BIT)}/**
    * @private
    * @returns {p5.Framebuffer} A p5.Framebuffer set to match the size and settings
    * of the renderer's canvas. It will be created if it does not yet exist, and
    * reused if it does.
    */},{key:"_getTempFramebuffer",value:function(){return this._tempFramebuffer||(this._tempFramebuffer=this._pInst.createFramebuffer({format:s.UNSIGNED_BYTE,useDepth:this._pInst._glAttributes.depth,depthFormat:s.UNSIGNED_INT,antialias:this._pInst._glAttributes.antialias})),this._tempFramebuffer}//////////////////////////////////////////////
},{key:"geometryInHash",value:function(t){return void 0!==this.retainedMode.geometry[t]}/**
    * [resize description]
    * @private
    * @param  {Number} w [description]
    * @param  {Number} h [description]
    */},{key:"resize",value:function(t,r){a.default.Renderer.prototype.resize.call(this,t,r),this.GL.viewport(0,0,this.GL.drawingBufferWidth,this.GL.drawingBufferHeight),this._viewport=this.GL.getParameter(this.GL.VIEWPORT),this._curCamera._resize();var n=this._pixelsState;void 0!==n.pixels&&n._setProperty("pixels",new Uint8Array(this.GL.drawingBufferWidth*this.GL.drawingBufferHeight*4));var o=!0,s=!1,l=void 0;try{for(var c,u=this.framebuffers[Symbol.iterator]();!(o=(c=u.next()).done);o=!0)// can also update their size
c.value._canvasSizeChanged()}catch(t){s=!0,l=t}finally{try{o||null==u.return||u.return()}finally{if(s)throw l}}}/**
    * clears color and depth buffers
    * with r,g,b,a
    * @private
    * @param {Number} r normalized red val.
    * @param {Number} g normalized green val.
    * @param {Number} b normalized blue val.
    * @param {Number} a normalized alpha val.
    */},{key:"clear",value:function(){var t=(arguments.length<=0?void 0:arguments[0])||0,r=(arguments.length<=1?void 0:arguments[1])||0,n=(arguments.length<=2?void 0:arguments[2])||0,o=(arguments.length<=3?void 0:arguments[3])||0;this.GL.clearColor(t*o,r*o,n*o,o),this.GL.clearDepth(1),this.GL.clear(this.GL.COLOR_BUFFER_BIT|this.GL.DEPTH_BUFFER_BIT)}},{key:"applyMatrix",value:function(t,r,n,o,s,l){16==arguments.length?a.default.Matrix.prototype.apply.apply(this.uMVMatrix,arguments):this.uMVMatrix.apply([t,r,0,0,n,o,0,0,0,0,1,0,s,l,0,1])}/**
    * [translate description]
    * @private
    * @param  {Number} x [description]
    * @param  {Number} y [description]
    * @param  {Number} z [description]
    * @chainable
    * @todo implement handle for components or vector as args
    */},{key:"translate",value:function(t,r,n){return t instanceof a.default.Vector&&(n=t.z,r=t.y,t=t.x),this.uMVMatrix.translate([t,r,n]),this}/**
    * Scales the Model View Matrix by a vector
    * @private
    * @param  {Number | p5.Vector | Array} x [description]
    * @param  {Number} [y] y-axis scalar
    * @param  {Number} [z] z-axis scalar
    * @chainable
    */},{key:"scale",value:function(t,r,n){return this.uMVMatrix.scale(t,r,n),this}},{key:"rotate",value:function(t,r){return void 0===r?this.rotateZ(t):(a.default.Matrix.prototype.rotate.apply(this.uMVMatrix,arguments),this)}},{key:"rotateX",value:function(t){return this.rotate(t,1,0,0),this}},{key:"rotateY",value:function(t){return this.rotate(t,0,1,0),this}},{key:"rotateZ",value:function(t){return this.rotate(t,0,0,1),this}},{key:"push",value:function(){// get the base renderer style
var t=a.default.Renderer.prototype.push.apply(this),r=t.properties;// add webgl-specific style properties
return r.uMVMatrix=this.uMVMatrix.copy(),r.uPMatrix=this.uPMatrix.copy(),r._curCamera=this._curCamera,// this preserves any references stored using 'createCamera'
this._curCamera=this._curCamera.copy(),r.ambientLightColors=this.ambientLightColors.slice(),r.specularColors=this.specularColors.slice(),r.directionalLightDirections=this.directionalLightDirections.slice(),r.directionalLightDiffuseColors=this.directionalLightDiffuseColors.slice(),r.directionalLightSpecularColors=this.directionalLightSpecularColors.slice(),r.pointLightPositions=this.pointLightPositions.slice(),r.pointLightDiffuseColors=this.pointLightDiffuseColors.slice(),r.pointLightSpecularColors=this.pointLightSpecularColors.slice(),r.spotLightPositions=this.spotLightPositions.slice(),r.spotLightDirections=this.spotLightDirections.slice(),r.spotLightDiffuseColors=this.spotLightDiffuseColors.slice(),r.spotLightSpecularColors=this.spotLightSpecularColors.slice(),r.spotLightAngle=this.spotLightAngle.slice(),r.spotLightConc=this.spotLightConc.slice(),r.userFillShader=this.userFillShader,r.userStrokeShader=this.userStrokeShader,r.userPointShader=this.userPointShader,r.pointSize=this.pointSize,r.curStrokeWeight=this.curStrokeWeight,r.curStrokeColor=this.curStrokeColor,r.curFillColor=this.curFillColor,r.curAmbientColor=this.curAmbientColor,r.curSpecularColor=this.curSpecularColor,r.curEmissiveColor=this.curEmissiveColor,r._hasSetAmbient=this._hasSetAmbient,r._useSpecularMaterial=this._useSpecularMaterial,r._useEmissiveMaterial=this._useEmissiveMaterial,r._useShininess=this._useShininess,r.constantAttenuation=this.constantAttenuation,r.linearAttenuation=this.linearAttenuation,r.quadraticAttenuation=this.quadraticAttenuation,r._enableLighting=this._enableLighting,r._useNormalMaterial=this._useNormalMaterial,r._tex=this._tex,r.drawMode=this.drawMode,r._currentNormal=this._currentNormal,r.curBlendMode=this.curBlendMode,t}},{key:"resetMatrix",value:function(){return this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0],this._curCamera.cameraMatrix.mat4[1],this._curCamera.cameraMatrix.mat4[2],this._curCamera.cameraMatrix.mat4[3],this._curCamera.cameraMatrix.mat4[4],this._curCamera.cameraMatrix.mat4[5],this._curCamera.cameraMatrix.mat4[6],this._curCamera.cameraMatrix.mat4[7],this._curCamera.cameraMatrix.mat4[8],this._curCamera.cameraMatrix.mat4[9],this._curCamera.cameraMatrix.mat4[10],this._curCamera.cameraMatrix.mat4[11],this._curCamera.cameraMatrix.mat4[12],this._curCamera.cameraMatrix.mat4[13],this._curCamera.cameraMatrix.mat4[14],this._curCamera.cameraMatrix.mat4[15]),this}//////////////////////////////////////////////
},{key:"_getImmediateStrokeShader",value:function(){// select the stroke shader to use
var t=this.userStrokeShader;return t&&t.isStrokeShader()?t:this._getLineShader()}},{key:"_getRetainedStrokeShader",value:function(){return this._getImmediateStrokeShader()}/*
     * selects which fill shader should be used based on renderer state,
     * for use with begin/endShape and immediate vertex mode.
     */},{key:"_getImmediateFillShader",value:function(){var t=this.userFillShader;if(this._useNormalMaterial&&(!t||!t.isNormalShader()))return this._getNormalShader();if(this._enableLighting){if(!t||!t.isLightShader())return this._getLightShader()}else if(this._tex){if(!t||!t.isTextureShader())return this._getLightShader()}else if(!t/*|| !fill.isColorShader()*/)return this._getImmediateModeShader();return t}/*
     * selects which fill shader should be used based on renderer state
     * for retained mode.
     */},{key:"_getRetainedFillShader",value:function(){if(this._useNormalMaterial)return this._getNormalShader();var t=this.userFillShader;if(this._enableLighting){if(!t||!t.isLightShader())return this._getLightShader()}else if(this._tex){if(!t||!t.isTextureShader())return this._getLightShader()}else if(!t/* || !fill.isColorShader()*/)return this._getColorShader();return t}},{key:"_getImmediatePointShader",value:function(){// select the point shader to use
var t=this.userPointShader;return t&&t.isPointShader()?t:this._getPointShader()}},{key:"_getRetainedLineShader",value:function(){return this._getImmediateLineShader()}},{key:"_getLightShader",value:function(){return this._defaultLightShader||(this._pInst._glAttributes.perPixelLighting?this._defaultLightShader=new a.default.Shader(this,L.phongVert,L.phongFrag):this._defaultLightShader=new a.default.Shader(this,L.lightVert,L.lightTextureFrag)),this._defaultLightShader}},{key:"_getImmediateModeShader",value:function(){return this._defaultImmediateModeShader||(this._defaultImmediateModeShader=new a.default.Shader(this,L.immediateVert,L.vertexColorFrag)),this._defaultImmediateModeShader}},{key:"_getNormalShader",value:function(){return this._defaultNormalShader||(this._defaultNormalShader=new a.default.Shader(this,L.normalVert,L.normalFrag)),this._defaultNormalShader}},{key:"_getColorShader",value:function(){return this._defaultColorShader||(this._defaultColorShader=new a.default.Shader(this,L.normalVert,L.basicFrag)),this._defaultColorShader}},{key:"_getPointShader",value:function(){return this._defaultPointShader||(this._defaultPointShader=new a.default.Shader(this,L.pointVert,L.pointFrag)),this._defaultPointShader}},{key:"_getLineShader",value:function(){return this._defaultLineShader||(this._defaultLineShader=new a.default.Shader(this,L.lineVert,L.lineFrag)),this._defaultLineShader}},{key:"_getFontShader",value:function(){return this._defaultFontShader||(this.webglVersion===s.WEBGL&&this.GL.getExtension("OES_standard_derivatives"),this._defaultFontShader=new a.default.Shader(this,this._webGL2CompatibilityPrefix("vert","mediump")+L.fontVert,this._webGL2CompatibilityPrefix("frag","mediump")+L.fontFrag)),this._defaultFontShader}},{key:"_webGL2CompatibilityPrefix",value:function(t,r){var n="";return this.webglVersion===s.WEBGL2&&(n+="#version 300 es\n#define WEBGL2\n"),"vert"===t?n+="#define VERTEX_SHADER\n":"frag"===t&&(n+="#define FRAGMENT_SHADER\n"),r&&(n+="precision ".concat(r," float;\n")),n}},{key:"_getEmptyTexture",value:function(){if(!this._emptyTexture){// a plain white texture RGBA, full alpha, single pixel.
var t=new a.default.Image(1,1);t.set(0,0,255),this._emptyTexture=new a.default.Texture(this,t)}return this._emptyTexture}},{key:"getTexture",value:function(t){var r=t;r instanceof a.default.Framebuffer&&(r=r.color);var n=this.textures.get(r);if(n)return n;var o=new a.default.Texture(this,r);return this.textures.set(r,o),o}},{key:"createFramebuffer",value:function(t){return new a.default.Framebuffer(this,t)}},{key:"_setStrokeUniforms",value:function(t){t.bindShader(),t.setUniform("uUseLineColor",this._useLineColor),t.setUniform("uMaterialColor",this.curStrokeColor),t.setUniform("uStrokeWeight",this.curStrokeWeight),t.setUniform("uStrokeCap",T[this.curStrokeCap]),t.setUniform("uStrokeJoin",M[this.curStrokeJoin])}},{key:"_setFillUniforms",value:function(t){t.bindShader(),t.setUniform("uUseVertexColor",this._useVertexColor),t.setUniform("uMaterialColor",this.curFillColor),t.setUniform("isTexture",!!this._tex),this._tex&&t.setUniform("uSampler",this._tex),t.setUniform("uTint",this._tint),t.setUniform("uHasSetAmbient",this._hasSetAmbient),t.setUniform("uAmbientMatColor",this.curAmbientColor),t.setUniform("uSpecularMatColor",this.curSpecularColor),t.setUniform("uEmissiveMatColor",this.curEmissiveColor),t.setUniform("uSpecular",this._useSpecularMaterial),t.setUniform("uEmissive",this._useEmissiveMaterial),t.setUniform("uShininess",this._useShininess),t.setUniform("uUseLighting",this._enableLighting);var r=this.pointLightDiffuseColors.length/3;t.setUniform("uPointLightCount",r),t.setUniform("uPointLightLocation",this.pointLightPositions),t.setUniform("uPointLightDiffuseColors",this.pointLightDiffuseColors),t.setUniform("uPointLightSpecularColors",this.pointLightSpecularColors);var n=this.directionalLightDiffuseColors.length/3;t.setUniform("uDirectionalLightCount",n),t.setUniform("uLightingDirection",this.directionalLightDirections),t.setUniform("uDirectionalDiffuseColors",this.directionalLightDiffuseColors),t.setUniform("uDirectionalSpecularColors",this.directionalLightSpecularColors);var o=this.ambientLightColors.length/3;t.setUniform("uAmbientLightCount",o),t.setUniform("uAmbientColor",this.ambientLightColors);var a=this.spotLightDiffuseColors.length/3;t.setUniform("uSpotLightCount",a),t.setUniform("uSpotLightAngle",this.spotLightAngle),t.setUniform("uSpotLightConc",this.spotLightConc),t.setUniform("uSpotLightDiffuseColors",this.spotLightDiffuseColors),t.setUniform("uSpotLightSpecularColors",this.spotLightSpecularColors),t.setUniform("uSpotLightLocation",this.spotLightPositions),t.setUniform("uSpotLightDirection",this.spotLightDirections),t.setUniform("uConstantAttenuation",this.constantAttenuation),t.setUniform("uLinearAttenuation",this.linearAttenuation),t.setUniform("uQuadraticAttenuation",this.quadraticAttenuation),t.bindTextures()}},{key:"_setPointUniforms",value:function(t){t.bindShader(),t.setUniform("uMaterialColor",this.curStrokeColor),// should be they be same var?
t.setUniform("uPointSize",this.pointSize*this._pInst._pixelDensity)}/* Binds a buffer to the drawing context
     * when passed more than two arguments it also updates or initializes
     * the data associated with the buffer
     */},{key:"_bindBuffer",value:function(t,r,n,o,a){if(r||(r=this.GL.ARRAY_BUFFER),this.GL.bindBuffer(r,t),void 0!==n){var s=new(o||Float32Array)(n);this.GL.bufferData(r,s,a||this.GL.STATIC_DRAW)}}///////////////////////////////
},{key:"_arraysEqual",value:function(t,r){return t.length===r.length&&t.every(function(t,n){return t===r[n]})}},{key:"_isTypedArray",value:function(t){return[Float32Array,Float64Array,Int16Array,Uint16Array,Uint32Array].some(function(r){return t instanceof r})}/**
     * turn a two dimensional array into one dimensional array
     * @private
     * @param  {Array} arr 2-dimensional array
     * @return {Array}     1-dimensional array
     * [[1, 2, 3],[4, 5, 6]] -> [1, 2, 3, 4, 5, 6]
     */},{key:"_flatten",value:function(t){//when empty, return empty
if(0===t.length)return[];if(!(t.length>2e4))//use faster recursive loading
return(r=[]).concat.apply(r,m(t));//big models , load slower to avoid stack overflow
//faster non-recursive flatten via axelduch
//stackoverflow.com/questions/27266550/how-to-flatten-nested-array-in-javascript
var r,n,o=[],a=t.slice();n=a.pop();do Array.isArray(n)?a.push.apply(a,m(n)):o.push(n);while(a.length&&void 0!==(n=a.pop()))return o.reverse(),o}/**
     * turn a p5.Vector Array into a one dimensional number array
     * @private
     * @param  {p5.Vector[]} arr  an array of p5.Vector
     * @return {Number[]}     a one dimensional array of numbers
     * [p5.Vector(1, 2, 3), p5.Vector(4, 5, 6)] ->
     * [1, 2, 3, 4, 5, 6]
     */},{key:"_vToNArray",value:function(t){var r=[],n=!0,o=!1,a=void 0;try{for(var s,l=t[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){var c=s.value;r.push(c.x,c.y,c.z)}}catch(t){o=!0,a=t}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}return r}// function to calculate BezierVertex Coefficients
},{key:"_bezierCoefficients",value:function(t){var r=t*t,n=r*t,o=1-t,a=o*o;return[a*o,3*a*t,3*o*r,n]}// function to calculate QuadraticVertex Coefficients
},{key:"_quadraticCoefficients",value:function(t){var r=t*t,n=1-t;return[n*n,2*n*t,r]}// function to convert Bezier coordinates to Catmull Rom Splines
},{key:"_bezierToCatmull",value:function(t){return[t[1],t[1]+(t[2]-t[0])/this._curveTightness,t[2]-(t[3]-t[1])/this._curveTightness,t[2]]}},{key:"_initTessy",value:function(){// function called for each vertex of tesselator output
function t(t,r){for(var n=0;n<t.length;n++)r.push(t[n])}function r(t){t!==l.default.primitiveType.GL_TRIANGLES&&console.log("expected TRIANGLES but got type: ".concat(t))}function n(t){console.log("error callback"),console.log("error number: ".concat(t))}// callback for when segments intersect and must be split
function o(t,r,n){for(var o=Array(a.default.RendererGL.prototype.tessyVertexSize).fill(0),s=0;s<n.length;s++)for(var l=0;l<o.length;l++)0!==n[s]&&r[s]&&(o[l]+=r[s][l]*n[s]);return o}function s(t){}var c=new l.default.GluTesselator;return c.gluTessCallback(l.default.gluEnum.GLU_TESS_VERTEX_DATA,t),c.gluTessCallback(l.default.gluEnum.GLU_TESS_BEGIN,r),c.gluTessCallback(l.default.gluEnum.GLU_TESS_ERROR,n),c.gluTessCallback(l.default.gluEnum.GLU_TESS_COMBINE,o),c.gluTessCallback(l.default.gluEnum.GLU_TESS_EDGE_FLAG,s),c}},{key:"_triangulate",value:function(t){// libtess will take 3d verts and flatten to a plane for tesselation.
// libtess is capable of calculating a plane to tesselate on, but
// if all of the vertices have the same z values, we'll just
// assume the face is facing the camera, letting us skip any performance
// issues or bugs in libtess's automatic calculation.
var r=t[0]?t[0][2]:void 0,n=!0,o=!0,s=!1,l=void 0;try{for(var c,u=t[Symbol.iterator]();!(o=(c=u.next()).done);o=!0)for(var p=c.value,d=0;d<p.length;d+=a.default.RendererGL.prototype.tessyVertexSize)if(p[d+2]!==r){n=!1;break}}catch(t){s=!0,l=t}finally{try{o||null==u.return||u.return()}finally{if(s)throw l}}n?this._tessy.gluTessNormal(0,0,1):this._tessy.gluTessNormal(0,0,0);var m=[];this._tessy.gluTessBeginPolygon(m);var f=!0,h=!1,y=void 0;try{for(var g,v=t[Symbol.iterator]();!(f=(g=v.next()).done);f=!0){var b=g.value;this._tessy.gluTessBeginContour();for(var x=0;x<b.length;x+=a.default.RendererGL.prototype.tessyVertexSize){var j=b.slice(x,x+a.default.RendererGL.prototype.tessyVertexSize);this._tessy.gluTessVertex(j,j)}this._tessy.gluTessEndContour()}// finish polygon
}catch(t){h=!0,y=t}finally{try{f||null==v.return||v.return()}finally{if(h)throw y}}return this._tessy.gluTessEndPolygon(),m}}]),n)}(a.default.Renderer),/**
 * ensures that p5 is using a 3d renderer. throws an error if not.
 */a.default.prototype._assert3d=function(t){if(!this._renderer.isP3D)throw Error("".concat(t,"() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information."))},a.default.RendererGL.prototype.tessyVertexSize=12;var D=a.default.RendererGL;n.default=D},{"../core/constants":284,"../core/main":296,"../core/p5.Renderer":299,"./p5.Camera":344,"./p5.Matrix":347,"./p5.Shader":352,"core-js/modules/es.array.concat":169,"core-js/modules/es.array.copy-within":170,"core-js/modules/es.array.every":171,"core-js/modules/es.array.fill":172,"core-js/modules/es.array.from":175,"core-js/modules/es.array.includes":176,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.slice":182,"core-js/modules/es.array.some":183,"core-js/modules/es.map":186,"core-js/modules/es.object.assign":192,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.get-prototype-of":196,"core-js/modules/es.object.to-string":198,"core-js/modules/es.reflect.construct":200,"core-js/modules/es.regexp.to-string":204,"core-js/modules/es.set":205,"core-js/modules/es.string.includes":207,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.typed-array.copy-within":221,"core-js/modules/es.typed-array.every":222,"core-js/modules/es.typed-array.fill":223,"core-js/modules/es.typed-array.filter":224,"core-js/modules/es.typed-array.find":226,"core-js/modules/es.typed-array.find-index":225,"core-js/modules/es.typed-array.float32-array":227,"core-js/modules/es.typed-array.float64-array":228,"core-js/modules/es.typed-array.for-each":229,"core-js/modules/es.typed-array.includes":230,"core-js/modules/es.typed-array.index-of":231,"core-js/modules/es.typed-array.int16-array":232,"core-js/modules/es.typed-array.iterator":234,"core-js/modules/es.typed-array.join":235,"core-js/modules/es.typed-array.last-index-of":236,"core-js/modules/es.typed-array.map":237,"core-js/modules/es.typed-array.reduce":239,"core-js/modules/es.typed-array.reduce-right":238,"core-js/modules/es.typed-array.reverse":240,"core-js/modules/es.typed-array.set":241,"core-js/modules/es.typed-array.slice":242,"core-js/modules/es.typed-array.some":243,"core-js/modules/es.typed-array.sort":244,"core-js/modules/es.typed-array.subarray":245,"core-js/modules/es.typed-array.to-locale-string":246,"core-js/modules/es.typed-array.to-string":247,"core-js/modules/es.typed-array.uint16-array":248,"core-js/modules/es.typed-array.uint32-array":249,"core-js/modules/es.typed-array.uint8-array":250,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254,libtess:267,path:270}],352:[function(t,r,n){t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.function.name"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.index-of"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.array.slice"),t("core-js/modules/es.function.name"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=a(t("../core/main"));function a(t){return t&&t.__esModule?t:{default:t}}function s(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function l(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function c(t,r,n){return r&&l(t.prototype,r),n&&l(t,n),t}/**
 * Shader class for WEBGL Mode
 * @class p5.Shader
 * @constructor
 * @param {p5.RendererGL} renderer an instance of p5.RendererGL that
 * will provide the GL context for this new p5.Shader
 * @param {String} vertSrc source code for the vertex shader (as a string)
 * @param {String} fragSrc source code for the fragment shader (as a string)
 */o.default.Shader=/*#__PURE__*/function(){function t(r,n,o){s(this,t),// to take the source for a vertex and fragment shader
// to enable custom shaders at some later date
this._renderer=r,this._vertSrc=n,this._fragSrc=o,this._vertShader=-1,this._fragShader=-1,this._glProgram=0,this._loadedAttributes=!1,this.attributes={},this._loadedUniforms=!1,this.uniforms={},this._bound=!1,this.samplers=[]}/**
   * Creates, compiles, and links the shader based on its
   * sources for the vertex and fragment shaders (provided
   * to the constructor). Populates known attributes and
   * uniforms from the shader.
   * @method init
   * @chainable
   * @private
   */return c(t,[{key:"init",value:function(){if(0/* or context is stale? */===this._glProgram){var t=this._renderer.GL;// @todo: once custom shading is allowed,
if(// friendly error messages should be used here to share
// compiler and linker errors.
//set up the shader by
// 1. creating and getting a gl id for the shader program,
// 2. compliling its vertex & fragment sources,
// 3. linking the vertex and fragment shaders
this._vertShader=t.createShader(t.VERTEX_SHADER),t.shaderSource(this._vertShader,this._vertSrc),t.compileShader(this._vertShader),!t.getShaderParameter(this._vertShader,t.COMPILE_STATUS))return o.default._friendlyError("Yikes! An error occurred compiling the vertex shader:".concat(t.getShaderInfoLog(this._vertShader))),null;if(this._fragShader=t.createShader(t.FRAGMENT_SHADER),t.shaderSource(this._fragShader,this._fragSrc),t.compileShader(this._fragShader),!t.getShaderParameter(this._fragShader,t.COMPILE_STATUS))return o.default._friendlyError("Darn! An error occurred compiling the fragment shader:".concat(t.getShaderInfoLog(this._fragShader))),null;this._glProgram=t.createProgram(),t.attachShader(this._glProgram,this._vertShader),t.attachShader(this._glProgram,this._fragShader),t.linkProgram(this._glProgram),t.getProgramParameter(this._glProgram,t.LINK_STATUS)||o.default._friendlyError("Snap! Error linking shader program: ".concat(t.getProgramInfoLog(this._glProgram))),this._loadAttributes(),this._loadUniforms()}return this}/**
     * Queries the active attributes for this shader and loads
     * their names and locations into the attributes array.
     * @method _loadAttributes
     * @private
     */},{key:"_loadAttributes",value:function(){if(!this._loadedAttributes){this.attributes={};for(var t=this._renderer.GL,r=t.getProgramParameter(this._glProgram,t.ACTIVE_ATTRIBUTES),n=0;n<r;++n){var o=t.getActiveAttrib(this._glProgram,n),a=o.name,s=t.getAttribLocation(this._glProgram,a),l={};l.name=a,l.location=s,l.index=n,l.type=o.type,l.size=o.size,this.attributes[a]=l}this._loadedAttributes=!0}}/**
     * Queries the active uniforms for this shader and loads
     * their names and locations into the uniforms array.
     * @method _loadUniforms
     * @private
     */},{key:"_loadUniforms",value:function(){if(!this._loadedUniforms){for(var t=this._renderer.GL,r=t.getProgramParameter(this._glProgram,t.ACTIVE_UNIFORMS),n=0,o=0;o<r;++o){var a=t.getActiveUniform(this._glProgram,o),s={};s.location=t.getUniformLocation(this._glProgram,a.name),s.size=a.size;var l=a.name;//uniforms thats are arrays have their name returned as
a.size>1&&(l=l.substring(0,l.indexOf("[0]"))),s.name=l,s.type=a.type,s._cachedData=void 0,s.type===t.SAMPLER_2D&&(s.samplerIndex=n,n++,this.samplers.push(s)),s.isArray=a.size>1||s.type===t.FLOAT_MAT3||s.type===t.FLOAT_MAT4||s.type===t.FLOAT_VEC2||s.type===t.FLOAT_VEC3||s.type===t.FLOAT_VEC4||s.type===t.INT_VEC2||s.type===t.INT_VEC4||s.type===t.INT_VEC3,this.uniforms[l]=s}this._loadedUniforms=!0}}},{key:"compile",value:function(){}// TODO
},{key:"bindShader",value:function(){this.init(),this._bound||(this.useProgram(),this._bound=!0,this._setMatrixUniforms(),this.setUniform("uViewport",this._renderer._viewport))}/**
     * @method unbindShader
     * @chainable
     * @private
     */},{key:"unbindShader",value:function(){return this._bound&&(this.unbindTextures(),this._bound=!1),this}},{key:"bindTextures",value:function(){var t=this._renderer.GL,r=!0,n=!1,o=void 0;try{for(var a,s=this.samplers[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var l=a.value,c=l.texture;void 0===c&&// (or there may not be one--maybe just lighting),
// so we supply a default texture instead.
(c=this._renderer._getEmptyTexture()),t.activeTexture(t.TEXTURE0+l.samplerIndex),c.bindTexture(),c.update(),t.uniform1i(l.location,l.samplerIndex)}}catch(t){n=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(n)throw o}}}},{key:"updateTextures",value:function(){var t=!0,r=!1,n=void 0;try{for(var o,a=this.samplers[Symbol.iterator]();!(t=(o=a.next()).done);t=!0){var s=o.value.texture;s&&s.update()}}catch(t){r=!0,n=t}finally{try{t||null==a.return||a.return()}finally{if(r)throw n}}}},{key:"unbindTextures",value:function(){var t=!0,r=!1,n=void 0;try{for(var o,a=this.samplers[Symbol.iterator]();!(t=(o=a.next()).done);t=!0){var s=o.value;this.setUniform(s.name,this._renderer._getEmptyTexture())}}catch(t){r=!0,n=t}finally{try{t||null==a.return||a.return()}finally{if(r)throw n}}}},{key:"_setMatrixUniforms",value:function(){var t=this._renderer._curCamera.cameraMatrix,r=this._renderer.uPMatrix,n=this._renderer.uMVMatrix,o=n.copy();o.mult(r),this.isStrokeShader()&&("default"===this._renderer._curCamera.cameraType?this.setUniform("uPerspective",1):this.setUniform("uPerspective",0)),this.setUniform("uViewMatrix",t.mat4),this.setUniform("uProjectionMatrix",r.mat4),this.setUniform("uModelViewMatrix",n.mat4),this.setUniform("uModelViewProjectionMatrix",o.mat4),this.uniforms.uNormalMatrix&&(this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix),this.setUniform("uNormalMatrix",this._renderer.uNMatrix.mat3))}/**
     * @method useProgram
     * @chainable
     * @private
     */},{key:"useProgram",value:function(){var t=this._renderer.GL;return this._renderer._curShader!==this&&(t.useProgram(this._glProgram),this._renderer._curShader=this),this}/**
     * Used to set the uniforms of a
     * <a href="#/p5.Shader">p5.Shader</a> object.
     *
     * Uniforms are used as a way to provide shader programs
     * (which run on the GPU) with values from a sketch
     * (which runs on the CPU).
     *
     * @method setUniform
     * @chainable
     * @param {String} uniformName the name of the uniform.
     * Must correspond to the name used in the vertex and fragment shaders
     * @param {Boolean|Number|Number[]|p5.Image|p5.Graphics|p5.MediaElement|p5.Texture}
     * data the data to associate with the uniform. The type can be
     * a boolean (true/false), a number, an array of numbers, or
     * an image (p5.Image, p5.Graphics, p5.MediaElement, p5.Texture)
     *
     * @example
     * <div modernizr='webgl'>
     * <code>
     * // Click within the image to toggle the value of uniforms
     * // Note: for an alternative approach to the same example,
     * // involving toggling between shaders please refer to:
     * // https://p5js.org/reference/#/p5/shader
     *
     * let grad;
     * let showRedGreen = false;
     *
     * function preload() {
     *   // note that we are using two instances
     *   // of the same vertex and fragment shaders
     *   grad = loadShader('assets/shader.vert', 'assets/shader-gradient.frag');
     * }
     *
     * function setup() {
     *   createCanvas(100, 100, WEBGL);
     *   shader(grad);
     *   noStroke();
     *
     *   describe(
     *     'canvas toggles between a circular gradient of orange and blue vertically. and a circular gradient of red and green moving horizontally when mouse is clicked/pressed.'
     *   );
     * }
     *
     * function draw() {
     *   // update the offset values for each scenario,
     *   // moving the "grad" shader in either vertical or
     *   // horizontal direction each with differing colors
     *
     *   if (showRedGreen === true) {
     *     grad.setUniform('colorCenter', [1, 0, 0]);
     *     grad.setUniform('colorBackground', [0, 1, 0]);
     *     grad.setUniform('offset', [sin(millis() / 2000), 1]);
     *   } else {
     *     grad.setUniform('colorCenter', [1, 0.5, 0]);
     *     grad.setUniform('colorBackground', [0.226, 0, 0.615]);
     *     grad.setUniform('offset', [0, sin(millis() / 2000) + 1]);
     *   }
     *   quad(-1, -1, 1, -1, 1, 1, -1, 1);
     * }
     *
     * function mouseClicked() {
     *   showRedGreen = !showRedGreen;
     * }
     * </code>
     * </div>
     *
     * @alt
     * canvas toggles between a circular gradient of orange and blue vertically. and a circular gradient of red and green moving horizontally when mouse is clicked/pressed.
     */},{key:"setUniform",value:function(t,r){var n=this.uniforms[t];if(n){var a=this._renderer.GL;if(n.isArray){if(n._cachedData&&this._renderer._arraysEqual(n._cachedData,r))return;n._cachedData=r.slice(0)}else{if(n._cachedData&&n._cachedData===r)return;Array.isArray(r)?n._cachedData=r.slice(0):n._cachedData=r}var s=n.location;switch(this.useProgram(),n.type){case a.BOOL:!0===r?a.uniform1i(s,1):a.uniform1i(s,0);break;case a.INT:n.size>1?r.length&&a.uniform1iv(s,r):a.uniform1i(s,r);break;case a.FLOAT:n.size>1?r.length&&a.uniform1fv(s,r):a.uniform1f(s,r);break;case a.FLOAT_MAT3:a.uniformMatrix3fv(s,!1,r);break;case a.FLOAT_MAT4:a.uniformMatrix4fv(s,!1,r);break;case a.FLOAT_VEC2:n.size>1?r.length&&a.uniform2fv(s,r):a.uniform2f(s,r[0],r[1]);break;case a.FLOAT_VEC3:n.size>1?r.length&&a.uniform3fv(s,r):a.uniform3f(s,r[0],r[1],r[2]);break;case a.FLOAT_VEC4:n.size>1?r.length&&a.uniform4fv(s,r):a.uniform4f(s,r[0],r[1],r[2],r[3]);break;case a.INT_VEC2:n.size>1?r.length&&a.uniform2iv(s,r):a.uniform2i(s,r[0],r[1]);break;case a.INT_VEC3:n.size>1?r.length&&a.uniform3iv(s,r):a.uniform3i(s,r[0],r[1],r[2]);break;case a.INT_VEC4:n.size>1?r.length&&a.uniform4iv(s,r):a.uniform4i(s,r[0],r[1],r[2],r[3]);break;case a.SAMPLER_2D:a.activeTexture(a.TEXTURE0+n.samplerIndex),n.texture=r instanceof o.default.Texture?r:this._renderer.getTexture(r),a.uniform1i(s,n.samplerIndex),n.texture.src.gifProperties&&n.texture.src._animateGif(this._renderer._pInst)}return this}}/* NONE OF THIS IS FAST OR EFFICIENT BUT BEAR WITH ME
     *
     * these shader "type" query methods are used by various
     * facilities of the renderer to determine if changing
     * the shader type for the required action (for example,
     * do we need to load the default lighting shader if the
     * current shader cannot handle lighting?)
     *
     **/},{key:"isLightShader",value:function(){return void 0!==this.attributes.aNormal||void 0!==this.uniforms.uUseLighting||void 0!==this.uniforms.uAmbientLightCount||void 0!==this.uniforms.uDirectionalLightCount||void 0!==this.uniforms.uPointLightCount||void 0!==this.uniforms.uAmbientColor||void 0!==this.uniforms.uDirectionalDiffuseColors||void 0!==this.uniforms.uDirectionalSpecularColors||void 0!==this.uniforms.uPointLightLocation||void 0!==this.uniforms.uPointLightDiffuseColors||void 0!==this.uniforms.uPointLightSpecularColors||void 0!==this.uniforms.uLightingDirection||void 0!==this.uniforms.uSpecular}},{key:"isNormalShader",value:function(){return void 0!==this.attributes.aNormal}},{key:"isTextureShader",value:function(){return this.samplers.length>0}},{key:"isColorShader",value:function(){return void 0!==this.attributes.aVertexColor||void 0!==this.uniforms.uMaterialColor}},{key:"isTexLightShader",value:function(){return this.isLightShader()&&this.isTextureShader()}},{key:"isStrokeShader",value:function(){return void 0!==this.uniforms.uStrokeWeight}/**
     * @method enableAttrib
     * @chainable
     * @private
     */},{key:"enableAttrib",value:function(t,r,n,o,a,s){if(t){"undefined"==typeof IS_MINIFIED&&this.attributes[t.name]!==t&&console.warn('The attribute "'.concat(t.name,'"passed to enableAttrib does not belong to this shader.'));var l=t.location;if(-1!==l){var c=this._renderer.GL;// Enable register even if it is disabled
this._renderer.registerEnabled[l]||(c.enableVertexAttribArray(l),this._renderer.registerEnabled[l]=!0),this._renderer.GL.vertexAttribPointer(l,r,n||c.FLOAT,o||!1,a||0,s||0)}}return this}}]),t}();var u=o.default.Shader;n.default=u},{"../core/main":296,"core-js/modules/es.array.index-of":177,"core-js/modules/es.array.iterator":178,"core-js/modules/es.array.slice":182,"core-js/modules/es.function.name":185,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/web.dom-collections.iterator":254}],353:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.typed-array.uint8-array"),t("core-js/modules/es.typed-array.copy-within"),t("core-js/modules/es.typed-array.every"),t("core-js/modules/es.typed-array.fill"),t("core-js/modules/es.typed-array.filter"),t("core-js/modules/es.typed-array.find"),t("core-js/modules/es.typed-array.find-index"),t("core-js/modules/es.typed-array.for-each"),t("core-js/modules/es.typed-array.includes"),t("core-js/modules/es.typed-array.index-of"),t("core-js/modules/es.typed-array.iterator"),t("core-js/modules/es.typed-array.join"),t("core-js/modules/es.typed-array.last-index-of"),t("core-js/modules/es.typed-array.map"),t("core-js/modules/es.typed-array.reduce"),t("core-js/modules/es.typed-array.reduce-right"),t("core-js/modules/es.typed-array.reverse"),t("core-js/modules/es.typed-array.set"),t("core-js/modules/es.typed-array.slice"),t("core-js/modules/es.typed-array.some"),t("core-js/modules/es.typed-array.sort"),t("core-js/modules/es.typed-array.subarray"),t("core-js/modules/es.typed-array.to-locale-string"),t("core-js/modules/es.typed-array.to-string"),Object.defineProperty(n,"__esModule",{value:!0}),n.checkWebGLCapabilities=h,n.default=void 0;var s=p(t("../core/main")),l=u(t("../core/constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}function d(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function m(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function f(t,r,n){return r&&m(t.prototype,r),n&&m(t,n),t}/**
 * Texture class for WEBGL Mode
 * @private
 * @class p5.Texture
 * @param {p5.RendererGL} renderer an instance of p5.RendererGL that
 * will provide the GL context for this new p5.Texture
 * @param {p5.Image|p5.Graphics|p5.Element|p5.MediaElement|ImageData|p5.Framebuffer|p5.FramebufferTexture|ImageData} [obj] the
 * object containing the image data to store in the texture.
 * @param {Object} [settings] optional A javascript object containing texture
 * settings.
 * @param {Number} [settings.format] optional The internal color component
 * format for the texture. Possible values for format include gl.RGBA,
 * gl.RGB, gl.ALPHA, gl.LUMINANCE, gl.LUMINANCE_ALPHA. Defaults to gl.RBGA
 * @param {Number} [settings.minFilter] optional The texture minification
 * filter setting. Possible values are gl.NEAREST or gl.LINEAR. Defaults
 * to gl.LINEAR. Note, Mipmaps are not implemented in p5.
 * @param {Number} [settings.magFilter] optional The texture magnification
 * filter setting. Possible values are gl.NEAREST or gl.LINEAR. Defaults
 * to gl.LINEAR. Note, Mipmaps are not implemented in p5.
 * @param {Number} [settings.wrapS] optional The texture wrap settings for
 * the s coordinate, or x axis. Possible values are gl.CLAMP_TO_EDGE,
 * gl.REPEAT, and gl.MIRRORED_REPEAT. The mirror settings are only available
 * when using a power of two sized texture. Defaults to gl.CLAMP_TO_EDGE
 * @param {Number} [settings.wrapT] optional The texture wrap settings for
 * the t coordinate, or y axis. Possible values are gl.CLAMP_TO_EDGE,
 * gl.REPEAT, and gl.MIRRORED_REPEAT. The mirror settings are only available
 * when using a power of two sized texture. Defaults to gl.CLAMP_TO_EDGE
 * @param {Number} [settings.dataType] optional The data type of the texel
 * data. Possible values are gl.UNSIGNED_BYTE or gl.FLOAT. There are more
 * formats that are not implemented in p5. Defaults to gl.UNSIGNED_BYTE.
 */function h(t){var r=t.GL,n=t.webglVersion,o=r,a=n===l.WEBGL2?o.getExtension("EXT_color_buffer_float")&&o.getExtension("EXT_float_blend"):o.getExtension("OES_texture_float"),s=a&&o.getExtension("OES_texture_float_linear"),c=n===l.WEBGL2?o.getExtension("EXT_color_buffer_float"):o.getExtension("OES_texture_half_float"),u=c&&o.getExtension("OES_texture_half_float_linear");return{float:a,floatLinear:s,halfFloat:c,halfFloatLinear:u}}s.default.Texture=/*#__PURE__*/function(){function t(r,n,o){d(this,t),this._renderer=r;var a=this._renderer.GL;o=o||{},this.src=n,this.glTex=void 0,this.glTarget=a.TEXTURE_2D,this.glFormat=o.format||a.RGBA,this.mipmaps=!1,this.glMinFilter=o.minFilter||a.LINEAR,this.glMagFilter=o.magFilter||a.LINEAR,this.glWrapS=o.wrapS||a.CLAMP_TO_EDGE,this.glWrapT=o.wrapT||a.CLAMP_TO_EDGE,this.glDataType=o.dataType||a.UNSIGNED_BYTE;var l=h(r);this.glFormat!==a.HALF_FLOAT||l.halfFloat||(console.log("This device does not support dataType HALF_FLOAT. Falling back to FLOAT."),this.glDataType=a.FLOAT),this.glFormat!==a.HALF_FLOAT||this.glMinFilter!==a.LINEAR&&this.glMagFilter!==a.LINEAR||l.halfFloatLinear||(console.log("This device does not support linear filtering for dataType FLOAT. Falling back to NEAREST."),this.glMinFilter===a.LINEAR&&(this.glMinFilter=a.NEAREST),this.glMagFilter!==a.LINEAR||(this.glMagFilter=a.NEAREST)),this.glFormat!==a.FLOAT||l.float||(console.log("This device does not support dataType FLOAT. Falling back to UNSIGNED_BYTE."),this.glDataType=a.UNSIGNED_BYTE),this.glFormat!==a.FLOAT||this.glMinFilter!==a.LINEAR&&this.glMagFilter!==a.LINEAR||l.floatLinear||(console.log("This device does not support linear filtering for dataType FLOAT. Falling back to NEAREST."),this.glMinFilter===a.LINEAR&&(this.glMinFilter=a.NEAREST),this.glMagFilter!==a.LINEAR||(this.glMagFilter=a.NEAREST)),// because it is a video or gif.
this.isSrcMediaElement=void 0!==s.default.MediaElement&&n instanceof s.default.MediaElement,this._videoPrevUpdateTime=0,this.isSrcHTMLElement=void 0!==s.default.Element&&n instanceof s.default.Element&&!(n instanceof s.default.Graphics)&&!(n instanceof s.default.Renderer),this.isSrcP5Image=n instanceof s.default.Image,this.isSrcP5Graphics=n instanceof s.default.Graphics,this.isSrcP5Renderer=n instanceof s.default.Renderer,this.isImageData="undefined"!=typeof ImageData&&n instanceof ImageData,this.isFramebufferTexture=n instanceof s.default.FramebufferTexture;var c=this._getTextureDataFromSource();return this.width=c.width,this.height=c.height,this.init(c),this}return f(t,[{key:"_getTextureDataFromSource",value:function(){var t;return this.isFramebufferTexture?t=this.src.rawTexture():this.isSrcP5Image?t=this.src.canvas:this.isSrcMediaElement||this.isSrcP5Graphics||this.isSrcP5Renderer||this.isSrcHTMLElement?t=this.src.elt:this.isImageData&&(t=this.src),t}/**
     * Initializes common texture parameters, creates a gl texture,
     * tries to upload the texture for the first time if data is
     * already available.
     * @private
     * @method init
     */},{key:"init",value:function(t){var r=this._renderer.GL;if(this.isFramebufferTexture||(this.glTex=r.createTexture()),this.glWrapS=this._renderer.textureWrapX,this.glWrapT=this._renderer.textureWrapY,this.setWrapMode(this.glWrapS,this.glWrapT),this.bindTexture(),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,this.glMagFilter),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,this.glMinFilter),this.isFramebufferTexture);else if(0===this.width||0===this.height||this.isSrcMediaElement&&!this.src.loadedmetadata){// assign a 1×1 empty texture initially, because data is not yet ready,
// so that no errors occur in gl console!
var n=new Uint8Array([1,1,1,1]);r.texImage2D(this.glTarget,0,r.RGBA,1,1,0,this.glFormat,this.glDataType,n)}else r.texImage2D(this.glTarget,0,this.glFormat,this.glFormat,this.glDataType,t)}/**
     * Checks if the source data for this texture has changed (if it's
     * easy to do so) and reuploads the texture if necessary. If it's not
     * possible or to expensive to do a calculation to determine wheter or
     * not the data has occurred, this method simply re-uploads the texture.
     * @method update
     */},{key:"update",value:function(){var t=this.src;if(0===t.width||0===t.height||this.isFramebufferTexture)return!1;// nothing to do!
var r=this._getTextureDataFromSource(),n=!1,o=this._renderer.GL;return r.width!==this.width||r.height!==this.height?(n=!0,// for some reason, we update our metadata and upload the texture again
this.width=r.width||t.width,this.height=r.height||t.height,this.isSrcP5Image?t.setModified(!1):(this.isSrcMediaElement||this.isSrcHTMLElement)&&// from 0 to actual size, but pixels may not be available.
// flag for update in a future frame.
// if we don't do this, a paused video, for example, may not
// send the first frame to texture memory.
t.setModified(!0)):this.isSrcP5Image?t.isModified()&&(n=!0,t.setModified(!1)):this.isSrcMediaElement?t.isModified()?(// p5.MediaElement may have also had set/updatePixels, etc. called
// on it and should be updated, or may have been set for the first
// time!
n=!0,t.setModified(!1)):t.loadedmetadata&&this._videoPrevUpdateTime!==t.time()&&(// update the texture in gpu mem only if the current
// video timestamp does not match the timestamp of the last
// time we uploaded this texture (and update the time we
// last uploaded, too)
this._videoPrevUpdateTime=t.time(),n=!0):this.isImageData?t._dirty&&(t._dirty=!1,n=!0):/* data instanceof p5.Graphics, probably */// conditionally updated; so to be safe, we just go ahead and upload it.
n=!0,n&&(this.bindTexture(),o.texImage2D(this.glTarget,0,this.glFormat,this.glFormat,this.glDataType,r)),n}/**
     * Binds the texture to the appropriate GL target.
     * @method bindTexture
     */},{key:"bindTexture",value:function(){return this._renderer.GL.bindTexture(this.glTarget,this.getTexture()),this}/**
     * Unbinds the texture from the appropriate GL target.
     * @method unbindTexture
     */},{key:"unbindTexture",value:function(){this._renderer.GL.bindTexture(this.glTarget,null)}},{key:"getTexture",value:function(){return this.isFramebufferTexture?this.src.rawTexture():this.glTex}/**
     * Sets how a texture is be interpolated when upscaled or downscaled.
     * Nearest filtering uses nearest neighbor scaling when interpolating
     * Linear filtering uses WebGL's linear scaling when interpolating
     * @method setInterpolation
     * @param {String} downScale Specifies the texture filtering when
     *                           textures are shrunk. Options are LINEAR or NEAREST
     * @param {String} upScale Specifies the texture filtering when
     *                         textures are magnified. Options are LINEAR or NEAREST
     * @todo implement mipmapping filters
     */},{key:"setInterpolation",value:function(t,r){var n=this._renderer.GL;t===l.NEAREST?this.glMinFilter=n.NEAREST:this.glMinFilter=n.LINEAR,r===l.NEAREST?this.glMagFilter=n.NEAREST:this.glMagFilter=n.LINEAR,this.bindTexture(),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,this.glMinFilter),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,this.glMagFilter),this.unbindTexture()}/**
     * Sets the texture wrapping mode. This controls how textures behave
     * when their uv's go outside of the 0 - 1 range. There are three options:
     * CLAMP, REPEAT, and MIRROR. REPEAT & MIRROR are only available if the texture
     * is a power of two size (128, 256, 512, 1024, etc.).
     * @method setWrapMode
     * @param {String} wrapX Controls the horizontal texture wrapping behavior
     * @param {String} wrapY Controls the vertical texture wrapping behavior
     */},{key:"setWrapMode",value:function(t,r){var n,o,a=this._renderer.GL,s=function(t){return(t&t-1)==0},c=this._getTextureDataFromSource();// for webgl 1 we need to check if the texture is power of two
c.naturalWidth&&c.naturalHeight?(n=c.naturalWidth,o=c.naturalHeight):(n=this.width,o=this.height);var u=s(n),p=s(o);t===l.REPEAT?this._renderer.webglVersion===l.WEBGL2||u&&p?this.glWrapS=a.REPEAT:(console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapS=a.CLAMP_TO_EDGE):t===l.MIRROR?this._renderer.webglVersion===l.WEBGL2||u&&p?this.glWrapS=a.MIRRORED_REPEAT:(console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapS=a.CLAMP_TO_EDGE):this.glWrapS=a.CLAMP_TO_EDGE,r===l.REPEAT?this._renderer.webglVersion===l.WEBGL2||u&&p?this.glWrapT=a.REPEAT:(console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapT=a.CLAMP_TO_EDGE):r===l.MIRROR?this._renderer.webglVersion===l.WEBGL2||u&&p?this.glWrapT=a.MIRRORED_REPEAT:(console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapT=a.CLAMP_TO_EDGE):this.glWrapT=a.CLAMP_TO_EDGE,this.bindTexture(),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,this.glWrapS),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,this.glWrapT),this.unbindTexture()}}]),t}();var y=s.default.Texture;n.default=y},{"../core/constants":284,"../core/main":296,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.string.iterator":208,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.typed-array.copy-within":221,"core-js/modules/es.typed-array.every":222,"core-js/modules/es.typed-array.fill":223,"core-js/modules/es.typed-array.filter":224,"core-js/modules/es.typed-array.find":226,"core-js/modules/es.typed-array.find-index":225,"core-js/modules/es.typed-array.for-each":229,"core-js/modules/es.typed-array.includes":230,"core-js/modules/es.typed-array.index-of":231,"core-js/modules/es.typed-array.iterator":234,"core-js/modules/es.typed-array.join":235,"core-js/modules/es.typed-array.last-index-of":236,"core-js/modules/es.typed-array.map":237,"core-js/modules/es.typed-array.reduce":239,"core-js/modules/es.typed-array.reduce-right":238,"core-js/modules/es.typed-array.reverse":240,"core-js/modules/es.typed-array.set":241,"core-js/modules/es.typed-array.slice":242,"core-js/modules/es.typed-array.some":243,"core-js/modules/es.typed-array.sort":244,"core-js/modules/es.typed-array.subarray":245,"core-js/modules/es.typed-array.to-locale-string":246,"core-js/modules/es.typed-array.to-string":247,"core-js/modules/es.typed-array.uint8-array":250,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],354:[function(t,r,n){function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t){return(a="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.get-own-property-descriptor"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.split"),t("core-js/modules/es.string.sub"),t("core-js/modules/es.weak-map"),t("core-js/modules/web.dom-collections.iterator"),t("core-js/modules/es.symbol"),t("core-js/modules/es.symbol.description"),t("core-js/modules/es.symbol.iterator"),t("core-js/modules/es.array.iterator"),t("core-js/modules/es.object.to-string"),t("core-js/modules/es.regexp.exec"),t("core-js/modules/es.string.iterator"),t("core-js/modules/es.string.split"),t("core-js/modules/es.string.sub"),t("core-js/modules/web.dom-collections.iterator");var s=p(t("../core/main")),l=u(t("../core/constants"));function c(){if("function"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function u(t){if(t&&t.__esModule)return t;if(null===t||"object"!==a(t)&&"function"!=typeof t)return{default:t};var r=c();if(r&&r.has(t))return r.get(t);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){var l=o?Object.getOwnPropertyDescriptor(t,s):null;l&&(l.get||l.set)?Object.defineProperty(n,s,l):n[s]=t[s]}return n.default=t,r&&r.set(t,n),n}function p(t){return t&&t.__esModule?t:{default:t}}function d(t,r){if(!(t instanceof r))throw TypeError("Cannot call a class as a function")}function m(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function f(t,r,n){return r&&m(t.prototype,r),n&&m(t,n),t}// Text/Typography
t("./p5.Shader"),t("./p5.RendererGL.Retained"),// @TODO:
s.default.RendererGL.prototype._applyTextProperties=function(){//console.error('text commands not yet implemented in webgl');
},s.default.RendererGL.prototype.textWidth=function(t){return this._isOpenType()?this._textFont._textWidth(t,this._textSize):0};// the number of rows/columns dividing each glyph
var h=9,y=9,g=64,v=64,b=64,x=64,j=64,w=64,_=/*#__PURE__*/function(){function t(r,n){d(this,t),this.width=r,this.height=n,this.infos=[]}/**
     *
     * @method findImage
     * @param {Integer} space
     * @return {Object} contains the ImageData, and pixel index into that
     *                  ImageData where the free space was allocated.
     *
     * finds free space of a given size in the ImageData list
     */return f(t,[{key:"findImage",value:function(t){var r,n,o=this.width*this.height;if(t>o)throw Error("font is too complex to render in 3D");// search through the list of images, looking for one with
for(var a=this.infos.length-1;a>=0;--a){var s=this.infos[a];if(s.index+t<o){// found one
r=s,n=s.imageData;break}}if(!r){try{// create a new image
n=new ImageData(this.width,this.height)}catch(t){// for browsers that don't support ImageData constructors (ie IE11)
// create an ImageData using the old method
var l=document.getElementsByTagName("canvas")[0],c=!l;l||(// create a temporary canvas
(l=document.createElement("canvas")).style.display="none",document.body.appendChild(l));var u=l.getContext("2d");u&&(n=u.createImageData(this.width,this.height)),c&&document.body.removeChild(l)}// construct & dd the new image info
r={index:0,imageData:n},this.infos.push(r)}var p=r.index;return r.index+=t,n._dirty=!0,{imageData:n,index:p}}}]),t}();/**
 * @function setPixel
 * @param {Object} imageInfo
 * @param {Number} r
 * @param {Number} g
 * @param {Number} b
 * @param {Number} a
 *
 * writes the next pixel into an indexed ImageData
 */function S(t,r,n,o,a){var s=t.imageData.data,l=4*t.index++;s[l++]=r,s[l++]=n,s[l++]=o,s[l++]=a}var E=Math.sqrt(3),T=/*#__PURE__*/function(){function t(r){d(this,t),this.font=r,this.strokeImageInfos=new _(g,v),this.colDimImageInfos=new _(b,x),this.rowDimImageInfos=new _(b,x),this.colCellImageInfos=new _(j,w),this.rowCellImageInfos=new _(j,w),this.glyphInfos={}}/**
     * @method getGlyphInfo
     * @param {Glyph} glyph the x positions of points in the curve
     * @returns {Object} the glyphInfo for that glyph
     *
     * calculates rendering info for a glyph, including the curve information,
     * row & column stripes compiled into textures.
     */return f(t,[{key:"getGlyphInfo",value:function(t){// check the cache
var r=this.glyphInfos[t.index];if(r)return r;// get the bounding box of the glyph from opentype.js
var n=t.getBoundingBox(),o=n.x1,a=n.y1,l=n.x2-o,c=n.y2-a,u=t.path.commands;if(0===l||0===c||!u.length)return this.glyphInfos[t.index]={};var p=[],m=[],g=[];// the strokes in this glyph
for(N=h-1;N>=0;--N)g.push([]);for(N=y-1;N>=0;--N)m.push([]);/**
         * @function push
         * @param {Number[]} xs the x positions of points in the curve
         * @param {Number[]} ys the y positions of points in the curve
         * @param {Object} v    the curve information
         *
         * adds a curve to the rows & columns that it intersects with
         */function v(t,r,n){var o=p.length;// the index of this stroke
/**
           * @function minMax
           * @param {Number[]} rg the list of values to compare
           * @param {Number} min the initial minimum value
           * @param {Number} max the initial maximum value
           *
           * find the minimum & maximum value in a list of values
           */function a(t,r,n){for(var o=t.length;o-- >0;){var a=t[o];r>a&&(r=a),n<a&&(n=a)}return{min:r,max:n}}// Expand the bounding box of the glyph by the number of cells below
p.push(n);for(var s=.5,l=a(t,1,0),c=Math.max(Math.floor(l.min*h-s),0),u=Math.min(Math.ceil(l.max*h+s),h),d=c;d<u;++d)g[d].push(o);for(var f=a(r,1,0),v=Math.max(Math.floor(f.min*y-s),0),b=Math.min(Math.ceil(f.max*y+s),y),x=v;x<b;++x)m[x].push(o)}/**
         * @function clamp
         * @param {Number} v the value to clamp
         * @param {Number} min the minimum value
         * @param {Number} max the maxmimum value
         *
         * clamps a value between a minimum & maximum value
         */function b(t,r,n){return t<r?r:t>n?n:t}/**
         * @function byte
         * @param {Number} v the value to scale
         *
         * converts a floating-point number in the range 0-1 to a byte 0-255
         */function x(t){return b(255*t,0,255)}/**
         * @private
         * @class Cubic
         * @param {Number} p0 the start point of the curve
         * @param {Number} c0 the first control point
         * @param {Number} c1 the second control point
         * @param {Number} p1 the end point
         *
         * a cubic curve
         */var j=/*#__PURE__*/function(){function t(r,n,o,a){d(this,t),this.p0=r,this.c0=n,this.c1=o,this.p1=a}/**
             * @method toQuadratic
             * @return {Object} the quadratic approximation
             *
             * converts the cubic to a quadtratic approximation by
             * picking an appropriate quadratic control point
             */return f(t,[{key:"toQuadratic",value:function(){return{x:this.p0.x,y:this.p0.y,x1:this.p1.x,y1:this.p1.y,cx:((this.c0.x+this.c1.x)*3-(this.p0.x+this.p1.x))/4,cy:((this.c0.y+this.c1.y)*3-(this.p0.y+this.p1.y))/4}}/**
               * @method quadError
               * @return {Number} the error
               *
               * calculates the magnitude of error of this curve's
               * quadratic approximation.
               */},{key:"quadError",value:function(){return s.default.Vector.sub(s.default.Vector.sub(this.p1,this.p0),s.default.Vector.mult(s.default.Vector.sub(this.c1,this.c0),3)).mag()/2}/**
               * @method split
               * @param {Number} t the value (0-1) at which to split
               * @return {Cubic} the second part of the curve
               *
               * splits the cubic into two parts at a point 't' along the curve.
               * this cubic keeps its start point and its end point becomes the
               * point at 't'. the 'end half is returned.
               */},{key:"split",value:function(r){var n=s.default.Vector.lerp(this.p0,this.c0,r),o=s.default.Vector.lerp(this.c0,this.c1,r),a=s.default.Vector.lerp(n,o,r);this.c1=s.default.Vector.lerp(this.c1,this.p1,r),this.c0=s.default.Vector.lerp(o,this.c1,r);var l=s.default.Vector.lerp(a,this.c0,r),c=new t(this.p0,n,a,l);return this.p0=l,c}/**
               * @method splitInflections
               * @return {Cubic[]} the non-inflecting pieces of this cubic
               *
               * returns an array containing 0, 1 or 2 cubics split resulting
               * from splitting this cubic at its inflection points.
               * this cubic is (potentially) altered and returned in the list.
               */},{key:"splitInflections",value:function(){var t=s.default.Vector.sub(this.c0,this.p0),r=s.default.Vector.sub(s.default.Vector.sub(this.c1,this.c0),t),n=s.default.Vector.sub(s.default.Vector.sub(s.default.Vector.sub(this.p1,this.c1),t),s.default.Vector.mult(r,2)),o=[],a=r.x*n.y-r.y*n.x;if(0!==a){var l=t.x*n.y-t.y*n.x,c=t.x*r.y-t.y*r.x,u=l*l-4*a*c;if(u>=0){a<0&&(a=-a,l=-l,c=-c);var p=Math.sqrt(u),d=(-l-p)/(2*a),m=(-l+p)/(2*a);d>0&&d<1&&(// split at the first inflection point
o.push(this.split(d)),m=1-(1-m)/(1-d)),m>0&&m<1&&o.push(this.split(m))}}return o.push(this),o}}]),t}();/**
         * @function cubicToQuadratics
         * @param {Number} x0
         * @param {Number} y0
         * @param {Number} cx0
         * @param {Number} cy0
         * @param {Number} cx1
         * @param {Number} cy1
         * @param {Number} x1
         * @param {Number} y1
         * @returns {Cubic[]} an array of cubics whose quadratic approximations
         *                    closely match the civen cubic.
         *
         * converts a cubic curve to a list of quadratics.
         */function w(t,r,n,o,a,l,c,u){// create the Cubic object and split it at its inflections
var p=new j(new s.default.Vector(t,r),new s.default.Vector(n,o),new s.default.Vector(a,l),new s.default.Vector(c,u)).splitInflections(),d=[],m=30/E,f=!0,h=!1,y=void 0;try{for(var g,v=p[Symbol.iterator]();!(f=(g=v.next()).done);f=!0){for(var b=g.value,x=[],w=void 0;!(// calculate this cubic's precision
(w=m/b.quadError())>=.125);){// find a split point based on the error
var _=Math.pow(w,1/3),S=b.split(_),T=b.split(1-_/(1-_));// split the cubic in 3
d.push(S),x.push(b),b=T}w<1&&d.push(b.split(.5)),// add the middle piece to the result
d.push(b),Array.prototype.push.apply(d,x.reverse())}}catch(t){h=!0,y=t}finally{try{f||null==v.return||v.return()}finally{if(h)throw y}}return d}/**
         * @function pushLine
         * @param {Number} x0
         * @param {Number} y0
         * @param {Number} x1
         * @param {Number} y1
         *
         * add a straight line to the row/col grid of a glyph
         */function _(t,r,n,o){var a=(t+n)/2,s=(r+o)/2;v([t,n],[r,o],{x:t,y:r,cx:a,cy:s})}/**
         * @function samePoint
         * @param {Number} x0
         * @param {Number} y0
         * @param {Number} x1
         * @param {Number} y1
         * @return {Boolean} true if the two points are sufficiently close
         *
         * tests if two points are close enough to be considered the same
         */function T(t,r,n,o){return 1e-5>Math.abs(n-t)&&1e-5>Math.abs(o-r)}var M=!0,C=!1,O=void 0;try{for(var N,A,R,L,I,P,D=u[Symbol.iterator]();!(M=(P=D.next()).done);M=!0){var F=P.value,U=(F.x-o)/l,B=(F.y-a)/c;// scale the coordinates to the range 0-1
if(!T(A,R,U,B)){switch(F.type){case"M":// move
L=U,I=B;break;case"L":// line
_(A,R,U,B);break;case"Q":// quadratic
var G=(F.x1-o)/l,V=(F.y1-a)/c;v([A,U,G],[R,B,V],{x:A,y:R,cx:G,cy:V});break;case"Z":// end
T(A,R,L,I)?p.push({x:A,y:R}):(// add an extra line closing the loop, if necessary
_(A,R,L,I),p.push({x:L,y:I}));break;case"C":for(var z=(F.x1-o)/l,H=(F.y1-a)/c,W=(F.x2-o)/l,q=(F.y2-a)/c,X=w(A,R,z,H,W,q,U,B),Y=0;Y<X.length;Y++){var Z=X[Y].toQuadratic();v([Z.x,Z.x1,Z.cx],[Z.y,Z.y1,Z.cy],Z)}break;default:throw Error("unknown command type: ".concat(F.type))}A=U,R=B}}// allocate space for the strokes
}catch(t){C=!0,O=t}finally{try{M||null==D.return||D.return()}finally{if(C)throw O}}for(var K=p.length,J=this.strokeImageInfos.findImage(K),Q=J.index,$=0;$<K;++$){var ee=p[$];S(J,x(ee.x),x(ee.y),x(ee.cx),x(ee.cy))}/**
         * @function layout
         * @param {Number[][]} dim
         * @param {ImageInfo[]} dimImageInfos
         * @param {ImageInfo[]} cellImageInfos
         * @return {Object}
         *
         * lays out the curves in a dimension (row or col) into two
         * images, one for the indices of the curves themselves, and
         * one containing the offset and length of those index spans.
         */function et(t,r,n){for(var o=t.length,a=r.findImage(o),s=a.index,l=0,c=0;c<o;++c)l+=t[c].length;for(var u=n.findImage(l),p=0;p<o;++p){var d=t[p],m=d.length,f=u.index;S(a,f>>7,127&f,m>>7,127&m);// for each stroke index in that slice
for(var h=0;h<m;++h){// write the stroke index into the slice's image
var y=d[h]+Q;S(u,y>>7,127&y,0,0)}}return{cellImageInfo:u,dimOffset:s,dimImageInfo:a}}// initialize the info for this glyph
return(r=this.glyphInfos[t.index]={glyph:t,uGlyphRect:[n.x1,-n.y1,n.x2,-n.y2],strokeImageInfo:J,strokes:p,colInfo:et(g,this.colDimImageInfos,this.colCellImageInfos),rowInfo:et(m,this.rowDimImageInfos,this.rowCellImageInfos)}).uGridOffset=[r.colInfo.dimOffset,r.rowInfo.dimOffset],r}}]),t}();s.default.RendererGL.prototype._renderText=function(t,r,n,o,a){if(!this._textFont||"string"==typeof this._textFont){console.log("WEBGL: you must load and set a font before drawing text. See `loadFont` and `textFont` for more details.");return}if(!(o>=a)&&this._doFill){if(!this._isOpenType())return console.log("WEBGL: only Opentype (.otf) and Truetype (.ttf) fonts are supported"),t;t.push();// remember this state, so it can be restored later
var c=this._doStroke,u=this.drawMode;this._doStroke=!1,this.drawMode=l.TEXTURE;var p=this._textFont.font,d=this._textFont._fontInfo;d||(d=this._textFont._fontInfo=new T(p));// calculate the alignment and move/scale the view accordingly
var m=this._textFont._handleAlignment(this,r,n,o),f=this._textSize,_=f/p.unitsPerEm;this.translate(m.x,m.y,0),this.scale(_,_,1);var S=this.GL,E=!this._defaultFontShader,M=this._getFontShader();M.init(),M.bindShader(),E&&(// these are constants, really. just initialize them one-time.
M.setUniform("uGridImageSize",[b,x]),M.setUniform("uCellsImageSize",[j,w]),M.setUniform("uStrokeImageSize",[g,v]),M.setUniform("uGridSize",[h,y])),this._applyColorBlend(this.curFillColor);var C=this.retainedMode.geometry.glyph;if(!C){// create the geometry for rendering a quad
var O=this._textGeom=new s.default.Geometry(1,1,function(){for(var t=0;t<=1;t++)for(var r=0;r<=1;r++)this.vertices.push(new s.default.Vector(r,t,0)),this.uvs.push(r,t)});O.computeFaces().computeNormals(),C=this.createBuffers("glyph",O)}// bind the shader buffers
var N=!0,A=!1,R=void 0;try{for(var L,I=this.retainedMode.buffers.text[Symbol.iterator]();!(N=(L=I.next()).done);N=!0)L.value._prepareBuffer(C,M)}catch(t){A=!0,R=t}finally{try{N||null==I.return||I.return()}finally{if(A)throw R}}this._bindBuffer(C.indexBuffer,S.ELEMENT_ARRAY_BUFFER),M.setUniform("uMaterialColor",this.curFillColor),S.pixelStorei(S.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1);try{var P=0,D=null,F=p.stringToGlyphs(r),U=!0,B=!1,G=void 0;// the x position in the line
try{for(var V,z=F[Symbol.iterator]();!(U=(V=z.next()).done);U=!0){var H=V.value;// kern
D&&(P+=p.getKerningValue(D,H));var W=d.getGlyphInfo(H);if(W.uGlyphRect){var q=W.rowInfo,X=W.colInfo;M.setUniform("uSamplerStrokes",W.strokeImageInfo.imageData),M.setUniform("uSamplerRowStrokes",q.cellImageInfo.imageData),M.setUniform("uSamplerRows",q.dimImageInfo.imageData),M.setUniform("uSamplerColStrokes",X.cellImageInfo.imageData),M.setUniform("uSamplerCols",X.dimImageInfo.imageData),M.setUniform("uGridOffset",W.uGridOffset),M.setUniform("uGlyphRect",W.uGlyphRect),M.setUniform("uGlyphOffset",P),M.bindTextures(),// draw it
S.drawElements(S.TRIANGLES,6,this.GL.UNSIGNED_SHORT,0)}P+=H.advanceWidth,D=H}}catch(t){B=!0,G=t}finally{try{U||null==z.return||z.return()}finally{if(B)throw G}}}finally{// clean up
M.unbindShader(),this._doStroke=c,this.drawMode=u,S.pixelStorei(S.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0),t.pop()}return t}// don't render lines beyond our maxY position
}},{"../core/constants":284,"../core/main":296,"./p5.RendererGL.Retained":350,"./p5.Shader":352,"core-js/modules/es.array.iterator":178,"core-js/modules/es.object.get-own-property-descriptor":194,"core-js/modules/es.object.to-string":198,"core-js/modules/es.regexp.exec":203,"core-js/modules/es.string.iterator":208,"core-js/modules/es.string.split":214,"core-js/modules/es.string.sub":216,"core-js/modules/es.symbol":220,"core-js/modules/es.symbol.description":218,"core-js/modules/es.symbol.iterator":219,"core-js/modules/es.weak-map":252,"core-js/modules/web.dom-collections.iterator":254}],355:[function(t,r,n){r.exports={fes:{autoplay:"The media that tried to play (with '{{src}}') wasn't allowed to by this browser, most likely due to the browser's autoplay policy.\n\n+ More info: {{url}}",checkUserDefinedFns:"It seems that you may have accidentally written {{name}} instead of {{actualName}}. Please correct it if it's not intentional.",fileLoadError:{bytes:"It looks like there was a problem loading your file. {{suggestion}}",font:"It looks like there was a problem loading your font. {{suggestion}}",gif:"There was some trouble loading your GIF. Make sure that your GIF is using 87a or 89a encoding.",image:"It looks like there was a problem loading your image. {{suggestion}}",json:"It looks like there was a problem loading your JSON file. {{suggestion}}",large:"If your large file isn't fetched successfully, we recommend splitting the file into smaller segments and fetching those.",strings:"It looks like there was a problem loading your text file. {{suggestion}}",suggestion:"Try checking if the file path ({{filePath}}) is correct, hosting the file online, or running a local server.\n\n+ More info: {{url}}",table:"It looks like there was a problem loading your table file. {{suggestion}}",xml:"It looks like there was a problem loading your XML file. {{suggestion}}"},friendlyParamError:{type_EMPTY_VAR:"{{location}} {{func}}() was expecting {{formatType}} for the {{position}} parameter, received an empty variable instead. If not intentional, this is often a problem with scope.\n\n+ More info: {{url}}",type_TOO_FEW_ARGUMENTS:"{{location}} {{func}}() was expecting at least {{minParams}} arguments, but received only {{argCount}}.",type_TOO_MANY_ARGUMENTS:"{{location}} {{func}}() was expecting no more than {{maxParams}} arguments, but received {{argCount}}.",type_WRONG_TYPE:"{{location}} {{func}}() was expecting {{formatType}} for the {{position}} parameter, received {{argType}} instead."},globalErrors:{reference:{cannotAccess:'\n{{location}} "{{symbol}}" is used before declaration. Make sure you have declared the variable before using it.\n\n+ More info: {{url}}',notDefined:'\n{{location}} "{{symbol}}" is not defined in the current scope. If you have defined it in your code, you should check its scope, spelling, and letter-casing (JavaScript is case-sensitive).\n\n+ More info: {{url}}'},stackSubseq:"└[{{location}}] \n	 Called from line {{line}} in {{func}}()\n",stackTop:"┌[{{location}}] \n	 Error at line {{line}} in {{func}}()\n",syntax:{badReturnOrYield:"\nSyntax Error - return lies outside of a function. Make sure you’re not missing any brackets, so that return lies inside a function.\n\n+ More info: {{url}}",invalidToken:"\nSyntax Error - Found a symbol that JavaScript doesn't recognize or didn't expect at it's place.\n\n+ More info: {{url}}",missingInitializer:"\nSyntax Error - A const variable is declared but not initialized. In JavaScript, an initializer for a const is required. A value must be specified in the same statement in which the variable is declared. Check the line number in the error and assign the const variable a value.\n\n+ More info: {{url}}",redeclaredVariable:'\nSyntax Error - "{{symbol}}" is being redeclared. JavaScript doesn\'t allow declaring a variable more than once. Check the line number in error for redeclaration of the variable.\n\n+ More info: {{url}}',unexpectedToken:"\nSyntax Error - Symbol present at a place that wasn't expected.\nUsually this is due to a typo. Check the line number in the error for anything missing/extra.\n\n+ More info: {{url}}"},type:{constAssign:"\n{{location}} A const variable is being re-assigned. In javascript, re-assigning a value to a constant is not allowed. If you want to re-assign new values to a variable, make sure it is declared as var or let.\n\n+ More info: {{url}}",notfunc:'\n{{location}} "{{symbol}}" could not be called as a function.\nCheck the spelling, letter-casing (JavaScript is case-sensitive) and its type.\n\n+ More info: {{url}}',notfuncObj:'\n{{location}} "{{symbol}}" could not be called as a function.\nVerify whether "{{obj}}" has "{{symbol}}" in it and check the spelling, letter-casing (JavaScript is case-sensitive) and its type.\n\n+ More info: {{url}}',readFromNull:"\n{{location}} The property of null can't be read. In javascript the value null indicates that an object has no value.\n\n+ More info: {{url}}",readFromUndefined:"\n{{location}} Cannot read property of undefined. Check the line number in error and make sure the variable which is being operated is not undefined.\n\n + More info: {{url}}"}},libraryError:'{{location}} An error with message "{{error}}" occurred inside the p5js library when {{func}} was called. If not stated otherwise, it might be an issue with the arguments passed to {{func}}.',location:"[{{file}}, line {{line}}]",misspelling:'{{location}} It seems that you may have accidentally written "{{name}}" instead of "{{actualName}}". Please correct it to {{actualName}} if you wish to use the {{type}} from p5.js.',misspelling_plural:'{{location}} It seems that you may have accidentally written "{{name}}".\nYou may have meant one of the following: \n{{suggestions}}',misusedTopLevel:"Did you just try to use p5.js's {{symbolName}} {{symbolType}}? If so, you may want to move it into your sketch's setup() function.\n\n+ More info: {{url}}",positions:{p_1:"first",p_10:"tenth",p_11:"eleventh",p_12:"twelfth",p_2:"second",p_3:"third",p_4:"fourth",p_5:"fifth",p_6:"sixth",p_7:"seventh",p_8:"eighth",p_9:"ninth"},pre:"\n\uD83C\uDF38 p5.js says: {{message}}",sketchReaderErrors:{reservedConst:'you have used a p5.js reserved variable "{{symbol}}" make sure you change the variable name to something else.\n\n+ More info: {{url}}',reservedFunc:'you have used a p5.js reserved function "{{symbol}}" make sure you change the function name to something else.\n\n+ More info: {{url}}'},welcome:"Welcome! This is your friendly debugger. To turn me off, switch to using p5.min.js.",wrongPreload:'{{location}} An error with message "{{error}}" occurred inside the p5js library when "{{func}}" was called. If not stated otherwise, it might be due to "{{func}}" being called from preload. Nothing besides load calls (loadImage, loadJSON, loadFont, loadStrings, etc.) should be inside the preload function.'}}},{}],356:[function(t,r,n){Object.defineProperty(n,"__esModule",{value:!0}),n.languages=n.default=void 0;// will be hosted online and then downloaded whenever needed
/**
 * Here, we define a default/fallback language which we can use without internet.
 * You won't have to change this when adding a new language.
 *
 * `translation` is the namespace we are using for our initial set of strings
 */var o={en:{translation:function(t){return t&&t.__esModule?t:{default:t}}// Only one language is imported above. This is intentional as other languages
(t("./en/translation")).default}};/**
 * This is a list of languages that we have added so far.
 * If you have just added a new language (yay!), add its key to the list below
 * (`en` is english, `es` es español). Also add its export to
 * dev.js, which is another file in this folder.
 */n.default=o;var a=["en","es","ko","zh"];n.languages=a},{"./en/translation":355}]},{},[279])(279)});//# sourceMappingURL=index.c516dc5e.js.map

//# sourceMappingURL=index.c516dc5e.js.map
